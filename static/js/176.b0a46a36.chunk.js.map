{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/Headline.tsx","atoms/CanQuery.tsx","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/HorizontalSeparator.tsx","atoms/SelectControlFlat.tsx","atoms/FlexColumn.tsx","hooks/useAutorunWhenSingleBranch.ts","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/Price.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","segments/order/hooks/useOrderListModel.ts","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","hooks/useExecutableQuery.ts","segments/order/molecules/NoteLine.tsx","segments/order/atoms/OrderStarIndicator.tsx","segments/order/molecules/OrderTicker.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","atoms/DeliveryMinutes.tsx","segments/order/hooks/useOrderModel.ts","molecules/DeliveryTimeDialog.tsx","atoms/RelativeLink.tsx","../node_modules/resolve-pathname/esm/resolve-pathname.js","atoms/FormInputDateTime.tsx","atoms/FlexAutoHeight.tsx","atoms/FlexRow.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderWarePriceLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderIdLine.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/atoms/OrderTimeLabel.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareLine.tsx","segments/order/molecules/OrderWareList.tsx","molecules/HamburgerMenu.tsx","molecules/ConfirmButton.tsx","segments/order/molecules/OrderCancelButton.tsx","segments/order/molecules/OrderDeliveryToPickup.tsx","segments/order/molecules/OrderStarButton.tsx","segments/order/molecules/OrderStateButton.tsx","hooks/useAccessGuard.ts","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/atoms/OrderBox.tsx","atoms/InputDate.tsx","atoms/FormInputDate.tsx","segments/overview/molecules/ClosureHistoryFilter.tsx","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/pages/ClosureHistoryPage.tsx","atoms/MonospaceOutput.tsx","segments/overview/molecules/ClosureStatisticsContent.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/pages/ClosurePage.tsx","segments/overview/hooks/useStatsFilter.tsx","segments/overview/molecules/DailyStatisticsContent.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/molecules/StatisticsFilter.tsx","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/molecules/OrdersStatisticsList.tsx","segments/overview/molecules/OrdersStatisticsSummary.tsx","segments/overview/molecules/StatisticsDriversFilter.tsx","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/routes/OverviewRoutes.tsx"],"names":["IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","Headline","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","CanQuery","queryName","canQuery","NoAccess","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","PageLayoutFullHeightItem","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_3__","id","FlexRowSingle","_ref$justify","justify","HorizontalSeparatorStyled","HorizontalSeparator","_ref$visible","visible","StyledSelectControlFlat","textColor","SelectControlFlat","items","_props$formatItem","formatItem","RM","prop","_props$isMulti","isMulti","_props$isClearable","isClearable","_props$isInvalid","isInvalid","selectedItem","selectedItems","onSingleSelection","onMultiSelection","hasSingleItem","isItemSelected","item","Array","isArray","contains","equals","updateSelection","without","react__WEBPACK_IMPORTED_MODULE_3___default","className","cn","invalid","interactive","active","onClick","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","map","idx","formatted","key","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","useAutorunWhenSingleBranch","mobx__WEBPACK_IMPORTED_MODULE_0__","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","onSingleBranch","useEffect","autorun","isReady","hasSingleBranch","branches","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","_ref$hideWhenSingleBr","hideWhenSingleBranch","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","isSelected","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","Price","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","formatPrice","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","react","value","placeholder","i18n","_","ButtonHeight","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","FormSubmit","react_form__WEBPACK_IMPORTED_MODULE_2__","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","isEmpty","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","utils","MomentUtils","useOrderListModel","_useOrderModel__WEBPACK_IMPORTED_MODULE_0__","useOrderModel","list","cancelIconPadding","css","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","red","orange","_templateObject5","bigNumberStyle","_templateObject6","dashStyle","_templateObject7","clickable","_templateObject8","TimeBadge","Variant","output","extraClassNames","push","toString","cx","apply","heartBeat","pulse","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","useExecutableQuery","query","client","useApolloClient","onError","useApolloDefender","result","useObservable","loading","error","wasExecuted","hasAnyError","Boolean","useReaction","makeError","err","variables","ApolloOperationError","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","execute","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","queryResult","wrap","_context","prev","next","sent","runInAction","ApolloError","graphQLErrors","t0","abrupt","stop","_x","this","reset","CurrentNoteStyled","span","PreviousNoteStyled","NoteLine","note","previousNote","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_3__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_4__","_i18n__WEBPACK_IMPORTED_MODULE_5__","StyledOrderStarIndicator","OrderStarIndicator","Icon","OrderTickerStyled","Element","OrderTicker_templateObject","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","_templateObject9","Radiuses","Card","ToPickupLabel","_templateObject10","violet","OrderTicker","order","showBranch","companyBranch","Date","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","formatAddress","address","isPriority","OrderStarIndicator_OrderStarIndicator","totalSum","formattedValue","isPaidWithCard","./cs.svg","./de.svg","./en.svg","./pl.svg","./sk.svg","webpackContext","req","webpackContextResolve","Error","code","resolve","module","exports","./logo-doveze.svg","./logo-gopay.svg","./logo-mastercard.svg","./logo-visa.svg","deliveryMinutes","pickupMinutes","MinutesContainer","MinutesItem","DeliveryMinutes","onMinuteClick","initialMinutes","_React$useState","useState","_React$useState2","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setSelected","getMinutesForDeliveryType","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_5__","yellow","type","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_0__","DeliveryTimeDialog","onConfirm","onCancel","cancelText","refApi","_useState","_useState2","isOpen","setOpen","openDialog","closeDialog","current","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","open","onClose","_atoms_DeliveryMinutes__WEBPACK_IMPORTED_MODULE_4__","_TouchButton__WEBPACK_IMPORTED_MODULE_5__","RelativeLink","from","linkProps","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","isAbsolute","charAt","spliceOne","index","i","k","pop","hasTrailingSlash","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","last","up","part","unshift","join","FormInputDateTime","field","_ref$inline","inline","pickerProps","Picker","InlineDateTimePicker","DateTimePicker","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_6__","react_form__WEBPACK_IMPORTED_MODULE_4__","render","fieldApi","setValue","onOpen","setTouched","format","ampm","showTabs","maxDateMessage","minDateMessage","AutoHeight","FlexRow","ContactLines","phones","emails","renderContact","contact","description","isMail","href","replace","renderClickableLink","email","OrderCountLine","total","_lingui_react","values","OrderWareLineWrap","NameContainerStyled","OrderWarePriceLine","_ref$highlight","highlight","StyledOrderDetailTotals","OrderDetailTotals_templateObject","OrderDetailTotals","totals","OrderWarePriceLine_OrderWarePriceLine","tip","transportFee","coverPrice","totalDiscount","OrderOriginLabel","OrderIdLine_templateObject","orderOrigin","OrderOriginEnum","DameJidlo","OrderIdLine","displayedId","OrderRuleLines","rules","OrderTimeLabel","OrderTimeLabel_templateObject","DelayedDeliveryTimeLabel","OrderStats_templateObject","DelayedOrderTimeLabel","OrderStats_templateObject2","OrderStats","stats","formatTimeWithoutTodayDate","driver","_order$driver$user","Timelapse","labelMap","_labelMap","defineProperty","OrderStateCategoryEnum","NewOrders","i18nMark","Preparing","ReadyToDeliver","OnWay","Finished","OrderTimeLine","orderTiming","reject","createdAt","orderStateCategory","timing","OrderWareLine_templateObject","CodeContainerStyled","OrderWareLine_templateObject2","OrderWareLine_templateObject3","OrderWareLine","OrderWareLine_OrderWareLineWrap","OrderWareLine_NameContainerStyled","OrderWareLine_PriceContainerStyled","OrderWareList","orderWares","orderWare","OrderWareLine_OrderWareLine","recipe","nameLabel","sidedishes","sidedish","StyledHamburgerMenu","HamburgerMenu_templateObject","PopupMenu","HamburgerMenu_templateObject2","Small","Middle","HamburgerMenu","slicedToArray","isOpened","setIsOpened","Children","count","SizerButton","TouchButton","ConfirmButton","confirmNode","_ref$initialColor","initialColor","_ref$confirmColor","confirmColor","_ref$confirmDisableMs","confirmDisableMs","_ref$resetToInitialMs","resetToInitialMs","SECOND","needConfirm","setNeedConfirm","buttonRef","useRef","timer","setTimeout","clearTimeout","OrderCancelButton","orderId","_useMCancelOrder","useMCancelOrder","cancelOrder","Sizer","ConfirmButton_ConfirmButton","OrderDeliveryToPickup","isDelivery","_useMOrderChangeToPic","useMOrderChangeToPickup","changeToPickup","OrderStarButton","_useMSetPriorityOrder","useMSetPriorityOrder","setPriorityOrder","iconColor","stateLabels","_stateLabels","OrderStateEnum","Accepted","OrderStateButton","nextState","_useMOrderState","useMOrderState","updateOrderState","text","useAccessGuard","queries","mutations","every","DriverName","OrderDriverSelect_templateObject","backgroundColor","background","height","borderWidth","borderRadius","Button","singleValue","fontSize","OrderDriverSelect","drivers","selectedDriver","isLoading","onSelect","onClear","onReload","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","react_select_esm","DropdownIndicator","OrderStateDeliver","branchId","canRead","_len","_key","useCanQuery","deliverOrder","_useMSelectOrderDrive","useMSelectOrderDriver","selectDriver","_useMRemoveOrderDrive","useMRemoveOrderDriver","removeDriver","_useQOrderDrivers","useQOrderDrivers","skip","refetch","OrderDriverSelect_OrderDriverSelect","orderDriver","orderDriverId","driverId","OrderStateFlowContainerWrapper","OrderStateFlowContainer_templateObject","Control","OrderStateFlowContainer_templateObject2","OrderStateFlowContainer","child","OrderStateTimeNotification","_useMOrderTimeNotific","useMOrderTimeNotification","sendTimeNotification","Messenger","HamburgerMenuAtLeft","HamburgerMenu_HamburgerMenu","OrderStateNewOrder","OrderStateFlowContainer_OrderStateFlowContainer","OrderStateFlow_HamburgerMenuAtLeft","canCancel","OrderCancelButton_OrderCancelButton","OrderDeliveryToPickup_OrderDeliveryToPickup","OrderStateTimeNotification_OrderStateTimeNotification","OrderStateButton_OrderStateButton","OrderStateAcceptedOrder","OrderStarButton_OrderStarButton","canDeliver","OrderStateDeliver_OrderStateDeliver","OrderStateReadyToDeliverOrder","OrderStateOnWayOrder","OrderStateFinishedOrder","OrderStateFlow","_useQOrderState","useQOrderState","allowedCategories","isCancelable","stateProps","OrderStateFlow_OrderStateNewOrder","OrderStateFlow_OrderStateAcceptedOrder","OrderStateFlow_OrderStateReadyToDeliverOrder","OrderStateFlow_OrderStateOnWayOrder","OrderStateFlow_OrderStateFinishedOrder","StyledOrderDetail","OrderDetail_templateObject","OrderDetail","memo","_useQOrderDetail","useQOrderDetail","Loading","OrderWareList_OrderWareList","OrderDetailTotals_OrderDetailTotals","OrderRuleLines_OrderRuleLines","allAppliedRules","OrderCountLine_OrderCountLine","customerOrdersCountCurrent","customerOrdersCountTotal","ContactLines_ContactLines","OrderIdLine_OrderIdLine","OrderTimeLine_OrderTimeLine","OrderStats_OrderStats","OrderStateFlow_OrderStateFlow","OrderBoxStyled","OrderBox_templateObject","OrderBox","observer","onToggleDetail","orderListModel","useCallback","toggleOrderDetail","isDetailOpen","isOrderDetailOpen","InputDate","material_ui_pickers_esm","core","FormInputDate","es","InputDate_InputDate","ClosureHistoryFilter","autoOk","context","createContext","ClosureHistoryLoader","statistics","_useExecutableQuery","QClosureHistoryDocument","onSubmit","formValues","closureBranch","dateFrom","formatDateISO","dateTo","defaultValues","subDays","Provider","ClosureHistoryTable","_useClosureHistory","useContext","history","report","reportSequence","reportDatetime","ClosureCurrentButton","react_router_dom","ButtonToRight","ClosureStatisticsFilter","showCurrent","setClosureBranch","ClosureCurrentButton_ClosureCurrentButton","ClosureHistoryPage","ClosureHistoryLoader_ClosureHistoryLoader","FullPageLayout","pageTitle","useBackButton","backRoute","ClosureHistoryFilter_ClosureHistoryFilter","MonospaceOutputStyled","p","MonospaceOutput_templateObject","MonospaceOutput","RegExp","ClosureStatisticsContent","_ref$reportId","reportId","_useQClosureReport","useQClosureReport","showReport","MonospaceOutput_MonospaceOutput","plainData","lastReport","ClosureHistoryButton","ClosureSubmitButton","ClosureStatisticsControl_templateObject","ClosureStatisticsControl","enqueueSuccess","useSnackBar","useRouterContext","_useMFinancialReportC","useMFinancialReportCreate","createClosure","asyncToGenerator","regenerator_default","ClosureSubmitButton_ClosureSubmitButton","ClosureStatisticsControl_ButtonToRight","ClosureHistoryButton_ClosureHistoryButton","ClosurePage","match","ClosureStatisticsControl_ClosureStatisticsControl","params","useStatsFilterCurrent","useStatsFilter","setFilter","executeFilter","toConsumableArray","branchesFilter","dateTimeFrom","isoDate","dateTimeTo","renderForm","updateFilter","useStatsFilter_context","StatsDisplay","plain","DailyStatisticsContent","_useQStatsDaily","useQStatsDaily","DailyStatisticsContent_StatsDisplay","daily","category","delivery","StatisticsBranchFilter","setBranchFilter","clearBranchFilter","StatisticsFilter","0","DailyStatisticsLoader","DailyStatisticsPage","DailyStatisticsLoader_DailyStatisticsLoader","StatisticsBranchFilter_StatisticsBranchFilter","StatisticsFilter_StatisticsFilter","DailyStatisticsContent_DailyStatisticsContent","OrdersStatisticsList","orders","Map","loaderRef","measureCache","useMemo","CellMeasurerCache","defaultHeight","minHeight","_useQStatsOrdersCount","useQStatsOrdersCounts","countsData","countsLoading","clear","clearAll","resetLoadMoreRowsCache","JSON","stringify","executeList","QStatsOrdersListDocument","queryMoreOrders","startIndex","stopIndex","pagination","fromIndex","toIndex","shift","set","isRowLoaded","get","rowRenderer","_ref4","parent","dist_es","columnIndex","rowIndex","cache","_ref5","measure","Cancel","_countsData$stats$cou","counts","totalCount","finished","cancelled","_ref6","rowCount","loadMoreRows","_ref7","onRowsRendered","registerChild","rowHeight","deferredMeasurementCache","StatPanel","OrdersStatisticsSummary_templateObject","StatLabel","h1","StatValue","OrdersStatisticsSummary","_useQStatsOrders","useQStatsOrders","finishedOrders","currency","onlinePayments","finishedCount","cancelledCount","fees","orderStatisticsPlain","StatisticsDriversFilter","_useQAllDrivers","useQAllDrivers","setDriversFilter","intersection","option","formatFullName","OrdersStatisticsLoader","autoFilter","_useStatsFilter","OrdersStatisticsPage","setTodayOrdersFilter","OrdersStatisticsLoader_OrdersStatisticsLoader","FlexAutoHeight","OrdersStatisticsList_OrdersStatisticsList","PageLayout","layouts","x","y","w","h","showSoundControl","scrollPageTitle","ClosureButton","DailyStatisticsButton","OrdersStatisticsButton","OverviewPage","OverviewRoutes_OverviewRoutes","OverviewRoutes","PageTitle","react_router","SecureRoute","exact","path","NotFoundPage"],"mappings":"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","file":"static/js/176.b0a46a36.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import { Trans } from '@lingui/macro'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  formatItem?: (item: ItemType) => string | ReactNode\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\nconst StyledSelectControlFlat = styled.div`\n  ${(props: { textColor?: string }) => ``}\n\n  color: ${({ textColor }) => (textColor ? textColor : 'inherit')};\n\n  &.interactive {\n    cursor: pointer;\n  }\n\n  &.invalid {\n    border: 1px red solid;\n  }\n\n  > div {\n    margin: 0.5rem 0.6rem;\n    display: inline-block;\n  }\n\n  > div.active {\n    font-weight: bolder;\n    text-decoration: underline;\n  }\n`\n\nexport const SelectControlFlat = <ItemType extends any>(\n  props: ISelectControlFlatProps<ItemType>,\n) => {\n  const {\n    items,\n    formatItem = RM.prop('displayName'),\n    isMulti = false,\n    isClearable = false,\n    isInvalid = false,\n    selectedItem,\n    selectedItems,\n    onSingleSelection,\n    onMultiSelection,\n    textColor,\n  } = props\n\n  const hasSingleItem = items.length === 1\n\n  const hasSelection = () => {\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n\n  const isItemSelected = (item: ItemType) => {\n    if (items.length === 1) {\n      // with one item there no selection happening\n      return false\n    }\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n\n  const updateSelection = (item: Maybe<ItemType>) => {\n    if (hasSingleItem) {\n      return\n    }\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  return (\n    <StyledSelectControlFlat\n      className={cn({\n        invalid: isInvalid,\n        interactive: !hasSingleItem,\n      })}\n      textColor={textColor}\n    >\n      {isClearable && (\n        <div\n          className={cn({ active: !hasSelection() })}\n          onClick={() => {\n            updateSelection(null)\n          }}\n        >\n          <Trans id=\"optionselector.clear-filter\">All</Trans>\n        </div>\n      )}\n      {items.map((item, idx) => {\n        // @ts-ignore Have to use any in generics due to parsing error\n        const formatted = formatItem(item)\n        return (\n          <div\n            key={idx}\n            className={cn({ active: isItemSelected(item) })}\n            onClick={() => {\n              updateSelection(item)\n            }}\n          >\n            {formatted}\n          </div>\n        )\n      })}\n    </StyledSelectControlFlat>\n  )\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { autorun } from 'mobx'\nimport React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\nexport function useAutorunWhenSingleBranch(\n  onSingleBranch: (branch: FCompanyBranchFragment) => void,\n) {\n  const { user } = useRoot()\n  React.useEffect(() =>\n    autorun(() => {\n      if (user.isReady && user.hasSingleBranch) {\n        onSingleBranch(user.branches[0])\n      }\n    }),\n  )\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  hideWhenSingleBranch?: boolean\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  hideWhenSingleBranch = false,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n\n  const isSelected = branch => selectedBranches.includes(branch.id)\n\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n\n  if (user.hasSingleBranch && hideWhenSingleBranch) {\n    return null\n  }\n\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { useOrderModel } from './useOrderModel'\n\nexport function useOrderListModel() {\n  const { list } = useOrderModel()\n  return list\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames = ['animated']\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant\n      key={minutes}\n      onClick={onClick}\n      className={cx(\n        className,\n        {\n          heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n          pulse: variant === ETimeBadgeVariant.WARNING,\n        },\n        ...extraClassNames,\n      )}\n    >\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import {\n  ApolloOperationError,\n  useApolloClient,\n  useApolloDefender,\n} from '@speedlo/graphql'\nimport { useReaction } from '@speedlo/hooks'\nimport { ApolloError, QueryOptions } from 'apollo-client'\nimport { DocumentNode } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  error?: ApolloError\n  hasAnyError: boolean\n  wasExecuted: boolean\n}\n\nexport function useExecutableQuery<TData, TVariables>(\n  query: DocumentNode,\n  options: Partial<QueryOptions<TVariables>> = {},\n) {\n  const client = useApolloClient()\n  const { onError } = useApolloDefender()\n  const result: IQueryResult<TData> = useObservable({\n    data: null,\n    loading: false,\n    error: undefined,\n    wasExecuted: false,\n    get hasAnyError() {\n      return Boolean(result.error)\n    },\n  })\n  useReaction(\n    () => result.error,\n    error => {\n      if (error) {\n        onError(error)\n      }\n    },\n  )\n  const makeError = (err: ApolloError, variables: TVariables) => {\n    return new ApolloOperationError(err, query, { ...options, variables })\n  }\n  const execute = async (variables: TVariables) => {\n    result.loading = true\n    try {\n      const queryResult = await client.query<TData, TVariables>({\n        ...options,\n        query,\n        variables,\n      })\n      runInAction(() => {\n        result.wasExecuted = true\n        result.data = queryResult.data\n        result.loading = false\n        if (queryResult.errors && queryResult.errors.length > 0) {\n          result.error = makeError(\n            new ApolloError({ graphQLErrors: queryResult.errors }),\n            variables,\n          )\n        }\n      })\n    } catch (err) {\n      runInAction(() => {\n        result.error = makeError(err, variables)\n        result.loading = false\n      })\n    }\n    return result\n  }\n  const reset = () => {\n    runInAction(() => {\n      result.wasExecuted = false\n      result.data = null\n      result.error = undefined\n      result.loading = false\n    })\n  }\n  return { result, execute, reset }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nconst StyledOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 3.8rem;\n  top: 0;\n`\n\nexport const OrderStarIndicator: React.FC<IProps> = props => {\n  return (\n    <StyledOrderStarIndicator>\n      <Icon iconName=\"star\" color={Colors.orange} />\n    </StyledOrderStarIndicator>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport {\n  DeliveryTypeEnum,\n  FOrderTickerFragment,\n} from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\nimport { OrderStarIndicator } from '../atoms/OrderStarIndicator'\n\ninterface IOrderTickerProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onClick(): void\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  isCancelled,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={isCancelled}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          {order.isPriority && <OrderStarIndicator />}\n          {order.totalSum.formattedValue}\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","var map = {\n\t\"./cs.svg\": 6895,\n\t\"./de.svg\": 6896,\n\t\"./en.svg\": 6897,\n\t\"./pl.svg\": 6898,\n\t\"./sk.svg\": 6899\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6894;","var map = {\n\t\"./logo-doveze.svg\": 6901,\n\t\"./logo-gopay.svg\": 6902,\n\t\"./logo-mastercard.svg\": 6903,\n\t\"./logo-visa.svg\": 6904\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6900;","import React from 'react'\nimport styled from 'styled-components'\n\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  initialMinutes?: number\n  deliveryType: DeliveryTypeEnum\n  onMinuteClick(minute: number): void\n}\n\nconst deliveryMinutes = [20, 30, 45, 60, 75, 90, 105, 120]\nconst pickupMinutes = [10, 20, 30, 45, 60, 75, 90]\n\nconst MinutesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst MinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport const DeliveryMinutes: React.FC<IProps> = ({\n  deliveryType,\n  onMinuteClick,\n  initialMinutes,\n}) => {\n  const [selected, setSelected] = React.useState(initialMinutes)\n  const options = getMinutesForDeliveryType(deliveryType)\n  return (\n    <MinutesContainer>\n      {options.map(minutes => (\n        <MinutesItem key={minutes}>\n          <TouchButton\n            onClick={() => {\n              setSelected(minutes)\n              onMinuteClick(minutes)\n            }}\n            color={selected === minutes ? Colors.yellow : Colors.green}\n          >\n            {minutes}\n          </TouchButton>\n        </MinutesItem>\n      ))}\n    </MinutesContainer>\n  )\n}\n\nexport function getMinutesForDeliveryType(type: DeliveryTypeEnum) {\n  return type === DeliveryTypeEnum.Pickup ? pickupMinutes : deliveryMinutes\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useOrderModel() {\n  const { order } = useRoot()\n  return order\n}\n","import { Trans } from '@lingui/macro'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport React, { MutableRefObject, useState } from 'react'\n\nimport { DeliveryMinutes } from '../atoms/DeliveryMinutes'\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  title: string\n  deliveryType: DeliveryTypeEnum\n  cancelText?: string\n  onConfirm(minutes: number): void\n  onCancel?(): void\n  refApi?: MutableRefObject<Maybe<IDeliveryTimeDialogApi>>\n  children?(props: IDeliveryTimeDialogApi): React.ReactElement<{}>\n}\n\nexport interface IDeliveryTimeDialogApi {\n  openDialog(): void\n  closeDialog(): void\n}\n\nexport const DeliveryTimeDialog: React.FC<IProps> = ({\n  title,\n  deliveryType,\n  onConfirm,\n  onCancel,\n  children,\n  cancelText,\n  refApi,\n}) => {\n  const [isOpen, setOpen] = useState(false)\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  if (refApi) {\n    refApi.current = { openDialog, closeDialog }\n  }\n\n  return (\n    <>\n      {children && children({ openDialog, closeDialog })}\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DeliveryMinutes\n            deliveryType={deliveryType}\n            onMinuteClick={minutes => {\n              closeDialog()\n              onConfirm(minutes)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <TouchButton\n            onClick={() => {\n              closeDialog()\n              if (onCancel) {\n                onCancel()\n              }\n            }}\n          >\n            {cancelText ? cancelText : <Trans>Cancel</Trans>}\n          </TouchButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","import {\n  DateTimePicker,\n  DateTimePickerProps,\n  InlineDateTimePicker,\n} from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DateTimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n  inline?: boolean\n}\n\nexport const FormInputDateTime: React.FC<IProps> = ({\n  field,\n  inline = true,\n  ...pickerProps\n}) => {\n  const Picker = inline ? InlineDateTimePicker : DateTimePicker\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi =>\n          React.createElement(Picker, {\n            value: fieldApi.value,\n            onChange: value => fieldApi.setValue(value),\n            onOpen: () => fieldApi.setTouched(true),\n            format: 'lll',\n            ampm: false,\n            showTabs: false,\n            maxDateMessage: i18n.t`Date is too much in the future`,\n            minDateMessage: i18n.t`Date is too much in the past`,\n            ...pickerProps,\n          })\n        }\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nexport const AutoHeight = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { FEmailFragment, FPhoneFragment } from '../../../graph/generated'\n\ninterface IContactLinesProps {\n  phones: ReadonlyArray<FPhoneFragment>\n  emails: ReadonlyArray<FEmailFragment>\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (FPhoneFragment | FEmailFragment)\n\nexport const ContactLines: React.FC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import { Plural, SelectOrdinal, Trans } from '@lingui/react'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.FC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  label: string\n  price: number\n  highlight?: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\n\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWarePriceLine: React.FC<IProps> = ({\n  label,\n  price,\n  highlight = false,\n}) => (\n  <OrderWareLineWrap>\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      {highlight ? (\n        <b>\n          <Price price={price} />\n        </b>\n      ) : (\n        <Price price={price} />\n      )}\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FOrderTotalsFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { OrderWarePriceLine } from './OrderWarePriceLine'\n\ninterface IProps {\n  totals: FOrderTotalsFragment\n}\n\nconst StyledOrderDetailTotals = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.FC<IProps> = ({ totals }) => (\n  <StyledOrderDetailTotals>\n    <OrderWarePriceLine label={i18n.t`Tips`} price={totals.tip.value} />\n    <OrderWarePriceLine\n      label={i18n.t`Transport fee`}\n      price={totals.transportFee.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Covers price`}\n      price={totals.coverPrice.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Discount total`}\n      price={totals.totalDiscount.value * -1}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Total price`}\n      price={totals.totalSum.value}\n      highlight={true}\n    />\n  </StyledOrderDetailTotals>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  OrderOriginEnum,\n  QOrderDetailOrderOrigin,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  displayedId: string\n  orderOrigin: QOrderDetailOrderOrigin\n}\n\nconst orderColorAccordingOrigin = ({ orderOrigin }: IProps) => {\n  switch (orderOrigin.enum) {\n    case OrderOriginEnum.DameJidlo:\n      return Colors.orange\n    default:\n      return Colors.greyLight\n  }\n}\n\nconst OrderOriginLabel = styled.div`\n  display: inline-block;\n  background: ${orderColorAccordingOrigin};\n  border-radius: 0.7rem;\n  margin: 0 0 0 1rem;\n  padding: 0.1rem 0.8rem;\n`\n\nexport const OrderIdLine: React.FC<IProps> = ({ displayedId, orderOrigin }) => (\n  <IconLine icon=\"format_list_numbered\" labelMargin=\"0\">\n    {displayedId}\n    <OrderOriginLabel orderOrigin={orderOrigin} displayedId={displayedId}>\n      {orderOrigin.code}\n    </OrderOriginLabel>\n  </IconLine>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: ReadonlyArray<string>\n}\n\nexport const OrderRuleLines: React.FC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import styled from 'styled-components'\n\nimport { Colors } from '../../../styling'\n\nexport const OrderTimeLabel = styled.div`\n  margin-left: 1rem;\n  display: inline-block;\n  color: ${Colors.greyMiddle};\n`\n","import { Trans } from '@lingui/macro'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { QOrderDetailOrder } from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  order: QOrderDetailOrder\n}\n\nconst DelayedDeliveryTimeLabel = styled.span`\n  font-weight: bold;\n  color: ${Colors.orange};\n`\n\nconst DelayedOrderTimeLabel = styled(OrderTimeLabel)`\n  color: ${Colors.orange};\n`\n\nexport const OrderStats: React.FC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.delayedDeliveryTime) {\n    stats.push(\n      <div key=\"delayedDeliveryTime\">\n        <DelayedDeliveryTimeLabel>\n          {formatTimeWithoutTodayDate(order.delayedDeliveryTime)}\n        </DelayedDeliveryTimeLabel>\n        <DelayedOrderTimeLabel>\n          <Trans>Deliver at time</Trans>\n        </DelayedOrderTimeLabel>\n      </div>,\n    )\n  } else if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <OrderTimeLabel>\n          <Trans>Deliver on time</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <OrderTimeLabel>\n          <Trans>Driver</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  FOrderTimingOrderTiming,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  orderTiming: ReadonlyArray<FOrderTimingOrderTiming>\n}\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NewOrders]: i18nMark('Created'),\n  [OrderStateCategoryEnum.Preparing]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.OnWay]: i18nMark('On way'),\n  [OrderStateCategoryEnum.Finished]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.FC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <OrderTimeLabel>\n          {i18n._(labelMap[timing.orderStateCategory])}\n        </OrderTimeLabel>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.black};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.FC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React, { Fragment } from 'react'\n\nimport { QOrderDetailItems } from '../../../graph/generated'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: ReadonlyArray<QOrderDetailItems>\n}\n\nexport const OrderWareList: React.FC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: QOrderDetailItems) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors, Radiuses, Spacing } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {}\n\nconst StyledHamburgerMenu = styled.div`\n  position: relative;\n`\n\nconst PopupMenu = styled.div`\n  position: absolute;\n  bottom: 4rem;\n  left: 0;\n  background: ${Colors.white};\n  padding: ${Spacing.Small};\n  border: solid 1px ${Colors.greyLight};\n  border-radius: ${Radiuses.Card};\n  box-shadow: 2px 6px 21px -2px rgba(0, 0, 0, 0.75);\n  & div:not(:last-child) {\n    margin-bottom: ${Spacing.Middle};\n  }\n`\n\nexport const HamburgerMenu: React.FC<IProps> = ({ children }) => {\n  const [isOpened, setIsOpened] = React.useState(false)\n  return React.Children.count(children) ? (\n    <StyledHamburgerMenu>\n      <SizerButton>\n        <TouchButton\n          iconName=\"menu\"\n          disabled={children === null}\n          onClick={() => setIsOpened(!isOpened)}\n        />\n      </SizerButton>\n      {isOpened && <PopupMenu>{children}</PopupMenu>}\n    </StyledHamburgerMenu>\n  ) : null\n}\n","import { SECOND } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { Colors } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  confirmNode: ReactNode | string\n  initialColor?: Colors\n  confirmColor?: Colors\n  confirmDisableMs?: number\n  resetToInitialMs?: number\n  onConfirm(): void\n}\n\nexport const ConfirmButton: React.FC<IProps> = ({\n  confirmNode,\n  initialColor = Colors.greyMiddle,\n  confirmColor = Colors.red,\n  confirmDisableMs = 300,\n  resetToInitialMs = 3 * SECOND,\n  children,\n  onConfirm,\n}) => {\n  const [needConfirm, setNeedConfirm] = React.useState(false)\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const onClick = () => {\n    if (needConfirm === false) {\n      buttonRef.current!.disabled = true\n      setNeedConfirm(true)\n      setTimeout(() => {\n        if (buttonRef.current) {\n          buttonRef.current.disabled = false\n        }\n      }, confirmDisableMs)\n    } else {\n      onConfirm()\n    }\n  }\n\n  React.useEffect(\n    () => {\n      if (needConfirm) {\n        const timer = setTimeout(() => {\n          setNeedConfirm(false)\n        }, resetToInitialMs)\n        return () => {\n          clearTimeout(timer)\n        }\n      }\n      return undefined\n    },\n    [resetToInitialMs, needConfirm],\n  )\n\n  return (\n    <TouchButton\n      ref={buttonRef}\n      onClick={onClick}\n      color={needConfirm ? confirmColor : initialColor}\n    >\n      {needConfirm ? confirmNode : children}\n    </TouchButton>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Sizer } from '../../../atoms/Sizer'\nimport { useMCancelOrder } from '../../../graph/generated'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderCancelButton: React.FC<IProps> = ({ orderId }) => {\n  const [cancelOrder] = useMCancelOrder()\n\n  return (\n    <Sizer width={7.375}>\n      <ConfirmButton\n        confirmNode={<Trans>Really cancel?</Trans>}\n        onConfirm={() => {\n          cancelOrder({ orderId })\n        }}\n      >\n        <Trans>Cancel order</Trans>\n      </ConfirmButton>\n    </Sizer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { useMOrderChangeToPickup } from '../../../graph/generated'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderDeliveryToPickup: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [changeToPickup] = useMOrderChangeToPickup()\n  if (!isDelivery) {\n    return null\n  }\n  return (\n    <CanMutate mutationName=\"updateOrderDeliveryToPickup\">\n      <ConfirmButton\n        confirmNode={<Trans>Really change?</Trans>}\n        onConfirm={() => {\n          changeToPickup({ orderId })\n        }}\n      >\n        <Trans>Change to pickup</Trans>\n      </ConfirmButton>\n    </CanMutate>\n  )\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { useMSetPriorityOrder } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  orderId: ID\n  isPriority: boolean\n}\n\nexport const OrderStarButton: React.FC<IProps> = ({ orderId, isPriority }) => {\n  const [setPriorityOrder] = useMSetPriorityOrder()\n\n  return (\n    <CanMutate mutationName=\"setPriorityOrder\">\n      <SizerButton>\n        <TouchButton\n          iconName=\"star\"\n          iconColor={isPriority ? Colors.orange : Colors.white}\n          onClick={() => setPriorityOrder({ orderId, isPriority: !isPriority })}\n        />\n        >\n      </SizerButton>\n    </CanMutate>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n}\n\nconst stateLabels = {\n  [OrderStateEnum.Accepted]: i18nMark('Accept order'),\n  [OrderStateEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateEnum.Finished]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.FC<IProps> = ({ orderId, nextState }) => {\n  const [updateOrderState] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        text={i18n._(stateLabels[nextState])}\n        width=\"7.375rem\"\n        onClick={() => {\n          updateOrderState({ orderId, state: nextState })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = FDriverFragment\n\ninterface IProps {\n  drivers: ReadonlyArray<TDriver>\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst DriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst backgroundColor = {\n  background: Colors.greyMiddle,\n}\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...backgroundColor,\n    ...textColor,\n    height: Spacing.ButtonHeight + Spacing.DefaultSizeUnit,\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    ...backgroundColor,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n}\n\nexport const OrderDriverSelect: React.FC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers as TDriver[]}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver => {\n      if (driver === null) {\n        onClear()\n      } else {\n        onSelect(driver as TDriver)\n      }\n    }}\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <DriverName>{`${driver.firstName} ${driver.lastName}`}</DriverName>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useMOrderState,\n  useMRemoveOrderDriver,\n  useMSelectOrderDriver,\n  useQOrderDrivers,\n} from '../../../graph/generated'\nimport { useCanQuery } from '../../../hooks/useAccessGuard'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n}\n\nexport const OrderStateDeliver: React.FC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n}) => {\n  const canRead = useCanQuery('drivers')\n\n  const [deliverOrder] = useMOrderState()\n  const [selectDriver] = useMSelectOrderDriver()\n  const [removeDriver] = useMRemoveOrderDriver()\n\n  const { data, loading, refetch } = useQOrderDrivers(\n    {\n      branchId: [branchId],\n      orderId,\n    },\n    {\n      skip: !canRead,\n    },\n  )\n  return (\n    <CanMutate mutationName=\"createUserDeliveringOrder\">\n      <OrderDriverSelect\n        drivers={loading || !canRead ? [] : data.drivers}\n        selectedDriver={\n          loading ? null : data.order.driver && data.order.driver.user\n        }\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          const orderDriver = data.order.driver\n          if (orderDriver) {\n            removeDriver({ orderDriverId: orderDriver.id })\n          }\n        }}\n        onSelect={driver => {\n          selectDriver({ orderId, driverId: driver.id })\n          if (orderStateCategory !== OrderStateCategoryEnum.OnWay) {\n            deliverOrder({ orderId, state: OrderStateEnum.OnWay })\n          }\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst OrderStateFlowContainerWrapper = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n  height: ${Spacing.ButtonHeight + Spacing.DefaultSizeUnit};\n`\n\nconst Control = styled.div`\n  margin: 0 0 0 0.5rem;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.FC<IProps> = ({ children }) => (\n  <OrderStateFlowContainerWrapper>\n    {Children.map(children, (child, idx) => (\n      <Control key={idx}>{child}</Control>\n    ))}\n  </OrderStateFlowContainerWrapper>\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  DeliveryTypeEnum,\n  useMOrderTimeNotification,\n} from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { DeliveryTimeDialog } from '../../../molecules/DeliveryTimeDialog'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderStateTimeNotification: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [sendTimeNotification] = useMOrderTimeNotification()\n\n  return (\n    <CanMutate mutationName=\"orderNotifyCustomer\">\n      <DeliveryTimeDialog\n        title={\n          isDelivery\n            ? i18n.t`Send expected time of delivery to customer (in minutes)`\n            : i18n.t`Send expected time of pickup to customer (in minutes)`\n        }\n        deliveryType={\n          isDelivery ? DeliveryTypeEnum.Messenger : DeliveryTypeEnum.Pickup\n        }\n        onConfirm={minutes => {\n          sendTimeNotification({ orderId, minutes })\n        }}\n      >\n        {({ openDialog }) => (\n          <TouchButton iconName=\"schedule\" onClick={openDialog} />\n        )}\n      </DeliveryTimeDialog>\n    </CanMutate>\n  )\n}\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useQOrderState,\n} from '../../../graph/generated'\nimport { HamburgerMenu } from '../../../molecules/HamburgerMenu'\nimport { OrderCancelButton } from '../molecules/OrderCancelButton'\nimport { OrderDeliveryToPickup } from '../molecules/OrderDeliveryToPickup'\nimport { OrderStarButton } from '../molecules/OrderStarButton'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  orderStateCategory: OrderStateCategoryEnum\n  canCancel: boolean\n  canDeliver: boolean\n  isDelivery: boolean\n  isPriority: boolean\n}\n\nconst HamburgerMenuAtLeft: React.FC = ({ children }) => {\n  return (\n    <CardDock position=\"BottomLeft\">\n      <HamburgerMenu>{children}</HamburgerMenu>\n    </CardDock>\n  )\n}\n\nconst OrderStateNewOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n      <OrderDeliveryToPickup {...props} />\n    </HamburgerMenuAtLeft>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Accepted} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n      <OrderDeliveryToPickup {...props} />\n    </HamburgerMenuAtLeft>\n\n    <OrderStarButton {...props} />\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver && (\n      <OrderStateButton nextState={OrderStateEnum.ReadyToDeliver} {...props} />\n    )}\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateReadyToDeliverOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n    <OrderStarButton {...props} />\n    {props.isDelivery ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateFinishedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.FC<IProps> = ({ orderId, branchId }) => {\n  const { data, loading } = useQOrderState({\n    orderId,\n    branchId,\n  })\n\n  if (loading) {\n    return null\n  }\n\n  const {\n    order,\n    companyBranch: { allowedCategories },\n  } = data\n\n  const isDelivery =\n    order.deliveryType !== null &&\n    order.deliveryType.enum !== DeliveryTypeEnum.Pickup\n\n  const canDeliver =\n    isDelivery &&\n    (allowedCategories.includes(OrderStateCategoryEnum.OnWay) ||\n      allowedCategories.includes(OrderStateCategoryEnum.ReadyToDeliver))\n\n  const canCancel = order.isCancelable\n\n  const isPriority = order.isPriority\n\n  const stateProps: IStateProps = {\n    orderId,\n    branchId,\n    orderStateCategory: order.orderStateCategory,\n    canCancel,\n    canDeliver,\n    isDelivery,\n    isPriority,\n  }\n  switch (order.orderStateCategory) {\n    case OrderStateCategoryEnum.NewOrders:\n      return <OrderStateNewOrder {...stateProps} />\n    case OrderStateCategoryEnum.Preparing:\n      return <OrderStateAcceptedOrder {...stateProps} />\n    case OrderStateCategoryEnum.ReadyToDeliver:\n      return <OrderStateReadyToDeliverOrder {...stateProps} />\n    case OrderStateCategoryEnum.OnWay:\n      return <OrderStateOnWayOrder {...stateProps} />\n    case OrderStateCategoryEnum.Finished:\n      return <OrderStateFinishedOrder {...stateProps} />\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { Loading } from '../../../atoms/Loading'\nimport { useQOrderDetail } from '../../../graph/generated'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderIdLine } from '../molecules/OrderIdLine'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IProps {\n  orderId: string\n}\n\nconst StyledOrderDetail = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail = React.memo<IProps>(({ orderId }) => {\n  const { data, loading } = useQOrderDetail({\n    orderId,\n  })\n\n  if (loading) {\n    return <Loading />\n  }\n\n  const { order } = data\n\n  return (\n    <>\n      <StyledOrderDetail>\n        <HorizontalSeparator />\n        <OrderWareList orderWares={order.items} />\n        <OrderDetailTotals totals={order} />\n        <OrderRuleLines rules={order.allAppliedRules}>\n          <OrderCountLine\n            current={order.customerOrdersCountCurrent}\n            total={order.customerOrdersCountTotal}\n          />\n        </OrderRuleLines>\n        <ContactLines\n          phones={order.customer.phones}\n          emails={order.customer.emails}\n        />\n        <NoteLine note={order.note} previousNote={order.previousNote} />\n        <HorizontalSeparator />\n        <OrderIdLine displayedId={order.id} orderOrigin={order.orderOrigin} />\n        <HorizontalSeparator />\n        <OrderTimeLine orderTiming={order.orderTiming} />\n        <OrderStats order={order} />\n      </StyledOrderDetail>\n      <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n    </>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FOrderTickerFragment } from '../../../graph/generated'\nimport { Colors, Radiuses } from '../../../styling'\nimport { useOrderListModel } from '../hooks/useOrderListModel'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ninterface IProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onToggleDetail?(): void\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox = observer<IProps>(\n  ({ order, showBranch, isCancelled, onToggleDetail }) => {\n    const orderListModel = useOrderListModel()\n\n    const orderId = order.id\n\n    const onClick = React.useCallback(() => {\n      orderListModel.toggleOrderDetail(orderId)\n      if (onToggleDetail) {\n        onToggleDetail()\n      }\n    }, [orderId])\n\n    const isDetailOpen = orderListModel.isOrderDetailOpen(orderId)\n\n    return (\n      <OrderBoxStyled id={`order-${orderId}`}>\n        <OrderTicker\n          order={order}\n          showBranch={showBranch}\n          isCancelled={isCancelled}\n          onClick={onClick}\n        />\n        {isDetailOpen && <OrderDetail orderId={orderId} />}\n      </OrderBoxStyled>\n    )\n  },\n)\n","import { i18n } from '@lingui/core'\nimport { DatePickerInlineProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends DatePickerInlineProps {}\n\nexport const InputDate: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <InlineDatePicker\n        format=\"ll\"\n        maxDateMessage={i18n.t`Date is too much in the future`}\n        minDateMessage={i18n.t`Date is too much in the past`}\n        {...props}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { DatePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { InputDate } from './InputDate'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <Field\n      field={field}\n      render={fieldApi => (\n        <InputDate\n          value={fieldApi.value}\n          onChange={value => fieldApi.setValue(value)}\n          onOpen={() => fieldApi.setTouched(true)}\n          {...pickerProps}\n        />\n      )}\n    />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const ClosureHistoryFilter = () => {\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateFrom\"\n          label={<Trans>From date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateTo\"\n          label={<Trans>To date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Trans>Show history for branch</Trans>\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import { subDays } from 'date-fns'\nimport React, { createContext, useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QClosureHistoryDocument,\n  QClosureHistoryHistory,\n  QClosureHistoryQuery,\n  QClosureHistoryVariables,\n} from '../../../graph/generated'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\n\nexport type TReports = QClosureHistoryHistory\n\nconst context = createContext<IQueryResult<QClosureHistoryQuery> | null>(null)\n\nexport const useClosureHistory = () => useContext(context)!\n\nexport const ClosureHistoryLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery<\n    QClosureHistoryQuery,\n    QClosureHistoryVariables\n  >(QClosureHistoryDocument)\n\n  return (\n    <Form\n      onSubmit={(formValues: { dateFrom: Date; dateTo: Date }) => {\n        if (statistics.closureBranch) {\n          execute({\n            branchId: statistics.closureBranch,\n            dateFrom: formatDateISO(formValues.dateFrom),\n            dateTo: formatDateISO(formValues.dateTo),\n          })\n        }\n      }}\n      defaultValues={{ dateFrom: subDays(new Date(), 1), dateTo: new Date() }}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading, wasExecuted } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (!wasExecuted) {\n    return null\n  }\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (data && data.history.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data &&\n        data.history.map(report => (\n          <FlexRow key={report.id}>\n            <FlexColumn fixedWidth={true}>\n              <RelativeLink to={`../${report.id}`}>\n                <SizerButton>\n                  <TouchButton iconName=\"mode_edit\" />\n                </SizerButton>\n              </RelativeLink>\n            </FlexColumn>\n            <FlexColumn widthGrowIndex={1}>\n              {`[${report.reportSequence}] ${formatDateISO(\n                report.reportDatetime,\n              )}`}\n            </FlexColumn>\n          </FlexRow>\n        ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  useAutorunWhenSingleBranch(branch => {\n    statistics.setClosureBranch(branch.id)\n  })\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n        hideWhenSingleBranch={true}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryFilter } from '../molecules/ClosureHistoryFilter'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.FC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <ClosureHistoryFilter />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n}\n\nconst MonospaceOutputStyled = styled.p`\n  color: white;\n  font-family: 'Lucida Console', Monaco, monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 1rem;\n  line-height: 1.8rem;\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nexport const MonospaceOutput: React.FC<IProps> = ({ text }) => (\n  <MonospaceOutputStyled>{formatOutput(text)}</MonospaceOutputStyled>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQClosureReport } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent = observer<IProps>(\n  ({ reportId = '' }) => {\n    const { statistics } = useRoot()\n    const skip = !statistics.closureBranch\n    const { data, loading } = useQClosureReport(\n      {\n        branchId: statistics.closureBranch!,\n        reportId,\n        showReport: Boolean(reportId),\n      },\n      { skip },\n    )\n\n    if (skip) {\n      return <MonospaceOutput text={i18n.t`Select a branch`} />\n    }\n\n    if (loading) {\n      return <MonospaceOutput text={i18n.t`Computing`} />\n    }\n\n    return (\n      <MonospaceOutput\n        text={reportId ? data.report!.plainData : data.lastReport.plainData}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick?(e: MouseEvent<HTMLButtonElement>): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.FC<IProps> = props => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <TouchButton\n      text={i18n.t`Create closure`}\n      color={Colors.green}\n      width=\"12rem\"\n      {...props}\n    />\n  </CanMutate>\n)\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useMFinancialReportCreate } from '../../../graph/generated'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nconst ButtonToRight = styled.div`\n  float: right;\n`\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const [createClosure] = useMFinancialReportCreate()\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      branchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <>\n      {showCurrent ? (\n        <ClosureCurrentButton />\n      ) : (\n        <ClosureSubmitButton\n          onClick={onSubmit}\n          disabled={!statistics.closureBranch}\n        />\n      )}\n      <ButtonToRight>\n        <ClosureHistoryButton />\n      </ButtonToRight>\n    </>\n  ))\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsContent } from '../molecules/ClosureStatisticsContent'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.FC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import { isoDate } from '@speedlo/graphql'\nimport React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { InputStatisticCreate } from '../../../graph/types'\n\nconst context = React.createContext<InputStatisticCreate | undefined>(undefined)\n\nexport const useStatsFilterCurrent = () => React.useContext(context)\n\nexport function useStatsFilter() {\n  const { statistics } = useRoot()\n  const [filter, setFilter] = React.useState<InputStatisticCreate | undefined>()\n\n  const executeFilter = () => {\n    setFilter({\n      branches: [...statistics.branchesFilter],\n      drivers: [...statistics.drivers],\n      dateTimeFrom: isoDate(statistics.dateTimeFrom),\n      dateTimeTo: isoDate(statistics.dateTimeTo),\n    })\n  }\n\n  const defaultValues = {\n    dateTimeFrom: statistics.dateTimeFrom,\n    dateTimeTo: statistics.dateTimeTo,\n  }\n\n  const renderForm = (children: ReactNode | ReactNode[]) => {\n    return (\n      <Form\n        onSubmit={executeFilter}\n        onChange={({ values }) => statistics.updateFilter(values)}\n        defaultValues={defaultValues}\n      >\n        <context.Provider value={filter}>{children}</context.Provider>\n      </Form>\n    )\n  }\n\n  return {\n    filter,\n    executeFilter,\n    renderForm,\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { InputStatisticCreate, useQStatsDaily } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nconst StatsDisplay: React.FC<{ plain: string }> = ({ plain, children }) => {\n  return (\n    <>\n      <Headline light={true}>{children}</Headline>\n      <MonospaceOutput text={plain} />\n    </>\n  )\n}\n\nexport const DailyStatisticsContent: React.FC = () => {\n  const filter = useStatsFilterCurrent()\n  const getRelevantFilter = (): InputStatisticCreate => {\n    if (!filter) {\n      return { branches: [] }\n    }\n    return {\n      branches: filter.branches,\n      dateTimeFrom: filter.dateTimeFrom,\n      dateTimeTo: filter.dateTimeTo,\n    }\n  }\n  const { data, loading } = useQStatsDaily(\n    {\n      filter: getRelevantFilter(),\n    },\n    { skip: !filter },\n  )\n\n  if (!filter) {\n    return null\n  }\n\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n\n  const { stats } = data\n  return (\n    <>\n      <StatsDisplay plain={stats.daily}>\n        <Trans>Daily statistics</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.category}>\n        <Trans>By category</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.delivery}>\n        <Trans>By type</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.drivers}>\n        <Trans>By driver</Trans>\n      </StatsDisplay>\n    </>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = () => {\n  const { statistics } = useRoot()\n  useAutorunWhenSingleBranch(branch => {\n    statistics.setBranchFilter([branch.id])\n  })\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(statistics.branches)}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n      hideWhenSingleBranch={true}\n    />\n  ))\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDateTime } from '../../../atoms/FormInputDateTime'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const StatisticsFilter = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeFrom\"\n          label={<Trans>From</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeTo\"\n          label={<Trans>To</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Plural\n            value={statistics.branchesFilter.length}\n            one=\"Show for one branch\"\n            few=\"Show for # branches\"\n            other=\"Show for # branches\"\n          />\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  ))\n}\n","import React from 'react'\n\nimport { useStatsFilter } from '../hooks/useStatsFilter'\n\ninterface IProps {\n  children: ReactNode | ReactNode[]\n}\n\nexport const DailyStatisticsLoader: React.FC<IProps> = ({ children }) => {\n  const { renderForm } = useStatsFilter()\n  return renderForm(children)\n}\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { DailyStatisticsContent } from '../molecules/DailyStatisticsContent'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  IndexRange,\n  InfiniteLoader,\n  List,\n} from 'react-virtualized'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderStateCategoryEnum,\n  QStatsOrdersListDocument,\n  QStatsOrdersListList,\n  QStatsOrdersListQuery,\n  QStatsOrdersListVariables,\n  useQStatsOrdersCounts,\n} from '../../../graph/generated'\nimport { useExecutableQuery } from '../../../hooks/useExecutableQuery'\nimport { OrderBox } from '../../order/atoms/OrderBox'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nexport const OrdersStatisticsList: React.FC = () => {\n  const { statistics } = useRoot()\n  const filter = useStatsFilterCurrent()\n\n  const orders = React.useRef(new Map<number, QStatsOrdersListList>())\n  const loaderRef = React.useRef<InfiniteLoader | null>(null)\n  const measureCache = React.useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: 55,\n        minHeight: 55,\n      }),\n    [],\n  )\n\n  const { data: countsData, loading: countsLoading } = useQStatsOrdersCounts(\n    { filter: filter! },\n    { skip: !filter },\n  )\n\n  React.useEffect(() => {\n    orders.current.clear()\n    measureCache.clearAll()\n    if (loaderRef.current) {\n      loaderRef.current.resetLoadMoreRowsCache(true)\n    }\n  }, [JSON.stringify(filter)])\n\n  const { execute: executeList } = useExecutableQuery<\n    QStatsOrdersListQuery,\n    QStatsOrdersListVariables\n  >(QStatsOrdersListDocument)\n\n  const queryMoreOrders = React.useCallback(\n    async ({ startIndex, stopIndex }: IndexRange) => {\n      if (filter) {\n        const result = await executeList({\n          filter,\n          pagination: {\n            fromIndex: startIndex,\n            toIndex: stopIndex,\n          },\n        })\n\n        if (result.data) {\n          const list = [...result.data.stats.orders.list]\n          for (let index = startIndex; index <= stopIndex; index++) {\n            const order = list.shift()\n            if (order) {\n              orders.current.set(index, order)\n            }\n          }\n        }\n      }\n    },\n    [filter],\n  )\n\n  const isRowLoaded = React.useCallback(\n    ({ index }) => orders.current.get(index) !== undefined,\n    [],\n  )\n\n  const rowRenderer = React.useCallback(({ index, key, style, parent }) => {\n    const order = orders.current.get(index)\n    if (order === undefined) {\n      return (\n        <div style={style} key={key}>\n          ...\n        </div>\n      )\n    }\n    return (\n      <CellMeasurer\n        key={key}\n        columnIndex={0}\n        rowIndex={index}\n        cache={measureCache}\n        parent={parent}\n      >\n        {({ measure }) => (\n          <div style={style}>\n            <OrderBox\n              order={order}\n              showBranch={statistics.branchesFilter.length > 1}\n              isCancelled={\n                order.orderStateCategory === OrderStateCategoryEnum.Cancel\n              }\n              onToggleDetail={() => {\n                setTimeout(measure, 500)\n              }}\n            />\n          </div>\n        )}\n      </CellMeasurer>\n    )\n  }, [])\n\n  if (!filter) {\n    return null\n  }\n\n  if (countsLoading) {\n    return <Loading />\n  }\n\n  const { finished, cancelled } = countsData.stats.counts\n  const totalCount = finished + cancelled\n\n  if (totalCount === 0) {\n    return <Trans>No orders</Trans>\n  }\n\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <InfiniteLoader\n          rowCount={totalCount}\n          isRowLoaded={isRowLoaded}\n          loadMoreRows={queryMoreOrders}\n          ref={loaderRef}\n        >\n          {({ onRowsRendered, registerChild }) => (\n            <List\n              ref={registerChild}\n              onRowsRendered={onRowsRendered}\n              rowHeight={measureCache.rowHeight}\n              deferredMeasurementCache={measureCache}\n              rowCount={totalCount}\n              width={width}\n              height={height}\n              rowRenderer={rowRenderer}\n            />\n          )}\n        </InfiniteLoader>\n      )}\n    </AutoSizer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { Price } from '../../../atoms/Price'\nimport { useQStatsOrders } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nconst StatPanel = styled.div`\n  margin: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n`\n\nconst StatLabel = styled.h1`\n  font-size: 1.5rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nconst StatValue = styled.h2`\n  font-size: 4rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const filter = useStatsFilterCurrent()\n  const { data, loading } = useQStatsOrders(\n    { filter: filter! },\n    { skip: !filter },\n  )\n\n  if (!filter) {\n    return null\n  }\n\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n\n  const stats = data.stats.finishedOrders\n\n  return (\n    <>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total turnover</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Online payments</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Orders count</Trans>\n        </StatLabel>\n        <StatValue>{stats.finishedCount + stats.cancelledCount}</StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total commissions</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <MonospaceOutput text={data.stats.orderStatisticsPlain} />\n      </StatPanel>\n    </>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment, useQAllDrivers } from '../../../graph/generated'\nimport { formatFullName } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ntype TDriver = FDriverFragment\n\nexport const StatisticsDriversFilter = observer(() => {\n  const { statistics } = useRoot()\n  const { data, loading } = useQAllDrivers({\n    branches: statistics.branchesFilter,\n  })\n  React.useEffect(\n    () => {\n      if (!loading) {\n        statistics.setDriversFilter(\n          RM.intersection(statistics.drivers, data.drivers.map(RM.prop('id'))),\n        )\n      }\n    },\n    [loading],\n  )\n  return (\n    <SelectControl<FDriverFragment>\n      isMulti={true}\n      isClearable={true}\n      isSearchable={true}\n      filterOption={(option, rawInput) =>\n        rawInput.length === 0 ||\n        formatFullName(option.data)\n          .toLocaleLowerCase()\n          .includes(rawInput.toLocaleLowerCase())\n      }\n      placeholder={i18n.t`Filter by drivers`}\n      isLoading={loading}\n      options={loading ? [] : [...data.drivers]}\n      value={\n        loading\n          ? []\n          : data.drivers.filter(driver =>\n              statistics.drivers.includes(driver.id),\n            )\n      }\n      formatOptionLabel={formatFullName}\n      getOptionValue={RM.prop('id')}\n      onChange={value => {\n        if (!value) {\n          statistics.setDriversFilter([])\n        } else {\n          statistics.setDriversFilter((value as TDriver[]).map(RM.prop('id')))\n        }\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useStatsFilter } from '../hooks/useStatsFilter'\n\ninterface IProps {\n  autoFilter?: string\n  children: ReactNode | ReactNode[]\n}\n\nexport const OrdersStatisticsLoader: React.FC<IProps> = ({\n  children,\n  autoFilter,\n}) => {\n  const { executeFilter, renderForm } = useStatsFilter()\n\n  React.useEffect(\n    () => {\n      if (autoFilter) {\n        executeFilter()\n      }\n    },\n    [autoFilter],\n  )\n\n  return renderForm(children)\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { AutoHeight } from '../../../atoms/FlexAutoHeight'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { OrdersStatisticsList } from '../molecules/OrdersStatisticsList'\nimport { OrdersStatisticsSummary } from '../molecules/OrdersStatisticsSummary'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsDriversFilter } from '../molecules/StatisticsDriversFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\n\ninterface IProps extends RouteComponentProps<{ filter?: string }> {}\n\nfunction getLayout() {\n  return [{ i: 'summary', x: 0, y: 1, w: 7, h: 1 }]\n}\n\nexport const OrdersStatisticsPage: React.FC<IProps> = ({ match }) => {\n  const { statistics } = useRoot()\n  if (match.params.filter === 'today') {\n    statistics.setTodayOrdersFilter()\n  }\n  return (\n    <OrdersStatisticsLoader autoFilter={match.params.filter}>\n      <PageLayoutFullHeightItem\n        withScrollArea={false}\n        row={1}\n        column={7}\n        widthInColumns={9}\n      >\n        <AutoHeight>\n          <OrdersStatisticsList />\n        </AutoHeight>\n      </PageLayoutFullHeightItem>\n\n      <PageLayout\n        layouts={getLayout()}\n        pageTitle={i18n.t`Orders statistics`}\n        showSoundControl={false}\n        scrollPageTitle={false}\n        useBackButton={true}\n      >\n        <div key=\"summary\">\n          <Card>\n            <StatisticsBranchFilter />\n            <StatisticsDriversFilter />\n            <StatisticsFilter />\n          </Card>\n\n          <OrdersStatisticsSummary />\n        </div>\n      </PageLayout>\n    </OrdersStatisticsLoader>\n  )\n}\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'OrdersStatistics', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'DailyStatistics', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'Closure', x: 4, y: 1, w: 2, h: 2 },\n  ]\n}\n\nexport const OverviewPage: React.FC<IProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders/:filter?`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n"],"sourceRoot":""}