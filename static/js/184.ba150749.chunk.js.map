{"version":3,"sources":["molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","atoms/ScrollArea.tsx","atoms/BaseMap.tsx","atoms/CardListTitle.tsx","atoms/FormInputSelect.tsx","atoms/DragHandle.tsx","atoms/ConfirmDialog.tsx","molecules/CompanyBrandDropdown.tsx","segments/zones/hooks/useZoneId.ts","segments/zones/hooks/useZoneRouteControl.tsx","segments/zones/atoms/ZonePriceInput.tsx","segments/zones/molecules/ZoneColorSelector.tsx","segments/zones/atoms/ZonePlaceholderInput.tsx","segments/zones/molecules/ZoneFormPriceRange.tsx","segments/zones/molecules/ZoneFormContent.tsx","segments/zones/molecules/ZoneFormControls.tsx","segments/zones/organisms/ZoneListLoader.graphql.ts","segments/zones/organisms/ZoneListLoader.tsx","segments/zones/organisms/ZoneFormPanel.tsx","molecules/MapCompanyBranchMarker.tsx","segments/zones/atoms/ZoneMapArea.tsx","segments/zones/atoms/ZoneMapEditableArea.tsx","segments/zones/hooks/useZoneModel.ts","segments/zones/organisms/ZoneMapControl.tsx","atoms/UserHasMultipleBranches.tsx","segments/zones/molecules/CreateZoneButton.tsx","segments/zones/atoms/ZoneListCard.tsx","segments/zones/molecules/ZoneList.tsx","segments/zones/organisms/ZoneListControl.tsx","segments/zones/organisms/ZoneFilter.tsx","segments/zones/organisms/ZoneMenuPanel.tsx","segments/zones/pages/ZonePageLayout.tsx","segments/zones/routes/ZoneMenuRoutes.tsx"],"names":["StyledPageLayoutFullHeightItem","styled","div","withConfig","displayName","componentId","mediaDesktop","_templateObject","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","column","row","mediaMobile","_templateObject2","_ref","rowInMobile","_ref2","forcePercentHeightInMobile","concat","PageHeaderHeight","DefaultSizeUnit","PageLayoutFullHeightItem","_ref3","children","_ref3$row","_ref3$rowInMobile","_ref3$column","_ref3$widthInColumns","_ref3$withScrollArea","withScrollArea","scrollAreaId","forceHeightInMobile","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_4__","id","_atoms_Sizer__WEBPACK_IMPORTED_MODULE_5__","height","heightUnit","FlexRowSingle","_ref$flexWrap","flexWrap","_ref2$justify","justify","VerticalGap","_ref$size","size","_ref$sizeUnit","sizeUnit","ScrollArea","libraries","React","createContext","BaseMap","model","options","streetViewControl","mapTypeControl","fullscreenControl","user","useRoot","_useLoadScript","useLoadScript","version","googleMapsApiKey","appConfig","googleMapsApi","language","isLoaded","loadError","googleMapUrl","url","googleAvailable","Reflect","has","window","Sentry","withScope","scope","setExtras","captureException","react__WEBPACK_IMPORTED_MODULE_4___default","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","mobx_react_lite__WEBPACK_IMPORTED_MODULE_3__","_react_google_maps_api__WEBPACK_IMPORTED_MODULE_1__","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","onLoad","setMapRef","mapContainerStyle","borderRadius","Radiuses","Card","overflow","useGoogleMap","map","useGoogleMapOrig","Error","CardListTitle","h2","Colors","greyLight","FormInputSelect","_React$Component","_getPrototypeOf2","_this","Object","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_len","arguments","length","args","Array","_key","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","apply","validate","value","isRequired","_i18n__WEBPACK_IMPORTED_MODULE_10__","_","0","validatioName","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","fieldApi","_this$props","isMulti","getOptionValue","defaultValue","selection","isSelected","isArray","item","includes","RM","F","filter","onChange","selectedOptions","setValue","find","option","_this2","_this$props2","field","_this$props2$fieldIsP","fieldIsPure","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7___default","react_form__WEBPACK_IMPORTED_MODULE_8__","pure","_SelectControl__WEBPACK_IMPORTED_MODULE_11__","assign","getControlProps","onFocus","setTouched","styles","control","base","Boolean","error","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","borderColor","Component","defaultProps","getItemId","prop","StyledDragHandle","DragHandle","SortableHandle","_Icon__WEBPACK_IMPORTED_MODULE_5__","icon","Reorder","__webpack_require__","d","__webpack_exports__","ConfirmDialog","react__WEBPACK_IMPORTED_MODULE_0__","isShow","confirmText","onCancel","onConfirm","useEffect","confirm","CompanyBrandDropdown","brands","selectedBrand","onSelection","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_atoms_SelectControl__WEBPACK_IMPORTED_MODULE_4__","placeholder","_i18n__WEBPACK_IMPORTED_MODULE_5__","formatOptionLabel","getOptionLabel","isClearable","isSearchable","autoFocus","useZoneId","useRouterContext","match","params","zoneId","useZoneRouteControl","_useRoot","zoneModel","zone","history","getRouteToZone","useCallback","routeToZoneEdit","editZoneId","panToZone","canQuery","push","routeToZoneList","LabelStyled","FormInputTextBoxStyled","FormInputTextBox","FormInputTextBoxDeliveryStyled","_templateObject3","blue","DeliveryContainer","_templateObject4","PriceRangeContainer","_templateObject5","VerticalLine","_templateObject6","validatePrice","trim","Number","isNaN","parseFloat","i18n","ZonePriceInput","forwardRef","ref","label","isDeliveryPrice","_ref$autoFocus","react_default","ColorOption","ZoneColorSelector_templateObject","color","white","QueryZoneColors","buildQuery","ZoneColorsQuery","ZoneColorSelector","_ref2$field","render","zoneColors","toConsumableArray","width","objectSpread","padding","margin","menu","maxWidth","head","zoneColor","code","ZonePlaceholderInput_templateObject","FormInputForPlaceholderStyled","FormInputStyled","ZonePlaceholderInput_templateObject2","Container","ZonePlaceholderInput_templateObject3","ZonePlaceholderInput","display","ZonePlaceholderInput_LabelStyled","disabled","AddButtonContainer","ZoneFormPriceRange_templateObject","RemoveButtonContainer","ZoneFormPriceRange_templateObject2","ZoneFormPriceRange","Fragment","values","idx","react","ZonePlaceholderInput_ZonePlaceholderInput","TouchButtonDelete","onDelete","removeValue","es","formApi","TouchButton","submitting","ButtonHeight","AddCircle","onClick","addValue","price","toPrice","ZoneFormContentStyled","ZoneFormContent_templateObject","Middle","black","DescriptionUnderHeadline","ZoneFormContent_templateObject2","greyDark","ZoneFormContent","IconLine","Label","validateIsRequired","ColorLens","ZoneColorSelector_ZoneColorSelector","FormInputCheckbox","name","toLocaleLowerCase","_lingui_react","components","Headline","component","ZoneFormControls","isSubmitting","isModified","onGoBack","onSave","FlexColumn","widthGrowIndex","greyMiddle","text","CanMutate","mutationName","green","ZonesQuery","gql","ZoneListLoader_graphql_templateObject","FZoneFragmentDoc","QueryZones","ZoneListContext","ZoneListLoader","observer","branches","branchFilterPredicate","Provider","fetchPolicy","variables","branchesId","renderLoading","zones","loading","useZoneList","useContext","DeleteButtonContainer","ZoneFormPanel_templateObject","ZoneFormPanel","zoneList","_useState","useState","_useState2","slicedToArray","setModified","formApiRef","useRef","_useSnackBar","useSnackBar","enqueueError","enqueueSuccess","_useMZoneUpdate","useMZoneUpdate","zoneUpdate","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getZoneVariables","sent","stop","_x","_callee2","_context2","destroyZone","useReaction","currentZonePoints","propEq","clearZonePoints","defaultValues","formState","logDebug","current","ZoneFormControls_ZoneFormControls","submitForm","ZoneFormContent_ZoneFormContent","index_es","when","handleOk","handleCancel","Loading","BranchNameStyled","MapCompanyBranchMarker_templateObject","isActive","css","MapCompanyBranchMarker_templateObject2","MapCompanyBranchMarker","branch","_ref$isActive","reactgooglemapsapi_es_production","getPixelPositionOffset","x","y","mapPaneName","OverlayView","MARKER_LAYER","position","gpsToLatLng","gps","ZoneMapArea","points","priority","onAreaFocus","e","path","fillColor","fillOpacity","strokeWeight","zIndex","editable","draggable","onDblClick","ZoneMapEditableArea","onClear","polygonRef","listenersRef","onAreaChange","getPath","getArray","latLngToGps","polygon","addListener","onUnmount","forEach","lis","remove","onDragEnd","useZoneModel","ZoneMapControl","companyBranchId","hasBranchFilter","branchFilterId","autorun","isReady","panToBranch","renderBranchLabel","MapCompanyBranchMarker_MapCompanyBranchMarker","areaProps","geoPolygon","companyBranch","enabled","ZoneMapEditableArea_ZoneMapEditableArea","updateZonePoints","ZoneMapArea_ZoneMapArea","UserHasMultipleBranches","hasSingleBranch","CreateZoneButton","createZone","turquoise","textNextToIcon","ZoneNameStyled","ZoneListCard_templateObject","ZoneDescriptionStyled","ZoneListCard_templateObject2","ZoneFlexRowStyled","ZoneListCard_templateObject3","ZoneListCard","SortableElement","onEdit","fixedWidth","SizerButton","Edit","ZoneListContainerStyled","SortableContainer","ZoneList_templateObject","sortZones","R","groupByBranch","ZoneList","output","onSortEnd","onZoneEdit","renderZone","index","collection","sorted","oldIndex","newIndex","changeZonePriority","grouped","branchZones","renderBranch","useDragHandle","lockAxis","ZoneListControl","react_content_loader_es","primaryOpacity","secondaryOpacity","brand","ZoneList_ZoneList","zoneFilterPredicate","root","filterBranches","ZoneFilter","getBrandBranches","pathEq","setBranchFilter","singleBrand","setBrandFilter","clearBrandFilter","CompanyBranchDropdown","selectedBranch","onSingleSelection","clearBranchFilter","ZoneMenuContainer","ZoneMenuPanel_templateObject","FixedHeaderContainer","ZoneMenuPanel_templateObject2","ScrollAreaContainer","ZoneMenuPanel_templateObject3","ZoneMenuPanel","memo","useAutorunWhenSingleBranch","ZoneListControl_ZoneListControl","ZonePageLayout","isEditing","PageLayoutResponsive","pageTitle","useBackButton","backRoute","ZoneFormPanel_ZoneFormPanel","ZoneMapControl_ZoneMapControl","ZoneMenuRoutes_ZoneMenuRoutes","ZoneMenuRoutes","react_router","NotFoundPage"],"mappings":"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","file":"static/js/184.ba150749.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => (\n  <StyledPageLayoutFullHeightItem\n    column={column}\n    row={row}\n    rowInMobile={rowInMobile}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n    forcePercentHeightInMobile={forceHeightInMobile}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <Sizer height={100} heightUnit=\"%\">\n        {children}\n      </Sizer>\n    )}\n  </StyledPageLayoutFullHeightItem>\n)\n","import styled from 'styled-components'\n\ninterface IProps {\n  flexWrap?: string\n  justify?: string\n}\n\nexport const FlexRowSingle = styled.div<IProps>`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: ${({ flexWrap = 'unset' }: IProps) => flexWrap};\n  justify-content: ${({ justify = 'space-between' }: IProps) => justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import { Trans } from '@lingui/macro'\nimport {\n  GoogleMap,\n  useGoogleMap as useGoogleMapOrig,\n  useLoadScript,\n} from '@react-google-maps/api'\nimport { Sentry } from '@speedlo/sentry'\nimport { Observer } from 'mobx-react-lite'\nimport React, { useContext } from 'react'\n\nimport { appConfig } from '../config'\nimport { TMapModel } from '../models/MapModel'\nimport { Radiuses } from '../styling'\nimport { useRoot } from './RootProvider'\n\ninterface IBaseMapProps {\n  model: TMapModel\n}\n\nconst mapModelContext = React.createContext<TMapModel | null>(null)\n\nconst libraries = ['places']\n\nexport const BaseMap: React.FC<IBaseMapProps> = ({ model, children }) => {\n  const options: google.maps.MapOptions = {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n  }\n\n  const { user } = useRoot()\n  const { isLoaded, loadError, url: googleMapUrl } = useLoadScript({\n    id: 'script-loader',\n    version: 'weekly',\n    googleMapsApiKey: appConfig.googleMapsApi,\n    libraries,\n    language: user.language,\n  })\n\n  const renderMap = () => (\n    <Observer>\n      {() => (\n        <GoogleMap\n          zoom={model.zoom}\n          center={model.center}\n          onCenterChanged={model.updatePosition}\n          onZoomChanged={model.updateZoom}\n          onLoad={model.setMapRef}\n          options={options}\n          mapContainerStyle={{\n            borderRadius: Radiuses.Card,\n            overflow: 'hidden',\n            height: '100%',\n          }}\n        >\n          {children}\n        </GoogleMap>\n      )}\n    </Observer>\n  )\n\n  const googleAvailable = Reflect.has(window, 'google')\n\n  if (loadError || (isLoaded && !googleAvailable)) {\n    Sentry.withScope(scope => {\n      scope.setExtras({ googleMapUrl })\n      Sentry.captureException(loadError)\n    })\n    return (\n      <h2>\n        <Trans>Cannot load map right now. Please try again later.</Trans>\n      </h2>\n    )\n  }\n\n  return isLoaded ? renderMap() : null\n}\n\nexport function useMapModel() {\n  const model = useContext(mapModelContext)\n  if (!model) {\n    throw new Error('Trying to useMapModel, but BaseMap is missing in the tree')\n  }\n  return model\n}\n\nexport function useGoogleMap() {\n  const map = useGoogleMapOrig()\n  if (!map) {\n    throw new Error(\n      'Trying to useGoogleMap, but BaseMap is missing in the tree',\n    )\n  }\n  return map\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n`\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const { field, fieldIsPure = false, defaultValue, ...props } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import { Reorder } from '@material-ui/icons'\nimport React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IProps {}\n\nconst StyledDragHandle = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IProps>(() => (\n  <StyledDragHandle>\n    <Icon icon={Reorder} />\n  </StyledDragHandle>\n))\n","import React, { useEffect } from 'react'\n\ninterface IProps {\n  isShow: boolean\n  confirmText: string\n  onConfirm(): void\n  onCancel(): void\n}\n\nexport const ConfirmDialog: React.FC<IProps> = ({\n  isShow,\n  confirmText,\n  onCancel,\n  onConfirm,\n}) => {\n  useEffect(() => {\n    if (isShow) {\n      if (window.confirm(confirmText)) {\n        onConfirm()\n      } else {\n        onCancel()\n      }\n    }\n  }, [confirmText, isShow, onCancel, onConfirm])\n  return null\n}\n","import { RM } from '@speedlo/tools'\nimport React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchBrand } from '../graph/generated'\nimport { i18n } from '../i18n'\n\ntype TBrand = FCompanyBranchBrand\n\ninterface IProps extends ISelectControlProps<TBrand> {\n  brands?: RoA<TBrand>\n  selectedBrand: Maybe<TBrand>\n  onSelection(brand: Maybe<TBrand>): void\n}\n\nexport const CompanyBrandDropdown: React.FC<IProps> = ({\n  brands,\n  selectedBrand,\n  onSelection,\n  ...props\n}) => {\n  const { user } = useRoot()\n\n  return (\n    <SelectControl<TBrand>\n      placeholder={i18n.t`Select brand`}\n      options={brands || user.brands}\n      value={selectedBrand}\n      formatOptionLabel={RM.prop('name')}\n      getOptionValue={RM.prop('id')}\n      getOptionLabel={RM.prop('name')}\n      isClearable={true}\n      isSearchable={true}\n      onChange={value => onSelection(value as Maybe<TBrand>)}\n      autoFocus={true}\n      {...props}\n    />\n  )\n}\n","import { useRouterContext } from '@speedlo/hooks'\n\ninterface IZoneRouteParams {\n  zoneId?: ID\n}\n\nexport function useZoneId() {\n  const { match } = useRouterContext<IZoneRouteParams>()\n  const { zoneId } = match.params\n  return zoneId\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\n\nexport function useZoneRouteControl() {\n  const { user, zone: zoneModel } = useRoot()\n  const { history } = useRouterContext()\n  const baseRoute = '/settings/zones'\n  const getRouteToZone = React.useCallback((zoneId: ID) => {\n    return `${baseRoute}/${zoneId}`\n  }, [])\n  return {\n    getRouteToZone,\n    routeToZoneEdit: React.useCallback(\n      (editZoneId: ID) => {\n        zoneModel.map.panToZone(editZoneId)\n        if (user.canQuery('zone')) {\n          history.push(getRouteToZone(editZoneId))\n        }\n      },\n      [getRouteToZone, history, user, zoneModel.map],\n    ),\n    routeToZoneList: React.useCallback(() => {\n      history.push(baseRoute)\n    }, [history]),\n  }\n}\n","import React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface IZoneInputProps {\n  field: FieldType\n  label?: string\n  autoFocus?: boolean\n  isDeliveryPrice?: boolean\n}\n\nconst LabelStyled = styled.div`\n  min-width: 2rem;\n  display: inline-block;\n`\n\nconst FormInputTextBoxStyled = styled(FormInputTextBox)`\n  width: 3rem;\n  position: relative;\n  z-index: 4;\n`\nconst FormInputTextBoxDeliveryStyled = styled(FormInputTextBoxStyled)`\n  color: ${Colors.blue};\n`\n\nconst DeliveryContainer = styled.div`\n  position: relative;\n  left: 8rem;\n  top: 0rem;\n`\n\nconst PriceRangeContainer = styled.div`\n  position: relative;\n  left: 4rem;\n  top: -0.3rem;\n  width: 3rem;\n`\n\nconst VerticalLine = styled.div`\n  border-left: 3px solid #707070;\n  width: 3px;\n  position: relative;\n  left: -2rem;\n  height: 4rem;\n  float: left;\n  margin: -0.5rem 0 0 0;\n`\n\nconst validatePrice = (value: string) => {\n  if (typeof value === 'number') {\n    return null\n  }\n  const trim = value.trim()\n  return trim.length && Number.isNaN(Number.parseFloat(trim))\n    ? i18n.t`Must be number`\n    : null\n}\n\nexport const ZonePriceInput = React.forwardRef<\n  HTMLInputElement,\n  IZoneInputProps\n>(\n  ({ field, label, isDeliveryPrice, autoFocus = false }, ref) =>\n    isDeliveryPrice ? (\n      <DeliveryContainer>\n        <VerticalLine />\n        <LabelStyled>{label}</LabelStyled>\n        <FormInputTextBoxDeliveryStyled\n          field={field}\n          validate={validatePrice}\n          // @ts-ignore\n          ref={ref}\n        />\n      </DeliveryContainer>\n    ) : (\n      <PriceRangeContainer>\n        <FormInputTextBoxStyled\n          field={field}\n          validate={validatePrice}\n          autoFocus={autoFocus}\n        />\n      </PriceRangeContainer>\n    ),\n)\n","import React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputSelect } from '../../../atoms/FormInputSelect'\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GZoneColors } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { Colors } from '../../../styling'\nimport { ZoneColorsQuery } from '../Zones.graphql'\n\ninterface IZoneColorSelectorProps {\n  field?: FieldType\n}\n\nconst ColorOption = styled.div`\n  background-color: ${({ color }: { color: string }) => color};\n  color: ${Colors.white};\n  width: 6rem;\n  padding: 0.4rem 1rem;\n  margin: 0;\n  height: 100%;\n`\n\nconst QueryZoneColors = buildQuery<GZoneColors.Query, GZoneColors.Variables>(\n  ZoneColorsQuery,\n)\n\nconst makeStyles = () => ({\n  option: base => ({\n    ...base,\n    padding: 0,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    width: '8rem',\n    maxWidth: '8rem',\n  }),\n})\n\nexport const ZoneColorSelector: React.FC<IZoneColorSelectorProps> = ({\n  field = 'zoneColor.id',\n}) => (\n  <QueryZoneColors\n    render={({ zoneColors }) => (\n      <FormInputSelect<GZoneColors.ZoneColors>\n        field={field}\n        fieldIsPure={true}\n        options={[...zoneColors]}\n        width={8}\n        styles={makeStyles()}\n        defaultValue={RM.head(zoneColors)}\n        getOptionValue={RM.prop('id')}\n        formatOptionLabel={zoneColor => (\n          <ColorOption color={zoneColor.color}>{zoneColor.code}</ColorOption>\n        )}\n      />\n    )}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IZonePlaceholderInputProps {\n  label: string\n  display: string\n}\n\nconst LabelStyled = styled.div`\n  width: 3rem;\n  display: inline-block;\n`\n\nconst FormInputForPlaceholderStyled = styled(FormInputStyled)`\n  width: 3rem;\n  position: relative;\n  z-index: 4;\n`\n\nconst Container = styled.div`\n  margin: 0 0 0 1rem;\n`\n\nexport const ZonePlaceholderInput: React.FC<IZonePlaceholderInputProps> = ({\n  label,\n  display,\n}) => (\n  <Container>\n    <LabelStyled>{label}</LabelStyled>\n    <FormInputForPlaceholderStyled disabled={true} placeholder={display} />\n  </Container>\n)\n","import { AddCircle } from '@material-ui/icons'\nimport React, { Fragment } from 'react'\nimport { FormApi, NestedFieldComponentProps } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FZonePriceRangeFragment } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\nimport { Spacing } from '../../../styling'\nimport { ZonePlaceholderInput } from '../atoms/ZonePlaceholderInput'\nimport { ZonePriceInput } from '../atoms/ZonePriceInput'\n\ninterface IProps extends NestedFieldComponentProps<FZonePriceRangeFragment[]> {}\n\nconst AddButtonContainer = styled.div`\n  position: relative;\n  top: -6rem;\n`\n\nconst RemoveButtonContainer = styled.div`\n  position: relative;\n  top: -7rem;\n  left: 16rem;\n  height: 0;\n`\n\nexport const ZoneFormPriceRange: React.FC<IProps> = ({ fieldApi }) => {\n  return (\n    <>\n      {fieldApi.values.map((value, idx, values) => (\n        <Fragment key={idx}>\n          <ZonePriceInput\n            label=\"za\"\n            isDeliveryPrice={true}\n            field={[idx, 'price', 'value']}\n          />\n\n          {idx === values.length - 1 ? (\n            <ZonePlaceholderInput display=\"&infin;\" label=\"do\" />\n          ) : (\n            <ZonePriceInput\n              field={[idx, 'toPrice', 'value']}\n              autoFocus={true}\n            />\n          )}\n\n          {values.length > 1 && (\n            <RemoveButtonContainer>\n              <TouchButtonDelete\n                onDelete={() => fieldApi.removeValue('', idx)}\n              />\n            </RemoveButtonContainer>\n          )}\n        </Fragment>\n      ))}\n      <FormApi\n        render={formApi => (\n          <AddButtonContainer>\n            <TouchButton\n              disabled={formApi.submitting}\n              width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n              icon={AddCircle}\n              onClick={() =>\n                fieldApi.addValue('', {\n                  price: { value: 0 },\n                  toPrice: { value: 0 },\n                })\n              }\n            />\n          </AddButtonContainer>\n        )}\n      />\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ColorLens, Label } from '@material-ui/icons'\nimport React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Headline } from '../../../atoms/Headline'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { validateIsRequired } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { Colors, Spacing } from '../../../styling'\nimport { ZonePriceInput } from '../atoms/ZonePriceInput'\nimport { ZoneColorSelector } from '../molecules/ZoneColorSelector'\nimport { ZoneFormPriceRange } from '../molecules/ZoneFormPriceRange'\n\ninterface IZoneFormContentProps {}\n\nconst ZoneFormContentStyled = styled.div`\n  margin: ${Spacing.Middle};\n  color: ${Colors.black};\n`\n\nconst DescriptionUnderHeadline = styled.div`\n  color: ${Colors.greyDark};\n  padding-bottom: 0.2rem;\n`\n\nexport const ZoneFormContent: React.FC<IZoneFormContentProps> = props => (\n  <ZoneFormContentStyled>\n    <IconLine icon={Label}>\n      <FormInputTextBox\n        field=\"name\"\n        validate={validateIsRequired(i18n.t`Zone name`)}\n      />\n    </IconLine>\n\n    <IconLine icon={ColorLens}>\n      <ZoneColorSelector />\n    </IconLine>\n\n    <FormInputCheckbox\n      field=\"enabled\"\n      name=\"enabled\"\n      label={i18n.t`Is active`.toLocaleLowerCase()}\n    />\n\n    <Trans>\n      <Headline margin=\"0.5rem 0 0 0\">Delivery cost</Headline>\n      <DescriptionUnderHeadline>\n        according order total cost\n      </DescriptionUnderHeadline>\n    </Trans>\n    <ZonePriceInput field=\"minimalOrderPrice.value\" />\n    <NestedField field=\"priceRangeRules\" component={ZoneFormPriceRange} />\n  </ZoneFormContentStyled>\n)\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  isSubmitting: boolean\n  isModified: boolean\n  onSave(e: MouseEvent<HTMLButtonElement>): void\n  onGoBack(): void\n}\n\nexport const ZoneFormControls: React.FC<IProps> = ({\n  isSubmitting,\n  isModified,\n  onGoBack,\n  onSave,\n}) => (\n  <FlexRowSingle>\n    <FlexColumn widthGrowIndex={0.4} padding=\"0\">\n      <TouchButton\n        color={Colors.greyMiddle}\n        onClick={onGoBack}\n        text={i18n.t`Back`}\n        disabled={isSubmitting}\n      />\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={0.4} padding=\"0\">\n      <CanMutate mutationName=\"updateZone\">\n        <TouchButton\n          color={Colors.green}\n          text={i18n.t`Save zone`}\n          onClick={onSave}\n          disabled={isSubmitting || !isModified}\n        />\n      </CanMutate>\n    </FlexColumn>\n  </FlexRowSingle>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { FZoneFragmentDoc } from '../../../graph/generated'\nimport { GZones } from '../../../graph/types'\n\nexport const ZonesQuery = gql`\n  query GZones($branchesId: [ID!]!) {\n    zones(companyBranches: $branchesId) {\n      ...FZone\n    }\n  }\n  ${FZoneFragmentDoc}\n`\n\nexport const QueryZones = buildQuery<GZones.Query, GZones.Variables>(ZonesQuery)\n","import { observer } from 'mobx-react-lite'\nimport React, { useContext } from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FZoneFragment } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { QueryZones } from './ZoneListLoader.graphql'\n\ninterface IProps {}\n\nexport type TZone = FZoneFragment\n\nconst ZoneListContext = React.createContext<Maybe<ReadonlyArray<TZone>>>(null)\n\nexport const ZoneListLoader: React.FC<IProps> = observer(({ children }) => {\n  const { zone } = useRoot()\n  const branches = zone.branches.filter(zone.branchFilterPredicate)\n  if (branches.length === 0) {\n    return (\n      <ZoneListContext.Provider value={[]}>{children}</ZoneListContext.Provider>\n    )\n  }\n  return (\n    <QueryZones\n      fetchPolicy=\"cache-and-network\"\n      variables={{ branchesId: branches.map(RM.prop('id')) }}\n      renderLoading={false}\n      render={({ zones }, { loading }) => (\n        <ZoneListContext.Provider value={loading ? null : zones}>\n          {children}\n        </ZoneListContext.Provider>\n      )}\n    />\n  )\n})\n\nexport const useZoneList = () => {\n  return useContext(ZoneListContext)\n}\n","import { useReaction } from '@speedlo/hooks'\nimport React, { useCallback, useRef, useState } from 'react'\nimport { Form, IFormApi } from 'react-form'\nimport Goodbye from 'react-goodbye'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { ConfirmDialog } from '../../../atoms/ConfirmDialog'\nimport { Loading } from '../../../atoms/Loading'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useMZoneUpdate } from '../../../graph/generated'\nimport { logDebug } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\nimport { Spacing } from '../../../styling'\nimport { useZoneId } from '../hooks/useZoneId'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\nimport { ZoneFormContent } from '../molecules/ZoneFormContent'\nimport { ZoneFormControls } from '../molecules/ZoneFormControls'\nimport { useZoneList } from './ZoneListLoader'\n\nconst DeleteButtonContainer = styled.div`\n  width: ${Spacing.ButtonHeight + Spacing.DefaultSizeUnit};\n  margin-top: ${Spacing.Middle};\n`\n\nexport const ZoneFormPanel: React.FC = () => {\n  const zoneId = useZoneId()\n  const zoneList = useZoneList()\n  const { zone: zoneModel } = useRoot()\n  const { routeToZoneList } = useZoneRouteControl()\n  const [isModified, setModified] = useState(false)\n  const formApiRef = useRef<IFormApi | null>(null)\n  const { enqueueError, enqueueSuccess } = useSnackBar()\n\n  const [zoneUpdate] = useMZoneUpdate()\n\n  const onSubmit = useCallback(\n    async values => {\n      if (zoneId) {\n        const data = await zoneUpdate(\n          zoneModel.getZoneVariables(zoneId, values),\n        )\n        if (data) {\n          setModified(false)\n          routeToZoneList()\n          enqueueSuccess(i18n.t`Zone has been updated`)\n        }\n      }\n    },\n    [enqueueSuccess, routeToZoneList, zoneId, zoneModel, zoneUpdate],\n  )\n\n  const onDelete = useCallback(async () => {\n    if (zoneId) {\n      await zoneModel.destroyZone(zoneId)\n    }\n    routeToZoneList()\n  }, [routeToZoneList, zoneId, zoneModel])\n\n  useReaction(() => zoneModel.map.currentZonePoints !== null, setModified)\n\n  React.useEffect(() => {\n    if (zoneList && zoneList.length === 0) {\n      enqueueError(i18n.t`Requested zone wasn't found`)\n      routeToZoneList()\n    }\n  }, [enqueueError, routeToZoneList, zoneList])\n\n  const zone =\n    zoneId && zoneList ? zoneList.find(RM.propEq('id', zoneId)) || null : null\n\n  React.useEffect(() => {\n    zoneModel.map.clearZonePoints()\n  }, [zone, zoneModel.map])\n\n  if (!zone) {\n    return <Loading text={i18n.t`Loading form...`} />\n  }\n\n  return (\n    <Form\n      defaultValues={zone}\n      onChange={formState => {\n        logDebug('zone form change', formState.values)\n        setModified(true)\n      }}\n      onSubmit={onSubmit}\n      render={formApi => {\n        formApiRef.current = formApi\n        return (\n          <Card padding={0}>\n            <ZoneFormControls\n              isSubmitting={formApi.submitting}\n              isModified={isModified}\n              onSave={formApi.submitForm}\n              onGoBack={routeToZoneList}\n            />\n            <ZoneFormContent />\n\n            <CanMutate mutationName=\"destroyZone\">\n              <DeleteButtonContainer>\n                <TouchButtonDelete\n                  disabled={formApi.submitting}\n                  confirmText={i18n.t`Remove zone ${zone.name}?`}\n                  onDelete={onDelete}\n                />\n              </DeleteButtonContainer>\n            </CanMutate>\n\n            <Goodbye when={isModified}>\n              {({ isShow, handleOk, handleCancel }) => (\n                <ConfirmDialog\n                  isShow={isShow}\n                  confirmText={i18n.t`Do you want to cancel changes for the zone?`}\n                  onConfirm={handleOk}\n                  onCancel={handleCancel}\n                />\n              )}\n            </Goodbye>\n          </Card>\n        )\n      }}\n    />\n  )\n}\n","import { OverlayView } from '@react-google-maps/api'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { gpsToLatLng } from '../helpers/gps'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  branch: FCompanyBranchFragment\n  isActive?: boolean\n}\n\nconst BranchNameStyled = styled.div`\n  ${getColors} font-size: 1.3rem;\n  white-space: nowrap;\n  padding: 0.2rem 0.5rem;\n`\n\nexport const MapCompanyBranchMarker: React.FC<IProps> = ({\n  branch,\n  isActive = true,\n}) => (\n  <OverlayView\n    getPixelPositionOffset={(width, height) => ({\n      x: -(width / 2),\n      y: -(height / 2),\n    })}\n    mapPaneName={OverlayView.MARKER_LAYER}\n    position={gpsToLatLng(branch.gps)}\n  >\n    <BranchNameStyled isActive={isActive}>{branch.name}</BranchNameStyled>\n  </OverlayView>\n)\n\nfunction getColors({ isActive }: { isActive: boolean }) {\n  return css`\n    background-color: ${isActive ? Colors.green : Colors.greyLight};\n    color: ${isActive ? Colors.white : Colors.greyDark};\n  `\n}\n","import { Polygon } from '@react-google-maps/api'\nimport React from 'react'\n\nimport { gpsToLatLng } from '../../../helpers/gps'\n\ninterface IZoneMapAreaProps {\n  points: ReadonlyArray<GeoPoint>\n  color: string\n  priority: number\n  onFocus?(): void\n}\n\nexport const ZoneMapArea: React.FC<IZoneMapAreaProps> = ({\n  points,\n  color,\n  priority,\n  onFocus,\n}) => {\n  const onAreaFocus = React.useCallback(\n    (e: google.maps.PolyMouseEvent) => {\n      if (onFocus) {\n        e.stop()\n        onFocus()\n      }\n    },\n    [onFocus],\n  )\n\n  return (\n    <Polygon\n      path={points.map(gpsToLatLng)}\n      options={{\n        fillColor: color,\n        fillOpacity: 0.3,\n        strokeWeight: 0,\n        zIndex: 5000 - priority,\n      }}\n      editable={false}\n      draggable={false}\n      onDblClick={onAreaFocus}\n    />\n  )\n}\n","import { Polygon } from '@react-google-maps/api'\nimport React from 'react'\n\nimport { gpsToLatLng, latLngToGps } from '../../../helpers/gps'\n\ninterface IZoneMapAreaProps {\n  points: ReadonlyArray<GeoPoint>\n  color: string\n  priority: number\n  onChange(points: GeoPoint[]): void\n  onClear(): void\n}\n\nexport const ZoneMapEditableArea: React.FC<IZoneMapAreaProps> = ({\n  onChange,\n  onClear,\n  points,\n  color,\n}) => {\n  const polygonRef = React.useRef<google.maps.Polygon | null>(null)\n  const listenersRef = React.useRef<google.maps.MapsEventListener[]>([])\n\n  const onAreaChange = React.useCallback(() => {\n    if (polygonRef.current) {\n      const path = polygonRef.current.getPath()\n      onChange(path.getArray().map(latLngToGps))\n    }\n  }, [onChange])\n\n  const onLoad = React.useCallback(\n    (polygon: google.maps.Polygon) => {\n      polygonRef.current = polygon\n      const path = polygon.getPath()\n      listenersRef.current.push(\n        path.addListener('set_at', onAreaChange),\n        path.addListener('insert_at', onAreaChange),\n        path.addListener('remove_at', onAreaChange),\n      )\n    },\n    [onAreaChange],\n  )\n\n  const onUnmount = React.useCallback(() => {\n    onClear()\n    listenersRef.current.forEach(lis => lis.remove())\n    polygonRef.current = null\n  }, [onClear])\n\n  return (\n    <Polygon\n      path={points.map(gpsToLatLng)}\n      options={{\n        fillColor: color,\n        fillOpacity: 0.6,\n        strokeWeight: 2,\n        zIndex: 10000,\n      }}\n      editable={true}\n      draggable={true}\n      onDragEnd={onAreaChange}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    />\n  )\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useZoneModel() {\n  const { zone: zoneModel } = useRoot()\n  return zoneModel\n}\n","import { autorun } from 'mobx'\nimport React, { useCallback } from 'react'\n\nimport { BaseMap } from '../../../atoms/BaseMap'\nimport { FCompanyBranchFragment } from '../../../graph/generated'\nimport { MapCompanyBranchMarker } from '../../../molecules/MapCompanyBranchMarker'\nimport { Colors } from '../../../styling'\nimport { ZoneMapArea } from '../atoms/ZoneMapArea'\nimport { ZoneMapEditableArea } from '../atoms/ZoneMapEditableArea'\nimport { useZoneId } from '../hooks/useZoneId'\nimport { useZoneModel } from '../hooks/useZoneModel'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\nimport { TZone, useZoneList } from '../organisms/ZoneListLoader'\n\nexport const ZoneMapControl: React.FC = () => {\n  const zoneModel = useZoneModel()\n  const editZoneId = useZoneId()\n  const zoneList = useZoneList()\n  const { routeToZoneEdit } = useZoneRouteControl()\n\n  const branches = zoneModel.branches.filter(zoneModel.branchFilterPredicate)\n\n  const isActive = React.useCallback(\n    (companyBranchId: ID) => {\n      return (\n        !zoneModel.hasBranchFilter ||\n        companyBranchId === zoneModel.branchFilterId\n      )\n    },\n    [zoneModel],\n  )\n\n  React.useEffect(\n    () =>\n      autorun(() => {\n        if (zoneModel.branch && zoneModel.map.isReady) {\n          zoneModel.map.panToBranch(zoneModel.branch)\n        }\n      }),\n    [zoneModel],\n  )\n\n  const renderZoneArea = (zone: TZone) => {\n    const areaProps = {\n      key: `zone${zone.id}`,\n      points: zone.geoPolygon,\n      priority: zone.priority,\n      color:\n        isActive(zone.companyBranch.id) && zone.enabled\n          ? zone.zoneColor.color\n          : Colors.greyMiddle,\n    }\n\n    if (zone.id === editZoneId) {\n      return (\n        <ZoneMapEditableArea\n          {...areaProps}\n          onChange={zoneModel.map.updateZonePoints}\n          onClear={zoneModel.map.clearZonePoints}\n        />\n      )\n    }\n\n    return (\n      <ZoneMapArea\n        {...areaProps}\n        onFocus={() => {\n          if (isActive(zone.companyBranch.id)) {\n            routeToZoneEdit(zone.id)\n          }\n        }}\n      />\n    )\n  }\n\n  const renderBranchLabel = useCallback(\n    (branch: FCompanyBranchFragment) => (\n      <MapCompanyBranchMarker\n        key={`branch${branch.id}`}\n        branch={branch}\n        isActive={isActive(branch.id)}\n      />\n    ),\n    [isActive],\n  )\n\n  return (\n    <BaseMap model={zoneModel.map}>\n      {zoneList && zoneList.map(renderZoneArea)}\n      {branches && branches.map(renderBranchLabel)}\n    </BaseMap>\n  )\n}\n","import { observer } from 'mobx-react-lite'\n\nimport { useRoot } from './RootProvider'\n\nexport const UserHasMultipleBranches: React.FC = observer(({ children }) => {\n  const { user } = useRoot()\n  return user.hasSingleBranch ? null : (children as any)\n})\n","import { AddCircle } from '@material-ui/icons'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { useZoneModel } from '../hooks/useZoneModel'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\n\nexport const CreateZoneButton: React.FC = observer(() => {\n  const zoneModel = useZoneModel()\n  const { routeToZoneEdit } = useZoneRouteControl()\n  return (\n    <TouchButton\n      text={\n        zoneModel.hasBranchFilter\n          ? i18n.t`Create zone for branch`\n          : i18n.t`Select branch to create zone`\n      }\n      onClick={() => zoneModel.createZone(routeToZoneEdit)}\n      disabled={!zoneModel.hasBranchFilter}\n      color={Colors.turquoise}\n      textNextToIcon={true}\n      height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n      icon={AddCircle}\n    />\n  )\n})\n","import { Edit } from '@material-ui/icons'\nimport React from 'react'\nimport { SortableElement } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { FCompanyBranchFragment, FZoneFragment } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IZoneListCardProps {\n  zone: FZoneFragment\n  branch: FCompanyBranchFragment\n  onEdit(): void\n}\n\nconst ZoneNameStyled = styled.div`\n  font-size: 1.125rem;\n  margin-top: 0.2rem;\n`\n\nconst ZoneDescriptionStyled = styled.div`\n  font-size: 0.875rem;\n`\nconst ZoneFlexRowStyled = styled(FlexRowSingle)`\n  height: ${Spacing.ButtonHeight + Spacing.DefaultSizeUnit};\n`\n\nexport const ZoneListCard = SortableElement<IZoneListCardProps>(\n  ({ zone, branch, onEdit }) => (\n    <Card\n      key={zone.id}\n      padding={0}\n      color={zone.enabled ? zone.zoneColor.color : Colors.greyMiddle}\n      onClick={onEdit}\n    >\n      <ZoneFlexRowStyled>\n        <FlexColumn fixedWidth={true} padding=\"0 0.5rem 0 0\">\n          <SizerButton>\n            <TouchButton icon={Edit} />\n          </SizerButton>\n        </FlexColumn>\n        <FlexColumn widthGrowIndex={1}>\n          <ZoneNameStyled>\n            {zone.name}\n            {` [P${zone.priority}]`}\n          </ZoneNameStyled>\n          <ZoneDescriptionStyled>{branch.name}</ZoneDescriptionStyled>\n        </FlexColumn>\n        <FlexColumn padding=\"0\">\n          <DragHandle />\n        </FlexColumn>\n      </ZoneFlexRowStyled>\n    </Card>\n  ),\n)\n","import * as R from 'ramda'\nimport React, { Fragment } from 'react'\nimport { SortableContainer, SortEndHandler } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { FCompanyBranchFragment, FZoneFragment } from '../../../graph/generated'\nimport { TZoneModel } from '../../../segments/zones/models/ZoneModel'\nimport { ZoneListCard } from '../atoms/ZoneListCard'\n\ntype TBranch = FCompanyBranchFragment\ntype TZone = FZoneFragment\n\ninterface IZoneListProps {\n  branches: TBranch[]\n  zones: TZone[]\n  zoneModel: TZoneModel\n  onZoneEdit(zoneID: ID): void\n}\n\nconst ZoneListContainerStyled = SortableContainer(styled.div`\n  margin-top: 0.5rem;\n  cursor: arrow;\n`)\n\nconst sortZones = R.sortWith<TZone>([\n  R.ascend(R.path(['companyBranch', 'name'])),\n  R.descend(R.prop('priority')),\n])\n\nconst groupByBranch = R.groupBy((zone: TZone) => zone.companyBranch.id)\n\nexport const ZoneList: React.FC<IZoneListProps> = ({\n  branches,\n  zones,\n  zoneModel,\n  onZoneEdit,\n}) => {\n  const renderZone = (zone: TZone, idx: number) => (\n    <ZoneListCard\n      key={zone.id}\n      zone={zone}\n      branch={branches.find(R.propEq('id', zone.companyBranch.id))!}\n      index={idx}\n      collection={zone.companyBranch.id}\n      onEdit={() => onZoneEdit(zone.id)}\n    />\n  )\n  const renderBranch = (branch: TBranch, branchZones: TZone[]) => (\n    <Fragment key={branch.id}>\n      <CardListTitle>{branch.name}</CardListTitle>\n      {branchZones.map(renderZone)}\n    </Fragment>\n  )\n\n  let output\n  let onSortEnd: SortEndHandler\n\n  if (branches.length === 1) {\n    const sorted = sortZones(zones)\n    output = sorted.map(renderZone)\n    onSortEnd = ({ oldIndex, newIndex }) => {\n      const zone = sorted[oldIndex]\n      zoneModel.changeZonePriority(zone, oldIndex, newIndex)\n    }\n  } else {\n    const grouped = R.mapObjIndexed(sortZones, groupByBranch(zones))\n    output = branches.map(branch => {\n      const branchZones = grouped[branch.id]\n      return branchZones ? renderBranch(branch, branchZones) : null\n    })\n    onSortEnd = ({ oldIndex, newIndex, collection }) => {\n      const group = grouped[collection]\n      const zone = group[oldIndex]\n      zoneModel.changeZonePriority(zone, oldIndex, newIndex)\n    }\n  }\n\n  return (\n    <ZoneListContainerStyled\n      useDragHandle={true}\n      lockAxis=\"y\"\n      onSortEnd={onSortEnd}\n    >\n      {output}\n    </ZoneListContainerStyled>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { BulletList } from 'react-content-loader'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useZoneModel } from '../hooks/useZoneModel'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\nimport { ZoneList } from '../molecules/ZoneList'\nimport { useZoneList } from './ZoneListLoader'\n\nexport const ZoneListControl: React.FC = () => {\n  const zoneList = useZoneList()\n  const zoneModel = useZoneModel()\n  const { routeToZoneEdit } = useZoneRouteControl()\n  if (zoneList === null) {\n    return <BulletList primaryOpacity={0.2} secondaryOpacity={0.2} />\n  }\n  if (zoneModel.brand === null) {\n    return (\n      <CardListTitle>\n        <Trans>Select brand to see its zones</Trans>\n      </CardListTitle>\n    )\n  }\n  return (\n    <ZoneList\n      zoneModel={zoneModel}\n      zones={zoneList.filter(zoneModel.zoneFilterPredicate)}\n      branches={zoneModel.root.user.filterBranches(\n        zoneModel.branchFilterPredicate,\n      )}\n      onZoneEdit={routeToZoneEdit}\n    />\n  )\n}\n","import { autorun } from 'mobx'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { FCompanyBranchBrand } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { CompanyBranchDropdown } from '../../../molecules/CompanyBranchDropdown'\nimport { CompanyBrandDropdown } from '../../../molecules/CompanyBrandDropdown'\n\nexport const ZoneFilter: React.FC = observer(() => {\n  const { user, zone } = useRoot()\n  const branches = user.branches\n\n  const getBrandBranches = React.useCallback(\n    (brand: Maybe<FCompanyBranchBrand>) =>\n      brand === null\n        ? []\n        : user.branches.filter(RM.pathEq(['brand', 'id'], brand.id)),\n    [user.branches],\n  )\n\n  React.useEffect(\n    () =>\n      autorun(() => {\n        if (branches.length === 1) {\n          zone.setBranchFilter(RM.head(branches)!)\n        }\n      }),\n    [branches, zone],\n  )\n\n  // no filter is shown for less than 1 branch available\n  if (branches.length <= 1) {\n    return null\n  }\n\n  const singleBrand = user.brands.length === 1 ? RM.head(user.brands)! : null\n  if (singleBrand) {\n    zone.setBrandFilter(singleBrand, getBrandBranches(zone.brand))\n  }\n\n  return (\n    <>\n      {!singleBrand && (\n        <CompanyBrandDropdown\n          selectedBrand={zone.brand}\n          onSelection={brand => {\n            if (brand === null) {\n              zone.clearBrandFilter()\n            } else {\n              zone.setBrandFilter(brand, getBrandBranches(brand))\n            }\n          }}\n        />\n      )}\n      {!singleBrand && <VerticalGap />}\n      <CompanyBranchDropdown\n        branches={getBrandBranches(zone.brand)}\n        selectedBranch={zone.branch}\n        autoFocus={Boolean(singleBrand)}\n        formatOptionLabel={RM.prop('name')}\n        isClearable={true}\n        onSingleSelection={branch => {\n          if (!branch) {\n            zone.clearBranchFilter()\n          } else {\n            zone.setBranchFilter(branch)\n          }\n        }}\n      />\n    </>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { ScrollArea } from '../../../atoms/ScrollArea'\nimport { UserHasMultipleBranches } from '../../../atoms/UserHasMultipleBranches'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CreateZoneButton } from '../molecules/CreateZoneButton'\nimport { ZoneListControl } from '../organisms/ZoneListControl'\nimport { ZoneFilter } from './ZoneFilter'\n\nconst ZoneMenuContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nconst FixedHeaderContainer = styled.div`\n  flex: 0 0 auto;\n`\nconst ScrollAreaContainer = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n`\nexport const ZoneMenuPanel = React.memo(() => {\n  const { zone } = useRoot()\n  useAutorunWhenSingleBranch(branch => {\n    zone.setBranchFilter(branch)\n  })\n  return (\n    <ZoneMenuContainer>\n      <FixedHeaderContainer>\n        <UserHasMultipleBranches>\n          <Card>\n            <ZoneFilter />\n          </Card>\n        </UserHasMultipleBranches>\n        <CanMutate mutationName=\"createZone\">\n          <CreateZoneButton />\n        </CanMutate>\n      </FixedHeaderContainer>\n\n      <ScrollAreaContainer>\n        <ScrollArea>\n          <ZoneListControl />\n        </ScrollArea>\n      </ScrollAreaContainer>\n    </ZoneMenuContainer>\n  )\n})\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { ZoneFormPanel } from '../organisms/ZoneFormPanel'\nimport { ZoneListLoader } from '../organisms/ZoneListLoader'\nimport { ZoneMapControl } from '../organisms/ZoneMapControl'\nimport { ZoneMenuPanel } from '../organisms/ZoneMenuPanel'\n\ninterface IProps extends RouteComponentProps<{ zoneId?: ID }> {}\n\nexport const ZonePageLayout: React.FC<IProps> = ({ match }) => {\n  const isEditing = Boolean(match.params.zoneId)\n  return (\n    <ZoneListLoader>\n      <PageLayoutResponsive\n        pageTitle={i18n.t`Delivery zones`}\n        useBackButton={true}\n        backRoute=\"/settings\"\n      >\n        <PageLayoutFullHeightItem\n          widthInColumns={6}\n          column={10}\n          rowInMobile={2}\n          withScrollArea={isEditing}\n        >\n          {isEditing ? <ZoneFormPanel /> : <ZoneMenuPanel />}\n        </PageLayoutFullHeightItem>\n        <PageLayoutFullHeightItem\n          widthInColumns={10}\n          rowInMobile={1}\n          forcePercentHeightInMobile={60}\n        >\n          <ZoneMapControl />\n        </PageLayoutFullHeightItem>\n      </PageLayoutResponsive>\n    </ZoneListLoader>\n  )\n}\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { ZonePageLayout } from '../../../segments/zones/pages/ZonePageLayout'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\n\ninterface IZoneMenuRoutesProps extends RouteComponentProps<{}> {}\n\nexport const ZoneMenuRoutes: React.FC<IZoneMenuRoutesProps> = () => {\n  const { getRouteToZone } = useZoneRouteControl()\n  return (\n    <Switch>\n      <Route path={getRouteToZone(':zoneId?')} component={ZonePageLayout} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default ZoneMenuRoutes\n"],"sourceRoot":""}