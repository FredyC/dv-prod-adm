{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/Headline.tsx","atoms/MarginBox.tsx","atoms/Sizer.tsx","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/CanQuery.tsx","atoms/HorizontalSeparator.tsx","hooks/useGuardedMutation.tsx","atoms/Price.tsx","atoms/FlexColumn.tsx","atoms/SelectControlFlat.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","hooks/useExecutableQuery.ts","atoms/TimeBadge.tsx","atoms/CardListTitle.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","atoms/RelativeLink.tsx","atoms/DeliveryMinutes.tsx","molecules/DeliveryTimeDialog.tsx","atoms/FormInputDateTime.tsx","atoms/FlexAutoHeight.tsx","segments/order/molecules/OrderTicker.graphql.ts","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","atoms/ObserverWhen.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderWarePriceLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderIdLine.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/atoms/OrderTimeLabel.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareLine.tsx","segments/order/molecules/OrderWareList.tsx","segments/order/organisms/OrderDetail.graphql.ts","molecules/ConfirmButton.tsx","segments/order/molecules/OrderCancelButton.tsx","segments/order/molecules/OrderDeliveryToPickup.tsx","segments/order/molecules/OrderStateButton.tsx","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.graphql.ts","segments/order/organisms/OrderStateFlow.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/atoms/OrderBox.tsx","segments/overview/molecules/ClosureHistoryFilter.tsx","segments/overview/organisms/ClosureHistoryLoader.graphql.ts","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/pages/ClosureHistoryPage.tsx","atoms/MonospaceOutput.tsx","segments/overview/organisms/ClosureStatisticsContent.graphql.ts","segments/overview/organisms/ClosureStatisticsContent.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/pages/ClosurePage.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/molecules/StatisticsFilter.tsx","segments/overview/hooks/createStatisticsQuery.ts","segments/overview/organisms/DailyStatisticsLoader.graphql.ts","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/organisms/DailyStatisticsContent.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/organisms/OrdersStatisticsList.graphql.ts","segments/overview/organisms/OrdersStatisticsLoader.graphql.ts","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/organisms/OrdersStatisticsList.tsx","segments/overview/organisms/OrdersStatisticsSummary.tsx","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/routes/OverviewRoutes.tsx"],"names":["IconLineWrap","styled","div","withConfig","displayName","componentId","DescriptionContainer","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_1__","_RootProvider__WEBPACK_IMPORTED_MODULE_2__","mutationName","useRoot","user","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","Headline","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","MarginBox","SizerContainer","_ref$widthUnit","widthUnit","height","_ref2$heightUnit","heightUnit","Sizer","_ref3$widthUnit","_ref3$heightUnit","className","objectWithoutProperties","wrap","react_default","NoAccess","PageLayoutFullHeightItem","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","id","FlexRowSingle","_ref$justify","justify","CanQuery","queryName","canQuery","HorizontalSeparator","_styling__WEBPACK_IMPORTED_MODULE_2__","HorizontalSeparatorStyled","_ref$visible","visible","useGuardedMutation","mutation","options","defaultMessage","_i18n__WEBPACK_IMPORTED_MODULE_9__","_","_useSnackBar","useSnackBar","enqueueSnackbar","enqueueError","enqueueWarning","handleUserErrors","useCallback","userErrors","forEach","handleGraphQLErrors","errors","filter","RM","propEq","map","prop","handleError","err","isApolloError","networkError","graphQLErrors","reportError","action","react__WEBPACK_IMPORTED_MODULE_5___default","ShowFeedbackButton","key","mutate","useMutation","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","variables","result","_data","_context","prev","next","sent","abrupt","data","getUserErrors","t0","stop","this","_x","apply","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_10__","onClick","Raven","showReportDialog","_lingui_react__WEBPACK_IMPORTED_MODULE_2__","Price","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","formatPrice","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_6___default","hasSelection","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","idx","Component","defaultProps","getItemValue","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","react","placeholder","i18n","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","FormSubmit","react_form__WEBPACK_IMPORTED_MODULE_2__","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","keys","fieldName","isEmpty","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","utils","MomentUtils","DeliveryTimeBadge","_material_ui_icons__WEBPACK_IMPORTED_MODULE_0__","_speedlo_hooks__WEBPACK_IMPORTED_MODULE_1__","date_fns__WEBPACK_IMPORTED_MODULE_2__","emotion__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_5__","cancelIconPadding","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","useExecutableQuery","query","client","useApolloClient","useObservable","loading","wasExecuted","hasAnyError","Boolean","error","execute","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","queryResult","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","runInAction","reportFailingQuery","getOperationName","reset","TimeBadgeStyled","white","variants","_variants","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","red","orange","bigNumberStyle","_templateObject","dashStyle","_templateObject2","clickable","_templateObject3","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","CardListTitle","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","companyBranch","_atoms_DeliveryTimeBadge__WEBPACK_IMPORTED_MODULE_10__","Date","orderStateCategory","OrderStateCategoryEnum","Cancel","deliveryType","enum","DeliveryTypeEnum","Pickup","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","formatAddress","address","_atoms_CustomerIdentity__WEBPACK_IMPORTED_MODULE_9__","_atoms_Price__WEBPACK_IMPORTED_MODULE_5__","totalSum","currency","code","isPaidWithCard","NoteLine","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_2__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_i18n__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","CurrentNoteStyled","span","PreviousNoteStyled","note","previousNote","RelativeLink","from","linkProps","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","deliveryMinutes","pickupMinutes","MinutesContainer","MinutesItem","DeliveryMinutes","onMinuteClick","initialMinutes","_React$useState","useState","_React$useState2","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setSelected","getMinutesForDeliveryType","yellow","type","DeliveryTimeDialog","onConfirm","onCancel","cancelText","refApi","_useState","_useState2","isOpen","setOpen","openDialog","closeDialog","current","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","open","onClose","_atoms_DeliveryMinutes__WEBPACK_IMPORTED_MODULE_4__","Messenger","_TouchButton__WEBPACK_IMPORTED_MODULE_6__","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","FormInputDateTime","field","_ref$inline","inline","pickerProps","Picker","InlineDateTimePicker","DateTimePicker","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_6__","react_form__WEBPACK_IMPORTED_MODULE_4__","render","fieldApi","setValue","onOpen","setTouched","format","ampm","showTabs","maxDateMessage","_i18n__WEBPACK_IMPORTED_MODULE_5__","minDateMessage","AutoHeight","OrderTickerFragment","gql","FAddressFragmentDoc","CustomerFragment","FormInputDate","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_5__","react_form__WEBPACK_IMPORTED_MODULE_3__","okLabel","cancelLabel","clearLabel","todayLabel","FlexRow","ObserverWhen","test","renderSuccess","renderFailure","index_module","ContactLines","phones","emails","renderContact","contact","description","isMail","href","replace","renderClickableLink","email","OrderCountLine","total","_lingui_react","OrderWareLineWrap","NameContainerStyled","OrderWarePriceLine","_ref$highlight","highlight","OrderCartTotalsContainer","OrderDetailTotals","OrderWarePriceLine_OrderWarePriceLine","transportFee","coverPrice","totalDiscount","OrderIdLine","displayedId","OrderRuleLines","rules","join","OrderTimeLabel","OrderStats","stats","formatTimeWithoutTodayDate","driver","_order$driver$user","Timelapse","labelMap","_labelMap","defineProperty","NewOrders","i18nMark","Preparing","ReadyToDeliver","OnWay","Finished","OrderTimeLine","orderTiming","reject","createdAt","timing","CodeContainerStyled","OrderWareLine","OrderWareLine_OrderWareLineWrap","OrderWareLine_NameContainerStyled","OrderWareLine_PriceContainerStyled","OrderWareList","orderWares","orderWare","OrderWareLine_OrderWareLine","recipe","nameLabel","sidedishes","sidedish","QueryOrderDetail","buildQuery","PriceFragment","EmailFragment","PhoneFragment","OrderDriverFragment","ConfirmButton","confirmNode","_ref$initialColor","initialColor","_ref$confirmColor","confirmColor","_ref$confirmDisableMs","confirmDisableMs","_ref$resetToInitialMs","resetToInitialMs","SECOND","slicedToArray","needConfirm","setNeedConfirm","buttonRef","useRef","useEffect","timer","setTimeout","clearTimeout","TouchButton","OrderCancelButton","orderId","cancelOrder","CancelOrderMutation","ConfirmButton_ConfirmButton","OrderDeliveryToPickup","isDelivery","changeToPickup","ChangeOrderToPickupMutation","text","stateLabels","_stateLabels","OrderStateEnum","Accepted","OrderStateButton","nextState","stateModel","updateOrderState","DriverName","backgroundColor","background","ButtonHeight","borderWidth","borderRadius","Button","valueContainer","singleValue","fontSize","OrderDriverSelect","drivers","selectedDriver","isLoading","onSelect","onClear","onReload","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","Icon","react_select_esm","DropdownIndicator","OrderStateDeliver","branchId","OrderStateDeliver_graphql","fetchPolicy","orderDriver","refetch","OrderDriverSelect_OrderDriverSelect","removeDriver","selectDriver","deliverOrder","OrderStateFlowContainerWrapper","Control","OrderStateFlowContainer","Children","child","OrderStateTimeNotification","sendTimeNotification","QueryOrderState","OrderStateFlow_graphql_templateObject","OrderStateCategoryFragment","OrderStateNewOrder","OrderStateFlowContainer_OrderStateFlowContainer","canCancel","OrderCancelButton_OrderCancelButton","OrderDeliveryToPickup_OrderDeliveryToPickup","OrderStateTimeNotification_OrderStateTimeNotification","OrderStateButton_OrderStateButton","OrderStateAcceptedOrder","canDeliver","OrderStateDeliver_OrderStateDeliver","OrderStateReadyToDeliverOrder","OrderStateOnWayOrder","OrderStateFinishedOrder","OrderStateFlow","allowedCategories","VError","isCancelable","stateProps","OrderStateFlow_OrderStateNewOrder","OrderStateFlow_OrderStateAcceptedOrder","OrderStateFlow_OrderStateReadyToDeliverOrder","OrderStateFlow_OrderStateOnWayOrder","OrderStateFlow_OrderStateFinishedOrder","OrderDetailContainerStyled","OrderDetail","OrderWareList_OrderWareList","OrderDetailTotals_OrderDetailTotals","OrderRuleLines_OrderRuleLines","allAppliedRules","OrderCountLine_OrderCountLine","customerOrdersCountCurrent","customerOrdersCountTotal","ContactLines_ContactLines","OrderIdLine_OrderIdLine","OrderTimeLine_OrderTimeLine","OrderStats_OrderStats","OrderStateFlow_OrderStateFlow","OrderBox_OrderBox","OrderBoxStyled","OrderBox","toggleOrderDetail","isOrderDetailOpen","ObserverWhen_ObserverWhen","OrderDetail_OrderDetail","ClosureHistoryFilter","autoOk","ClosureHistoryQuery","context","createContext","ClosureHistoryLoader","statistics","_useExecutableQuery","es","onSubmit","formValues","closureBranch","dateFrom","formatDateISO","dateTo","defaultValues","subDays","ClosureHistoryLoader_context","Provider","ClosureHistoryTable","observer","_useClosureHistory","useContext","Loading","financialReports","report","reportSequence","reportDatetime","index_es","ClosureCurrentButton","react_router_dom","ButtonToRight","ClosureStatisticsFilter","showCurrent","setClosureBranch","ClosureCurrentButton_ClosureCurrentButton","ClosureHistoryPage","ClosureHistoryLoader_ClosureHistoryLoader","FullPageLayout","pageTitle","useBackButton","backRoute","ClosureHistoryFilter_ClosureHistoryFilter","MonospaceOutputStyled","p","MonospaceOutput","RegExp","FinancialReport","ClosureStatisticsContent_graphql_templateObject","QueryFinancialReport","ClosureStatisticsContent","_ref$reportId","reportId","WithRoot","showReport","renderLoading","_ref4","lastReport","MonospaceOutput_MonospaceOutput","plainData","ClosureHistoryButton","ClosureSubmitButton","ClosureStatisticsControl","enqueueSuccess","history","useRouterContext","createClosure","CreateFinancialReport","asyncToGenerator","regenerator_default","companyBranchId","useObserver","ClosureSubmitButton_ClosureSubmitButton","ClosureStatisticsControl_ButtonToRight","ClosureHistoryButton_ClosureHistoryButton","ClosurePage","match","ClosureStatisticsControl_ClosureStatisticsControl","params","ClosureStatisticsContent_ClosureStatisticsContent","StatisticsBranchFilter","setBranchFilter","clearBranchFilter","StatisticsFilter","values","0","branchesFilter","getInitialResult","createStatisticsQuery","useStatisticsQuery","dateTimeFrom","dateTimeTo","executeFilter","isoDate","resetResult","DailyStatisticsLoader_graphql_templateObject","DailyStatisticsLoader","_useStatisticsQuery","updateFilter","DailyStatisticsLoader_context","DailyStatisticsContent","_useDailyStatistics","dailyStatisticsPlain","categoryStatisticsPlain","deliveryStatisticsPlain","driversStatisticsPlain","DailyStatisticsPage","DailyStatisticsLoader_DailyStatisticsLoader","StatisticsBranchFilter_StatisticsBranchFilter","StatisticsFilter_StatisticsFilter","OrdersStatisticsListQuery","OrdersStatisticsList_graphql_templateObject","OrdersStatisticsLoader_graphql_templateObject","useOrderStatistics","OrdersStatisticsLoader","OrdersStatisticsLoader_context","OrdersStatisticsList","_useRoot","orderModel","_useOrderStatistics","loaderRef","orders","Map","measureCache","useMemo","CellMeasurerCache","defaultHeight","minHeight","clear","clearAll","resetLoadMoreRowsCache","queryMoreOrders","startIndex","stopIndex","list","index","pagination","fromIndex","toIndex","toConsumableArray","set","shift","totalCount","_data$stats$finishedO","finishedOrders","finishedCount","cancelledCount","dist_es","rowCount","isRowLoaded","has","loadMoreRows","_ref5","onRowsRendered","registerChild","rowHeight","deferredMeasurementCache","noRowsRenderer","rowRenderer","_ref6","parent","get","columnIndex","rowIndex","cache","_ref7","measure","o","StatPanel","StatLabel","h1","StatValue","OrdersStatisticsSummary","onlinePayments","fees","orderStatisticsPlain","OrdersStatisticsPage","OrdersStatisticsLoader_OrdersStatisticsLoader","FlexAutoHeight","PageLayout","layouts","i","x","y","w","h","showSoundControl","scrollPageTitle","ClosureButton","DailyStatisticsButton","OrdersStatisticsButton","OverviewPage","OverviewRoutes_OverviewRoutes","OverviewRoutes","PageTitle","react_router","SecureRoute","exact","path","NotFoundPage"],"mappings":"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","file":"static/js/173.e56063c2.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return user.canMutate(mutationName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import styled from 'styled-components'\n\nexport interface IProps {\n  margin: string\n  className?: string\n}\n\nexport const MarginBox = styled('div')`\n  margin: ${(props: IProps) => props.margin};\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../styling'\nimport { MarginBox } from './MarginBox'\n\ninterface IProps {\n  width?: number\n  widthUnit?: string\n  height?: number\n  heightUnit?: string\n  margin?: string\n  className?: string\n}\n\nconst widthProperty = ({\n  width: width,\n  widthUnit: widthUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (width === undefined) {\n    return ''\n  } else {\n    return `width: ${width}${widthUnit}`\n  }\n}\n\nconst heightProperty = ({\n  height: height,\n  heightUnit: heightUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (height === undefined) {\n    return ''\n  } else {\n    return `height: ${height}${heightUnit}`\n  }\n}\n\nconst SizerContainer = styled('div')`\n  ${widthProperty};\n  ${heightProperty};\n`\n\nexport const Sizer: React.FC<IProps> = ({\n  width,\n  widthUnit = Spacing.DefaultSizeUnit,\n  height,\n  heightUnit = Spacing.DefaultSizeUnit,\n  margin,\n  children,\n  className,\n  ...props\n}) => {\n  const wrap = (\n    <SizerContainer\n      width={width}\n      widthUnit={widthUnit}\n      height={height}\n      heightUnit={heightUnit}\n      className={className}\n      {...props}\n    >\n      {children}\n    </SizerContainer>\n  )\n\n  return margin === undefined ? (\n    wrap\n  ) : (\n    <MarginBox margin={margin}>{wrap}</MarginBox>\n  )\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return user.canQuery(queryName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import { Trans } from '@lingui/macro'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport Raven from 'raven-js'\nimport React, { useCallback } from 'react'\nimport { MutationHookOptions, useMutation } from 'react-apollo-hooks'\n\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { useSnackBar } from './useSnackBar'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const { enqueueSnackbar, enqueueError, enqueueWarning } = useSnackBar()\n\n  const handleUserErrors = useCallback((userErrors: ReadonlyArray<string>) => {\n    userErrors.forEach(enqueueWarning)\n  }, [])\n\n  const handleGraphQLErrors = useCallback(\n    (errors: ReadonlyArray<GraphQLError>) => {\n      const userErrors = errors.filter(RM.propEq('showToUser', true))\n      if (userErrors.length === 0) {\n        enqueueError(defaultMessage)\n      } else {\n        handleUserErrors(userErrors.map(RM.prop('message')))\n      }\n    },\n    [],\n  )\n\n  const handleError = useCallback((err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        enqueueError(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n    enqueueSnackbar(defaultMessage, {\n      action: [<ShowFeedbackButton key=\"feedback\" />],\n    })\n  }, [])\n\n  const mutate = useMutation(mutation, options)\n  return async (variables: TVariables) => {\n    try {\n      const result = await mutate({ variables })\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      const data = result.data as TData\n      if (options.getUserErrors) {\n        const userErrors = options.getUserErrors(data)\n        if (userErrors !== null) {\n          handleUserErrors(userErrors)\n        }\n      }\n      return data\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n\nfunction ShowFeedbackButton() {\n  return (\n    <TouchButton onClick={() => Raven.showReportDialog()}>\n      <Trans> Submit feedback </Trans>\n    </TouchButton>\n  )\n}\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { GCompanyBranch } from '../graph/types'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<GCompanyBranch.Fragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = GCompanyBranch.Fragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { GCompanyBranch } from '../graph/types'\n\ninterface ICompanyBranchProps {\n  branch: GCompanyBranch.Fragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<GCompanyBranch.Fragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<GCompanyBranch.Fragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<GCompanyBranch.Fragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as GCompanyBranch.Fragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { ApolloError, QueryOptions } from 'apollo-client'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { getOperationName } from 'apollo-utilities'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\nimport { useApolloClient } from 'react-apollo-hooks'\n\nimport { reportError, reportFailingQuery } from '../helpers/sentry'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  errors?: GraphQLError[]\n  error?: ApolloError\n  hasAnyError: boolean\n  wasExecuted: boolean\n}\n\nexport function useExecutableQuery<TData, TVariables>(\n  query: DocumentNode,\n  options: Partial<QueryOptions<TVariables>> = {},\n) {\n  const client = useApolloClient()\n  const result: IQueryResult<TData> = useObservable({\n    data: null,\n    loading: false,\n    wasExecuted: false,\n    get hasAnyError() {\n      return Boolean((result.errors && result.errors.length) || result.error)\n    },\n  })\n  const execute = async (variables: TVariables) => {\n    result.loading = true\n    try {\n      const queryResult = await client.query<TData, TVariables>({\n        ...options,\n        query,\n        variables,\n      })\n      runInAction(() => {\n        result.wasExecuted = true\n        result.data = queryResult.data\n        result.errors = queryResult.errors\n        result.loading = false\n      })\n    } catch (err) {\n      if (isApolloError(err)) {\n        runInAction(() => {\n          result.error = err\n          result.errors = err.graphQLErrors\n          result.loading = false\n        })\n      } else {\n        runInAction(() => {\n          result.error = err\n          result.loading = false\n        })\n        reportError(err)\n      }\n    }\n    if (result.errors) {\n      reportFailingQuery(result.errors, {\n        query: getOperationName(query),\n        variables,\n      })\n    }\n    return result\n  }\n  const reset = () => {\n    runInAction(() => {\n      result.wasExecuted = false\n      result.data = null\n      result.error = undefined\n      result.errors = undefined\n      result.loading = false\n    })\n  }\n  return { result, execute, reset }\n}\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n`\n","import React from 'react'\n\nimport { GCustomer } from '../../../graph/types'\n\ninterface ICustomerNameProps {\n  customer: GCustomer.Fragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { GOrderListTicker, GOrderStateCategory } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={\n              order.orderStateCategory === OrderStateCategoryEnum.Cancel\n            }\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          <Price\n            price={order.totalSum.value}\n            currencyCode={order.totalSum.currency.code}\n          />\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  initialMinutes?: number\n  deliveryType: DeliveryTypeEnum\n  onMinuteClick(minute: number): void\n}\n\nconst deliveryMinutes = [20, 30, 45, 60, 75, 90, 105, 120]\nconst pickupMinutes = [10, 20, 30, 45, 60, 75, 90]\n\nconst MinutesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`\nconst MinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport const DeliveryMinutes: React.FC<IProps> = ({\n  deliveryType,\n  onMinuteClick,\n  initialMinutes,\n}) => {\n  const [selected, setSelected] = React.useState(initialMinutes)\n  const options = getMinutesForDeliveryType(deliveryType)\n  return (\n    <MinutesContainer>\n      {options.map(minutes => (\n        <MinutesItem key={minutes}>\n          <TouchButton\n            onClick={() => {\n              setSelected(minutes)\n              onMinuteClick(minutes)\n            }}\n            color={selected === minutes ? Colors.yellow : Colors.green}\n          >\n            {minutes}\n          </TouchButton>\n        </MinutesItem>\n      ))}\n    </MinutesContainer>\n  )\n}\n\nexport function getMinutesForDeliveryType(type: DeliveryTypeEnum) {\n  return type === DeliveryTypeEnum.Pickup ? pickupMinutes : deliveryMinutes\n}\n","import { Trans } from '@lingui/macro'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport React, { MutableRefObject, useState } from 'react'\n\nimport { DeliveryMinutes } from '../atoms/DeliveryMinutes'\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  title: string\n  cancelText?: string\n  onConfirm(minutes: number): void\n  onCancel?(): void\n  refApi?: MutableRefObject<Maybe<IDeliveryTimeDialogApi>>\n  children?(props: IDeliveryTimeDialogApi): React.ReactElement<{}>\n}\n\nexport interface IDeliveryTimeDialogApi {\n  openDialog(): void\n  closeDialog(): void\n}\n\nexport const DeliveryTimeDialog: React.FC<IProps> = ({\n  title,\n  onConfirm,\n  onCancel,\n  children,\n  cancelText,\n  refApi,\n}) => {\n  const [isOpen, setOpen] = useState(false)\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  if (refApi) {\n    refApi.current = { openDialog, closeDialog }\n  }\n\n  return (\n    <>\n      {children && children({ openDialog, closeDialog })}\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DeliveryMinutes\n            deliveryType={DeliveryTypeEnum.Messenger}\n            onMinuteClick={minutes => {\n              closeDialog()\n              onConfirm(minutes)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <TouchButton\n            onClick={() => {\n              closeDialog()\n              if (onCancel) {\n                onCancel()\n              }\n            }}\n          >\n            {cancelText ? cancelText : <Trans>Cancel</Trans>}\n          </TouchButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import {\n  DateTimePicker,\n  DateTimePickerProps,\n  InlineDateTimePicker,\n} from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DateTimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n  inline?: boolean\n}\n\nexport const FormInputDateTime: React.FC<IProps> = ({\n  field,\n  inline = true,\n  ...pickerProps\n}) => {\n  const Picker = inline ? InlineDateTimePicker : DateTimePicker\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi =>\n          React.createElement(Picker, {\n            value: fieldApi.value,\n            onChange: value => fieldApi.setValue(value),\n            onOpen: () => fieldApi.setTouched(true),\n            format: 'lll',\n            ampm: false,\n            showTabs: false,\n            maxDateMessage: i18n.t`Date is too much in the future`,\n            minDateMessage: i18n.t`Date is too much in the past`,\n            ...pickerProps,\n          })\n        }\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nexport const AutoHeight = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import gql from 'graphql-tag'\n\nimport { CustomerFragment } from '../../../graph/fragments'\nimport { FAddressFragmentDoc } from '../../../graph/generated'\n\nexport const OrderTickerFragment = gql`\n  fragment GOrderListTicker on Order {\n    id\n    createdAt\n    isPaidWithCard\n    deliveryType {\n      enum\n    }\n    deliverAt\n    deliverAtWorst\n    deliveredAt\n    companyBranch {\n      id\n      name\n      oldOrderThreshold\n    }\n    address {\n      ...FAddress\n    }\n    customer {\n      ...GCustomer\n    }\n    totalSum {\n      value\n      currency {\n        code\n      }\n    }\n  }\n  ${FAddressFragmentDoc}\n  ${CustomerFragment}\n`\n","import { DatePickerProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineDatePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"ll\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            todayLabel={i18n.t`Today`}\n            maxDateMessage={i18n.t`Date is too much in the future`}\n            minDateMessage={i18n.t`Date is too much in the past`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { Observer } from 'mobx-react'\nimport React from 'react'\n\ninterface IObserverWhenProps {\n  test(): boolean\n  renderSuccess(): ReactNode\n  renderFailure?(): ReactNode\n}\n\nexport const ObserverWhen: React.FC<IObserverWhenProps> = ({\n  test,\n  renderSuccess,\n  renderFailure,\n}) => (\n  <Observer\n    render={() =>\n      test() ? renderSuccess() : renderFailure ? renderFailure() : null\n    }\n  />\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { GEmail, GPhone } from '../../../graph/types'\n\ninterface IContactLinesProps {\n  phones: ReadonlyArray<GPhone.Fragment>\n  emails: ReadonlyArray<GEmail.Fragment>\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (GPhone.Fragment | GEmail.Fragment)\n\nexport const ContactLines: React.FC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import { Plural, SelectOrdinal, Trans } from '@lingui/macro'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.FC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  label: string\n  price: number\n  highlight?: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\n\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWarePriceLine: React.FC<IProps> = ({\n  label,\n  price,\n  highlight = false,\n}) => (\n  <OrderWareLineWrap>\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      {highlight ? (\n        <b>\n          <Price price={price} />\n        </b>\n      ) : (\n        <Price price={price} />\n      )}\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { OrderWarePriceLine } from './OrderWarePriceLine'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nconst OrderCartTotalsContainer = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.FC<IProps> = ({ order }) => (\n  <OrderCartTotalsContainer>\n    <OrderWarePriceLine\n      label={i18n.t`Transport fee`}\n      price={order.transportFee.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Covers price`}\n      price={order.coverPrice.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Discount total`}\n      price={order.totalDiscount.value * -1}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Total price`}\n      price={order.totalSum.value}\n      highlight={true}\n    />\n  </OrderCartTotalsContainer>\n)\n","import React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IProps {\n  displayedId: string\n}\n\nexport const OrderIdLine: React.FC<IProps> = ({ displayedId }) => (\n  <IconLine icon=\"format_list_numbered\" labelMargin=\"0\">\n    {displayedId}\n  </IconLine>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: ReadonlyArray<string>\n}\n\nexport const OrderRuleLines: React.FC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import styled from 'styled-components'\n\nimport { Colors } from '../../../styling'\n\nexport const OrderTimeLabel = styled.div`\n  margin-left: 1rem;\n  display: inline-block;\n  color: ${Colors.greyMiddle};\n`\n","import { Trans } from '@lingui/macro'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GOrderDetail } from '../../../graph/types'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nexport const OrderStats: React.FC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <OrderTimeLabel>\n          <Trans>Deliver on time</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <OrderTimeLabel>\n          <Trans>Driver</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { GOrderDetail } from '../../../graph/types'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  orderTiming: ReadonlyArray<GOrderDetail.OrderTiming>\n}\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NewOrders]: i18nMark('Created'),\n  [OrderStateCategoryEnum.Preparing]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.OnWay]: i18nMark('On way'),\n  [OrderStateCategoryEnum.Finished]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.FC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <OrderTimeLabel>\n          {i18n._(labelMap[timing.orderStateCategory])}\n        </OrderTimeLabel>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.black};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.FC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React, { Fragment } from 'react'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: ReadonlyArray<GOrderDetail.Items>\n}\n\nexport const OrderWareList: React.FC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: GOrderDetail.Items) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  EmailFragment,\n  PhoneFragment,\n  PriceFragment,\n} from '../../../graph/fragments'\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderDriverFragment } from '../molecules/OrderStateDeliver.graphql'\n\nexport const QueryOrderDetail = buildQuery<\n  GOrderDetail.Query,\n  GOrderDetail.Variables\n>(gql`\n  query GOrderDetail($id: ID!) {\n    order(id: $id) {\n      id\n      createdAt\n      deliverAt\n      companyBranch {\n        id\n      }\n      customer {\n        emails {\n          ...GEmail\n        }\n        phones {\n          ...GPhone\n        }\n      }\n      customerOrdersCountCurrent\n      customerOrdersCountTotal\n      note\n      previousNote\n      allAppliedRules\n      items {\n        ...GOrderDetailWare\n        sidedishes: sideDishes {\n          ...GOrderDetailWare\n        }\n      }\n      totalSum {\n        ...GPrice\n      }\n      transportFee {\n        ...GPrice\n      }\n      coverPrice {\n        ...GPrice\n      }\n      totalDiscount {\n        ...GPrice\n      }\n      orderTiming: orderStateCategoryRelations {\n        createdAt\n        orderStateCategory\n      }\n      ...GOrderDriver\n    }\n  }\n\n  fragment GOrderDetailWare on OrderRecipe {\n    id\n    recipe {\n      id\n      code\n      nameLabel\n    }\n    price {\n      ...GPrice\n    }\n  }\n  ${PriceFragment}\n  ${EmailFragment}\n  ${PhoneFragment}\n  ${OrderDriverFragment}\n`)\n","import { SECOND } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { Colors } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  confirmNode: ReactNode | string\n  initialColor?: Colors\n  confirmColor?: Colors\n  confirmDisableMs?: number\n  resetToInitialMs?: number\n  onConfirm(): void\n}\n\nexport const ConfirmButton: React.FC<IProps> = ({\n  confirmNode,\n  initialColor = Colors.greyMiddle,\n  confirmColor = Colors.red,\n  confirmDisableMs = 300,\n  resetToInitialMs = 3 * SECOND,\n  children,\n  onConfirm,\n}) => {\n  const [needConfirm, setNeedConfirm] = React.useState(false)\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const onClick = () => {\n    if (needConfirm === false) {\n      buttonRef.current!.disabled = true\n      setNeedConfirm(true)\n      setTimeout(() => {\n        if (buttonRef.current) {\n          buttonRef.current.disabled = false\n        }\n      }, confirmDisableMs)\n    } else {\n      onConfirm()\n    }\n  }\n\n  React.useEffect(\n    () => {\n      if (needConfirm) {\n        const timer = setTimeout(() => {\n          setNeedConfirm(false)\n        }, resetToInitialMs)\n        return () => {\n          clearTimeout(timer)\n        }\n      }\n      return undefined\n    },\n    [resetToInitialMs, needConfirm],\n  )\n\n  return (\n    <TouchButton\n      ref={buttonRef}\n      onClick={onClick}\n      color={needConfirm ? confirmColor : initialColor}\n    >\n      {needConfirm ? confirmNode : children}\n    </TouchButton>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { MCancelOrder } from '../../../graph/types'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\nimport { CancelOrderMutation } from '../../createorder/models/CreateOrderModel.graphql'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderCancelButton: React.FC<IProps> = ({ orderId }) => {\n  const cancelOrder = useGuardedMutation<\n    MCancelOrder.Mutation,\n    MCancelOrder.Variables\n  >(CancelOrderMutation)\n\n  return (\n    <CardDock position=\"BottomLeft\">\n      <Sizer width={7.375}>\n        <ConfirmButton\n          confirmNode={<Trans>Really cancel?</Trans>}\n          onConfirm={() => {\n            cancelOrder({ orderId })\n          }}\n        >\n          <Trans>Cancel order</Trans>\n        </ConfirmButton>\n      </Sizer>\n    </CardDock>\n  )\n}\n","import React from 'react'\nimport { useMutation } from 'react-apollo-hooks'\n\nimport { MChangeOrderToPickup } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { ChangeOrderToPickupMutation } from '../models/OrderStateModel.graphql'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderDeliveryToPickup: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const changeToPickup = useMutation<\n    MChangeOrderToPickup.Mutation,\n    MChangeOrderToPickup.Variables\n  >(ChangeOrderToPickupMutation, { variables: { orderId } })\n  if (!isDelivery) {\n    return null\n  }\n  return (\n    <TouchButton\n      text={i18n.t`Change to pickup`}\n      onClick={() => {\n        changeToPickup()\n      }}\n    />\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { OrderStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { TOrderStateModel } from '../models/OrderStateModel'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n  stateModel: TOrderStateModel\n}\n\nconst stateLabels = {\n  [OrderStateEnum.Accepted]: i18nMark('Accept order'),\n  [OrderStateEnum.Finished]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.FC<IProps> = ({\n  orderId,\n  nextState,\n  stateModel,\n}) => {\n  return (\n    <TouchButton\n      text={i18n._(stateLabels[nextState])}\n      width=\"7.375rem\"\n      onClick={() => {\n        stateModel.updateOrderState(orderId, nextState)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { GDriver } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = GDriver.Fragment\n\ninterface IProps {\n  drivers: ReadonlyArray<TDriver>\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst DriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst backgroundColor = {\n  background: Colors.greyMiddle,\n}\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...backgroundColor,\n    ...textColor,\n    height: Spacing.ButtonHeight,\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    ...backgroundColor,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n}\n\nexport const OrderDriverSelect: React.FC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers as TDriver[]}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver => {\n      if (driver === null) {\n        onClear()\n      } else {\n        onSelect(driver as TDriver)\n      }\n    }}\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <DriverName>{`${driver.firstName} ${driver.lastName}`}</DriverName>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { QueryDriverSelection } from './OrderStateDeliver.graphql'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n  stateModel: TOrderStateModel\n}\n\nexport const OrderStateDeliver: React.FC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n  stateModel,\n}) => (\n  <QueryDriverSelection\n    fetchPolicy=\"network-only\"\n    variables={{ branchId: [branchId], orderId }}\n    render={(\n      { drivers, order: { driver: orderDriver } },\n      { loading, refetch },\n    ) => (\n      <OrderDriverSelect\n        drivers={drivers}\n        selectedDriver={orderDriver ? orderDriver.user : null}\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          if (orderDriver) {\n            stateModel.removeDriver(orderDriver.id)\n          }\n        }}\n        onSelect={driver => {\n          stateModel.selectDriver(orderId, driver.id)\n          if (orderStateCategory !== OrderStateCategoryEnum.OnWay) {\n            stateModel.deliverOrder(orderId)\n          }\n        }}\n      />\n    )}\n  />\n)\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst OrderStateFlowContainerWrapper = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n  height: ${Spacing.ButtonHeight};\n`\n\nconst Control = styled.div`\n  margin: 0 0 0 0.5rem;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.FC<IProps> = ({ children }) => (\n  <OrderStateFlowContainerWrapper>\n    {Children.map(children, (child, idx) => (\n      <Control key={idx}>{child}</Control>\n    ))}\n  </OrderStateFlowContainerWrapper>\n)\n","import React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { DeliveryTimeDialog } from '../../../molecules/DeliveryTimeDialog'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderStateTimeNotification: React.FC<IProps> = ({ orderId }) => {\n  const { order } = useRoot()\n\n  return (\n    <DeliveryTimeDialog\n      title={i18n.t`Send expected time of delivery to customer (in minutes)`}\n      onConfirm={minutes => {\n        order.state.sendTimeNotification(orderId, minutes)\n      }}\n    >\n      {({ openDialog }) => (\n        <TouchButton iconName=\"schedule\" onClick={openDialog} />\n      )}\n    </DeliveryTimeDialog>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GOrderState } from '../../../graph/types'\nimport { OrderStateCategoryFragment } from '../models/OrderStateModel.graphql'\n\nexport const QueryOrderState = buildQuery<\n  GOrderState.Query,\n  GOrderState.Variables\n>(gql`\n  query GOrderState($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      deliveryType {\n        enum\n      }\n      isCancelable\n      ...GOrderStateCategory\n    }\n    companyBranch(id: $branchId) {\n      id\n      allowedCategories\n    }\n  }\n  ${OrderStateCategoryFragment}\n`)\n","import React from 'react'\nimport { VError } from 'verror'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n} from '../../../graph/generated'\nimport { reportError } from '../../../helpers/sentry'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { OrderCancelButton } from '../molecules/OrderCancelButton'\nimport { OrderDeliveryToPickup } from '../molecules/OrderDeliveryToPickup'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\nimport { QueryOrderState } from './OrderStateFlow.graphql'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  stateModel: TOrderStateModel\n  orderStateCategory: OrderStateCategoryEnum\n  canCancel: boolean\n  canDeliver: boolean\n  isDelivery: boolean\n}\n\nconst OrderStateNewOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderDeliveryToPickup {...props} />\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Accepted} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderDeliveryToPickup {...props} />\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateReadyToDeliverOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    {props.isDelivery ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateFinishedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.FC<IProps> = ({ orderId, branchId }) => {\n  const {\n    order: { state: stateModel },\n  } = useRoot()\n  return (\n    <QueryOrderState\n      variables={{ orderId, branchId }}\n      render={({ order, companyBranch: { allowedCategories } }) => {\n        const { orderStateCategory } = order\n        if (!orderStateCategory) {\n          reportError(new VError('Order %s has got no state categories'))\n          return null\n        }\n        const isDelivery =\n          order.deliveryType !== null &&\n          order.deliveryType.enum !== DeliveryTypeEnum.Pickup\n\n        const canDeliver =\n          isDelivery &&\n          (allowedCategories.includes(OrderStateCategoryEnum.OnWay) ||\n            allowedCategories.includes(OrderStateCategoryEnum.ReadyToDeliver))\n\n        const canCancel = order.isCancelable\n\n        const stateProps: IStateProps = {\n          orderId,\n          branchId,\n          stateModel,\n          orderStateCategory,\n          canCancel,\n          canDeliver,\n          isDelivery,\n        }\n        switch (orderStateCategory) {\n          case OrderStateCategoryEnum.NewOrders:\n            return <OrderStateNewOrder {...stateProps} />\n          case OrderStateCategoryEnum.Preparing:\n            return <OrderStateAcceptedOrder {...stateProps} />\n          case OrderStateCategoryEnum.ReadyToDeliver:\n            return <OrderStateReadyToDeliverOrder {...stateProps} />\n          case OrderStateCategoryEnum.OnWay:\n            return <OrderStateOnWayOrder {...stateProps} />\n          case OrderStateCategoryEnum.Finished:\n            return <OrderStateFinishedOrder {...stateProps} />\n          default:\n            return null\n        }\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderIdLine } from '../molecules/OrderIdLine'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { QueryOrderDetail } from './OrderDetail.graphql'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IOrderDetailProps {\n  orderId: string\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail: React.FC<IOrderDetailProps> = ({ orderId }) => (\n  <QueryOrderDetail\n    variables={{ id: orderId }}\n    fetchPolicy=\"cache-and-network\"\n    render={({ order }) => (\n      <>\n        <OrderDetailContainerStyled>\n          <HorizontalSeparator />\n          <OrderWareList orderWares={order.items} />\n          <OrderDetailTotals order={order} />\n          <OrderRuleLines rules={order.allAppliedRules}>\n            <OrderCountLine\n              current={order.customerOrdersCountCurrent}\n              total={order.customerOrdersCountTotal}\n            />\n          </OrderRuleLines>\n          <ContactLines\n            phones={order.customer.phones}\n            emails={order.customer.emails}\n          />\n          <NoteLine note={order.note} previousNote={order.previousNote} />\n          <HorizontalSeparator />\n          <OrderIdLine displayedId={order.id} />\n          <HorizontalSeparator />\n          <OrderTimeLine orderTiming={order.orderTiming} />\n          <OrderStats order={order} />\n        </OrderDetailContainerStyled>\n        <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ObserverWhen } from '../../../atoms/ObserverWhen'\nimport { GOrderListTicker, GOrderStateCategory } from '../../../graph/types'\nimport { Colors, Radiuses } from '../../../styling'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ntype TOrder = GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n\ninterface IProps {\n  order: TOrder\n  showBranch: boolean\n  toggleOrderDetail(orderId: ID): void\n  isOrderDetailOpen(orderId: ID): boolean\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox: React.FC<IProps> = ({\n  order,\n  showBranch,\n  toggleOrderDetail,\n  isOrderDetailOpen,\n}) => (\n  <OrderBoxStyled id={`order-${order.id}`}>\n    <OrderTicker\n      order={order}\n      showBranch={showBranch}\n      onClick={() => toggleOrderDetail(order.id)}\n    />\n    <ObserverWhen\n      test={() => isOrderDetailOpen(order.id)}\n      renderSuccess={() => <OrderDetail orderId={order.id} />}\n    />\n  </OrderBoxStyled>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const ClosureHistoryFilter = () => {\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateFrom\"\n          label={<Trans>From date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateTo\"\n          label={<Trans>To date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Trans>Show history for branch</Trans>\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const ClosureHistoryQuery = gql`\n  query GClosureHistory($branchId: ID!, $dateFrom: Date!, $dateTo: Date!) {\n    financialReports(\n      companyBranchId: $branchId\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      id\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n","import { subDays } from 'date-fns'\nimport React, { createContext, useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GClosureHistory } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\nimport { ClosureHistoryQuery } from './ClosureHistoryLoader.graphql'\n\nexport type TReports = GClosureHistory.FinancialReports\n\nconst context = createContext<IQueryResult<GClosureHistory.Query> | null>(null)\n\nexport const useClosureHistory = () => useContext(context)!\n\nexport const ClosureHistoryLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery<\n    GClosureHistory.Query,\n    GClosureHistory.Variables\n  >(ClosureHistoryQuery)\n\n  return (\n    <Form\n      onSubmit={(formValues: { dateFrom: Date; dateTo: Date }) => {\n        if (statistics.closureBranch) {\n          execute({\n            branchId: statistics.closureBranch,\n            dateFrom: formatDateISO(formValues.dateFrom),\n            dateTo: formatDateISO(formValues.dateTo),\n          })\n        }\n      }}\n      defaultValues={{ dateFrom: subDays(new Date(), 1), dateTo: new Date() }}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Typography } from '@material-ui/core'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Spacing } from '../../../styling'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading, wasExecuted } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (!wasExecuted) {\n    return (\n      <Typography variant=\"subheading\">\n        <em>\n          <Trans>Use the filter</Trans>\n        </em>\n      </Typography>\n    )\n  }\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (data && data.financialReports.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data &&\n        data.financialReports.map(report => (\n          <FlexRow key={report.id}>\n            <FlexColumn fixedWidth={true}>\n              <RelativeLink to={`../${report.id}`}>\n                <TouchButton\n                  iconName=\"mode_edit\"\n                  width={Spacing.ButtonHeight}\n                  height={Spacing.ButtonHeight}\n                />\n              </RelativeLink>\n            </FlexColumn>\n            <FlexColumn widthGrowIndex={1}>\n              {`[${report.reportSequence}] ${formatDateISO(\n                report.reportDatetime,\n              )}`}\n            </FlexColumn>\n          </FlexRow>\n        ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryFilter } from '../molecules/ClosureHistoryFilter'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.FC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <ClosureHistoryFilter />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n}\n\nconst MonospaceOutputStyled = styled.p`\n  color: white;\n  font-family: 'Lucida Console', Monaco, monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 1rem;\n  line-height: 1.8rem;\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nexport const MonospaceOutput: React.FC<IProps> = ({ text }) => (\n  <MonospaceOutputStyled>{formatOutput(text)}</MonospaceOutputStyled>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GClosureReportQuery } from '../../../graph/types'\n\nexport const FinancialReport = gql`\n  query GClosureReportQuery(\n    $branchId: ID!\n    $reportId: ID!\n    $showReport: Boolean!\n  ) {\n    lastReport: lastFinancialReport(companyBranchId: $branchId)\n      @skip(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n    report: financialReport(report: $reportId) @include(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n\nexport const QueryFinancialReport = buildQuery<\n  GClosureReportQuery.Query,\n  GClosureReportQuery.Variables\n>(FinancialReport)\n","import React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryFinancialReport } from './ClosureStatisticsContent.graphql'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent: React.FC<IProps> = ({\n  reportId = '',\n}) => (\n  <WithRoot\n    render={({ statistics }) =>\n      statistics.closureBranch ? (\n        <QueryFinancialReport\n          variables={{\n            branchId: statistics.closureBranch,\n            reportId,\n            showReport: Boolean(reportId),\n          }}\n          fetchPolicy=\"cache-and-network\"\n          renderLoading={false}\n          render={({ report, lastReport }, { loading }) =>\n            loading ? (\n              <MonospaceOutput text={i18n.t`Computing`} />\n            ) : (\n              <MonospaceOutput\n                text={reportId ? report!.plainData : lastReport.plainData}\n              />\n            )\n          }\n        />\n      ) : null\n    }\n  />\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick?(e: MouseEvent<HTMLButtonElement>): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.FC<IProps> = props => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <TouchButton\n      text={i18n.t`Create closure`}\n      color={Colors.green}\n      width=\"12rem\"\n      {...props}\n    />\n  </CanMutate>\n)\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GCreateFinancialReport } from '../../../graph/types'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\nimport { CreateFinancialReport } from './ClosureStatisticsControl.graphql'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nconst ButtonToRight = styled.div`\n  float: right;\n`\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const createClosure = useGuardedMutation<\n    GCreateFinancialReport.Mutation,\n    GCreateFinancialReport.Variables\n  >(CreateFinancialReport)\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      companyBranchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <>\n      {showCurrent ? (\n        <ClosureCurrentButton />\n      ) : (\n        <ClosureSubmitButton\n          onClick={onSubmit}\n          disabled={!statistics.closureBranch}\n        />\n      )}\n      <ButtonToRight>\n        <ClosureHistoryButton />\n      </ButtonToRight>\n    </>\n  ))\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsContent } from '../organisms/ClosureStatisticsContent'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.FC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(statistics.branches)}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n    />\n  ))\n}\n","import { Plural, Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDateTime } from '../../../atoms/FormInputDateTime'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const StatisticsFilter = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeFrom\"\n          label={<Trans>From</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeTo\"\n          label={<Trans>To</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Plural\n            value={statistics.branchesFilter.length}\n            one=\"Show for one branch\"\n            few=\"Show for # branches\"\n            other=\"Show for # branches\"\n          />\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  ))\n}\n","import { isoDate } from '@speedlo/graphql'\nimport { DocumentNode } from 'graphql'\nimport { createContext } from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\n\ninterface IVariables {\n  readonly dateTimeFrom: string\n  readonly dateTimeTo: string\n  readonly branches: ReadonlyArray<string>\n}\n\nconst getInitialResult = () => ({\n  data: null,\n  loading: false,\n  hasAnyError: false,\n  wasExecuted: false,\n})\n\nexport function createStatisticsQuery<TData, TVariables extends IVariables>(\n  query: DocumentNode,\n) {\n  const context = createContext<IQueryResult<TData>>(getInitialResult())\n  const useStatisticsQuery = () => {\n    const { statistics } = useRoot()\n    const { result, execute, reset } = useExecutableQuery<TData, IVariables>(\n      query,\n    )\n    const executeFilter = () => {\n      reset()\n      execute({\n        branches: statistics.branchesFilter,\n        dateTimeFrom: isoDate(statistics.dateTimeFrom),\n        dateTimeTo: isoDate(statistics.dateTimeTo),\n      })\n    }\n    const defaultValues = {\n      dateTimeFrom: statistics.dateTimeFrom,\n      dateTimeTo: statistics.dateTimeTo,\n    }\n    return { result, executeFilter, resetResult: reset, defaultValues }\n  }\n  return {\n    context,\n    useStatisticsQuery,\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const DailyStatisticsQuery = gql`\n  query GDailyStatistics(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      categoryStatisticsPlain\n      dailyStatisticsPlain\n      deliveryStatisticsPlain\n      driversStatisticsPlain\n    }\n  }\n`\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GDailyStatistics } from '../../../graph/types'\nimport { createStatisticsQuery } from '../hooks/createStatisticsQuery'\nimport { DailyStatisticsQuery } from './DailyStatisticsLoader.graphql'\n\nexport type TOrdersStats = GDailyStatistics.Stats\n\nconst { useStatisticsQuery, context } = createStatisticsQuery<\n  GDailyStatistics.Query,\n  GDailyStatistics.Variables\n>(DailyStatisticsQuery)\n\nexport const useDailyStatistics = () => React.useContext(context)\n\nexport const DailyStatisticsLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, executeFilter, defaultValues } = useStatisticsQuery()\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n      defaultValues={defaultValues}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { i18n } from '../../../i18n'\nimport { useDailyStatistics } from './DailyStatisticsLoader'\n\nexport const DailyStatisticsContent = observer(() => {\n  const { data, loading } = useDailyStatistics()\n  if (!data) {\n    return null\n  }\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n  const { stats } = data\n  return (\n    <>\n      <Headline light={true}>\n        <Trans>Daily statistics</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.dailyStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By category</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.categoryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By type</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.deliveryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By driver</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.driversStatisticsPlain} />\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { DailyStatisticsContent } from '../organisms/DailyStatisticsContent'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import gql from 'graphql-tag'\n\nimport { OrderTickerFragment } from '../../../segments/order/molecules/OrderTicker.graphql'\nimport { OrderStateCategoryFragment } from '../../order/models/OrderStateModel.graphql'\n\nexport const OrdersStatisticsListQuery = gql`\n  query GOrdersStatisticsList(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n    $pagination: InputPaginationParams!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      orders: finishedOrders {\n        list: orders(includeCanceled: true, pagination: $pagination) {\n          ...GOrderListTicker\n          ...GOrderStateCategory\n        }\n      }\n    }\n  }\n\n  ${OrderTickerFragment}\n  ${OrderStateCategoryFragment}\n`\n","import gql from 'graphql-tag'\n\nexport const OrdersStatisticsQuery = gql`\n  query GOrdersStatistics(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      finishedOrders {\n        fees {\n          ...GStatsPrice\n        }\n        onlinePayments {\n          ...GStatsPrice\n        }\n        total {\n          ...GStatsPrice\n        }\n        finishedCount: ordersCount\n        cancelledCount: ordersCanceledCount\n      }\n      orderStatisticsPlain\n    }\n  }\n\n  fragment GStatsPrice on PriceConverted {\n    value\n    currency {\n      code\n    }\n  }\n`\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GOrdersStatistics } from '../../../graph/types'\nimport { createStatisticsQuery } from '../hooks/createStatisticsQuery'\nimport { OrdersStatisticsQuery } from './OrdersStatisticsLoader.graphql'\n\nexport type TOrdersStats = GOrdersStatistics.FinishedOrders\n\nconst { context, useStatisticsQuery } = createStatisticsQuery<\n  GOrdersStatistics.Query,\n  GOrdersStatistics.Variables\n>(OrdersStatisticsQuery)\n\nexport const useOrderStatistics = () => React.useContext(context)\n\nexport const OrdersStatisticsLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, executeFilter, defaultValues } = useStatisticsQuery()\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n      defaultValues={defaultValues}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React, { useEffect, useMemo, useRef } from 'react'\nimport { useApolloClient } from 'react-apollo-hooks'\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  IndexRange,\n  InfiniteLoader,\n  List,\n} from 'react-virtualized'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GOrdersStatisticsList } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { OrderBox } from '../../../segments/order/atoms/OrderBox'\nimport { OrdersStatisticsListQuery } from './OrdersStatisticsList.graphql'\nimport { useOrderStatistics } from './OrdersStatisticsLoader'\n\nexport const OrdersStatisticsList = observer(() => {\n  const { statistics, order: orderModel } = useRoot()\n  const { data, wasExecuted } = useOrderStatistics()\n  const loaderRef = useRef<InfiniteLoader | null>(null)\n\n  const orders = useRef(new Map())\n\n  const measureCache = useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: 55,\n        minHeight: 55,\n      }),\n    [],\n  )\n\n  useEffect(\n    () => {\n      // whenever this turns to false it means that filter was executed again\n      // and everything should reset in here\n      if (wasExecuted === false) {\n        orders.current.clear()\n        measureCache.clearAll()\n        if (loaderRef.current) {\n          loaderRef.current.resetLoadMoreRowsCache(true)\n        }\n      }\n    },\n    [wasExecuted],\n  )\n\n  const client = useApolloClient()\n\n  const queryMoreOrders = async ({ startIndex, stopIndex }: IndexRange) => {\n    const result = await client.query<\n      GOrdersStatisticsList.Query,\n      GOrdersStatisticsList.Variables\n    >({\n      query: OrdersStatisticsListQuery,\n      variables: {\n        branches: statistics.branchesFilter,\n        dateTimeFrom: formatDateISO(statistics.dateTimeFrom),\n        dateTimeTo: formatDateISO(statistics.dateTimeTo),\n        pagination: { fromIndex: startIndex, toIndex: stopIndex },\n      },\n    })\n\n    const list = [...result.data.stats.orders.list]\n    for (let index = startIndex; index <= stopIndex; index++) {\n      orders.current.set(index, list.shift())\n    }\n  }\n\n  let totalCount = 0\n  if (data && data.stats) {\n    const { finishedCount, cancelledCount } = data.stats.finishedOrders\n    totalCount = finishedCount + cancelledCount\n  }\n\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <InfiniteLoader\n          rowCount={totalCount}\n          isRowLoaded={({ index }) => orders.current.has(index)}\n          loadMoreRows={queryMoreOrders}\n          ref={loaderRef}\n        >\n          {({ onRowsRendered, registerChild }) => (\n            <List\n              ref={registerChild}\n              onRowsRendered={onRowsRendered}\n              rowHeight={measureCache.rowHeight}\n              deferredMeasurementCache={measureCache}\n              rowCount={totalCount}\n              width={width}\n              height={height}\n              noRowsRenderer={() => (\n                <CardListTitle>\n                  {wasExecuted ? <Trans>No orders</Trans> : null}\n                </CardListTitle>\n              )}\n              rowRenderer={({ index, key, style, parent }) => {\n                const order = orders.current.get(index)\n                if (!order) {\n                  return (\n                    <div style={style} key={key}>\n                      ...\n                    </div>\n                  )\n                }\n                return (\n                  <CellMeasurer\n                    key={key}\n                    columnIndex={0}\n                    rowIndex={index}\n                    cache={measureCache}\n                    parent={parent}\n                  >\n                    {({ measure }) => (\n                      <div style={style}>\n                        <OrderBox\n                          order={order}\n                          toggleOrderDetail={o => {\n                            orderModel.list.toggleOrderDetail(o)\n                            setTimeout(measure, 500)\n                          }}\n                          isOrderDetailOpen={orderModel.list.isOrderDetailOpen}\n                          showBranch={statistics.branchesFilter.length > 1}\n                        />\n                      </div>\n                    )}\n                  </CellMeasurer>\n                )\n              }}\n            />\n          )}\n        </InfiniteLoader>\n      )}\n    </AutoSizer>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { Price } from '../../../atoms/Price'\nimport { useOrderStatistics } from '../organisms/OrdersStatisticsLoader'\n\nconst StatPanel = styled.div`\n  margin: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n`\n\nconst StatLabel = styled.h1`\n  font-size: 1.5rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nconst StatValue = styled.h2`\n  font-size: 4rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const { loading, data } = useOrderStatistics()\n  if (loading || !data) {\n    return null\n  }\n  const stats = data.stats.finishedOrders\n  return (\n    <>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total turnover</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Online payments</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Orders count</Trans>\n        </StatLabel>\n        <StatValue>{stats.finishedCount + stats.cancelledCount}</StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total commissions</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <MonospaceOutput text={data.stats.orderStatisticsPlain} />\n      </StatPanel>\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { AutoHeight } from '../../../atoms/FlexAutoHeight'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { OrdersStatisticsList } from '../organisms/OrdersStatisticsList'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\nimport { OrdersStatisticsSummary } from '../organisms/OrdersStatisticsSummary'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [{ i: 'summary', x: 0, y: 1, w: 7, h: 1 }]\n}\n\nexport const OrdersStatisticsPage: React.FC<IProps> = props => (\n  <OrdersStatisticsLoader>\n    <PageLayoutFullHeightItem\n      withScrollArea={false}\n      row={1}\n      column={7}\n      widthInColumns={9}\n    >\n      <AutoHeight>\n        <OrdersStatisticsList />\n      </AutoHeight>\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      layouts={getLayout()}\n      pageTitle={i18n.t`Orders statistics`}\n      showSoundControl={false}\n      scrollPageTitle={false}\n      useBackButton={true}\n    >\n      <div key=\"summary\">\n        <Card>\n          <StatisticsBranchFilter />\n          <StatisticsFilter />\n        </Card>\n\n        <OrdersStatisticsSummary />\n      </div>\n    </PageLayout>\n  </OrdersStatisticsLoader>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'OrdersStatistics', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'DailyStatistics', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'Closure', x: 4, y: 1, w: 2, h: 2 },\n  ]\n}\n\nexport const OverviewPage: React.FC<IProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n"],"sourceRoot":""}