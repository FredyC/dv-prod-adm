{"version":3,"sources":["../node_modules/numeral/locales/bg.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__webpack_require__","undefined","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","apply","exports","module"],"mappings":"+EAAA,IAAAA,EAAAC,EAAAC,EAKID,EAAO,CAACE,EAAA,WAAsBC,KAAAF,EAAA,oBAATF,EAMxB,SAAAK,GACDA,EAAAC,SAAA,eACAC,WAAA,CACAC,UAAA,IACAC,QAAA,KAEAC,cAAA,CAEAC,SAAA,qBACAC,QAAA,qBACAC,QAAA,2BACAC,SAAA,4BAEAC,QAAA,SAAAC,GASA,UAEAC,SAAA,CACAC,OAAA,oBA/BkClB,EAAAmB,MAAAC,EAAAnB,GAAAD,KAAAqB,EAAAD,QAAAlB","file":"static/js/numeral-0.0c128a0a.chunk.js","sourcesContent":["// numeral.js locale configuration\n// locale : Bulgarian\n// author : Don Vince : https://github.com/donvince/\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['../numeral'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('../numeral'));\n  } else {\n    factory(global.numeral);\n  }\n})(this, function (numeral) {\n  numeral.register('locale', 'bg', {\n    delimiters: {\n      thousands: ' ',\n      decimal: ','\n    },\n    abbreviations: {\n      // I found these here http://www.unicode.org/cldr/charts/28/verify/numbers/bg.html\n      thousand: 'хил',\n      million: 'млн',\n      billion: 'млрд',\n      trillion: 'трлн'\n    },\n    ordinal: function ordinal(number) {\n      // google translate suggests:\n      // 1st=1-ви; 2nd=2-ри; 7th=7-ми;\n      // 8th=8-ми and many others end with -ти\n      // for example 3rd=3-ти\n      // However since I've seen suggestions that in\n      // Bulgarian the ordinal can be taken in\n      // different forms (masculine, feminine, neuter)\n      // I've opted to wimp out on commiting that to code\n      return '';\n    },\n    currency: {\n      symbol: 'лв'\n    }\n  });\n});"],"sourceRoot":""}