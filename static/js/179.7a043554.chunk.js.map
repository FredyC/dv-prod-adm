{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/FormInputStyled.tsx","atoms/Headline.tsx","atoms/FormInputTextBox.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","atoms/FlexColumn.tsx","hooks/useAutorunWhenSingleBranch.ts","atoms/SelectControlFlat.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","../node_modules/@material-ui/icons/esm/StoreMallDirectory.js","segments/settings/organisms/SettingsCompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","molecules/PageLayoutItem.tsx","atoms/DateTimeFormatProvider.tsx","molecules/TouchButtonDelete.tsx","atoms/FormInputCheckbox.tsx","atoms/StyledCheckbox.tsx","atoms/FlexRow.tsx","atoms/InputDate.tsx","atoms/FormInputDate.tsx","../node_modules/@material-ui/icons/esm/Delete.js","../node_modules/@material-ui/icons/esm/Person.js","segments/branchpreferences/organism/SaveInvoicePreferencesButton.tsx","segments/branchpreferences/organism/InvoicePreferencesForm.tsx","segments/branchpreferences/organism/StoppageForm.tsx","segments/branchpreferences/pages/BranchPreferencesPage.tsx","segments/branchpreferences/routes/BranchPreferencesRoutes.tsx","atoms/InputTime.tsx","segments/businesshours/atoms/BusinessHoursTimeRange.tsx","segments/businesshours/molecules/BusinessHoursWeekday.tsx","segments/businesshours/organisms/BusinessHoursForm.tsx","atoms/FormInputTime.tsx","atoms/FormInputTimeSpan.tsx","segments/businesshours/molecules/SpecificModeSelector.tsx","hooks/useSettings.ts","segments/businesshours/organisms/SpecificBusinessHourForm.tsx","segments/businesshours/molecules/SpecificBusinessHourLine.tsx","segments/businesshours/organisms/SpecificBusinessHours.tsx","segments/businesshours/pages/BusinessHoursPage.tsx","segments/businesshours/routes/BusinessHoursRoutes.tsx","../node_modules/@material-ui/icons/esm/AvTimer.js","segments/settings/organisms/BusinessHoursButton.tsx","../node_modules/@material-ui/icons/esm/Folder.js","segments/settings/organisms/MenuCategoryButton.tsx","../node_modules/@material-ui/icons/esm/InsertDriveFile.js","segments/settings/organisms/MenuRecipeButton.tsx","segments/settings/organisms/UserMenuButton.tsx","../node_modules/@material-ui/icons/esm/EditLocation.js","segments/settings/organisms/ZonesMenuButton.tsx","segments/settings/pages/SettingsPage.tsx","segments/settings/routes/SettingsRoutes.tsx"],"names":["StyledIconLine","styled","div","_templateObject","_ref","labelMargin","_ref2","labelWidth","labelWidthUnits","concat","IconLine","_ref3","icon","label","_ref3$labelWidth","_ref3$labelWidthUnits","Spacing","DefaultSizeUnit","_ref3$labelMargin","children","iconComponent","logError","Error","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","_Icon__WEBPACK_IMPORTED_MODULE_6__","color","Colors","greyDark","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","composeSelectControlStyles","outerStyles","arguments","length","undefined","Object","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","props","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","FormInputStyled","input","attrs","_ref$invalid","invalid","_ref$inputFullWidth","inputFullWidth","cn","fullWidth","withConfig","displayName","componentId","Headline","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","FormInputTextBox","React","forwardRef","inputRef","field","isRequired","validatioName","validationMessage","validate","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react_form__WEBPACK_IMPORTED_MODULE_2__","value","isEmpty","_i18n__WEBPACK_IMPORTED_MODULE_4__","_","fieldApi","_FormInputStyled__WEBPACK_IMPORTED_MODULE_5__","onChange","ev","target","validity","valid","setTouched","setValue","Boolean","error","ref","NoAccess","CanQuery","queryName","canQuery","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","useAutorunWhenSingleBranch","mobx__WEBPACK_IMPORTED_MODULE_0__","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","onSingleBranch","useEffect","autorun","isReady","hasSingleBranch","branches","StyledSelectControlFlat","textColor","SelectControlFlat","items","_props$formatItem","formatItem","RM","prop","_props$isMulti","isMulti","_props$isClearable","isClearable","_props$isInvalid","isInvalid","selectedItem","selectedItems","onSingleSelection","onMultiSelection","hasSingleItem","isItemSelected","item","Array","isArray","contains","equals","updateSelection","without","react__WEBPACK_IMPORTED_MODULE_3___default","interactive","active","onClick","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","id","map","idx","formatted","key","CompanyBranchFlatSelect","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","_ref$hideWhenSingleBr","hideWhenSingleBranch","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","isSelected","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","./cs.svg","./de.svg","./en.svg","./pl.svg","./sk.svg","webpackContext","req","webpackContextResolve","e","code","keys","resolve","module","exports","./logo-doveze.svg","./logo-gopay.svg","./logo-mastercard.svg","./logo-visa.svg","StoreMallDirectory","createSvgIcon","SettingsCompanyBranchPicker","_useRoot","settings","selectBranch","branchId","slicedToArray","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","restInnerProps","style","react","placeholder","i18n","ButtonHeight","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","selection","head","FormSubmit","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","fieldName","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","_atoms_PageLayoutGridItem__WEBPACK_IMPORTED_MODULE_5__","_atoms_Sizer__WEBPACK_IMPORTED_MODULE_6__","height","DashboardButtonHeight","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","utils","MomentUtils","TouchButtonDelete","onDelete","confirmText","_atoms_SizerButton__WEBPACK_IMPORTED_MODULE_3__","_TouchButton__WEBPACK_IMPORTED_MODULE_5__","Delete","window","confirm","FormInputCheckbox","defaultValue","inputProps","_StyledCheckbox__WEBPACK_IMPORTED_MODULE_3__","checked","StyledCheckbox","span","white","Radiuses","TextComponent","FlexRow","InputDate","material_ui_pickers_esm","variant","format","maxDateMessage","core","minDateMessage","FormInputDate","pickerProps","es","render","InputDate_InputDate","onOpen","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","SaveInvoicePreferencesButton","TouchButton","text","SaveButtonContainer","InvoicePreferencesForm","SaveInvoicePreferencesButton_SaveInvoicePreferencesButton","StoppageForm","BranchPreferencesPage","FullPageLayout","pageTitle","Card","_lingui_react","StoppageForm_StoppageForm","InvoicePreferencesForm_InvoicePreferencesForm","BranchPreferencesRoutes","match","react_router","SecureRoute","exact","path","NotFoundPage","InputTime","StyledBussinessHoursTimeRange","BusinessHoursTimeRange_templateObject","BusinessHoursTimeRange","memo","hour","InputTime_InputTime","openAt","closeAt","StyledBusinessHoursWeekday","article","BusinessHoursWeekday_templateObject","Button","BusinessHoursWeekday","weekday","hours","onAdd","onRemove","renderHour","data-testid","SizerButton","role","AddCircle","getTodayTime","DFP","parse","Date","BusinessHoursForm","_useQRegularBusinessH","useQRegularBusinessHours","loading","_React$useState","useState","observable","Map","businessHours","_useMBusinessHoursSub","useMBusinessHoursSubmit","submitBusinessHours","weekDays","forEach","set","enum","array","weekDay","get","push","weekDayHours","clear","hourIdCounter","useRef","hourId","findIndex","propEq","splice","enqueueSuccess","useSnackBar","onSubmit","useCallback","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","apply","toConsumableArray","formatTime","sent","stop","Loading","current","startOfDay","endOfDay","Sizer","MarginBox","FormInputTime","InlineWrap","FormInputTimeSpan_templateObject","FormInputTimeSpan","fieldFrom","fieldTo","FormInputTime_FormInputTime","labels","_labels","defineProperty","ESpecificHourMode","TIMESPAN","i18nMark","FULLDAY","SpecificModeSelector","specificMode","mode","changeSpecificMode","DateContainer","SpecificBusinessHourForm_templateObject","FormContainer","_templateObject2","SpecificBusinessHourForm","submitSpecificHour","defaultValues","getDefaultValues","fullDateFormat","minDate","index_module","FormInputTimeSpan_FormInputTimeSpan","now","date","setHours","setMinutes","SpecificBusinessHourLine","bsHour","0","specificDateLocalized","closed","closedNote","formatLineTime","sortByDate","sort","ascend","or","not","SpecificBusinessHours","SpecificBusinessHours_graphql","variables","fetchPolicy","renderFragment","SpecificBusinessHourLine_SpecificBusinessHourLine","deleteSpecificHour","BusinessHoursPage","useBackButton","BusinessHoursForm_BusinessHoursForm","SpecificBusinessHours_SpecificBusinessHours","SpecificBusinessHourForm_SpecificBusinessHourForm","BusinessHoursRoutes","AvTimer","BusinessHoursButton","red","Folder","MenuCategoryButton","turquoise","InsertDriveFile","MenuRecipeButton","UserMenuButton","Person","EditLocation","ZonesMenuButton","violet","SettingsPage","PageLayoutResponsive","isForIconDashboard","gridRow","gridColumn","gridColumnSpan","SettingsRoutes_SettingsRoutes","ZoneMenuRoutes","lazy","Promise","all","then","bind","MenuRoutes","UserMenuPage","SettingsRoutes","PageTitle","Route","LazyRoute"],"mappings":"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","file":"static/js/179.7a043554.chunk.js","sourcesContent":["import { Error, SvgIconComponent } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { logError } from '../helpers/logger'\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: SvgIconComponent\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst StyledIconLine = styled.div<IProps>`\n  display: flex;\n\n  div.description {\n    margin: ${({ labelMargin }) => labelMargin};\n    min-width: ${({ labelWidth, labelWidthUnits }) =>\n      `${labelWidth}${labelWidthUnits}`};\n    flex: 0 0 auto;\n    text-align: right;\n  }\n\n  div.contents {\n    margin-left: 0.5rem;\n    align-self: stretch;\n    flex: 1 1 auto;\n  }\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n  }\n`\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n  labelMargin = '0.5rem 0.2rem 0 auto',\n  children,\n}) => {\n  let iconComponent = icon\n  if (typeof icon === 'string') {\n    logError(\n      `IconLine: Do not use icon prop as string! Replace \"${icon}\" with the one imported from @material-ui/icons.`,\n    )\n    iconComponent = Error\n  }\n\n  return (\n    <StyledIconLine\n      labelWidth={labelWidth}\n      labelWidthUnits={labelWidthUnits}\n      labelMargin={labelMargin}\n    >\n      <div className=\"description\">\n        <Icon icon={iconComponent} color={Colors.greyDark} />\n        {label ? <div className=\"label\">{label}</div> : null}\n      </div>\n      <div className=\"contents\">{children}</div>\n    </StyledIconLine>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import { cn } from '@speedlo/ui'\nimport styled from 'styled-components/macro'\n\nimport { Spacing } from '../styling'\n\ninterface IProps {\n  invalid?: boolean\n  inputFullWidth?: boolean\n}\n\nexport const FormInputStyled = styled.input.attrs<IProps>(\n  ({ invalid = false, inputFullWidth = false }) => ({\n    className: cn({ invalid, fullWidth: inputFullWidth }),\n  }),\n)<IProps>`\n  margin: ${Spacing.MarginAroundFormComponents};\n  &.invalid {\n    border: 1px red solid;\n    background-color: #ff000011;\n  }\n  &.fullWidth {\n    width: 100%;\n  }\n`\n\n// TODO: Rename all uses in separate commit\nexport { FormInputStyled as StyledFormInput }\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { FormInputStyled } from './FormInputStyled'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  isRequired?: boolean\n  validatioName?: string\n  validationMessage?: string\n  inputFullWidth?: boolean\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputFullWidth = false,\n      isRequired,\n      validatioName,\n      validationMessage,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            if (validationMessage) {\n              return validationMessage\n            }\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              fieldApi.setTouched(true)\n              fieldApi.setValue(ev.target.value)\n            }\n          }}\n          inputFullWidth={inputFullWidth}\n          invalid={Boolean(fieldApi.error)}\n          // @ts-ignore\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { autorun } from 'mobx'\nimport React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\nexport function useAutorunWhenSingleBranch(\n  onSingleBranch: (branch: FCompanyBranchFragment) => void,\n) {\n  const { user } = useRoot()\n  React.useEffect(() =>\n    autorun(() => {\n      if (user.isReady && user.hasSingleBranch) {\n        onSingleBranch(user.branches[0])\n      }\n    }),\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  formatItem?: (item: ItemType) => string | ReactNode\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\nconst StyledSelectControlFlat = styled.div`\n  ${(props: { textColor?: string }) => ``}\n\n  color: ${({ textColor }) => (textColor ? textColor : 'inherit')};\n\n  &.interactive {\n    cursor: pointer;\n  }\n\n  &.invalid {\n    border: 1px red solid;\n  }\n\n  > div {\n    margin: 0.5rem 0.6rem;\n    display: inline-block;\n  }\n\n  > div.active {\n    font-weight: bolder;\n    text-decoration: underline;\n  }\n`\n\nexport const SelectControlFlat = <ItemType extends any>(\n  props: ISelectControlFlatProps<ItemType>,\n) => {\n  const {\n    items,\n    formatItem = RM.prop('displayName'),\n    isMulti = false,\n    isClearable = false,\n    isInvalid = false,\n    selectedItem,\n    selectedItems,\n    onSingleSelection,\n    onMultiSelection,\n    textColor,\n  } = props\n\n  const hasSingleItem = items.length === 1\n\n  const hasSelection = () => {\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n\n  const isItemSelected = (item: ItemType) => {\n    if (items.length === 1) {\n      // with one item there no selection happening\n      return false\n    }\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n\n  const updateSelection = (item: Maybe<ItemType>) => {\n    if (hasSingleItem) {\n      return\n    }\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  return (\n    <StyledSelectControlFlat\n      className={cn({\n        invalid: isInvalid,\n        interactive: !hasSingleItem,\n      })}\n      textColor={textColor}\n    >\n      {isClearable && (\n        <div\n          className={cn({ active: !hasSelection() })}\n          onClick={() => {\n            updateSelection(null)\n          }}\n        >\n          <Trans id=\"optionselector.clear-filter\">All</Trans>\n        </div>\n      )}\n      {items.map((item, idx) => {\n        // @ts-ignore Have to use any in generics due to parsing error\n        const formatted = formatItem(item)\n        return (\n          <div\n            key={idx}\n            className={cn({ active: isItemSelected(item) })}\n            onClick={() => {\n              updateSelection(item)\n            }}\n          >\n            {formatted}\n          </div>\n        )\n      })}\n    </StyledSelectControlFlat>\n  )\n}\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  branches?: RoA<TBranch>\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  hideWhenSingleBranch?: boolean\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  branches,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  hideWhenSingleBranch = false,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n\n  const isSelected = branch => selectedBranches.includes(branch.id)\n\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: branches || user.branches,\n    selectedBranch: user.branches.find(isSelected) || null,\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n\n  if (user.hasSingleBranch && hideWhenSingleBranch) {\n    return null\n  }\n\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","var map = {\n\t\"./cs.svg\": 1477,\n\t\"./de.svg\": 1478,\n\t\"./en.svg\": 1479,\n\t\"./pl.svg\": 1480,\n\t\"./sk.svg\": 1481\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1476;","var map = {\n\t\"./logo-doveze.svg\": 1483,\n\t\"./logo-gopay.svg\": 1484,\n\t\"./logo-mastercard.svg\": 1485,\n\t\"./logo-visa.svg\": 1486\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1482;","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z\"\n}), 'StoreMallDirectory');","import { StoreMallDirectory } from '@material-ui/icons'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {\n  isMulti?: boolean\n  width?: number\n}\n\nexport const SettingsCompanyBranchPicker: React.FC<IProps> = ({\n  isMulti,\n  width,\n}) => {\n  const { settings, user } = useRoot()\n\n  useAutorunWhenSingleBranch(branch => {\n    settings.selectBranch(branch.id)\n  })\n\n  return useObserver(() => {\n    if (user.hasSingleBranch) {\n      return null\n    }\n    return (\n      <IconLine icon={StoreMallDirectory}>\n        <CompanyBranchPicker\n          selectedBranches={settings.branchId ? [settings.branchId] : undefined}\n          onSelectionChange={([branch]) => settings.selectBranch(branch)}\n          isMulti={isMulti}\n          isClearable={false}\n          getDropdownProps={() => ({ width })}\n          hideWhenSingleBranch={true}\n        />\n      </IconLine>\n    )\n  })\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n    ISelectControlProps<FCompanyBranchFragment>,\n    'placeholder' | 'width'\n  > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection((selection as FCompanyBranchFragment) || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\nimport {\n  IPageLayoutGridItemProps,\n  PageLayoutGridItem,\n} from '../atoms/PageLayoutGridItem'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutItemProps\n  extends IPageLayoutGridItemProps,\n    HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return (\n    <PageLayoutGridItem {...props}>\n      <Sizer height={Spacing.DashboardButtonHeight}>{layoutItem}</Sizer>\n    </PageLayoutGridItem>\n  )\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { Delete } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps\n  extends LegacyOmit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.FC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      icon={Delete}\n      color={Colors.greyMiddle}\n      onClick={ev => {\n        ev.preventDefault()\n        if (!confirmText || window.confirm(confirmText)) {\n          onDelete()\n        }\n      }}\n      {...props}\n    />\n  </SizerButton>\n)\n","import React from 'react'\nimport { Checkbox, FieldType } from 'react-form'\n\nimport { StyledCheckbox } from './StyledCheckbox'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  label?: string\n}\n\nexport const FormInputCheckbox: React.FC<IProps> = ({\n  field,\n  label,\n  defaultValue,\n  children,\n  ...inputProps\n}) => (\n  <StyledCheckbox>\n    <Checkbox field={field} checked={Boolean(defaultValue)} {...inputProps} />\n    {label && <label>{label}</label>}\n  </StyledCheckbox>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses, Spacing } from '../styling'\n\nexport const StyledCheckbox = styled.span`\n  input {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-color: ${Colors.white};\n    border: 1px solid ${Colors.greyMiddle};\n    padding: 1rem;\n    border-radius: ${Radiuses.TextComponent};\n    display: inline-block;\n    position: relative;\n    margin: ${Spacing.MarginAroundFormComponents};\n    outline: none;\n    &:checked {\n      background-color: ${Colors.white};\n      border: 1px solid ${Colors.greyMiddle};\n    }\n    &:checked:after {\n      content: '\\\\2714';\n      font-size: 2rem;\n      position: absolute;\n      top: -0.5rem;\n      left: 0.1rem;\n      color: ${Colors.greyDark};\n      overflow: hidden;\n    }\n    &:disabled {\n      background-color: ${Colors.greyLight};\n    }\n    &:disabled:after {\n      color: ${Colors.greyMiddle};\n    }\n    &:focus {\n      border: 2px solid #86a8df;\n    }\n  }\n  label {\n    display: inline-block;\n    margin: 0.4rem 0 0 0.5rem;\n    vertical-align: top;\n  }\n`\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { i18n } from '@lingui/core'\nimport { DatePicker, DatePickerProps } from '@material-ui/pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends DatePickerProps {}\n\nexport const InputDate: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <DatePicker\n        variant=\"inline\"\n        format=\"ll\"\n        maxDateMessage={i18n.t`Date is too much in the future`}\n        minDateMessage={i18n.t`Date is too much in the past`}\n        {...props}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { DatePickerProps } from '@material-ui/pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { InputDate } from './InputDate'\n\ninterface IProps extends LegacyOmit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <Field\n      field={field}\n      render={fieldApi => (\n        <InputDate\n          value={fieldApi.value}\n          onChange={value => fieldApi.setValue(value)}\n          onOpen={() => fieldApi.setTouched(true)}\n          {...pickerProps}\n        />\n      )}\n    />\n  )\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const SaveInvoicePreferencesButton: React.FC = props => (\n  <TouchButton text={i18n.t`Save invoice preferences`} color={Colors.green} />\n)\n","import React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { SaveInvoicePreferencesButton } from './SaveInvoicePreferencesButton'\n\ninterface IInvoicePreferencesFormProps {}\n\nconst SaveButtonContainer = styled.div`\n  margin-top: 1rem;\n  width: 15rem;\n`\n\nexport const InvoicePreferencesForm: React.FC<\n  IInvoicePreferencesFormProps\n> = props => (\n  <Form>\n    <FormInputTextBox field=\"account\" placeholder=\"Název firmy\" />\n    <br />\n    <FormInputTextBox field=\"number\" placeholder=\"IČ\" />\n    <FormInputTextBox field=\"vatIdent\" placeholder=\"DIČ\" />\n\n    <SaveButtonContainer>\n      <SaveInvoicePreferencesButton />\n    </SaveButtonContainer>\n  </Form>\n)\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { i18n } from '../../../i18n'\n\ninterface IStoppageFormProps {}\n\nexport const StoppageForm: React.FC<IStoppageFormProps> = props => (\n  <Form>\n    <FormInputCheckbox\n      field=\"onlyPersonalPickup\"\n      label={i18n.t`We are not delivering, only take away.`}\n    />\n    <br />\n    <FormInputCheckbox\n      field=\"stoppage\"\n      label={i18n.t`Completely stop all orders.`}\n    />\n  </Form>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { InvoicePreferencesForm } from '../organism/InvoicePreferencesForm'\nimport { StoppageForm } from '../organism/StoppageForm'\n\ninterface IPreferencesPageProps {}\n\nexport const BranchPreferencesPage: React.FC<IPreferencesPageProps> = props => (\n  <FullPageLayout pageTitle={i18n.t`Branch preferences`}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <Headline>\n        <Trans id=\"branch.preferences.stoppage\">Stoppage</Trans>\n      </Headline>\n      <StoppageForm />\n\n      <Headline>\n        <Trans>Change of invoice preferences</Trans>\n      </Headline>\n      <InvoicePreferencesForm />\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesPage } from '../pages/BranchPreferencesPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BranchPreferencesRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      component={BranchPreferencesPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import { TimePicker, TimePickerProps } from '@material-ui/pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends TimePickerProps {}\n\nexport const InputTime: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <TimePicker format=\"LT\" variant=\"inline\" {...props} />\n    </DateTimeFormatProvider>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { InputTime } from '../../../atoms/InputTime'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  hour: TBusinessHour\n}\n\nconst StyledBussinessHoursTimeRange = styled.div`\n  & input {\n    width: 5rem;\n  }\n`\n\nexport const BusinessHoursTimeRange = React.memo<IProps>(({ hour }) => {\n  return useObserver(() => (\n    <StyledBussinessHoursTimeRange>\n      <InputTime\n        value={hour.openAt}\n        onChange={value => (hour.openAt = value)}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n      <InputTime\n        value={hour.closeAt}\n        onChange={value => (hour.closeAt = value)}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </StyledBussinessHoursTimeRange>\n  ))\n})\n","import { Trans } from '@lingui/macro'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { FWeekdayFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Radiuses } from '../../../styling'\nimport { BusinessHoursTimeRange } from '../atoms/BusinessHoursTimeRange'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  weekday: FWeekdayFragment\n  hours: ReadonlyArray<TBusinessHour>\n  onAdd(): void\n  onRemove(hourId: ID): void\n}\n\nconst StyledBusinessHoursWeekday = styled.article`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 0.3rem 0;\n  h5 {\n    width: 5rem;\n  }\n  & .range {\n    display: flex;\n    margin: 0 2rem 0 0;\n    padding-right: 1rem;\n    background: ${Colors.white};\n    border-radius: ${Radiuses.Button};\n  }\n  .remove-btn {\n    margin-right: 1rem;\n  }\n`\n\nexport const BusinessHoursWeekday = React.memo<IProps>(\n  ({ weekday, hours, onAdd, onRemove }) => {\n    const renderHour = (hour: TBusinessHour) => {\n      return (\n        <div key={hour.id} data-testid=\"bh-range\" className=\"range\">\n          <SizerButton className=\"remove-btn\">\n            <TouchButton\n              title={i18n.t`Remove business hour`}\n              role=\"button\"\n              onClick={() => onRemove(hour.id)}\n            >\n              <Delete />\n            </TouchButton>\n          </SizerButton>\n          <BusinessHoursTimeRange hour={hour} />\n        </div>\n      )\n    }\n\n    const renderHours = () => {\n      if (hours.length === 0) {\n        return (\n          <em>\n            <Trans>Closed</Trans>\n          </em>\n        )\n      }\n      return hours.map(renderHour)\n    }\n\n    return useObserver(() => (\n      <StyledBusinessHoursWeekday>\n        <h5>{weekday.code}</h5>\n        {renderHours()}\n        <SizerButton>\n          <TouchButton\n            title={i18n.t`Add business hour`}\n            role=\"button\"\n            onClick={onAdd}\n          >\n            <AddCircle />\n          </TouchButton>\n        </SizerButton>\n      </StyledBusinessHoursWeekday>\n    ))\n  },\n)\n","import { DFP, RM } from '@speedlo/tools'\nimport { IObservableArray, observable } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  InputBusinessHourCreate,\n  useMBusinessHoursSubmit,\n  useQRegularBusinessHours,\n  WeekDayEnum,\n} from '../../../graph/generated'\nimport { formatTime } from '../../../helpers/formats'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { TBusinessHour } from '../businesshours.types'\nimport { BusinessHoursWeekday } from '../molecules/BusinessHoursWeekday'\n\nconst getTodayTime = DFP.parse(new Date(), 'H:mm')\n\nexport const BusinessHoursForm: React.FC = () =>\n  useObserver(function useObserverBody() {\n    const { settings } = useRoot()\n    const { data, loading } = useQRegularBusinessHours({\n      branchId: settings.branchId,\n    })\n\n    const [businessHours] = React.useState(() =>\n      observable(new Map<WeekDayEnum, IObservableArray<TBusinessHour>>()),\n    )\n\n    const [submitBusinessHours] = useMBusinessHoursSubmit()\n\n    React.useEffect(() => {\n      if (loading) {\n        return\n      }\n      if (businessHours.size === 0) {\n        data.weekDays.forEach(weekday => {\n          businessHours.set(weekday.enum, observable.array([]))\n        })\n      }\n      data.businessHours.forEach(({ id, openAt, closeAt, weekDay }) => {\n        if (weekDay) {\n          businessHours.get(weekDay.enum)!.push({\n            id,\n            openAt: getTodayTime(openAt),\n            closeAt: getTodayTime(closeAt),\n            weekDay: weekDay.enum,\n          })\n        }\n      })\n      return () => {\n        businessHours.forEach(weekDayHours => {\n          weekDayHours.clear()\n        })\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data.businessHours, data.weekDays, loading, settings.branchId])\n\n    const hourIdCounter = React.useRef(0)\n\n    const onAdd = (weekDay: WeekDayEnum) => () => {\n      businessHours.get(weekDay)!.push({\n        weekDay,\n        id: `L${hourIdCounter.current++}`,\n        openAt: DFP.startOfDay(new Date()),\n        closeAt: DFP.endOfDay(new Date()),\n      })\n    }\n\n    const onRemove = (weekDay: WeekDayEnum) => (hourId: ID) => {\n      const hours = businessHours.get(weekDay)!\n      const idx = hours.findIndex(RM.propEq('id', hourId))\n      if (idx >= 0) {\n        hours.splice(idx, 1)\n      }\n    }\n\n    const { enqueueSuccess } = useSnackBar()\n\n    const onSubmit = React.useCallback(async () => {\n      const hours: InputBusinessHourCreate[] = []\n      businessHours.forEach((weekDayHours, weekDay) => {\n        hours.push(\n          ...weekDayHours.map(hour => ({\n            openAt: formatTime(hour.openAt),\n            closeAt: formatTime(hour.closeAt),\n            weekDay,\n          })),\n        )\n      })\n      const result = await submitBusinessHours({\n        branchId: settings.branchId,\n        hours,\n      })\n      if (result) {\n        enqueueSuccess(i18n.t`Regular business hours has been updated`)\n      }\n    }, [businessHours, enqueueSuccess, settings.branchId, submitBusinessHours])\n\n    if (loading || businessHours.size === 0) {\n      return <Loading />\n    }\n\n    return (\n      <div>\n        {data.weekDays.map(weekday => (\n          <BusinessHoursWeekday\n            key={weekday.enum}\n            weekday={weekday}\n            hours={businessHours.get(weekday.enum)!}\n            onAdd={onAdd(weekday.enum)}\n            onRemove={onRemove(weekday.enum)}\n          />\n        ))}\n        <Sizer width={20}>\n          <MarginBox margin=\"1rem\">\n            <TouchButton\n              text={i18n.t`Save regular hours`}\n              color={Colors.green}\n              onClick={onSubmit}\n            />\n          </MarginBox>\n        </Sizer>\n      </div>\n    )\n  })\n","import { TimePickerProps } from '@material-ui/pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { InputTime } from './InputTime'\n\ninterface IProps extends LegacyOmit<TimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputTime: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <Field\n      field={field}\n      render={fieldApi => (\n        <InputTime\n          value={fieldApi.value}\n          onChange={value => fieldApi.setValue(value)}\n          onOpen={() => fieldApi.setTouched(true)}\n          {...pickerProps}\n        />\n      )}\n    />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTime } from './FormInputTime'\n\ninterface IFormInputTimeSpanProps {\n  fieldFrom: FieldType\n  fieldTo: FieldType\n}\n\nconst InlineWrap = styled.div`\n  width: 5rem;\n  display: inline-block;\n`\n\nexport const FormInputTimeSpan: React.FC<IFormInputTimeSpanProps> = ({\n  fieldFrom,\n  fieldTo,\n}) => (\n  <>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldFrom}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldTo}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n  </>\n)\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { useSettings } from '../../../hooks/useSettings'\nimport { i18n } from '../../../i18n'\nimport { ESpecificHourMode } from '../models/BusinessHoursModel'\n\nconst labels = {\n  [ESpecificHourMode.TIMESPAN]: i18nMark('Open between'),\n  [ESpecificHourMode.FULLDAY]: i18nMark('Closed'),\n}\n\nexport const SpecificModeSelector = React.memo(() => {\n  const { businessHours } = useSettings()\n  return (\n    <SelectControlFlat<ESpecificHourMode>\n      items={[ESpecificHourMode.TIMESPAN, ESpecificHourMode.FULLDAY]}\n      selectedItem={businessHours.specificMode as ESpecificHourMode}\n      formatItem={mode => i18n._(labels[mode])}\n      onSingleSelection={(mode: ESpecificHourMode) =>\n        businessHours.changeSpecificMode(mode)\n      }\n    />\n  )\n})\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useSettings() {\n  const { settings } = useRoot()\n  return settings\n}\n","import { Trans } from '@lingui/macro'\nimport { setHours, setMinutes } from 'date-fns'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { FormInputTimeSpan } from '../../../atoms/FormInputTimeSpan'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { fullDateFormat } from '../../../helpers/formats'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport {\n  ESpecificHourMode,\n  ISpecificFormData,\n} from '../models/BusinessHoursModel'\nimport { SpecificModeSelector } from '../molecules/SpecificModeSelector'\n\nconst DateContainer = styled.div`\n  display: inline-block;\n  width: 13rem;\n  margin-left: 1rem;\n  margin-top: 2rem;\n`\n\nconst FormContainer = styled.div`\n  display: inline-block;\n  width: 16rem;\n  min-height: 6rem;\n  margin: 0rem 0 0 1rem;\n  vertical-align: top;\n`\n\nexport const SpecificBusinessHourForm: React.FC = props => {\n  const {\n    settings: { businessHours },\n  } = useRoot()\n  return (\n    <Form\n      onSubmit={businessHours.submitSpecificHour}\n      defaultValues={getDefaultValues()}\n    >\n      <DateContainer>\n        <FormInputDate\n          field=\"date\"\n          format={fullDateFormat}\n          minDate={new Date()}\n          fullWidth={true}\n          label={<Trans>Date</Trans>}\n        />\n      </DateContainer>\n\n      <FormContainer>\n        <SpecificModeSelector />\n        <Observer>\n          {() =>\n            businessHours.specificMode === ESpecificHourMode.TIMESPAN ? (\n              <FormInputTimeSpan fieldFrom=\"openAt\" fieldTo=\"closeAt\" />\n            ) : (\n              <Sizer width={13}>\n                <FormInputTextBox\n                  field=\"note\"\n                  inputFullWidth={true}\n                  placeholder={i18n.t`Closing reason`}\n                />\n              </Sizer>\n            )\n          }\n        </Observer>\n      </FormContainer>\n\n      <FormSubmit width=\"9rem\">{i18n.t`Add`}</FormSubmit>\n    </Form>\n  )\n}\n\nfunction getDefaultValues(): Partial<ISpecificFormData> {\n  const now = new Date()\n  return {\n    date: now,\n    openAt: setHours(setMinutes(now, 0), 9),\n    closeAt: setHours(setMinutes(now, 0), 20),\n  }\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface ISpecificBusinessHourLineProps {\n  bsHour: GSpecificBusinessHour.Fragment\n  onDelete(): void\n}\n\nexport const SpecificBusinessHourLine: React.FC<\n  ISpecificBusinessHourLineProps\n> = ({ bsHour, onDelete }) => (\n  <FlexRow>\n    <FlexColumn fixedWidth={true}>\n      <CanMutate mutationName=\"destroyBusinessHour\">\n        <TouchButtonDelete\n          onDelete={onDelete}\n          confirmText={`${i18n.t`Really remove specific business hour ${\n            bsHour.specificDateLocalized\n          }?`}`}\n        />\n      </CanMutate>\n    </FlexColumn>\n    <FlexColumn fixedWidth={true} width=\"14rem\">\n      {bsHour.specificDateLocalized}\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={1}>{formatLineTime(bsHour)}</FlexColumn>\n  </FlexRow>\n)\n\nfunction formatLineTime(bsHour: GSpecificBusinessHour.Fragment) {\n  if (bsHour.closed) {\n    return bsHour.closedNote\n  }\n  return `${bsHour.openAt} - ${bsHour.closeAt}`\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { SpecificBusinessHourLine } from '../molecules/SpecificBusinessHourLine'\nimport { QuerySpecificBusinessHours } from './SpecificBusinessHours.graphql'\n\nconst sortByDate = RM.sort<GSpecificBusinessHour.Fragment>(\n  // @ts-ignore Fix typing\n  RM.ascend(RM.or(RM.prop('specificDate'), RM.not)),\n)\n\nexport const SpecificBusinessHours: React.FC = () => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QuerySpecificBusinessHours\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderFragment={({ businessHours }) =>\n        sortByDate(businessHours).map(bsHour => (\n          <SpecificBusinessHourLine\n            key={bsHour.id}\n            bsHour={bsHour}\n            onDelete={() =>\n              settings.businessHours.deleteSpecificHour(bsHour.id)\n            }\n          />\n        ))\n      }\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../../segments/settings/organisms/SettingsCompanyBranchPicker'\nimport { BusinessHoursForm } from '../organisms/BusinessHoursForm'\nimport { SpecificBusinessHourForm } from '../organisms/SpecificBusinessHourForm'\nimport { SpecificBusinessHours } from '../organisms/SpecificBusinessHours'\n\nexport const BusinessHoursPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Business hours`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <CanQuery queryName=\"businessHours\">\n        <Headline>\n          <MarginBox margin=\"1rem 0\">\n            <Trans>Regular business hours</Trans>\n          </MarginBox>\n        </Headline>\n        <BusinessHoursForm />\n      </CanQuery>\n\n      <Headline>\n        <MarginBox margin=\"1rem 0\">\n          <Trans>Specific business hours</Trans>\n        </MarginBox>\n      </Headline>\n      <SpecificBusinessHours />\n\n      <CanMutate mutationName=\"addSpecialBusinessHour\">\n        <Headline>\n          <MarginBox margin=\"1rem 0\">\n            <Trans>Add specific business hour</Trans>\n          </MarginBox>\n        </Headline>\n        <SpecificBusinessHourForm />\n      </CanMutate>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BusinessHoursPage } from '../pages/BusinessHoursPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BusinessHoursRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute exact={true} path={match.path} component={BusinessHoursPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M11 17c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm0-14v4h2V5.08c3.39.49 6 3.39 6 6.92 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-1.68.59-3.22 1.58-4.42L12 13l1.41-1.41-6.8-6.8v.02C4.42 6.45 3 9.05 3 12c0 4.97 4.02 9 9 9 4.97 0 9-4.03 9-9s-4.03-9-9-9h-1zm7 9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zM6 12c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1z\"\n}), 'AvTimer');","import { AvTimer } from '@material-ui/icons'\nimport React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const BusinessHoursButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Business hours`}\n    icon={AvTimer}\n    color={Colors.red}\n  />\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"\n}), 'Folder');","import { Folder } from '@material-ui/icons'\nimport React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuCategoryButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Categories`}\n    icon={Folder}\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z\"\n}), 'InsertDriveFile');","import { InsertDriveFile } from '@material-ui/icons'\nimport React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuRecipeButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Recipes`}\n    icon={InsertDriveFile}\n    color={Colors.turquoise}\n  />\n)\n","import { Person } from '@material-ui/icons'\nimport React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const UserMenuButton: React.FC = () => (\n  <TouchButton text={i18n.t`User`} icon={Person} color={Colors.greyMiddle} />\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C8.14 2 5 5.14 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.86-3.14-7-7-7zm-1.56 10H9v-1.44l3.35-3.34 1.43 1.43L10.44 12zm4.45-4.45l-.7.7-1.44-1.44.7-.7c.15-.15.39-.15.54 0l.9.9c.15.15.15.39 0 .54z\"\n}), 'EditLocation');","import { EditLocation } from '@material-ui/icons'\nimport React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IZonesMenuButtonProps {}\n\nexport const ZonesMenuButton: React.FC<IZonesMenuButtonProps> = props => (\n  <TouchButton\n    text={i18n.t`Delivery zones`}\n    icon={EditLocation}\n    color={Colors.violet}\n  />\n)\n","import React from 'react'\n\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { BusinessHoursButton } from '../organisms/BusinessHoursButton'\nimport { MenuCategoryButton } from '../organisms/MenuCategoryButton'\nimport { MenuRecipeButton } from '../organisms/MenuRecipeButton'\nimport { UserMenuButton } from '../organisms/UserMenuButton'\nimport { ZonesMenuButton } from '../organisms/ZonesMenuButton'\n\nexport const SettingsPage: React.FC = props => (\n  <PageLayoutResponsive isForIconDashboard={true}>\n    <PageLayoutItem\n      gridRow={1}\n      gridColumn={1}\n      gridColumnSpan={2}\n      key=\"BusinessHours\"\n      route=\"/settings/businesshours\"\n      component={BusinessHoursButton}\n      canQuery=\"businessHours\"\n    />\n    {/* <PageLayoutItem\n      key=\"Preferences\"\n      route=\"/settings/preferences\"\n      component={PreferencesButton}\n    /> */}\n    <PageLayoutItem\n      gridRow={1}\n      gridColumn={3}\n      gridColumnSpan={2}\n      key=\"ZonesMenu\"\n      route=\"/settings/zones\"\n      component={ZonesMenuButton}\n      canQuery=\"zones\"\n    />\n    <PageLayoutItem\n      gridRow={1}\n      gridColumn={5}\n      gridColumnSpan={2}\n      key=\"UserMenu\"\n      route=\"/settings/user\"\n      component={UserMenuButton}\n      canQuery=\"user\"\n    />\n    <PageLayoutItem\n      gridRow={2}\n      gridColumn={1}\n      gridColumnSpan={2}\n      key=\"MenuRecipe\"\n      route=\"/settings/menu/recipe\"\n      component={MenuRecipeButton}\n      canQuery=\"recipes\"\n    />\n    <PageLayoutItem\n      gridRow={2}\n      gridColumn={3}\n      gridColumnSpan={2}\n      key=\"MenuCategory\"\n      route=\"/settings/menu/category\"\n      component={MenuCategoryButton}\n      canQuery=\"wareCategories\"\n    />\n  </PageLayoutResponsive>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { LazyRoute } from '../../../routes/LazyRoute'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesRoutes } from '../../branchpreferences/routes/BranchPreferencesRoutes'\nimport { BusinessHoursRoutes } from '../../businesshours/routes/BusinessHoursRoutes'\nimport { SettingsPage } from '../pages/SettingsPage'\n\nconst ZoneMenuRoutes = React.lazy(() =>\n  import('../../../segments/zones/routes/ZoneMenuRoutes'),\n)\n\nconst MenuRoutes = React.lazy(() =>\n  import('../../../segments/menu/routes/MenuRoutes'),\n)\n\nconst UserMenuPage = React.lazy(() => import('../pages/UserMenuPage'))\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const SettingsRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => {\n  return (\n    <>\n      <PageTitle.Route path={match.path} title={i18n.t`Settings`} />\n      <Switch>\n        <SecureRoute exact={true} path={match.path} component={SettingsPage} />\n        <LazyRoute path={`${match.path}/menu`} component={MenuRoutes} />\n        <LazyRoute path={`${match.path}/zones`} component={ZoneMenuRoutes} />\n        <LazyRoute path={`${match.path}/user`} component={UserMenuPage} />\n        <Route\n          path={`${match.path}/businesshours`}\n          component={BusinessHoursRoutes}\n        />\n        <Route\n          path={`${match.path}/preferences`}\n          component={BranchPreferencesRoutes}\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </>\n  )\n}\n\nexport default SettingsRoutes\n"],"sourceRoot":""}