{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/Headline.tsx","atoms/SelectControl.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","atoms/HorizontalSeparator.tsx","atoms/FlexColumn.tsx","hooks/useRouterContext.ts","atoms/ScrollArea.tsx","atoms/Price.tsx","atoms/SelectControlFlat.tsx","molecules/FormSubmit.tsx","helpers/form.ts","hooks/useEffectOnce.ts","hooks/useSnackBar.ts","hooks/useExecutableQuery.ts","atoms/CardListTitle.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/UserCompanyBranches.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","segments/order/molecules/OrderMapMarker.graphql.ts","segments/order/organisms/OrderListLoader.graphql.ts","segments/order/organisms/OrderListLoader.tsx","graph/buildSubscription.tsx","hooks/useGuardedMutation.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/RelativeLink.tsx","segments/order/molecules/OrderTicker.graphql.ts","helpers/moment.ts","../node_modules/react-content-loader/dist/react-content-loader.es.js","atoms/TimeBadge.tsx","hooks/useTimer.ts","hooks/useStateRef.ts","segments/order/atoms/DeliveryTimeBadge.tsx","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","atoms/ObserverWhen.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/NoteLine.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderWareLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareList.tsx","segments/order/organisms/OrderDetail.graphql.ts","segments/order/molecules/OrderStateButton.tsx","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.graphql.ts","segments/order/organisms/OrderStateFlow.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/atoms/OrderBox.tsx","segments/overview/organisms/ClosureHistoryLoader.graphql.ts","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/molecules/StatisticsDateRangeFilter.tsx","segments/overview/pages/ClosureHistoryPage.tsx","atoms/MonospaceOutput.tsx","segments/overview/organisms/ClosureStatisticsContent.graphql.ts","segments/overview/organisms/ClosureStatisticsContent.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/pages/ClosurePage.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/organisms/DailyStatisticsLoader.graphql.ts","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/organisms/DailyStatisticsContent.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/organisms/OrdersStatisticsLoader.graphql.ts","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/organisms/OrdersStatisticsList.tsx","segments/overview/organisms/OrdersStatisticsSummary.tsx","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/routes/OverviewRoutes.tsx"],"names":["IconLineWrap","styled_components__WEBPACK_IMPORTED_MODULE_1__","div","withConfig","displayName","DescriptionContainer","labelMargin","labelWidth","labelWidthUnits","_styling__WEBPACK_IMPORTED_MODULE_2__","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_a","icon","label","children","props","__rest","iconComponent","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_3__","iconName","color","greyDark","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","react__WEBPACK_IMPORTED_MODULE_0__","n","_NoAccess__WEBPACK_IMPORTED_MODULE_1__","_RootProvider__WEBPACK_IMPORTED_MODULE_2__","mutationName","user","Object","canMutate","Fragment","Headline","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","h2","light","greyLight","greyDarkest","margin","size","composeSelectControlStyles","outerStyles","assign","control","base","state","selectProps","width","minWidth","controlStyles","border","greyMiddle","MarginAroundFormComponents","undefined","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_1__","_extends","styles","PageLayoutFullHeightItem","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","widthInColumns","LayoutGridCellMargin","widthComputed","column","leftPos","row","topPos","FullHeightDivStyled","withScrollArea","scrollAreaId","id","FlexRowSingle","justify","NoAccess","CanQuery","queryName","canQuery","HorizontalSeparator","HorizontalSeparatorStyled","visible","FlexColumn","fixedWidth","widthGrowIndex","padding","useRouterContext","react_router__WEBPACK_IMPORTED_MODULE_1__","ScrollArea","Price","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","SelectControlFlat","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","styled_components__WEBPACK_IMPORTED_MODULE_2__","_helpers_ramda__WEBPACK_IMPORTED_MODULE_3__","ItemStyled","textColor","isSelected","SelectorStyled","isInvalid","Component","[object Object]","isMulti","selectedItem","selectedItems","this","Array","isArray","length","item","contains","equals","onSingleSelection","onMultiSelection","isItemSelected","without","concat","items","isClearable","formatItem","hasSelection","onClick","updateSelection","map","idx","key","defaultProps","prop","getItemValue","FormSubmit","react_form__WEBPACK_IMPORTED_MODULE_1__","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_3__","_styling__WEBPACK_IMPORTED_MODULE_4__","green","disabled","_helpers_form__WEBPACK_IMPORTED_MODULE_2__","submitting","e","preventDefault","submitForm","isFormValid","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","value","_","useEffectOnce","effect","useSnackBar","EVariant","notistack_build_SnackbarContext__WEBPACK_IMPORTED_MODULE_0__","successVariant","variant","success","errorVariant","error","warningVariant","warning","infoVariant","info","enqueueSnackbar","enqueueSuccess","errorMessage","enqueueError","enqueueWarning","enqueueInfo","createExecutableQuery","query","context","react__WEBPACK_IMPORTED_MODULE_4__","useExecutableQuery","options","client","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_5__","result","mobx_react_lite__WEBPACK_IMPORTED_MODULE_3__","data","loading","hasAnyError","Boolean","execute","variables","__awaiter","queryResult","mobx__WEBPACK_IMPORTED_MODULE_2__","err","apollo_client_errors_ApolloError__WEBPACK_IMPORTED_MODULE_0__","graphQLErrors","_helpers_sentry__WEBPACK_IMPORTED_MODULE_6__","apollo_utilities__WEBPACK_IMPORTED_MODULE_1__","CardListTitle","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","styling","react_default","title","brand","name","UserCompanyBranches","index_module","render","RootProvider","CompanyBranchPicker","breakpoint","onSelectionChange","onSelectionClear","getDropdownProps","isLoading","branch","includes","find","filter","selected","ramda","CompanyBranchDropdown","CompanyBranchPicker_extends","CursorContainer","cursor","CompanyBranch","short","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","innerProps","ref","restInnerProps","style","react","placeholder","i18n","getOptionValue","formatOptionLabel","filterOption","rawInput","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","onChange","selection","head","OrderMapMarkerFragment","src_default","fragments","OrderListQuery","OrderStateModel_graphql","OrderTicker_graphql","OrderListSubscription","QueryOrderList","buildQuery","SubscribeOrderList","buildSubscription","OrderListLoader","getOrderState","knownCategories","types","NEW_ORDERS","PREPARING","READY_TO_DELIVER","ON_WAY","FINISHED","includeOldFinished","WithRoot","root","order","list","hasBranchFilter","noFilter","branchesFilter","categories","fetchPolicy","refetchOnConnectionLost","renderLoading","orders","orderStateCategories","handleUpdate","handleSubscriptionUpdate","categorizedOrders","reduce","category","push","categorizeOrders","orderStateCategory","update","prev","updatedOrder","orderExists","reject","isOldFinishedOrder","o","unshift","esm","Date","createdAt","companyBranch","oldOrderThreshold","_hooks_useEffectOnce__WEBPACK_IMPORTED_MODULE_0__","subscription","subscribeToMore","document","updateQuery","subscriptionData","useGuardedMutation","mutation","defaultMessage","_i18n__WEBPACK_IMPORTED_MODULE_7__","_useSnackBar__WEBPACK_IMPORTED_MODULE_9__","handleUserErrors","react__WEBPACK_IMPORTED_MODULE_3__","userErrors","forEach","handleGraphQLErrors","_helpers_ramda__WEBPACK_IMPORTED_MODULE_5__","propEq","handleError","apollo_client_errors_ApolloError__WEBPACK_IMPORTED_MODULE_1__","networkError","action","react__WEBPACK_IMPORTED_MODULE_3___default","ShowFeedbackButton","mutate","react_apollo_hooks__WEBPACK_IMPORTED_MODULE_4__","getUserErrors","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_8__","raven_js__WEBPACK_IMPORTED_MODULE_2___default","showReportDialog","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_3__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_2__","LinkStyled","RelativeLink","from","linkProps","location","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","resolveLocation","pathname","resolve_pathname__WEBPACK_IMPORTED_MODULE_3__","resolved","OrderTickerFragment","graphql_tag__WEBPACK_IMPORTED_MODULE_0__","graphql_tag__WEBPACK_IMPORTED_MODULE_0___default","_graph_fragments__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","cs","updateLocale","BulletListStyle","uid","Math","random","toString","substring","Wrap","idClip","uniquekey","idGradient","animationValues","rtl","viewBox","height","preserveAspectRatio","className","fill","clipPath","x","y","offset","stopColor","primaryColor","stopOpacity","primaryOpacity","animate","attributeName","values","dur","speed","repeatCount","secondaryColor","secondaryOpacity","target","i","arguments","source","prototype","hasOwnProperty","call","ContentLoader","cx","cy","r","rx","ry","InitialComponent","mergedProps","TimeBadgeStyled","styled_components_browser_esm","white","TimeBadgeUnknown","TimeBadgeInProgress","orange","TimeBadgeBigTime","TimeBadgeWarning","red","TimeBadgeCompleted","TimeBadgeCancelled","TimeBadge","minutes","isFinished","isCancelled","index_es","container","Number","isNaN","useTimer","interval","enabled","getNow","now","nextTick","raf_default","cancelTick","cancel","getLastUpdate","setLastUpdate","initialState","setState","current","useStateRef","handleRef","onFrame","loop","onStop","DeliveryTimeBadge","deliverAt","deliveredAt","FormInputDateContainer","styled_components__WEBPACK_IMPORTED_MODULE_4__","FormInputDate","field","defaultValue","inputWidth","minDate","react_form__WEBPACK_IMPORTED_MODULE_3__","fieldApi","react_datepicker__WEBPACK_IMPORTED_MODULE_2__","_helpers_moment__WEBPACK_IMPORTED_MODULE_5__","date","setValue","FlexRow","ObserverWhen","test","renderSuccess","renderFailure","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","OrderTickerStyled","modules","color_default","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Card","OrderTicker","showBranch","CANCEL","formats","address","totalSum","isPaidWithCard","_lingui_react","ContactLines","phones","emails","renderContact","contact","description","isMail","href","replace","renderClickableLink","email","CurrentNoteStyled","span","PreviousNoteStyled","NoteLine","note","previousNote","OrderCountLine","total","OrderWareLineWrap","CodeContainerStyled","NameContainerStyled","OrderWareLine_PriceContainerStyled","OrderWareLine","code","OrderCartTotalsContainer","OrderDetailTotals","transportFee","coverPrice","totalDiscount","OrderRuleLines","rules","join","OrderStats","stats","driver","OrderTimeLine_LabelStyled","labelMap","OrderTimeLine","orderTiming","timing","OrderWareList","orderWares","orderWare","recipe","nameLabel","sidedishes","sidedish","QueryOrderDetail","OrderStateDeliver_graphql","stateLabels","ACCEPTED","OrderStateButton","orderId","nextState","stateModel","TouchButton","text","updateOrderState","DriverName","backgroundColor","background","ButtonHeight","borderWidth","borderRadius","Button","valueContainer","singleValue","fontSize","OrderDriverSelect","drivers","selectedDriver","onSelect","onClear","onReload","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","Icon","react_select_esm","DropdownIndicator","OrderStateDeliver","branchId","orderDriver","refetch","removeDriver","selectDriver","deliverOrder","OrderStateFlowContainerWrapper","Control","OrderStateFlowContainer","child","minutesOption","MinutesContainer","MinutesItem","OrderStateTimeNotification_OrderStateTimeNotification","dialogOpen","openDialog","closeDialog","core_index_es","open","onClose","sendTimeNotification","QueryOrderState","OrderStateNewOrder","OrderStateAcceptedOrder","canDeliver","OrderStateOnWayOrder","OrderStateFlow","observe","allowedCategories","sentry","verror","deliveryType","enum","PICKUP","stateProps","OrderDetailContainerStyled","OrderDetail","allAppliedRules","customerOrdersCountCurrent","customerOrdersCountTotal","OrderBox","OrderBoxStyled","listModel","toggleOrderDetail","isOrderDetailOpen","ClosureHistoryQuery","ClosureHistoryLoader_useExecutableQuery","ClosureHistoryLoader","statistics","es","onSubmit","closureBranch","dateFrom","dateTo","updateFilter","Provider","ClosureHistoryTable","useClosureHistory","Loading","financialReports","report","reportSequence","reportDatetime","ClosureCurrentButton","react_router_dom","ButtonToRight","ClosureStatisticsFilter","showCurrent","setClosureBranch","StatisticsDateRangeFilter","submitButton","0","ClosureHistoryPage","FullPageLayout","pageTitle","useBackButton","backRoute","MonospaceOutputStyled","p","MonospaceOutput","output","RegExp","formatOutput","FinancialReport","QueryFinancialReport","ClosureStatisticsContent","reportId","showReport","lastReport","plainData","ClosureHistoryButton","ClosureSubmitButton","ClosureStatisticsControl_ButtonToRight","ClosureStatisticsControl","history","createClosure","ClosureStatisticsControl_graphql","companyBranchId","ClosurePage","match","params","StatisticsBranchFilter","setBranchFilter","clearBranchFilter","DailyStatisticsQuery","DailyStatisticsLoader_useExecutableQuery","DailyStatisticsLoader","DailyStatisticsContent","useDailyStatistics","dailyStatisticsPlain","categoryStatisticsPlain","deliveryStatisticsPlain","driversStatisticsPlain","DailyStatisticsPage","OrdersStatisticsQuery","OrdersStatisticsLoader_useExecutableQuery","useOrderStatistics","OrdersStatisticsLoader","OrdersStatisticsList","orderModel","react_content_loader_es","finishedOrders","StatPanel","StatLabel","h1","StatValue","OrdersStatisticsSummary","currency","onlinePayments","ordersCount","fees","OrdersStatisticsPage","PageLayout","layouts","w","h","showSoundControl","scrollPageTitle","ClosureButton","DailyStatisticsButton","OrdersStatisticsButton","OverviewPage","OverviewRoutes","PageTitle","react_router","SecureRoute","exact","path","NotFoundPage"],"mappings":"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","file":"static/js/52.7bc35e01.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 1 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 0 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.SFC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.SFC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return user.canMutate(mutationName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType = {}>\n  extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return <Select {...props} styles={composeSelectControlStyles(props.styles)} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.SFC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.SFC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.SFC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return user.canQuery(queryName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.SFC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { useContext } from 'react'\nimport * as Router from 'react-router'\n\nexport default function useRouterContext<\n  Params extends { [K in keyof Params]?: string } = {}\n>(): Router.RouteComponentProps<Params> {\n  // @ts-ignore\n  return useContext(Router.__RouterContext)\n}\n\n// export default function useRouter<\n// Params extends { [K in keyof Params]?: string } = {}\n// >(): Router.RouteComponentProps<Params> {\n//   // @ts-ignore\n//   let context = useContext(Router.__RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n\n// }\n\n// export default function useRouter(options = {}) {\n//   invariant(\n//     typeof useContext === \"function\",\n//     \"The useRouter hook requires React 16.7 or greater\"\n//   );\n\n//   let context = useContext(RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n// }\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n}\n\nexport const Price: React.SFC<IPriceProps> = ({ price, currencyCode }) => (\n  <span>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem != null\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.SFC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import { useEffect, EffectCallback } from 'react'\n\nexport const useEffectOnce = (effect: EffectCallback) => {\n  return useEffect(effect, [])\n}\n","import { SnackbarContextNext } from 'notistack/build/SnackbarContext'\nimport { useCallback, useContext } from 'react'\n\nenum EVariant {\n  default = 'default',\n  error = 'error',\n  success = 'success',\n  warning = 'warning',\n  info = 'info',\n}\n\ninterface IEnqueueOptions {\n  /** Type of the snackbar */\n  variant: EVariant\n  /** Event fired when user clicks on action button (if any) */\n  onClickAction(): void\n  /**\n   * You can pass material-ui Snackbar props here, and they will be applied to this individual snackbar.\n   * for example, this particular snackbar will be dismissed after 1sec.\n   */\n  autoHideDuration: number\n  action: ReactNode[]\n}\n\ninterface IEnqueueSnackbar {\n  (message: string, options?: Partial<IEnqueueOptions>)\n}\n\nconst successVariant = { variant: EVariant.success }\nconst errorVariant = { variant: EVariant.error }\nconst warningVariant = { variant: EVariant.warning }\nconst infoVariant = { variant: EVariant.info }\n\nexport function useSnackBar() {\n  const enqueueSnackbar: IEnqueueSnackbar = useContext(SnackbarContextNext)\n  const enqueueSuccess = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, successVariant),\n    [],\n  )\n  const enqueueError = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, errorVariant),\n    [],\n  )\n  const enqueueWarning = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, warningVariant),\n    [],\n  )\n  const enqueueInfo = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, infoVariant),\n    [],\n  )\n  return {\n    enqueueSnackbar,\n    enqueueSuccess,\n    enqueueError,\n    enqueueWarning,\n    enqueueInfo,\n  }\n}\n","import { ApolloError, QueryOptions } from 'apollo-client'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { getOperationName } from 'apollo-utilities'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\nimport { createContext } from 'react'\n\nimport { useApolloClient } from '../atoms/RootProvider'\nimport { reportError, reportFailingQuery } from '../helpers/sentry'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  errors?: GraphQLError[]\n  error?: ApolloError\n  hasAnyError: boolean\n}\n\nexport function createExecutableQuery<TData, TVariables>(query: DocumentNode) {\n  const context = createContext<IQueryResult<TData> | null>(null)\n\n  function useExecutableQuery(options: Partial<QueryOptions<TVariables>> = {}) {\n    const client = useApolloClient()\n    const result: IQueryResult<TData> = useObservable({\n      data: null,\n      loading: false,\n      get hasAnyError() {\n        return Boolean((result.errors && result.errors.length) || result.error)\n      },\n    })\n    const execute = async (variables: TVariables) => {\n      result.loading = true\n      try {\n        const queryResult = await client.query<TData, TVariables>({\n          ...options,\n          query,\n          variables,\n        })\n        runInAction(() => {\n          result.data = queryResult.data\n          result.errors = queryResult.errors\n          result.loading = false\n        })\n      } catch (err) {\n        if (isApolloError(err)) {\n          runInAction(() => {\n            result.error = err\n            result.errors = err.graphQLErrors\n            result.loading = false\n          })\n        } else {\n          runInAction(() => {\n            result.error = err\n            result.loading = false\n          })\n          reportError(err)\n        }\n      }\n      if (result.errors) {\n        reportFailingQuery(result.errors, {\n          query: getOperationName(query),\n          variables,\n        })\n      }\n      return result\n    }\n    return { result, execute }\n  }\n\n  useExecutableQuery.context = context\n\n  return useExecutableQuery\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { GCompanyBranch } from '../graph/types'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.SFC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<GCompanyBranch.Fragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import { observer } from 'mobx-react-lite'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { GCompanyBranch } from '../graph/types'\n\ninterface IProps {\n  render(branches: GCompanyBranch.Fragment[], isLoading: boolean): ReactNode\n}\n\nexport const UserCompanyBranches = observer<IProps>(({ render }) => {\n  const { user } = useRoot()\n  return user.branches ? render(user.branches, false) : render([], true)\n})\n","import React from 'react'\n\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\nimport { UserCompanyBranches } from '../organisms/UserCompanyBranches'\n\ntype TBranch = GCompanyBranch.Fragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: TBranch[]\n  isMulti?: boolean\n  isClearable?: boolean\n  isLoading?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.SFC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => (\n  <UserCompanyBranches\n    render={(branches, isLoading) => {\n      const isSelected = branch => selectedBranches.includes(branch.id)\n      const props: ICompanyBranchPickerImpl = {\n        textColor,\n        isClearable,\n        isMulti,\n        isLoading,\n        branches,\n        selectedBranch: isLoading ? null : branches.find(isSelected),\n        selectedBranches: isLoading ? [] : branches.filter(isSelected),\n        onSingleSelection(selected: TBranch) {\n          if (selected === null && onSelectionClear) {\n            onSelectionClear()\n          } else if (selected !== null && onSelectionChange) {\n            onSelectionChange([selected.id], [selected])\n          }\n        },\n        onMultiSelection(selected: TBranch[]) {\n          if (selected.length === 0 && onSelectionClear) {\n            onSelectionClear()\n          } else if (selected.length && onSelectionChange) {\n            onSelectionChange(selected.map(RM.prop('id')), selected)\n          }\n        },\n      }\n      if (branches.length < breakpoint) {\n        return <CompanyBranchFlatSelect {...props} />\n      }\n      return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n    }}\n  />\n)\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { GCompanyBranch } from '../graph/types'\n\ninterface ICompanyBranchProps {\n  branch: GCompanyBranch.Fragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.SFC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<GCompanyBranch.Fragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<ISelectControlProps, 'placeholder' | 'width'> {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.SFC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<GCompanyBranch.Fragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { GeoPointFragment } from '../../../graph/fragments'\n\nexport const OrderMapMarkerFragment = gql`\n  fragment GOrderMapMarker on Order {\n    id\n    deliverAt\n    gps {\n      ...GGeoPoint\n    }\n  }\n  ${GeoPointFragment}\n`\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { buildSubscription } from '../../../graph/buildSubscription'\nimport { GOrderList, SOrderList } from '../../../graph/types'\nimport { OrderStateCategoryFragment } from '../models/OrderStateModel.graphql'\nimport { OrderMapMarkerFragment } from '../molecules/OrderMapMarker.graphql'\nimport { OrderTickerFragment } from '../molecules/OrderTicker.graphql'\n\nconst OrderListQuery = gql`\n  query GOrderList(\n    $branches: [ID!]\n    $categories: [OrderStateCategoryEnum!]\n    $includeOldFinished: Boolean\n  ) {\n    orders(\n      order: {\n        companyBranches: $branches\n        orderStateCategoriesOR: $categories\n        includeOldFinished: $includeOldFinished\n      }\n    ) {\n      id\n      ...GOrderStateCategory\n      ...GOrderListTicker\n      ...GOrderMapMarker\n    }\n    orderStateCategories {\n      code\n      enum\n    }\n  }\n\n  ${OrderStateCategoryFragment}\n  ${OrderMapMarkerFragment}\n  ${OrderTickerFragment}\n`\n\nconst OrderListSubscription = gql`\n  subscription SOrderList(\n    $branches: [ID!]\n    $categories: [OrderStateCategoryEnum!]\n  ) {\n    updatedOrder(\n      companyBranches: $branches\n      orderStateCategoriesOR: $categories\n    ) {\n      order {\n        id\n        ...GOrderStateCategory\n        ...GOrderListTicker\n        ...GOrderMapMarker\n      }\n    }\n  }\n  ${OrderStateCategoryFragment}\n  ${OrderMapMarkerFragment}\n  ${OrderTickerFragment}\n`\n\nexport const QueryOrderList = buildQuery<\n  GOrderList.Query,\n  GOrderList.Variables\n>(OrderListQuery)\n\nexport const SubscribeOrderList = buildSubscription<\n  SOrderList.Subscription,\n  SOrderList.Variables,\n  GOrderList.Query\n>(OrderListSubscription)\n","import { differenceInHours } from 'date-fns'\nimport React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport {\n  GOrderList,\n  OrderStateCategoryEnum,\n  SOrderList,\n} from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { QueryOrderList, SubscribeOrderList } from './OrderListLoader.graphql'\n\nconst knownCategories = [\n  OrderStateCategoryEnum.NEW_ORDERS,\n  OrderStateCategoryEnum.PREPARING,\n  OrderStateCategoryEnum.READY_TO_DELIVER,\n  OrderStateCategoryEnum.ON_WAY,\n  OrderStateCategoryEnum.FINISHED,\n]\n\nexport type TOrder = GOrderList.Orders\n\nexport type TCategorizedOrders = { [state in OrderStateCategoryEnum]: TOrder[] }\n\nexport interface ILoaderProps {\n  isLoading: boolean\n  noFilter: boolean\n  orders?: TOrder[]\n  categorizedOrders?: TCategorizedOrders\n  categories?: GOrderList.OrderStateCategories[]\n}\n\ninterface IProps {\n  children(props: ILoaderProps): ReactNode\n  includeOldFinished?: boolean\n}\n\nexport const OrderListLoader: React.SFC<IProps> = ({\n  children,\n  includeOldFinished = false,\n}) => (\n  <WithRoot\n    render={root => {\n      if (!root.order.list.hasBranchFilter) {\n        return children({ isLoading: false, noFilter: true })\n      }\n      const variables: GOrderList.Variables = {\n        branches: root.order.list.branchesFilter,\n        categories: knownCategories,\n        includeOldFinished,\n      }\n      return (\n        <QueryOrderList\n          fetchPolicy=\"cache-and-network\"\n          refetchOnConnectionLost={true}\n          variables={variables}\n          renderLoading={false}\n          render={(\n            { orders = [], orderStateCategories: categories = [] },\n            result,\n          ) => {\n            return (\n              <SubscribeOrderList\n                queryResult={result}\n                variables={variables}\n                handleUpdate={handleSubscriptionUpdate}\n              >\n                {children({\n                  isLoading: result.loading,\n                  noFilter: false,\n                  orders,\n                  categorizedOrders: categorizeOrders(orders),\n                  categories,\n                })}\n              </SubscribeOrderList>\n            )\n          }}\n        />\n      )\n    }}\n  />\n)\n\nexport function getOrderState(order: {\n  orderStateCategory: OrderStateCategoryEnum\n}) {\n  return order.orderStateCategory\n}\n\nfunction categorizeOrders(orders: TOrder[]) {\n  return orders.reduce(\n    (result, order) => {\n      const category = getOrderState(order)\n      if (!result[category]) {\n        result[category] = [order]\n      } else {\n        result[category].push(order)\n      }\n      return result\n    },\n    {} as TCategorizedOrders,\n  )\n}\n\nfunction handleSubscriptionUpdate(\n  update: SOrderList.Subscription,\n  prev: GOrderList.Query,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  let orderExists = false\n  const orders = RM.reject(isOldFinishedOrder, prev.orders).map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { ...prev, orders }\n}\n\nfunction isOldFinishedOrder(order: GOrderList.Orders) {\n  return (\n    order.orderStateCategory === OrderStateCategoryEnum.FINISHED &&\n    differenceInHours(new Date(), order.createdAt) >\n      order.companyBranch.oldOrderThreshold\n  )\n}\n","import { DocumentNode } from 'graphql'\nimport { QueryResult } from 'react-apollo'\n\nimport { useEffectOnce } from '../hooks/useEffectOnce'\n\nexport function buildSubscription<TSubscription, TVariables, TQuery = {}>(\n  subscription: DocumentNode,\n) {\n  type TResult = QueryResult<TQuery, TVariables>\n  interface IProps {\n    children: ReactNode\n    queryResult: TResult\n    variables: TVariables\n    handleUpdate(updatedData: TSubscription, prevData: TQuery): TQuery | void\n  }\n  function GSubscription(props: IProps) {\n    useEffectOnce(() => {\n      const { queryResult, variables, handleUpdate } = props\n      return queryResult.subscribeToMore({\n        document: subscription,\n        variables,\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!(subscriptionData && subscriptionData.data)) {\n            return prev\n          }\n          // @ts-ignore Bad typing of updateQuery using TQuery\n          return handleUpdate(subscriptionData.data, prev) || prev\n        },\n      })\n    })\n    return props.children\n  }\n  return GSubscription\n}\n","import { Trans } from '@lingui/react'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport Raven from 'raven-js'\nimport React, { useCallback } from 'react'\nimport { MutationHookOptions, useMutation } from 'react-apollo-hooks'\n\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { useSnackBar } from './useSnackBar'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {\n  getUserErrors?(data: TData): string[] | null\n}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const { enqueueSnackbar, enqueueError, enqueueInfo } = useSnackBar()\n\n  const handleUserErrors = useCallback((userErrors: ReadonlyArray<string>) => {\n    userErrors.forEach(enqueueInfo)\n  }, [])\n\n  const handleGraphQLErrors = useCallback(\n    (errors: ReadonlyArray<GraphQLError>) => {\n      const userErrors = errors.filter(RM.propEq('showToUser', true))\n      if (userErrors.length === 0) {\n        enqueueError(defaultMessage)\n      } else {\n        handleUserErrors(userErrors.map(RM.prop('message')))\n      }\n    },\n    [],\n  )\n\n  const handleError = useCallback((err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        enqueueError(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n    enqueueSnackbar(defaultMessage, {\n      action: [<ShowFeedbackButton key=\"feedback\" />],\n    })\n  }, [])\n\n  const mutate = useMutation(mutation, options)\n  return async (variables: TVariables) => {\n    try {\n      const result = await mutate({ variables })\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      const data = result.data as TData\n      if (options.getUserErrors) {\n        const userErrors = options.getUserErrors(data)\n        if (userErrors !== null) {\n          handleUserErrors(userErrors)\n        }\n      }\n      return data\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n\nfunction ShowFeedbackButton() {\n  return (\n    <TouchButton onClick={() => Raven.showReportDialog()}>\n      <Trans> Submit feedback </Trans>\n    </TouchButton>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.SFC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.SFC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import gql from 'graphql-tag'\n\nimport { AddressFragment, CustomerFragment } from '../../../graph/fragments'\n\nexport const OrderTickerFragment = gql`\n  fragment GOrderListTicker on Order {\n    id\n    createdAt\n    isPaidWithCard\n    deliverAt\n    deliverAtWorst\n    deliveredAt\n    companyBranch {\n      id\n      name\n      oldOrderThreshold\n    }\n    address {\n      ...GAddress\n    }\n    customer {\n      ...GCustomer\n    }\n    totalSum {\n      value\n    }\n  }\n  ${AddressFragment}\n  ${CustomerFragment}\n`\n","import moment from 'moment'\n\nconst cs = require('moment/locale/cs')\n\nmoment.updateLocale('cs', cs)\n\nexport default moment\n","import { createElement } from 'react';\n\nvar uid = function uid() {\n  return Math.random().toString(36).substring(2);\n};\n\nvar Wrap = function Wrap(props) {\n  var idClip = props.uniquekey ? props.uniquekey + \"-idClip\" : uid();\n  var idGradient = props.uniquekey ? props.uniquekey + \"-idGradient\" : uid();\n  var defautlAnimation = [\"-3; 1\", \"-2; 2\", \"-1; 3\"];\n  var rtlAnimation = [\"1; -3\", \"2; -2\", \"3; -1\"];\n  var animationValues = props.rtl ? rtlAnimation : defautlAnimation;\n  return createElement(\"svg\", {\n    viewBox: \"0 0 \" + props.width + \" \" + props.height,\n    style: props.style,\n    preserveAspectRatio: props.preserveAspectRatio,\n    className: props.className\n  }, createElement(\"rect\", {\n    style: {\n      fill: \"url(#\" + idGradient + \")\"\n    },\n    clipPath: \"url(#\" + idClip + \")\",\n    x: \"0\",\n    y: \"0\",\n    width: props.width,\n    height: props.height\n  }), createElement(\"defs\", null, createElement(\"clipPath\", {\n    id: idClip\n  }, props.children), createElement(\"linearGradient\", {\n    id: idGradient\n  }, createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: props.primaryColor,\n    stopOpacity: props.primaryOpacity\n  }, props.animate && createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: animationValues[0],\n    dur: props.speed + \"s\",\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: \"50%\",\n    stopColor: props.secondaryColor,\n    stopOpacity: props.secondaryOpacity\n  }, props.animate && createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: animationValues[1],\n    dur: props.speed + \"s\",\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: props.primaryColor,\n    stopOpacity: props.primaryOpacity\n  }, props.animate && createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: animationValues[2],\n    dur: props.speed + \"s\",\n    repeatCount: \"indefinite\"\n  })))));\n};\n\nvar FacebookStyle = function FacebookStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"rect\", {\n    x: \"70\",\n    y: \"15\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"117\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"70\",\n    y: \"35\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"85\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"80\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"350\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"100\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"380\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"120\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"201\",\n    height: \"6.4\"\n  }), createElement(\"circle\", {\n    cx: \"30\",\n    cy: \"30\",\n    r: \"30\"\n  }));\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar InstagramStyle = function InstagramStyle(props) {\n  return createElement(ContentLoader, _extends({}, props, {\n    height: 480\n  }), createElement(\"circle\", {\n    cx: \"30\",\n    cy: \"30\",\n    r: \"30\"\n  }), createElement(\"rect\", {\n    x: \"75\",\n    y: \"13\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"100\",\n    height: \"13\"\n  }), createElement(\"rect\", {\n    x: \"75\",\n    y: \"37\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"50\",\n    height: \"8\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"70\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"400\",\n    height: \"400\"\n  }));\n};\n\nvar CodeStyle = function CodeStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"70\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"80\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"100\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"190\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"10\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"15\",\n    y: \"20\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"130\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"155\",\n    y: \"20\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"130\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"15\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"90\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"115\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"60\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"185\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"60\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"60\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"30\",\n    height: \"10\"\n  }));\n};\n\nvar ListStyle = function ListStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"250\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"20\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"170\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"60\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"250\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"80\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"200\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"100\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"80\",\n    height: \"10\"\n  }));\n};\n\nvar BulletListStyle = function BulletListStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"20\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"15\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"50\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"45\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"80\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"75\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"110\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"105\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }));\n};\n\nvar defaultProps = {\n  animate: true,\n  height: 130,\n  preserveAspectRatio: \"xMidYMid meet\",\n  primaryColor: \"#f0f0f0\",\n  primaryOpacity: 1,\n  rtl: false,\n  secondaryColor: \"#e0e0e0\",\n  secondaryOpacity: 1,\n  speed: 2,\n  width: 400\n};\n\nvar InitialComponent = function InitialComponent(props) {\n  return createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"5\",\n    ry: \"5\",\n    width: props.width,\n    height: props.height\n  });\n};\n\nvar ContentLoader = function ContentLoader(props) {\n  var mergedProps = _extends({}, defaultProps, props);\n\n  var children = props.children ? props.children : createElement(InitialComponent, mergedProps);\n  return createElement(Wrap, mergedProps, children);\n};\n\nexport { defaultProps, FacebookStyle as Facebook, InstagramStyle as Instagram, CodeStyle as Code, ListStyle as List, BulletListStyle as BulletList };\nexport default ContentLoader;","import { CancelOutlined } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface ITimeBadgeProps {\n  minutes?: number\n  onClick?(): void\n  isFinished?: boolean\n  isCancelled?: boolean\n}\n\nconst TimeBadgeStyled = styled.div`\n  min-width: 1.5rem;\n  min-height: 1.5rem;\n  padding: 0.3rem;\n  border: 1px solid white;\n  border-radius: 4rem;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-size: 1rem;\n  margin: 0;\n  vertical-align: middle;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst TimeBadgeUnknown = styled(TimeBadgeStyled)`\n  background: ${Colors.greyMiddle};\n  color: ${Colors.greyDarkest};\n`\nconst TimeBadgeInProgress = styled(TimeBadgeStyled)`\n  background: ${Colors.orange};\n`\nconst TimeBadgeBigTime = styled(TimeBadgeStyled)`\n  font-size: 0.8rem;\n  padding: 0.4rem 0.3rem 0.2rem 0.3rem;\n  background: ${Colors.orange};\n`\nconst TimeBadgeWarning = styled(TimeBadgeStyled)`\n  background: ${Colors.red};\n`\nconst TimeBadgeCompleted = styled(TimeBadgeStyled)`\n  background: ${Colors.green};\n`\nconst TimeBadgeCancelled = styled(TimeBadgeStyled)`\n  background: ${Colors.greyMiddle};\n  padding: 0.3rem 0.3rem 0 0.3rem;\n`\n\nexport const TimeBadge: React.SFC<ITimeBadgeProps> = ({\n  minutes = 0,\n  onClick,\n  isFinished = false,\n  isCancelled = false,\n}) => {\n  if (isCancelled) {\n    return (\n      <TimeBadgeCancelled onClick={onClick}>\n        <CancelOutlined />\n      </TimeBadgeCancelled>\n    )\n  }\n\n  let children = minutes.toString()\n  let container = TimeBadgeInProgress\n\n  if (Number.isNaN(minutes)) {\n    container = TimeBadgeUnknown\n    children = '?'\n  } else if (isFinished) {\n    if (minutes <= 0) {\n      container = TimeBadgeWarning\n    } else {\n      container = TimeBadgeCompleted\n    }\n  } else if (minutes <= 20) {\n    container = TimeBadgeWarning\n    if (minutes < -99) {\n      children = '-'\n    }\n  } else if (minutes > 99) {\n    container = TimeBadgeBigTime\n  }\n\n  return React.createElement(container, { children, onClick })\n}\n","import raf from 'raf'\nimport { useEffect, useRef } from 'react'\n\nimport { useStateRef } from './useStateRef'\n\ninterface IOptions {\n  interval: number\n  enabled: boolean\n  getNow?(): number\n  nextTick?(onTick: () => void): number\n  cancelTick?(handle: number): void\n}\n\nexport const useTimer = ({\n  interval,\n  enabled,\n  getNow = Date.now,\n  nextTick = raf,\n  cancelTick = raf.cancel,\n}: IOptions) => {\n  const [getLastUpdate, setLastUpdate] = useStateRef(getNow)\n  const handleRef = useRef<number | null>(null)\n\n  useEffect(\n    () => {\n      const onFrame = () => {\n        const now = getNow()\n        const last = getLastUpdate()\n        const delta = now - last\n        if (delta >= interval) {\n          setLastUpdate(now)\n        }\n        loop()\n      }\n\n      const onStart = () => {\n        loop()\n      }\n\n      const onStop = () => {\n        if (handleRef.current) {\n          cancelTick(handleRef.current)\n          handleRef.current = null\n        }\n      }\n\n      const loop = () => {\n        if (enabled) {\n          handleRef.current = nextTick(onFrame)\n        } else {\n          onStop()\n        }\n      }\n\n      onStart()\n      return onStop\n    },\n    [interval, enabled],\n  )\n\n  return getLastUpdate()\n}\n","import { useRef, useState } from 'react'\n\nexport function useStateRef<T>(initialState: T | (() => T)) {\n  const [state, setState] = useState(initialState)\n  const ref = useRef<T | null>(null)\n  ref.current = state\n  const getValue = () => ref.current\n  return [getValue, setState] as [(() => T), ((value: T) => void)]\n}\n","import { differenceInMinutes } from 'date-fns'\nimport React from 'react'\n\nimport { TimeBadge } from '../../../atoms/TimeBadge'\nimport { DateTime } from '../../../graph/types'\nimport { useTimer } from '../../../hooks/useTimer'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: DateTime\n  deliveredAt: DateTime | null\n  isCancelled?: boolean\n  onClick?(): void\n}\n\nconst MINUTE = 60 * 1000\n\nexport const DeliveryTimeBadge: React.SFC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  onClick,\n}) => {\n  const now = useTimer({ interval: MINUTE, enabled: !deliveredAt })\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n  return (\n    <TimeBadge\n      minutes={minutes}\n      onClick={onClick}\n      isFinished={Boolean(deliveredAt)}\n      isCancelled={isCancelled}\n    />\n  )\n}\n","import 'react-datepicker/dist/react-datepicker.css'\n\nimport React from 'react'\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Field, FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport moment from '../helpers/moment'\n\ninterface IProps\n  extends Omit<ReactDatePickerProps, 'onChange' | 'selected' | 'minDate'> {\n  field: FieldType\n  defaultValue?: Date\n  inputWidth?: string\n  minDate?: Date\n}\n\nconst FormInputDateContainer = styled.div`\n  & .react-datepicker-wrapper,\n  .react-datepicker__input-container,\n  .react-datepicker__input-container input {\n    width: ${({ width = '6rem' }: { width?: string }) => width};\n  }\n`\nFormInputDateContainer.displayName = 'FormInputDateContainer'\n\nexport const FormInputDate: React.SFC<IProps> = ({\n  field,\n  defaultValue,\n  inputWidth,\n  minDate,\n  ...props\n}) => (\n  <FormInputDateContainer width={inputWidth}>\n    <Field\n      field={field}\n      defaultValue={defaultValue}\n      render={fieldApi => (\n        <DatePicker\n          selected={moment(fieldApi.value || new Date())}\n          onChange={date => fieldApi.setValue(date)}\n          minDate={minDate === undefined ? undefined : moment(minDate)}\n          {...props}\n        />\n      )}\n    />\n  </FormInputDateContainer>\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { Observer } from 'mobx-react'\nimport React from 'react'\n\ninterface IObserverWhenProps {\n  test(): boolean\n  renderSuccess(): ReactNode\n  renderFailure?(): ReactNode\n}\n\nexport const ObserverWhen: React.SFC<IObserverWhenProps> = ({\n  test,\n  renderSuccess,\n  renderFailure,\n}) => (\n  <Observer\n    render={() =>\n      test() ? renderSuccess() : renderFailure ? renderFailure() : null\n    }\n  />\n)\n","import React from 'react'\n\nimport { GCustomer } from '../../../graph/types'\n\ninterface ICustomerNameProps {\n  customer: GCustomer.Fragment | null\n}\n\nexport const CustomerIdentity: React.SFC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Trans } from '@lingui/react'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { GOrderList, OrderStateCategoryEnum } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderList.Orders\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nconst ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nexport const OrderTicker: React.SFC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => (\n  <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n    {showBranch && (\n      <ToBranchContainerStyled>\n        {order.companyBranch.name}\n      </ToBranchContainerStyled>\n    )}\n\n    <OrderTickerMainContentStyled>\n      <DeliveryTimeBadgeContainerStyled>\n        <DeliveryTimeBadge\n          deliverAt={order.deliverAt}\n          deliveredAt={order.deliveredAt}\n          isCancelled={\n            order.orderStateCategory === OrderStateCategoryEnum.CANCEL\n          }\n        />\n      </DeliveryTimeBadgeContainerStyled>\n\n      <AddressDisplayContainerStyled>\n        {formatAddress(order.address)}\n      </AddressDisplayContainerStyled>\n\n      <CustomerIdentityContainerStyled>\n        <CustomerIdentity customer={order.customer} />\n      </CustomerIdentityContainerStyled>\n\n      <PriceContainerStyled>\n        <Price price={order.totalSum.value} />\n        {order.isPaidWithCard && (\n          <>\n            <PaidMarkStyled />\n            <PaidTextStyled>\n              <Trans>Paid</Trans>\n            </PaidTextStyled>\n          </>\n        )}\n      </PriceContainerStyled>\n    </OrderTickerMainContentStyled>\n  </OrderTickerStyled>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { GEmail, GPhone } from '../../../graph/types'\n\ninterface IContactLinesProps {\n  phones: GPhone.Fragment[]\n  emails: GEmail.Fragment[]\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (GPhone.Fragment | GEmail.Fragment)\n\nexport const ContactLines: React.SFC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.SFC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { Plural, SelectOrdinal, Trans } from '@lingui/react'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.SFC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.SFC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nconst OrderCartTotalsContainer = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.SFC<IProps> = ({ order }) => (\n  <OrderCartTotalsContainer>\n    <OrderWareLine\n      label={i18n.t`Transport fee`}\n      price={order.transportFee.value}\n    />\n    <OrderWareLine\n      label={i18n.t`Covers price`}\n      price={order.coverPrice.value}\n    />\n    <OrderWareLine\n      label={i18n.t`Discount total`}\n      price={order.totalDiscount.value * -1}\n    />\n    <b>\n      <OrderWareLine label={i18n.t`Total price`} price={order.totalSum.value} />\n    </b>\n  </OrderCartTotalsContainer>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: string[]\n}\n\nexport const OrderRuleLines: React.SFC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import { Trans } from '@lingui/react'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GOrderDetail } from '../../../graph/types'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nconst LabelStyled = styled.i`\n  padding-left: 1rem;\n  font-size: 0.8rem;\n`\n\nexport const OrderStats: React.SFC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <LabelStyled>\n          <Trans>Deliver on time</Trans>\n        </LabelStyled>\n      </div>,\n    )\n  }\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <LabelStyled>\n          <Trans>Driver</Trans>\n        </LabelStyled>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GOrderDetail, OrderStateCategoryEnum } from '../../../graph/types'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  orderTiming: GOrderDetail.OrderTiming[]\n}\n\nconst LabelStyled = styled.i`\n  padding-left: 1rem;\n  font-size: 0.8rem;\n`\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NEW_ORDERS]: i18nMark('Created'),\n  [OrderStateCategoryEnum.PREPARING]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.READY_TO_DELIVER]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.ON_WAY]: i18nMark('On way'),\n  [OrderStateCategoryEnum.FINISHED]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.SFC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <LabelStyled>{i18n._(labelMap[timing.orderStateCategory])}</LabelStyled>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React, { Fragment } from 'react'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: GOrderDetail.Items[]\n}\n\nexport const OrderWareList: React.SFC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: GOrderDetail.Items) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  EmailFragment,\n  PhoneFragment,\n  PriceFragment,\n} from '../../../graph/fragments'\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderDriverFragment } from '../molecules/OrderStateDeliver.graphql'\n\nexport const QueryOrderDetail = buildQuery<\n  GOrderDetail.Query,\n  GOrderDetail.Variables\n>(gql`\n  query GOrderDetail($id: ID!) {\n    order(id: $id) {\n      id\n      createdAt\n      deliverAt\n      companyBranch {\n        id\n      }\n      customer {\n        emails {\n          ...GEmail\n        }\n        phones {\n          ...GPhone\n        }\n      }\n      customerOrdersCountCurrent\n      customerOrdersCountTotal\n      note\n      previousNote\n      allAppliedRules\n      items {\n        ...GOrderDetailWare\n        sidedishes: sideDishes {\n          ...GOrderDetailWare\n        }\n      }\n      totalSum {\n        ...GPrice\n      }\n      transportFee {\n        ...GPrice\n      }\n      coverPrice {\n        ...GPrice\n      }\n      totalDiscount {\n        ...GPrice\n      }\n      orderTiming: orderStateCategoryRelations {\n        createdAt\n        orderStateCategory\n      }\n      ...GOrderDriver\n    }\n  }\n\n  fragment GOrderDetailWare on OrderRecipe {\n    id\n    recipe {\n      id\n      code\n      nameLabel\n    }\n    price {\n      ...GPrice\n    }\n  }\n  ${PriceFragment}\n  ${EmailFragment}\n  ${PhoneFragment}\n  ${OrderDriverFragment}\n`)\n","import { i18nMark } from '@lingui/react'\nimport React from 'react'\n\nimport { OrderStateEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { TOrderStateModel } from '../models/OrderStateModel'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n  stateModel: TOrderStateModel\n}\n\nconst stateLabels = {\n  [OrderStateEnum.ACCEPTED]: i18nMark('Accept order'),\n  [OrderStateEnum.FINISHED]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.SFC<IProps> = ({\n  orderId,\n  nextState,\n  stateModel,\n}) => (\n  <TouchButton\n    text={i18n._(stateLabels[nextState])}\n    width=\"7.375rem\"\n    onClick={() => {\n      stateModel.updateOrderState(orderId, nextState)\n    }}\n  />\n)\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { GDriver } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = GDriver.Fragment\n\ninterface IProps {\n  drivers: TDriver[]\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst DriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst backgroundColor = {\n  background: Colors.greyMiddle,\n}\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...backgroundColor,\n    ...textColor,\n    height: Spacing.ButtonHeight,\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    ...backgroundColor,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n}\n\nexport const OrderDriverSelect: React.SFC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver =>\n      driver === null ? onClear() : onSelect(driver as TDriver)\n    }\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <DriverName>{`${driver.firstName} ${driver.lastName}`}</DriverName>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { OrderStateCategoryEnum } from '../../../graph/types'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { QueryDriverSelection } from './OrderStateDeliver.graphql'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n  stateModel: TOrderStateModel\n}\n\nexport const OrderStateDeliver: React.SFC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n  stateModel,\n}) => (\n  <QueryDriverSelection\n    fetchPolicy=\"network-only\"\n    variables={{ branchId: branchId, orderId }}\n    render={(\n      { drivers, order: { driver: orderDriver } },\n      { loading, refetch },\n    ) => (\n      <OrderDriverSelect\n        drivers={drivers}\n        selectedDriver={orderDriver ? orderDriver.user : null}\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          if (orderDriver) stateModel.removeDriver(orderDriver.id)\n        }}\n        onSelect={driver => {\n          stateModel.selectDriver(orderId, driver.id)\n          if (orderStateCategory !== OrderStateCategoryEnum.ON_WAY) {\n            stateModel.deliverOrder(orderId)\n          }\n        }}\n      />\n    )}\n  />\n)\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst OrderStateFlowContainerWrapper = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n  height: ${Spacing.ButtonHeight};\n`\n\nconst Control = styled.div`\n  margin: 0 0 0 0.5rem;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.SFC<IProps> = ({ children }) => (\n  <OrderStateFlowContainerWrapper>\n    {Children.map(children, (child, idx) => (\n      <Control key={idx}>{child}</Control>\n    ))}\n  </OrderStateFlowContainerWrapper>\n)\n","import { Trans } from '@lingui/react'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { TOrderStateModel } from '../models/OrderStateModel'\n\ninterface IProps {\n  orderId: ID\n  stateModel: TOrderStateModel\n}\n\ninterface IState {\n  dialogOpen: boolean\n}\n\nconst minutesOption = [20, 30, 45, 60, 75, 90, 105, 120]\n\nconst MinutesContainer = styled.div`\n  display: flex;\n  justify-content: 'center';\n  flex-wrap: 'wrap';\n  font-size: 2rem;\n`\nconst MinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport class OrderStateTimeNotification extends React.Component<\n  IProps,\n  IState\n> {\n  state = { dialogOpen: false }\n  openDialog = () => {\n    this.setState({ dialogOpen: true })\n  }\n  closeDialog = () => {\n    this.setState({ dialogOpen: false })\n  }\n  render() {\n    const { orderId, stateModel } = this.props\n    return (\n      <>\n        <TouchButton iconName=\"schedule\" onClick={this.openDialog} />\n        <Dialog open={this.state.dialogOpen} onClose={this.closeDialog}>\n          <DialogTitle>\n            <Trans>\n              Send expected time of delivery to customer (in minutes)\n            </Trans>\n            <MinutesContainer>\n              {minutesOption.map(minutes => (\n                <MinutesItem key={minutes}>\n                  <TouchButton\n                    onClick={() => {\n                      stateModel.sendTimeNotification(orderId, minutes)\n                      this.closeDialog()\n                    }}\n                    color={Colors.green}\n                  >\n                    {minutes}\n                  </TouchButton>\n                </MinutesItem>\n              ))}\n            </MinutesContainer>\n          </DialogTitle>\n        </Dialog>\n      </>\n    )\n  }\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GOrderState } from '../../../graph/types'\nimport { OrderStateCategoryFragment } from '../models/OrderStateModel.graphql'\n\nexport const QueryOrderState = buildQuery<\n  GOrderState.Query,\n  GOrderState.Variables\n>(gql`\n  query GOrderState($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      deliveryType {\n        enum\n      }\n      ...GOrderStateCategory\n    }\n    companyBranch(id: $branchId) {\n      id\n      allowedCategories\n    }\n  }\n  ${OrderStateCategoryFragment}\n`)\n","import React from 'react'\nimport { VError } from 'verror'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n} from '../../../graph/types'\nimport { reportError } from '../../../helpers/sentry'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\nimport { getOrderState } from './OrderListLoader'\nimport { QueryOrderState } from './OrderStateFlow.graphql'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  stateModel: TOrderStateModel\n  orderStateCategory: OrderStateCategoryEnum\n  canDeliver: boolean\n}\n\nconst OrderStateNewOrder: React.SFC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.ACCEPTED} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.SFC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.FINISHED} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.SFC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.FINISHED} {...props} />\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.SFC<IProps> = ({ orderId, branchId }) => (\n  <WithRoot\n    observe={false}\n    render={({ order: { state: stateModel } }) => (\n      <QueryOrderState\n        variables={{ orderId, branchId }}\n        render={({ order, companyBranch: { allowedCategories } }) => {\n          const orderStateCategory = getOrderState(order)\n          if (!orderStateCategory) {\n            reportError(new VError('Order %s has got no state categories'))\n            return null\n          }\n          const canDeliver =\n            allowedCategories.includes(OrderStateCategoryEnum.ON_WAY) &&\n            order.deliveryType != null &&\n            order.deliveryType.enum !== DeliveryTypeEnum.PICKUP\n\n          const stateProps: IStateProps = {\n            orderId,\n            branchId,\n            stateModel,\n            orderStateCategory,\n            canDeliver,\n          }\n          switch (orderStateCategory) {\n            case OrderStateCategoryEnum.NEW_ORDERS:\n              return <OrderStateNewOrder {...stateProps} />\n            case OrderStateCategoryEnum.PREPARING:\n              return <OrderStateAcceptedOrder {...stateProps} />\n            case OrderStateCategoryEnum.ON_WAY:\n              return <OrderStateOnWayOrder {...stateProps} />\n            default:\n              return null\n          }\n        }}\n      />\n    )}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { QueryOrderDetail } from './OrderDetail.graphql'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IOrderDetailProps {\n  orderId: string\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail: React.SFC<IOrderDetailProps> = ({ orderId }) => (\n  <QueryOrderDetail\n    variables={{ id: orderId }}\n    fetchPolicy=\"cache-and-network\"\n    render={({ order }) => (\n      <>\n        <OrderDetailContainerStyled>\n          <HorizontalSeparator />\n          <OrderWareList orderWares={order.items} />\n          <OrderDetailTotals order={order} />\n          <OrderRuleLines rules={order.allAppliedRules}>\n            <OrderCountLine\n              current={order.customerOrdersCountCurrent}\n              total={order.customerOrdersCountTotal}\n            />\n          </OrderRuleLines>\n          <ContactLines\n            phones={order.customer.phones}\n            emails={order.customer.emails}\n          />\n          <NoteLine note={order.note} previousNote={order.previousNote} />\n          <HorizontalSeparator />\n          <OrderTimeLine orderTiming={order.orderTiming} />\n          <OrderStats order={order} />\n        </OrderDetailContainerStyled>\n        <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ObserverWhen } from '../../../atoms/ObserverWhen'\nimport { GOrderList } from '../../../graph/types'\nimport { Colors, Radiuses } from '../../../styling'\nimport { TOrderListModel } from '../models/OrderListModel'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ninterface IProps {\n  order: GOrderList.Orders\n  showBranch: boolean\n  listModel: TOrderListModel\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox: React.SFC<IProps> = ({\n  order,\n  showBranch,\n  listModel,\n}) => (\n  <OrderBoxStyled id={`order-${order.id}`}>\n    <OrderTicker\n      order={order}\n      showBranch={showBranch}\n      onClick={() => listModel.toggleOrderDetail(order)}\n    />\n    <ObserverWhen\n      test={() => listModel.isOrderDetailOpen(order.id)}\n      renderSuccess={() => <OrderDetail orderId={order.id} />}\n    />\n  </OrderBoxStyled>\n)\n","import gql from 'graphql-tag'\n\nexport const ClosureHistoryQuery = gql`\n  query GClosureHistory($branchId: ID!, $dateFrom: Date!, $dateTo: Date!) {\n    financialReports(\n      companyBranchId: $branchId\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      id\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n","import React, { useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GClosureHistory } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { createExecutableQuery } from '../../../hooks/useExecutableQuery'\nimport { ClosureHistoryQuery } from './ClosureHistoryLoader.graphql'\n\nexport type TReports = GClosureHistory.FinancialReports\n\nconst useExecutableQuery = createExecutableQuery<\n  GClosureHistory.Query,\n  GClosureHistory.Variables\n>(ClosureHistoryQuery)\n\nexport const useClosureHistory = () => useContext(useExecutableQuery.context)!\n\nexport const ClosureHistoryLoader: React.SFC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery()\n\n  const onSubmit = () => {\n    if (statistics.closureBranch) {\n      execute({\n        branchId: statistics.closureBranch,\n        dateFrom: formatDateISO(statistics.dateFrom),\n        dateTo: formatDateISO(statistics.dateTo),\n      })\n    }\n  }\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onChange={({ values }) => statistics.updateFilter(values)}\n    >\n      <useExecutableQuery.context.Provider value={result}>\n        {children}\n      </useExecutableQuery.context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Spacing } from '../../../styling'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (!data || data.financialReports.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data.financialReports.map(report => (\n        <FlexRow key={report.id}>\n          <FlexColumn fixedWidth={true}>\n            <RelativeLink to={`../${report.id}`}>\n              <TouchButton\n                iconName=\"mode_edit\"\n                width={Spacing.ButtonHeight}\n                height={Spacing.ButtonHeight}\n              />\n            </RelativeLink>\n          </FlexColumn>\n          <FlexColumn widthGrowIndex={1}>\n            {`[${report.reportSequence}] ${formatDateISO(\n              report.reportDatetime,\n            )}`}\n          </FlexColumn>\n        </FlexRow>\n      ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.SFC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import { Plural, Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  submitButton?: ReactNode\n}\n\nexport const StatisticsDateRangeFilter = observer<IProps>(\n  ({ submitButton }) => {\n    const { statistics } = useRoot()\n\n    return (\n      <FlexRowSingle justify=\"flex-start\">\n        <FlexColumn fixedWidth={true} width=\"10rem\">\n          <Trans>From date</Trans>\n          <FormInputDate field=\"dateFrom\" defaultValue={statistics.dateFrom} />\n        </FlexColumn>\n        <FlexColumn fixedWidth={true} width=\"10rem\">\n          <Trans>To date</Trans>\n          <FormInputDate field=\"dateTo\" defaultValue={statistics.dateTo} />\n        </FlexColumn>\n        <FlexColumn>\n          {submitButton || (\n            <FormSubmit width=\"15rem\">\n              <Plural\n                value={statistics.branchesFilter.length}\n                one=\"Show for one branch\"\n                few=\"Show for # branches\"\n                other=\"Show for # branches\"\n              />\n            </FormSubmit>\n          )}\n        </FlexColumn>\n      </FlexRowSingle>\n    )\n  },\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { StatisticsDateRangeFilter } from '../molecules/StatisticsDateRangeFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.SFC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <StatisticsDateRangeFilter\n          submitButton={\n            <FormSubmit width=\"15rem\">\n              <Trans>Show history for branch</Trans>\n            </FormSubmit>\n          }\n        />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n}\n\nconst MonospaceOutputStyled = styled.p`\n  color: white;\n  font-family: 'Lucida Console', Monaco, monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 1rem;\n  line-height: 1.8rem;\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nexport const MonospaceOutput: React.SFC<IProps> = ({ text }) => (\n  <MonospaceOutputStyled>{formatOutput(text)}</MonospaceOutputStyled>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GClosureReportQuery } from '../../../graph/types'\n\nexport const FinancialReport = gql`\n  query GClosureReportQuery(\n    $branchId: ID!\n    $reportId: ID!\n    $showReport: Boolean!\n  ) {\n    lastReport: lastFinancialReport(companyBranchId: $branchId)\n      @skip(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n    report: financialReport(report: $reportId) @include(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n\nexport const QueryFinancialReport = buildQuery<\n  GClosureReportQuery.Query,\n  GClosureReportQuery.Variables\n>(FinancialReport)\n","import React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryFinancialReport } from './ClosureStatisticsContent.graphql'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent: React.SFC<IProps> = ({\n  reportId = '',\n}) => (\n  <WithRoot\n    render={({ statistics }) =>\n      statistics.closureBranch ? (\n        <QueryFinancialReport\n          variables={{\n            branchId: statistics.closureBranch,\n            reportId,\n            showReport: Boolean(reportId),\n          }}\n          fetchPolicy=\"cache-and-network\"\n          renderLoading={false}\n          render={({ report, lastReport }, { loading }) =>\n            loading ? (\n              <MonospaceOutput text={i18n.t`Computing`} />\n            ) : (\n              <MonospaceOutput\n                text={reportId ? report!.plainData : lastReport.plainData}\n              />\n            )\n          }\n        />\n      ) : null\n    }\n  />\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.SFC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick?(e: MouseEvent<HTMLButtonElement>): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.SFC<IProps> = props => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <TouchButton\n      text={i18n.t`Create closure`}\n      color={Colors.green}\n      width=\"12rem\"\n      {...props}\n    />\n  </CanMutate>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GCreateFinancialReport } from '../../../graph/types'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport useRouterContext from '../../../hooks/useRouterContext'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\nimport { CreateFinancialReport } from './ClosureStatisticsControl.graphql'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nconst ButtonToRight = styled.div`\n  float: right;\n`\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const createClosure = useGuardedMutation<\n    GCreateFinancialReport.Mutation,\n    GCreateFinancialReport.Variables\n  >(CreateFinancialReport)\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      companyBranchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <>\n      {showCurrent ? (\n        <ClosureCurrentButton />\n      ) : (\n        <ClosureSubmitButton\n          onClick={onSubmit}\n          disabled={!statistics.closureBranch}\n        />\n      )}\n      <ButtonToRight>\n        <ClosureHistoryButton />\n      </ButtonToRight>\n    </>\n  ))\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsContent } from '../organisms/ClosureStatisticsContent'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.SFC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = observer(props => {\n  const { statistics } = useRoot()\n  return (\n    <CompanyBranchPicker\n      selectedBranches={statistics.branches}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n    />\n  )\n})\n","import gql from 'graphql-tag'\n\nexport const DailyStatisticsQuery = gql`\n  query GDailyStatistics($branches: [ID!]!, $dateFrom: Date!, $dateTo: Date!) {\n    stats: statistics(\n      branches: $branches\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      categoryStatisticsPlain\n      dailyStatisticsPlain\n      deliveryStatisticsPlain\n      driversStatisticsPlain\n    }\n  }\n`\n","import React, { useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GDailyStatistics } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { createExecutableQuery } from '../../../hooks/useExecutableQuery'\nimport { DailyStatisticsQuery } from './DailyStatisticsLoader.graphql'\n\nexport type TOrdersStats = GDailyStatistics.Stats\n\nconst useExecutableQuery = createExecutableQuery<\n  GDailyStatistics.Query,\n  GDailyStatistics.Variables\n>(DailyStatisticsQuery)\n\nexport const useDailyStatistics = () => useContext(useExecutableQuery.context)!\n\nexport const DailyStatisticsLoader: React.SFC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery()\n\n  const onSubmit = () => {\n    execute({\n      branches: statistics.branchesFilter,\n      dateFrom: formatDateISO(statistics.dateFrom),\n      dateTo: formatDateISO(statistics.dateTo),\n    })\n  }\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onChange={({ values }) => statistics.updateFilter(values)}\n    >\n      <useExecutableQuery.context.Provider value={result}>\n        {children}\n      </useExecutableQuery.context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { i18n } from '../../../i18n'\nimport { useDailyStatistics } from './DailyStatisticsLoader'\n\nexport const DailyStatisticsContent = observer(() => {\n  const { data, loading } = useDailyStatistics()\n  if (!data) {\n    return null\n  }\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n  const { stats } = data\n  return (\n    <>\n      <Headline light={true}>\n        <Trans>Daily statistics</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.dailyStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By category</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.categoryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By type</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.deliveryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By driver</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.driversStatisticsPlain} />\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsDateRangeFilter } from '../molecules/StatisticsDateRangeFilter'\nimport { DailyStatisticsContent } from '../organisms/DailyStatisticsContent'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsDateRangeFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import gql from 'graphql-tag'\n\nimport { OrderTickerFragment } from '../../../segments/order/molecules/OrderTicker.graphql'\n\nexport const OrdersStatisticsQuery = gql`\n  query GOrdersStatistics($branches: [ID!]!, $dateFrom: Date!, $dateTo: Date!) {\n    stats: statistics(\n      branches: $branches\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      finishedOrders {\n        fees {\n          ...GStatsPrice\n        }\n        onlinePayments {\n          ...GStatsPrice\n        }\n        total {\n          ...GStatsPrice\n        }\n        ordersCount\n        orders {\n          ...GOrderListTicker\n        }\n      }\n    }\n  }\n\n  fragment GStatsPrice on PriceConverted {\n    value\n    currency {\n      code\n    }\n  }\n\n  ${OrderTickerFragment}\n`\n","import React, { useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GOrdersStatistics } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { createExecutableQuery } from '../../../hooks/useExecutableQuery'\nimport { OrdersStatisticsQuery } from './OrdersStatisticsLoader.graphql'\n\nexport type TOrdersStats = GOrdersStatistics.FinishedOrders\n\nconst useExecutableQuery = createExecutableQuery<\n  GOrdersStatistics.Query,\n  GOrdersStatistics.Variables\n>(OrdersStatisticsQuery)\n\nexport const useOrderStatistics = () => useContext(useExecutableQuery.context)!\n\nexport const OrdersStatisticsLoader: React.SFC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery()\n\n  const onSubmit = () => {\n    execute({\n      branches: statistics.branchesFilter,\n      dateFrom: formatDateISO(statistics.dateFrom),\n      dateTo: formatDateISO(statistics.dateTo),\n    })\n  }\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onChange={({ values }) => statistics.updateFilter(values)}\n    >\n      <useExecutableQuery.context.Provider value={result}>\n        {children}\n      </useExecutableQuery.context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { BulletList } from 'react-content-loader'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/types'\nimport { OrderBox } from '../../../segments/order/atoms/OrderBox'\nimport { useOrderStatistics } from './OrdersStatisticsLoader'\n\nexport const OrdersStatisticsList = observer(() => {\n  const { statistics, order: orderModel } = useRoot()\n  const { data, loading } = useOrderStatistics()\n  if (loading || !data) {\n    return <BulletList primaryOpacity={0.2} secondaryOpacity={0.2} />\n  }\n  const { orders } = data.stats.finishedOrders\n  if (orders.length === 0) {\n    return (\n      <CardListTitle>\n        <Trans>No orders</Trans>\n      </CardListTitle>\n    )\n  }\n  return (\n    <>\n      {orders.map(order => (\n        <OrderBox\n          key={order.id}\n          order={{\n            ...order,\n            orderStateCategory: OrderStateCategoryEnum.FINISHED,\n          }}\n          listModel={orderModel.list}\n          showBranch={statistics.branchesFilter.length > 1}\n        />\n      ))}\n    </>\n  )\n})\n","import { Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { useOrderStatistics } from '../organisms/OrdersStatisticsLoader'\n\nconst StatPanel = styled.div`\n  margin: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n`\n\nconst StatLabel = styled.h1`\n  font-size: 1.5rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nconst StatValue = styled.h2`\n  font-size: 4rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const { loading, data } = useOrderStatistics()\n  if (loading || !data) {\n    return null\n  }\n  const stats = data.stats.finishedOrders\n  return (\n    <>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total turnover</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Online payments</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Orders count</Trans>\n        </StatLabel>\n        <StatValue>{stats.ordersCount}</StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total commissions</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsDateRangeFilter } from '../molecules/StatisticsDateRangeFilter'\nimport { OrdersStatisticsList } from '../organisms/OrdersStatisticsList'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\nimport { OrdersStatisticsSummary } from '../organisms/OrdersStatisticsSummary'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [{ i: 'summary', x: 0, y: 1, w: 7, h: 1 }]\n}\n\nexport const OrdersStatisticsPage: React.SFC<IProps> = props => (\n  <OrdersStatisticsLoader>\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={8}\n      widthInColumns={8}\n    >\n      <OrdersStatisticsList />\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      layouts={getLayout()}\n      pageTitle={i18n.t`Orders statistics`}\n      showSoundControl={false}\n      scrollPageTitle={false}\n      useBackButton={true}\n    >\n      <div key=\"summary\">\n        <Card>\n          <StatisticsBranchFilter />\n          <StatisticsDateRangeFilter />\n        </Card>\n\n        <OrdersStatisticsSummary />\n      </div>\n    </PageLayout>\n  </OrdersStatisticsLoader>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'OrdersStatistics', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'DailyStatistics', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'Closure', x: 4, y: 1, w: 2, h: 2 },\n  ]\n}\n\nexport const OverviewPage: React.SFC<IProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.SFC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n"],"sourceRoot":""}