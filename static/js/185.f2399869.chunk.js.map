{"version":3,"sources":["atoms/CanMutate.tsx","atoms/FlexColumn.tsx","atoms/CanQuery.tsx","components/forms/FormInput.tsx","molecules/TouchButtonDelete.tsx","atoms/DateTimeFormatProvider.tsx","components/forms/FormSubmitButton.tsx","atoms/FlexDiv.tsx","../node_modules/@material-ui/icons/esm/AddCircle.js","atoms/FlexRow.tsx","hooks/useSettings.ts","../node_modules/@material-ui/pickers/esm/DatePicker/DatePickerToolbar.js","../node_modules/@material-ui/pickers/esm/DatePicker/DatePicker.js","atoms/InputDate.tsx","components/forms/FormInputDate.tsx","../node_modules/@material-ui/icons/esm/Delete.js","../node_modules/@material-ui/icons/esm/ErrorOutline.js","../node_modules/@material-ui/pickers/esm/TimePicker/TimePicker.js","atoms/InputTime.tsx","segments/businesshours/atoms/BusinessHoursTimeRange.tsx","segments/businesshours/molecules/BusinessHoursWeekday.tsx","segments/businesshours/organisms/BusinessHoursForm.tsx","components/forms/FormInputTime.tsx","components/forms/FormInputTimeSpan.tsx","segments/businesshours/molecules/SpecificModeSelector.tsx","segments/businesshours/organisms/SpecificBusinessHourForm.tsx","segments/businesshours/molecules/SpecificBusinessHourLine.tsx","segments/businesshours/organisms/SpecificBusinessHours.tsx","segments/businesshours/pages/BusinessHoursPage.tsx","segments/businesshours/routes/BusinessHoursRouting.tsx"],"names":["CanMutate","observer","mutationName","children","useCanMutate","FlexColumn","styled","div","fixedWidth","width","widthGrowIndex","padding","margin","CanQuery","queryName","useCanQuery","FormInput","React","forwardRef","inputRef","fieldName","fullWidth","addHiddenLabelWithPlaceholderText","withLabel","props","useXFieldForInput","field","getInputProps","useObserver","invalid","touched","Boolean","error","inputFullWidth","ref","placeholder","hidden","htmlFor","name","TouchButtonDelete","onDelete","confirmText","icon","Delete","color","Colors","greyMiddle","onClick","ev","preventDefault","window","confirm","DateTimeFormatProvider","utils","MomentUtils","FormSubmitButton","id","state","useXFormState","type","green","disabled","isSubmitting","isDirty","isValid","undefined","ErrorOutline","iconSize","iconColor","red","FlexDiv","createElement","d","FlexRow","useSettings","useRoot","settings","useStyles","makeStyles","toolbar","flexDirection","alignItems","toolbarLandscape","dateLandscape","marginRight","_ref","date","views","setOpenView","isLandscape","openView","useUtils","classes","isYearOnly","isYearAndMonth","PickerToolbar","className","ToolbarButton","variant","selected","label","getYearText","align","getDatePickerHeaderText","getMonthText","defaultProps","openTo","useOptions","getDefaultFormat","DatePicker","DefaultToolbarComponent","KeyboardDatePicker","InputDate","format","maxDateMessage","minDateMessage","FormInputDate","pickerProps","getProps","onChange","setValue","onOpen","setTouched","Fragment","fill","ampm","time12hFormat","time24hFormat","TimePicker","TimePickerToolbar","KeyboardTimePicker","getCustomProps","refuse","InputTime","StyledBussinessHoursTimeRange","BusinessHoursTimeRange","memo","hour","value","openAt","closeAt","StyledBusinessHoursWeekday","article","white","Radiuses","Button","BusinessHoursWeekday","weekday","hours","onAdd","onRemove","renderHour","key","data-testid","SizerButton","TouchButton","title","i18n","role","code","length","map","AddCircle","getTodayTime","DFP","parse","Date","BusinessHoursForm","useQRegularBusinessHours","branchId","data","loading","useState","observable","Map","businessHours","useMBusinessHoursSubmit","submitBusinessHours","useEffect","size","weekDays","forEach","set","enum","array","weekDay","get","push","weekDayHours","clear","hourIdCounter","useRef","hourId","idx","findIndex","RM","propEq","splice","enqueueSuccess","useSnackBar","onSubmit","useCallback","a","formatTime","Loading","current","startOfDay","endOfDay","Sizer","MarginBox","text","FormInputTime","InlineWrap","FormInputTimeSpan","fieldFrom","fieldTo","labels","ESpecificHourMode","TIMESPAN","i18nMark","FULLDAY","SpecificModeSelector","SelectControlFlat","items","selectedItem","specificMode","formatItem","mode","_","onSingleSelection","changeSpecificMode","DateContainer","FormContainer","SpecificBusinessHourForm","submitSpecificHour","initialValues","getInitialValues","fullDateFormat","minDate","now","setHours","setMinutes","SpecificBusinessHourLine","bsHour","specificDateLocalized","formatLineTime","closed","closedNote","sortByDate","sort","ascend","or","prop","not","SpecificBusinessHours","variables","fetchPolicy","renderFragment","deleteSpecificHour","BusinessHoursPage","FullPageLayout","pageTitle","useBackButton","Card","SettingsCompanyBranchPicker","Headline","BusinessHoursRouting","SecureRoute","exact","path","ROUTE_SETTINGS_HOURS","component","NotFoundPage"],"mappings":"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","file":"static/js/185.f2399869.chunk.js","sourcesContent":["import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useCanMutate } from '../hooks/useAccessGuard'\nimport { NoAccess } from './NoAccess'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate = observer<IProps>(({ mutationName, children }) => {\n  const canMutate = useCanMutate(mutationName)\n  return canMutate ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n})\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useCanQuery } from '../hooks/useAccessGuard'\nimport { NoAccess } from './NoAccess'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery = observer<IProps>(({ queryName, children }) => {\n  const canQuery = useCanQuery(queryName)\n  return canQuery ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n})\n","import { useXFieldForInput, XFieldValidator } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { StyledFormInput } from '../../atoms/FormInputStyled'\n\ninterface IProps extends LegacyOmit<React.InputHTMLAttributes<never>, 'name'> {\n  fieldName: FieldName\n  validate?: XFieldValidator<string>\n  fullWidth?: boolean\n  children?: never\n  addHiddenLabelWithPlaceholderText?: boolean\n}\n\nexport type FormInputProps = IProps\n\nexport const FormInput = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      fieldName,\n      fullWidth,\n      addHiddenLabelWithPlaceholderText: withLabel = true,\n      ...props\n    },\n    inputRef,\n  ) => {\n    const [field, getInputProps] = useXFieldForInput<string>(fieldName)\n    return useObserver(() => (\n      <>\n        <StyledFormInput\n          {...getInputProps()}\n          invalid={field.touched && Boolean(field.error)}\n          inputFullWidth={fullWidth}\n          ref={inputRef}\n          {...props}\n        />\n        {withLabel && props.placeholder && (\n          <label hidden={true} htmlFor={field.name}>\n            {props.placeholder}\n          </label>\n        )}\n      </>\n    ))\n  },\n)\n","import { Delete } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps\n  extends LegacyOmit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.FC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => {\n  return (\n    <SizerButton>\n      <TouchButton\n        icon={Delete}\n        color={Colors.greyMiddle}\n        onClick={ev => {\n          ev.preventDefault()\n          if (!confirmText || window.confirm(confirmText)) {\n            onDelete()\n          }\n        }}\n        {...props}\n      />\n    </SizerButton>\n  )\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { ErrorOutline } from '@material-ui/icons'\nimport { useXFormState } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../../molecules/TouchButton'\nimport { Colors } from '../../styling'\n\ninterface IProps extends ITouchButtonProps {\n  children: ReactNode | ReactNode[] | string\n}\n\nexport const FormSubmitButton: React.FC<IProps> = ({\n  children,\n  id = 'form-submit',\n  ...props\n}) => {\n  const state = useXFormState()\n  return useObserver(() => (\n    <TouchButton\n      type=\"submit\"\n      color={Colors.green}\n      disabled={state.isSubmitting && state.isDirty}\n      id={id}\n      icon={!state.isValid ? ErrorOutline : undefined}\n      iconSize={1.1}\n      iconColor={Colors.red}\n      {...props}\n    >\n      <>{children}</>\n    </TouchButton>\n  ))\n}\n","import styled from 'styled-components/macro'\n\nexport const FlexDiv = styled.div`\n  display: flex;\n`\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\nimport { FlexDiv } from './FlexDiv'\n\nexport const FlexRow = styled(FlexDiv)`\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useSettings() {\n  const { settings } = useRoot()\n  return settings\n}\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport ToolbarButton from '../_shared/ToolbarButton';\nimport PickerToolbar from '../_shared/PickerToolbar';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { isYearAndMonthViews, isYearOnlyView } from '../_helpers/date-utils';\nexport var useStyles = makeStyles({\n  toolbar: {\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  toolbarLandscape: {\n    padding: 16\n  },\n  dateLandscape: {\n    marginRight: 16\n  }\n}, {\n  name: 'MuiPickersDatePickerRoot'\n});\nexport var DatePickerToolbar = function DatePickerToolbar(_ref) {\n  var date = _ref.date,\n      views = _ref.views,\n      setOpenView = _ref.setOpenView,\n      isLandscape = _ref.isLandscape,\n      openView = _ref.openView;\n  var utils = useUtils();\n  var classes = useStyles();\n  var isYearOnly = React.useMemo(function () {\n    return isYearOnlyView(views);\n  }, [views]);\n  var isYearAndMonth = React.useMemo(function () {\n    return isYearAndMonthViews(views);\n  }, [views]);\n  return React.createElement(PickerToolbar, {\n    isLandscape: isLandscape,\n    className: clsx(!isYearOnly && classes.toolbar, isLandscape && classes.toolbarLandscape)\n  }, React.createElement(ToolbarButton, {\n    variant: isYearOnly ? 'h3' : 'subtitle1',\n    onClick: function onClick() {\n      return setOpenView('year');\n    },\n    selected: openView === 'year',\n    label: utils.getYearText(date)\n  }), !isYearOnly && !isYearAndMonth && React.createElement(ToolbarButton, {\n    variant: \"h4\",\n    selected: openView === 'date',\n    onClick: function onClick() {\n      return setOpenView('date');\n    },\n    align: isLandscape ? 'left' : 'center',\n    label: utils.getDatePickerHeaderText(date),\n    className: clsx(isLandscape && classes.dateLandscape)\n  }), isYearAndMonth && React.createElement(ToolbarButton, {\n    variant: \"h4\",\n    onClick: function onClick() {\n      return setOpenView('month');\n    },\n    selected: openView === 'month',\n    label: utils.getMonthText(date)\n  }));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { DatePickerToolbar } from './DatePickerToolbar';\nimport { getFormatByViews } from '../_helpers/date-utils';\nimport { datePickerDefaultProps } from '../constants/prop-types';\nimport { makePurePicker } from '../Picker/WrappedPurePicker';\nimport { makeKeyboardPicker } from '../Picker/WrappedKeyboardPicker';\n\nvar defaultProps = _extends({}, datePickerDefaultProps, {\n  openTo: 'date',\n  views: ['year', 'date']\n});\n\nfunction useOptions(props) {\n  var utils = useUtils();\n  return {\n    getDefaultFormat: function getDefaultFormat() {\n      return getFormatByViews(props.views, utils);\n    }\n  };\n}\n\nexport var DatePicker = makePurePicker({\n  useOptions: useOptions,\n  DefaultToolbarComponent: DatePickerToolbar\n});\nexport var KeyboardDatePicker = makeKeyboardPicker({\n  useOptions: useOptions,\n  DefaultToolbarComponent: DatePickerToolbar\n});\nDatePicker.defaultProps = defaultProps;\nKeyboardDatePicker.defaultProps = defaultProps;","import { i18n } from '@lingui/core'\nimport { DatePicker, DatePickerProps } from '@material-ui/pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends DatePickerProps {}\n\nexport const InputDate: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <DatePicker\n        variant=\"inline\"\n        format=\"ll\"\n        maxDateMessage={i18n.t`Date is too much in the future`}\n        minDateMessage={i18n.t`Date is too much in the past`}\n        {...props}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { DatePickerProps } from '@material-ui/pickers'\nimport { useXFieldForInput, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { InputDate } from '../../atoms/InputDate'\n\ninterface IProps extends LegacyOmit<DatePickerProps, 'value' | 'onChange'> {\n  fieldName: XFieldName\n}\n\nexport const FormInputDate: React.FC<IProps> = ({\n  fieldName,\n  ...pickerProps\n}) => {\n  const [field, getProps] = useXFieldForInput(fieldName)\n  return useObserver(() => (\n    <InputDate\n      {...getProps()}\n      onChange={field.setValue}\n      onOpen={field.setTouched}\n      {...pickerProps}\n    />\n  ))\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n})), 'ErrorOutline');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport TimePickerToolbar from './TimePickerToolbar';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { timePickerDefaultProps } from '../constants/prop-types';\nimport { pick12hOr24hFormat } from '../_helpers/text-field-helper';\nimport { makePurePicker } from '../Picker/WrappedPurePicker';\nimport { makeKeyboardPicker } from '../Picker/WrappedKeyboardPicker';\n\nvar defaultProps = _extends({}, timePickerDefaultProps, {\n  openTo: 'hours',\n  views: ['hours', 'minutes']\n});\n\nfunction useOptions(props) {\n  var utils = useUtils();\n  return {\n    getDefaultFormat: function getDefaultFormat() {\n      return pick12hOr24hFormat(props.format, props.ampm, {\n        '12h': utils.time12hFormat,\n        '24h': utils.time24hFormat\n      });\n    }\n  };\n}\n\nexport var TimePicker = makePurePicker({\n  useOptions: useOptions,\n  DefaultToolbarComponent: TimePickerToolbar\n});\nexport var KeyboardTimePicker = makeKeyboardPicker({\n  useOptions: useOptions,\n  DefaultToolbarComponent: TimePickerToolbar,\n  getCustomProps: function getCustomProps(props) {\n    return {\n      refuse: props.ampm ? /[^\\dap]+/gi : /[^\\d]+/gi\n    };\n  }\n});\nTimePicker.defaultProps = defaultProps;\nKeyboardTimePicker.defaultProps = defaultProps;","import { TimePicker, TimePickerProps } from '@material-ui/pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends TimePickerProps {}\n\nexport const InputTime: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <TimePicker format=\"LT\" variant=\"inline\" {...props} />\n    </DateTimeFormatProvider>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { InputTime } from '../../../atoms/InputTime'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  hour: TBusinessHour\n}\n\nconst StyledBussinessHoursTimeRange = styled.div`\n  & input {\n    width: 5rem;\n  }\n`\n\nexport const BusinessHoursTimeRange = React.memo<IProps>(({ hour }) => {\n  return useObserver(() => (\n    <StyledBussinessHoursTimeRange>\n      <InputTime\n        value={hour.openAt}\n        onChange={value => (hour.openAt = value)}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n      <InputTime\n        value={hour.closeAt}\n        onChange={value => (hour.closeAt = value)}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </StyledBussinessHoursTimeRange>\n  ))\n})\n","import { Trans } from '@lingui/macro'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { FWeekdayFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Radiuses } from '../../../styling'\nimport { BusinessHoursTimeRange } from '../atoms/BusinessHoursTimeRange'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  weekday: FWeekdayFragment\n  hours: RoA<TBusinessHour>\n  onAdd(): void\n  onRemove(hourId: ID): void\n}\n\nconst StyledBusinessHoursWeekday = styled.article`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 0.3rem 0;\n  h5 {\n    width: 5rem;\n  }\n  & .range {\n    display: flex;\n    margin: 0 2rem 0 0;\n    padding-right: 1rem;\n    background: ${Colors.white};\n    border-radius: ${Radiuses.Button};\n  }\n  .remove-btn {\n    margin-right: 1rem;\n  }\n`\n\nexport const BusinessHoursWeekday = React.memo<IProps>(\n  ({ weekday, hours, onAdd, onRemove }) => {\n    const renderHour = (hour: TBusinessHour) => {\n      return (\n        <div key={hour.id} data-testid=\"bh-range\" className=\"range\">\n          <SizerButton className=\"remove-btn\">\n            <TouchButton\n              title={i18n.t`Remove business hour`}\n              role=\"button\"\n              onClick={() => onRemove(hour.id)}\n            >\n              <Delete />\n            </TouchButton>\n          </SizerButton>\n          <BusinessHoursTimeRange hour={hour} />\n        </div>\n      )\n    }\n\n    const renderHours = () => {\n      if (hours.length === 0) {\n        return (\n          <em>\n            <Trans>Closed</Trans>\n          </em>\n        )\n      }\n      return hours.map(renderHour)\n    }\n\n    return useObserver(() => (\n      <StyledBusinessHoursWeekday>\n        <h5>{weekday.code}</h5>\n        {renderHours()}\n        <SizerButton>\n          <TouchButton\n            title={i18n.t`Add business hour`}\n            role=\"button\"\n            onClick={onAdd}\n          >\n            <AddCircle />\n          </TouchButton>\n        </SizerButton>\n      </StyledBusinessHoursWeekday>\n    ))\n  },\n)\n","import { DFP, RM } from '@speedlo/tools'\nimport { IObservableArray, observable } from 'mobx'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  InputBusinessHourCreate,\n  useMBusinessHoursSubmit,\n  useQRegularBusinessHours,\n  WeekDayEnum,\n} from '../../../graph/generated'\nimport { formatTime } from '../../../helpers/formats'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { TBusinessHour } from '../businesshours.types'\nimport { BusinessHoursWeekday } from '../molecules/BusinessHoursWeekday'\n\nconst getTodayTime = DFP.parse(new Date(), 'H:mm')\n\nexport const BusinessHoursForm = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQRegularBusinessHours({\n    branchId: settings.branchId,\n  })\n\n  const [businessHours] = React.useState(() =>\n    observable(new Map<WeekDayEnum, IObservableArray<TBusinessHour>>()),\n  )\n\n  const [submitBusinessHours] = useMBusinessHoursSubmit()\n\n  React.useEffect(() => {\n    if (loading) {\n      return\n    }\n    if (businessHours.size === 0) {\n      data.weekDays.forEach(weekday => {\n        businessHours.set(weekday.enum, observable.array([]))\n      })\n    }\n    data.businessHours.forEach(({ id, openAt, closeAt, weekDay }) => {\n      if (weekDay) {\n        businessHours.get(weekDay.enum)!.push({\n          id,\n          openAt: getTodayTime(openAt),\n          closeAt: getTodayTime(closeAt),\n          weekDay: weekDay.enum,\n        })\n      }\n    })\n    return () => {\n      businessHours.forEach(weekDayHours => {\n        weekDayHours.clear()\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data.businessHours, data.weekDays, loading, settings.branchId])\n\n  const hourIdCounter = React.useRef(0)\n\n  const onAdd = (weekDay: WeekDayEnum) => () => {\n    businessHours.get(weekDay)!.push({\n      weekDay,\n      id: `L${hourIdCounter.current++}`,\n      openAt: DFP.startOfDay(new Date()),\n      closeAt: DFP.endOfDay(new Date()),\n    })\n  }\n\n  const onRemove = (weekDay: WeekDayEnum) => (hourId: ID) => {\n    const hours = businessHours.get(weekDay)!\n    const idx = hours.findIndex(RM.propEq('id', hourId))\n    if (idx >= 0) {\n      hours.splice(idx, 1)\n    }\n  }\n\n  const { enqueueSuccess } = useSnackBar()\n\n  const onSubmit = React.useCallback(async () => {\n    const hours: InputBusinessHourCreate[] = []\n    businessHours.forEach((weekDayHours, weekDay) => {\n      hours.push(\n        ...weekDayHours.map(hour => ({\n          openAt: formatTime(hour.openAt),\n          closeAt: formatTime(hour.closeAt),\n          weekDay,\n        })),\n      )\n    })\n    const result = await submitBusinessHours({\n      branchId: settings.branchId,\n      hours,\n    })\n    if (result) {\n      enqueueSuccess(i18n.t`Regular business hours has been updated`)\n    }\n  }, [businessHours, enqueueSuccess, settings.branchId, submitBusinessHours])\n\n  if (loading || businessHours.size === 0) {\n    return <Loading />\n  }\n\n  return (\n    <div>\n      {data.weekDays.map(weekday => (\n        <BusinessHoursWeekday\n          key={weekday.enum}\n          weekday={weekday}\n          hours={businessHours.get(weekday.enum)!}\n          onAdd={onAdd(weekday.enum)}\n          onRemove={onRemove(weekday.enum)}\n        />\n      ))}\n      <Sizer width={20}>\n        <MarginBox margin=\"1rem\">\n          <TouchButton\n            text={i18n.t`Save regular hours`}\n            color={Colors.green}\n            onClick={onSubmit}\n          />\n        </MarginBox>\n      </Sizer>\n    </div>\n  )\n})\n","import { TimePickerProps } from '@material-ui/pickers'\nimport { useXFieldForInput, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { InputTime } from '../../atoms/InputTime'\n\ninterface IProps extends LegacyOmit<TimePickerProps, 'value' | 'onChange'> {\n  fieldName: XFieldName\n}\n\nexport const FormInputTime = React.memo<IProps>(\n  ({ fieldName, ...pickerProps }) => {\n    const [field, getProps] = useXFieldForInput(fieldName)\n    return useObserver(() => (\n      <InputTime\n        {...getProps()}\n        onChange={field.setValue}\n        onOpen={field.setTouched}\n        {...pickerProps}\n      />\n    ))\n  },\n)\n","import { Trans } from '@lingui/macro'\nimport { XFieldName } from '@speedlo/xform'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputTime } from './FormInputTime'\n\ninterface IFormInputTimeSpanProps {\n  fieldFrom: XFieldName\n  fieldTo: XFieldName\n}\n\nconst InlineWrap = styled.div`\n  width: 5rem;\n  display: inline-block;\n`\n\nexport const FormInputTimeSpan: React.FC<IFormInputTimeSpanProps> = ({\n  fieldFrom,\n  fieldTo,\n}) => (\n  <>\n    <InlineWrap>\n      <FormInputTime\n        fieldName={fieldFrom}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n    <InlineWrap>\n      <FormInputTime\n        fieldName={fieldTo}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n  </>\n)\n","import { i18nMark } from '@lingui/core'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { useSettings } from '../../../hooks/useSettings'\nimport { i18n } from '../../../i18n'\nimport { ESpecificHourMode } from '../models/BusinessHoursModel'\n\nconst labels = {\n  [ESpecificHourMode.TIMESPAN]: i18nMark('Open between'),\n  [ESpecificHourMode.FULLDAY]: i18nMark('Closed'),\n}\n\nexport const SpecificModeSelector = React.memo(() => {\n  const { businessHours } = useSettings()\n  return useObserver(() => (\n    <SelectControlFlat<ESpecificHourMode>\n      items={[ESpecificHourMode.TIMESPAN, ESpecificHourMode.FULLDAY]}\n      selectedItem={businessHours.specificMode as ESpecificHourMode}\n      formatItem={mode => i18n._(labels[mode])}\n      onSingleSelection={(mode: ESpecificHourMode) =>\n        businessHours.changeSpecificMode(mode)\n      }\n    />\n  ))\n})\n","import { Trans } from '@lingui/macro'\nimport { XForm } from '@speedlo/xform'\nimport { setHours, setMinutes } from 'date-fns'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { FormInput } from '../../../components/forms/FormInput'\nimport { FormInputDate } from '../../../components/forms/FormInputDate'\nimport { FormInputTimeSpan } from '../../../components/forms/FormInputTimeSpan'\nimport { FormSubmitButton } from '../../../components/forms/FormSubmitButton'\nimport { fullDateFormat } from '../../../helpers/formats'\nimport { i18n } from '../../../i18n'\nimport {\n  ESpecificHourMode,\n  ISpecificFormData,\n} from '../models/BusinessHoursModel'\nimport { SpecificModeSelector } from '../molecules/SpecificModeSelector'\n\nconst DateContainer = styled.div`\n  display: inline-block;\n  width: 13rem;\n  margin-left: 1rem;\n  margin-top: 2rem;\n`\n\nconst FormContainer = styled.div`\n  display: inline-block;\n  width: 16rem;\n  min-height: 6rem;\n  margin: 0rem 0 0 1rem;\n  vertical-align: top;\n`\n\nexport const SpecificBusinessHourForm: React.FC = props => {\n  const {\n    settings: { businessHours },\n  } = useRoot()\n  return (\n    <XForm\n      onSubmit={businessHours.submitSpecificHour}\n      initialValues={getInitialValues()}\n    >\n      <DateContainer>\n        <FormInputDate\n          fieldName=\"date\"\n          format={fullDateFormat}\n          minDate={new Date()}\n          fullWidth={true}\n          label={<Trans>Date</Trans>}\n        />\n      </DateContainer>\n\n      <FormContainer>\n        <SpecificModeSelector />\n        <Observer>\n          {() =>\n            businessHours.specificMode === ESpecificHourMode.TIMESPAN ? (\n              <FormInputTimeSpan fieldFrom=\"openAt\" fieldTo=\"closeAt\" />\n            ) : (\n              <Sizer width={13}>\n                <FormInput\n                  fieldName=\"note\"\n                  fullWidth={true}\n                  placeholder={i18n.t`Closing reason`}\n                />\n              </Sizer>\n            )\n          }\n        </Observer>\n      </FormContainer>\n\n      <FormSubmitButton width=\"9rem\">\n        <Trans>Add</Trans>\n      </FormSubmitButton>\n    </XForm>\n  )\n}\n\nfunction getInitialValues(): Partial<ISpecificFormData> {\n  const now = new Date()\n  return {\n    date: now,\n    openAt: setHours(setMinutes(now, 0), 9),\n    closeAt: setHours(setMinutes(now, 0), 20),\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface ISpecificBusinessHourLineProps {\n  bsHour: GSpecificBusinessHour.Fragment\n  onDelete(): void\n}\n\nexport const SpecificBusinessHourLine: React.FC<\n  ISpecificBusinessHourLineProps\n> = ({ bsHour, onDelete }) => (\n  <FlexRow>\n    <FlexColumn fixedWidth>\n      <CanMutate mutationName=\"destroyBusinessHour\">\n        <TouchButtonDelete\n          onDelete={onDelete}\n          confirmText={`${i18n.t`Really remove specific business hour ${bsHour.specificDateLocalized}?`}`}\n        />\n      </CanMutate>\n    </FlexColumn>\n    <FlexColumn fixedWidth width=\"14rem\">\n      {bsHour.specificDateLocalized}\n    </FlexColumn>\n    <FlexColumn fixedWidth width=\"10rem\">\n      {formatLineTime(bsHour)}\n    </FlexColumn>\n    <FlexColumn fixedWidth width=\"10rem\">\n      {bsHour.closed ? <Trans>Closed</Trans> : <Trans>Open</Trans>}\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={1}>{bsHour.closedNote}</FlexColumn>\n  </FlexRow>\n)\n\nfunction formatLineTime(bsHour: GSpecificBusinessHour.Fragment) {\n  return `${bsHour.openAt} - ${bsHour.closeAt}`\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { SpecificBusinessHourLine } from '../molecules/SpecificBusinessHourLine'\nimport { QuerySpecificBusinessHours } from './SpecificBusinessHours.graphql'\n\nconst sortByDate = RM.sort<GSpecificBusinessHour.Fragment>(\n  // @ts-ignore Fix typing\n  RM.ascend(RM.or(RM.prop('specificDate'), RM.not)),\n)\n\nexport const SpecificBusinessHours: React.FC = () => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QuerySpecificBusinessHours\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderFragment={({ businessHours }) =>\n        sortByDate(businessHours).map(bsHour => (\n          <SpecificBusinessHourLine\n            key={bsHour.id}\n            bsHour={bsHour}\n            onDelete={() =>\n              settings.businessHours.deleteSpecificHour(bsHour.id)\n            }\n          />\n        ))\n      }\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../../segments/settings/organisms/SettingsCompanyBranchPicker'\nimport { BusinessHoursForm } from '../organisms/BusinessHoursForm'\nimport { SpecificBusinessHourForm } from '../organisms/SpecificBusinessHourForm'\nimport { SpecificBusinessHours } from '../organisms/SpecificBusinessHours'\n\nexport const BusinessHoursPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Business hours`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <CanQuery queryName=\"businessHours\">\n        <Headline>\n          <MarginBox margin=\"1rem 0\">\n            <Trans>Regular business hours</Trans>\n          </MarginBox>\n        </Headline>\n        <BusinessHoursForm />\n      </CanQuery>\n\n      <Headline>\n        <MarginBox margin=\"1rem 0\">\n          <Trans>Specific business hours</Trans>\n        </MarginBox>\n      </Headline>\n      <SpecificBusinessHours />\n\n      <CanMutate mutationName=\"addSpecialBusinessHour\">\n        <Headline>\n          <MarginBox margin=\"1rem 0\">\n            <Trans>Add specific business hour</Trans>\n          </MarginBox>\n        </Headline>\n        <SpecificBusinessHourForm />\n      </CanMutate>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ROUTE_SETTINGS_HOURS } from '../../settings/settings.routes'\nimport { BusinessHoursPage } from '../pages/BusinessHoursPage'\n\ninterface IProps {}\n\nexport const BusinessHoursRouting: React.FC<IProps> = () => (\n  <Switch>\n    <SecureRoute\n      exact\n      path={ROUTE_SETTINGS_HOURS}\n      component={BusinessHoursPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default BusinessHoursRouting\n"],"sourceRoot":""}