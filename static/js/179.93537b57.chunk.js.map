{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/CanQuery.tsx","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/HorizontalSeparator.tsx","atoms/SelectControlFlat.tsx","hooks/useAutorunWhenSingleBranch.ts","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","hooks/useOnConnectionRestored.ts","segments/order/molecules/NoteLine.tsx","segments/order/atoms/OrderStarIndicator.tsx","segments/order/molecules/OrderTicker.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","segments/order/organisms/OrderListBranchFilter.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenOrderWareLine.tsx","segments/kitchen/organisms/KitchenOrderWareList.tsx","segments/kitchen/molecules/KitchenAcceptButton.tsx","segments/kitchen/molecules/KitchenOrderStarIndicator.tsx","segments/kitchen/molecules/KitchenOrderDetail.tsx","segments/kitchen/molecules/KitchenOrderBox.tsx","segments/kitchen/organisms/KitchenOrderListLoader.tsx","segments/kitchen/organisms/KitchenOrderList.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/routes/KitchenRoutes.tsx"],"names":["IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","CanQuery","queryName","canQuery","NoAccess","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","PageLayoutFullHeightItem","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_3__","id","HorizontalSeparatorStyled","greyLight","HorizontalSeparator","_ref$visible","visible","StyledSelectControlFlat","textColor","SelectControlFlat","items","_props$formatItem","formatItem","RM","prop","_props$isMulti","isMulti","_props$isClearable","isClearable","_props$isInvalid","isInvalid","selectedItem","selectedItems","onSingleSelection","onMultiSelection","hasSingleItem","isItemSelected","item","Array","isArray","contains","equals","updateSelection","without","react__WEBPACK_IMPORTED_MODULE_3___default","className","cn","invalid","interactive","active","onClick","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","map","idx","formatted","key","useAutorunWhenSingleBranch","mobx__WEBPACK_IMPORTED_MODULE_0__","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","onSingleBranch","useEffect","autorun","isReady","hasSingleBranch","branches","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","_ref$hideWhenSingleBr","hideWhenSingleBranch","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","isSelected","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","padding","react","value","placeholder","i18n","_","ButtonHeight","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","cancelIconPadding","css","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","red","orange","_templateObject5","green","bigNumberStyle","_templateObject6","dashStyle","_templateObject7","clickable","_templateObject8","TimeBadge","Variant","output","extraClassNames","push","toString","cx","apply","heartBeat","pulse","CustomerIdentity","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","customer","lastName","firstName","defaultPhone","phone","useOnConnectionRestored","_helpers_offline__WEBPACK_IMPORTED_MODULE_1__","cb","useDisposable","whenGoingOnline","CurrentNoteStyled","span","PreviousNoteStyled","NoteLine","note","previousNote","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_3__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_4__","_i18n__WEBPACK_IMPORTED_MODULE_5__","StyledOrderStarIndicator","OrderStarIndicator","Icon","OrderTickerStyled","Element","OrderTicker_templateObject","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","_templateObject9","Radiuses","Card","ToPickupLabel","_templateObject10","violet","OrderTicker","order","showBranch","companyBranch","Date","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","formatAddress","address","isPriority","OrderStarIndicator_OrderStarIndicator","totalSum","formattedValue","isPaidWithCard","./cs.svg","./de.svg","./en.svg","./pl.svg","./sk.svg","webpackContext","req","webpackContextResolve","e","Error","code","keys","resolve","module","exports","./logo-doveze.svg","./logo-gopay.svg","./logo-mastercard.svg","./logo-visa.svg","OrderListBranchFilter","_hooks_useAutorunWhenSingleBranch__WEBPACK_IMPORTED_MODULE_3__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","list","setBranchFilter","from","clearBranchFilter","Label","DeliveryTime","DeliverLabel","deliverType","_lingui_react","KitchenOrderAtSummary","deliverTime","AccessTime","KitchenOrderAtSummary_DeliverLabel","formatTimeWithoutTodayDate","Circle","TouchCheckButton_templateObject","Small","CheckedInner","TouchCheckButton_templateObject2","TouchCheckButton","isChecked","firstSideDishStyle","KitchenOrderWareLine_templateObject","OrderWareLineWrap","KitchenOrderWareLine_templateObject2","isFirstSidedish","IsDoneContainerStyled","CodeContainerStyled","FontSizes","CompactCardBig","NameContainerStyled","KitchenOrderWareLine","recipeId","isDone","isCheckable","_ref$isFirstSidedish","_useMKitchenRecipeSta","useMKitchenRecipeState","updateOrderRecipeState","slicedToArray","TouchCheckButton_TouchCheckButton","OrderRecipeStateEnum","Preparing","Cooked","KitchenOrderWareList","orderWares","orderWare","KitchenOrderWareLine_KitchenOrderWareLine","recipe","nameLabel","orderRecipeState","sidedishes","sidedish","index","KitchenAcceptButton","orderId","_useMOrderState","useMOrderState","acceptOrder","TouchButton","OrderStateEnum","InProduce","StyledKitchenOrderStarIndicator","KitchenOrderStarIndicator_templateObject","KitchenOrderStarIndicator","StyledOrderDetailContainer","KitchenOrderDetail_templateObject","KitchenOrderDetail","KitchenOrderStarIndicator_KitchenOrderStarIndicator","KitchenOrderWareList_KitchenOrderWareList","orderStateCategory","OrderStateCategoryEnum","ReadyToDeliver","KitchenOrderAtSummary_KitchenOrderAtSummary","NewOrders","KitchenAcceptButton_KitchenAcceptButton","OrderBoxStyled","KitchenOrderBox_templateObject","CompactCard","greyDarkest","Middle","KitchenOrderBox_templateObject2","KitchenOrderBox_templateObject3","KitchenOrderBox_templateObject4","KitchenOrderBox_templateObject5","KitchenOrderBox","href","replace","KitchenOrderDetail_KitchenOrderDetail","requiredCategories","loaderContext","createContext","loading","noFilter","orders","sortByPriority","sortWith","descend","ascend","either","KitchenOrderListLoader","observer","orderModel","hasBranchFilter","_useQKitchenOrderList","useQKitchenOrderList","branchesFilter","categories","skip","updateQuery","refetch","useSKitchenOrderList","Finished","onSubscriptionData","dataUpdate","subscriptionData","prev","update","updatedOrder","o","orderExists","unshift","handleSubscriptionUpdate","Provider","InfoMessage","KitchenOrderList_templateObject","KitchenOrderList","category","_useKitchenOrderList","useContext","categoryOrders","propEq","KitchenOrderBox_KitchenOrderBox","CategorySeparator","KitchenOverviewPage_templateObject","KitchenOverviewPage","PageLayout","pageTitle","useBackButton","layouts","i","x","y","w","h","KitchenRoutes_KitchenRoutes","KitchenRoutes","match","react_router","SecureRoute","exact","path"],"mappings":"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","file":"static/js/179.93537b57.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import { Trans } from '@lingui/macro'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  formatItem?: (item: ItemType) => string | ReactNode\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\nconst StyledSelectControlFlat = styled.div`\n  ${(props: { textColor?: string }) => ``}\n\n  color: ${({ textColor }) => (textColor ? textColor : 'inherit')};\n\n  &.interactive {\n    cursor: pointer;\n  }\n\n  &.invalid {\n    border: 1px red solid;\n  }\n\n  > div {\n    margin: 0.5rem 0.6rem;\n    display: inline-block;\n  }\n\n  > div.active {\n    font-weight: bolder;\n    text-decoration: underline;\n  }\n`\n\nexport const SelectControlFlat = <ItemType extends any>(\n  props: ISelectControlFlatProps<ItemType>,\n) => {\n  const {\n    items,\n    formatItem = RM.prop('displayName'),\n    isMulti = false,\n    isClearable = false,\n    isInvalid = false,\n    selectedItem,\n    selectedItems,\n    onSingleSelection,\n    onMultiSelection,\n    textColor,\n  } = props\n\n  const hasSingleItem = items.length === 1\n\n  const hasSelection = () => {\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n\n  const isItemSelected = (item: ItemType) => {\n    if (items.length === 1) {\n      // with one item there no selection happening\n      return false\n    }\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n\n  const updateSelection = (item: Maybe<ItemType>) => {\n    if (hasSingleItem) {\n      return\n    }\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  return (\n    <StyledSelectControlFlat\n      className={cn({\n        invalid: isInvalid,\n        interactive: !hasSingleItem,\n      })}\n      textColor={textColor}\n    >\n      {isClearable && (\n        <div\n          className={cn({ active: !hasSelection() })}\n          onClick={() => {\n            updateSelection(null)\n          }}\n        >\n          <Trans id=\"optionselector.clear-filter\">All</Trans>\n        </div>\n      )}\n      {items.map((item, idx) => {\n        // @ts-ignore Have to use any in generics due to parsing error\n        const formatted = formatItem(item)\n        return (\n          <div\n            key={idx}\n            className={cn({ active: isItemSelected(item) })}\n            onClick={() => {\n              updateSelection(item)\n            }}\n          >\n            {formatted}\n          </div>\n        )\n      })}\n    </StyledSelectControlFlat>\n  )\n}\n","import { autorun } from 'mobx'\nimport React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\nexport function useAutorunWhenSingleBranch(\n  onSingleBranch: (branch: FCompanyBranchFragment) => void,\n) {\n  const { user } = useRoot()\n  React.useEffect(() =>\n    autorun(() => {\n      if (user.isReady && user.hasSingleBranch) {\n        onSingleBranch(user.branches[0])\n      }\n    }),\n  )\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  hideWhenSingleBranch?: boolean\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  hideWhenSingleBranch = false,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n\n  const isSelected = branch => selectedBranches.includes(branch.id)\n\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n\n  if (user.hasSingleBranch && hideWhenSingleBranch) {\n    return null\n  }\n\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames = ['animated']\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant\n      key={minutes}\n      onClick={onClick}\n      className={cx(\n        className,\n        {\n          heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n          pulse: variant === ETimeBadgeVariant.WARNING,\n        },\n        ...extraClassNames,\n      )}\n    >\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nconst StyledOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 3.8rem;\n  top: 0;\n`\n\nexport const OrderStarIndicator: React.FC<IProps> = props => {\n  return (\n    <StyledOrderStarIndicator>\n      <Icon iconName=\"star\" color={Colors.orange} />\n    </StyledOrderStarIndicator>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport {\n  DeliveryTypeEnum,\n  FOrderTickerFragment,\n} from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\nimport { OrderStarIndicator } from '../atoms/OrderStarIndicator'\n\ninterface IOrderTickerProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onClick(): void\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  isCancelled,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={isCancelled}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          {order.isPriority && <OrderStarIndicator />}\n          {order.totalSum.formattedValue}\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","var map = {\n\t\"./cs.svg\": 6895,\n\t\"./de.svg\": 6896,\n\t\"./en.svg\": 6897,\n\t\"./pl.svg\": 6898,\n\t\"./sk.svg\": 6899\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6894;","var map = {\n\t\"./logo-doveze.svg\": 6901,\n\t\"./logo-gopay.svg\": 6902,\n\t\"./logo-mastercard.svg\": 6903,\n\t\"./logo-visa.svg\": 6904\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6900;","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { Colors } from '../../../styling'\n\ninterface IOrderListBranchFilterProps {}\n\nexport const OrderListBranchFilter: React.FC<\n  IOrderListBranchFilterProps\n> = () => {\n  const { order } = useRoot()\n\n  useAutorunWhenSingleBranch(branch => {\n    order.list.setBranchFilter([branch.id])\n  })\n\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(order.list.branches)}\n      onSelectionChange={branches => {\n        order.list.setBranchFilter(branches)\n      }}\n      onSelectionClear={order.list.clearBranchFilter}\n      textColor={Colors.turquoise}\n      isMulti={true}\n      isClearable={false}\n      hideWhenSingleBranch={true}\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  deliverTime: string | null\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<IProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<IProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport {\n  OrderRecipeStateEnum,\n  useMKitchenRecipeState,\n} from '../../../graph/generated'\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\n\ninterface IProps {\n  recipeId?: ID\n  code?: string\n  label: string\n  isDone: boolean\n  isCheckable: boolean\n  isFirstSidedish?: boolean\n}\n\nconst firstSideDishStyle = css`\n  margin-top: -0.8rem;\n`\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${(props: { isFirstSidedish: boolean }) =>\n    props.isFirstSidedish && firstSideDishStyle};\n`\n\nconst IsDoneContainerStyled = styled.div`\n  flex: 0 0 2.4rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 4.1rem;\n  font-size: ${FontSizes.CompactCardBig};\n  color: ${Colors.black};\n  margin-top: 0.35rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n  margin-top: 0.35rem;\n`\n\nexport const KitchenOrderWareLine: React.FC<IProps> = ({\n  recipeId,\n  code,\n  label,\n  isDone,\n  isCheckable,\n  isFirstSidedish = false,\n}) => {\n  const [updateOrderRecipeState] = useMKitchenRecipeState()\n\n  return (\n    <OrderWareLineWrap isFirstSidedish={isFirstSidedish}>\n      <IsDoneContainerStyled>\n        {isCheckable && (\n          <TouchCheckButton\n            isChecked={isDone}\n            onClick={() => {\n              if (recipeId) {\n                updateOrderRecipeState({\n                  recipeId,\n                  state: isDone\n                    ? OrderRecipeStateEnum.Preparing\n                    : OrderRecipeStateEnum.Cooked,\n                })\n              }\n            }}\n          />\n        )}\n      </IsDoneContainerStyled>\n      <CodeContainerStyled>{code}</CodeContainerStyled>\n      <NameContainerStyled>{label}</NameContainerStyled>\n    </OrderWareLineWrap>\n  )\n}\n","import React, { Fragment } from 'react'\n\nimport { OrderRecipeStateEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { KitchenOrderWareLine } from '../molecules/KitchenOrderWareLine'\n\ninterface IProps {\n  orderWares: ReadonlyArray<FKitchenOrder.Items>\n  isCheckable: boolean\n}\n\nexport const KitchenOrderWareList: React.FC<IProps> = ({\n  orderWares,\n  isCheckable,\n}) => {\n  const renderWare = (orderWare: FKitchenOrder.Items) => (\n    <Fragment key={orderWare.id}>\n      <KitchenOrderWareLine\n        recipeId={orderWare.id}\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        isDone={orderWare.orderRecipeState.enum === OrderRecipeStateEnum.Cooked}\n        isCheckable={isCheckable}\n      />\n      <>\n        {orderWare.sidedishes.map((sidedish, index) => (\n          <KitchenOrderWareLine\n            key={`${orderWare.id}-${sidedish.id}`}\n            recipeId={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            isDone={false}\n            isCheckable={false}\n            isFirstSidedish={index === 0 && isCheckable}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const KitchenAcceptButton: React.FC<IProps> = ({ orderId }) => {\n  const [acceptOrder] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        iconName=\"keyboard_arrow_right\"\n        width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        color={Colors.green}\n        onClick={() => {\n          acceptOrder({ orderId, state: OrderStateEnum.InProduce })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nconst StyledKitchenOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 0.2rem;\n  top: 0.2rem;\n  z-index: 5;\n`\n\nexport const KitchenOrderStarIndicator: React.FC<IProps> = props => {\n  return (\n    <StyledKitchenOrderStarIndicator>\n      <Icon iconName=\"star\" color={Colors.orange} />\n    </StyledKitchenOrderStarIndicator>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { KitchenOrderWareList } from '../organisms/KitchenOrderWareList'\nimport { KitchenAcceptButton } from './KitchenAcceptButton'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\nconst StyledOrderDetailContainer = styled.div`\n  padding: 0 0.2rem 0.1rem 0.2rem;\n  position: relative;\n`\n\nexport const KitchenOrderDetail: React.FC<IProps> = ({ order }) => (\n  <StyledOrderDetailContainer>\n    <HorizontalSeparator />\n    {order.isPriority && <KitchenOrderStarIndicator />}\n    <KitchenOrderWareList\n      orderWares={order.items}\n      isCheckable={\n        order.orderStateCategory === OrderStateCategoryEnum.Preparing ||\n        order.orderStateCategory === OrderStateCategoryEnum.ReadyToDeliver\n      }\n    />\n    <HorizontalSeparator />\n    <KitchenOrderAtSummary\n      deliverTime={order.deliverAt}\n      deliverType={\n        order.deliveryType &&\n        order.deliveryType.enum === DeliveryTypeEnum.Pickup\n          ? 'PERSONAL'\n          : 'DELIVER_UNTIL'\n      }\n    />\n    <NoteLine note={order.note} previousNote={order.previousNote} />\n    {order.orderStateCategory === OrderStateCategoryEnum.NewOrders && (\n      <CardDock position=\"BottomRight\">\n        <KitchenAcceptButton orderId={order.id} />\n      </CardDock>\n    )}\n  </StyledOrderDetailContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenOrderDetail } from './KitchenOrderDetail'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n  showBranch: boolean\n}\nexport const OrderBoxStyled = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  margin-right: ${Spacing.Middle};\n  position: relative;\n`\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.2rem;\n  color: ${Colors.greyMiddle};\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 1.8rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n`\n\nexport const KitchenOrderBox: React.FC<IProps> = ({ order, showBranch }) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderBoxStyled>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n          <br />\n          {order.customer && order.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${order.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {order.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </CustomerIdentityContainerStyled>\n      </OrderTickerMainContentStyled>\n\n      <KitchenOrderDetail order={order} />\n    </OrderBoxStyled>\n  )\n}\n","import { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FKitchenOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenOrderListOrders,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\ntype TOrder = QKitchenOrderListOrders\n\ninterface ILoaderContext {\n  loading: boolean\n  noFilter: boolean\n  orders: ReadonlyArray<TOrder>\n}\n\nconst loaderContext = React.createContext<ILoaderContext>({\n  loading: true,\n  noFilter: true,\n  orders: [],\n})\n\nexport const sortByPriority = RM.sortWith<FKitchenOrderFragment>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.either(RM.prop('deliverAt'), RM.prop('createdAt'))),\n  // RM.ascend(order => order.deliverAt || order.createdAt),\n])\n\nexport const KitchenOrderListLoader: React.FC = observer(props => {\n  const { order: orderModel } = useRoot()\n  const noFilter = !orderModel.list.hasBranchFilter\n  const { data, loading, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    { skip: noFilter },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip: noFilter,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return (\n    <loaderContext.Provider\n      value={{\n        loading,\n        noFilter,\n        orders: loading ? [] : sortByPriority(data.orders),\n      }}\n    >\n      {props.children}\n    </loaderContext.Provider>\n  )\n})\n\nexport function useKitchenOrderList() {\n  return React.useContext(loaderContext)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { KitchenOrderBox } from '../molecules/KitchenOrderBox'\nimport { useKitchenOrderList } from './KitchenOrderListLoader'\n\ninterface IProps {\n  category: OrderStateCategoryEnum\n}\n\nconst InfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n\nexport const KitchenOrderList = observer<IProps>(({ category }) => {\n  const { order: orderModel } = useRoot()\n  const { loading, noFilter, orders } = useKitchenOrderList()\n\n  if (noFilter) {\n    return (\n      <InfoMessage>\n        <Trans>Select a branch</Trans>\n      </InfoMessage>\n    )\n  }\n\n  if (loading) {\n    return (\n      <InfoMessage>\n        <Trans>Loading</Trans>\n      </InfoMessage>\n    )\n  }\n\n  const categoryOrders = orders.filter(\n    RM.propEq('orderStateCategory', category),\n  )\n\n  if (categoryOrders.length === 0) {\n    switch (category) {\n      case OrderStateCategoryEnum.NewOrders:\n        return (\n          <InfoMessage>\n            <Trans>No new orders</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.Preparing:\n        return (\n          <InfoMessage>\n            <Trans>No orders to prepare</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.ReadyToDeliver:\n        return (\n          <InfoMessage>\n            <Trans>No orders to deliver</Trans>\n          </InfoMessage>\n        )\n      default:\n        return (\n          <InfoMessage>\n            <Trans>No orders</Trans>\n          </InfoMessage>\n        )\n    }\n  }\n\n  return (\n    <>\n      {categoryOrders.map(order => (\n        <KitchenOrderBox\n          key={order.id}\n          order={order}\n          showBranch={orderModel.list.branchesFilter.length > 1}\n        />\n      ))}\n    </>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { Colors } from '../../../styling'\nimport { OrderListBranchFilter } from '../../order/organisms/OrderListBranchFilter'\nimport { KitchenOrderList } from '../organisms/KitchenOrderList'\nimport { KitchenOrderListLoader } from '../organisms/KitchenOrderListLoader'\n\nfunction getLayout() {\n  return [{ i: 'filter', x: 4, y: 0, w: 10, h: 1 }]\n}\n\nconst CategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: -0.5rem;\n`\n\nexport const KitchenOverviewPage: React.FC = () => (\n  <KitchenOrderListLoader>\n    <PageLayoutFullHeightItem withScrollArea={true} row={1} widthInColumns={5}>\n      <KitchenOrderList category={OrderStateCategoryEnum.NewOrders} />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={5}\n      widthInColumns={6}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.Preparing} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={11}\n      widthInColumns={5}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.ReadyToDeliver} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      layouts={getLayout()}\n    >\n      <PageLayoutItem\n        key=\"filter\"\n        component={() => <OrderListBranchFilter />}\n      />\n    </PageLayout>\n  </KitchenOrderListLoader>\n)\n","import React from 'react'\nimport { RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const KitchenRoutes: React.FC<IProps> = ({ match }) => {\n  return (\n    <>\n      <Switch>\n        <SecureRoute\n          exact={true}\n          path={match.path}\n          component={KitchenOverviewPage}\n        />\n      </Switch>\n    </>\n  )\n}\n\nexport default KitchenRoutes\n"],"sourceRoot":""}