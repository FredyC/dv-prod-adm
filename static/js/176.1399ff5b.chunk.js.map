{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/Headline.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/NoAccess.tsx","atoms/HorizontalSeparator.tsx","atoms/CanQuery.tsx","atoms/SelectControlFlat.tsx","atoms/FlexColumn.tsx","hooks/useAutorunWhenSingleBranch.ts","atoms/CardDock.tsx","atoms/ScrollArea.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/Price.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","segments/order/hooks/useOrderListModel.ts","segments/order/atoms/DeliveryTimeBadge.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","molecules/ConfirmButton.tsx","segments/order/atoms/OrderStarIndicator.tsx","segments/order/molecules/OrderTicker.tsx","hooks/useExecutableQuery.ts","segments/order/hooks/useOrderModel.ts","segments/order/molecules/NoteLine.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","atoms/DeliveryMinutes.tsx","molecules/DeliveryTimeDialog.tsx","atoms/RelativeLink.tsx","../node_modules/resolve-pathname/esm/resolve-pathname.js","atoms/FormInputDateTime.tsx","atoms/FlexAutoHeight.tsx","atoms/FlexRow.tsx","molecules/PageLayoutItem.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderWarePriceLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderIdLine.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/atoms/OrderTimeLabel.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareLine.tsx","segments/order/molecules/OrderWareList.tsx","molecules/HamburgerMenu.tsx","segments/order/molecules/OrderCancelButton.tsx","segments/order/molecules/OrderDeliveryToPickup.tsx","segments/order/molecules/OrderStarButton.tsx","segments/order/molecules/OrderStateButton.tsx","hooks/useAccessGuard.ts","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/atoms/OrderBox.tsx","atoms/InputDate.tsx","atoms/FormInputDate.tsx","segments/overview/molecules/ClosureHistoryFilter.tsx","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/pages/ClosureHistoryPage.tsx","atoms/MonospaceOutput.tsx","segments/overview/molecules/ClosureStatisticsContent.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/pages/ClosurePage.tsx","segments/overview/hooks/useStatsFilter.tsx","segments/overview/molecules/DailyStatisticsContent.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/molecules/StatisticsFilter.tsx","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/molecules/OrdersStatisticsList.tsx","segments/overview/molecules/OrdersStatisticsSummary.tsx","segments/overview/molecules/StatisticsDriversFilter.tsx","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/routes/OverviewRoutes.tsx"],"names":["IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","Headline","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","StyledPageLayoutFullHeightItem","withConfig","componentId","mediaDesktop","widthInColumns","LayoutGridCellMargin","column","row","mediaMobile","rowInMobile","forcePercentHeightInMobile","PageHeaderHeight","PageLayoutFullHeightItem","_ref3$row","_ref3$rowInMobile","_ref3$column","_ref3$widthInColumns","_ref3$withScrollArea","withScrollArea","scrollAreaId","forceHeightInMobile","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_4__","id","_atoms_Sizer__WEBPACK_IMPORTED_MODULE_5__","height","heightUnit","FlexRowSingle","_ref$flexWrap","flexWrap","_ref2$justify","justify","NoAccess","HorizontalSeparatorStyled","HorizontalSeparator","_ref$visible","visible","CanQuery","queryName","canQuery","StyledSelectControlFlat","textColor","SelectControlFlat","items","_props$formatItem","formatItem","RM","prop","_props$isMulti","isMulti","_props$isClearable","isClearable","_props$isInvalid","isInvalid","selectedItem","selectedItems","onSingleSelection","onMultiSelection","hasSingleItem","isItemSelected","item","Array","isArray","contains","equals","updateSelection","without","react__WEBPACK_IMPORTED_MODULE_3___default","className","cn","invalid","interactive","active","onClick","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","map","idx","formatted","key","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","useAutorunWhenSingleBranch","mobx__WEBPACK_IMPORTED_MODULE_0__","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","onSingleBranch","useEffect","autorun","isReady","hasSingleBranch","branches","CardDock","_ref2$position","position","_ref$position","ScrollArea","CompanyBranchFlatSelect","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","_ref$hideWhenSingleBr","hideWhenSingleBranch","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","isSelected","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","Price","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","formatPrice","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","react","value","placeholder","i18n","_","ButtonHeight","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","FormSubmit","react_form__WEBPACK_IMPORTED_MODULE_2__","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","isEmpty","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","utils","MomentUtils","useOrderListModel","_useOrderModel__WEBPACK_IMPORTED_MODULE_0__","useOrderModel","list","cancelIconPadding","css","StyledDelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_6___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_2__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","LinkStyled","StyledTimeBadge","variants","_variants","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","red","orange","bigNumberStyle","dashStyle","clickable","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_4___default","cx","apply","heartBeat","pulse","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","ConfirmButton","confirmNode","_ref$initialColor","initialColor","_ref$confirmColor","confirmColor","_ref$confirmDisableMs","confirmDisableMs","_ref$resetToInitialMs","resetToInitialMs","SECOND","onConfirm","_React$useState","useState","_React$useState2","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","needConfirm","setNeedConfirm","buttonRef","useRef","timer","setTimeout","clearTimeout","_TouchButton__WEBPACK_IMPORTED_MODULE_4__","current","StyledOrderStarIndicator","OrderStarIndicator","Icon","OrderTickerStyled","Element","OrderTicker_templateObject","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","_templateObject5","PriceContainerStyled","_templateObject6","PaidMarkStyled","_templateObject7","PaidTextStyled","_templateObject8","ToBranchContainerStyled","_templateObject9","Radiuses","Card","ToPickupLabel","_templateObject10","violet","OrderTicker","order","showBranch","companyBranch","Date","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","formatAddress","address","isPriority","OrderStarIndicator_OrderStarIndicator","totalSum","formattedValue","isPaidWithCard","useExecutableQuery","query","client","useApolloClient","onError","useApolloDefender","result","useObservable","loading","error","wasExecuted","hasAnyError","Boolean","useReaction","makeError","err","variables","ApolloOperationError","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","execute","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","queryResult","wrap","_context","prev","next","sent","runInAction","ApolloError","graphQLErrors","t0","abrupt","stop","_x","this","reset","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_0__","CurrentNoteStyled","span","PreviousNoteStyled","NoteLine","note","previousNote","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_3__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_4__","_i18n__WEBPACK_IMPORTED_MODULE_5__","./cs.svg","./de.svg","./en.svg","./pl.svg","./sk.svg","webpackContext","req","webpackContextResolve","Error","code","resolve","module","exports","./logo-doveze.svg","./logo-gopay.svg","./logo-mastercard.svg","./logo-visa.svg","deliveryMinutes","pickupMinutes","StyledDeliveryMinutes","StyledMinutesItem","DeliveryMinutes","onMinuteClick","initialMinutes","setSelected","getMinutesForDeliveryType","yellow","type","DeliveryTimeDialog","onCancel","cancelText","refApi","_useState","_useState2","isOpen","setOpen","openDialog","closeDialog","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","open","onClose","_atoms_DeliveryMinutes__WEBPACK_IMPORTED_MODULE_4__","_TouchButton__WEBPACK_IMPORTED_MODULE_5__","RelativeLink","to","from","linkProps","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","isAbsolute","charAt","spliceOne","index","i","k","pop","hasTrailingSlash","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","last","up","part","unshift","join","FormInputDateTime","field","_ref$inline","inline","pickerProps","Picker","InlineDateTimePicker","DateTimePicker","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_6__","react_form__WEBPACK_IMPORTED_MODULE_4__","render","fieldApi","setValue","onOpen","setTouched","format","ampm","showTabs","maxDateMessage","minDateMessage","AutoHeight","FlexRow","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","_atoms_PageLayoutGridItem__WEBPACK_IMPORTED_MODULE_5__","_atoms_Sizer__WEBPACK_IMPORTED_MODULE_6__","DashboardButtonHeight","ContactLines","phones","emails","renderContact","contact","description","isMail","href","replace","renderClickableLink","email","OrderCountLine","total","_lingui_react","values","OrderWareLineWrap","NameContainerStyled","OrderWarePriceLine","_ref$highlight","highlight","StyledOrderDetailTotals","OrderDetailTotals_templateObject","OrderDetailTotals","totals","OrderWarePriceLine_OrderWarePriceLine","tip","transportFee","coverPrice","totalDiscount","OrderOriginLabel","OrderIdLine_templateObject","orderOrigin","OrderOriginEnum","DameJidlo","OrderIdLine","displayedId","OrderRuleLines","rules","OrderTimeLabel","OrderTimeLabel_templateObject","DelayedDeliveryTimeLabel","OrderStats_templateObject","DelayedOrderTimeLabel","OrderStats_templateObject2","OrderStats","stats","formatTimeWithoutTodayDate","driver","_order$driver$user","Timelapse","labelMap","_labelMap","defineProperty","OrderStateCategoryEnum","NewOrders","i18nMark","Preparing","ReadyToDeliver","OnWay","Finished","OrderTimeLine","orderTiming","reject","createdAt","orderStateCategory","timing","OrderWareLine_templateObject","CodeContainerStyled","OrderWareLine_templateObject2","OrderWareLine_templateObject3","OrderWareLine","OrderWareLine_OrderWareLineWrap","OrderWareLine_NameContainerStyled","OrderWareLine_PriceContainerStyled","OrderWareList","orderWares","orderWare","OrderWareLine_OrderWareLine","recipe","nameLabel","sidedishes","sidedish","StyledHamburgerMenu","HamburgerMenu_templateObject","PopupMenu","HamburgerMenu_templateObject2","Small","Middle","HamburgerMenu","slicedToArray","isOpened","setIsOpened","Children","count","SizerButton","TouchButton","OrderCancelButton","orderId","_useMCancelOrder","useMCancelOrder","cancelOrder","Sizer","OrderDeliveryToPickup","isDelivery","_useMOrderChangeToPic","useMOrderChangeToPickup","changeToPickup","OrderStarButton","_useMSetPriorityOrder","useMSetPriorityOrder","setPriorityOrder","iconColor","stateLabels","_stateLabels","OrderStateEnum","Accepted","OrderStateButton","nextState","_useMOrderState","useMOrderState","updateOrderState","text","useAccessGuard","queries","mutations","every","StyledDriverName","StyledValueContainer","background","borderWidth","borderRadius","Button","singleValue","fontSize","indicatorSeparator","display","OrderDriverSelect","drivers","selectedDriver","isLoading","onSelect","onClear","onReload","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","react_select_esm","DropdownIndicator","theme","blurInputOnSelect","colors","primary","primary25","OrderStateDeliver","branchId","canRead","_len","_key","useCanQuery","deliverOrder","_useMSelectOrderDrive","useMSelectOrderDriver","selectDriver","_useMRemoveOrderDrive","useMRemoveOrderDriver","removeDriver","_useQOrderDrivers","useQOrderDrivers","skip","refetch","OrderDriverSelect_OrderDriverSelect","orderDriver","orderDriverId","driverId","StyledOrderStateFlowContainer","StyledControl","OrderStateFlowContainer","child","OrderStateTimeNotification","_useMOrderTimeNotific","useMOrderTimeNotification","sendTimeNotification","Messenger","HamburgerMenuAtLeft","HamburgerMenu_HamburgerMenu","OrderStateNewOrder","OrderStateFlowContainer_OrderStateFlowContainer","OrderStateFlow_HamburgerMenuAtLeft","canCancel","OrderCancelButton_OrderCancelButton","OrderDeliveryToPickup_OrderDeliveryToPickup","OrderStateTimeNotification_OrderStateTimeNotification","OrderStateButton_OrderStateButton","OrderStateAcceptedOrder","OrderStarButton_OrderStarButton","canDeliver","OrderStateDeliver_OrderStateDeliver","OrderStateReadyToDeliverOrder","OrderStateOnWayOrder","OrderStateFinishedOrder","OrderStateFlow","_useQOrderState","useQOrderState","allowedCategories","isCancelable","stateProps","OrderStateFlow_OrderStateNewOrder","OrderStateFlow_OrderStateAcceptedOrder","OrderStateFlow_OrderStateReadyToDeliverOrder","OrderStateFlow_OrderStateOnWayOrder","OrderStateFlow_OrderStateFinishedOrder","StyledOrderDetail","OrderDetail","memo","_useQOrderDetail","useQOrderDetail","Loading","OrderWareList_OrderWareList","OrderDetailTotals_OrderDetailTotals","OrderRuleLines_OrderRuleLines","allAppliedRules","OrderCountLine_OrderCountLine","customerOrdersCountCurrent","customerOrdersCountTotal","ContactLines_ContactLines","OrderIdLine_OrderIdLine","OrderTimeLine_OrderTimeLine","OrderStats_OrderStats","OrderStateFlow_OrderStateFlow","OrderBoxStyled","OrderBox_templateObject","OrderBox","observer","onToggleDetail","orderListModel","useCallback","toggleOrderDetail","isDetailOpen","isOrderDetailOpen","InputDate","material_ui_pickers_esm","core","FormInputDate","es","InputDate_InputDate","ClosureHistoryFilter","autoOk","context","createContext","ClosureHistoryLoader","statistics","_useExecutableQuery","QClosureHistoryDocument","onSubmit","formValues","closureBranch","dateFrom","formatDateISO","dateTo","defaultValues","subDays","Provider","ClosureHistoryTable","_useClosureHistory","useContext","history","report","reportSequence","reportDatetime","ClosureCurrentButton","react_router_dom","ButtonToRight","ClosureStatisticsFilter","showCurrent","setClosureBranch","ClosureCurrentButton_ClosureCurrentButton","ClosureHistoryPage","ClosureHistoryLoader_ClosureHistoryLoader","FullPageLayout","pageTitle","useBackButton","backRoute","ClosureHistoryFilter_ClosureHistoryFilter","StyledMonospaceOutput","p","MonospaceOutput_templateObject","StyledScrollableContainer","renderContent","RegExp","MonospaceOutput","_ref$scrollable","scrollable","ClosureStatisticsContent","_ref$reportId","reportId","_useQClosureReport","useQClosureReport","showReport","MonospaceOutput_MonospaceOutput","plainData","lastReport","ClosureHistoryButton","ClosureSubmitButton","ClosureStatisticsControl","enqueueSuccess","useSnackBar","useRouterContext","_useMFinancialReportC","useMFinancialReportCreate","createClosure","asyncToGenerator","regenerator_default","MarginBox","ClosureSubmitButton_ClosureSubmitButton","ClosureHistoryButton_ClosureHistoryButton","ClosurePage","match","ClosureStatisticsControl_ClosureStatisticsControl","params","useStatsFilterCurrent","useStatsFilter","setFilter","executeFilter","toConsumableArray","branchesFilter","dateTimeFrom","isoDate","dateTimeTo","renderForm","updateFilter","useStatsFilter_context","StatsDisplay","plain","DailyStatisticsContent","_useQStatsDaily","useQStatsDaily","DailyStatisticsContent_StatsDisplay","daily","category","delivery","StatisticsBranchFilter","setBranchFilter","clearBranchFilter","StyledFlexRowSingle","StatisticsFilter","0","DailyStatisticsLoader","DailyStatisticsPage","DailyStatisticsLoader_DailyStatisticsLoader","StatisticsBranchFilter_StatisticsBranchFilter","StatisticsFilter_StatisticsFilter","DailyStatisticsContent_DailyStatisticsContent","OrdersStatisticsList","orders","Map","loaderRef","measureCache","useMemo","CellMeasurerCache","defaultHeight","minHeight","_useQStatsOrdersCount","useQStatsOrdersCounts","countsData","countsLoading","clear","clearAll","resetLoadMoreRowsCache","JSON","stringify","executeList","QStatsOrdersListDocument","queryMoreOrders","startIndex","stopIndex","pagination","fromIndex","toIndex","shift","set","isRowLoaded","get","rowRenderer","_ref4","parent","dist_es","columnIndex","rowIndex","cache","_ref5","measure","Cancel","_countsData$stats$cou","counts","totalCount","finished","cancelled","_ref6","rowCount","loadMoreRows","_ref7","onRowsRendered","registerChild","rowHeight","deferredMeasurementCache","StyledStatPanel","OrdersStatisticsSummary_templateObject","OrdersStatisticsSummary_templateObject2","StyledStatLabel","h1","StyledStatValue","OrdersStatisticsSummary","_useQStatsOrders","useQStatsOrders","finishedOrders","currency","onlinePayments","finishedCount","cancelledCount","fees","orderStatisticsPlain","StatisticsDriversFilter","_useQAllDrivers","useQAllDrivers","setDriversFilter","intersection","option","formatFullName","OrdersStatisticsLoader","autoFilter","_useStatsFilter","OrdersStatisticsPage","setTodayOrdersFilter","OrdersStatisticsLoader_OrdersStatisticsLoader","PageLayoutResponsive","showSoundControl","PageLayoutGridItem","gridColumn","gridRow","FlexAutoHeight","OrdersStatisticsList_OrdersStatisticsList","ClosureButton","DailyStatisticsButton","OrdersStatisticsButton","OverviewPage","isForIconDashboard","OverviewRoutes_OverviewRoutes","OverviewRoutes","PageTitle","react_router","SecureRoute","exact","path","NotFoundPage"],"mappings":"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","file":"static/js/176.1399ff5b.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => (\n  <StyledPageLayoutFullHeightItem\n    column={column}\n    row={row}\n    rowInMobile={rowInMobile}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n    forcePercentHeightInMobile={forceHeightInMobile}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <Sizer height={100} heightUnit=\"%\">\n        {children}\n      </Sizer>\n    )}\n  </StyledPageLayoutFullHeightItem>\n)\n","import styled from 'styled-components'\n\ninterface IProps {\n  flexWrap?: string\n  justify?: string\n}\n\nexport const FlexRowSingle = styled.div<IProps>`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: ${({ flexWrap = 'unset' }: IProps) => flexWrap};\n  justify-content: ${({ justify = 'space-between' }: IProps) => justify};\n`\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import { Trans } from '@lingui/macro'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  formatItem?: (item: ItemType) => string | ReactNode\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\nconst StyledSelectControlFlat = styled.div`\n  ${(props: { textColor?: string }) => ``}\n\n  color: ${({ textColor }) => (textColor ? textColor : 'inherit')};\n\n  &.interactive {\n    cursor: pointer;\n  }\n\n  &.invalid {\n    border: 1px red solid;\n  }\n\n  > div {\n    margin: 0.5rem 0.6rem;\n    display: inline-block;\n  }\n\n  > div.active {\n    font-weight: bolder;\n    text-decoration: underline;\n  }\n`\n\nexport const SelectControlFlat = <ItemType extends any>(\n  props: ISelectControlFlatProps<ItemType>,\n) => {\n  const {\n    items,\n    formatItem = RM.prop('displayName'),\n    isMulti = false,\n    isClearable = false,\n    isInvalid = false,\n    selectedItem,\n    selectedItems,\n    onSingleSelection,\n    onMultiSelection,\n    textColor,\n  } = props\n\n  const hasSingleItem = items.length === 1\n\n  const hasSelection = () => {\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n\n  const isItemSelected = (item: ItemType) => {\n    if (items.length === 1) {\n      // with one item there no selection happening\n      return false\n    }\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n\n  const updateSelection = (item: Maybe<ItemType>) => {\n    if (hasSingleItem) {\n      return\n    }\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  return (\n    <StyledSelectControlFlat\n      className={cn({\n        invalid: isInvalid,\n        interactive: !hasSingleItem,\n      })}\n      textColor={textColor}\n    >\n      {isClearable && (\n        <div\n          className={cn({ active: !hasSelection() })}\n          onClick={() => {\n            updateSelection(null)\n          }}\n        >\n          <Trans id=\"optionselector.clear-filter\">All</Trans>\n        </div>\n      )}\n      {items.map((item, idx) => {\n        // @ts-ignore Have to use any in generics due to parsing error\n        const formatted = formatItem(item)\n        return (\n          <div\n            key={idx}\n            className={cn({ active: isItemSelected(item) })}\n            onClick={() => {\n              updateSelection(item)\n            }}\n          >\n            {formatted}\n          </div>\n        )\n      })}\n    </StyledSelectControlFlat>\n  )\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { autorun } from 'mobx'\nimport React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\nexport function useAutorunWhenSingleBranch(\n  onSingleBranch: (branch: FCompanyBranchFragment) => void,\n) {\n  const { user } = useRoot()\n  React.useEffect(() =>\n    autorun(() => {\n      if (user.isReady && user.hasSingleBranch) {\n        onSingleBranch(user.branches[0])\n      }\n    }),\n  )\n}\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  hideWhenSingleBranch?: boolean\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  hideWhenSingleBranch = false,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n\n  const isSelected = branch => selectedBranches.includes(branch.id)\n\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n\n  if (user.hasSingleBranch && hideWhenSingleBranch) {\n    return null\n  }\n\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { useOrderModel } from './useOrderModel'\n\nexport function useOrderListModel() {\n  const { list } = useOrderModel()\n  return list\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst StyledDelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <StyledDelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst StyledTimeBadge = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(StyledTimeBadge)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(StyledTimeBadge)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(StyledTimeBadge)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(StyledTimeBadge)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames = ['animated']\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant\n      key={minutes}\n      onClick={onClick}\n      className={cx(\n        className,\n        {\n          heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n          pulse: variant === ETimeBadgeVariant.WARNING,\n        },\n        ...extraClassNames,\n      )}\n    >\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { SECOND } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { Colors } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  confirmNode: ReactNode | string\n  initialColor?: Colors\n  confirmColor?: Colors\n  confirmDisableMs?: number\n  resetToInitialMs?: number\n  disabled?: boolean\n  onConfirm(): void\n}\n\nexport const ConfirmButton: React.FC<IProps> = ({\n  confirmNode,\n  initialColor = Colors.greyMiddle,\n  confirmColor = Colors.red,\n  confirmDisableMs = 300,\n  resetToInitialMs = 3 * SECOND,\n  disabled,\n  children,\n  onConfirm,\n}) => {\n  const [needConfirm, setNeedConfirm] = React.useState(false)\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const onClick = () => {\n    if (needConfirm === false) {\n      buttonRef.current!.disabled = true\n      setNeedConfirm(true)\n      setTimeout(() => {\n        if (buttonRef.current) {\n          buttonRef.current.disabled = false\n        }\n      }, confirmDisableMs)\n    } else {\n      onConfirm()\n    }\n  }\n\n  React.useEffect(() => {\n    if (needConfirm) {\n      const timer = setTimeout(() => {\n        setNeedConfirm(false)\n      }, resetToInitialMs)\n      return () => {\n        clearTimeout(timer)\n      }\n    }\n    return undefined\n  }, [resetToInitialMs, needConfirm])\n\n  return (\n    <TouchButton\n      ref={buttonRef}\n      onClick={onClick}\n      color={needConfirm ? confirmColor : initialColor}\n      disabled={disabled}\n    >\n      {needConfirm ? confirmNode : children}\n    </TouchButton>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nconst StyledOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 3.8rem;\n  top: 0;\n`\n\nexport const OrderStarIndicator: React.FC<IProps> = props => {\n  return (\n    <StyledOrderStarIndicator>\n      <Icon iconName=\"star\" color={Colors.orange} />\n    </StyledOrderStarIndicator>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport {\n  DeliveryTypeEnum,\n  FOrderTickerFragment,\n} from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\nimport { OrderStarIndicator } from '../atoms/OrderStarIndicator'\n\ninterface IOrderTickerProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onClick(): void\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  isCancelled,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={isCancelled}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          {order.isPriority && <OrderStarIndicator />}\n          {order.totalSum.formattedValue}\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import {\n  ApolloOperationError,\n  useApolloClient,\n  useApolloDefender,\n} from '@speedlo/graphql'\nimport { useReaction } from '@speedlo/hooks'\nimport { ApolloError, QueryOptions } from 'apollo-client'\nimport { DocumentNode } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  error?: ApolloError\n  hasAnyError: boolean\n  wasExecuted: boolean\n}\n\nexport function useExecutableQuery<TData, TVariables>(\n  query: DocumentNode,\n  options: Partial<QueryOptions<TVariables>> = {},\n) {\n  const client = useApolloClient()\n  const { onError } = useApolloDefender()\n  const result: IQueryResult<TData> = useObservable({\n    data: null,\n    loading: false,\n    error: undefined,\n    wasExecuted: false,\n    get hasAnyError() {\n      return Boolean(result.error)\n    },\n  })\n  useReaction(\n    () => result.error,\n    error => {\n      if (error) {\n        onError(error)\n      }\n    },\n  )\n  const makeError = (err: ApolloError, variables: TVariables) => {\n    return new ApolloOperationError(err, query, { ...options, variables })\n  }\n  const execute = async (variables: TVariables) => {\n    result.loading = true\n    try {\n      const queryResult = await client.query<TData, TVariables>({\n        ...options,\n        query,\n        variables,\n      })\n      runInAction(() => {\n        result.wasExecuted = true\n        result.data = queryResult.data\n        result.loading = false\n        if (queryResult.errors && queryResult.errors.length > 0) {\n          result.error = makeError(\n            new ApolloError({ graphQLErrors: queryResult.errors }),\n            variables,\n          )\n        }\n      })\n    } catch (err) {\n      runInAction(() => {\n        result.error = makeError(err, variables)\n        result.loading = false\n      })\n    }\n    return result\n  }\n  const reset = () => {\n    runInAction(() => {\n      result.wasExecuted = false\n      result.data = null\n      result.error = undefined\n      result.loading = false\n    })\n  }\n  return { result, execute, reset }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useOrderModel() {\n  const { order } = useRoot()\n  return order\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","var map = {\n\t\"./cs.svg\": 6873,\n\t\"./de.svg\": 6874,\n\t\"./en.svg\": 6875,\n\t\"./pl.svg\": 6876,\n\t\"./sk.svg\": 6877\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6872;","var map = {\n\t\"./logo-doveze.svg\": 6879,\n\t\"./logo-gopay.svg\": 6880,\n\t\"./logo-mastercard.svg\": 6881,\n\t\"./logo-visa.svg\": 6882\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6878;","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  initialMinutes?: number\n  deliveryType: DeliveryTypeEnum\n  onMinuteClick(minute: number): void\n}\n\nconst deliveryMinutes = [20, 30, 45, 60, 75, 90, 105, 120]\nconst pickupMinutes = [10, 20, 30, 45, 60, 75, 90]\n\nconst StyledDeliveryMinutes = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst StyledMinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport const DeliveryMinutes: React.FC<IProps> = ({\n  deliveryType,\n  onMinuteClick,\n  initialMinutes,\n}) => {\n  const [selected, setSelected] = React.useState(initialMinutes)\n  const options = getMinutesForDeliveryType(deliveryType)\n  return (\n    <StyledDeliveryMinutes>\n      {options.map(minutes => (\n        <StyledMinutesItem key={minutes}>\n          <TouchButton\n            onClick={() => {\n              setSelected(minutes)\n              onMinuteClick(minutes)\n            }}\n            color={selected === minutes ? Colors.yellow : Colors.green}\n          >\n            {minutes}\n          </TouchButton>\n        </StyledMinutesItem>\n      ))}\n    </StyledDeliveryMinutes>\n  )\n}\n\nexport function getMinutesForDeliveryType(type: DeliveryTypeEnum) {\n  return type === DeliveryTypeEnum.Pickup ? pickupMinutes : deliveryMinutes\n}\n","import { Trans } from '@lingui/macro'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport React, { MutableRefObject, useState } from 'react'\n\nimport { DeliveryMinutes } from '../atoms/DeliveryMinutes'\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  title: string\n  deliveryType: DeliveryTypeEnum\n  cancelText?: string\n  onConfirm(minutes: number): void\n  onCancel?(): void\n  refApi?: MutableRefObject<Maybe<IDeliveryTimeDialogApi>>\n  children?(props: IDeliveryTimeDialogApi): React.ReactElement<{}>\n}\n\nexport interface IDeliveryTimeDialogApi {\n  openDialog(): void\n  closeDialog(): void\n}\n\nexport const DeliveryTimeDialog: React.FC<IProps> = ({\n  title,\n  deliveryType,\n  onConfirm,\n  onCancel,\n  children,\n  cancelText,\n  refApi,\n}) => {\n  const [isOpen, setOpen] = useState(false)\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  if (refApi) {\n    refApi.current = { openDialog, closeDialog }\n  }\n\n  return (\n    <>\n      {children && children({ openDialog, closeDialog })}\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DeliveryMinutes\n            deliveryType={deliveryType}\n            onMinuteClick={minutes => {\n              closeDialog()\n              onConfirm(minutes)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <TouchButton\n            onClick={() => {\n              closeDialog()\n              if (onCancel) {\n                onCancel()\n              }\n            }}\n          >\n            {cancelText ? cancelText : <Trans>Cancel</Trans>}\n          </TouchButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","import {\n  DateTimePicker,\n  DateTimePickerProps,\n  InlineDateTimePicker,\n} from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DateTimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n  inline?: boolean\n}\n\nexport const FormInputDateTime: React.FC<IProps> = ({\n  field,\n  inline = true,\n  ...pickerProps\n}) => {\n  const Picker = inline ? InlineDateTimePicker : DateTimePicker\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi =>\n          React.createElement(Picker, {\n            value: fieldApi.value,\n            onChange: value => fieldApi.setValue(value),\n            onOpen: () => fieldApi.setTouched(true),\n            format: 'lll',\n            ampm: false,\n            showTabs: false,\n            maxDateMessage: i18n.t`Date is too much in the future`,\n            minDateMessage: i18n.t`Date is too much in the past`,\n            ...pickerProps,\n          })\n        }\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nexport const AutoHeight = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\nimport {\n  IPageLayoutGridItemProps,\n  PageLayoutGridItem,\n} from '../atoms/PageLayoutGridItem'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutItemProps\n  extends IPageLayoutGridItemProps,\n    HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return (\n    <PageLayoutGridItem {...props}>\n      <Sizer height={Spacing.DashboardButtonHeight}>{layoutItem}</Sizer>\n    </PageLayoutGridItem>\n  )\n}\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { FEmailFragment, FPhoneFragment } from '../../../graph/generated'\n\ninterface IContactLinesProps {\n  phones: ReadonlyArray<FPhoneFragment>\n  emails: ReadonlyArray<FEmailFragment>\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (FPhoneFragment | FEmailFragment)\n\nexport const ContactLines: React.FC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import { Plural, SelectOrdinal, Trans } from '@lingui/react'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.FC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  label: string\n  price: number\n  highlight?: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\n\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWarePriceLine: React.FC<IProps> = ({\n  label,\n  price,\n  highlight = false,\n}) => (\n  <OrderWareLineWrap>\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      {highlight ? (\n        <b>\n          <Price price={price} />\n        </b>\n      ) : (\n        <Price price={price} />\n      )}\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FOrderTotalsFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { OrderWarePriceLine } from './OrderWarePriceLine'\n\ninterface IProps {\n  totals: FOrderTotalsFragment\n}\n\nconst StyledOrderDetailTotals = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.FC<IProps> = ({ totals }) => (\n  <StyledOrderDetailTotals>\n    <OrderWarePriceLine label={i18n.t`Tips`} price={totals.tip.value} />\n    <OrderWarePriceLine\n      label={i18n.t`Transport fee`}\n      price={totals.transportFee.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Covers price`}\n      price={totals.coverPrice.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Discount total`}\n      price={totals.totalDiscount.value * -1}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Total price`}\n      price={totals.totalSum.value}\n      highlight={true}\n    />\n  </StyledOrderDetailTotals>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  OrderOriginEnum,\n  QOrderDetailOrderOrigin,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  displayedId: string\n  orderOrigin: QOrderDetailOrderOrigin\n}\n\nconst orderColorAccordingOrigin = ({ orderOrigin }: IProps) => {\n  switch (orderOrigin.enum) {\n    case OrderOriginEnum.DameJidlo:\n      return Colors.orange\n    default:\n      return Colors.greyLight\n  }\n}\n\nconst OrderOriginLabel = styled.div`\n  display: inline-block;\n  background: ${orderColorAccordingOrigin};\n  border-radius: 0.7rem;\n  margin: 0 0 0 1rem;\n  padding: 0.1rem 0.8rem;\n`\n\nexport const OrderIdLine: React.FC<IProps> = ({ displayedId, orderOrigin }) => (\n  <IconLine icon=\"format_list_numbered\" labelMargin=\"0\">\n    {displayedId}\n    <OrderOriginLabel orderOrigin={orderOrigin} displayedId={displayedId}>\n      {orderOrigin.code}\n    </OrderOriginLabel>\n  </IconLine>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: ReadonlyArray<string>\n}\n\nexport const OrderRuleLines: React.FC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import styled from 'styled-components'\n\nimport { Colors } from '../../../styling'\n\nexport const OrderTimeLabel = styled.div`\n  margin-left: 1rem;\n  display: inline-block;\n  color: ${Colors.greyMiddle};\n`\n","import { Trans } from '@lingui/macro'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { QOrderDetailOrder } from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  order: QOrderDetailOrder\n}\n\nconst DelayedDeliveryTimeLabel = styled.span`\n  font-weight: bold;\n  color: ${Colors.orange};\n`\n\nconst DelayedOrderTimeLabel = styled(OrderTimeLabel)`\n  color: ${Colors.orange};\n`\n\nexport const OrderStats: React.FC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.delayedDeliveryTime) {\n    stats.push(\n      <div key=\"delayedDeliveryTime\">\n        <DelayedDeliveryTimeLabel>\n          {formatTimeWithoutTodayDate(order.delayedDeliveryTime)}\n        </DelayedDeliveryTimeLabel>\n        <DelayedOrderTimeLabel>\n          <Trans>Deliver at time</Trans>\n        </DelayedOrderTimeLabel>\n      </div>,\n    )\n  } else if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <OrderTimeLabel>\n          <Trans>Deliver on time</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <OrderTimeLabel>\n          <Trans>Driver</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  FOrderTimingOrderTiming,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  orderTiming: ReadonlyArray<FOrderTimingOrderTiming>\n}\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NewOrders]: i18nMark('Created'),\n  [OrderStateCategoryEnum.Preparing]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.OnWay]: i18nMark('On way'),\n  [OrderStateCategoryEnum.Finished]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.FC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <OrderTimeLabel>\n          {i18n._(labelMap[timing.orderStateCategory])}\n        </OrderTimeLabel>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.black};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.FC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React, { Fragment } from 'react'\n\nimport { QOrderDetailItems } from '../../../graph/generated'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: ReadonlyArray<QOrderDetailItems>\n}\n\nexport const OrderWareList: React.FC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: QOrderDetailItems) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors, Radiuses, Spacing } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {}\n\nconst StyledHamburgerMenu = styled.div`\n  position: relative;\n`\n\nconst PopupMenu = styled.div`\n  position: absolute;\n  bottom: 4rem;\n  left: 0;\n  background: ${Colors.white};\n  padding: ${Spacing.Small};\n  border: solid 1px ${Colors.greyLight};\n  border-radius: ${Radiuses.Card};\n  box-shadow: 2px 6px 21px -2px rgba(0, 0, 0, 0.75);\n  & div:not(:last-child) {\n    margin-bottom: ${Spacing.Middle};\n  }\n`\n\nexport const HamburgerMenu: React.FC<IProps> = ({ children }) => {\n  const [isOpened, setIsOpened] = React.useState(false)\n  return React.Children.count(children) ? (\n    <StyledHamburgerMenu>\n      <SizerButton>\n        <TouchButton\n          iconName=\"menu\"\n          disabled={children === null}\n          onClick={() => setIsOpened(!isOpened)}\n        />\n      </SizerButton>\n      {isOpened && <PopupMenu>{children}</PopupMenu>}\n    </StyledHamburgerMenu>\n  ) : null\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Sizer } from '../../../atoms/Sizer'\nimport { useMCancelOrder } from '../../../graph/generated'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderCancelButton: React.FC<IProps> = ({ orderId }) => {\n  const [cancelOrder] = useMCancelOrder()\n\n  return (\n    <Sizer width={7.375}>\n      <ConfirmButton\n        confirmNode={<Trans>Really cancel?</Trans>}\n        onConfirm={() => {\n          cancelOrder({ orderId })\n        }}\n      >\n        <Trans>Cancel order</Trans>\n      </ConfirmButton>\n    </Sizer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { useMOrderChangeToPickup } from '../../../graph/generated'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderDeliveryToPickup: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [changeToPickup] = useMOrderChangeToPickup()\n  if (!isDelivery) {\n    return null\n  }\n  return (\n    <CanMutate mutationName=\"updateOrderDeliveryToPickup\">\n      <ConfirmButton\n        confirmNode={<Trans>Really change?</Trans>}\n        onConfirm={() => {\n          changeToPickup({ orderId })\n        }}\n      >\n        <Trans>Change to pickup</Trans>\n      </ConfirmButton>\n    </CanMutate>\n  )\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { useMSetPriorityOrder } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  orderId: ID\n  isPriority: boolean\n}\n\nexport const OrderStarButton: React.FC<IProps> = ({ orderId, isPriority }) => {\n  const [setPriorityOrder] = useMSetPriorityOrder()\n\n  return (\n    <CanMutate mutationName=\"setPriorityOrder\">\n      <SizerButton>\n        <TouchButton\n          iconName=\"star\"\n          iconColor={isPriority ? Colors.orange : Colors.white}\n          onClick={() => setPriorityOrder({ orderId, isPriority: !isPriority })}\n        />\n        >\n      </SizerButton>\n    </CanMutate>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n}\n\nconst stateLabels = {\n  [OrderStateEnum.Accepted]: i18nMark('Accept order'),\n  [OrderStateEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateEnum.Finished]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.FC<IProps> = ({ orderId, nextState }) => {\n  const [updateOrderState] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        text={i18n._(stateLabels[nextState])}\n        color={\n          nextState === OrderStateEnum.ReadyToDeliver\n            ? Colors.greyMiddle\n            : Colors.green\n        }\n        width=\"7.375rem\"\n        onClick={() => {\n          updateOrderState({ orderId, state: nextState })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components/macro'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = FDriverFragment\n\ninterface IProps {\n  drivers: ReadonlyArray<TDriver>\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst StyledDriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst StyledValueContainer = styled.div`\n  margin: 0 0 0 0.7rem;\n  display: flex;\n  pointer-events: none;\n  width: 80%;\n`\n\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...textColor,\n    background: Colors.green,\n    height: Spacing.ButtonHeight + Spacing.DefaultSizeUnit,\n    border: 'none',\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n  clearIndicator: base => ({\n    ...base,\n    color: Colors.white,\n  }),\n  indicatorSeparator: base => ({\n    ...base,\n    display: 'none',\n  }),\n}\n\nexport const OrderDriverSelect: React.FC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers as TDriver[]}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver => {\n      if (driver === null) {\n        onClear()\n      } else {\n        onSelect(driver as TDriver)\n      }\n    }}\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <StyledValueContainer>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </StyledValueContainer>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <StyledDriverName>{`${driver.firstName} ${\n        driver.lastName\n      }`}</StyledDriverName>\n    )}\n    theme={theme => ({\n      ...theme,\n      blurInputOnSelect: false,\n      colors: {\n        ...theme.colors,\n        primary: Colors.greyMiddle,\n        primary25: Colors.greyLight,\n      },\n    })}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useMOrderState,\n  useMRemoveOrderDriver,\n  useMSelectOrderDriver,\n  useQOrderDrivers,\n} from '../../../graph/generated'\nimport { useCanQuery } from '../../../hooks/useAccessGuard'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n}\n\nexport const OrderStateDeliver: React.FC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n}) => {\n  const canRead = useCanQuery('drivers')\n\n  const [deliverOrder] = useMOrderState()\n  const [selectDriver] = useMSelectOrderDriver()\n  const [removeDriver] = useMRemoveOrderDriver()\n\n  const { data, loading, refetch } = useQOrderDrivers(\n    {\n      branchId: [branchId],\n      orderId,\n    },\n    {\n      skip: !canRead,\n    },\n  )\n  return (\n    <CanMutate mutationName=\"createUserDeliveringOrder\">\n      <OrderDriverSelect\n        drivers={loading || !canRead ? [] : data.drivers}\n        selectedDriver={\n          loading ? null : data.order.driver && data.order.driver.user\n        }\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          const orderDriver = data.order.driver\n          if (orderDriver) {\n            removeDriver({ orderDriverId: orderDriver.id })\n          }\n        }}\n        onSelect={driver => {\n          selectDriver({ orderId, driverId: driver.id })\n          if (orderStateCategory !== OrderStateCategoryEnum.OnWay) {\n            deliverOrder({ orderId, state: OrderStateEnum.OnWay })\n          }\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React, { Children } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst StyledOrderStateFlowContainer = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n`\n\nconst StyledControl = styled.div`\n  margin: 0 0 0 ${Spacing.Middle};\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.FC<IProps> = ({ children }) => (\n  <StyledOrderStateFlowContainer>\n    {Children.map(children, (child, idx) => (\n      <StyledControl key={idx}>{child}</StyledControl>\n    ))}\n  </StyledOrderStateFlowContainer>\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  DeliveryTypeEnum,\n  useMOrderTimeNotification,\n} from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { DeliveryTimeDialog } from '../../../molecules/DeliveryTimeDialog'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderStateTimeNotification: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [sendTimeNotification] = useMOrderTimeNotification()\n\n  return (\n    <CanMutate mutationName=\"orderNotifyCustomer\">\n      <DeliveryTimeDialog\n        title={\n          isDelivery\n            ? i18n.t`Send expected time of delivery to customer (in minutes)`\n            : i18n.t`Send expected time of pickup to customer (in minutes)`\n        }\n        deliveryType={\n          isDelivery ? DeliveryTypeEnum.Messenger : DeliveryTypeEnum.Pickup\n        }\n        onConfirm={minutes => {\n          sendTimeNotification({ orderId, minutes })\n        }}\n      >\n        {({ openDialog }) => (\n          <TouchButton iconName=\"schedule\" onClick={openDialog} />\n        )}\n      </DeliveryTimeDialog>\n    </CanMutate>\n  )\n}\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useQOrderState,\n} from '../../../graph/generated'\nimport { HamburgerMenu } from '../../../molecules/HamburgerMenu'\nimport { OrderCancelButton } from '../molecules/OrderCancelButton'\nimport { OrderDeliveryToPickup } from '../molecules/OrderDeliveryToPickup'\nimport { OrderStarButton } from '../molecules/OrderStarButton'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  orderStateCategory: OrderStateCategoryEnum\n  canCancel: boolean\n  canDeliver: boolean\n  isDelivery: boolean\n  isPriority: boolean\n}\n\nconst HamburgerMenuAtLeft: React.FC = ({ children }) => {\n  return (\n    <CardDock position=\"BottomLeft\">\n      <HamburgerMenu>{children}</HamburgerMenu>\n    </CardDock>\n  )\n}\n\nconst OrderStateNewOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n      <OrderDeliveryToPickup {...props} />\n    </HamburgerMenuAtLeft>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Accepted} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n      <OrderDeliveryToPickup {...props} />\n    </HamburgerMenuAtLeft>\n\n    <OrderStarButton {...props} />\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver && (\n      <OrderStateButton nextState={OrderStateEnum.ReadyToDeliver} {...props} />\n    )}\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateReadyToDeliverOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n    <OrderStarButton {...props} />\n    {props.isDelivery ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateFinishedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.FC<IProps> = ({ orderId, branchId }) => {\n  const { data, loading } = useQOrderState({\n    orderId,\n    branchId,\n  })\n\n  if (loading) {\n    return null\n  }\n\n  const {\n    order,\n    companyBranch: { allowedCategories },\n  } = data\n\n  const isDelivery =\n    order.deliveryType !== null &&\n    order.deliveryType.enum !== DeliveryTypeEnum.Pickup\n\n  const canDeliver =\n    isDelivery &&\n    (allowedCategories.includes(OrderStateCategoryEnum.OnWay) ||\n      allowedCategories.includes(OrderStateCategoryEnum.ReadyToDeliver))\n\n  const canCancel = order.isCancelable\n\n  const isPriority = order.isPriority\n\n  const stateProps: IStateProps = {\n    orderId,\n    branchId,\n    orderStateCategory: order.orderStateCategory,\n    canCancel,\n    canDeliver,\n    isDelivery,\n    isPriority,\n  }\n  switch (order.orderStateCategory) {\n    case OrderStateCategoryEnum.NewOrders:\n      return <OrderStateNewOrder {...stateProps} />\n    case OrderStateCategoryEnum.Preparing:\n      return <OrderStateAcceptedOrder {...stateProps} />\n    case OrderStateCategoryEnum.ReadyToDeliver:\n      return <OrderStateReadyToDeliverOrder {...stateProps} />\n    case OrderStateCategoryEnum.OnWay:\n      return <OrderStateOnWayOrder {...stateProps} />\n    case OrderStateCategoryEnum.Finished:\n      return <OrderStateFinishedOrder {...stateProps} />\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { Loading } from '../../../atoms/Loading'\nimport { useQOrderDetail } from '../../../graph/generated'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderIdLine } from '../molecules/OrderIdLine'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IProps {\n  orderId: string\n}\n\nconst StyledOrderDetail = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail = React.memo<IProps>(({ orderId }) => {\n  const { data, loading } = useQOrderDetail({\n    orderId,\n  })\n\n  if (loading) {\n    return <Loading />\n  }\n\n  const { order } = data\n\n  return (\n    <>\n      <StyledOrderDetail>\n        <HorizontalSeparator />\n        <OrderWareList orderWares={order.items} />\n        <OrderDetailTotals totals={order} />\n        <OrderRuleLines rules={order.allAppliedRules}>\n          <OrderCountLine\n            current={order.customerOrdersCountCurrent}\n            total={order.customerOrdersCountTotal}\n          />\n        </OrderRuleLines>\n        <ContactLines\n          phones={order.customer.phones}\n          emails={order.customer.emails}\n        />\n        <NoteLine note={order.note} previousNote={order.previousNote} />\n        <HorizontalSeparator />\n        <OrderIdLine displayedId={order.id} orderOrigin={order.orderOrigin} />\n        <HorizontalSeparator />\n        <OrderTimeLine orderTiming={order.orderTiming} />\n        <OrderStats order={order} />\n      </StyledOrderDetail>\n      <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n    </>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FOrderTickerFragment } from '../../../graph/generated'\nimport { Colors, Radiuses } from '../../../styling'\nimport { useOrderListModel } from '../hooks/useOrderListModel'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ninterface IProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onToggleDetail?(): void\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox = observer<IProps>(\n  ({ order, showBranch, isCancelled, onToggleDetail }) => {\n    const orderListModel = useOrderListModel()\n\n    const orderId = order.id\n\n    const onClick = React.useCallback(() => {\n      orderListModel.toggleOrderDetail(orderId)\n      if (onToggleDetail) {\n        onToggleDetail()\n      }\n    }, [orderId])\n\n    const isDetailOpen = orderListModel.isOrderDetailOpen(orderId)\n\n    return (\n      <OrderBoxStyled id={`order-${orderId}`}>\n        <OrderTicker\n          order={order}\n          showBranch={showBranch}\n          isCancelled={isCancelled}\n          onClick={onClick}\n        />\n        {isDetailOpen && <OrderDetail orderId={orderId} />}\n      </OrderBoxStyled>\n    )\n  },\n)\n","import { i18n } from '@lingui/core'\nimport { DatePickerInlineProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends DatePickerInlineProps {}\n\nexport const InputDate: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <InlineDatePicker\n        format=\"ll\"\n        maxDateMessage={i18n.t`Date is too much in the future`}\n        minDateMessage={i18n.t`Date is too much in the past`}\n        {...props}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { DatePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { InputDate } from './InputDate'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <Field\n      field={field}\n      render={fieldApi => (\n        <InputDate\n          value={fieldApi.value}\n          onChange={value => fieldApi.setValue(value)}\n          onOpen={() => fieldApi.setTouched(true)}\n          {...pickerProps}\n        />\n      )}\n    />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const ClosureHistoryFilter = () => {\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateFrom\"\n          label={<Trans>From date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateTo\"\n          label={<Trans>To date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Trans>Show history for branch</Trans>\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import { subDays } from 'date-fns'\nimport React, { createContext, useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QClosureHistoryDocument,\n  QClosureHistoryHistory,\n  QClosureHistoryQuery,\n  QClosureHistoryVariables,\n} from '../../../graph/generated'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\n\nexport type TReports = QClosureHistoryHistory\n\nconst context = createContext<IQueryResult<QClosureHistoryQuery> | null>(null)\n\nexport const useClosureHistory = () => useContext(context)!\n\nexport const ClosureHistoryLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery<\n    QClosureHistoryQuery,\n    QClosureHistoryVariables\n  >(QClosureHistoryDocument)\n\n  return (\n    <Form\n      onSubmit={(formValues: { dateFrom: Date; dateTo: Date }) => {\n        if (statistics.closureBranch) {\n          execute({\n            branchId: statistics.closureBranch,\n            dateFrom: formatDateISO(formValues.dateFrom),\n            dateTo: formatDateISO(formValues.dateTo),\n          })\n        }\n      }}\n      defaultValues={{ dateFrom: subDays(new Date(), 1), dateTo: new Date() }}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading, wasExecuted } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (!wasExecuted) {\n    return null\n  }\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (data && data.history.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data &&\n        data.history.map(report => (\n          <FlexRow key={report.id}>\n            <FlexColumn fixedWidth={true}>\n              <RelativeLink to={`../${report.id}`}>\n                <SizerButton>\n                  <TouchButton iconName=\"mode_edit\" />\n                </SizerButton>\n              </RelativeLink>\n            </FlexColumn>\n            <FlexColumn widthGrowIndex={1}>\n              {`[${report.reportSequence}] ${formatDateISO(\n                report.reportDatetime,\n              )}`}\n            </FlexColumn>\n          </FlexRow>\n        ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  useAutorunWhenSingleBranch(branch => {\n    statistics.setClosureBranch(branch.id)\n  })\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n        hideWhenSingleBranch={true}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryFilter } from '../molecules/ClosureHistoryFilter'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.FC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <ClosureHistoryFilter />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../app/Responsive'\n\ninterface IProps {\n  text: string\n  scrollable?: boolean\n}\n\nconst StyledMonospaceOutput = styled.p`\n  color: white;\n  font-family: Menlo, 'Lucida Console', monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 0;\n  line-height: 1.8rem;\n  ${mediaMobile`\n    width: max-content;\n  `};\n`\n\nexport const StyledScrollableContainer = styled.div`\n  padding: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n  width: 100%;\n\n  ${mediaMobile`\n  padding: 0;\n  `};\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nconst renderContent = (text: string) => (\n  <StyledMonospaceOutput>{formatOutput(text)}</StyledMonospaceOutput>\n)\n\nexport const MonospaceOutput: React.FC<IProps> = ({\n  text,\n  scrollable = false,\n}) =>\n  scrollable ? (\n    <StyledScrollableContainer>{renderContent(text)}</StyledScrollableContainer>\n  ) : (\n    renderContent(text)\n  )\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQClosureReport } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent = observer<IProps>(\n  ({ reportId = '' }) => {\n    const { statistics } = useRoot()\n    const skip = !statistics.closureBranch\n    const { data, loading } = useQClosureReport(\n      {\n        branchId: statistics.closureBranch!,\n        reportId,\n        showReport: Boolean(reportId),\n      },\n      { skip },\n    )\n\n    if (skip) {\n      return <MonospaceOutput text={i18n.t`Select a branch`} />\n    }\n\n    if (loading) {\n      return <MonospaceOutput text={i18n.t`Computing`} />\n    }\n\n    return (\n      <MonospaceOutput\n        scrollable={true}\n        text={reportId ? data.report!.plainData : data.lastReport.plainData}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick(): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.FC<IProps> = ({\n  onClick,\n  disabled,\n}) => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <Sizer width={12}>\n      <ConfirmButton\n        onConfirm={onClick}\n        initialColor={Colors.green}\n        confirmNode={<Trans>Are you sure?</Trans>}\n        confirmColor={Colors.orange}\n        disabled={disabled}\n      >\n        <Trans>Create closure</Trans>\n      </ConfirmButton>\n    </Sizer>\n  </CanMutate>\n)\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useMFinancialReportCreate } from '../../../graph/generated'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const [createClosure] = useMFinancialReportCreate()\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      branchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <MarginBox margin={`${Spacing.Middle} 0 0 0`}>\n      <FlexRowSingle>\n        {showCurrent ? (\n          <ClosureCurrentButton />\n        ) : (\n          <ClosureSubmitButton\n            onClick={onSubmit}\n            disabled={!statistics.closureBranch}\n          />\n        )}\n        <ClosureHistoryButton />\n      </FlexRowSingle>\n    </MarginBox>\n  ))\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsContent } from '../molecules/ClosureStatisticsContent'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.FC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import { isoDate } from '@speedlo/graphql'\nimport React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { InputStatisticCreate } from '../../../graph/types'\n\nconst context = React.createContext<InputStatisticCreate | undefined>(undefined)\n\nexport const useStatsFilterCurrent = () => React.useContext(context)\n\nexport function useStatsFilter() {\n  const { statistics } = useRoot()\n  const [filter, setFilter] = React.useState<InputStatisticCreate | undefined>()\n\n  const executeFilter = () => {\n    setFilter({\n      branches: [...statistics.branchesFilter],\n      drivers: [...statistics.drivers],\n      dateTimeFrom: isoDate(statistics.dateTimeFrom),\n      dateTimeTo: isoDate(statistics.dateTimeTo),\n    })\n  }\n\n  const defaultValues = {\n    dateTimeFrom: statistics.dateTimeFrom,\n    dateTimeTo: statistics.dateTimeTo,\n  }\n\n  const renderForm = (children: ReactNode | ReactNode[]) => {\n    return (\n      <Form\n        onSubmit={executeFilter}\n        onChange={({ values }) => statistics.updateFilter(values)}\n        defaultValues={defaultValues}\n      >\n        <context.Provider value={filter}>{children}</context.Provider>\n      </Form>\n    )\n  }\n\n  return {\n    filter,\n    executeFilter,\n    renderForm,\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { InputStatisticCreate, useQStatsDaily } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nconst StatsDisplay: React.FC<{ plain: string }> = ({ plain, children }) => {\n  return (\n    <>\n      <Headline light={true}>{children}</Headline>\n      <MonospaceOutput text={plain} scrollable={true} />\n    </>\n  )\n}\n\nexport const DailyStatisticsContent: React.FC = () => {\n  const filter = useStatsFilterCurrent()\n  const getRelevantFilter = (): InputStatisticCreate => {\n    if (!filter) {\n      return { branches: [] }\n    }\n    return {\n      branches: filter.branches,\n      dateTimeFrom: filter.dateTimeFrom,\n      dateTimeTo: filter.dateTimeTo,\n    }\n  }\n  const { data, loading } = useQStatsDaily(\n    {\n      filter: getRelevantFilter(),\n    },\n    { skip: !filter },\n  )\n\n  if (!filter) {\n    return null\n  }\n\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n\n  const { stats } = data\n  return (\n    <>\n      <StatsDisplay plain={stats.daily}>\n        <Trans>Daily statistics</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.category}>\n        <Trans>By category</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.delivery}>\n        <Trans>By type</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.drivers}>\n        <Trans>By driver</Trans>\n      </StatsDisplay>\n    </>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = () => {\n  const { statistics } = useRoot()\n  useAutorunWhenSingleBranch(branch => {\n    statistics.setBranchFilter([branch.id])\n  })\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(statistics.branches)}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n      hideWhenSingleBranch={true}\n    />\n  ))\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDateTime } from '../../../atoms/FormInputDateTime'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nconst StyledFlexRowSingle = styled(FlexRowSingle)`\n  flex-wrap: wrap;\n`\n\nexport const StatisticsFilter = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <StyledFlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeFrom\"\n          label={<Trans>From</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeTo\"\n          label={<Trans>To</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Plural\n            value={statistics.branchesFilter.length}\n            one=\"Show for one branch\"\n            few=\"Show for # branches\"\n            other=\"Show for # branches\"\n          />\n        </FormSubmit>\n      </FlexColumn>\n    </StyledFlexRowSingle>\n  ))\n}\n","import React from 'react'\n\nimport { useStatsFilter } from '../hooks/useStatsFilter'\n\ninterface IProps {\n  children: ReactNode | ReactNode[]\n}\n\nexport const DailyStatisticsLoader: React.FC<IProps> = ({ children }) => {\n  const { renderForm } = useStatsFilter()\n  return renderForm(children)\n}\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { DailyStatisticsContent } from '../molecules/DailyStatisticsContent'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  IndexRange,\n  InfiniteLoader,\n  List,\n} from 'react-virtualized'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderStateCategoryEnum,\n  QStatsOrdersListDocument,\n  QStatsOrdersListList,\n  QStatsOrdersListQuery,\n  QStatsOrdersListVariables,\n  useQStatsOrdersCounts,\n} from '../../../graph/generated'\nimport { useExecutableQuery } from '../../../hooks/useExecutableQuery'\nimport { OrderBox } from '../../order/atoms/OrderBox'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nexport const OrdersStatisticsList: React.FC = () => {\n  const { statistics } = useRoot()\n  const filter = useStatsFilterCurrent()\n\n  const orders = React.useRef(new Map<number, QStatsOrdersListList>())\n  const loaderRef = React.useRef<InfiniteLoader | null>(null)\n  const measureCache = React.useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: 55,\n        minHeight: 55,\n      }),\n    [],\n  )\n\n  const { data: countsData, loading: countsLoading } = useQStatsOrdersCounts(\n    { filter: filter! },\n    { skip: !filter },\n  )\n\n  React.useEffect(() => {\n    orders.current.clear()\n    measureCache.clearAll()\n    if (loaderRef.current) {\n      loaderRef.current.resetLoadMoreRowsCache(true)\n    }\n  }, [JSON.stringify(filter)])\n\n  const { execute: executeList } = useExecutableQuery<\n    QStatsOrdersListQuery,\n    QStatsOrdersListVariables\n  >(QStatsOrdersListDocument)\n\n  const queryMoreOrders = React.useCallback(\n    async ({ startIndex, stopIndex }: IndexRange) => {\n      if (filter) {\n        const result = await executeList({\n          filter,\n          pagination: {\n            fromIndex: startIndex,\n            toIndex: stopIndex,\n          },\n        })\n\n        if (result.data) {\n          const list = [...result.data.stats.orders.list]\n          for (let index = startIndex; index <= stopIndex; index++) {\n            const order = list.shift()\n            if (order) {\n              orders.current.set(index, order)\n            }\n          }\n        }\n      }\n    },\n    [filter],\n  )\n\n  const isRowLoaded = React.useCallback(\n    ({ index }) => orders.current.get(index) !== undefined,\n    [],\n  )\n\n  const rowRenderer = React.useCallback(({ index, key, style, parent }) => {\n    const order = orders.current.get(index)\n    if (order === undefined) {\n      return (\n        <div style={style} key={key}>\n          ...\n        </div>\n      )\n    }\n    return (\n      <CellMeasurer\n        key={key}\n        columnIndex={0}\n        rowIndex={index}\n        cache={measureCache}\n        parent={parent}\n      >\n        {({ measure }) => (\n          <div style={style}>\n            <OrderBox\n              order={order}\n              showBranch={statistics.branchesFilter.length > 1}\n              isCancelled={\n                order.orderStateCategory === OrderStateCategoryEnum.Cancel\n              }\n              onToggleDetail={() => {\n                setTimeout(measure, 500)\n              }}\n            />\n          </div>\n        )}\n      </CellMeasurer>\n    )\n  }, [])\n\n  if (!filter) {\n    return null\n  }\n\n  if (countsLoading) {\n    return <Loading />\n  }\n\n  const { finished, cancelled } = countsData.stats.counts\n  const totalCount = finished + cancelled\n\n  if (totalCount === 0) {\n    return <Trans>No orders</Trans>\n  }\n\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <InfiniteLoader\n          rowCount={totalCount}\n          isRowLoaded={isRowLoaded}\n          loadMoreRows={queryMoreOrders}\n          ref={loaderRef}\n        >\n          {({ onRowsRendered, registerChild }) => (\n            <List\n              ref={registerChild}\n              onRowsRendered={onRowsRendered}\n              rowHeight={measureCache.rowHeight}\n              deferredMeasurementCache={measureCache}\n              rowCount={totalCount}\n              width={width}\n              height={height}\n              rowRenderer={rowRenderer}\n            />\n          )}\n        </InfiniteLoader>\n      )}\n    </AutoSizer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile } from '../../../app/Responsive'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { Price } from '../../../atoms/Price'\nimport { useQStatsOrders } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nconst StyledStatPanel = styled.div`\n  display: inline-block;\n  ${mediaDesktop`\n  margin: 1.4rem 4rem 0 0.5rem;\n  `};\n  ${mediaMobile`\n    margin: 0rem 1rem 0 1rem;\n  `};\n`\n\nconst StyledStatLabel = styled.h1`\n  font-weight: normal;\n  margin: 0;\n  ${mediaDesktop`\n  font-size: 1.2rem;\n  `};\n  ${mediaMobile`\n    font-size: 0.9rem;\n  `};\n`\n\nconst StyledStatValue = styled.h2`\n  font-weight: normal;\n  margin: 0;\n  ${mediaDesktop`\n    font-size: 3.3rem;\n  `};\n  ${mediaMobile`\n    font-size: 1.7rem;\n  `};\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const filter = useStatsFilterCurrent()\n  const { data, loading } = useQStatsOrders(\n    { filter: filter! },\n    { skip: !filter },\n  )\n\n  if (!filter) {\n    return null\n  }\n\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n\n  const stats = data.stats.finishedOrders\n\n  return (\n    <>\n      <StyledStatPanel>\n        <StyledStatLabel>\n          <Trans>Total turnover</Trans>\n        </StyledStatLabel>\n        <StyledStatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StyledStatValue>\n      </StyledStatPanel>\n      <StyledStatPanel>\n        <StyledStatLabel>\n          <Trans>Online payments</Trans>\n        </StyledStatLabel>\n        <StyledStatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StyledStatValue>\n      </StyledStatPanel>\n      <StyledStatPanel>\n        <StyledStatLabel>\n          <Trans>Orders count</Trans>\n        </StyledStatLabel>\n        <StyledStatValue>\n          {stats.finishedCount + stats.cancelledCount}\n        </StyledStatValue>\n      </StyledStatPanel>\n      <StyledStatPanel>\n        <StyledStatLabel>\n          <Trans>Total commissions</Trans>\n        </StyledStatLabel>\n        <StyledStatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StyledStatValue>\n      </StyledStatPanel>\n\n      <MonospaceOutput\n        text={data.stats.orderStatisticsPlain}\n        scrollable={true}\n      />\n    </>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment, useQAllDrivers } from '../../../graph/generated'\nimport { formatFullName } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ntype TDriver = FDriverFragment\n\nexport const StatisticsDriversFilter = observer(() => {\n  const { statistics } = useRoot()\n  const { data, loading } = useQAllDrivers({\n    branches: statistics.branchesFilter,\n  })\n  React.useEffect(\n    () => {\n      if (!loading) {\n        statistics.setDriversFilter(\n          RM.intersection(statistics.drivers, data.drivers.map(RM.prop('id'))),\n        )\n      }\n    },\n    [loading],\n  )\n  return (\n    <SelectControl<FDriverFragment>\n      isMulti={true}\n      isClearable={true}\n      isSearchable={true}\n      filterOption={(option, rawInput) =>\n        rawInput.length === 0 ||\n        formatFullName(option.data)\n          .toLocaleLowerCase()\n          .includes(rawInput.toLocaleLowerCase())\n      }\n      placeholder={i18n.t`Filter by drivers`}\n      isLoading={loading}\n      options={loading ? [] : [...data.drivers]}\n      value={\n        loading\n          ? []\n          : data.drivers.filter(driver =>\n              statistics.drivers.includes(driver.id),\n            )\n      }\n      formatOptionLabel={formatFullName}\n      getOptionValue={RM.prop('id')}\n      onChange={value => {\n        if (!value) {\n          statistics.setDriversFilter([])\n        } else {\n          statistics.setDriversFilter((value as TDriver[]).map(RM.prop('id')))\n        }\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useStatsFilter } from '../hooks/useStatsFilter'\n\ninterface IProps {\n  autoFilter?: string\n  children: ReactNode | ReactNode[]\n}\n\nexport const OrdersStatisticsLoader: React.FC<IProps> = ({\n  children,\n  autoFilter,\n}) => {\n  const { executeFilter, renderForm } = useStatsFilter()\n\n  React.useEffect(\n    () => {\n      if (autoFilter) {\n        executeFilter()\n      }\n    },\n    [autoFilter],\n  )\n\n  return renderForm(children)\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { AutoHeight } from '../../../atoms/FlexAutoHeight'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { OrdersStatisticsList } from '../molecules/OrdersStatisticsList'\nimport { OrdersStatisticsSummary } from '../molecules/OrdersStatisticsSummary'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsDriversFilter } from '../molecules/StatisticsDriversFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\n\ninterface IProps extends RouteComponentProps<{ filter?: string }> {}\n\nexport const OrdersStatisticsPage: React.FC<IProps> = ({ match }) => {\n  const { statistics } = useRoot()\n  if (match.params.filter === 'today') {\n    statistics.setTodayOrdersFilter()\n  }\n  return (\n    <OrdersStatisticsLoader autoFilter={match.params.filter}>\n      <PageLayoutResponsive\n        pageTitle={i18n.t`Orders statistics`}\n        showSoundControl={false}\n        useBackButton={true}\n      >\n        <PageLayoutGridItem gridColumn=\"1 / span 9\" gridRow=\"1\">\n          <Card>\n            <StatisticsBranchFilter />\n            <StatisticsDriversFilter />\n            <StatisticsFilter />\n          </Card>\n        </PageLayoutGridItem>\n\n        <PageLayoutGridItem gridColumn=\"1 / span 9\" gridRow=\"2\">\n          <OrdersStatisticsSummary />\n        </PageLayoutGridItem>\n\n        <PageLayoutFullHeightItem\n          withScrollArea={false}\n          row={1}\n          column={9}\n          widthInColumns={7}\n          forcePercentHeightInMobile={90}\n        >\n          <AutoHeight>\n            <OrdersStatisticsList />\n          </AutoHeight>\n        </PageLayoutFullHeightItem>\n      </PageLayoutResponsive>\n    </OrdersStatisticsLoader>\n  )\n}\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nexport const OverviewPage: React.FC<IProps> = props => (\n  <PageLayoutResponsive isForIconDashboard={true}>\n    <PageLayoutItem\n      gridColumn=\"1 / span 2\"\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      gridColumn=\"3 / span 2\"\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      gridColumn=\"5 / span 2\"\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayoutResponsive>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders/:filter?`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n"],"sourceRoot":""}