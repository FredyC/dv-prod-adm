{"version":3,"sources":["../node_modules/babel-runtime/helpers/defineProperty.js","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","hooks/useSnackBar.ts","hooks/useRouterContext.ts","atoms/ScrollArea.tsx","atoms/CardListTitle.tsx","segments/zones/hooks/useZoneRouteControl.tsx","segments/zones/organisms/ZoneListLoader.tsx","atoms/DragHandle.tsx","atoms/BaseMap.tsx","atoms/FormInputSelect.tsx","segments/zones/hooks/useZoneModel.ts","segments/zones/hooks/useZoneId.ts","segments/zones/atoms/ZonePriceInput.tsx","segments/zones/routes/ZoneMenuRoutes.tsx","segments/zones/pages/ZonePageLayout.tsx","segments/zones/organisms/ZoneFormPanel.tsx","atoms/ConfirmDialog.tsx","segments/zones/molecules/ZoneFormContent.tsx","segments/zones/molecules/ZoneColorSelector.tsx","segments/zones/molecules/ZoneFormPriceRange.tsx","segments/zones/atoms/ZonePlaceholderInput.tsx","segments/zones/molecules/ZoneFormControls.tsx","segments/zones/organisms/ZoneListLoader.graphql.ts","segments/zones/organisms/ZoneMapControl.tsx","molecules/MapCompanyBranchMarker.tsx","segments/zones/atoms/ZoneMapArea.tsx","segments/zones/atoms/ZoneMapEditableArea.tsx","segments/zones/organisms/ZoneMenuPanel.tsx","segments/zones/molecules/CreateZoneButton.tsx","segments/zones/organisms/ZoneListControl.tsx","segments/zones/molecules/ZoneList.tsx","segments/zones/atoms/ZoneListCard.tsx","segments/zones/organisms/ZoneFilter.tsx","segments/zones/molecules/ZoneFIlterBranch.tsx","segments/zones/molecules/ZoneFilterBrand.tsx"],"names":["exports","__esModule","obj","_defineProperty","__webpack_require__","_defineProperty2","default","key","value","enumerable","configurable","writable","_react","_interopRequireDefault","_styledComponents","_ScrollArea","_styling","FullHeightDiv","div","withConfig","displayName","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","widthComputed","column","leftPos","row","topPos","FullHeightDivStyled","children","withScrollArea","scrollAreaId","createElement","ScrollArea","id","FlexRowSingle","justify","VerticalGap","size","sizeUnit","enqueueSnackbar","useContext","_SnackbarContext","SnackbarContextNext","enqueueSuccess","useCallback","errorMessage","successVariant","enqueueError","errorVariant","enqueueWarning","warningVariant","enqueueInfo","infoVariant","EVariant","variant","success","error","warning","info","Router","__RouterContext","_interopRequireWildcard","CardListTitle","h2","Colors","greyLight","user","zone","zoneModel","_RootProvider","useRoot","history","_useRouterContext","getRouteToZone","zoneId","[object Object]","editZoneId","map","panToZone","canQuery","push","_mobxReactLite","_ramda","_ZoneListLoader","ZoneListContext","createContext","ZoneListLoader","observer","branches","filter","branchFilterPredicate","length","Provider","QueryZones","variables","branchesId","RM","prop","renderLoading","render","zones","loading","_reactSortableHoc","_Icon","DragHandleContainerStyled","DragHandle","SortableHandle","Icon","iconName","_mobxReact","_reactGoogleMaps","MapContainerStyled","Radiuses","Card","BaseMapContainer","withGoogleMap","Fragment","model","options","streetViewControl","mapTypeControl","fullscreenControl","containerElement","mapElement","style","height","Observer","GoogleMap","ref","setMapRef","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","_reactForm","_i18n","_SelectControl","FormInputSelect","Component","this","validate","isRequired","i18n","_","0","validatioName","fieldApi","isMulti","getOptionValue","defaultValue","selection","isSelected","Array","isArray","item","includes","F","onChange","selectedOptions","setValue","find","option","_a","field","fieldIsPure","__rest","Field","pure","SelectControl","_extends","getControlProps","onFocus","setTouched","styles","control","base","Boolean","Object","assign","borderColor","defaultProps","getItemId","match","params","_FormInputTextBox","LabelStyled","FormInputTextBoxStyled","FormInputTextBox","FormInputTextBoxDeliveryStyled","blue","DeliveryContainer","PriceRangeContainer","VerticalLine","validatePrice","trim","Number","isNaN","parseFloat","ZonePriceInput","forwardRef","label","isDeliveryPrice","autoFocus","_reactRouter","_NotFoundPage","_ZonePageLayout","_useZoneRouteControl","ZoneMenuRoutes","useZoneRouteControl","Switch","Route","path","component","ZonePageLayout","NotFoundPage","_PageLayout","_PageLayoutFullHeightItem","_ZoneFormPanel","_ZoneMapControl","_ZoneMenuPanel","isEditing","PageLayout","pageTitle","useBackButton","backRoute","PageLayoutFullHeightItem","ZoneFormPanel","ZoneMenuPanel","ZoneMapControl","_mobx","_reactGoodbye","_CanMutate","_Card","_ConfirmDialog","_Loading","_logger","_useEffectOnce","_useSnackBar","_TouchButtonDelete","_useZoneId","_ZoneFormContent","_ZoneFormControls","DeleteButtonContainer","ButtonHeight","Middle","useZoneId","zoneList","useZoneList","routeToZoneList","isModified","setModified","useState","formApiRef","useRef","useSnackBar","onSave","__awaiter","current","submitForm","onDelete","destroyZone","useDisposable","reaction","currentZonePoints","useEffectOnce","propEq","Form","defaultValues","formState","logDebug","values","onSubmit","saveZone","formApi","padding","ZoneFormControls","isSubmitting","submitting","onGoBack","ZoneFormContent","CanMutate","mutationName","TouchButtonDelete","disabled","confirmText","name","when","isShow","handleOk","handleCancel","ConfirmDialog","onConfirm","onCancel","Loading","text","useEffect","window","confirm","_react2","_FormInputCheckbox","_Headline","_IconLine","_form","_ZonePriceInput","_ZoneColorSelector","_ZoneFormPriceRange","ZoneFormContentStyled","black","DescriptionUnderHeadline","greyDark","IconLine","icon","validateIsRequired","ZoneColorSelector","FormInputCheckbox","toLocaleLowerCase","Trans","components","Headline","margin","NestedField","ZoneFormPriceRange","_FormInputSelect","_buildQuery","_Zones","ColorOption","color","white","QueryZoneColors","buildQuery","ZoneColorsQuery","zoneColors","width","menu","maxWidth","makeStyles","head","formatOptionLabel","zoneColor","code","_TouchButton","_ZonePlaceholderInput","AddButtonContainer","RemoveButtonContainer","idx","ZonePlaceholderInput","display","removeValue","FormApi","TouchButton","onClick","addValue","price","toPrice","FormInputForPlaceholderStyled","FormInputStyled","Container","placeholder","_FlexColumn","_FlexRowSingle","FlexColumn","widthGrowIndex","greyMiddle","green","_graphqlTag","ZonesQuery","ZoneFragment","_BaseMap","_MapCompanyBranchMarker","_ZoneMapArea","_ZoneMapEditableArea","_useZoneModel","useZoneModel","routeToZoneEdit","isActive","companyBranchId","hasBranchFilter","branchFilterId","renderBranchLabel","branch","MapCompanyBranchMarker","BaseMap","areaProps","points","geoPolygon","priority","companyBranch","enabled","ZoneMapEditableArea","updateZonePoints","onClear","clearZonePoints","ZoneMapArea","_gps","BranchNameStyled","css","OverlayView","getPixelPositionOffset","x","y","mapPaneName","MARKER_LAYER","position","gpsToLatLng","gps","onAreaFocus","e","stop","Polygon","defaultPath","fillColor","fillOpacity","strokeWeight","zIndex","editable","draggable","onDblClick","polygonRef","onAreaChange","getPath","getArray","latLngToGps","listeners","addListener","forEach","lis","remove","onDragEnd","_CreateZoneButton","_ZoneListControl","_ZoneFilter","ZoneMenuContainer","FixedHeaderContainer","ScrollAreaContainer","ZoneFilter","CreateZoneButton","ZoneListControl","createZone","turquoise","textNextToIcon","_reactContentLoader","_CardListTitle","_ZoneList","BulletList","primaryOpacity","secondaryOpacity","brand","ZoneList","zoneFilterPredicate","root","filterBranches","onZoneEdit","R","_ZoneListCard","ZoneListContainerStyled","SortableContainer","sortZones","sortWith","ascend","descend","groupByBranch","groupBy","renderZone","ZoneListCard","index","collection","onEdit","output","onSortEnd","sorted","oldIndex","newIndex","changeZonePriority","grouped","mapObjIndexed","branchZones","renderBranch","useDragHandle","lockAxis","_DragHandle","ZoneNameStyled","ZoneDescriptionStyled","ZoneFlexRowStyled","SortableElement","fixedWidth","_VerticalGap","_ZoneFIlterBranch","_ZoneFilterBrand","getBrandBranches","pathEq","autorun","setBranchFilter","singleBrand","brands","setBrandFilter","ZoneFilterBrand","selectedBrand","onSelection","clearBrandFilter","ZoneFilterBranch","selectedBranch","clearBranchFilter","_CompanyBranchDropdown","CompanyBranchDropdown","onSingleSelection","isClearable","getOptionLabel","isSearchable"],"mappings":"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","file":"static/js/54.12cd4bb3.chunk.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.SFC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import { SnackbarContextNext } from 'notistack/build/SnackbarContext'\nimport { useCallback, useContext } from 'react'\n\nenum EVariant {\n  default = 'default',\n  error = 'error',\n  success = 'success',\n  warning = 'warning',\n  info = 'info',\n}\n\ninterface IEnqueueOptions {\n  /** Type of the snackbar */\n  variant: EVariant\n  /** Event fired when user clicks on action button (if any) */\n  onClickAction(): void\n  /**\n   * You can pass material-ui Snackbar props here, and they will be applied to this individual snackbar.\n   * for example, this particular snackbar will be dismissed after 1sec.\n   */\n  autoHideDuration: number\n  action: ReactNode[]\n}\n\ninterface IEnqueueSnackbar {\n  (message: string, options?: Partial<IEnqueueOptions>)\n}\n\nconst successVariant = { variant: EVariant.success }\nconst errorVariant = { variant: EVariant.error }\nconst warningVariant = { variant: EVariant.warning }\nconst infoVariant = { variant: EVariant.info }\n\nexport function useSnackBar() {\n  const enqueueSnackbar: IEnqueueSnackbar = useContext(SnackbarContextNext)\n  const enqueueSuccess = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, successVariant),\n    [],\n  )\n  const enqueueError = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, errorVariant),\n    [],\n  )\n  const enqueueWarning = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, warningVariant),\n    [],\n  )\n  const enqueueInfo = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, infoVariant),\n    [],\n  )\n  return {\n    enqueueSnackbar,\n    enqueueSuccess,\n    enqueueError,\n    enqueueWarning,\n    enqueueInfo,\n  }\n}\n","import { useContext } from 'react'\nimport * as Router from 'react-router'\n\nexport default function useRouterContext<\n  Params extends { [K in keyof Params]?: string } = {}\n>(): Router.RouteComponentProps<Params> {\n  // @ts-ignore\n  return useContext(Router.__RouterContext)\n}\n\n// export default function useRouter<\n// Params extends { [K in keyof Params]?: string } = {}\n// >(): Router.RouteComponentProps<Params> {\n//   // @ts-ignore\n//   let context = useContext(Router.__RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n\n// }\n\n// export default function useRouter(options = {}) {\n//   invariant(\n//     typeof useContext === \"function\",\n//     \"The useRouter hook requires React 16.7 or greater\"\n//   );\n\n//   let context = useContext(RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n// }\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n`\n","import { useRoot } from '../../../atoms/RootProvider'\nimport useRouterContext from '../../../hooks/useRouterContext'\n\nexport function useZoneRouteControl() {\n  const { user, zone: zoneModel } = useRoot()\n  const { history } = useRouterContext()\n  const baseRoute = '/settings/zones'\n  const getRouteToZone = (zoneId: ID) => {\n    return `${baseRoute}/${zoneId}`\n  }\n  return {\n    getRouteToZone,\n    routeToZoneEdit(editZoneId: ID) {\n      zoneModel.map.panToZone(editZoneId)\n      if (user.canQuery('zone')) {\n        history.push(getRouteToZone(editZoneId))\n      }\n    },\n    routeToZoneList() {\n      history.push(baseRoute)\n    },\n  }\n}\n","import { observer } from 'mobx-react-lite'\nimport React, { useContext } from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GZone } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { QueryZones } from './ZoneListLoader.graphql'\n\ninterface IProps {}\n\nexport type TZone = GZone.Fragment\n\nconst ZoneListContext = React.createContext<Maybe<ReadonlyArray<TZone>>>(null)\n\nexport const ZoneListLoader: React.SFC<IProps> = observer(({ children }) => {\n  const { zone } = useRoot()\n  const branches = zone.branches.filter(zone.branchFilterPredicate)\n  if (branches.length === 0) {\n    return (\n      <ZoneListContext.Provider value={[]}>{children}</ZoneListContext.Provider>\n    )\n  }\n  return (\n    <QueryZones\n      variables={{ branchesId: branches.map(RM.prop('id')) }}\n      renderLoading={false}\n      render={({ zones }, { loading }) => (\n        <ZoneListContext.Provider value={loading ? null : zones}>\n          {children}\n        </ZoneListContext.Provider>\n      )}\n    />\n  )\n})\n\nexport const useZoneList = () => {\n  return useContext(ZoneListContext)\n}\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","import { Observer } from 'mobx-react'\nimport React from 'react'\nimport { GoogleMap, GoogleMapProps, withGoogleMap } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { TMapModel } from '../models/MapModel'\nimport { Radiuses } from '../styling'\n\ninterface IBaseMapProps extends GoogleMapProps {\n  model: TMapModel\n}\n\nconst MapContainerStyled = styled.div`\n  border-radius: ${Radiuses.Card};\n  overflow: hidden;\n  height: 100%;\n`\n\nconst BaseMapContainer = withGoogleMap(({ children }) => <>{children}</>)\n\nexport const BaseMap: React.FC<IBaseMapProps> = ({ model, children }) => {\n  const options: google.maps.MapOptions = {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n  }\n  return (\n    <BaseMapContainer\n      containerElement={<MapContainerStyled />}\n      mapElement={<div style={{ height: `100%` }} />}\n    >\n      <Observer>\n        {() => (\n          <GoogleMap\n            ref={model.setMapRef}\n            zoom={model.zoom}\n            center={model.center}\n            onCenterChanged={model.updatePosition}\n            onZoomChanged={model.updateZoom}\n            options={options}\n          >\n            {children}\n          </GoogleMap>\n        )}\n      </Observer>\n    </BaseMapContainer>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      defaultValue = undefined,\n      isRequired = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useZoneModel() {\n  const { zone: zoneModel } = useRoot()\n  return zoneModel\n}\n","import useRouterContext from '../../../hooks/useRouterContext'\n\ninterface IZoneRouteParams {\n  zoneId?: ID\n}\n\nexport function useZoneId() {\n  const { match } = useRouterContext<IZoneRouteParams>()\n  const { zoneId } = match.params\n  return zoneId\n}\n","import React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface IZoneInputProps {\n  field: FieldType\n  label?: string\n  autoFocus?: boolean\n  isDeliveryPrice?: boolean\n}\n\nconst LabelStyled = styled.div`\n  min-width: 2rem;\n  display: inline-block;\n`\n\nconst FormInputTextBoxStyled = styled(FormInputTextBox)`\n  width: 3rem;\n  position: relative;\n  z-index: 4;\n`\nconst FormInputTextBoxDeliveryStyled = styled(FormInputTextBoxStyled)`\n  color: ${Colors.blue};\n`\n\nconst DeliveryContainer = styled.div`\n  position: relative;\n  left: 8rem;\n  top: 0rem;\n`\n\nconst PriceRangeContainer = styled.div`\n  position: relative;\n  left: 4rem;\n  top: -0.3rem;\n  width: 3rem;\n`\n\nconst VerticalLine = styled.div`\n  border-left: 3px solid #707070;\n  width: 3px;\n  position: relative;\n  left: -2rem;\n  height: 4rem;\n  float: left;\n  margin: -0.5rem 0 0 0;\n`\n\nconst validatePrice = (value: string) => {\n  if (typeof value === 'number') {\n    return null\n  }\n  const trim = value.trim()\n  return trim.length && Number.isNaN(Number.parseFloat(trim))\n    ? i18n.t`Must be number`\n    : null\n}\n\nexport const ZonePriceInput = React.forwardRef<\n  HTMLInputElement,\n  IZoneInputProps\n>(\n  ({ field, label, isDeliveryPrice, autoFocus = false }, ref) =>\n    isDeliveryPrice ? (\n      <DeliveryContainer>\n        <VerticalLine />\n        <LabelStyled>{label}</LabelStyled>\n        <FormInputTextBoxDeliveryStyled\n          field={field}\n          validate={validatePrice}\n          // @ts-ignore\n          ref={ref}\n        />\n      </DeliveryContainer>\n    ) : (\n      <PriceRangeContainer>\n        <FormInputTextBoxStyled\n          field={field}\n          validate={validatePrice}\n          autoFocus={autoFocus}\n        />\n      </PriceRangeContainer>\n    ),\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { ZonePageLayout } from '../../../segments/zones/pages/ZonePageLayout'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\n\ninterface IZoneMenuRoutesProps extends RouteComponentProps<{}> {}\n\nexport const ZoneMenuRoutes: React.SFC<IZoneMenuRoutesProps> = () => {\n  const { getRouteToZone } = useZoneRouteControl()\n  return (\n    <Switch>\n      <Route path={getRouteToZone(':zoneId?')} component={ZonePageLayout} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default ZoneMenuRoutes\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { ZoneFormPanel } from '../organisms/ZoneFormPanel'\nimport { ZoneListLoader } from '../organisms/ZoneListLoader'\nimport { ZoneMapControl } from '../organisms/ZoneMapControl'\nimport { ZoneMenuPanel } from '../organisms/ZoneMenuPanel'\n\ninterface IProps extends RouteComponentProps<{ zoneId?: ID }> {}\n\nexport const ZonePageLayout: React.SFC<IProps> = ({ match }) => {\n  const isEditing = Boolean(match.params.zoneId)\n  return (\n    <ZoneListLoader>\n      <PageLayout\n        pageTitle={i18n.t`Delivery zones`}\n        useBackButton={true}\n        backRoute=\"/settings\"\n      />\n      <PageLayoutFullHeightItem\n        widthInColumns={6}\n        column={10}\n        withScrollArea={isEditing}\n      >\n        {isEditing ? <ZoneFormPanel /> : <ZoneMenuPanel />}\n      </PageLayoutFullHeightItem>\n      <PageLayoutFullHeightItem widthInColumns={10}>\n        <ZoneMapControl />\n      </PageLayoutFullHeightItem>\n    </ZoneListLoader>\n  )\n}\n","import { reaction } from 'mobx'\nimport { useDisposable } from 'mobx-react-lite'\nimport React, { useCallback, useRef, useState } from 'react'\nimport { Form, IFormApi } from 'react-form'\nimport Goodbye from 'react-goodbye'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { ConfirmDialog } from '../../../atoms/ConfirmDialog'\nimport { Loading } from '../../../atoms/Loading'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { logDebug } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { useEffectOnce } from '../../../hooks/useEffectOnce'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\nimport { Spacing } from '../../../styling'\nimport { useZoneId } from '../hooks/useZoneId'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\nimport { ZoneFormContent } from '../molecules/ZoneFormContent'\nimport { ZoneFormControls } from '../molecules/ZoneFormControls'\nimport { useZoneList } from './ZoneListLoader'\n\nconst DeleteButtonContainer = styled.div`\n  width: ${Spacing.ButtonHeight};\n  margin-top: ${Spacing.Middle};\n`\n\nexport const ZoneFormPanel: React.SFC = () => {\n  const zoneId = useZoneId()\n  const zoneList = useZoneList()\n  const { zone: zoneModel } = useRoot()\n  const { routeToZoneList } = useZoneRouteControl()\n  const [isModified, setModified] = useState(false)\n  const formApiRef = useRef<IFormApi | null>(null)\n  const { enqueueError } = useSnackBar()\n\n  const onSave = useCallback(async () => {\n    if (formApiRef.current) {\n      await formApiRef.current.submitForm()\n      setModified(false)\n      routeToZoneList()\n    }\n  }, [])\n\n  const onDelete = useCallback(\n    async () => {\n      if (zoneId) {\n        await zoneModel.destroyZone(zoneId)\n      }\n      routeToZoneList()\n    },\n    [zoneId],\n  )\n\n  useDisposable(() =>\n    reaction(() => zoneModel.map.currentZonePoints !== null, setModified),\n  )\n\n  useEffectOnce(() => {\n    if (zoneList && zoneList.length === 0) {\n      enqueueError(i18n.t`Requested zone wasn't found`)\n      routeToZoneList()\n    }\n  })\n\n  const zone =\n    zoneId && zoneList ? zoneList.find(RM.propEq('id', zoneId)) || null : null\n\n  if (!zone) {\n    return <Loading text={i18n.t`Loading form...`} />\n  }\n\n  return (\n    <Form\n      defaultValues={zone}\n      onChange={formState => {\n        logDebug('zone form change', formState.values)\n        setModified(true)\n      }}\n      onSubmit={values => zoneModel.saveZone(zoneId!, values)}\n      render={formApi => {\n        formApiRef.current = formApi\n        return (\n          <Card padding={0}>\n            <ZoneFormControls\n              isSubmitting={formApi.submitting}\n              isModified={isModified}\n              onSave={onSave}\n              onGoBack={routeToZoneList}\n            />\n            <ZoneFormContent />\n\n            <CanMutate mutationName=\"destroyZone\">\n              <DeleteButtonContainer>\n                <TouchButtonDelete\n                  disabled={formApi.submitting}\n                  confirmText={i18n.t`Remove zone ${zone.name}?`}\n                  onDelete={onDelete}\n                />\n              </DeleteButtonContainer>\n            </CanMutate>\n\n            <Goodbye when={isModified}>\n              {({ isShow, handleOk, handleCancel }) => (\n                <ConfirmDialog\n                  isShow={isShow}\n                  confirmText={i18n.t`Do you want to cancel changes for the zone?`}\n                  onConfirm={handleOk}\n                  onCancel={handleCancel}\n                />\n              )}\n            </Goodbye>\n          </Card>\n        )\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\n\ninterface IProps {\n  isShow: boolean\n  confirmText: string\n  onConfirm(): void\n  onCancel(): void\n}\n\nexport const ConfirmDialog: React.SFC<IProps> = props => {\n  useEffect(\n    () => {\n      if (props.isShow) {\n        if (window.confirm(props.confirmText)) {\n          props.onConfirm()\n        } else {\n          props.onCancel()\n        }\n      }\n    },\n    [props.isShow],\n  )\n  return null\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Headline } from '../../../atoms/Headline'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { validateIsRequired } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { Colors, Spacing } from '../../../styling'\nimport { ZonePriceInput } from '../atoms/ZonePriceInput'\nimport { ZoneColorSelector } from '../molecules/ZoneColorSelector'\nimport { ZoneFormPriceRange } from '../molecules/ZoneFormPriceRange'\n\ninterface IZoneFormContentProps {}\n\nconst ZoneFormContentStyled = styled.div`\n  margin: ${Spacing.Middle};\n  color: ${Colors.black};\n`\n\nconst DescriptionUnderHeadline = styled.div`\n  color: ${Colors.greyDark};\n  padding-bottom: 0.2rem;\n`\n\nexport const ZoneFormContent: React.SFC<IZoneFormContentProps> = props => (\n  <ZoneFormContentStyled>\n    <IconLine icon=\"label\">\n      <FormInputTextBox\n        field=\"name\"\n        validate={validateIsRequired(i18n.t`Zone name`)}\n      />\n    </IconLine>\n\n    <IconLine icon=\"color_lens\">\n      <ZoneColorSelector />\n    </IconLine>\n\n    <FormInputCheckbox\n      field=\"enabled\"\n      name=\"enabled\"\n      label={i18n.t`Is active`.toLocaleLowerCase()}\n    />\n\n    <Trans>\n      <Headline margin=\"0.5rem 0 0 0\">Delivery cost</Headline>\n      <DescriptionUnderHeadline>\n        according order total cost\n      </DescriptionUnderHeadline>\n    </Trans>\n    <ZonePriceInput field=\"minimalOrderPrice.value\" />\n    <NestedField field=\"priceRangeRules\" component={ZoneFormPriceRange} />\n  </ZoneFormContentStyled>\n)\n","import React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputSelect } from '../../../atoms/FormInputSelect'\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GZoneColors } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { Colors } from '../../../styling'\nimport { ZoneColorsQuery } from '../Zones.graphql'\n\ninterface IZoneColorSelectorProps {\n  field?: FieldType\n}\n\nconst ColorOption = styled.div`\n  background-color: ${({ color }: { color: string }) => color};\n  color: ${Colors.white};\n  width: 6rem;\n  padding: 0.4rem 1rem;\n  margin: 0;\n  height: 100%;\n`\n\nconst QueryZoneColors = buildQuery<GZoneColors.Query, GZoneColors.Variables>(\n  ZoneColorsQuery,\n)\n\nconst makeStyles = () => ({\n  option: base => ({\n    ...base,\n    padding: 0,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    width: '8rem',\n    maxWidth: '8rem',\n  }),\n})\n\nexport const ZoneColorSelector: React.SFC<IZoneColorSelectorProps> = ({\n  field = 'zoneColor.id',\n}) => (\n  <QueryZoneColors\n    render={({ zoneColors }) => (\n      <FormInputSelect<GZoneColors.ZoneColors>\n        field={field}\n        fieldIsPure={true}\n        options={[...zoneColors]}\n        width={8}\n        styles={makeStyles()}\n        defaultValue={RM.head(zoneColors)}\n        getOptionValue={RM.prop('id')}\n        formatOptionLabel={zoneColor => (\n          <ColorOption color={zoneColor.color}>{zoneColor.code}</ColorOption>\n        )}\n      />\n    )}\n  />\n)\n","import React, { Fragment } from 'react'\nimport { FormApi, NestedFieldComponentProps } from 'react-form'\nimport styled from 'styled-components'\n\nimport { GZonePriceRange } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\nimport { Spacing } from '../../../styling'\nimport { ZonePlaceholderInput } from '../atoms/ZonePlaceholderInput'\nimport { ZonePriceInput } from '../atoms/ZonePriceInput'\n\ninterface IProps\n  extends NestedFieldComponentProps<GZonePriceRange.Fragment[]> {}\n\nconst AddButtonContainer = styled.div`\n  position: relative;\n  top: -6rem;\n`\n\nconst RemoveButtonContainer = styled.div`\n  position: relative;\n  top: -7rem;\n  left: 16rem;\n`\n\nexport const ZoneFormPriceRange: React.SFC<IProps> = ({ fieldApi }) => {\n  return (\n    <>\n      {fieldApi.values.map((value, idx, values) => (\n        <Fragment key={idx}>\n          <ZonePriceInput\n            label=\"za\"\n            isDeliveryPrice={true}\n            field={[idx, 'price', 'value']}\n          />\n\n          {idx === values.length - 1 ? (\n            <ZonePlaceholderInput display=\"&infin;\" label=\"do\" />\n          ) : (\n            <ZonePriceInput\n              field={[idx, 'toPrice', 'value']}\n              autoFocus={true}\n            />\n          )}\n\n          {values.length > 1 && (\n            <RemoveButtonContainer>\n              <TouchButtonDelete\n                onDelete={() => fieldApi.removeValue('', idx)}\n              />\n            </RemoveButtonContainer>\n          )}\n        </Fragment>\n      ))}\n      <FormApi\n        render={formApi => (\n          <AddButtonContainer>\n            <TouchButton\n              disabled={formApi.submitting}\n              width={Spacing.ButtonHeight}\n              iconName=\"add_circle\"\n              onClick={() =>\n                fieldApi.addValue('', {\n                  price: { value: 0 },\n                  toPrice: { value: 0 },\n                })\n              }\n            />\n          </AddButtonContainer>\n        )}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputStyled } from '../../../atoms/FormInputTextBox'\n\ninterface IZonePlaceholderInputProps {\n  label: string\n  display: string\n}\n\nconst LabelStyled = styled.div`\n  width: 3rem;\n  display: inline-block;\n`\n\nconst FormInputForPlaceholderStyled = styled(FormInputStyled)`\n  width: 3rem;\n  position: relative;\n  z-index: 4;\n`\n\nconst Container = styled.div`\n  margin: 0 0 0 1rem;\n`\n\nexport const ZonePlaceholderInput: React.SFC<IZonePlaceholderInputProps> = ({\n  label,\n  display,\n}) => (\n  <Container>\n    <LabelStyled>{label}</LabelStyled>\n    <FormInputForPlaceholderStyled disabled={true} placeholder={display} />\n  </Container>\n)\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  isSubmitting: boolean\n  isModified: boolean\n  onSave(e: MouseEvent<HTMLButtonElement>): void\n  onGoBack(): void\n}\n\nexport const ZoneFormControls: React.SFC<IProps> = ({\n  isSubmitting,\n  isModified,\n  onGoBack,\n  onSave,\n}) => (\n  <FlexRowSingle>\n    <FlexColumn widthGrowIndex={0.4} padding=\"0\">\n      <TouchButton\n        color={Colors.greyMiddle}\n        onClick={onGoBack}\n        text={i18n.t`Back`}\n        disabled={isSubmitting}\n      />\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={0.4} padding=\"0\">\n      <CanMutate mutationName=\"updateZone\">\n        <TouchButton\n          color={Colors.green}\n          text={i18n.t`Save zone`}\n          onClick={onSave}\n          disabled={isSubmitting || !isModified}\n        />\n      </CanMutate>\n    </FlexColumn>\n  </FlexRowSingle>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GZones } from '../../../graph/types'\nimport { ZoneFragment } from '../Zones.graphql'\n\nexport const ZonesQuery = gql`\n  query GZones($branchesId: [ID!]!) {\n    zones(companyBranches: $branchesId) {\n      ...GZone\n    }\n  }\n  ${ZoneFragment}\n`\n\nexport const QueryZones = buildQuery<GZones.Query, GZones.Variables>(ZonesQuery)\n","import React, { useCallback } from 'react'\n\nimport { BaseMap } from '../../../atoms/BaseMap'\nimport { GCompanyBranch } from '../../../graph/types'\nimport { MapCompanyBranchMarker } from '../../../molecules/MapCompanyBranchMarker'\nimport { Colors } from '../../../styling'\nimport { ZoneMapArea } from '../atoms/ZoneMapArea'\nimport { ZoneMapEditableArea } from '../atoms/ZoneMapEditableArea'\nimport { useZoneId } from '../hooks/useZoneId'\nimport { useZoneModel } from '../hooks/useZoneModel'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\nimport { TZone, useZoneList } from '../organisms/ZoneListLoader'\n\nexport const ZoneMapControl: React.FC = () => {\n  const zoneModel = useZoneModel()\n  const editZoneId = useZoneId()\n  const zoneList = useZoneList()\n  const { routeToZoneEdit } = useZoneRouteControl()\n\n  const branches = zoneModel.branches.filter(zoneModel.branchFilterPredicate)\n\n  const isActive = (companyBranchId: ID) =>\n    !zoneModel.hasBranchFilter || companyBranchId === zoneModel.branchFilterId\n\n  const renderZoneArea = (zone: TZone) => {\n    const areaProps = {\n      key: `zone${zone.id}`,\n      points: zone.geoPolygon,\n      priority: zone.priority,\n      color:\n        isActive(zone.companyBranch.id) && zone.enabled\n          ? zone.zoneColor.color\n          : Colors.greyMiddle,\n    }\n\n    if (zone.id === editZoneId) {\n      return (\n        <ZoneMapEditableArea\n          {...areaProps}\n          onChange={zoneModel.map.updateZonePoints}\n          onClear={zoneModel.map.clearZonePoints}\n        />\n      )\n    }\n\n    return (\n      <ZoneMapArea\n        {...areaProps}\n        onFocus={() => {\n          if (isActive(zone.companyBranch.id)) {\n            routeToZoneEdit(zone.id)\n          }\n        }}\n      />\n    )\n  }\n\n  const renderBranchLabel = useCallback(\n    (branch: GCompanyBranch.Fragment) => (\n      <MapCompanyBranchMarker\n        key={`branch${branch.id}`}\n        branch={branch}\n        isActive={isActive(branch.id)}\n      />\n    ),\n    [],\n  )\n\n  return (\n    <BaseMap model={zoneModel.map}>\n      {zoneList && zoneList.map(renderZoneArea)}\n      {branches && branches.map(renderBranchLabel)}\n    </BaseMap>\n  )\n}\n","import React from 'react'\nimport { OverlayView } from 'react-google-maps'\nimport styled, { css } from 'styled-components'\n\nimport { GCompanyBranch } from '../graph/types'\nimport { gpsToLatLng } from '../helpers/gps'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  branch: GCompanyBranch.Fragment\n  isActive?: boolean\n}\n\nconst BranchNameStyled = styled.div`\n  ${getColors} font-size: 1.3rem;\n  white-space: nowrap;\n  padding: 0.2rem 0.5rem;\n`\n\nexport const MapCompanyBranchMarker: React.SFC<IProps> = ({\n  branch,\n  isActive = true,\n}) => (\n  <OverlayView\n    getPixelPositionOffset={(width, height) => ({\n      x: -(width / 2),\n      y: -(height / 2),\n    })}\n    mapPaneName={OverlayView.MARKER_LAYER}\n    position={gpsToLatLng(branch.gps)}\n  >\n    <BranchNameStyled isActive={isActive}>{branch.name}</BranchNameStyled>\n  </OverlayView>\n)\n\nfunction getColors({ isActive }: { isActive: boolean }) {\n  return css`\n    background-color: ${isActive ? Colors.green : Colors.greyLight};\n    color: ${isActive ? Colors.white : Colors.greyDark};\n  `\n}\n","import React, { useCallback } from 'react'\nimport { Polygon } from 'react-google-maps'\n\nimport { gpsToLatLng } from '../../../helpers/gps'\n\ninterface IZoneMapAreaProps {\n  points: ReadonlyArray<GeoPoint>\n  color: string\n  priority: number\n  onFocus?(): void\n}\n\nexport const ZoneMapArea: React.FC<IZoneMapAreaProps> = props => {\n  const onAreaFocus = useCallback(\n    (e: google.maps.PolyMouseEvent) => {\n      if (props.onFocus) {\n        e.stop()\n        props.onFocus()\n      }\n    },\n    [props.onFocus],\n  )\n\n  const { points, color, priority } = props\n  return (\n    <Polygon\n      defaultPath={points.map(gpsToLatLng)}\n      options={{\n        fillColor: color,\n        fillOpacity: 0.3,\n        strokeWeight: 0,\n        zIndex: 5000 - priority,\n      }}\n      editable={false}\n      draggable={false}\n      onDblClick={onAreaFocus}\n    />\n  )\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { Polygon } from 'react-google-maps'\n\nimport { gpsToLatLng, latLngToGps } from '../../../helpers/gps'\n\ninterface IZoneMapAreaProps {\n  points: ReadonlyArray<GeoPoint>\n  color: string\n  priority: number\n  onChange(points: GeoPoint[]): void\n  onClear(): void\n}\n\nexport const ZoneMapEditableArea: React.FC<IZoneMapAreaProps> = props => {\n  const polygonRef = useRef<Polygon | null>(null)\n\n  const onAreaChange = useCallback(\n    () => {\n      if (polygonRef.current) {\n        const path = polygonRef.current.getPath()\n        props.onChange(path.getArray().map(latLngToGps))\n      }\n    },\n    [props.onChange],\n  )\n\n  useEffect(() => {\n    let listeners\n    if (polygonRef.current && props.onChange) {\n      const path = polygonRef.current.getPath()\n      listeners = [\n        path.addListener('set_at', onAreaChange),\n        path.addListener('insert_at', onAreaChange),\n        path.addListener('remove_at', onAreaChange),\n      ]\n    }\n    return () => {\n      props.onClear()\n      if (listeners) {\n        listeners.forEach(lis => lis.remove())\n      }\n    }\n  }, [])\n\n  const { points, color } = props\n  return (\n    <Polygon\n      defaultPath={points.map(gpsToLatLng)}\n      options={{\n        fillColor: color,\n        fillOpacity: 0.6,\n        strokeWeight: 2,\n        zIndex: 10000,\n      }}\n      editable={true}\n      draggable={true}\n      ref={polygonRef}\n      onDragEnd={onAreaChange}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { ScrollArea } from '../../../atoms/ScrollArea'\nimport { CreateZoneButton } from '../molecules/CreateZoneButton'\nimport { ZoneListControl } from '../organisms/ZoneListControl'\nimport { ZoneFilter } from './ZoneFilter'\n\nconst ZoneMenuContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nconst FixedHeaderContainer = styled.div`\n  flex: 0 0 auto;\n`\nconst ScrollAreaContainer = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n`\nexport const ZoneMenuPanel: React.SFC = () => (\n  <ZoneMenuContainer>\n    <FixedHeaderContainer>\n      <Card>\n        <ZoneFilter />\n      </Card>\n      <CanMutate mutationName=\"createZone\">\n        <CreateZoneButton />\n      </CanMutate>\n    </FixedHeaderContainer>\n\n    <ScrollAreaContainer>\n      <ScrollArea>\n        <ZoneListControl />\n      </ScrollArea>\n    </ScrollAreaContainer>\n  </ZoneMenuContainer>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { useZoneModel } from '../hooks/useZoneModel'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\n\nexport const CreateZoneButton: React.SFC = observer(() => {\n  const zoneModel = useZoneModel()\n  const { routeToZoneEdit } = useZoneRouteControl()\n  return (\n    <TouchButton\n      text={\n        zoneModel.hasBranchFilter\n          ? i18n.t`Create zone for branch`\n          : i18n.t`Select branch to create zone`\n      }\n      onClick={() => zoneModel.createZone(routeToZoneEdit)}\n      disabled={!zoneModel.hasBranchFilter}\n      color={Colors.turquoise}\n      textNextToIcon={true}\n      height={Spacing.ButtonHeight}\n      iconName=\"add_circle\"\n    />\n  )\n})\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { BulletList } from 'react-content-loader'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useZoneModel } from '../hooks/useZoneModel'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\nimport { ZoneList } from '../molecules/ZoneList'\nimport { useZoneList } from './ZoneListLoader'\n\nexport const ZoneListControl: React.SFC = () => {\n  const zoneList = useZoneList()\n  if (zoneList === null) {\n    return <BulletList primaryOpacity={0.2} secondaryOpacity={0.2} />\n  }\n  const zoneModel = useZoneModel()\n  const { routeToZoneEdit } = useZoneRouteControl()\n  if (zoneModel.brand === null) {\n    return (\n      <CardListTitle>\n        <Trans>Select brand to see its zones</Trans>\n      </CardListTitle>\n    )\n  }\n  return (\n    <ZoneList\n      zoneModel={zoneModel}\n      zones={zoneList.filter(zoneModel.zoneFilterPredicate)}\n      branches={zoneModel.root.user.filterBranches(\n        zoneModel.branchFilterPredicate,\n      )}\n      onZoneEdit={routeToZoneEdit}\n    />\n  )\n}\n","import * as R from 'ramda'\nimport React, { Fragment } from 'react'\nimport { SortableContainer, SortEndHandler } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { GCompanyBranch, GZone } from '../../../graph/types'\nimport { TZoneModel } from '../../../segments/zones/models/ZoneModel'\nimport { ZoneListCard } from '../atoms/ZoneListCard'\n\ninterface IZoneListProps {\n  branches: GCompanyBranch.Fragment[]\n  zones: GZone.Fragment[]\n  zoneModel: TZoneModel\n  onZoneEdit(zoneID: ID): void\n}\n\nconst ZoneListContainerStyled = SortableContainer(styled.div`\n  margin-top: 0.5rem;\n  cursor: arrow;\n`)\n\nconst sortZones = R.sortWith<GZone.Fragment>([\n  R.ascend(R.path(['companyBranch', 'name'])),\n  R.descend(R.prop('priority')),\n])\n\nconst groupByBranch = R.groupBy((zone: GZone.Fragment) => zone.companyBranch.id)\n\nexport const ZoneList: React.SFC<IZoneListProps> = ({\n  branches,\n  zones,\n  zoneModel,\n  onZoneEdit,\n}) => {\n  const renderZone = (zone: GZone.Fragment, idx: number) => (\n    <ZoneListCard\n      key={zone.id}\n      zone={zone}\n      branch={branches.find(R.propEq('id', zone.companyBranch.id))!}\n      index={idx}\n      collection={zone.companyBranch.id}\n      onEdit={() => onZoneEdit(zone.id)}\n    />\n  )\n  const renderBranch = (\n    branch: GCompanyBranch.Fragment,\n    branchZones: GZone.Fragment[],\n  ) => (\n    <Fragment key={branch.id}>\n      <CardListTitle>{branch.name}</CardListTitle>\n      {branchZones.map(renderZone)}\n    </Fragment>\n  )\n\n  let output\n  let onSortEnd: SortEndHandler\n\n  if (branches.length === 1) {\n    const sorted = sortZones(zones)\n    output = sorted.map(renderZone)\n    onSortEnd = ({ oldIndex, newIndex }) => {\n      const zone = sorted[oldIndex]\n      zoneModel.changeZonePriority(zone, oldIndex, newIndex)\n    }\n  } else {\n    const grouped = R.mapObjIndexed(sortZones, groupByBranch(zones))\n    output = branches.map(branch => {\n      const branchZones = grouped[branch.id]\n      return branchZones ? renderBranch(branch, branchZones) : null\n    })\n    onSortEnd = ({ oldIndex, newIndex, collection }) => {\n      const group = grouped[collection]\n      const zone = group[oldIndex]\n      zoneModel.changeZonePriority(zone, oldIndex, newIndex)\n    }\n  }\n\n  return (\n    <ZoneListContainerStyled\n      useDragHandle={true}\n      lockAxis=\"y\"\n      onSortEnd={onSortEnd}\n    >\n      {output}\n    </ZoneListContainerStyled>\n  )\n}\n","import React from 'react'\nimport { SortableElement } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { GCompanyBranch, GZone } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IZoneListCardProps {\n  zone: GZone.Fragment\n  branch: GCompanyBranch.Fragment\n  onEdit(): void\n}\n\nconst ZoneNameStyled = styled.div`\n  font-size: 1.125rem;\n  margin-top: 0.2rem;\n`\n\nconst ZoneDescriptionStyled = styled.div`\n  font-size: 0.875rem;\n`\nconst ZoneFlexRowStyled = styled(FlexRowSingle)`\n  height: ${Spacing.ButtonHeight};\n`\n\nexport const ZoneListCard = SortableElement<IZoneListCardProps>(\n  ({ zone, branch, onEdit }) => (\n    <Card\n      key={zone.id}\n      padding={0}\n      color={zone.enabled ? zone.zoneColor.color : Colors.greyMiddle}\n      onClick={onEdit}\n    >\n      <ZoneFlexRowStyled>\n        <FlexColumn fixedWidth={true} padding=\"0 0.5rem 0 0\">\n          <TouchButton\n            width={Spacing.ButtonHeight}\n            height={Spacing.ButtonHeight}\n            iconName=\"mode_edit\"\n          />\n        </FlexColumn>\n        <FlexColumn widthGrowIndex={1}>\n          <ZoneNameStyled>\n            {zone.name}\n            {` [P${zone.priority}]`}\n          </ZoneNameStyled>\n          <ZoneDescriptionStyled>{branch.name}</ZoneDescriptionStyled>\n        </FlexColumn>\n        <FlexColumn padding=\"0\">\n          <DragHandle />\n        </FlexColumn>\n      </ZoneFlexRowStyled>\n    </Card>\n  ),\n)\n","import { autorun } from 'mobx'\nimport { observer, useDisposable } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GCompanyBranch } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { ZoneFilterBranch } from '../molecules/ZoneFIlterBranch'\nimport { ZoneFilterBrand } from '../molecules/ZoneFilterBrand'\n\nexport const ZoneFilter: React.FC = observer(() => {\n  const { user, zone } = useRoot()\n  const branches = user.branches\n\n  const getBrandBranches = useCallback(\n    (brand: Maybe<GCompanyBranch.Brand>) =>\n      brand === null\n        ? []\n        : user.branches.filter(RM.pathEq(['brand', 'id'], brand.id)),\n    [],\n  )\n\n  useDisposable(() =>\n    autorun(() => {\n      if (branches.length === 1) {\n        zone.setBranchFilter(RM.head(branches)!)\n      }\n    }),\n  )\n\n  // no filter is shown for less than 1 branch available\n  if (branches.length <= 1) {\n    return null\n  }\n\n  const singleBrand = user.brands.length === 1 ? RM.head(user.brands)! : null\n  if (singleBrand) {\n    zone.setBrandFilter(singleBrand, getBrandBranches(zone.brand))\n  }\n\n  return (\n    <>\n      {!singleBrand && (\n        <ZoneFilterBrand\n          brands={user.brands}\n          selectedBrand={zone.brand}\n          onSelection={brand => {\n            if (brand === null) {\n              zone.clearBrandFilter()\n            } else {\n              zone.setBrandFilter(brand, getBrandBranches(brand))\n            }\n          }}\n        />\n      )}\n      {!singleBrand && <VerticalGap />}\n      <ZoneFilterBranch\n        branches={getBrandBranches(zone.brand)}\n        selectedBranch={zone.branch}\n        autoFocus={Boolean(singleBrand)}\n        onSelection={branch => {\n          if (!branch) {\n            zone.clearBranchFilter()\n          } else {\n            zone.setBranchFilter(branch)\n          }\n        }}\n      />\n    </>\n  )\n})\n","import React from 'react'\n\nimport { GCompanyBranch } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { CompanyBranchDropdown } from '../../../molecules/CompanyBranchDropdown'\n\ntype TBranch = GCompanyBranch.Fragment\n\ninterface IProps {\n  branches: TBranch[]\n  selectedBranch: Maybe<TBranch>\n  onSelection(branch: Maybe<TBranch>): void\n  autoFocus: boolean\n}\n\nexport const ZoneFilterBranch: React.SFC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSelection,\n  autoFocus,\n}) => (\n  <CompanyBranchDropdown\n    placeholder={i18n.t`Select branch`}\n    branches={branches}\n    selectedBranch={selectedBranch}\n    onSingleSelection={onSelection}\n    formatOptionLabel={RM.prop('name')}\n    isClearable={true}\n    autoFocus={autoFocus}\n  />\n)\n","import React from 'react'\n\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { GCompanyBranch } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ntype TBrand = GCompanyBranch.Brand\n\ninterface IProps {\n  brands: ReadonlyArray<TBrand>\n  selectedBrand: Maybe<TBrand>\n  onSelection(brand: Maybe<TBrand>): void\n}\n\nexport const ZoneFilterBrand: React.SFC<IProps> = ({\n  brands,\n  selectedBrand,\n  onSelection,\n}) => (\n  <SelectControl<TBrand>\n    placeholder={i18n.t`Select brand`}\n    options={brands as TBrand[]}\n    value={selectedBrand}\n    formatOptionLabel={RM.prop('name')}\n    getOptionValue={RM.prop('id')}\n    getOptionLabel={RM.prop('name')}\n    isClearable={true}\n    isSearchable={true}\n    onChange={value => onSelection(value as Maybe<TBrand>)}\n    autoFocus={true}\n  />\n)\n"],"sourceRoot":""}