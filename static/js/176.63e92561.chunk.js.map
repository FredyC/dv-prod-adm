{"version":3,"sources":["atoms/ShowFeedbackButton.tsx","hooks/useMutationGuard.ts","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","helpers/filter.ts","atoms/RelativeLink.tsx","atoms/FormInputFlatSelect.tsx","atoms/DragHandle.tsx","atoms/FormInputSelect.tsx","../node_modules/@speedlo/assets/index.js","../node_modules/@speedlo/assets/Flaticon.js","molecules/TouchButtonEdit.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/extends.js","molecules/TouchButtonRemove.tsx","molecules/TouchButtonVisibility.tsx","atoms/NoteText.tsx","atoms/DataTable.tsx","molecules/SortableDataTable.tsx","segments/menu/molecules/CategoryListTable.tsx","segments/menu/molecules/CreateButton.tsx","segments/menu/organisms/CategoryList.tsx","segments/menu/organisms/MenuGuideDownload.graphql.ts","segments/menu/organisms/MenuGuideDownload.tsx","segments/menu/pages/MenuCategoryListPage.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/labels.ts","segments/menu/molecules/SubmitButton.tsx","atoms/FormContainer.tsx","atoms/PictogramDisplay.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/organisms/CategoryFormBasic.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","segments/menu/organisms/CategoryFormLoader.tsx","atoms/DataList.tsx","atoms/FormDisplayField.tsx","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormPricingField.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/organisms/RecipeList.graphql.ts","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/pages/MenuCategoryPage.tsx","atoms/DataTableContainer.tsx","segments/menu/molecules/MenuCategoryFilter.tsx","segments/menu/molecules/MenuFilterInput.tsx","atoms/RelativeRedirect.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipeListPage.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeCategoryView.tsx","segments/menu/molecules/FormInputCode.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormLoader.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","segments/menu/molecules/FormInputPlu.tsx","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/organisms/StockFormMain.tsx","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/routes/MenuRoutes.tsx"],"names":["ShowFeedbackButton","react_default","a","createElement","TouchButton","onClick","Raven","showReportDialog","_lingui_react","id","useMutationGuard","mutate","options","arguments","length","undefined","defaultMessage","i18n","_","_useSnackBar","useSnackBar","enqueueSnackbar","enqueueError","enqueueWarning","handleUserErrors","userErrors","forEach","handleGraphQLErrors","errors","filter","RM","pathEq","map","prop","handleError","err","isApolloError","networkError","graphQLErrors","reportError","action","React","key","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","variables","mutateOptions","result","_args","wrap","_context","prev","next","sent","abrupt","data","getUserErrors","t0","stop","this","_x","apply","__webpack_require__","d","__webpack_exports__","PageLayoutFullHeightItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","styled","div","withConfig","displayName","componentId","props","widthInColumns","Spacing","LayoutGridCellMargin","column","row","FullHeightDivStyled","children","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","FlexRowSingle","_ref$justify","justify","VerticalGap","_ref$size","size","_ref$sizeUnit","sizeUnit","concat","ScrollArea","CardDock","styled_components__WEBPACK_IMPORTED_MODULE_0__","_ref2","_ref2$position","position","_ref$position","isPartialMatch","searchValue","search","toLocaleLowerCase","propValue","includes","RelativeLink","to","from","linkProps","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","assign","resolveLocation","pathname","resolvePathname","resolved","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","FormInputFlatSelect","_React$Component","_getPrototypeOf2","_this","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_len","args","Array","_key","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","validate","value","_this$props","isRequired","isMulti","validationName","isArray","_i18n__WEBPACK_IMPORTED_MODULE_9__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","fieldApi","_this$props2","items","defaultSelection","getItemId","selection","selectedItems","item","onMultiSelection","setValue","setTouched","selectedItem","find","onSingleSelection","_this2","_this$props3","field","_this$props3$fieldIsP","fieldIsPure","_this$props3$isRequir","_this$props3$isCleara","isClearable","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","react_form__WEBPACK_IMPORTED_MODULE_7__","pure","_SelectControlFlat__WEBPACK_IMPORTED_MODULE_10__","getControlProps","isInvalid","Boolean","error","Component","defaultProps","DragHandle","react_sortable_hoc__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_Icon__WEBPACK_IMPORTED_MODULE_3__","DragHandleContainerStyled","SortableHandle","iconName","FormInputSelect","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_i18n__WEBPACK_IMPORTED_MODULE_10__","0","validatioName","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","getOptionValue","defaultValue","isSelected","F","onChange","selectedOptions","option","_this$props2$fieldIsP","react__WEBPACK_IMPORTED_MODULE_7___default","react_form__WEBPACK_IMPORTED_MODULE_8__","_SelectControl__WEBPACK_IMPORTED_MODULE_11__","onFocus","styles","control","base","borderColor","exports","pictograms","module","TouchButtonEdit","target","_ref$Link","Link","objectWithoutProperties","width","ButtonHeight","height","_extends","i","source","prototype","hasOwnProperty","TouchButtonRemove","TouchButtonVisibility","isVisible","iconColor","Colors","white","greyMiddle","color","NoteText","DataTable","_props$heightStretch","heightStretch","_props$fullHeight","fullHeight","_props$rowHeight","rowHeight","_props$isLoading","isLoading","tableProps","rowGetter","useCallback","index","noRowsRenderer","Pacman","renderTable","es","autoHeight","headerHeight","rowCount","style","outline","disableHeight","_ref3","scrollElement","window","_ref4","_ref5","checkColumnAccess","_ref6","renderer","canQuery","canMutate","cellProps","CanQuery","queryName","CanMutate","mutationName","ColumnRendererEdit","_ref7","cellData","TouchButtonEdit_TouchButtonEdit","ColumnRendererRemove","_ref8","columnData","TouchButtonRemove_TouchButtonRemove","onRemove","ColumnRendererVisibility","_ref9","rowData","TouchButtonVisibility_TouchButtonVisibility","onToggle","ColumnRendererWithNote","_ref10","Fragment","noteKey","DataTableEmptyText","_ref11","_ref11$text","text","SortableTableRowRenderer","SortableElement","columns","className","SortableDataTableContainer","SortableContainer","SortableDataTable","_React$PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","sortedItems","rowRenderer","rowProps","onHandleSorting","newIndex","oldIndex","currentItems","sortSuccess","toConsumableArray","arrayMove","setState","onSort","offset","inherits","createClass","lockAxis","useDragHandle","onSortEnd","PureComponent","getDerivedStateFromProps","nextProps","CategoryListTable","categories","_ref$showEditColumn","showEditColumn","_ref$showRemoveColumn","showRemoveColumn","_ref$showVisibilityCo","showVisibilityColumn","_ref$showHeader","showHeader","_ref$isSortable","isSortable","_ref$isLoading","_ref$heightStretch","_ref$fullHeight","_ref$noRowsDisplay","noRowsDisplay","disableHeader","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","cellDataGetter","getCategoryRoute","categoryType","enum","label","objectSpread","CreateButtonContainer","CreateButton","_ref$routeTo","routeTo","green","observer","headline","_ref$subHeadline","subHeadline","settings","useRoot","_useQuery","useQuery","CategoryListQuery","getQueryProps","suspend","loading","updateQuery","refetch","changeVisibility","useMMenuCategoryVisibility","FlexColumn","widthGrowIndex","Headline","fixedWidth","CreateButton_CreateButton","CategoryListTable_CategoryListTable","categoryId","visible","optimisticResponse","updateWareCategory","__typename","menu","category","sortCategory","MenuGuideDownloadQuery","gql","_templateObject","MenuGuideDownloadButton","black","MenuGuideDownload","branchId","companyBranch","foodMenuUrl","href","PartialDataTableContainer","MenuCategoryListPage","FullPageLayout","pageTitle","useBackButton","Card","stretchToParent","SettingsCompanyBranchPicker","organisms_CategoryList","WareCategoryTypeEnum","Main","SideDish","Cover","TopRightButtonContainer","Radiuses","Button","_categories","defineProperty","i18nMark","recipes","_recipes","getCategoryTypeLabel","getRecipeTypeLabel","recipeType","SubmitButton","_ref$isCreate","isCreate","react_form_es","render","form","FormSubmit","isFormValid","getButtonText","FormContainer","FormColumn","PictogramDisplayStyled","_ref2$fontSize","fontSize","_ref2$fontSizeUnit","fontSizeUnit","PictogramDisplay","pictogramId","_ref$fontSize","_ref$fontSizeUnit","getClassName","MenuCategoryPictogramSelect","SelectControl","pictogram","availablePictograms","formatOptionLabel","PictogramDisplay_PictogramDisplay","components","SingleValue","container","menuList","maxHeight","isSearchable","FormDeleteButton","confirmText","onDelete","react_router","history","TouchButtonDelete","goBack","FormInputInternalNote","_ref$field","_ref$label","icon","IconLine","labelWidth","FormInputTextBox","inputFullWidth","FormInputName","_ref$icon","CategoryBasicForm","Sizer","FormInputName_FormInputName","placeholder","FormInputInternalNote_FormInputInternalNote","FormInputCheckbox","MenuCategoryPictogramSelect_MenuCategoryPictogramSelect","WithSettings","FormDeleteButton_FormDeleteButton","deleteCategory","FormLoader","shouldLoad","loader","_useState","useState","_useState2","slicedToArray","values","setValues","useEffect","then","NavigateBack","ErrorPop","MenuBaseFormLoader","submitError","validationErrors","_this$state","renderSubmitError","renderValidationErrors","messages","propEq","renderPopover","index_es","open","anchorEl","document","getElementById","onClose","anchorOrigin","vertical","horizontal","message","idx","_this3","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack_NavigateBack","defaultValues","defaults","loadedDefaults","formApi","logForm","onSubmit","_callee2","_context2","onSubmitFailure","keys","logError","renderErrors","useMenu","CategoryFormLoader","MenuBaseFormLoader_MenuBaseFormLoader","createCategory","updateCategory","internalNoteLabel","nameLabel","getDefaults","client","query","MenuCategoryFormQuery","fetchPolicy","wareCategory","DataList","renderItem","listProps","renderList","formInputPriceValidate","isEmpty","validateNumber","FormInputPrice","VatsQuery","FormInputVatSelect_graphql_templateObject","QueryVat","buildQuery","css","FormInputVatSelect","WithRoot","queryProps","renderLoading","vats","formatItem","vat","FormPricingCurrencyCode","FormPricingField","priceType","FormInputPrice_FormInputPrice","FormInputVatSelect_FormInputVatSelect","MenuSuggestionPanel","onAdd","_props$addLabel","addLabel","_props$addButtonText","addButtonText","selectProps","_useStateRef","useStateRef","_useStateRef2","getSelected","setSelected","onConfirm","selected","onKeyDown","ev","onSelect","margin","getOptionLabel","disabled","RecipeAssocListTable","DataTable_DataTable","RecipeAssociatedView","recipeId","priceTypeRecipes","rejectSuggestions","reject","recipe","some","onAddRecipe","addedRecipe","warePriceType","associatedRecipe","formattedPrice","RecipeAssocListTable_RecipeAssocListTable","RecipeForm_graphql","priceTypes","WarePriceTypeEnum","Delivery","Inhouse","RecipeFormPricing","react","FormPricingField_FormPricingField","TRecipeType","RecipeAssociatedView_RecipeAssociatedView","MenuRecipeListQuery","RecipeList_graphql_templateObject","MenuRecipeFragment","QueryRecipeList","RecipeSuggestionPanel","filterRecipes","observe","Container","FormFixedRow","FormStretchedRow","SortableRecipes","RecipeRow","MoveCell","SortableRecipe","prices","foundPrice","price","formattedValue","code","internalNote","CategoryRecipesView","RecipeSuggestionPanel_RecipeSuggestionPanel","without","lockToContainerEdges","MenuCategoryPage","CategoryFormLoader_CategoryFormLoader","hideLogoutWidget","MenuCategoryPage_FormContainer","MenuCategoryPage_FormFixedRow","CategoryFormBasic_CategoryBasicForm","MenuCategoryPage_FormStretchedRow","CategoryRecipesView_CategoryRecipesView","SubmitButton_SubmitButton","DataTableContainer","MenuCategoryFilter","_useQMenuCategoryFilt","useQMenuCategoryFilter","setCategoryFilter","grouped","groupBy","cat","toString","typeString","getOptions","MenuFilterInput","modelType","model","useDebounceCallback","setFilterInput","Search","FormInputStyled","filterInput","RelativeRedirect","RecipeTypeSelection","_Component","isOpen","onOpen","RelativeRedirect_RelativeRedirect","getRecipeRoute","push","preventDefault","RecipeListTable","_ref$showTypeColumn","showTypeColumn","react_content_loader_es","ColumnRendererCode","flexGrow","ColumnRendererPrice","TPriceType","type","RecipeListLoader","categoryFilterId","filteredRecipes","useComputed","partialMatch","cond","propSatisfies","T","RecipeListTable_RecipeListTable","MenuRecipeListPage","MenuFilterInput_MenuFilterInput","RecipeTypeSelection_RecipeTypeSelection","IsCategoryType","isMain","isSideDish","isCover","currentCategories","RecipeCategoryView","noRowsText","organisms_CategorySuggestionPanel","addedCategory","FormInputCode","FormInputDescription","AllergensQuery","FormInputAllergens_graphql_templateObject","AllergenFragment","QueryAllergens","AllergenBox","MarginAroundFormComponents","active","yellow","MenuAllergenIndicator","allergens","allergen","title","extractAllergens","pipe","flatten","uniq","RecipeAllergenDisplay","AllergenIndicator_MenuAllergenIndicator","RecipeFormBasic","FormInputCode_FormInputCode","FormInputDescription_FormInputDescription","IsCategoryType_IsCategoryType","RecipeAllergenDisplay_RecipeAllergenDisplay","deleteRecipe","RecipeFormLoader","createRecipe","updateRecipe","currencyCode","queryDefaults","getPriceMap","vatId","MenuRecipeFormQuery","normalizeValues","acc","reduce","descriptionLabel","image","sourcePrices","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","recipeSource","quantity","_ref7$stockItem","stockItem","unitLabel","wareUnit","sourcePrice","currency","RecipeIngredientsTable","rowIndex","validateQuantity","fieldName","validator","isFloat","min","unselectedStockOnly","differenceWith","RecipeIngredientsView","RecipeIngredientsTable_RecipeIngredientsTable","StockList_graphql","stockItems","addedStockItem","MenuRecipePage","RecipeFormLoader_RecipeFormLoader","MenuRecipePage_FormContainer","RecipeFormBasic_RecipeFormBasic","RecipeFormPricing_RecipeFormPricing","RecipeIngredientsView_RecipeIngredientsView","RecipeCategoryView_RecipeCategoryView","StockDepositConfirmButton","numeral","format","priceFormat","1","StockDepositFilterInput","forwardRef","ref","onFilter","autoFocus","onKeyPressCapture","StockDepositQuantityInput","enabled","_onChange","StockDepositResultTable","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","indexOf","begin","substring","match","end","StockDepositControl","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","trim","head","onConfirmFilter","current","focus","onQuantity","onSelectStockItem","onDeposit","prevProps","_this$state2","hasSearchValue","isNoneFind","isMultiFind","StockDepositConfirmButton_StockDepositConfirmButton","cardName","StockDepositResultTable_StockDepositResultTable","StockDepositLoader","_useQMenuStockDeposit","useQMenuStockDeposit","changeQuantity","useMMenuStockQuantity","quantityChange","MenuStockDepositPage","StockDepositControl_StockDepositControl","StockListTable","Loading","stockAllowNegative","StockListLoader","MenuStockListQuery","filteredItems","stock","StockListTable_StockListTable","MenuStockListPage","MenuStockFormQuery","StockForm_graphql_templateObject","WareUnitFragment","MenuStockDefaultsQuery","_templateObject2","StockFormLoader","stockId","createItem","updateItem","allowNegativeDefault","getAllowNegativeDefault","allowNegative","note","plu","FieldStateEnum","Default","isEnabled","Disabled","FormInputAllergens","Enabled","FormInputAllowNegative","obj","TypeError","_objectDestructuringEmpty","labelForDefault","useMemo","FormInputPlu","WareUnitsQuery","FormInputWareUnit_graphql_templateObject","QueryWareUnits","FormInputWareUnit","wareUnits","StockFormMain","FormInputWareUnit_FormInputWareUnit","FormInputPlu_FormInputPlu","FormInputAllergens_FormInputAllergens","FormInputAllowNegative_FormInputAllowNegative","deleteItem","StockRecipesView","_useQStockRecipes","useQStockRecipes","MenuStockPage","StockFormLoader_StockFormLoader","StockFormMain_StockFormMain","StockRecipesVIew_StockRecipesView","MenuRoutes_MenuRoutes","MenuRoutes","SecureRoute","exact","path","component","params","MenuCategoryPage_MenuCategoryPage","MenuRecipePage_MenuRecipePage","MenuStockPage_MenuStockPage","NotFoundPage"],"mappings":"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","file":"static/js/176.63e92561.chunk.js","sourcesContent":["import { Trans } from '@lingui/macro'\nimport Raven from 'raven-js'\nimport React from 'react'\n\nimport { TouchButton } from '../molecules/TouchButton'\n\nexport function ShowFeedbackButton() {\n  return (\n    <TouchButton onClick={() => Raven.showReportDialog()}>\n      <Trans> Submit feedback </Trans>\n    </TouchButton>\n  )\n}\n","import { MutationFn, MutationHookOptions } from '@speedlo/graphql'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { GraphQLError } from 'graphql'\nimport React from 'react'\n\nimport { ShowFeedbackButton } from '../atoms/ShowFeedbackButton'\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\nimport { useSnackBar } from './useSnackBar'\n\ninterface IMutationGuardOptions<TData> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useMutationGuard<TData, TVariables>(\n  mutate: MutationFn<TData, TVariables>,\n  options: IMutationGuardOptions<TData> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const { enqueueSnackbar, enqueueError, enqueueWarning } = useSnackBar()\n\n  const handleUserErrors = (userErrors: ReadonlyArray<string>) => {\n    userErrors.forEach(enqueueWarning)\n  }\n\n  const handleGraphQLErrors = (errors: ReadonlyArray<GraphQLError>) => {\n    const userErrors = errors.filter(\n      RM.pathEq(['extensions', 'showToUser'], true),\n    )\n    if (userErrors.length === 0) {\n      enqueueError(defaultMessage)\n    } else {\n      handleUserErrors(userErrors.map(RM.prop('message')))\n    }\n  }\n\n  const handleError = (err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        enqueueError(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n    enqueueSnackbar(defaultMessage, {\n      action: [React.createElement(ShowFeedbackButton, { key: 'feedback' })],\n    })\n  }\n\n  return async (\n    variables: TVariables,\n    mutateOptions: MutationHookOptions<TData, TVariables> = {},\n  ) => {\n    try {\n      const result = await mutate(variables, mutateOptions)\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      if (options.getUserErrors) {\n        const userErrors = options.getUserErrors(result.data)\n        if (userErrors !== null) {\n          handleUserErrors(userErrors)\n        }\n      }\n      return result.data\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends Omit<\n      ISelectControlFlatProps<ItemType>,\n      | 'selectedItems'\n      | 'onMultiSelection'\n      | 'selectedItem'\n      | 'onSingleSelection'\n    > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n  defaultSelection?: ReadonlyArray<ItemType> | ItemType\n}\n\nexport class FormInputFlatSelect<ItemType> extends React.Component<\n  IFormInputSelectProps<ItemType>\n> {\n  static defaultProps = {\n    validationName: i18n.t`Value`,\n    getItemId: RM.prop('id'),\n  }\n  validate = value => {\n    const { isRequired, isMulti, validationName } = this.props\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && (value === null || value === undefined)) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n  getControlProps(\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> {\n    const { isMulti, items, defaultSelection, getItemId } = this.props\n\n    const selection = fieldApi.value || defaultSelection\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) =>\n        selection.includes(getItemId!(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId!))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId!(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId!(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      isClearable = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} pure={fieldIsPure} validate={this.validate}>\n        {fieldApi => (\n          <SelectControlFlat<ItemType>\n            {...this.getControlProps(fieldApi)}\n            isInvalid={Boolean(fieldApi.error)}\n            isClearable={isClearable && !isRequired}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      defaultValue,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","exports.pictograms = require('./Flaticon');","module.exports = ['pizza', 'beans', 'cheese', 'hot-pepper', 'smoking-barbecue', 'meat-pie', 'sausage', 'hot-dog', 'fruit', 'fruit-1', 'fruit-2', 'strawberry', 'soup', 'noodles', 'ramen', 'rice', 'spaghetti', 'food', 'piece-of-cake', 'beer', 'marshmallow', 'cake', 'banana-split', 'ice-cream', 'cookie', 'doughnut', 'cupcake', 'kebab', 'steak', 'fish', 'fondue', 'shrimp', 'berry', 'food', 'food-1', 'food-2', 'food-3', 'food-4', 'food-5', 'food-6', 'food-7', 'food-8', 'food-9', 'food-10', 'food-11', 'food-12', 'food-13', 'food-14', 'food-15', 'food-16', 'food-17', 'food-18', 'food-19', 'food-20', 'food-21', 'food-22', 'food-23', 'food-24', 'food-25', 'food-26', 'food-27', 'food-28', 'food-29', 'food-30', 'drink', 'drink-1', 'drink-2', 'drink-3', 'drink-4', 'drink-5', 'cup', 'cup-1', 'cup-2', 'whisky'];","import { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends Omit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.FC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <TouchButton\n      iconName=\"mode_edit\"\n      width={Spacing.ButtonHeight}\n      height={Spacing.ButtonHeight}\n      {...props}\n    />\n  </Link>\n)\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from 'react'\n\nimport { Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.FC<IProps> = ({ ...props }) => (\n  <TouchButton\n    iconName=\"remove_circle_outline\"\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors, Spacing } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.FC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <TouchButton\n    iconName=\"remove_red_eye\"\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n    color={Colors.greyMiddle}\n    {...props}\n  />\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Index,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport { NoteText } from './NoteText'\nimport Pacman from './Pacman'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  rowHeight?: number\n  isLoading?: boolean\n  heightStretch?: boolean\n  fullHeight?: boolean\n}\n\nexport const DataTable = <T extends {}>(props: IDataTableProps<T>) => {\n  const {\n    items,\n    heightStretch = false,\n    fullHeight = false,\n    rowHeight = 60,\n    isLoading = false,\n    children,\n    ...tableProps\n  } = props\n\n  const rowGetter = React.useCallback(({ index }: Index) => items[index], [\n    items,\n  ])\n\n  const noRowsRenderer = React.useCallback(\n    () => (isLoading ? <Pacman /> : null),\n    [isLoading],\n  )\n\n  const renderTable = (width: number, height: number) => {\n    return (\n      <Table\n        autoHeight={!heightStretch && !fullHeight}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowCount={items ? items.length : 0}\n        rowHeight={rowHeight}\n        rowGetter={rowGetter}\n        noRowsRenderer={noRowsRenderer}\n        style={{ outline: 'none' }}\n        {...tableProps}\n      >\n        {children}\n      </Table>\n    )\n  }\n\n  if (fullHeight) {\n    return (\n      <AutoSizer disableHeight={true}>\n        {({ width }) => renderTable(width, items.length * rowHeight)}\n      </AutoSizer>\n    )\n  }\n\n  if (heightStretch) {\n    return (\n      <AutoSizer>{({ width, height }) => renderTable(width, height)}</AutoSizer>\n    )\n  }\n\n  return (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderTable(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.PureComponent<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  rowRenderer = rowProps => {\n    return <SortableTableRowRenderer {...rowProps} />\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        lockAxis=\"y\"\n        useDragHandle={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={this.rowRenderer}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { GMenuCategoryListItem } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\n\ntype TCategory = GMenuCategoryListItem.Fragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  fullHeight?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.FC<IProps> = ({\n  categories,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  fullHeight = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    heightStretch,\n    fullHeight,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  const columns = [\n    showEditColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canQuery: 'wareCategory' },\n          ColumnRendererEdit,\n        )}\n        cellDataGetter={({ rowData }) =>\n          getCategoryRoute(rowData.id, rowData.categoryType.enum)\n        }\n      />\n    ),\n    showRemoveColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererRemove}\n        columnData={{ onRemove }}\n      />\n    ),\n    showVisibilityColumn && (\n      <Column\n        dataKey=\"visible\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canMutate: 'updateWareCategory' },\n          ColumnRendererVisibility,\n        )}\n        columnData={{ onToggle }}\n      />\n    ),\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNoteLabel' }}\n    />,\n    <Column\n      dataKey=\"countRecipes\"\n      label={i18n.t`Recipe count`}\n      width={100}\n      cellRenderer={({ cellData }) =>\n        `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n      }\n    />,\n    isSortable && (\n      <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n    ),\n  ]\n\n  if (isSortable) {\n    return React.createElement(\n      SortableDataTable,\n      {\n        onSort: onSort as any,\n        ...props,\n      },\n      ...columns,\n    )\n  }\n\n  return React.createElement(DataTable, props, ...columns)\n}\n","import { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLAnchorElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.FC<IProps> = ({\n  routeTo = 'create',\n  onClick,\n}) => (\n  <CreateButtonContainer>\n    <RelativeLink to={routeTo} onClick={onClick}>\n      <TouchButton\n        iconName=\"add_circle\"\n        color={Colors.green}\n        width={Spacing.ButtonHeight}\n        height={Spacing.ButtonHeight}\n      />\n    </RelativeLink>\n  </CreateButtonContainer>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useMMenuCategoryVisibility,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { GCategoryList } from '../../../graph/types'\nimport { useMutationGuard } from '../../../hooks/useMutationGuard'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { CategoryListQuery } from './CategoryList.graphql'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery, refetch } = useQuery<\n    GCategoryList.Query,\n    GCategoryList.Variables\n  >(CategoryListQuery, {\n    ...settings.getQueryProps({ categoryType }),\n    suspend: false,\n  })\n\n  const changeVisibility = useMutationGuard(useMMenuCategoryVisibility())\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <CreateButton routeTo={getCategoryRoute('create', categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories}\n        onToggle={(categoryId: ID, visible: boolean) => {\n          changeVisibility(\n            { categoryId, visible },\n            {\n              optimisticResponse: {\n                updateWareCategory: {\n                  __typename: 'WareCategory',\n                  id: categoryId,\n                  visible,\n                },\n              },\n            },\n          )\n        }}\n        isSortable={true}\n        showHeader={false}\n        fullHeight={true}\n        showVisibilityColumn={true}\n        onSort={async ({ item, items, offset }) => {\n          updateQuery(() => ({\n            categories: items,\n          }))\n          const result = await settings.menu.category.sortCategory(\n            item.id,\n            offset,\n          )\n          if (result) {\n            await refetch()\n          }\n          return result\n        }}\n      />\n    </>\n  )\n}\n\nexport default observer(CategoryList)\n","import gql from 'graphql-tag'\n\nexport const MenuGuideDownloadQuery = gql`\n  query QMenuGuideDownload($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      foodMenuUrl\n    }\n  }\n`\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { QMenuGuideDownload } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { MenuGuideDownloadQuery } from './MenuGuideDownload.graphql'\n\nconst MenuGuideDownloadButton = styled(TouchButton)`\n  white-space: nowrap;\n  margin-left: 2rem;\n  & a {\n    text-decoration: none;\n    color: ${Colors.black};\n    padding: 1rem;\n  }\n`\n\nexport const MenuGuideDownload = observer(() => {\n  const { settings } = useRoot()\n  const { loading, data } = useQuery<\n    QMenuGuideDownload.Query,\n    QMenuGuideDownload.Variables\n  >(MenuGuideDownloadQuery, {\n    suspend: false,\n    variables: { branchId: settings.branchId },\n  })\n  if (\n    loading ||\n    !(data && data.companyBranch && data.companyBranch.foodMenuUrl)\n  ) {\n    return null\n  }\n  return (\n    <MenuGuideDownloadButton color={Colors.greyMiddle}>\n      <a href={data.companyBranch.foodMenuUrl} target=\"_blank\">\n        <Trans>Menu codes manual</Trans>\n      </a>\n    </MenuGuideDownloadButton>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport CategoryList from '../organisms/CategoryList'\nimport { MenuGuideDownload } from '../organisms/MenuGuideDownload'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.FC = () => (\n  <>\n    <FullPageLayout\n      pageTitle={i18n.t`Category overview`}\n      useBackButton={true}\n    />\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuGuideDownload />\n          </FlexColumn>\n        </FlexRowSingle>\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0;\n  top: 0rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menutypes'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport function getCategoryTypeLabel(categoryType: TCategoryType) {\n  return i18n._(categories[categoryType])\n}\n\nexport function getRecipeTypeLabel(recipeType: TRecipeType) {\n  return i18n._(recipes[recipeType])\n}\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.FC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst PictogramDisplayStyled = styled.div`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport const PictogramDisplay: React.FC<IProps> = ({\n  pictogramId,\n  fontSize = 2,\n  fontSizeUnit = 'rem',\n}) => (\n  <PictogramDisplayStyled\n    className={getClassName(pictogramId)}\n    fontSize={fontSize}\n    fontSizeUnit={fontSizeUnit}\n  />\n)\n\nfunction getFontSize({ fontSize = 2, fontSizeUnit = 'rem' }: Partial<IProps>) {\n  return `${fontSize}${fontSizeUnit}`\n}\n\nfunction getClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.FC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value && !Array.isArray(value)) {\n            fieldApi.setValue(value.pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router-dom'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.FC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.FC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputName: React.FC<IProps> = ({\n  field = 'nameLabel',\n  icon = 'label',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputFullWidth={true}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.FC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <Sizer width={22}>\n        <FormInputName\n          placeholder={i18n.t`Category name`}\n          inputFullWidth={true}\n        />\n      </Sizer>\n      <Sizer width={22}>\n        <FormInputInternalNote placeholder={i18n.t`Category internal note`} />\n      </Sizer>\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <CardDock position=\"BottomRight\">\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </CardDock>\n  </FormContainer>\n)\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(\n    () => {\n      if (!shouldLoad) {\n        return\n      }\n      loader().then(setValues)\n    },\n    [shouldLoad],\n  )\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.FC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              const defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuCategoryForm } from '../../../graph/types'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuCategoryFormQuery } from './CategoryForm.graphql'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport type TCategoryFormValues = GMenuCategoryForm.WareCategory\n\nexport const CategoryFormLoader: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={categoryId === null}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuCategoryForm.Query>({\n          query: MenuCategoryFormQuery,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return data.wareCategory\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    categoryType: { enum: categoryType },\n    recipes: [],\n  }\n}\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  List,\n  ListProps,\n  ListRowRenderer,\n  WindowScroller,\n} from 'react-virtualized'\n\ninterface IColumn {\n  size: string\n}\n\ninterface IDataListProps<T> extends Partial<ListProps> {\n  items: ReadonlyArray<T>\n  columns?: IColumn[]\n  renderItem(item: T, index: number): ReactNode\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport function DataList<T>(props: IDataListProps<T>) {\n  const {\n    items,\n    renderItem,\n    isLoading = false,\n    heightStretch = false,\n    rowHeight = 60,\n    ...listProps\n  } = props\n\n  const rowRenderer: ListRowRenderer = React.useCallback(\n    ({ key, style, index }) => (\n      <div key={key} style={style}>\n        {renderItem(items[index], index)}\n      </div>\n    ),\n    [renderItem, items],\n  )\n\n  const renderList = (width: number, height: number) => (\n    <List\n      width={width}\n      height={height}\n      headerHeight={50}\n      rowHeight={rowHeight}\n      rowCount={items ? items.length : 0}\n      rowRenderer={rowRenderer}\n      style={{ outline: 'none' }}\n      {...listProps}\n    />\n  )\n\n  return heightStretch ? (\n    <AutoSizer>{({ width, height }) => renderList(width, height)}</AutoSizer>\n  ) : (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderList(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\ninterface IProps {\n  field: FieldType\n  className?: string\n  children?: never\n}\n\nexport const FormDisplayField: React.FC<IProps> = ({ field, className }) => {\n  return (\n    <Field field={field}>\n      {fieldApi => <span className={className}>{fieldApi.value}</span>}\n    </Field>\n  )\n}\n","import React from 'react'\nimport { isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { validateNumber } from '../../../locale/numeral'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nconst formInputPriceValidate = (value: string) => {\n  if (\n    value === undefined ||\n    isEmpty(value + '') ||\n    !validateNumber(value + '')\n  ) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.FC<IProps> = ({\n  field = 'price.value',\n  icon = 'toll',\n  ...props\n}) => (\n  <IconLine icon={icon}>\n    <Sizer width={5}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        validate={formInputPriceValidate}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import { css } from 'emotion'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.FC<IProps> = ({\n  field = 'price.vat',\n}) => (\n  <WithRoot\n    render={({ settings }) => (\n      <QueryVat\n        {...settings.queryProps}\n        renderLoading={false}\n        render={({ vats }) => (\n          <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n            {vats && (\n              <FormInputFlatSelect\n                field={field}\n                items={vats}\n                formatItem={({ vat }) => `${vat}%`}\n                isRequired={true}\n                validationName={i18n.t`VAT`}\n              />\n            )}\n          </IconLine>\n        )}\n      />\n    )}\n  />\n)\n","import React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormDisplayField } from '../../../atoms/FormDisplayField'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nconst FormPricingCurrencyCode = styled(FormDisplayField)`\n  padding: 0.5rem;\n`\n\nexport const FormPricingField: React.FC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormPricingCurrencyCode field=\"currencyCode\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import { useStateRef } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: string }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(\n    () => {\n      const selected = getSelected()\n      if (selected !== null) {\n        onAdd(selected)\n        setSelected(null)\n      }\n    },\n    [onAdd],\n  )\n\n  const onKeyDown = useCallback((ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === 'Enter') {\n      onConfirm()\n    }\n  }, [])\n\n  const onSelect = useCallback(option => {\n    setSelected(option || null)\n  }, [])\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.prop('nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.FC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.FC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                {...settings.queryProps}\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.FC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GMenuRecipeList } from '../../../graph/types'\nimport { MenuRecipeFragment } from '../models/MenuRecipeModel.graphql'\n\nexport const MenuRecipeListQuery = gql`\n  query GMenuRecipeList(\n    $branchId: ID!\n    $categoryId: ID\n    $categoryType: WareCategoryTypeEnum\n  ) {\n    recipes(\n      companyBranch: $branchId\n      wareCategory: $categoryId\n      wareCategoryType: $categoryType\n    ) {\n      ...GMenuRecipe\n    }\n  }\n  ${MenuRecipeFragment}\n`\n\nexport const QueryRecipeList = buildQuery<\n  GMenuRecipeList.Query,\n  GMenuRecipeList.Variables\n>(MenuRecipeListQuery)\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { QueryRecipeList } from './RecipeList.graphql'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  filterRecipes,\n  onAdd,\n}) => (\n  <WithSettings\n    observe={true}\n    render={settings => (\n      <QueryRecipeList\n        {...settings.getQueryProps({ categoryType })}\n        fetchPolicy=\"cache-and-network\"\n        render={({ recipes }) => (\n          <MenuSuggestionPanel<TRecipe>\n            options={filterRecipes(recipes)}\n            onAdd={onAdd}\n          />\n        )}\n      />\n    )}\n  />\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { DataList } from '../../../atoms/DataList'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { priceTypes } from './RecipeFormPricing'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n`\n\nconst FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\n\nconst FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  margin: 1rem 0 0 1rem;\n`\n\nconst SortableRecipes = SortableContainer(FormStretchedRow)\n\nconst RecipeRow = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: ${Spacing.ButtonColumnWidthPx}px 100px 3fr 1fr 1fr 50px;\n`\n\nconst MoveCell = styled.div`\n  cursor: move;\n`\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IRecipeRow {\n  recipe: TRecipe\n  onRemove(): void\n}\n\nconst SortableRecipe = SortableElement<IRecipeRow>(({ recipe, onRemove }) => {\n  const prices = priceTypes.map(({ priceType, label }) => {\n    const foundPrice = recipe.prices.find(\n      RM.pathEq(['priceType', 'enum'], priceType),\n    )\n    return (\n      <MoveCell key={priceType}>\n        <NoteText>{i18n._(label)}</NoteText>\n        {foundPrice ? (\n          foundPrice.price.formattedValue\n        ) : (\n          <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n        )}\n      </MoveCell>\n    )\n  })\n\n  return (\n    <RecipeRow>\n      <div>\n        <TouchButtonRemove onClick={onRemove} />\n      </div>\n      <MoveCell>{recipe.code}</MoveCell>\n      <MoveCell>\n        {recipe.nameLabel}\n        <NoteText>{recipe.internalNote}</NoteText>\n      </MoveCell>\n      {prices}\n      <DragHandle />\n    </RecipeRow>\n  )\n})\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<TRecipe>>) => {\n        const recipes = fieldApi.value\n        const onHandleSorting: SortEndHandler = async ({\n          newIndex,\n          oldIndex,\n        }) => {\n          if (newIndex === oldIndex) {\n            return\n          }\n          const sortedItems = arrayMove(\n            recipes as TRecipe[],\n            oldIndex,\n            newIndex,\n          )\n\n          fieldApi.setValue(sortedItems)\n        }\n        return (\n          <Container>\n            <FormFixedRow>\n              <RecipeSuggestionPanel\n                categoryType={categoryType}\n                filterRecipes={RM.without(fieldApi.value)}\n                onAdd={addedRecipe =>\n                  fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n                }\n              />\n            </FormFixedRow>\n            <SortableRecipes\n              lockAxis=\"y\"\n              lockToContainerEdges={true}\n              onSortEnd={onHandleSorting}\n            >\n              <DataList\n                items={fieldApi.value}\n                heightStretch={true}\n                rowHeight={60}\n                renderItem={(recipe, index) => (\n                  <SortableRecipe\n                    recipe={recipe}\n                    onRemove={() => {\n                      fieldApi.setValue(\n                        RM.reject(RM.propEq('id', recipe.id), fieldApi.value),\n                      )\n                    }}\n                    index={index}\n                  />\n                )}\n                rowCount={fieldApi.value.length}\n              />\n            </SortableRecipes>\n          </Container>\n        )\n      }}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { getCategoryTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n}) => (\n  <CategoryFormLoader categoryId={categoryId} categoryType={categoryType}>\n    <>\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      />\n\n      <PageLayoutFullHeightItem>\n        <FormContainer>\n          <FormFixedRow>\n            <Card>\n              <CategoryBasicForm categoryType={categoryType} />\n            </Card>\n          </FormFixedRow>\n          <FormStretchedRow>\n            <Card stretchToParent={true}>\n              <Headline>\n                <Trans>Recipes assigned to this category</Trans>\n              </Headline>\n              <CategoryRecipesView categoryType={categoryType} />\n            </Card>\n          </FormStretchedRow>\n        </FormContainer>\n      </PageLayoutFullHeightItem>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={\n            categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n          }\n        >\n          <SubmitButton isCreate={categoryId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </>\n  </CategoryFormLoader>\n)\n","import styled from 'styled-components'\n\nexport const DataTableContainer = styled.div`\n  height: calc(100% - 4.5rem);\n  padding-top: 2rem;\n`\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  QMenuCategoryFilterCategories,\n  useQMenuCategoryFilter,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { getCategoryTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\n\ntype TCategory = QMenuCategoryFilterCategories\n\nexport const MenuCategoryFilter = observer(() => {\n  const {\n    settings: {\n      menu: { recipe },\n    },\n  } = useRoot()\n\n  const { data, loading } = useQMenuCategoryFilter({\n    branchId: recipe.branchId,\n  })\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return []\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TRecipeType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        key={recipe.branchId}\n        onChange={value => {\n          recipe.setCategoryFilter(value ? (value as TCategory).id : null)\n        }}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={true}\n        isSearchable={true}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.prop('nameLabel')}\n      />\n    </Sizer>\n  )\n})\n","import { Search } from '@material-ui/icons'\nimport { useDebounceCallback } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <Sizer width={17}>\n        <FormInputStyled\n          defaultValue={model.filterInput}\n          inputFullWidth={true}\n          onChange={ev => onChange(ev.target.value)}\n          placeholder={i18n.t`Filter by name or code`}\n        />\n      </Sizer>\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport { Redirect, RedirectProps } from 'react-router-dom'\n\nimport { resolveLocation } from './RelativeLink'\n\ninterface IProps extends RedirectProps {}\n\nexport const RelativeRedirect: React.FC<IProps> = ({ to, from, ...props }) => (\n  <Redirect\n    to={resolveLocation(to, from || `${location.pathname}/`)}\n    from={from}\n    {...props}\n  />\n)\n","import { Trans } from '@lingui/macro'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport React, { Component } from 'react'\n\nimport { RelativeRedirect } from '../../../atoms/RelativeRedirect'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\nimport { CreateButton } from './CreateButton'\n\ninterface IProps {}\n\ninterface IState {\n  isOpen: boolean\n  recipeType: Maybe<WareCategoryTypeEnum>\n}\n\nexport class RecipeTypeSelection extends Component<IProps, IState> {\n  state = { isOpen: false, recipeType: null }\n  onClose = () => {\n    this.setState({ isOpen: false })\n  }\n  onOpen = () => {\n    this.setState({ isOpen: true })\n  }\n  onSelect = (recipeType: WareCategoryTypeEnum) => () => {\n    this.setState({ isOpen: true, recipeType })\n  }\n  render() {\n    const { isOpen, recipeType } = this.state\n    return (\n      <>\n        {recipeType !== null && (\n          <RelativeRedirect\n            to={getRecipeRoute('create', recipeType)}\n            push={true}\n          />\n        )}\n        <CreateButton\n          onClick={ev => {\n            ev.preventDefault()\n            this.onOpen()\n          }}\n        />\n        <Dialog open={isOpen} onClose={this.onClose}>\n          <DialogTitle>Select item type</DialogTitle>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Main)}>\n            <Trans>Ware</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.SideDish)}>\n            <Trans>Sidedish</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Cover)}>\n            <Trans>Cover</Trans>\n          </TouchButton>\n        </Dialog>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeList } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TPriceType } from '../menutypes'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\n\ntype TRecipe = GMenuRecipeList.Recipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.FC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  return (\n    <DataTable {...props}>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n    </DataTable>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GMenuRecipeList } from '../../../graph/types'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\nimport { MenuRecipeListQuery } from './RecipeList.graphql'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GMenuRecipeList.Query,\n    GMenuRecipeList.Variables\n  >(MenuRecipeListQuery, {\n    ...settings.getQueryProps({\n      categoryId: settings.menu.recipe.categoryFilterId,\n    }),\n    suspend: false,\n    fetchPolicy: 'cache-and-network',\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data || !data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuCategoryFilter } from '../molecules/MenuCategoryFilter'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const MenuRecipeListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"recipe\" />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuCategoryFilter />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createRecipe\">\n          <RecipeTypeSelection />\n        </CanMutate>\n        <DataTableContainer>\n          <RecipeListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.FC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GCategoryList, GMenuCategoryListItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { CategoryListQuery } from './CategoryList.graphql'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = GMenuCategoryListItem.Fragment\n\nconst CategorySuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GCategoryList.Query,\n    GCategoryList.Variables\n  >(CategoryListQuery, {\n    ...settings.getQueryProps({ categoryType }),\n    fetchPolicy: 'cache-and-network',\n    suspend: false,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <MenuSuggestionPanel<TCategory>\n      isLoading={loading}\n      options={RM.without(currentCategories, categories)}\n      addButtonText={addButtonText}\n      onAdd={onAdd}\n    />\n  )\n}\n\nexport default observer(CategorySuggestionPanel)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuCategoryListItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport CategorySuggestionPanel from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\nexport const RecipeCategoryView: React.FC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<GMenuCategoryListItem.Fragment[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.FC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        isRequired={true}\n        validatioName={i18n.t`Code`}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.FC<IProps> = ({\n  field = 'descriptionLabel',\n  icon = 'label_outline',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GAllergens } from '../../../graph/types'\nimport { AllergenFragment } from '../graph/AllergenFragment.graphql'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...GAllergen\n    }\n  }\n  ${AllergenFragment}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/generated'\nimport { Colors, Spacing } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.FC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nconst extractAllergens = RM.pipe(\n  RM.map(RM.prop('allergens')),\n  // @ts-ignore Something wrong with Ramda typings\n  RM.flatten,\n  RM.uniq,\n)\n\nexport const RecipeAllergenDisplay: React.FC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = extractAllergens(value)\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.FC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon=\"error_outline\">\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <CardDock position=\"BottomRight\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </CardDock>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.FC<IProps> = ({\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={recipeId === null}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const { vats, currencyCode } = await menu.recipe.queryDefaults()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: vats[priceType],\n          currencyCode,\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.FC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInputTextBox\n            field={['ingredients', rowIndex, 'quantity']}\n            validate={validateQuantity}\n            inputFullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\nimport { QueryMenuStockList } from './StockList.graphql'\n\ninterface IProps {}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsView: React.FC<IProps> = () => (\n  <WithSettings\n    observe={false}\n    render={settings => (\n      <Field field=\"ingredients\">\n        {(fieldApi: IFieldApi<TIngredient[]>) => (\n          <>\n            <RecipeIngredientsTable\n              ingredients={fieldApi.value}\n              onRemove={stockItem => {\n                fieldApi.setValue(\n                  RM.reject(RM.propEq('stockItem', stockItem), fieldApi.value),\n                )\n              }}\n            />\n            <QueryMenuStockList\n              {...settings.queryProps}\n              render={({ stockItems }) => (\n                <MenuSuggestionPanel<GMenuStockItem.Fragment>\n                  addButtonText={i18n.t`Add ingredient`}\n                  options={unselectedStockOnly(stockItems, fieldApi.value)}\n                  onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n                    fieldApi.setValue([\n                      ...fieldApi.value,\n                      {\n                        stockItem: addedStockItem.id,\n                        label: addedStockItem.nameLabel,\n                        quantity: 1,\n                        unitLabel: addedStockItem.wareUnit.code,\n                        allergens: addedStockItem.allergens.map(\n                          RM.prop('enum'),\n                        ),\n                      },\n                    ])\n                  }}\n                />\n              )}\n            />\n          </>\n        )}\n      </Field>\n    )}\n  />\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getRecipeTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: WareCategoryTypeEnum\n}\n\nconst FormContainer = styled('div')`\n  margin: 0 1.25rem 0 0;\n`\n\nexport const MenuRecipePage: React.FC<IProps> = ({ recipeId, recipeType }) => (\n  <RecipeFormLoader recipeId={recipeId} recipeType={recipeType}>\n    <FormContainer>\n      <FullPageLayout\n        width={16}\n        pageTitle={getRecipeTypeLabel(recipeType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <Card>\n          <RecipeFormBasic recipeType={recipeType} />\n        </Card>\n        <Card>\n          <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n        </Card>\n        <Card>\n          <Headline>\n            <Trans>Recipe ingredients</Trans>\n          </Headline>\n          <VerticalGap />\n          <RecipeIngredientsView />\n        </Card>\n        <IsCategoryType type={recipeType} isMain={true}>\n          <Card>\n            <Headline>\n              <Trans>Sidedish categories</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>These sidedish are presented with recipe</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.SideDish}\n              field=\"sideDishes\"\n              addButtonText={i18n.t`Attach sidedish category`}\n              noRowsText={i18n.t`Recipe has no sidedish category attached`}\n            />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Category assignments</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>Recipe is in these categories</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.Main}\n              field=\"categories\"\n              addButtonText={i18n.t`Add to category`}\n              noRowsText={i18n.t`Recipe is not in any category`}\n            />\n          </Card>\n        </IsCategoryType>\n      </FullPageLayout>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n        >\n          <SubmitButton isCreate={recipeId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </FormContainer>\n  </RecipeFormLoader>\n)\n","import { Trans } from '@lingui/macro'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { GWareUnit } from '../../../graph/types'\nimport { priceFormat } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<GWareUnit.Fragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.FC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format(priceFormat)} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { QMenuStockDepositStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: QMenuStockDepositStockItems[]\n  onSelect(stockItem: QMenuStockDepositStockItems): void\n}\n\nexport const StockDepositResultTable: React.FC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTableContainer>\n    <DataTable items={stockItems} heightStretch={false}>\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererSelect}\n        columnData={{ onSelect }}\n      />\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n      <Column\n        dataKey=\"code\"\n        width={100}\n        label={i18n.t`Card code`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Card name`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n    </DataTable>\n  </DataTableContainer>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <TouchButton\n      iconName=\"done\"\n      width={Spacing.ButtonHeight}\n      height={Spacing.ButtonHeight}\n      onClick={() => onSelect(rowData)}\n    />\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  componentDidUpdate(prevProps: IProps) {\n    if (prevProps.stockItems !== this.props.stockItems) {\n      this.onFilter(this.state.searchValue)\n    }\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { observer } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QMenuStockDepositStockItems,\n  useMMenuStockQuantity,\n  useQMenuStockDeposit,\n} from '../../../graph/generated'\n\nexport type TStockItem = QMenuStockDepositStockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader = observer<IProps>(({ children }) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockDeposit(undefined, settings.queryProps)\n  const changeQuantity = useMMenuStockQuantity()\n  const onDeposit: TDepositFn = (stockItem, quantity) => {\n    changeQuantity({\n      stockItem: stockItem.id,\n      quantityChange: quantity,\n    })\n  }\n  return children(loading ? [] : data.stockItems, onDeposit)\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.FC<IProps> = props => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock deposit`}\n    useBackButton={true}\n  >\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { GMenuStockList } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\n\ntype TStockItem = GMenuStockList.StockItems\n\ninterface IProps {\n  stockItems: TStockItem[]\n  isLoading: boolean\n}\n\nexport const StockListTable: React.FC<IProps> = ({ stockItems, isLoading }) => (\n  <DataTable\n    items={stockItems}\n    heightStretch={true}\n    noRowsRenderer={() =>\n      isLoading ? (\n        <Loading />\n      ) : (\n        <h3>\n          <Trans>Selected branch has no stock cards</Trans>\n        </h3>\n      )\n    }\n  >\n    <Column\n      dataKey=\"id\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={checkColumnAccess(\n        { canQuery: 'stockItem' },\n        ColumnRendererEdit,\n      )}\n    />\n    <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      minWidth={30}\n      flexGrow={2}\n      label={i18n.t`Card name`}\n    />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"allowNegative\"\n      width={300}\n      label={i18n.t`Negative stock`}\n      cellRenderer={stockAllowNegative}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GMenuStockList } from '../../../graph/types'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuStockListQuery } from './StockList.graphql'\nimport { StockListTable } from './StockListTable'\n\nexport const StockListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GMenuStockList.Query,\n    GMenuStockList.Variables\n  >(MenuStockListQuery, {\n    ...settings.queryProps,\n    suspend: false,\n  })\n\n  const filteredItems = useComputed(\n    () => {\n      if (!data || !data.stockItems || data.stockItems.length === 0) {\n        return []\n      }\n      const searchValue = settings.menu.stock.filterInput\n      const partialMatch = isPartialMatch(searchValue)\n      return data.stockItems.filter(\n        RM.cond([\n          [RM.propEq('plu', searchValue), RM.T],\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.stockItems],\n  )\n\n  return <StockListTable stockItems={filteredItems} isLoading={loading} />\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\n\nexport const MenuStockListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"stock\" />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createStockItem\">\n          <CreateButton routeTo=\"create\" />\n        </CanMutate>\n        <DataTableContainer>\n          <StockListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GMenuStockForm } from '../../../graph/types'\nimport { AllergenFragment } from '../graph/AllergenFragment.graphql'\nimport { WareUnitFragment } from '../graph/WareUnitFragment.graphql'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...GWareUnit\n      }\n      allergens {\n        ...GAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${AllergenFragment}\n  ${WareUnitFragment}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  WareUnitEnum,\n} from '../../../graph/generated'\nimport { GMenuStockDefaults, GMenuStockForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.FC<IProps> = ({ stockId, children }) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={stockId === null}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId: stockId! },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n  icon?: string\n}\n\nexport const FormInputAllergens: React.FC<IProps> = ({\n  field = 'allergens',\n  icon = 'error_outline',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={icon} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.FC<IProps> = ({}) => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputPlu: React.FC<IProps> = ({\n  field = 'plu',\n  icon = 'fingerprint',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {\n  icon?: string\n}\n\nexport const FormInputWareUnit: React.FC<IProps> = ({\n  field = 'wareUnit',\n  icon = 'select_all',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={icon} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.FC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <CardDock position=\"BottomRight\">\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </CardDock>\n  </FormContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Column, ColumnRendererEdit, DataTable } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport Pacman from '../../../atoms/Pacman'\nimport { useQStockRecipes } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  stockId: ID\n}\n\nexport const StockRecipesView: React.FC<IProps> = ({ stockId }) => {\n  const { data, loading } = useQStockRecipes({\n    stockId,\n  })\n\n  if (loading) {\n    return <Pacman />\n  }\n\n  const {\n    stockItem: { ingredients },\n  } = data\n  if (ingredients.length === 0) {\n    return (\n      <Headline>\n        <Trans>No recipes are using stock card</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      <Headline>\n        <Trans>Recipes using this card</Trans>\n      </Headline>\n\n      <DataTable\n        items={[...ingredients]}\n        disableHeader={true}\n        fullHeight={true}\n      >\n        <Column\n          dataKey=\"\"\n          cellDataGetter={({ rowData }) => ({\n            pathname: `/settings/menu/recipe/${rowData.recipe.id}`,\n            state: { recipeType: rowData.recipe.recipeType.enum },\n          })}\n          cellRenderer={ColumnRendererEdit}\n          width={100}\n        />\n        <Column\n          dataKey=\"recipe\"\n          width={300}\n          label={i18n.t`Name`}\n          cellRenderer={({ rowData }) => (\n            <>\n              {rowData.recipe.nameLabel}\n              <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n            </>\n          )}\n        />\n      </DataTable>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const MenuStockPage: React.FC<IProps> = ({ stockId }) => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock card`}\n    hideLogoutWidget={true}\n    useBackButton={true}\n  >\n    <StockFormLoader stockId={stockId}>\n      <>\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              stockId === null ? 'createStockItem' : 'updateStockItem'\n            }\n          >\n            <SubmitButton isCreate={stockId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n        <Card>\n          <StockFormMain />\n          {stockId && (\n            <CanQuery queryName=\"recipes\">\n              <StockRecipesView stockId={stockId} />\n            </CanQuery>\n          )}\n        </Card>\n      </>\n    </StockFormLoader>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MenuRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      render={() => <Redirect to={`${match.path}/category`} />}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/category`}\n      component={MenuCategoryListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/category/:categoryId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuCategoryPage\n          categoryId={params.categoryId === 'create' ? null : params.categoryId}\n          categoryType={state.categoryType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/recipe`}\n      component={MenuRecipeListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/recipe/:recipeId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuRecipePage\n          recipeId={params.recipeId === 'create' ? null : params.recipeId}\n          recipeType={state.recipeType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/stock`}\n      component={MenuStockListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/deposit`}\n      component={MenuStockDepositPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/:stockId`}\n      render={({ match: { params } }) => (\n        <MenuStockPage\n          stockId={params.stockId === 'create' ? null : params.stockId}\n        />\n      )}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default MenuRoutes\n"],"sourceRoot":""}