{"version":3,"sources":["atoms/IconLine.tsx","hooks/useAccessGuard.ts","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/SelectControlFlat.tsx","atoms/HorizontalSeparator.tsx","hooks/useAutorunWhenSingleBranch.ts","atoms/FormGrid.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","atoms/ScrollArea.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","atoms/CardDock.tsx","hooks/useOnConnectionRestored.ts","atoms/TimeBadge.tsx","atoms/LinkStyled.tsx","../node_modules/@material-ui/icons/esm/CancelOutlined.js","segments/order/atoms/DeliveryTimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/atoms/OrderStarIndicator.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","segments/order/organisms/OrderListBranchFilter.tsx","assets/orderNotification.mp3","../node_modules/@material-ui/icons/esm/AccessTime.js","../node_modules/@material-ui/icons/esm/Note.js","../node_modules/@material-ui/icons/esm/Star.js","molecules/OrderNotificationSound.tsx","segments/kitchen/atoms/KitchenInfoMessage.tsx","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenOrderWareLine.tsx","segments/kitchen/organisms/KitchenOrderWareList.tsx","segments/kitchen/molecules/KitchenOrderStarIndicator.tsx","../node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","segments/kitchen/molecules/KitchenSetStateButton.tsx","segments/kitchen/molecules/KitchenCompletionOrderBox.tsx","segments/kitchen/organisms/KitchenCompletionOrderListLoader.tsx","segments/kitchen/organisms/KitchenCompletionOrderList.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/molecules/KitchenOrderDetail.tsx","segments/kitchen/molecules/KitchenOrderBox.tsx","segments/kitchen/organisms/KitchenOrderListLoader.tsx","segments/kitchen/organisms/KitchenOrderList.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/pages/KitchenCompletionOverviewPage.tsx","segments/kitchen/routes/KitchenRouting.tsx"],"names":["StyledIconLine","styled","div","labelMargin","labelWidth","labelWidthUnits","StyledGridDescription","mediaMobile","replace","StyledGridContent","IconLine","icon","label","Spacing","DefaultSizeUnit","labelSmallCaps","children","iconComponent","logError","Error","isInFormGrid","useFormGridCheck","descriptionPart","color","Colors","greyDark","className","cn","smallCaps","useAccessGuard","queries","mutations","user","useRoot","every","canQuery","canMutate","useCanQuery","useCanMutate","CanMutate","observer","mutationName","getControlStyles","width","minWidth","invalid","border","red","backgroundColor","errorBackground","greyMiddle","margin","MarginAroundFormComponents","undefined","composeSelectControlStyles","outerStyles","control","base","state","controlStyles","selectProps","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","props","styles","NoAccess","StyledPageLayoutFullHeightItem","mediaDesktop","widthInColumns","LayoutGridCellMargin","column","row","rowInMobile","forcePercentHeightInMobile","PageHeaderHeight","PageLayoutFullHeightItem","withScrollArea","scrollAreaId","forceHeightInMobile","isMobile","useResponsive","id","height","heightUnit","StyledSelectControlFlat","textColor","SelectControlFlat","items","formatItem","RM","prop","isMulti","isClearable","isInvalid","selectedItem","selectedItems","onSingleSelection","onMultiSelection","hasSingleItem","length","isItemSelected","item","Array","isArray","contains","equals","updateSelection","without","concat","interactive","active","onClick","map","idx","formatted","key","HorizontalSeparatorStyled","greyLight","HorizontalSeparator","visible","useAutorunWhenSingleBranch","onSingleBranch","React","useEffect","autorun","isReady","hasSingleBranch","branches","StyledFormGrid","formGridCounter","formGridContext","createContext","FormGrid","Provider","value","useContext","CompanyBranchFlatSelect","selectedBranch","selectedBranches","title","brand","name","CompanyBranchPicker","breakpoint","hideWhenSingleBranch","onSelectionChange","onSelectionClear","getDropdownProps","isSelected","branch","includes","find","filter","selected","CompanyBranchDropdown","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","Object","resolve","module","exports","ScrollArea","CursorContainer","cursor","CompanyBranch","short","showBrand","substr","ClearIndicator","getStyles","innerProps","ref","restInnerProps","style","padding","placeholder","i18n","ButtonHeight","options","getOptionValue","formatOptionLabel","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","onChange","selection","head","CardDock","position","useOnConnectionRestored","cb","useDisposable","whenGoingOnline","ETimeBadgeVariant","StyledTimeBadge","white","variants","UNKNOWN","CRITICAL","WARNING","orange","NORMAL","green","bigNumberStyle","css","dashStyle","clickable","TimeBadge","forwardRef","minutes","variant","Variant","output","extraClassNames","push","toString","cx","heartBeat","pulse","LinkStyled","a","createSvgIcon","createElement","Fragment","fill","d","opacity","cancelIconPadding","StyledDelayedTimeMark","DeliveryTimeBadge","deliverAt","deliveredAt","isCancelled","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","CancelOutlined","role","aria-label","differenceInMinutes","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","StyledOrderStarIndicator","OrderStarIndicator","data-testid","Icon","Star","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","companyBranch","Date","delayedDeliveryTime","sector","deliveryType","enum","DeliveryTypeEnum","Pickup","address","original","formatAddress","isPriority","totalSum","formattedValue","isPaidWithCard","CurrentNoteStyled","span","PreviousNoteStyled","NoteLine","note","previousNote","Note","OrderListBranchFilter","list","setBranchFilter","useObserver","from","clearBranchFilter","OrderNotificationSound","memo","shouldPlay","config","useIntervalSound","soundUrl","orderNotificationSound","intervalSec","orderListSoundIntervalSec","KitchenInfoMessage","Circle","Small","CheckedInner","TouchCheckButton","isChecked","firstSideDishStyle","OrderWareLineWrap","isFirstSidedish","IsDoneContainerStyled","CodeContainerStyled","FontSizes","CompactCardBig","NameContainerStyled","KitchenOrderWareLine","recipeId","isDone","isCheckable","useMKitchenRecipeState","updateOrderRecipeState","OrderRecipeStateEnum","Preparing","Cooked","KitchenOrderWareList","orderWares","orderWare","recipe","nameLabel","orderRecipeState","sidedishes","sidedish","index","StyledKitchenOrderStarIndicator","KitchenOrderStarIndicator","KitchenSetStateButton","orderId","setState","useMOrderState","acceptOrder","TouchButton","KeyboardArrowRight","StyledKitchenCompletionOrderBox","CompactCard","greyDarkest","Middle","KitchenCompletionOrderBox","orderNumber","orderOrigin","cashBox","orderStateCategory","OrderStateCategoryEnum","ReadyToDeliver","NewOrders","OrderStateEnum","Accepted","Finished","requiredCategories","loaderContext","loading","noFilter","orders","sortForCompletion","sortWith","descend","ascend","either","KitchenCompletionOrderListLoader","orderModel","hasBranchFilter","useQKitchenCompletionOrderList","branchesFilter","categories","skip","updateQuery","refetch","useSKitchenCompletionOrderList","onSubscriptionData","dataUpdate","subscriptionData","prev","update","updatedOrder","orderExists","unshift","handleSubscriptionUpdate","KitchenCompletionOrderList","category","categoryOrders","propEq","shouldPlayNotification","Label","DeliveryTime","DeliverLabel","deliverType","KitchenOrderAtSummary","deliverTime","AccessTime","formatTimeWithoutTodayDate","StyledOrderDetailContainer","KitchenOrderDetail","InProduce","StyledKitchenOrderBox","KitchenOrderBox","href","sortByPriority","KitchenOrderListLoader","useQKitchenOrderList","useSKitchenOrderList","KitchenOrderList","StyledKitchenFilterContainer","KitchenCategorySeparator","KitchenOverviewPage","PageLayoutResponsive","pageTitle","useBackButton","showSoundControl","PageLayoutGridItem","gridRowInMobile","KitchenCompletionOverviewPage","KitchenRouting","SecureRoute","exact","path","ROUTE_KITCHEN","component","ROUTE_KITCHEN_COMPLETION","NotFoundPage"],"mappings":"mrCAqBA,IAAMA,EAAiBC,IAAOC,IAAV,IAIN,qBAAGC,aACA,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,gBAAf,gBACRD,GADQ,OACKC,KAoBhBC,EAAwBL,IAAOC,IAAV,IAEf,qBAAGC,aAUXI,YAZuB,IAef,qBAAGJ,YAA8BK,QAAQ,OAAQ,aAIvDC,EAAoBR,IAAOC,IAAV,KAKVQ,EAA6B,SAAC,GAQpC,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MAMI,IALJR,kBAKI,MALS,EAKT,MAJJC,uBAII,MAJcQ,IAAQC,gBAItB,MAHJX,mBAGI,MAHU,uBAGV,MAFJY,sBAEI,SADJC,EACI,EADJA,SAEIC,EAAgBN,EACA,kBAATA,IACTO,YAAS,sDAAD,OACgDP,EADhD,qDAGRM,EAAgBE,KAElB,IAAMC,EAAeC,cAEfC,EACJ,oCACE,kBAAC,IAAD,CAAMX,KAAMM,EAAeM,MAAOC,IAAOC,WACxCb,EACC,yBAAKc,UAAWC,YAAG,QAAS,CAAEC,UAAWb,KACtCH,GAED,MAIR,OAAOQ,EACL,oCACE,kBAACd,EAAD,CAAuBH,YAAaA,GACjCmB,GAEH,kBAACb,EAAD,KAAoBO,IAGtB,kBAAChB,EAAD,CACEI,WAAYA,EACZC,gBAAiBA,EACjBF,YAAaA,GAEb,yBAAKuB,UAAU,eAAeJ,GAC9B,yBAAKI,UAAU,YAAYV,M,kCClHjC,4GAEO,SAASa,EACdC,EACAC,GACU,IACFC,EAASC,cAATD,KACR,OAAOF,EAAQI,MAAMF,EAAKG,WAAaJ,EAAUG,MAAMF,EAAKI,WAGvD,SAASC,IAAmC,IAAD,uBAAnBP,EAAmB,yBAAnBA,EAAmB,gBAChD,OAAOD,EAAeC,EAAS,IAG1B,SAASQ,IAAsC,IAAD,uBAArBP,EAAqB,yBAArBA,EAAqB,gBACnD,OAAOF,EAAe,GAAIE,K,kCCf5B,gFAUaQ,EAAYC,YAAiB,YAAiC,IAA9BC,EAA6B,EAA7BA,aAAczB,EAAe,EAAfA,SAEzD,OADkBsB,YAAaG,GAE7B,oCAAGzB,GAEH,kBAAC,IAAD,qCAAoCyB,O,mqBCDxC,SAASC,EAAT,GAI8B,IAH5BC,EAG2B,EAH3BA,MACAC,EAE2B,EAF3BA,SAYA,OAAO,EAAP,IARc,IAFa,EAD3BC,QAIM,CACEC,OAAO,aAAD,OAAetB,IAAOuB,KAC5BC,gBAAiBxB,IAAOyB,iBAE1B,CACEH,OAAO,aAAD,OAAetB,IAAO0B,aAEpC,CAEEC,OAAQtC,IAAQuC,2BAChBT,WAAiBU,IAAVV,EAAA,UAAyBA,EAAzB,OAAsC,OAC7CC,cAAuBS,IAAbT,EAAA,UAA4BA,EAA5B,OAA4C,SAInD,IAAMU,EAA6B,eAACC,EAAD,uDAA6B,GAA7B,YACrCA,EADqC,CAExCC,QAAS,SAACC,EAAMC,GACd,IAAMC,EAAa,KAAQF,EAAR,GAAiBf,EAAiBgB,EAAME,cAC3D,OAAOL,EAAYC,QACfD,EAAYC,QAAQG,EAAeD,GACnCC,GAENE,KAAM,SAACJ,EAAMC,GAAW,IAELf,EACbe,EADFE,YAAejB,MAEXmB,EAAU,KACXL,EADW,CAEdM,OAAQ,GACRxC,MAAOC,IAAOwC,MACdrB,WAAiBU,IAAVV,EAAA,UAAyBA,EAAzB,OAAsC,SAE/C,OAAOY,EAAYM,KAAON,EAAYM,KAAKC,EAAYJ,GAASI,GAElEG,eAAgB,SAACR,EAAMC,GAAW,IAEfQ,EACbR,EADFE,YAAeM,UAEXC,EAAoB,KACrBV,EADqB,CAExBS,eAAyBb,IAAda,EAAA,UAA6BA,EAA7B,OAA8C,OACzDE,eAAyBf,IAAda,EAA0B,SAAW,WAElD,OAAOX,EAAYU,eACfV,EAAYU,eAAeE,EAAsBT,GACjDS,MAID,SAASE,EACdC,GAEA,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQjB,EAA2BgB,EAAMC,a,kCC7E/C,yCAQaC,EAA6B,SAAC,GAAD,EAAGxD,SAAH,OAKpC,O,mdCKN,IAoDMyD,EAAiCxE,IAAOC,IAAV,qFAAGD,CAAH,YAGhCyE,YAHgC,IAlCR,SAACJ,GAC3B,YAA6BjB,IAAzBiB,EAAMK,eAEN,SACAL,EAAMK,eACN,gBAGA9D,IAAQ+D,qBACR,IAGK,qBAAuB/D,IAAQ+D,qBAAuB,MA3B3C,SAACN,GACrB,YAAqBjB,IAAjBiB,EAAMO,OAEN,SACAP,EAAMO,OACN,gBAGAhE,IAAQ+D,qBACR,IAGK/D,IAAQ+D,sBAkBE,SAACN,GACpB,YAAkBjB,IAAdiB,EAAMQ,IAEN,SACAR,EAAMQ,IACN,mBAGAjE,IAAQ+D,qBACR,IAIA,oBAAqC/D,IAAQ+D,qBAAuB,MAgBtErE,YAVgC,IAYpB,qBAAGwE,aAGL,gBACRC,EADQ,EACRA,2BADQ,OAGRA,EAA0B,eACdA,EADc,gBACoBnE,IAAQoE,iBAChD,IACApE,IAAQC,gBAHY,KAItB,WAKGoE,EAET,SAAC,GASE,IARLlE,EAQI,EARJA,SAQI,IAPJ8D,WAOI,MAPE,EAOF,MANJC,mBAMI,MANU,GAMV,MALJF,cAKI,MALK,EAKL,MAJJF,sBAII,MAJa,GAIb,MAHJQ,sBAGI,SAFJC,EAEI,EAFJA,aAC4BC,EACxB,EADJL,2BAEQM,EAAaC,cAAbD,SAER,OACE,kBAACb,EAAD,CACEI,OAAQA,EACRC,IAAKA,EACLC,YAAaA,EACbJ,eAAgBA,EAChBQ,eAAgBA,EAChBH,2BAA4BK,GAE3BF,IAAmBG,EAClB,kBAAC,IAAD,CAAYE,GAAIJ,GAAepE,GAE/B,kBAAC,IAAD,CAAOyE,OAAQ,IAAKC,WAAW,KAC5B1E,M,0lBCvGX,IAAM2E,EAA0B1F,IAAOC,IAAV,IACzB,SAACoE,GAAD,UAEO,gBAAGsB,EAAH,EAAGA,UAAH,OAAoBA,GAAwB,WAc9BpE,IAAO0B,YAanB2C,EAAoB,SAC/BvB,GACI,IAEFwB,EAUExB,EAVFwB,MAFC,EAYCxB,EATFyB,kBAHC,MAGYC,IAAGC,KAAK,eAHpB,IAYC3B,EARF4B,eAJC,WAYC5B,EAPF6B,mBALC,WAYC7B,EANF8B,iBANC,SAODC,EAKE/B,EALF+B,aACAC,EAIEhC,EAJFgC,cACAC,EAGEjC,EAHFiC,kBACAC,EAEElC,EAFFkC,iBACAZ,EACEtB,EADFsB,UAGIa,EAAiC,IAAjBX,EAAMY,OAStBC,EAAiB,SAACC,GACtB,OAAqB,IAAjBd,EAAMY,SAINR,GAAWW,MAAMC,QAAQR,GACpBN,IAAGe,SAASH,EAAMN,GAEpBN,IAAGgB,OAAOX,EAAcO,KAG3BK,EAAkB,SAACL,GACnBH,IAGS,OAATG,EACEV,GAAWM,EACbA,EAAiB,IACRD,GACTA,EAAkB,MAEXL,GAAWM,EAChBG,EAAeC,GACjBJ,EACEK,MAAMC,QAAQR,GACVN,IAAGkB,QAAQ,CAACN,GAAON,GACnB,CAACM,IAGPJ,EACEK,MAAMC,QAAQR,GAAiBN,IAAGmB,OAAOb,EAAe,CAACM,IAAS,IAG7DL,GACTA,EAAkBK,KAGtB,OACE,kBAACjB,EAAD,CACEjE,UAAWC,YAAG,CACZkB,QAASuD,EACTgB,aAAcX,IAEhBb,UAAWA,GAEVO,GACC,yBACEzE,UAAWC,YAAG,CAAE0F,SArDlBnB,EACKW,MAAMC,QAAQR,IAAkBA,EAAcI,OAAS,EAExC,OAAjBL,QAA0ChD,IAAjBgD,KAmD1BiB,QAAS,WACPL,EAAgB,QAGlB,kBAAC,QAAD,CAAOzB,GAAG,iCAGbM,EAAMyB,IAAI,SAACX,EAAMY,GAEhB,IAAMC,EAAY1B,EAAWa,GAC7B,OACE,yBACEc,IAAKF,EACL9F,UAAWC,YAAG,CAAE0F,OAAQV,EAAeC,KACvCU,QAAS,WACPL,EAAgBL,KAGjBa,Q,2OCrIb,IAAME,EAA4B1H,IAAOC,IAAV,IACLsB,IAAOoG,WAIpBC,EAAwC,SAAC,GAAD,QAAGC,QAAH,qBACzC,kBAACH,EAAD,MAAgC,O,kCCf5C,oEAMO,SAASI,EACdC,GACC,IACOhG,EAASC,cAATD,KACRiG,IAAMC,UAAU,kBACdC,kBAAQ,WACFnG,EAAKoG,SAAWpG,EAAKqG,iBACvBL,EAAehG,EAAKsG,SAAS,U,mSCRrC,IAAMC,EAAiBtI,IAAOC,IAAV,iEAAGD,CAAH,0IAMhBM,YANgB,MAchBiI,EAAkB,EAChBC,EAAkBR,IAAMS,cAAcF,GAE/BG,EAA6B,SAAArE,GACxC,OACE,kBAACiE,EAAD,KACE,kBAACE,EAAgBG,SAAjB,CAA0BC,QAASL,GAChClE,EAAMtD,YAMR,SAASK,IACd,OAAO4G,IAAMa,WAAWL,GAAmB,I,0GC1BhCM,EAA8D,SAAC,GAAD,IACzET,EADyE,EACzEA,SACAU,EAFyE,EAEzEA,eACAC,EAHyE,EAGzEA,iBAHyE,IAIzErD,iBAJyE,MAI7DpE,IAAOwC,MAJsD,EAKtEM,EALsE,mFAOzE,kBAACuB,EAAA,EAAD,eACEC,MAAOwC,EACPjC,aAAc2C,EACd1C,cAAe2C,EACfrD,UAAWA,EACXG,WAAY,SAAAa,GAAI,OAAI,0BAAMsC,MAAOtC,EAAKuC,MAAMC,MAAOxC,EAAKwC,QACpD9E,KCpBR,gCAqCO,IAAM+E,EAA2D,SAAC,GAWlE,IAAD,IAVJC,kBAUI,MAVS,EAUT,EATJhB,EASI,EATJA,SASI,IARJW,wBAQI,MARe,GAQf,MAPJ/C,eAOI,aANJC,mBAMI,aALJoD,4BAKI,SAJJ3D,EAII,EAJJA,UACA4D,EAGI,EAHJA,kBACAC,EAEI,EAFJA,iBAEI,IADJC,wBACI,MADe,iBAAO,IACtB,EACI1H,EAASC,cAATD,KAEF2H,EAAa,SAAAC,GAAM,OAAIX,EAAiBY,SAASD,EAAOpE,KAExDlB,EAAkC,CACtCsB,YACAO,cACAD,UACAoC,SAAUA,GAAYtG,EAAKsG,SAC3BU,eAAgBhH,EAAKsG,SAASwB,KAAKH,IAAe,KAClDV,iBAAkBjH,EAAKsG,SAASyB,OAAOJ,GACvCpD,kBAPsC,SAOpByD,GACC,OAAbA,GAAqBP,EACvBA,IACsB,OAAbO,GAAqBR,GAC9BA,EAAkB,CAACQ,EAASxE,IAAK,CAACwE,KAGtCxD,iBAdsC,SAcrBwD,GACS,IAApBA,EAAStD,QAAgB+C,EAC3BA,IACSO,EAAStD,QAAU8C,GAC5BA,EAAkBQ,EAASzC,IAAIvB,IAAGC,KAAK,OAAQ+D,KAKrD,OAAIhI,EAAKqG,iBAAmBkB,EACnB,KAGLvH,EAAKsG,SAAS5B,OAAS4C,EAClB,kBAAC,EAA4BhF,GAG/B,kBAAC2F,EAAA,EAAD,iBAA2B3F,EAAWoF,Q,qBCpF/C,IAAInC,EAAM,CACT,WAAY,KACZ,WAAY,KACZ,WAAY,KACZ,WAAY,KACZ,WAAY,MAIb,SAAS2C,EAAeC,GACvB,IAAI3E,EAAK4E,EAAsBD,GAC/B,OAAOE,EAAoB7E,GAE5B,SAAS4E,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE/C,EAAK4C,GAAM,CACpC,IAAII,EAAI,IAAIpJ,MAAM,uBAAyBgJ,EAAM,KAEjD,MADAI,EAAEC,KAAO,mBACHD,EAEP,OAAOhD,EAAI4C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKlD,IAEpB2C,EAAeS,QAAUP,EACzBQ,EAAOC,QAAUX,EACjBA,EAAe1E,GAAK,M,qBC1BpB,IAAI+B,EAAM,CACT,oBAAqB,KACrB,mBAAoB,KACpB,wBAAyB,KACzB,kBAAmB,MAIpB,SAAS2C,EAAeC,GACvB,IAAI3E,EAAK4E,EAAsBD,GAC/B,OAAOE,EAAoB7E,GAE5B,SAAS4E,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE/C,EAAK4C,GAAM,CACpC,IAAII,EAAI,IAAIpJ,MAAM,uBAAyBgJ,EAAM,KAEjD,MADAI,EAAEC,KAAO,mBACHD,EAEP,OAAOhD,EAAI4C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKlD,IAEpB2C,EAAeS,QAAUP,EACzBQ,EAAOC,QAAUX,EACjBA,EAAe1E,GAAK,M,gOCvBb,IAAMsF,E,MAAa7K,EAAOC,IAAV,M,6KCEhB,IAAM6K,E,MAAkB9K,EAAOC,IAAV,IAChB,oBAAG8K,OAAH,kBAAY,UAAZ,ICOCC,EAA+C,SAAC,GAAD,IAC1DrB,EAD0D,EAC1DA,OACAtC,EAF0D,EAE1DA,QAF0D,IAG1D4D,aAH0D,aAI1DC,iBAJ0D,gBAM1D,kBAACJ,EAAD,CAAiBC,OAAO,UAAU1D,QAASA,GACxC4D,EACCtB,EAAOR,KAAKgC,OAAO,EAAG,GAEtB,oCACE,8BAAOxB,EAAOR,MACb+B,GAAa,0CAAYvB,EAAOT,MAAMC,KAAzB,S,8RCFtB,IAAMiC,EAAiB,SAAA/G,GAAU,IAE7BgH,EAEEhH,EAFFgH,UAF4B,EAI1BhH,EADFiH,WAAcC,EAHc,EAGdA,IAAQC,EAHM,uBAK9B,OACE,yCACMA,EADN,CAEED,IAAKA,EACLE,MAAOJ,EAAU,iBAAkBhH,KAEnC,yBAAKoH,MAAO,CAAEC,QAAS,YACrB,kBAAC,QAAD,eAMK1B,EAA0C,SAAC,GAAD,IACrD3B,EADqD,EACrDA,SACAU,EAFqD,EAErDA,eACAzC,EAHqD,EAGrDA,kBACA0C,EAJqD,EAIrDA,iBACAzC,EALqD,EAKrDA,iBACGlC,EANkD,8GAQrD,kBAACD,EAAA,EAAD,eACEwE,MAAOvE,EAAM4B,QAAU+C,EAAmBD,EAC1C4C,YACEtH,EAAM4B,QAAU2F,EAAA,EAAK,EAAD,sBAAyBA,EAAA,EAAK,EAAD,mBAEnD3H,UAAWrD,IAAQiL,aACnBC,QAASzD,EACT0D,eAAgBhG,IAAGC,KAAK,MACxBgG,kBAAmB,SAAArC,GAAM,OAAI,kBAAC,EAAD,CAAeA,OAAQA,KACpDsC,aAAc,SAACtC,EAAQuC,GAAT,OACZvC,EAAOwC,KAAKhD,KACTiD,oBACAxC,SAASsC,EAASE,sBAEvBC,mBAAoBhI,EAAM4B,QAC1BqG,WAAY,CACVlB,kBAEF9G,OAAQ,CACNiI,eAAgB,SAAA/I,GAAI,O,qVAAA,IACfA,EADe,CAElBuH,OAAQ,cAGZyB,SAAU,SAAAC,GACJpI,EAAM4B,SAAWM,GAAoBK,MAAMC,QAAQ4F,IACrDlG,EAAiBkG,IAEdpI,EAAM4B,SAAWK,IAChBM,MAAMC,QAAQ4F,GAChBnG,EAAkBP,IAAG2G,KAAKD,IAAc,MAExCnG,EAAmBmG,GAAwC,SAI7DpI,M,sEC9EKsI,E,MAAW3M,EAAOC,IAAV,+DAAGD,CAAH,+BAEjB,gBAAG4M,EAAH,EAAGA,SAAH,MACa,gBAAbA,GAA2C,eAAbA,EAC1B,YACA,UACJ,gBAAGA,EAAH,EAAGA,SAAH,MACa,eAAbA,GAA0C,YAAbA,EACzB,UACA,c,kCCfR,qDAIO,SAASC,EAAwBC,GACtCC,YAAc,kBAAMC,YAAgBF,O,wGCC1BG,E,6WAAAA,O,qBAAAA,I,uBAAAA,I,qBAAAA,I,oBAAAA,M,KAeZ,IAAMC,EAAkBlN,IAAOC,IAAV,kEAAGD,CAAH,oLAOVuB,IAAO4L,MACF5L,IAAO0B,YAKjBmK,GAAQ,mBACXH,EAAkBI,QAAUrN,YAAOkN,GADxB,0DACiBlN,CADjB,qBAEXiN,EAAkBK,SAAWtN,YAAOkN,GAFzB,2DAEkBlN,CAFlB,oBAGIuB,IAAOuB,MAHX,cAKXmK,EAAkBM,QAAUvN,YAAOkN,GALxB,0DAKiBlN,CALjB,+CAMIuB,IAAOiM,OACZjM,IAAOwC,QAPN,cAUXkJ,EAAkBQ,OAASzN,YAAOkN,GAVvB,yDAUgBlN,CAVhB,oBAWIuB,IAAOmM,QAXX,GAeRC,EAAiBC,YAAH,KAGdC,EAAYD,YAAH,KAITE,EAAYF,YAAH,KAIFG,EAAY/F,IAAMgG,WAC7B,WAAqDzC,GAAS,IAA3D0C,EAA0D,EAA1DA,QAASxM,EAAiD,EAAjDA,UAAWV,EAAsC,EAAtCA,SAAUmN,EAA4B,EAA5BA,QAAS7G,EAAmB,EAAnBA,QAClC8G,EAAUf,EAASc,GACrBE,EAASrN,EACPsN,EAAkB,CAAC,YAezB,YAdgBjL,IAAZ6K,KACEA,EAAU,IAAMA,GAAW,IAC7BI,EAAgBC,KAAKX,GAEnBM,GAAW,IACbG,EAAS,SACTC,EAAgBC,KAAKT,IAErBO,EAASH,EAAQM,YAGjBlH,GACFgH,EAAgBC,KAAKR,GAGrB,kBAACK,EAAD,CACE5C,IAAKA,EACL9D,IAAKwG,EACL5G,QAASA,EACT5F,UAAW+M,IAAE,WAAF,GACT/M,EACA,CACEgN,UAAWP,IAAYjB,EAAkBK,UAAYW,EAAW,EAChES,MAAOR,IAAYjB,EAAkBM,UAJ9B,OAMNc,KAGJD,M,6VC3FF,IAAMO,E,MAAa3O,EAAO4O,EAAV,M,6ECAR,SAAAC,EAAA,GAAc,IAAMC,cAAc,IAAMC,SAAU,KAAM,IAAMD,cAAc,OAAQ,CACjGE,KAAM,OACNC,EAAG,kBACHC,QAAS,QACP,IAAMJ,cAAc,OAAQ,CAC9BG,EAAG,uOACA,kB,2LCUL,IAAME,EAAoBvB,YAAH,KAGjBwB,EAAwBpP,IAAOC,IAAV,wEAAGD,CAAH,2GACXuB,IAAO4L,MACD5L,IAAO0B,YAOhBoM,EAAuD,SAAC,GAM9D,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,YAII,IAHJC,mBAGI,aAFJC,iBAEI,SADJpI,EACI,EADJA,QAEMqI,IAAiBH,GAAeC,GAChCG,EAAMC,YAAS,CAAEC,SAAUC,IAAQC,QAASL,IAE9CxB,EAAUjB,IAAkBI,QAEhC,GAAImC,EACF,OACE,kBAACzB,EAAA,EAAD,CAAWG,QAASA,EAASzM,UAAW0N,GACtC,kBAACa,EAAD,OAKN,IAAKV,EACH,OACE,kBAACvB,EAAA,EAAD,CAAWG,QAASA,GAClB,0BAAM+B,KAAK,MAAMC,aAAW,WAA5B,WAON,IAAMjC,EAAUkC,8BAAoBb,EAAWC,GAAeI,GAU9D,OAPEzB,EADED,EAAU,GACFhB,IAAkBQ,OACnBQ,EAAU,EACThB,IAAkBM,QAElBN,IAAkBK,SAI5B,oCACGmC,GAAa,kBAACL,EAAD,MACd,kBAACrB,EAAA,EAAD,CAAWE,QAASA,EAASC,QAASA,EAAS7G,QAASA,O,kCCzE9D,oDAQa+I,EAAiD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC5DA,EACE,wCACEA,EAASC,SAAT,UACOD,EAASE,UADhB,YAC6BF,EAASC,UAClCD,EAASG,aACPH,EAASG,aAAaC,MADxB,KAKN,wC,8TCXJ,IAAMC,EAA2B1Q,IAAOC,IAAV,KAOjB0Q,EAA+B,WAC1C,OACE,kBAACD,EAAD,CAA0BE,cAAY,sBACpC,kBAACC,EAAA,EAAD,CAAMnQ,KAAMoQ,IAAMxP,MAAOC,IAAOiM,W,0oDCMtC,IAAMuD,EAAoB/Q,YAAOgR,UAAPhR,CAAH,IAICiR,IAAM1P,IAAO2P,WAC9BC,MAAM,KACNC,SAGiBH,IAAM1P,IAAO2P,WAC9BC,MAAM,IACNC,UAIDC,EAA+BrR,IAAOC,IAAV,KAO5BqR,EAAmCtR,IAAOC,IAAV,KAGhCsR,EAAgCvR,IAAOC,IAAV,KAI7BuR,EAAkCxR,IAAOC,IAAV,KAI/BwR,EAAuBzR,IAAOC,IAAV,KAKpByR,EAAiB1R,IAAOC,IAAV,IAcQsB,IAAOiM,QAM7BmE,EAAiB3R,IAAOC,IAAV,IACTsB,IAAOiM,QAGLoE,EAA0B5R,IAAOC,IAAV,IAGR4R,IAASC,KACfvQ,IAAOmM,MAClBnM,IAAO4L,OAGZ4E,EAAgB/R,IAAOC,IAAV,IAERsB,IAAOyQ,QAGLC,EAA2C,SAAC,GAKlD,IAJLC,EAII,EAJJA,MACA1C,EAGI,EAHJA,YACA2C,EAEI,EAFJA,WACA9K,EACI,EADJA,QAoBA,OACE,kBAAC0J,EAAD,CAAmB1J,QAASA,EAAS8B,KAAI,gBAAW+I,EAAM3M,KACvD4M,GACC,kBAACP,EAAD,KACGM,EAAME,cAAcjJ,MAIzB,kBAACkI,EAAD,KACE,kBAACC,EAAD,KACE,kBAACjC,EAAA,EAAD,CACEC,UAAW4C,EAAM5C,UAAY,IAAI+C,KAAKH,EAAM5C,WAAa,KACzDC,YAAa2C,EAAM3C,YAAc,IAAI8C,KAAKH,EAAM3C,aAAe,KAC/DC,YAAaA,EACbC,UAAyC,OAA9ByC,EAAMI,uBAIrB,kBAACf,EAAD,KAnCiB,OAAjBW,EAAMK,OACDL,EAAMK,OAAOpJ,KAGpB+I,EAAMM,cACNN,EAAMM,aAAaC,OAASC,IAAiBC,OAG3C,kBAACZ,EAAD,KACE,kBAAC,QAAD,mBAIFG,EAAMU,QAAQC,SAAiBX,EAAMU,QAAQC,SAC1CC,YAAcZ,EAAMU,UAyBvB,kBAACpB,EAAD,KACE,kBAACpB,EAAA,EAAD,CAAkBC,SAAU6B,EAAM7B,YAGpC,kBAACoB,EAAD,KACGS,EAAMa,YAAc,kBAAC,EAAD,MACpBb,EAAMc,SAASC,eACff,EAAMgB,gBACL,oCACE,kBAACxB,EAAD,CAAgBd,cAAY,aAC5B,kBAACe,EAAD,KACE,kBAAC,QAAD,oB,uVC7IhB,IAAMwB,EAAoBnT,IAAOoT,KAAV,IACZ7R,IAAOiM,QAEZ6F,EAAqBrT,IAAOoT,KAAV,IACb7R,IAAOC,UAIL8R,EAAqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OAChDD,GAAQC,EACN,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAU9S,KAAM+S,IAAMvT,YAAY,KAChC,kBAACiT,EAAD,KACGI,GAAQ,IAAK,EAAD,gBAAiBnH,qBAEhC,kBAACiH,EAAD,KAAqBG,KAGvB,O,kCCjCN,gGAUaE,EAET,WAAO,IACDxB,EAAUlQ,cAAVkQ,MAMR,OAJApK,YAA2B,SAAA6B,GACzBuI,EAAMyB,KAAKC,gBAAgB,CAACjK,EAAOpE,OAG9BsO,YAAY,kBACjB,kBAAC,IAAD,CACE7K,iBAAkBpC,MAAMkN,KAAK5B,EAAMyB,KAAKtL,UACxCkB,kBAAmB,SAAAlB,GACjB6J,EAAMyB,KAAKC,gBAAgBvL,IAE7BmB,iBAAkB0I,EAAMyB,KAAKI,kBAC7BpO,UAAWpE,IAAO2P,UAClBjL,SAAS,EACTC,aAAa,EACboD,sBAAsB,Q,qBC7B5BqB,EAAOC,QAAU,IAA0B,+C,kCCA3C,4BAEe,gBAAc,IAAMkE,cAAc,IAAMC,SAAU,KAAM,IAAMD,cAAc,OAAQ,CACjGG,EAAG,oJACD,IAAMH,cAAc,OAAQ,CAC9BG,EAAG,8CACA,e,kCCNL,4BAEe,gBAAc,IAAMH,cAAc,IAAMC,SAAU,KAAM,IAAMD,cAAc,OAAQ,CACjGG,EAAG,iHACD,IAAMH,cAAc,OAAQ,CAC9BE,KAAM,OACNC,EAAG,qBACA,S,kCCPL,4BAEe,gBAAc,IAAMH,cAAc,IAAMC,SAAU,KAAM,IAAMD,cAAc,OAAQ,CACjGG,EAAG,6FACD,IAAMH,cAAc,OAAQ,CAC9BE,KAAM,OACNC,EAAG,mBACA,S,2NCGQ+E,EAAyBhM,IAAMiM,KAAa,YAAqB,IAAlBC,EAAiB,EAAjBA,WAClDC,EAAWnS,cAAXmS,OACR,OAAOC,YAAiB,CACtBC,SAAUC,IACVC,YAAaJ,EAAOK,0BACpBN,iB,2GCbG,IAAMO,EAAqBzU,IAAOC,IAAV,K,+gBCQ/B,IAAMyU,EAAS1U,IAAOC,IAAV,IACIsB,IAAO4L,MACD5L,IAAOmM,MAKV9M,IAAQ+T,OAErBC,EAAe5U,IAAOC,IAAV,IACFsB,IAAOmM,OAcVmH,EAAqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWzN,EAAd,EAAcA,QAAd,OAChD,kBAACqN,EAAD,CAAQrN,QAASA,GAAUyN,GAAa,kBAACF,EAAD,Q,ilBChB1C,IAAMG,EAAqBnH,YAAH,KAIlBoH,EAAoBhV,IAAOC,IAAV,IAGnB,SAACoE,GAAD,OACAA,EAAM4Q,iBAAmBF,IAGvBG,EAAwBlV,IAAOC,IAAV,KAGrBkV,EAAsBnV,IAAOC,IAAV,IAEVmV,IAAUC,eACd9T,IAAOwC,OAGZuR,EAAsBtV,IAAOC,IAAV,IAEdsB,IAAO0B,YAILsS,EAAyC,SAAC,GAOhD,IANLC,EAMI,EANJA,SACAjL,EAKI,EALJA,KACA5J,EAII,EAJJA,MACA8U,EAGI,EAHJA,OACAC,EAEI,EAFJA,YAEI,IADJT,uBACI,WAC6BU,cAA1BC,EADH,oBAGJ,OACE,kBAACZ,EAAD,CAAmBC,gBAAiBA,GAClC,kBAACC,EAAD,KACGQ,GACC,kBAAC,EAAD,CACEZ,UAAWW,EACXpO,QAAS,WACHmO,GACFI,EAAuB,CACrBJ,WACA/R,MAAOgS,EACHI,IAAqBC,UACrBD,IAAqBE,aAOrC,kBAACZ,EAAD,KAAsB5K,GACtB,kBAAC+K,EAAD,KAAsB3U,KChEfqV,EAAyC,SAAC,GAGhD,IAFLC,EAEI,EAFJA,WACAP,EACI,EADJA,YA0BA,OAAO,6BAAMO,EAAW3O,IAxBL,SAAC4O,GAAD,OACjB,kBAAC,WAAD,CAAUzO,IAAKyO,EAAU3Q,IACvB,kBAAC,EAAD,CACEiQ,SAAUU,EAAU3Q,GACpBgF,KAAM2L,EAAUC,OAAO5L,KACvB5J,MAAOuV,EAAUC,OAAOC,UACxBX,OAAQS,EAAUG,iBAAiB5D,OAASoD,IAAqBE,OACjEL,YAAaA,IAEf,oCACGQ,EAAUI,WAAWhP,IAAI,SAACiP,EAAUC,GAAX,OACxB,kBAAC,EAAD,CACE/O,IAAG,UAAKyO,EAAU3Q,GAAf,YAAqBgR,EAAShR,IACjCiQ,SAAUe,EAAShR,GACnBgF,KAAI,WAAMgM,EAASJ,OAAO5L,MAC1B5J,MAAO4V,EAASJ,OAAOC,UACvBX,QAAQ,EACRC,aAAa,EACbT,gBAA2B,IAAVuB,GAAed,Y,4LC1B5C,IAAMe,EAAkCzW,IAAOC,IAAV,KAQxByW,EAAsC,WACjD,OACE,kBAACD,EAAD,CAAiC7F,cAAY,6BAC3C,kBAACC,EAAA,EAAD,CAAMvP,MAAOC,IAAOiM,OAAQ9M,KAAMoQ,Q,SChBzB,UAAAjC,GAAA,GAAc,IAAMC,cAAc,IAAMC,SAAU,KAAM,IAAMD,cAAc,OAAQ,CACjGG,EAAG,2DACD,IAAMH,cAAc,OAAQ,CAC9BE,KAAM,OACNC,EAAG,qBACA,sB,qBCOQ0H,GAA0C,SAAC,GAIjD,IAHLC,EAGI,EAHJA,QACAtV,EAEI,EAFJA,MACAuV,EACI,EADJA,SACI,EACkBC,eAAfC,EADH,oBAGJ,OACE,kBAACzU,GAAA,EAAD,CAAWE,aAAa,iBACtB,kBAACwU,GAAA,EAAD,CACEtW,KAAMuW,GACNvU,MAAO9B,IAAQiL,aAAejL,IAAQC,gBACtCS,MAAOA,EACP+F,QAAS,WACP0P,EAAY,CAAEH,UAASnT,MAAOoT,SCL3BK,GAAkClX,IAAOC,IAAV,sFAAGD,CAAH,ghBAC7BoV,IAAU+B,YACH5V,IAAO4L,MAClB5L,IAAO6V,YACCvF,IAASC,KACTlR,IAAQyW,OACTzW,IAAQyW,OACNzW,IAAQyW,OAUV9V,IAAOiM,OACZjM,IAAO4L,MAEU0E,IAASC,KAMrBvQ,IAAO0B,WACZ1B,IAAO4L,MASP5L,IAAOwC,MAKNnD,IAAQyW,QAITC,GAA8C,SAAC,GAGrD,IAFLpF,EAEI,EAFJA,MACAC,EACI,EADJA,WAEA,OACE,kBAAC+E,GAAD,CAAiCtG,cAAY,aAC1CuB,GACC,kBAAC,IAAD,KACGD,EAAME,cAAcjJ,MAGzB,yBAAK1H,UAAU,UACb,yBAAKA,UAAU,iBAAiByQ,EAAMqF,aACtC,yBAAK9V,UAAU,iBAAf,UAAmCyQ,EAAMsF,YAAYjN,KAArD,YACoB,OAAlB2H,EAAMuF,QAAmBvF,EAAMuF,QAAQlS,GAAK,KAE7C2M,EAAMK,QACL,yBAAK9Q,UAAU,iBAAiByQ,EAAMK,OAAOpJ,MAE9C+I,EAAMa,YAAc,kBAAC,EAAD,OAGvB,yBAAKtR,UAAU,kBACb,kBAAC,EAAD,CACEwU,WAAY/D,EAAMrM,MAClB6P,YACExD,EAAMwF,qBAAuBC,IAAuB7B,WACpD5D,EAAMwF,qBAAuBC,IAAuBC,kBAKzD1F,EAAMwF,qBAAuBC,IAAuBE,WACnD,kBAAClL,EAAA,EAAD,CAAUC,SAAS,eACjB,kBAAC,GAAD,CACEgK,QAAS1E,EAAM3M,GACfjE,MAAOC,IAAOmM,MACdmJ,SAAUiB,IAAeC,YAK9B7F,EAAMwF,qBAAuBC,IAAuBC,gBACnD,kBAACjL,EAAA,EAAD,CAAUC,SAAS,eACjB,kBAAC,GAAD,CACEgK,QAAS1E,EAAM3M,GACfjE,MAAOC,IAAOuB,IACd+T,SAAUiB,IAAeE,c,oBCnG/BC,GAAqB,CACzBN,IAAuBE,UACvBF,IAAuB7B,UACvB6B,IAAuBC,gBAWnBM,GAAgBlQ,IAAMS,cAA8B,CACxD0P,SAAS,EACTC,UAAU,EACVC,OAAQ,KAGGC,GAAoBvS,MAAGwS,SAA0C,CAC5ExS,MAAGyS,QAAQzS,MAAGC,KAAK,eACnBD,MAAG0S,OAAO1S,MAAGC,KAAK,gBAClBD,MAAG0S,OAAO1S,MAAG2S,OAAO3S,MAAGC,KAAK,aAAcD,MAAGC,KAAK,iBAGvC2S,GAA6CpW,YAAS,SAAA8B,GAAU,IAC5DuU,EAAe5W,cAAtBkQ,MACFkG,GAAYQ,EAAWjF,KAAKkF,gBAFwC,EAQtEC,aACF,CACEzQ,SAAUuQ,EAAWjF,KAAKoF,eAC1BC,WAAYf,IAEd,CAAEgB,KAAMb,IATRjM,EAJwE,EAIxEA,KACAgM,EALwE,EAKxEA,QACAe,EANwE,EAMxEA,YACAC,EAPwE,EAOxEA,QA0BF,OAlBAtM,aAAwBsM,GAExBC,aACE,CACE/Q,SAAUuQ,EAAWjF,KAAKoF,eAE1BC,WAAYf,GAAmB/Q,OAAOyQ,IAAuBK,WAE/D,CACEiB,KAAMb,EACNiB,mBAFF,YAEkE,IAAjBC,EAAgB,EAA1CC,iBAAoBpN,KACnCmN,GACFJ,EAAY,SAAAM,GAAI,OAuB1B,SACEC,EACAD,GACC,IACOtH,EAAUuH,EAAOC,aAAjBxH,MACR,IAAKA,EACH,OAAOsH,EAET,IAAKvB,GAAmBrO,SAASsI,EAAMwF,oBACrC,MAAO,CAAEW,OAAQmB,EAAKnB,OAAOvO,OAAO,SAAAO,GAAC,OAAIA,EAAE9E,KAAO2M,EAAM3M,MAE1D,IAAIoU,GAAc,EACZtB,EAASmB,EAAKnB,OAAO/Q,IAAI,SAAA+C,GAC7B,OAAIA,EAAE9E,KAAO2M,EAAM3M,IACjBoU,GAAc,EACPzH,GAEF7H,IAEJsP,GACHtB,EAAOuB,QAAQ1H,GAEjB,MAAO,CAAEmG,UA7CmBwB,CAAyBP,EAAYE,QAO/D,kBAACtB,GAAcvP,SAAf,CACEC,MAAO,CACLuP,UACAC,WACAC,OAAQF,EAAU,GAAKG,GAAkBnM,EAAKkM,UAG/ChU,EAAMtD,YCnEN,IAAM+Y,GAA6BvX,YAAiB,YAAmB,IAAhBwX,EAAe,EAAfA,SAC7CnB,EAAe5W,cAAtBkQ,MADmE,EDyEpElK,IAAMa,WAAWqP,ICvEhBC,EAFmE,EAEnEA,QAASC,EAF0D,EAE1DA,SAAUC,EAFgD,EAEhDA,OAE3B,GAAID,EACF,OACE,kBAAC3D,EAAD,KACE,kBAAC,QAAD,yBAKN,GAAI0D,EACF,OACE,kBAAC1D,EAAD,KACE,kBAAC,QAAD,iBAKN,IAAMuF,EAAiB3B,EAAOvO,OAC5B/D,IAAGkU,OAAO,qBAAsBF,IAGlC,GAA8B,IAA1BC,EAAevT,OACjB,OAAQsT,GACN,KAAKpC,IAAuBE,UAC1B,OACE,kBAACpD,EAAD,KACE,kBAAC,QAAD,uBAGN,KAAKkD,IAAuB7B,UAC1B,OACE,kBAACrB,EAAD,KACE,kBAAC,QAAD,+BAGN,KAAKkD,IAAuBC,eAC1B,OACE,kBAACnD,EAAD,KACE,kBAAC,QAAD,gCAGN,QACE,OACE,kBAACA,EAAD,KACE,kBAAC,QAAD,mBAMV,IAAMyF,EACJH,IAAapC,IAAuBE,WAAamC,EAAevT,OAAS,EAE3E,OACE,yBAAKmK,cAAA,qBAA2BmJ,IAC7BC,EAAe1S,IAAI,SAAA4K,GAAK,OACvB,kBAAC,GAAD,CACEzK,IAAKyK,EAAM3M,GACX2M,MAAOA,EACPC,WAAYyG,EAAWjF,KAAKoF,eAAetS,OAAS,MAGxD,kBAACuN,EAAD,CAAwBE,WAAYgG,O,+UCpE1C,IAAMC,GAAQna,IAAOoT,KAAV,KACA7R,IAAOC,UAEZ4Y,GAAepa,IAAOC,IAAV,KACPsB,IAAOwC,OAMZsW,GAAe,SAAC,GACpB,OADwC,EAAlBC,aAEpB,IAAK,gBACH,OACE,kBAACH,GAAD,KACE,kBAAC,QAAD,uBAGN,IAAK,2BACH,OACE,kBAACA,GAAD,KACE,kBAAC,QAAD,oBAGN,IAAK,WACH,OACE,kBAACA,GAAD,KACE,kBAAC,QAAD,4BAGN,QACE,OAAO,OAIAI,GAA0C,SAAC,GAGjD,IAFLC,EAEI,EAFJA,YACAF,EACI,EADJA,YAEA,OACE,kBAAC7Z,GAAA,EAAD,CAAUC,KAAM+Z,KAAYva,YAAY,KACtC,kBAAC,GAAD,CAAcoa,YAAaA,IAC1BE,GACC,kBAACJ,GAAD,KAAeM,aAA2BF,MClC5CG,GAA6B3a,IAAOC,IAAV,6EAAGD,CAAH,uDAKnB4a,GAAuC,SAAC,GAAD,IAAG1I,EAAH,EAAGA,MAAH,OAClD,kBAACyI,GAAD,KACE,kBAAC/S,GAAA,EAAD,MACCsK,EAAMa,YAAc,kBAAC,EAAD,MACrB,kBAAC,EAAD,CACEkD,WAAY/D,EAAMrM,MAClB6P,YACExD,EAAMwF,qBAAuBC,IAAuB7B,WACpD5D,EAAMwF,qBAAuBC,IAAuBC,iBAGxD,kBAAChQ,GAAA,EAAD,MACA,kBAAC,GAAD,CACE4S,YAAatI,EAAM5C,UACnBgL,YACEpI,EAAMM,cACNN,EAAMM,aAAaC,OAASC,IAAiBC,OACzC,WACA,kBAGR,kBAACW,GAAA,EAAD,CAAUC,KAAMrB,EAAMqB,KAAMC,aAActB,EAAMsB,eAC/CtB,EAAMwF,qBAAuBC,IAAuBE,WACnD,kBAAClL,EAAA,EAAD,CAAUC,SAAS,eACjB,kBAAC,GAAD,CACEgK,QAAS1E,EAAM3M,GACfjE,MAAOC,IAAOmM,MACdmJ,SAAUiB,IAAe+C,eChCtBC,GAAwB9a,IAAOC,IAAV,4EAAGD,CAAH,4ZACnBoV,IAAU+B,YACH5V,IAAO4L,MAClB5L,IAAO6V,YACCvF,IAASC,KACTlR,IAAQyW,OACTzW,IAAQyW,OAQb9V,IAAO0B,YAsBP8X,GAAoC,SAAC,GAA2B,IAAzB7I,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAkBzD,OACE,kBAAC2I,GAAD,KACG3I,GACC,kBAAC,IAAD,KACGD,EAAME,cAAcjJ,MAGzB,yBAAK1H,UAAU,gBACb,yBAAKA,UAAU,iCACb,kBAAC4N,GAAA,EAAD,CACEC,UAAW4C,EAAM5C,UAAY,IAAI+C,KAAKH,EAAM5C,WAAa,KACzDC,YAAa2C,EAAM3C,YAAc,IAAI8C,KAAKH,EAAM3C,aAAe,KAC/DC,aAAa,EACbC,UAAyC,OAA9ByC,EAAMI,uBAIrB,yBAAK7Q,UAAU,qBAjCE,OAAjByQ,EAAMK,OACDL,EAAMK,OAAOpJ,KAGpB+I,EAAMM,cACNN,EAAMM,aAAaC,OAASC,IAAiBC,OAG3C,yBAAKlR,UAAU,gBACb,kBAAC,QAAD,mBAICqR,aAAcZ,EAAMU,UAsBvB,yBAAKnR,UAAU,+BACb,kBAAC2O,GAAA,EAAD,CAAkBC,SAAU6B,EAAM7B,WAClC,6BACC6B,EAAM7B,UAAY6B,EAAM7B,SAASG,aAChC,kBAAC7B,GAAA,EAAD,CACEqM,KAAI,cAAS9I,EAAM7B,SAASG,aAAaC,MACtClC,WACAhO,QAAQ,OAAQ,MAElB2R,EAAM7B,SAASG,aAAaC,OAE7B,OAIR,kBAAC,GAAD,CAAoByB,MAAOA,MC9F3B+F,GAAqB,CACzBN,IAAuBE,UACvBF,IAAuB7B,UACvB6B,IAAuBC,gBAWnBM,GAAgBlQ,IAAMS,cAA8B,CACxD0P,SAAS,EACTC,UAAU,EACVC,OAAQ,KAGG4C,GAAiBlV,MAAGwS,SAAgC,CAC/DxS,MAAGyS,QAAQzS,MAAGC,KAAK,eACnBD,MAAG0S,OAAO1S,MAAG2S,OAAO3S,MAAGC,KAAK,aAAcD,MAAGC,KAAK,iBAIvCkV,GAAmC3Y,YAAS,SAAA8B,GAAU,IAClDuU,EAAe5W,cAAtBkQ,MACFkG,GAAYQ,EAAWjF,KAAKkF,gBAF8B,EAGhBsC,aAC9C,CACE9S,SAAUuQ,EAAWjF,KAAKoF,eAC1BC,WAAYf,IAEd,CAAEgB,KAAMb,IALFjM,EAHwD,EAGxDA,KAAMgM,EAHkD,EAGlDA,QAASe,EAHyC,EAGzCA,YAAaC,EAH4B,EAG5BA,QA0BpC,OAlBAtM,aAAwBsM,GAExBiC,aACE,CACE/S,SAAUuQ,EAAWjF,KAAKoF,eAE1BC,WAAYf,GAAmB/Q,OAAOyQ,IAAuBK,WAE/D,CACEiB,KAAMb,EACNiB,mBAFF,YAEkE,IAAjBC,EAAgB,EAA1CC,iBAAoBpN,KACnCmN,GACFJ,EAAY,SAAAM,GAAI,OAuB1B,SACEC,EACAD,GACC,IACOtH,EAAUuH,EAAOC,aAAjBxH,MACR,IAAKA,EACH,OAAOsH,EAET,IAAKvB,GAAmBrO,SAASsI,EAAMwF,oBACrC,MAAO,CAAEW,OAAQmB,EAAKnB,OAAOvO,OAAO,SAAAO,GAAC,OAAIA,EAAE9E,KAAO2M,EAAM3M,MAE1D,IAAIoU,GAAc,EACZtB,EAASmB,EAAKnB,OAAO/Q,IAAI,SAAA+C,GAC7B,OAAIA,EAAE9E,KAAO2M,EAAM3M,IACjBoU,GAAc,EACPzH,GAEF7H,IAEJsP,GACHtB,EAAOuB,QAAQ1H,GAEjB,MAAO,CAAEmG,UA7CmBwB,CAAyBP,EAAYE,QAO/D,kBAAC,GAAc7Q,SAAf,CACEC,MAAO,CACLuP,UACAC,WACAC,OAAQF,EAAU,GAAK8C,GAAe9O,EAAKkM,UAG5ChU,EAAMtD,YC/DN,IAAMsa,GAAmB9Y,YAAiB,YAAmB,IAAhBwX,EAAe,EAAfA,SACnCnB,EAAe5W,cAAtBkQ,MADyD,EDqE1DlK,IAAMa,WAAWqP,ICnEhBC,EAFyD,EAEzDA,QAASC,EAFgD,EAEhDA,SAAUC,EAFsC,EAEtCA,OAE3B,GAAID,EACF,OACE,kBAAC3D,EAAD,KACE,kBAAC,QAAD,yBAKN,GAAI0D,EACF,OACE,kBAAC1D,EAAD,KACE,kBAAC,QAAD,iBAKN,IAAMuF,EAAiB3B,EAAOvO,OAC5B/D,IAAGkU,OAAO,qBAAsBF,IAGlC,GAA8B,IAA1BC,EAAevT,OACjB,OAAQsT,GACN,KAAKpC,IAAuBE,UAC1B,OACE,kBAACpD,EAAD,KACE,kBAAC,QAAD,uBAGN,KAAKkD,IAAuB7B,UAC1B,OACE,kBAACrB,EAAD,KACE,kBAAC,QAAD,8BAGN,KAAKkD,IAAuBC,eAC1B,OACE,kBAACnD,EAAD,KACE,kBAAC,QAAD,8BAGN,QACE,OACE,kBAACA,EAAD,KACE,kBAAC,QAAD,mBAMV,IAAMyF,EACJH,IAAapC,IAAuBE,WAAamC,EAAevT,OAAS,EAE3E,OACE,oCACGuT,EAAe1S,IAAI,SAAA4K,GAAK,OACvB,kBAAC,GAAD,CACEzK,IAAKyK,EAAM3M,GACX2M,MAAOA,EACPC,WAAYyG,EAAWjF,KAAKoF,eAAetS,OAAS,MAGxD,kBAACuN,EAAD,CAAwBE,WAAYgG,O,4VCnEnC,IAAMoB,GAA+Btb,IAAOC,IAAV,MAQ5Bsb,GAA2Bvb,IAAOC,IAAV,KACfsB,IAAO4L,OAOhBqO,GAAgC,kBAC3C,kBAACN,GAAD,KACE,kBAACO,EAAA,EAAD,CACEC,UAAW9P,EAAA,EAAK,EAAD,WACf+P,eAAe,EACfC,kBAAkB,GAElB,kBAAC,IAAD,KACE,kBAACN,GAAD,KACE,kBAAC5H,EAAA,EAAD,QAGJ,kBAAC,IAAD,KACE,kBAACmI,EAAA,EAAD,CAAoBC,gBAAiB,GACnC,kBAACpI,EAAA,EAAD,QAIJ,kBAACzO,EAAA,EAAD,CACEC,gBAAgB,EAChBL,IAAK,EACLC,YAAa,EACbJ,eAAgB,GAEhB,kBAAC2W,GAAD,CAAkBtB,SAAUpC,IAAuBE,aAGrD,kBAAC5S,EAAA,EAAD,CACEC,gBAAgB,EAChBL,IAAK,EACLC,YAAa,EACbF,OAAQ,EACRF,eAAgB,GAEhB,kBAAC2W,GAAD,CAAkBtB,SAAUpC,IAAuB7B,YACnD,kBAACyF,GAAD,OAGF,kBAACtW,EAAA,EAAD,CACEC,gBAAgB,EAChBL,IAAK,EACLC,YAAa,EACbF,OAAQ,GACRF,eAAgB,GAEhB,kBAAC2W,GAAD,CAAkBtB,SAAUpC,IAAuBC,iBACnD,kBAAC2D,GAAD,UC5DKQ,GAA0C,kBACrD,kBAACpD,GAAD,KACE,kBAAC8C,EAAA,EAAD,CACEC,UAAW9P,EAAA,EAAK,EAAD,cACf+P,eAAe,EACfC,kBAAkB,GAElB,kBAAC,IAAD,KACE,kBAACN,GAAD,KACE,kBAAC5H,EAAA,EAAD,QAGJ,kBAAC,IAAD,KACE,kBAACmI,EAAA,EAAD,CAAoBC,gBAAiB,GACnC,kBAACpI,EAAA,EAAD,QAIJ,kBAACzO,EAAA,EAAD,CACEC,gBAAgB,EAChBL,IAAK,EACLC,YAAa,EACbJ,eAAgB,GAEhB,kBAACoV,GAAD,CACEC,SAAUpC,IAAuBE,aAIrC,kBAAC5S,EAAA,EAAD,CACEC,gBAAgB,EAChBL,IAAK,EACLC,YAAa,EACbF,OAAQ,EACRF,eAAgB,GAEhB,kBAACoV,GAAD,CACEC,SAAUpC,IAAuB7B,YAEnC,kBAACyF,GAAD,OAGF,kBAACtW,EAAA,EAAD,CACEC,gBAAgB,EAChBL,IAAK,EACLC,YAAa,EACbF,OAAQ,GACRF,eAAgB,GAEhB,kBAACoV,GAAD,CACEC,SAAUpC,IAAuBC,iBAEnC,kBAAC2D,GAAD,UCpER,8CAWO,IAAMS,GAAmC,WAC9C,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,OAAK,EAACC,KAAMC,IAAeC,UAAWb,KACnD,kBAACS,EAAA,EAAD,CACEE,KAAMG,IACND,UAAWN,KAEb,kBAAC,IAAD,CAAOM,UAAWE,QAKTP","file":"static/js/179.64a061ef.chunk.js","sourcesContent":["import { Error, SvgIconComponent } from '@material-ui/icons'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../app/Responsive'\nimport { logError } from '../helpers/logger'\nimport { Colors, Spacing } from '../styling'\nimport { useFormGridCheck } from './FormGrid'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: SvgIconComponent\n  label?: string | ReactNode\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  labelSmallCaps?: boolean\n  className?: string\n}\n\nconst StyledIconLine = styled.div<IProps>`\n  display: flex;\n\n  div.description {\n    margin: ${({ labelMargin }) => labelMargin};\n    min-width: ${({ labelWidth, labelWidthUnits }) =>\n      `${labelWidth}${labelWidthUnits}`};\n    flex: 0 0 auto;\n    text-align: right;\n  }\n\n  div.contents {\n    margin-left: 0.5rem;\n    align-self: stretch;\n    flex: 1 1 auto;\n  }\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n`\n\nconst StyledGridDescription = styled.div<IProps>`\n  grid-column: desc;\n  margin: ${({ labelMargin }) => labelMargin};\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n\n  ${mediaMobile`\n  grid-column: content;\n  justify-self: start;\n  margin: ${({ labelMargin }) => labelMargin.replace('auto', '0.7rem')};\n  `};\n`\n\nconst StyledGridContent = styled.div<IProps>`\n  grid-column: content;\n  margin-left: 0.5rem;\n`\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n  labelMargin = '0.5rem 0.2rem 0 auto',\n  labelSmallCaps = true,\n  children,\n}) => {\n  let iconComponent = icon\n  if (typeof icon === 'string') {\n    logError(\n      `IconLine: Do not use icon prop as string! Replace \"${icon}\" with the one imported from @material-ui/icons.`,\n    )\n    iconComponent = Error\n  }\n  const isInFormGrid = useFormGridCheck()\n\n  const descriptionPart = (\n    <>\n      <Icon icon={iconComponent} color={Colors.greyDark} />\n      {label ? (\n        <div className={cn('label', { smallCaps: labelSmallCaps })}>\n          {label}\n        </div>\n      ) : null}\n    </>\n  )\n\n  return isInFormGrid ? (\n    <>\n      <StyledGridDescription labelMargin={labelMargin}>\n        {descriptionPart}\n      </StyledGridDescription>\n      <StyledGridContent>{children}</StyledGridContent>\n    </>\n  ) : (\n    <StyledIconLine\n      labelWidth={labelWidth}\n      labelWidthUnits={labelWidthUnits}\n      labelMargin={labelMargin}\n    >\n      <div className=\"description\">{descriptionPart}</div>\n      <div className=\"contents\">{children}</div>\n    </StyledIconLine>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useCanMutate } from '../hooks/useAccessGuard'\nimport { NoAccess } from './NoAccess'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate = observer<IProps>(({ mutationName, children }) => {\n  const canMutate = useCanMutate(mutationName)\n  return canMutate ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n})\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n  invalid?: boolean\n}\n\nfunction getControlStyles({\n  width,\n  minWidth,\n  invalid,\n}: ISelectControlProps<any>) {\n  const colors =\n    invalid === true\n      ? {\n          border: `1px solid ${Colors.red}`,\n          backgroundColor: Colors.errorBackground,\n        }\n      : {\n          border: `1px solid ${Colors.greyMiddle}`,\n        }\n  return {\n    ...colors,\n    margin: Spacing.MarginAroundFormComponents,\n    width: width !== undefined ? `${width}rem` : '100%',\n    minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n  }\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const controlStyles = { ...base, ...getControlStyles(state.selectProps) }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile, useResponsive } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => {\n  const { isMobile } = useResponsive()\n\n  return (\n    <StyledPageLayoutFullHeightItem\n      column={column}\n      row={row}\n      rowInMobile={rowInMobile}\n      widthInColumns={widthInColumns}\n      withScrollArea={withScrollArea}\n      forcePercentHeightInMobile={forceHeightInMobile}\n    >\n      {withScrollArea && !isMobile ? (\n        <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n      ) : (\n        <Sizer height={100} heightUnit=\"%\">\n          {children}\n        </Sizer>\n      )}\n    </StyledPageLayoutFullHeightItem>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\nimport { Colors } from '../styling'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: RoA<ItemType>\n  selectedItem?: Maybe<ItemType>\n  formatItem?: (item: ItemType) => string | ReactNode\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: RoA<ItemType>\n  onMultiSelection?(selected: RoA<ItemType>): void\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\nconst StyledSelectControlFlat = styled.div`\n  ${(props: { textColor?: string }) => ``}\n\n  color: ${({ textColor }) => (textColor ? textColor : 'inherit')};\n\n  &.interactive {\n    cursor: pointer;\n  }\n\n  &.invalid {\n    border: 1px red solid;\n  }\n\n  > div {\n    padding: 0.2rem 0.3rem;\n    margin: 0.3rem 0.3rem;\n    display: inline-block;\n    border: 1px dotted ${Colors.greyMiddle};\n  }\n\n  > div.active {\n    font-weight: bolder;\n    text-decoration: underline;\n  }\n\n  > div.hover {\n    text-decoration: underline;\n  }\n`\n\nexport const SelectControlFlat = <ItemType extends any>(\n  props: ISelectControlFlatProps<ItemType>,\n) => {\n  const {\n    items,\n    formatItem = RM.prop('displayName'),\n    isMulti = false,\n    isClearable = false,\n    isInvalid = false,\n    selectedItem,\n    selectedItems,\n    onSingleSelection,\n    onMultiSelection,\n    textColor,\n  } = props\n\n  const hasSingleItem = items.length === 1\n\n  const hasSelection = () => {\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n\n  const isItemSelected = (item: ItemType) => {\n    if (items.length === 1) {\n      // with one item there no selection happening\n      return false\n    }\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n\n  const updateSelection = (item: Maybe<ItemType>) => {\n    if (hasSingleItem) {\n      return\n    }\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  return (\n    <StyledSelectControlFlat\n      className={cn({\n        invalid: isInvalid,\n        interactive: !hasSingleItem,\n      })}\n      textColor={textColor}\n    >\n      {isClearable && (\n        <div\n          className={cn({ active: !hasSelection() })}\n          onClick={() => {\n            updateSelection(null)\n          }}\n        >\n          <Trans id=\"optionselector.clear-filter\">All</Trans>\n        </div>\n      )}\n      {items.map((item, idx) => {\n        // @ts-ignore Have to use any in generics due to parsing error\n        const formatted = formatItem(item)\n        return (\n          <div\n            key={idx}\n            className={cn({ active: isItemSelected(item) })}\n            onClick={() => {\n              updateSelection(item)\n            }}\n          >\n            {formatted}\n          </div>\n        )\n      })}\n    </StyledSelectControlFlat>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import { autorun } from 'mobx'\nimport React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\nexport function useAutorunWhenSingleBranch(\n  onSingleBranch: (branch: FCompanyBranchFragment) => void,\n) {\n  const { user } = useRoot()\n  React.useEffect(() =>\n    autorun(() => {\n      if (user.isReady && user.hasSingleBranch) {\n        onSingleBranch(user.branches[0])\n      }\n    }),\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../app/Responsive'\n\nconst StyledFormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 0.1fr [desc] auto [content] 1fr;\n  grid-template-areas: '. desc content';\n  grid-auto-flow: row dense;\n\n  ${mediaMobile`\n    grid-template-columns: 1fr;\n    grid-template-areas:\n      'content';\n  `};\n`\n\ninterface IProps {}\nlet formGridCounter = 0\nconst formGridContext = React.createContext(formGridCounter)\n\nexport const FormGrid: React.FC<IProps> = props => {\n  return (\n    <StyledFormGrid>\n      <formGridContext.Provider value={++formGridCounter}>\n        {props.children}\n      </formGridContext.Provider>\n    </StyledFormGrid>\n  )\n}\n\nexport function useFormGridCheck() {\n  return React.useContext(formGridContext) > 0\n}\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  branches?: RoA<TBranch>\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  hideWhenSingleBranch?: boolean\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: RoA<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  branches,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  hideWhenSingleBranch = false,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n\n  const isSelected = branch => selectedBranches.includes(branch.id)\n\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: branches || user.branches,\n    selectedBranch: user.branches.find(isSelected) || null,\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n\n  if (user.hasSingleBranch && hideWhenSingleBranch) {\n    return null\n  }\n\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","var map = {\n\t\"./cs.svg\": 1485,\n\t\"./de.svg\": 1486,\n\t\"./en.svg\": 1487,\n\t\"./pl.svg\": 1488,\n\t\"./sk.svg\": 1489\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1484;","var map = {\n\t\"./logo-doveze.svg\": 1491,\n\t\"./logo-gopay.svg\": 1492,\n\t\"./logo-mastercard.svg\": 1493,\n\t\"./logo-visa.svg\": 1494\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1490;","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n    ISelectControlProps<FCompanyBranchFragment>,\n    'placeholder' | 'width'\n  > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection((selection as FCompanyBranchFragment) || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import styled from 'styled-components/macro'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nexport const CardDock = styled.div<IProps>`\n  position: absolute;\n  ${({ position }) =>\n    position === 'BottomRight' || position === 'BottomLeft'\n      ? 'bottom: 0'\n      : 'top: 0'};\n  ${({ position }) =>\n    position === 'BottomLeft' || position === 'TopLeft'\n      ? 'left: 0'\n      : 'right: 0'};\n`\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst StyledTimeBadge = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(StyledTimeBadge)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(StyledTimeBadge)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(StyledTimeBadge)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(StyledTimeBadge)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge = React.forwardRef<HTMLDivElement, ITimeBadgeProps>(\n  ({ minutes, className, children, variant, onClick }, ref) => {\n    const Variant = variants[variant]\n    let output = children\n    const extraClassNames = ['animated']\n    if (minutes !== undefined) {\n      if (minutes > 99 || minutes < -9) {\n        extraClassNames.push(bigNumberStyle)\n      }\n      if (minutes < -99) {\n        output = '‒'\n        extraClassNames.push(dashStyle)\n      } else {\n        output = minutes.toString()\n      }\n    }\n    if (onClick) {\n      extraClassNames.push(clickable)\n    }\n    return (\n      <Variant\n        ref={ref}\n        key={minutes}\n        onClick={onClick}\n        className={cx(\n          className,\n          {\n            heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n            pulse: variant === ETimeBadgeVariant.WARNING,\n          },\n          ...extraClassNames,\n        )}\n      >\n        {output}\n      </Variant>\n    )\n  },\n)\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\",\n  opacity: \".87\"\n}), React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z\"\n})), 'CancelOutlined');","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst StyledDelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return (\n      <TimeBadge variant={variant}>\n        <span role=\"img\" aria-label=\"Unknown\">\n          ❔\n        </span>\n      </TimeBadge>\n    )\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <StyledDelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Star } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\nconst StyledOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 3.8rem;\n  top: 0;\n`\n\nexport const OrderStarIndicator: React.FC = () => {\n  return (\n    <StyledOrderStarIndicator data-testid=\"OrderStarIndicator\">\n      <Icon icon={Star} color={Colors.orange} />\n    </StyledOrderStarIndicator>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport {\n  DeliveryTypeEnum,\n  FOrderTickerFragment,\n} from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\nimport { OrderStarIndicator } from '../atoms/OrderStarIndicator'\n\ninterface IOrderTickerProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onClick(): void\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  isCancelled,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (order.sector !== null) {\n      return order.sector.name\n    }\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    if (order.address.original) return order.address.original\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={isCancelled}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          {order.isPriority && <OrderStarIndicator />}\n          {order.totalSum.formattedValue}\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled data-testid=\"PaidMark\" />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import { Note } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon={Note} labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { Colors } from '../../../styling'\n\ninterface IOrderListBranchFilterProps {}\n\nexport const OrderListBranchFilter: React.FC<\n  IOrderListBranchFilterProps\n> = () => {\n  const { order } = useRoot()\n\n  useAutorunWhenSingleBranch(branch => {\n    order.list.setBranchFilter([branch.id])\n  })\n\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(order.list.branches)}\n      onSelectionChange={branches => {\n        order.list.setBranchFilter(branches)\n      }}\n      onSelectionClear={order.list.clearBranchFilter}\n      textColor={Colors.turquoise}\n      isMulti={true}\n      isClearable={false}\n      hideWhenSingleBranch={true}\n    />\n  ))\n}\n","module.exports = __webpack_public_path__ + \"static/media/orderNotification.0aa2ebe9.mp3\";","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), React.createElement(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n})), 'AccessTime');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M22 10l-6-6H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99l16-.01c1.1 0 2-.89 2-1.99v-8zm-7-4.5l5.5 5.5H15V5.5z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n})), 'Note');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Star');","import React from 'react'\n\nimport orderNotificationSound from '../assets/orderNotification.mp3'\nimport { useRoot } from '../atoms/RootProvider'\nimport { useIntervalSound } from '../hooks/useIntervalSound'\n\ninterface IProps {\n  shouldPlay: boolean\n}\n\nexport const OrderNotificationSound = React.memo<IProps>(({ shouldPlay }) => {\n  const { config } = useRoot()\n  return useIntervalSound({\n    soundUrl: orderNotificationSound,\n    intervalSec: config.orderListSoundIntervalSec,\n    shouldPlay,\n  })\n})\n","import styled from 'styled-components'\n\nexport const KitchenInfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<IProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport {\n  OrderRecipeStateEnum,\n  useMKitchenRecipeState,\n} from '../../../graph/generated'\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\n\ninterface IProps {\n  recipeId?: ID\n  code?: string\n  label: string\n  isDone: boolean\n  isCheckable: boolean\n  isFirstSidedish?: boolean\n}\n\nconst firstSideDishStyle = css`\n  margin-top: -0.8rem;\n`\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${(props: { isFirstSidedish: boolean }) =>\n    props.isFirstSidedish && firstSideDishStyle};\n`\n\nconst IsDoneContainerStyled = styled.div`\n  flex: 0 0 2.4rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 4.1rem;\n  font-size: ${FontSizes.CompactCardBig};\n  color: ${Colors.black};\n  margin-top: 0.35rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n  margin-top: 0.35rem;\n`\n\nexport const KitchenOrderWareLine: React.FC<IProps> = ({\n  recipeId,\n  code,\n  label,\n  isDone,\n  isCheckable,\n  isFirstSidedish = false,\n}) => {\n  const [updateOrderRecipeState] = useMKitchenRecipeState()\n\n  return (\n    <OrderWareLineWrap isFirstSidedish={isFirstSidedish}>\n      <IsDoneContainerStyled>\n        {isCheckable && (\n          <TouchCheckButton\n            isChecked={isDone}\n            onClick={() => {\n              if (recipeId) {\n                updateOrderRecipeState({\n                  recipeId,\n                  state: isDone\n                    ? OrderRecipeStateEnum.Preparing\n                    : OrderRecipeStateEnum.Cooked,\n                })\n              }\n            }}\n          />\n        )}\n      </IsDoneContainerStyled>\n      <CodeContainerStyled>{code}</CodeContainerStyled>\n      <NameContainerStyled>{label}</NameContainerStyled>\n    </OrderWareLineWrap>\n  )\n}\n","import React, { Fragment } from 'react'\n\nimport { OrderRecipeStateEnum } from '../../../graph/generated'\nimport { FKitchenOrderBase } from '../../../graph/types'\nimport { KitchenOrderWareLine } from '../molecules/KitchenOrderWareLine'\n\ninterface IProps {\n  orderWares: RoA<FKitchenOrderBase.Items>\n  isCheckable: boolean\n}\n\nexport const KitchenOrderWareList: React.FC<IProps> = ({\n  orderWares,\n  isCheckable,\n}) => {\n  const renderWare = (orderWare: FKitchenOrderBase.Items) => (\n    <Fragment key={orderWare.id}>\n      <KitchenOrderWareLine\n        recipeId={orderWare.id}\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel!}\n        isDone={orderWare.orderRecipeState.enum === OrderRecipeStateEnum.Cooked}\n        isCheckable={isCheckable}\n      />\n      <>\n        {orderWare.sidedishes.map((sidedish, index) => (\n          <KitchenOrderWareLine\n            key={`${orderWare.id}-${sidedish.id}`}\n            recipeId={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel!}\n            isDone={false}\n            isCheckable={false}\n            isFirstSidedish={index === 0 && isCheckable}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import { Star } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\nconst StyledKitchenOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 0.2rem;\n  top: 0.2rem;\n  z-index: 5;\n`\n\nexport const KitchenOrderStarIndicator: React.FC = () => {\n  return (\n    <StyledKitchenOrderStarIndicator data-testid=\"KitchenOrderStarIndicator\">\n      <Icon color={Colors.orange} icon={Star} />\n    </StyledKitchenOrderStarIndicator>\n  )\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n})), 'KeyboardArrowRight');","import { KeyboardArrowRight } from '@material-ui/icons'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  orderId: ID\n  color: Colors\n  setState: OrderStateEnum\n}\n\nexport const KitchenSetStateButton: React.FC<IProps> = ({\n  orderId,\n  color,\n  setState,\n}) => {\n  const [acceptOrder] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        icon={KeyboardArrowRight}\n        width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        color={color}\n        onClick={() => {\n          acceptOrder({ orderId, state: setState })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport {\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n} from '../../../graph/generated'\nimport { FKitchenCompletionOrder } from '../../../graph/types'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenOrderWareList } from '../organisms/KitchenOrderWareList'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\nimport { KitchenSetStateButton } from './KitchenSetStateButton'\n\ninterface IProps {\n  order: FKitchenCompletionOrder.Fragment\n}\n\ninterface IProps {\n  order: FKitchenCompletionOrder.Fragment\n  showBranch: boolean\n}\nexport const StyledKitchenCompletionOrderBox = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  margin-right: ${Spacing.Middle};\n  padding-bottom: ${Spacing.Middle};\n  position: relative;\n\n  & .header {\n    display: flex;\n    flex-wrap: nowrap;\n  }\n\n  & .order__number {\n    width: 4.5rem;\n    background: ${Colors.orange};\n    color: ${Colors.white};\n    font-size: 2rem;\n    border-top-left-radius: ${Radiuses.Card};\n    text-align: center;\n  }\n\n  & .order__source {\n    display: inline-block;\n    background: ${Colors.greyMiddle};\n    color: ${Colors.white};\n    font-size: 0.9rem;\n    padding: 0.1rem 0.8rem;\n    border-radius: 0.9rem;\n    margin: 0.5rem;\n  }\n\n  & .order__sector {\n    display: inline-block;\n    color: ${Colors.black};\n    margin: 0.5rem;\n  }\n\n  & .order__content {\n    margin: ${Spacing.Middle};\n  }\n`\n\nexport const KitchenCompletionOrderBox: React.FC<IProps> = ({\n  order,\n  showBranch,\n}) => {\n  return (\n    <StyledKitchenCompletionOrderBox data-testid=\"order-box\">\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <div className=\"header\">\n        <div className=\"order__number\">{order.orderNumber}</div>\n        <div className=\"order__source\">{`${order.orderOrigin.code} ${\n          order.cashBox !== null ? order.cashBox.id : ''\n        }`}</div>\n        {order.sector && (\n          <div className=\"order__sector\">{order.sector.name}</div>\n        )}\n        {order.isPriority && <KitchenOrderStarIndicator />}\n      </div>\n\n      <div className=\"order__content\">\n        <KitchenOrderWareList\n          orderWares={order.items}\n          isCheckable={\n            order.orderStateCategory === OrderStateCategoryEnum.Preparing ||\n            order.orderStateCategory === OrderStateCategoryEnum.ReadyToDeliver\n          }\n        />\n      </div>\n\n      {order.orderStateCategory === OrderStateCategoryEnum.NewOrders && (\n        <CardDock position=\"BottomRight\">\n          <KitchenSetStateButton\n            orderId={order.id}\n            color={Colors.green}\n            setState={OrderStateEnum.Accepted}\n          />\n        </CardDock>\n      )}\n\n      {order.orderStateCategory === OrderStateCategoryEnum.ReadyToDeliver && (\n        <CardDock position=\"BottomRight\">\n          <KitchenSetStateButton\n            orderId={order.id}\n            color={Colors.red}\n            setState={OrderStateEnum.Finished}\n          />\n        </CardDock>\n      )}\n    </StyledKitchenCompletionOrderBox>\n  )\n}\n","import { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FKitchenCompletionOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenCompletionOrderListOrders,\n  QKitchenCompletionOrderListQuery,\n  SKitchenCompletionOrderListSubscription,\n  useQKitchenCompletionOrderList,\n  useSKitchenCompletionOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\ntype TOrder = QKitchenCompletionOrderListOrders\n\ninterface ILoaderContext {\n  loading: boolean\n  noFilter: boolean\n  orders: RoA<TOrder>\n}\n\nconst loaderContext = React.createContext<ILoaderContext>({\n  loading: true,\n  noFilter: true,\n  orders: [],\n})\n\nexport const sortForCompletion = RM.sortWith<FKitchenCompletionOrderFragment>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.prop('orderNumber')),\n  RM.ascend(RM.either(RM.prop('deliverAt'), RM.prop('createdAt'))),\n])\n\nexport const KitchenCompletionOrderListLoader: React.FC = observer(props => {\n  const { order: orderModel } = useRoot()\n  const noFilter = !orderModel.list.hasBranchFilter\n  const {\n    data,\n    loading,\n    updateQuery,\n    refetch,\n  } = useQKitchenCompletionOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    { skip: noFilter },\n  )\n  useOnConnectionRestored(refetch)\n\n  useSKitchenCompletionOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip: noFilter,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return (\n    <loaderContext.Provider\n      value={{\n        loading,\n        noFilter,\n        orders: loading ? [] : sortForCompletion(data.orders),\n      }}\n    >\n      {props.children}\n    </loaderContext.Provider>\n  )\n})\n\nexport function useKitchenCompletionOrderList() {\n  return React.useContext(loaderContext)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenCompletionOrderListSubscription,\n  prev: QKitchenCompletionOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { KitchenCompletionOrderBox } from '../molecules/KitchenCompletionOrderBox'\nimport { useKitchenCompletionOrderList } from './KitchenCompletionOrderListLoader'\n\ninterface IProps {\n  category: OrderStateCategoryEnum\n}\n\nexport const KitchenCompletionOrderList = observer<IProps>(({ category }) => {\n  const { order: orderModel } = useRoot()\n  const { loading, noFilter, orders } = useKitchenCompletionOrderList()\n\n  if (noFilter) {\n    return (\n      <KitchenInfoMessage>\n        <Trans>Select a branch</Trans>\n      </KitchenInfoMessage>\n    )\n  }\n\n  if (loading) {\n    return (\n      <KitchenInfoMessage>\n        <Trans>Loading</Trans>\n      </KitchenInfoMessage>\n    )\n  }\n\n  const categoryOrders = orders.filter(\n    RM.propEq('orderStateCategory', category),\n  )\n\n  if (categoryOrders.length === 0) {\n    switch (category) {\n      case OrderStateCategoryEnum.NewOrders:\n        return (\n          <KitchenInfoMessage>\n            <Trans>No new orders</Trans>\n          </KitchenInfoMessage>\n        )\n      case OrderStateCategoryEnum.Preparing:\n        return (\n          <KitchenInfoMessage>\n            <Trans>No orders to complete</Trans>\n          </KitchenInfoMessage>\n        )\n      case OrderStateCategoryEnum.ReadyToDeliver:\n        return (\n          <KitchenInfoMessage>\n            <Trans>No orders to hand over</Trans>\n          </KitchenInfoMessage>\n        )\n      default:\n        return (\n          <KitchenInfoMessage>\n            <Trans>No orders</Trans>\n          </KitchenInfoMessage>\n        )\n    }\n  }\n\n  const shouldPlayNotification =\n    category === OrderStateCategoryEnum.NewOrders && categoryOrders.length > 0\n\n  return (\n    <div data-testid={`order-list-${category}`}>\n      {categoryOrders.map(order => (\n        <KitchenCompletionOrderBox\n          key={order.id}\n          order={order}\n          showBranch={orderModel.list.branchesFilter.length > 1}\n        />\n      ))}\n      <OrderNotificationSound shouldPlay={shouldPlayNotification} />\n    </div>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  deliverTime: string | null\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<IProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n} from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { Colors } from '../../../styling'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { KitchenOrderWareList } from '../organisms/KitchenOrderWareList'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\nimport { KitchenSetStateButton } from './KitchenSetStateButton'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\nconst StyledOrderDetailContainer = styled.div`\n  padding: 0 0.2rem 0.1rem 0.2rem;\n  position: relative;\n`\n\nexport const KitchenOrderDetail: React.FC<IProps> = ({ order }) => (\n  <StyledOrderDetailContainer>\n    <HorizontalSeparator />\n    {order.isPriority && <KitchenOrderStarIndicator />}\n    <KitchenOrderWareList\n      orderWares={order.items}\n      isCheckable={\n        order.orderStateCategory === OrderStateCategoryEnum.Preparing ||\n        order.orderStateCategory === OrderStateCategoryEnum.ReadyToDeliver\n      }\n    />\n    <HorizontalSeparator />\n    <KitchenOrderAtSummary\n      deliverTime={order.deliverAt}\n      deliverType={\n        order.deliveryType &&\n        order.deliveryType.enum === DeliveryTypeEnum.Pickup\n          ? 'PERSONAL'\n          : 'DELIVER_UNTIL'\n      }\n    />\n    <NoteLine note={order.note} previousNote={order.previousNote} />\n    {order.orderStateCategory === OrderStateCategoryEnum.NewOrders && (\n      <CardDock position=\"BottomRight\">\n        <KitchenSetStateButton\n          orderId={order.id}\n          color={Colors.green}\n          setState={OrderStateEnum.InProduce}\n        />\n      </CardDock>\n    )}\n  </StyledOrderDetailContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenOrderDetail } from './KitchenOrderDetail'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n  showBranch: boolean\n}\nexport const StyledKitchenOrderBox = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  margin-right: ${Spacing.Middle};\n  position: relative;\n\n  .order-ticker {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    padding: 0.2rem;\n    color: ${Colors.greyMiddle};\n  }\n\n  .delivery-time-badge-container {\n    flex: 0 0 1.8rem;\n  }\n\n  .address-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .customer-identity-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .pickup-label {\n    font-style: italic;\n  }\n`\n\nexport const KitchenOrderBox: React.FC<IProps> = ({ order, showBranch }) => {\n  const getOrderDestination = () => {\n    if (order.sector !== null) {\n      return order.sector.name\n    }\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <div className=\"pickup-label\">\n          <Trans>To pickup</Trans>\n        </div>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <StyledKitchenOrderBox>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <div className=\"order-ticker\">\n        <div className=\"delivery-time-badge-container\">\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </div>\n\n        <div className=\"address-container\">{getOrderDestination()}</div>\n\n        <div className=\"customer-identity-container\">\n          <CustomerIdentity customer={order.customer} />\n          <br />\n          {order.customer && order.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${order.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {order.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </div>\n      </div>\n\n      <KitchenOrderDetail order={order} />\n    </StyledKitchenOrderBox>\n  )\n}\n","import { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FKitchenOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenOrderListOrders,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\ntype TOrder = QKitchenOrderListOrders\n\ninterface ILoaderContext {\n  loading: boolean\n  noFilter: boolean\n  orders: RoA<TOrder>\n}\n\nconst loaderContext = React.createContext<ILoaderContext>({\n  loading: true,\n  noFilter: true,\n  orders: [],\n})\n\nexport const sortByPriority = RM.sortWith<FKitchenOrderFragment>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.either(RM.prop('deliverAt'), RM.prop('createdAt'))),\n  // RM.ascend(order => order.deliverAt || order.createdAt),\n])\n\nexport const KitchenOrderListLoader: React.FC = observer(props => {\n  const { order: orderModel } = useRoot()\n  const noFilter = !orderModel.list.hasBranchFilter\n  const { data, loading, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    { skip: noFilter },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip: noFilter,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return (\n    <loaderContext.Provider\n      value={{\n        loading,\n        noFilter,\n        orders: loading ? [] : sortByPriority(data.orders),\n      }}\n    >\n      {props.children}\n    </loaderContext.Provider>\n  )\n})\n\nexport function useKitchenOrderList() {\n  return React.useContext(loaderContext)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { KitchenOrderBox } from '../molecules/KitchenOrderBox'\nimport { useKitchenOrderList } from './KitchenOrderListLoader'\n\ninterface IProps {\n  category: OrderStateCategoryEnum\n}\n\nexport const KitchenOrderList = observer<IProps>(({ category }) => {\n  const { order: orderModel } = useRoot()\n  const { loading, noFilter, orders } = useKitchenOrderList()\n\n  if (noFilter) {\n    return (\n      <KitchenInfoMessage>\n        <Trans>Select a branch</Trans>\n      </KitchenInfoMessage>\n    )\n  }\n\n  if (loading) {\n    return (\n      <KitchenInfoMessage>\n        <Trans>Loading</Trans>\n      </KitchenInfoMessage>\n    )\n  }\n\n  const categoryOrders = orders.filter(\n    RM.propEq('orderStateCategory', category),\n  )\n\n  if (categoryOrders.length === 0) {\n    switch (category) {\n      case OrderStateCategoryEnum.NewOrders:\n        return (\n          <KitchenInfoMessage>\n            <Trans>No new orders</Trans>\n          </KitchenInfoMessage>\n        )\n      case OrderStateCategoryEnum.Preparing:\n        return (\n          <KitchenInfoMessage>\n            <Trans>No orders to prepare</Trans>\n          </KitchenInfoMessage>\n        )\n      case OrderStateCategoryEnum.ReadyToDeliver:\n        return (\n          <KitchenInfoMessage>\n            <Trans>No orders to deliver</Trans>\n          </KitchenInfoMessage>\n        )\n      default:\n        return (\n          <KitchenInfoMessage>\n            <Trans>No orders</Trans>\n          </KitchenInfoMessage>\n        )\n    }\n  }\n\n  const shouldPlayNotification =\n    category === OrderStateCategoryEnum.NewOrders && categoryOrders.length > 0\n\n  return (\n    <>\n      {categoryOrders.map(order => (\n        <KitchenOrderBox\n          key={order.id}\n          order={order}\n          showBranch={orderModel.list.branchesFilter.length > 1}\n        />\n      ))}\n      <OrderNotificationSound shouldPlay={shouldPlayNotification} />\n    </>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { Colors } from '../../../styling'\nimport { OrderListBranchFilter } from '../../order/organisms/OrderListBranchFilter'\nimport { KitchenOrderList } from '../organisms/KitchenOrderList'\nimport { KitchenOrderListLoader } from '../organisms/KitchenOrderListLoader'\n\nexport const StyledKitchenFilterContainer = styled.div`\n  position: absolute;\n  left: 16rem;\n  top: 0.4rem;\n  width: calc(100vw - 33rem);\n  z-index: 120;\n`\n\nexport const KitchenCategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  left: -0.5rem;\n`\n\nexport const KitchenOverviewPage: React.FC = () => (\n  <KitchenOrderListLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      showSoundControl={true}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <OrderListBranchFilter />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <OrderListBranchFilter />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenOrderList category={OrderStateCategoryEnum.NewOrders} />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenOrderList category={OrderStateCategoryEnum.Preparing} />\n        <KitchenCategorySeparator />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenOrderList category={OrderStateCategoryEnum.ReadyToDeliver} />\n        <KitchenCategorySeparator />\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenOrderListLoader>\n)\n\nexport default KitchenOverviewPage\n","import React from 'react'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { OrderListBranchFilter } from '../../order/organisms/OrderListBranchFilter'\nimport { KitchenCompletionOrderList } from '../organisms/KitchenCompletionOrderList'\nimport { KitchenCompletionOrderListLoader } from '../organisms/KitchenCompletionOrderListLoader'\nimport {\n  KitchenCategorySeparator,\n  StyledKitchenFilterContainer,\n} from './KitchenOverviewPage'\n\nexport const KitchenCompletionOverviewPage: React.FC = () => (\n  <KitchenCompletionOrderListLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Completion`}\n      useBackButton={true}\n      showSoundControl={true}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <OrderListBranchFilter />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <OrderListBranchFilter />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenCompletionOrderList\n          category={OrderStateCategoryEnum.NewOrders}\n        />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenCompletionOrderList\n          category={OrderStateCategoryEnum.Preparing}\n        />\n        <KitchenCategorySeparator />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenCompletionOrderList\n          category={OrderStateCategoryEnum.ReadyToDeliver}\n        />\n        <KitchenCategorySeparator />\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenCompletionOrderListLoader>\n)\n\nexport default KitchenCompletionOverviewPage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ROUTE_KITCHEN, ROUTE_KITCHEN_COMPLETION } from '../kitchen.routes'\nimport { KitchenCompletionOverviewPage } from '../pages/KitchenCompletionOverviewPage'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps {}\n\nexport const KitchenRouting: React.FC<IProps> = () => {\n  return (\n    <Switch>\n      <SecureRoute exact path={ROUTE_KITCHEN} component={KitchenOverviewPage} />\n      <SecureRoute\n        path={ROUTE_KITCHEN_COMPLETION}\n        component={KitchenCompletionOverviewPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default KitchenRouting\n"],"sourceRoot":""}