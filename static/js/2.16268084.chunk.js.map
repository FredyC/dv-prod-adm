{"version":3,"sources":["../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/CellMeasurer/index.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/react-virtualized/dist/es/index.js","../node_modules/core-js/library/modules/_new-promise-capability.js","../node_modules/dom-helpers/util/scrollbarSize.js","../node_modules/core-js/library/modules/_species-constructor.js","../node_modules/core-js/library/modules/_task.js","../node_modules/core-js/library/modules/_perform.js","../node_modules/core-js/library/modules/_promise-resolve.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@material-ui/icons/esm/Edit.js","../node_modules/linear-layout-vector/index.js","../node_modules/dom-helpers/util/inDOM.js","../node_modules/babel-runtime/core-js/promise.js","../node_modules/core-js/library/fn/promise.js","../node_modules/core-js/library/modules/es6.promise.js","../node_modules/core-js/library/modules/_an-instance.js","../node_modules/core-js/library/modules/_for-of.js","../node_modules/core-js/library/modules/_invoke.js","../node_modules/core-js/library/modules/_microtask.js","../node_modules/core-js/library/modules/_user-agent.js","../node_modules/core-js/library/modules/_redefine-all.js","../node_modules/core-js/library/modules/_set-species.js","../node_modules/core-js/library/modules/es7.promise.finally.js","../node_modules/core-js/library/modules/es7.promise.try.js","../node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js","../node_modules/core-js/library/fn/object/get-own-property-descriptor.js","../node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","../node_modules/babel-runtime/helpers/defineProperty.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js"],"names":["componentWillMount","state","this","constructor","getDerivedStateFromProps","props","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_lastMeasuredIndex","_cellSizeGetter","_cellCount","_estimatedCellSize","_layoutVector","setLength","setDefaultSize","key","value","_ref2","index","vector","token","i","_size","setItemSize","Math","min","offset","start","size","getItemSize","lastIndex","end","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","datum","getSizeAndPositionOfCell","maxOffset","minOffset","idealOffset","max","totalSize","getTotalSize","params","_findNearestCell","stop","isNaN","targetOffset","nearestCellIndex","indexOf","getMaxElementSize","window","chrome","webstore","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","getSizeAndPositionOfLastMeasuredCell","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","SCROLL_DIRECTION_FORWARD","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","frame","delay","resolve","then","Date","now","timeout","SCROLL_POSITION_CHANGE_REASONS","_React$PureComponent","Grid","_this","__proto__","_onGridRenderedMemoizer","_onScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","_renderedColumnStartIndex","_renderedColumnStopIndex","_renderedRowStartIndex","_renderedRowStopIndex","_styleCache","_cellCache","_debounceScrollEndedCallback","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","_invokeOnGridRenderedHelper","onSectionRendered","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","columnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","rowStopIndex","_setScrollingContainerRef","ref","_scrollingContainer","_onScroll","event","target","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","prevScrollLeft","scrollLeft","prevScrollTop","scrollTop","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_props","autoHeight","autoWidth","height","width","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_props2","_ref4$columnIndex","_ref4$rowIndex","_props3","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_maybeCallOnScrollbarPresenceChange","_this2","_props5","_state","columnOrRowCountJustIncreasedFromZero","_props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","style","tabIndex","_state2","_isScrolling","gridStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","onScroll","maxWidth","maxHeight","overflow","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","recomputeGridSize","_this3","_props7","clientHeight","clientWidth","scrollHeight","scrollWidth","Object","hasOwnProperty","Boolean","_onScrollbarPresenceChange","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","defaultProps","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","top","cellRendererParams","renderedCell","push","propTypes","ArrowKeyStepper","_temp","_ret","_len","args","_key","apply","concat","_onKeyDown","_this$props","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_onSectionRendered","children","_getScrollState2","onKeyDown","isControlled","onScrollToChange","AutoSizer","defaultHeight","defaultWidth","_onResize","disableHeight","disableWidth","onResize","_parentNode","_height","offsetHeight","_width","offsetWidth","_style","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","_setRef","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","addResizeListener","removeResizeListener","outerStyle","childParams","CellMeasurer","_measure","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","_maybeMeasureCell","measure","node","styleWidth","styleHeight","ceil","_props$columnIndex","_props$rowIndex","_getCellMeasurements2","invalidateCellSizeAfterRender","__internalCellMeasurerFlag","DEFAULT_HEIGHT","DEFAULT_WIDTH","CellMeasurerCache","_cellHeightCache","_cellWidthCache","_columnWidthCache","_rowHeightCache","_columnCount","_rowCount","_keyMapper","_defaultWidth","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_updateCachedColumnAndRowSizes","_key2","columnKey","_i","rowKey","get","OBSERVED","REQUESTED","CollectionView","_calculateSizeAndPositionDataOnNextUpdate","_onSectionRenderedMemoizer","_invokeOnSectionRenderedHelper","cellLayoutManager","getLastRenderedIndices","_updateScrollPositionForScrollToCell","_this$props2","scrollToCell","_this$state","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","_this$props3","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","Section","_indexMap","_indices","SECTION_SIZE","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","forEach","section","getCellIndices","map","sectionXStart","floor","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_sectionManager","cellGroupRenderer","getCellMetadata","cellRendererProps","filter","ColumnSizer","_registerChild","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","registerChild","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","_cellRenderer","rowRenderer","writable","getOffsetForCell","measureAllCells","_ref7$columnIndex","_ref7$rowIndex","scrollToPosition","noRowsRenderer","classNames","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","NOT_FOUND","SUCCESS","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","interval","rebuildWithoutInterval","idx","splice","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","remove","n","queryPoint","queryInterval","tproto","defineProperty","PositionCache","_columnSizeMap","_intervalTree","_leftMap","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","columnSizeMap","columnHeight","Masonry","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_positionCache","_startIndex","_startIndexMemoized","_stopIndex","_stopIndexMemoized","_debounceResetIsScrollingCallback","eventScrollTop","_getEstimatedTotalHeight","_debounceResetIsScrolling","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","batchSize","estimatedColumnCount","_onScrollMemoized","_onCellsRendered","onCellsRendered","cellPositioner","_cellPositioner","_left","_top","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","fixedColumnCount","fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_bottomLeftGrid","_bottomRightGrid","_topLeftGrid","_topRightGrid","_ref2$columnIndex","_ref2$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","rest","_prepareForRender","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","showVerticalScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","showHorizontalScrollbar","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","_props8","_state3","scrollInfo","_state4","_props9","_state5","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","_React$Component","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","_Grid","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","document","body","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","currentTarget","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","element","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","_window","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","_isMounted","_positionFromTop","_positionFromLeft","Element","console","warn","_child","updatePosition","_onChildScroll","scrollTo","_registerResizeListener","_unregisterResizeListener","_scrollLeft","_scrollTop","thisNode","dimensions","prevScrollElement","onChildScroll","aFunction","PromiseCapability","C","reject","$$resolve","$$reject","TypeError","module","exports","f","_interopRequireDefault","__esModule","default","recalc","_inDOM","scrollDiv","createElement","appendChild","removeChild","anObject","SPECIES","O","D","S","defer","channel","port","ctx","invoke","html","cel","global","process","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","run","fn","listener","Function","nextTick","port2","port1","onmessage","postMessage","importScripts","exec","e","v","isObject","newPromiseCapability","promiseCapability","createDetectElementResize","attachEvent","requestFrame","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","innerHTML","__animationListener__","detachEvent","LinearLayoutVector","block_size","pow","log","mask","block_shift","block_mask","block_table","_defaultSize","_axisOffset","_gap","removes","inserts","_length","_pendingLength","isIntervalClear","block","sizes","inBlockCopy","dstBlock","dstIndexStart","srcBlock","srcIndexStart","ascending","srcIndex","dstIndex","increment","dstSizes","srcSizes","dstValue","NaN","srcValue","sizesSumDelta","defaultCountDelta","sizesSum","defaultCount","copyInterval","dstBlockIndex","dstSizesIndex","srcBlockIndex","srcSizesIndex","copyCount","dstStartIndex","srcStartIndex","Block","clearInterval","blockIndex","sizesIndex","clearCount","removeIntervals","intervalsCount","reverse","getLength","srcStart","dstStart","intervalEnd","nextIntervalStart","insertIntervals","newLength","oldLength","srcEnd","dstEnd","intervalStart","flushPendingChanges","indexOfInternal","distance","curDistance","getAxisOffset","blockSize","defaultSize","gap","getGap","blockGap","blockTable","blockTableLength","blockDistance","Number","endIndex","partialBlock","getDefaultSize","setAxisOffset","setGap","oldValue","lastBlock","lastBlockOffset","lastBlockLength","_default","Promise","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","classof","$export","anInstance","forOf","speciesConstructor","task","microtask","newPromiseCapabilityModule","perform","userAgent","promiseResolve","versions","v8","$Promise","isNode","empty","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","it","notify","isReject","_n","chain","_c","_v","ok","_s","reaction","exited","handler","fail","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","reason","error","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","err","onFulfilled","onRejected","G","W","F","capability","iter","all","iterable","values","remaining","$index","alreadyCalled","race","Constructor","forbiddenField","isArrayIter","toLength","getIterFn","BREAK","RETURN","entries","that","ITERATOR","step","iterator","iterFn","next","done","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","last","flush","navigator","standalone","toggle","observe","characterData","hide","src","safe","core","dP","DESCRIPTORS","KEY","configurable","P","R","onFinally","isFunction","callbackfn","$Object","getOwnPropertyDescriptor","toIObject","$getOwnPropertyDescriptor","obj","_defineProperty","_defineProperty2","enumerable","DialogTitle","forwardRef","classes","_props$disableTypogra","disableTypography","other","variant","margin","padding"],"mappings":"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","file":"static/js/2.16268084.chunk.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  } // Binding \"this\" is important for shallow renderer support.\n\n\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n} // React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\n\n\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\n    return Component;\n  } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n\n\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n\n  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') + '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\n  } // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n\n\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  } // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n\n\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };","export default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex; // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport LinearLayoutVector from 'linear-layout-vector';\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\n\nvar CellSizeAndPositionManager = function () {\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    this._lastMeasuredIndex = -1;\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n    this._layoutVector = new LinearLayoutVector();\n\n    this._layoutVector.setLength(cellCount);\n\n    this._layoutVector.setDefaultSize(estimatedCellSize);\n  } // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n\n      this._layoutVector.setLength(cellCount);\n\n      this._layoutVector.setDefaultSize(estimatedCellSize);\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error('Requested index ' + index + ' is outside of range 0..' + this._cellCount);\n      }\n\n      var vector = this._layoutVector;\n\n      if (index > this._lastMeasuredIndex) {\n        var token = {\n          index: this._lastMeasuredIndex + 1\n        };\n\n        for (var i = token.index; i <= index; token.index = ++i) {\n          var _size = this._cellSizeGetter(token); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (_size === undefined || _size !== _size) {\n            throw Error('Invalid size returned for cell ' + i + ' of value ' + _size);\n          } else if (_size !== null) {\n            vector.setItemSize(i, _size);\n          }\n        }\n\n        this._lastMeasuredIndex = Math.min(index, this._cellCount - 1);\n      }\n\n      return {\n        offset: vector.start(index),\n        size: vector.getItemSize(index)\n      };\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      var index = this._lastMeasuredIndex;\n\n      if (index <= 0) {\n        return {\n          offset: 0,\n          size: 0\n        };\n      }\n\n      var vector = this._layoutVector;\n      return {\n        offset: vector.start(index),\n        size: vector.getItemSize(index)\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      var lastIndex = this._cellCount - 1;\n      return lastIndex >= 0 ? this._layoutVector.end(lastIndex) : 0;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset = void 0;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(params) {\n      if (this.getTotalSize() === 0) {\n        return {};\n      }\n\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var maxOffset = offset + containerSize - 1;\n      return {\n        start: this._findNearestCell(offset),\n        stop: this._findNearestCell(maxOffset)\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: '_findNearestCell',\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error('Invalid offset ' + offset + ' specified');\n      }\n\n      var vector = this._layoutVector;\n      var lastIndex = this._cellCount - 1; // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n      var targetOffset = Math.max(0, Math.min(offset, vector.start(lastIndex))); // First interrogate the constant-time lookup table\n\n      var nearestCellIndex = vector.indexOf(targetOffset); // If we haven't yet measured this high, compute sizes for each cell up to the desired offset.\n\n      while (nearestCellIndex > this._lastMeasuredIndex) {\n        // Measure all the cells up to the one we want to find presently.\n        // Do this before the last-index check to ensure the sparse array\n        // is fully populated.\n        this.getSizeAndPositionOfCell(nearestCellIndex); // No need to search and compare again if we're at the end.\n\n        if (nearestCellIndex === lastIndex) {\n          return nearestCellIndex;\n        }\n\n        nearestCellIndex = vector.indexOf(targetOffset); // Guard in case `getSizeAndPositionOfCell` didn't fully measure to\n        // the nearestCellIndex. This might happen scrolling quickly down\n        // and back up on large lists -- possible race with React or DOM?\n\n        if (nearestCellIndex === -1) {\n          nearestCellIndex = this._lastMeasuredIndex;\n          this._lastMeasuredIndex = nearestCellIndex - 1;\n          targetOffset = Math.max(0, Math.min(offset, vector.start(lastIndex)));\n        }\n      }\n\n      return nearestCellIndex;\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport default CellSizeAndPositionManager;\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSizeGetter } from '../types';\nimport { bpfrpt_proptype_VisibleCellRange } from '../types';","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome && !!window.chrome.webstore;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n/**\n * Browsers have scroll offset limitations (eg Chrome stops scrolling at ~33.5M pixels where as Edge tops out at ~1.5M pixels).\n * After a certain position, the browser won't allow the user to scroll further (even via JavaScript scroll offset adjustments).\n * This util picks a lower ceiling for max size and artificially adjusts positions within to make it transparent for users.\n */\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\n\nvar ScalingCellSizeAndPositionManager = function () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === undefined ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, ['maxScrollSize']);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager); // Favor composition over inheritance to simplify IE10 support\n\n\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: '_getOffsetPercentage',\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: '_offsetToSafeOffset',\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: '_safeOffsetToOffset',\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport default ScalingCellSizeAndPositionManager;\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSizeGetter } from '../types';\nimport { bpfrpt_proptype_VisibleCellRange } from '../types';","import _Object$keys from 'babel-runtime/core-js/object/keys';\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\n\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n\n    var keys = _Object$keys(indices);\n\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== _Object$keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from './types';\nimport { bpfrpt_proptype_OverscanIndices } from './types';","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSize } from '../types';","// Properly handle server-side rendering.\nvar win = void 0;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _Promise from 'babel-runtime/core-js/promise';\nimport { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  id: PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start = void 0; // wait for end of processing current event handler, because event handler may be long\n\n  _Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_AnimationTimeoutId };","import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/util/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\n\n\nvar Grid = function (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent); // Invokes onSectionRendered callback only when start/stop row or column indices change\n\n\n  function Grid(props) {\n    _classCallCheck(this, Grid);\n\n    var _this = _possibleConstructorReturn(this, (Grid.__proto__ || _Object$getPrototypeOf(Grid)).call(this, props));\n\n    _this._onGridRenderedMemoizer = createCallbackMemoizer();\n    _this._onScrollMemoizer = createCallbackMemoizer(false);\n    _this._deferredInvalidateColumnIndex = null;\n    _this._deferredInvalidateRowIndex = null;\n    _this._recomputeScrollLeftFlag = false;\n    _this._recomputeScrollTopFlag = false;\n    _this._horizontalScrollBarSize = 0;\n    _this._verticalScrollBarSize = 0;\n    _this._scrollbarPresenceChanged = false;\n    _this._renderedColumnStartIndex = 0;\n    _this._renderedColumnStopIndex = 0;\n    _this._renderedRowStartIndex = 0;\n    _this._renderedRowStopIndex = 0;\n    _this._styleCache = {};\n    _this._cellCache = {};\n\n    _this._debounceScrollEndedCallback = function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    };\n\n    _this._invokeOnGridRenderedHelper = function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    };\n\n    _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    };\n\n    _this._onScroll = function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    };\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        prevScrollLeft: props.scrollLeft,\n        prevScrollTop: props.scrollTop,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: props.scrollLeft || 0,\n      scrollTop: props.scrollTop || 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: 'getOffsetForCell',\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === undefined ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _extends({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: 'getTotalRowsHeight',\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: 'getTotalColumnsWidth',\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: 'handleScrollEvent',\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === undefined ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === undefined ? 0 : _ref2$scrollTop; // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _props = this.props,\n          autoHeight = _props.autoHeight,\n          autoWidth = _props.autoWidth,\n          height = _props.height,\n          width = _props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var _scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n\n        var _scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: _scrollDirectionHorizontal,\n          scrollDirectionVertical: _scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      var _props2 = this.props,\n          columnCount = _props2.columnCount,\n          rowCount = _props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === undefined ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === undefined ? 0 : _ref4$rowIndex;\n\n      var _props3 = this.props,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollToRow = _props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: 'scrollToCell',\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_extends({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_extends({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props4 = this.props,\n          getScrollbarSize = _props4.getScrollbarSize,\n          height = _props4.height,\n          scrollLeft = _props4.scrollLeft,\n          scrollToColumn = _props4.scrollToColumn,\n          scrollTop = _props4.scrollTop,\n          scrollToRow = _props4.scrollToRow,\n          width = _props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _extends({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _props5 = this.props,\n          autoHeight = _props5.autoHeight,\n          autoWidth = _props5.autoWidth,\n          columnCount = _props5.columnCount,\n          height = _props5.height,\n          rowCount = _props5.rowCount,\n          scrollToAlignment = _props5.scrollToAlignment,\n          scrollToColumn = _props5.scrollToColumn,\n          scrollToRow = _props5.scrollToRow,\n          width = _props5.width;\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollPositionChangeReason = _state.scrollPositionChangeReason,\n          scrollTop = _state.scrollTop,\n          instanceProps = _state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props6 = this.props,\n          autoContainerWidth = _props6.autoContainerWidth,\n          autoHeight = _props6.autoHeight,\n          autoWidth = _props6.autoWidth,\n          className = _props6.className,\n          containerProps = _props6.containerProps,\n          containerRole = _props6.containerRole,\n          containerStyle = _props6.containerStyle,\n          height = _props6.height,\n          id = _props6.id,\n          noContentRenderer = _props6.noContentRenderer,\n          role = _props6.role,\n          style = _props6.style,\n          tabIndex = _props6.tabIndex,\n          width = _props6.width;\n      var _state2 = this.state,\n          instanceProps = _state2.instanceProps,\n          needToResetStyleCache = _state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement('div', _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        'aria-label': this.props['aria-label'],\n        'aria-readonly': this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _extends({}, gridStyle, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement('div', {\n        className: 'ReactVirtualized__Grid__innerScrollContainer',\n        role: containerRole,\n        style: _extends({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: '_calculateChildrenToRender',\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: '_debounceScrollEnded',\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: '_invokeOnScrollMemoizer',\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _props7 = _this3.props,\n              height = _props7.height,\n              onScroll = _props7.onScroll,\n              width = _props7.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: '_isScrolling',\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state; // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: '_maybeCallOnScrollbarPresenceChange',\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var _onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n\n        _onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: 'scrollToPosition',\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: '_getCalculatedScrollLeft',\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: '_updateScrollLeftForScrollToColumn',\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: '_getCalculatedScrollTop',\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: '_resetStyleCache',\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = rowIndex + '-' + columnIndex;\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: '_updateScrollTopForScrollToRow',\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n      var instanceProps = prevState.instanceProps;\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== instanceProps.prevScrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== instanceProps.prevScrollTop && nextProps.scrollToRow < 0) {\n        _Object$assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      } // Initially we should not clearStyleCache\n\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        _Object$assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA = void 0;\n      var maybeStateB = void 0;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow;\n      instanceProps.prevScrollLeft = nextProps.scrollLeft;\n      instanceProps.prevScrollTop = nextProps.scrollTop; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _extends({}, newState, maybeStateA, maybeStateB);\n    }\n  }, {\n    key: '_getEstimatedColumnSize',\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: '_getEstimatedRowSize',\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: '_getScrollToPositionStateUpdate',\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return null;\n    }\n  }, {\n    key: '_wrapSizeGetter',\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: '_getCalculatedScrollLeft',\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: '_getScrollLeftForScrollToColumnStateUpdate',\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: '_getCalculatedScrollTop',\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: '_getScrollTopForScrollToRowStateUpdate',\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent);\n\nGrid.defaultProps = {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n};\nGrid.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  autoContainerWidth: PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  autoWidth: PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  cellRenderer: function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === 'function' ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  cellRangeRenderer: function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === 'function' ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  className: PropTypes.string,\n\n  /** Number of columns in grid.  */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  columnWidth: function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  containerProps: PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  containerRole: PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  containerStyle: PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  deferredMeasurementCache: PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  estimatedColumnSize: PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  getScrollbarSize: PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  height: PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  id: PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  isScrolling: PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  isScrollingOptOut: PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  noContentRenderer: function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === 'function' ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  onScrollbarPresenceChange: PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  overscanColumnCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  overscanIndicesGetter: function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === 'function' ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  rowHeight: function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  rowCount: PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === 'function' ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToColumn: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToRow: PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  style: PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  width: PropTypes.number.isRequired\n};\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from './types';\nimport { bpfrpt_proptype_CellRangeRenderer } from './types';\nimport { bpfrpt_proptype_CellPosition } from './types';\nimport { bpfrpt_proptype_CellSize } from './types';\nimport { bpfrpt_proptype_CellSizeGetter } from './types';\nimport { bpfrpt_proptype_NoContentRenderer } from './types';\nimport { bpfrpt_proptype_Scroll } from './types';\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from './types';\nimport { bpfrpt_proptype_RenderedSection } from './types';\nimport { bpfrpt_proptype_OverscanIndicesGetter } from './types';\nimport { bpfrpt_proptype_Alignment } from './types';\nimport { bpfrpt_proptype_CellCache } from './types';\nimport { bpfrpt_proptype_StyleCache } from './types';\nimport { bpfrpt_proptype_AnimationTimeoutId } from '../utils/requestAnimationTimeout';\nimport PropTypes from 'prop-types';","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = rowIndex + '-' + columnIndex;\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from './types';","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex; // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from './types';\nimport { bpfrpt_proptype_OverscanIndices } from './types';","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  scrollToColumn: PropTypes.number.isRequired,\n  scrollToRow: PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = function (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ArrowKeyStepper.__proto__ || _Object$getPrototypeOf(ArrowKeyStepper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      scrollToColumn: 0,\n      scrollToRow: 0\n    }, _this._columnStartIndex = 0, _this._columnStopIndex = 0, _this._rowStartIndex = 0, _this._rowStopIndex = 0, _this._onKeyDown = function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }, _this._onSectionRendered = function (_ref2) {\n      var columnStartIndex = _ref2.columnStartIndex,\n          columnStopIndex = _ref2.columnStopIndex,\n          rowStartIndex = _ref2.rowStartIndex,\n          rowStopIndex = _ref2.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: 'setScrollIndexes',\n    value: function setScrollIndexes(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          children = _props.children;\n\n      var _getScrollState2 = this._getScrollState(),\n          scrollToColumn = _getScrollState2.scrollToColumn,\n          scrollToRow = _getScrollState2.scrollToRow;\n\n      return React.createElement('div', {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: '_getScrollState',\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: '_updateScrollState',\n    value: function _updateScrollState(_ref4) {\n      var scrollToColumn = _ref4.scrollToColumn,\n          scrollToRow = _ref4.scrollToRow;\n      var _props2 = this.props,\n          isControlled = _props2.isControlled,\n          onScrollToChange = _props2.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return null;\n      }\n\n      if (nextProps.scrollToColumn !== prevState.scrollToColumn || nextProps.scrollToRow !== prevState.scrollToRow) {\n        return {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent);\n\nArrowKeyStepper.defaultProps = {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n};\nArrowKeyStepper.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  children: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  columnCount: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  isControlled: PropTypes.bool.isRequired,\n  mode: PropTypes.oneOf(['cells', 'edges']).isRequired,\n  onScrollToChange: PropTypes.func,\n  rowCount: PropTypes.number.isRequired,\n  scrollToColumn: PropTypes.number.isRequired,\n  scrollToRow: PropTypes.number.isRequired\n};\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from '../Grid';\nimport { bpfrpt_proptype_ScrollIndices } from './types';\nimport PropTypes from 'prop-types';","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\nvar AutoSizer = function (_React$PureComponent) {\n  _inherits(AutoSizer, _React$PureComponent);\n\n  function AutoSizer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AutoSizer.__proto__ || _Object$getPrototypeOf(AutoSizer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    }, _this._onResize = function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var _height = _this._parentNode.offsetHeight || 0;\n\n        var _width = _this._parentNode.offsetWidth || 0;\n\n        var _style = window.getComputedStyle(_this._parentNode) || {};\n\n        var paddingLeft = parseInt(_style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(_style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(_style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(_style.paddingBottom, 10) || 0;\n        var newHeight = _height - paddingTop - paddingBottom;\n        var newWidth = _width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: _height - paddingTop - paddingBottom,\n            width: _width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: _height,\n            width: _width\n          });\n        }\n      }\n    }, _this._setRef = function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(AutoSizer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeight = _props.disableHeight,\n          disableWidth = _props.disableWidth,\n          style = _props.style;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement('div', {\n        className: className,\n        ref: this._setRef,\n        style: _extends({}, outerStyle, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.PureComponent);\n\nAutoSizer.defaultProps = {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n};\nAutoSizer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  children: PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  className: PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  defaultHeight: PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  defaultWidth: PropTypes.number,\n\n  /** Disable dynamic :height property */\n  disableHeight: PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  disableWidth: PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  nonce: PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  onResize: PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  style: PropTypes.object\n};\nexport default AutoSizer;\nimport PropTypes from 'prop-types';","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\n\nvar CellMeasurer = function (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CellMeasurer.__proto__ || _Object$getPrototypeOf(CellMeasurer)).call.apply(_ref, [this].concat(args))), _this), _this._measure = function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === undefined ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === undefined ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(CellMeasurer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure\n      }) : children;\n    }\n  }, {\n    key: '_getCellMeasurements',\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: '_maybeMeasureCell',\n    value: function _maybeMeasureCell() {\n      var _props = this.props,\n          cache = _props.cache,\n          _props$columnIndex = _props.columnIndex,\n          columnIndex = _props$columnIndex === undefined ? 0 : _props$columnIndex,\n          parent = _props.parent,\n          _props$rowIndex = _props.rowIndex,\n          rowIndex = _props$rowIndex === undefined ? this.props.index || 0 : _props$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _getCellMeasurements2 = this._getCellMeasurements(),\n            height = _getCellMeasurements2.height,\n            width = _getCellMeasurements2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent); // Used for DEV mode warning check\n\n\nCellMeasurer.__internalCellMeasurerFlag = false;\nCellMeasurer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  cache: function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === 'function' ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  columnIndex: PropTypes.number,\n  index: PropTypes.number,\n  parent: PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  rowIndex: PropTypes.number\n};\nexport default CellMeasurer;\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from './types';\nimport PropTypes from 'prop-types';","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\n\nvar CellMeasurerCache = function () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    this._cellHeightCache = {};\n    this._cellWidthCache = {};\n    this._columnWidthCache = {};\n    this._rowHeightCache = {};\n    this._columnCount = 0;\n    this._rowCount = 0;\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache.hasOwnProperty(key) ? _this._columnWidthCache[key] : _this._defaultWidth;\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache.hasOwnProperty(key) ? _this._rowHeightCache[key] : _this._defaultHeight;\n    };\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: 'clear',\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache.hasOwnProperty(_key) ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache.hasOwnProperty(_key2) ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache.hasOwnProperty(key);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: '_updateCachedColumnAndRowSizes',\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport default CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return rowIndex + '-' + columnIndex;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from './types';","import CellMeasurer from './CellMeasurer';\nimport CellMeasurerCache from './CellMeasurerCache';\nexport default CellMeasurer;\nexport { CellMeasurer, CellMeasurerCache };","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/util/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView = function (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent); // Invokes callbacks only when their values have changed.\n\n\n  function CollectionView() {\n    var _ref;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    } // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n\n    var _this = _possibleConstructorReturn(this, (_ref = CollectionView.__proto__ || _Object$getPrototypeOf(CollectionView)).call.apply(_ref, [this].concat(args)));\n\n    _this.state = {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    };\n    _this._calculateSizeAndPositionDataOnNextUpdate = false;\n    _this._onSectionRenderedMemoizer = createCallbackMemoizer();\n    _this._onScrollMemoizer = createCallbackMemoizer(false);\n\n    _this._invokeOnSectionRenderedHelper = function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    };\n\n    _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    };\n\n    _this._updateScrollPositionForScrollToCell = function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    };\n\n    _this._onScroll = function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    };\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          cellLayoutManager = _props.cellLayoutManager,\n          scrollLeft = _props.scrollLeft,\n          scrollToCell = _props.scrollToCell,\n          scrollTop = _props.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _props2 = this.props,\n          height = _props2.height,\n          scrollToAlignment = _props2.scrollToAlignment,\n          scrollToCell = _props2.scrollToCell,\n          width = _props2.width;\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollPositionChangeReason = _state.scrollPositionChangeReason,\n          scrollTop = _state.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          autoHeight = _props3.autoHeight,\n          cellCount = _props3.cellCount,\n          cellLayoutManager = _props3.cellLayoutManager,\n          className = _props3.className,\n          height = _props3.height,\n          horizontalOverscanSize = _props3.horizontalOverscanSize,\n          id = _props3.id,\n          noContentRenderer = _props3.noContentRenderer,\n          style = _props3.style,\n          verticalOverscanSize = _props3.verticalOverscanSize,\n          width = _props3.width;\n      var _state2 = this.state,\n          isScrolling = _state2.isScrolling,\n          scrollLeft = _state2.scrollLeft,\n          scrollTop = _state2.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement('div', {\n        ref: this._setScrollingContainerRef,\n        'aria-label': this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: 'grid',\n        style: _extends({}, collectionStyle, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement('div', {\n        className: 'ReactVirtualized__Collection__innerScrollContainer',\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: '_enablePointerEventsAfterDelay',\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: '_invokeOnScrollMemoizer',\n    value: function _invokeOnScrollMemoizer(_ref2) {\n      var _this3 = this;\n\n      var scrollLeft = _ref2.scrollLeft,\n          scrollTop = _ref2.scrollTop,\n          totalHeight = _ref2.totalHeight,\n          totalWidth = _ref2.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref3) {\n          var scrollLeft = _ref3.scrollLeft,\n              scrollTop = _ref3.scrollTop;\n          var _props4 = _this3.props,\n              height = _props4.height,\n              onScroll = _props4.onScroll,\n              width = _props4.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: '_setScrollPosition',\n    value: function _setScrollPosition(_ref4) {\n      var scrollLeft = _ref4.scrollLeft,\n          scrollTop = _ref4.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\nCollectionView.defaultProps = {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n};\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\n\nvar Section = function () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: 'addCellIndex',\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: 'getCellIndices',\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.x + ',' + this.y + ' ' + this.width + 'x' + this.height;\n    }\n  }]);\n\n  return Section;\n}();\n\nexport default Section;\nimport { bpfrpt_proptype_Index } from './types';\nimport { bpfrpt_proptype_SizeAndPositionInfo } from './types';","import _Object$keys from 'babel-runtime/core-js/object/keys';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\n\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\n\nvar SectionManager = function () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: 'getCellIndices',\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return _Object$keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: 'getCellMetadata',\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: 'getSections',\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = sectionX + '.' + sectionY;\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: 'getTotalSectionCount',\n    value: function getTotalSectionCount() {\n      return _Object$keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var _this = this;\n\n      return _Object$keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: 'registerCell',\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport default SectionManager;\nimport { bpfrpt_proptype_Index } from './types';\nimport { bpfrpt_proptype_SizeAndPositionInfo } from './types';","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === undefined ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\n\nvar Collection = function (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    _classCallCheck(this, Collection);\n\n    var _this = _possibleConstructorReturn(this, (Collection.__proto__ || _Object$getPrototypeOf(Collection)).call(this, props, context));\n\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for perforamnce)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_this);\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: 'forceUpdate',\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = _objectWithoutProperties(this.props, []);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: 'calculateSizeAndPositionData',\n    value: function calculateSizeAndPositionData() {\n      var _props = this.props,\n          cellCount = _props.cellCount,\n          cellSizeAndPositionGetter = _props.cellSizeAndPositionGetter,\n          sectionSize = _props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: 'getLastRenderedIndices',\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: 'getScrollPositionForCell',\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: 'cellRenderers',\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _props2 = this.props,\n          cellGroupRenderer = _props2.cellGroupRenderer,\n          cellRenderer = _props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: '_isScrollingChange',\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: '_setCollectionViewRef',\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\nCollection.defaultProps = {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n};\nexport default Collection;\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from './types';\nimport { bpfrpt_proptype_SizeInfo } from './types';","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error('Invalid metadata returned for cell ' + index + ':\\n        x:' + cellMetadatum.x + ', y:' + cellMetadatum.y + ', width:' + cellMetadatum.width + ', height:' + cellMetadatum.height);\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer = function (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    _classCallCheck(this, ColumnSizer);\n\n    var _this = _possibleConstructorReturn(this, (ColumnSizer.__proto__ || _Object$getPrototypeOf(ColumnSizer)).call(this, props, context));\n\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _props = this.props,\n          columnMaxWidth = _props.columnMaxWidth,\n          columnMinWidth = _props.columnMinWidth,\n          columnCount = _props.columnCount,\n          width = _props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          children = _props2.children,\n          columnMaxWidth = _props2.columnMaxWidth,\n          columnMinWidth = _props2.columnMinWidth,\n          columnCount = _props2.columnCount,\n          width = _props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: '_registerChild',\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport default ColumnSizer;\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader = function (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    _classCallCheck(this, InfiniteLoader);\n\n    var _this = _possibleConstructorReturn(this, (InfiniteLoader.__proto__ || _Object$getPrototypeOf(InfiniteLoader)).call(this, props, context));\n\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_this);\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: 'resetLoadMoreRowsCache',\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: '_loadUnloadedRanges',\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: '_onRowsRendered',\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: '_doStuff',\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _props = this.props,\n          isRowLoaded = _props.isRowLoaded,\n          minimumBatchSize = _props.minimumBatchSize,\n          rowCount = _props.rowCount,\n          threshold = _props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: '_registerChild',\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\nInfiniteLoader.defaultProps = {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n};\nexport default InfiniteLoader;\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getOwnPropertyDescriptor from 'babel-runtime/core-js/object/get-own-property-descriptor';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = function (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = List.__proto__ || _Object$getPrototypeOf(List)).call.apply(_ref, [this].concat(args))), _this), _this._cellRenderer = function (_ref2) {\n      var parent = _ref2.parent,\n          rowIndex = _ref2.rowIndex,\n          style = _ref2.style,\n          isScrolling = _ref2.isScrolling,\n          isVisible = _ref2.isVisible,\n          key = _ref2.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var _Object$getOwnPropert = _Object$getOwnPropertyDescriptor(style, 'width'),\n          writable = _Object$getOwnPropert.writable;\n\n      if (writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    }, _this._setRef = function (ref) {\n      _this.Grid = ref;\n    }, _this._onScroll = function (_ref3) {\n      var clientHeight = _ref3.clientHeight,\n          scrollHeight = _ref3.scrollHeight,\n          scrollTop = _ref3.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }, _this._onSectionRendered = function (_ref4) {\n      var rowOverscanStartIndex = _ref4.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref4.rowOverscanStopIndex,\n          rowStartIndex = _ref4.rowStartIndex,\n          rowStopIndex = _ref4.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(List, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref5) {\n      var alignment = _ref5.alignment,\n          index = _ref5.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            _scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return _scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === undefined ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === undefined ? 0 : _ref7$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          noRowsRenderer = _props.noRowsRenderer,\n          scrollToIndex = _props.scrollToIndex,\n          width = _props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent);\n\nList.defaultProps = {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nList.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  height: PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  noRowsRenderer: function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === 'function' ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  onRowsRendered: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === 'function' ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  rowHeight: function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  rowRenderer: function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === 'function' ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  rowCount: PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === 'function' ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /** Optional inline style */\n  style: PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n};\nexport default List;\nimport { bpfrpt_proptype_NoContentRenderer } from '../Grid';\nimport { bpfrpt_proptype_Alignment } from '../Grid';\nimport { bpfrpt_proptype_CellSize } from '../Grid';\nimport { bpfrpt_proptype_CellPosition } from '../Grid';\nimport { bpfrpt_proptype_OverscanIndicesGetter } from '../Grid';\nimport { bpfrpt_proptype_RenderedSection } from '../Grid';\nimport { bpfrpt_proptype_CellRendererParams } from '../Grid';\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from '../Grid';\nimport { bpfrpt_proptype_RowRenderer } from './types';\nimport { bpfrpt_proptype_RenderedRows } from './types';\nimport { bpfrpt_proptype_Scroll } from './types';\nimport PropTypes from 'prop-types';","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport createIntervalTree from '../vendor/intervalTree'; // Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\n\nvar PositionCache = function () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    this._columnSizeMap = {};\n    this._intervalTree = createIntervalTree();\n    this._leftMap = {};\n  } // Tracks the height of each column\n  // Store tops and bottoms of each cell for fast intersection lookup.\n  // Maps cell index to x coordinates for quick lookup.\n\n\n  _createClass(PositionCache, [{\n    key: 'estimateTotalHeight',\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: 'range',\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: 'count',\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: 'shortestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: 'tallestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport default PositionCache;","import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = function (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Masonry.__proto__ || _Object$getPrototypeOf(Masonry)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isScrolling: false,\n      scrollTop: 0\n    }, _this._invalidateOnUpdateStartIndex = null, _this._invalidateOnUpdateStopIndex = null, _this._positionCache = new PositionCache(), _this._startIndex = null, _this._startIndexMemoized = null, _this._stopIndex = null, _this._stopIndexMemoized = null, _this._debounceResetIsScrollingCallback = function () {\n      _this.setState({\n        isScrolling: false\n      });\n    }, _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    }, _this._onScroll = function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.target.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Masonry, [{\n    key: 'clearCellPositions',\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var index = _ref2.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: 'recomputeCellPositions',\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          autoHeight = _props.autoHeight,\n          cellCount = _props.cellCount,\n          cellMeasurerCache = _props.cellMeasurerCache,\n          cellRenderer = _props.cellRenderer,\n          className = _props.className,\n          height = _props.height,\n          id = _props.id,\n          keyMapper = _props.keyMapper,\n          overscanByPixels = _props.overscanByPixels,\n          role = _props.role,\n          style = _props.style,\n          tabIndex = _props.tabIndex,\n          width = _props.width,\n          rowDirection = _props.rowDirection;\n      var _state = this.state,\n          isScrolling = _state.isScrolling,\n          scrollTop = _state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex = void 0;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, 'position', 'absolute'), _defineProperty(_style, 'top', top), _defineProperty(_style, 'width', cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement('div', {\n        ref: this._setScrollingContainerRef,\n        'aria-label': this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _extends({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement('div', {\n        className: 'ReactVirtualized__Masonry__innerScrollContainer',\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: '_checkInvalidateOnUpdate',\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var _startIndex = this._invalidateOnUpdateStartIndex;\n        var _stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(_startIndex, _stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: '_debounceResetIsScrolling',\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: '_getEstimatedTotalHeight',\n    value: function _getEstimatedTotalHeight() {\n      var _props2 = this.props,\n          cellCount = _props2.cellCount,\n          cellMeasurerCache = _props2.cellMeasurerCache,\n          width = _props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: '_invokeOnScrollCallback',\n    value: function _invokeOnScrollCallback() {\n      var _props3 = this.props,\n          height = _props3.height,\n          onScroll = _props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: '_invokeOnCellsRenderedCallback',\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var _onCellsRendered = this.props.onCellsRendered;\n\n        _onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: '_populatePositionCache',\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _props4 = this.props,\n          cellMeasurerCache = _props4.cellMeasurerCache,\n          cellPositioner = _props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            _left = _cellPositioner.left,\n            _top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, _left, _top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent);\n\nMasonry.defaultProps = {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n};\nMasonry.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  autoHeight: PropTypes.bool.isRequired,\n  cellCount: PropTypes.number.isRequired,\n  cellMeasurerCache: function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === 'function' ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  cellPositioner: function cellPositioner() {\n    return (typeof Positioner === 'function' ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  cellRenderer: function cellRenderer() {\n    return (typeof CellRenderer === 'function' ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  className: PropTypes.string,\n  height: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  keyMapper: function keyMapper() {\n    return (typeof KeyMapper === 'function' ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  onCellsRendered: function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === 'function' ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  onScroll: function onScroll() {\n    return (typeof OnScrollCallback === 'function' ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  overscanByPixels: PropTypes.number.isRequired,\n  role: PropTypes.string.isRequired,\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n  style: function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  },\n  tabIndex: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  rowDirection: PropTypes.string.isRequired\n};\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  defaultHeight: PropTypes.number.isRequired,\n  defaultWidth: PropTypes.number.isRequired,\n  getHeight: PropTypes.func.isRequired,\n  getWidth: PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from '../utils/requestAnimationTimeout';\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport { CellMeasurerCache } from '../CellMeasurer';\n/**\n * Caches measurements for a given cell.\n */\n\nvar CellMeasurerCacheDecorator = function () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    };\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === undefined ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === undefined ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: 'clear',\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport default CellMeasurerCacheDecorator;","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid = function (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    _classCallCheck(this, MultiGrid);\n\n    var _this = _possibleConstructorReturn(this, (MultiGrid.__proto__ || _Object$getPrototypeOf(MultiGrid)).call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = fixedColumnCount > 0 || fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: 'forceUpdateGrids',\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? 0 : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? 0 : _ref$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$columnIndex = _ref2.columnIndex,\n          columnIndex = _ref2$columnIndex === undefined ? 0 : _ref2$columnIndex,\n          _ref2$rowIndex = _ref2.rowIndex,\n          rowIndex = _ref2$rowIndex === undefined ? 0 : _ref2$rowIndex;\n\n      var _props = this.props,\n          fixedColumnCount = _props.fixedColumnCount,\n          fixedRowCount = _props.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          scrollLeft = _props2.scrollLeft,\n          scrollTop = _props2.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          onScroll = _props3.onScroll,\n          onSectionRendered = _props3.onSectionRendered,\n          onScrollbarPresenceChange = _props3.onScrollbarPresenceChange,\n          scrollLeftProp = _props3.scrollLeft,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollTopProp = _props3.scrollTop,\n          scrollToRow = _props3.scrollToRow,\n          rest = _objectWithoutProperties(_props3, ['onScroll', 'onSectionRendered', 'onScrollbarPresenceChange', 'scrollLeft', 'scrollToColumn', 'scrollTop', 'scrollToRow']);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop;\n      return React.createElement('div', {\n        style: this._containerOuterStyle\n      }, React.createElement('div', {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_extends({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement('div', {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_extends({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_extends({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: '_getBottomGridHeight',\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: '_getLeftGridWidth',\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: '_getRightGridWidth',\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: '_getTopGridHeight',\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: '_maybeCalculateCachedStyles',\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _props4 = this.props,\n          columnWidth = _props4.columnWidth,\n          enableFixedColumnScroll = _props4.enableFixedColumnScroll,\n          enableFixedRowScroll = _props4.enableFixedRowScroll,\n          height = _props4.height,\n          fixedColumnCount = _props4.fixedColumnCount,\n          fixedRowCount = _props4.fixedRowCount,\n          rowHeight = _props4.rowHeight,\n          style = _props4.style,\n          styleBottomLeftGrid = _props4.styleBottomLeftGrid,\n          styleBottomRightGrid = _props4.styleBottomRightGrid,\n          styleTopLeftGrid = _props4.styleTopLeftGrid,\n          styleTopRightGrid = _props4.styleTopRightGrid,\n          width = _props4.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _extends({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: '_prepareForRender',\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: '_renderBottomLeftGrid',\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement('div', {\n          className: 'BottomLeftGrid_ScrollWrapper',\n          style: _extends({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: '_renderBottomRightGrid',\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopLeftGrid',\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopRightGrid',\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _state2 = this.state,\n          showHorizontalScrollbar = _state2.showHorizontalScrollbar,\n          scrollbarSize = _state2.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _extends({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement('div', {\n          className: 'TopRightGrid_ScrollWrapper',\n          style: _extends({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\nMultiGrid.defaultProps = {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = {\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollbarSize: 0,\n    showHorizontalScrollbar: false,\n    showVerticalScrollbar: false\n  };\n  this._deferredInvalidateColumnIndex = null;\n  this._deferredInvalidateRowIndex = null;\n\n  this._bottomLeftGridRef = function (ref) {\n    _this2._bottomLeftGrid = ref;\n  };\n\n  this._bottomRightGridRef = function (ref) {\n    _this2._bottomRightGrid = ref;\n  };\n\n  this._cellRendererBottomLeftGrid = function (_ref3) {\n    var rowIndex = _ref3.rowIndex,\n        rest = _objectWithoutProperties(_ref3, ['rowIndex']);\n\n    var _props5 = _this2.props,\n        cellRenderer = _props5.cellRenderer,\n        fixedRowCount = _props5.fixedRowCount,\n        rowCount = _props5.rowCount;\n\n    if (rowIndex === rowCount - fixedRowCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          height: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        parent: _this2,\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    }\n  };\n\n  this._cellRendererBottomRightGrid = function (_ref4) {\n    var columnIndex = _ref4.columnIndex,\n        rowIndex = _ref4.rowIndex,\n        rest = _objectWithoutProperties(_ref4, ['columnIndex', 'rowIndex']);\n\n    var _props6 = _this2.props,\n        cellRenderer = _props6.cellRenderer,\n        fixedColumnCount = _props6.fixedColumnCount,\n        fixedRowCount = _props6.fixedRowCount;\n    return cellRenderer(_extends({}, rest, {\n      columnIndex: columnIndex + fixedColumnCount,\n      parent: _this2,\n      rowIndex: rowIndex + fixedRowCount\n    }));\n  };\n\n  this._cellRendererTopRightGrid = function (_ref5) {\n    var columnIndex = _ref5.columnIndex,\n        rest = _objectWithoutProperties(_ref5, ['columnIndex']);\n\n    var _props7 = _this2.props,\n        cellRenderer = _props7.cellRenderer,\n        columnCount = _props7.columnCount,\n        fixedColumnCount = _props7.fixedColumnCount;\n\n    if (columnIndex === columnCount - fixedColumnCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          width: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _this2\n      }));\n    }\n  };\n\n  this._columnWidthRightGrid = function (_ref6) {\n    var index = _ref6.index;\n    var _props8 = _this2.props,\n        columnCount = _props8.columnCount,\n        fixedColumnCount = _props8.fixedColumnCount,\n        columnWidth = _props8.columnWidth;\n    var _state3 = _this2.state,\n        scrollbarSize = _state3.scrollbarSize,\n        showHorizontalScrollbar = _state3.showHorizontalScrollbar; // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n      return scrollbarSize;\n    }\n\n    return typeof columnWidth === 'function' ? columnWidth({\n      index: index + fixedColumnCount\n    }) : columnWidth;\n  };\n\n  this._onScroll = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n\n    _this2.setState({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    var onScroll = _this2.props.onScroll;\n\n    if (onScroll) {\n      onScroll(scrollInfo);\n    }\n  };\n\n  this._onScrollbarPresenceChange = function (_ref7) {\n    var horizontal = _ref7.horizontal,\n        size = _ref7.size,\n        vertical = _ref7.vertical;\n    var _state4 = _this2.state,\n        showHorizontalScrollbar = _state4.showHorizontalScrollbar,\n        showVerticalScrollbar = _state4.showVerticalScrollbar;\n\n    if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n      _this2.setState({\n        scrollbarSize: size,\n        showHorizontalScrollbar: horizontal,\n        showVerticalScrollbar: vertical\n      });\n\n      var onScrollbarPresenceChange = _this2.props.onScrollbarPresenceChange;\n\n      if (typeof onScrollbarPresenceChange === 'function') {\n        onScrollbarPresenceChange({\n          horizontal: horizontal,\n          size: size,\n          vertical: vertical\n        });\n      }\n    }\n  };\n\n  this._onScrollLeft = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft;\n\n    _this2._onScroll({\n      scrollLeft: scrollLeft,\n      scrollTop: _this2.state.scrollTop\n    });\n  };\n\n  this._onScrollTop = function (scrollInfo) {\n    var scrollTop = scrollInfo.scrollTop;\n\n    _this2._onScroll({\n      scrollTop: scrollTop,\n      scrollLeft: _this2.state.scrollLeft\n    });\n  };\n\n  this._rowHeightBottomGrid = function (_ref8) {\n    var index = _ref8.index;\n    var _props9 = _this2.props,\n        fixedRowCount = _props9.fixedRowCount,\n        rowCount = _props9.rowCount,\n        rowHeight = _props9.rowHeight;\n    var _state5 = _this2.state,\n        scrollbarSize = _state5.scrollbarSize,\n        showVerticalScrollbar = _state5.showVerticalScrollbar; // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n      return scrollbarSize;\n    }\n\n    return typeof rowHeight === 'function' ? rowHeight({\n      index: index + fixedRowCount\n    }) : rowHeight;\n  };\n\n  this._topLeftGridRef = function (ref) {\n    _this2._topLeftGrid = ref;\n  };\n\n  this._topRightGridRef = function (ref) {\n    _this2._topRightGrid = ref;\n  };\n};\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync = function (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    _classCallCheck(this, ScrollSync);\n\n    var _this = _possibleConstructorReturn(this, (ScrollSync.__proto__ || _Object$getPrototypeOf(ScrollSync)).call(this, props, context));\n\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_this);\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      var _state = this.state,\n          clientHeight = _state.clientHeight,\n          clientWidth = _state.clientWidth,\n          scrollHeight = _state.scrollHeight,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop,\n          scrollWidth = _state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport default ScrollSync;\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement('div', {\n    className: className,\n    role: 'row',\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from './types';\nimport PropTypes from 'prop-types';","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement('svg', {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: '0 0 24 24'\n  }, sortDirection === SortDirection.ASC ? React.createElement('path', {\n    d: 'M7 14l5-5 5 5z'\n  }) : React.createElement('path', {\n    d: 'M7 10l5 5 5-5z'\n  }), React.createElement('path', {\n    d: 'M0 0h24v24H0z',\n    fill: 'none'\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n/**\n * Default table header renderer.\n */\n\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement('span', {\n    className: 'ReactVirtualized__Table__headerTruncatedText',\n    key: 'label',\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: 'SortIndicator',\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from './types';\nimport PropTypes from 'prop-types';","import _extends from 'babel-runtime/helpers/extends';\nimport * as React from 'react';\n/**\n * Default row renderer for Table.\n */\n\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement('div', _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: 'row',\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from './types';\nimport PropTypes from 'prop-types';","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column = function (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, (Column.__proto__ || _Object$getPrototypeOf(Column)).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\nColumn.defaultProps = {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n};\nexport default Column;\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from './types';","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from './types';","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table = function (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    _classCallCheck(this, Table);\n\n    var _this = _possibleConstructorReturn(this, (Table.__proto__ || _Object$getPrototypeOf(Table)).call(this, props));\n\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_this);\n    _this._createRow = _this._createRow.bind(_this);\n    _this._onScroll = _this._onScroll.bind(_this);\n    _this._onSectionRendered = _this._onSectionRendered.bind(_this);\n    _this._setRef = _this._setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === undefined ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === undefined ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeader = _props.disableHeader,\n          gridClassName = _props.gridClassName,\n          gridStyle = _props.gridStyle,\n          headerHeight = _props.headerHeight,\n          headerRowRenderer = _props.headerRowRenderer,\n          height = _props.height,\n          id = _props.id,\n          noRowsRenderer = _props.noRowsRenderer,\n          rowClassName = _props.rowClassName,\n          rowStyle = _props.rowStyle,\n          scrollToIndex = _props.scrollToIndex,\n          style = _props.style,\n          width = _props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _extends({}, flexStyles, {\n          overflow: 'hidden'\n        });\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement('div', {\n        'aria-label': this.props['aria-label'],\n        'aria-labelledby': this.props['aria-labelledby'],\n        'aria-colcount': React.Children.toArray(children).length,\n        'aria-rowcount': this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: 'grid',\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _extends({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: 'rowgroup',\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _extends({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: '_createColumn',\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement('div', {\n        'aria-colindex': columnIndex + 1,\n        'aria-describedby': id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: 'gridcell',\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: '_createHeader',\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _props2 = this.props,\n          headerClassName = _props2.headerClassName,\n          headerStyle = _props2.headerStyle,\n          onHeaderClick = _props2.onHeaderClick,\n          sort = _props2.sort,\n          sortBy = _props2.sortBy,\n          sortDirection = _props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _extends({}, headerStyle, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick = void 0,\n          headerOnKeyDown = void 0,\n          headerTabIndex = void 0,\n          headerAriaSort = void 0,\n          headerAriaLabel = void 0;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement('div', {\n        'aria-label': headerAriaLabel,\n        'aria-sort': headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: 'columnheader',\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: '_createRow',\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _props3 = this.props,\n          children = _props3.children,\n          onRowClick = _props3.onRowClick,\n          onRowDoubleClick = _props3.onRowDoubleClick,\n          onRowRightClick = _props3.onRowRightClick,\n          onRowMouseOver = _props3.onRowMouseOver,\n          onRowMouseOut = _props3.onRowMouseOut,\n          rowClassName = _props3.rowClassName,\n          rowGetter = _props3.rowGetter,\n          rowRenderer = _props3.rowRenderer,\n          rowStyle = _props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _extends({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: '_getFlexStyleForColumn',\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = column.props.flexGrow + ' ' + column.props.flexShrink + ' ' + column.props.width + 'px';\n\n      var style = _extends({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: '_getHeaderColumns',\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _props4 = this.props,\n          children = _props4.children,\n          disableHeader = _props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: '_getRowHeight',\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: '_onSectionRendered',\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: '_setRef',\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: '_setScrollbarWidth',\n    value: function _setScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        var scrollbarWidth = offsetWidth - clientWidth;\n        this.setState({\n          scrollbarWidth: scrollbarWidth\n        });\n      }\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\nTable.defaultProps = {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nexport default Table;\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from '../Grid';","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from '../WindowScroller.js';","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\nvar isWindow = function isWindow(element) {\n  return element === window;\n}; // TODO Move this into WindowScroller and import from there\n\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = function (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WindowScroller.__proto__ || _Object$getPrototypeOf(WindowScroller)).call.apply(_ref, [this].concat(args))), _this), _this._window = getWindow(), _this._isMounted = false, _this._positionFromTop = 0, _this._positionFromLeft = 0, _this.state = _extends({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }), _this._registerChild = function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    }, _this._onChildScroll = function (_ref2) {\n      var scrollTop = _ref2.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    }, _this._registerResizeListener = function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    }, _this._unregisterResizeListener = function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    }, _this._onResize = function () {\n      _this.updatePosition();\n    }, _this.__handleWindowScrollEvent = function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n\n        var _scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n\n        var _scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: _scrollLeft,\n          scrollTop: _scrollTop\n        });\n\n        onScroll({\n          scrollLeft: _scrollLeft,\n          scrollTop: _scrollTop\n        });\n      }\n    }, _this.__resetIsScrolling = function () {\n      _this.setState({\n        isScrolling: false\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(WindowScroller, [{\n    key: 'updatePosition',\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      var _state2 = this.state,\n          isScrolling = _state2.isScrolling,\n          scrollTop = _state2.scrollTop,\n          scrollLeft = _state2.scrollLeft,\n          height = _state2.height,\n          width = _state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    } // Referenced by utils/onScroll\n    // Referenced by utils/onScroll\n\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent);\n\nWindowScroller.defaultProps = {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n};\nWindowScroller.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  onResize: PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  onScroll: PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  scrollElement: PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === 'function' ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  serverHeight: PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  serverWidth: PropTypes.number.isRequired\n};\nexport default WindowScroller;\nimport PropTypes from 'prop-types';","export { ArrowKeyStepper } from './ArrowKeyStepper';\nexport { AutoSizer } from './AutoSizer';\nexport { CellMeasurer, CellMeasurerCache } from './CellMeasurer';\nexport { Collection } from './Collection';\nexport { ColumnSizer } from './ColumnSizer';\nexport { accessibilityOverscanIndicesGetter, defaultCellRangeRenderer, defaultOverscanIndicesGetter, Grid } from './Grid';\nexport { InfiniteLoader } from './InfiniteLoader';\nexport { List } from './List';\nexport { createCellPositioner as createMasonryCellPositioner, Masonry } from './Masonry';\nexport { MultiGrid } from './MultiGrid';\nexport { ScrollSync } from './ScrollSync';\nexport { createMultiSort as createTableMultiSort, defaultCellDataGetter as defaultTableCellDataGetter, defaultCellRenderer as defaultTableCellRenderer, defaultHeaderRenderer as defaultTableHeaderRenderer, defaultHeaderRowRenderer as defaultTableHeaderRowRenderer, defaultRowRenderer as defaultTableRowRenderer, Table, Column, SortDirection, SortIndicator } from './Table';\nexport { WindowScroller } from './WindowScroller';","'use strict'; // 25.4.1.5 NewPromiseCapability(C)\n\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = scrollbarSize;\n\nvar _inDOM = _interopRequireDefault(require(\"./inDOM\"));\n\nvar size;\n\nfunction scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (_inDOM.default) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}\n\nmodule.exports = exports[\"default\"];","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\n\nvar aFunction = require('./_a-function');\n\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};","var ctx = require('./_ctx');\n\nvar invoke = require('./_invoke');\n\nvar html = require('./_html');\n\nvar cel = require('./_dom-create');\n\nvar global = require('./_global');\n\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function run() {\n  var id = +this; // eslint-disable-next-line no-prototype-builtins\n\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar listener = function listener(event) {\n  run.call(event.data);\n}; // Node.js 0.9+ & IE10+ has setImmediate, otherwise:\n\n\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }\n\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n\n    defer(counter);\n    return counter;\n  };\n\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  }; // Node.js 0.8-\n\n\n  if (require('./_cof')(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    }; // Sphere (JS game engine) Dispatch API\n\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    }; // Browsers with MessageChannel, includes WebWorkers\n\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1); // Browsers with postMessage, skip WebWorkers\n    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n\n    global.addEventListener('message', listener, false); // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    }; // Rest old browsers\n\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};","module.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};","var anObject = require('./_an-object');\n\nvar isObject = require('./_is-object');\n\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n **/\nexport default function createDetectElementResize(nonce) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof document !== 'undefined' && document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","module.exports = LinearLayoutVector;\nLinearLayoutVector.prototype.getLength = getLength;\nLinearLayoutVector.prototype.setLength = setLength;\nLinearLayoutVector.prototype.getDefaultSize = getDefaultSize;\nLinearLayoutVector.prototype.setDefaultSize = setDefaultSize;\nLinearLayoutVector.prototype.getAxisOffset = getAxisOffset;\nLinearLayoutVector.prototype.setAxisOffset = setAxisOffset;\nLinearLayoutVector.prototype.getGap = getGap;\nLinearLayoutVector.prototype.setGap = setGap;\nLinearLayoutVector.prototype.getItemSize = getItemSize;\nLinearLayoutVector.prototype.setItemSize = setItemSize;\nLinearLayoutVector.prototype.insert = insert;\nLinearLayoutVector.prototype.remove = remove;\nLinearLayoutVector.prototype.start = start;\nLinearLayoutVector.prototype.end = end;\nLinearLayoutVector.prototype.indexOf = indexOf;\nLinearLayoutVector.prototype.clear = clear;\nLinearLayoutVector.prototype.toString = toString;\n/**\n * A sparse array of sizes that represent items in a dimension.\n *\n * Provides efficient support for finding the cumulative distance to\n * the start/end of an item along the axis, and similarly for finding the\n * index of the item at a particular distance.\n *\n * Default size is used for items whose size hasn't been specified.\n */\n\nfunction LinearLayoutVector(block_size) {\n  if (block_size === undefined) {\n    block_size = 128;\n  } // Assumption: vector elements (sizes) will typically be set in\n  // small ranges that reflect localized scrolling.  Allocate vector\n  // elements in blocks of block_size, which must be a power of 2.\n  // block_shift is the power of 2 and block_mask masks off as many\n  // low order bits.  The block_table contains all of the allocated\n  // blocks and has length/block_size elements which are allocated lazily.\n\n\n  var pow = Math.log(block_size) / Math.log(2) | 0,\n      size = Math.pow(2, pow),\n      mask = size - 1;\n  this.block_size = size;\n  this.block_shift = pow;\n  this.block_mask = mask;\n  this.block_table = [];\n  this._defaultSize = 0;\n  this._axisOffset = 0;\n  this._gap = 0; // Sorted Vector of intervals for the pending removes, in descending order,\n  // for example [7, 5, 3, 1] for the removes at 7, 6, 5, 3, 2, 1\n\n  this.removes = null; // Sorted Vector of intervals for the pending inserts, in ascending order,\n  // for example [1, 3, 5, 7] for the inserts at 1, 2, 3, 5, 6, 7\n\n  this.inserts = null;\n  this._length = 0; // What the length will be after any pending changes are flushed.\n\n  this._pendingLength = -1;\n}\n/**\n * The number of item size valued elements.\n *\n * @default 0\n */\n\n\nfunction getLength() {\n  return this._pendingLength === -1 ? this._length : this._pendingLength;\n}\n/**\n * @private\n * Grows or truncates the vector to be the specified newLength.\n * When truncating, releases empty blocks and sets to NaN any values\n * in the last block beyond the newLength.\n */\n\n\nfunction setLength(newLength) {\n  flushPendingChanges.call(this);\n\n  if (newLength < this._length) {\n    // Clear any remaining non-NaN values in the last block\n    var blockIndex = newLength >> this.block_shift;\n    var endIndex = Math.min(blockIndex * this.block_size + this.block_size, this._length) - 1;\n    clearInterval.call(this, newLength, endIndex);\n  }\n\n  this._length = newLength; // update the table\n\n  var partialBlock = (this._length & this.block_mask) === 0 ? 0 : 1;\n  this.block_table.length = (this._length >> this.block_shift) + partialBlock;\n} //----------------------------------\n//  defaultSize\n//----------------------------------\n\n/**\n * The size of items whose size was not specified with setItemSize.\n *\n * @default 0\n */\n\n\nfunction getDefaultSize() {\n  return this._defaultSize;\n}\n/**\n * @private\n */\n\n\nfunction setDefaultSize(value) {\n  this._defaultSize = value;\n} //----------------------------------\n//  axisOffset\n//----------------------------------\n\n/**\n * The offset of the first item from the origin in the majorAxis\n * direction. This is useful when implementing padding,\n * in addition to gaps, for virtual layouts.\n *\n * @see #gap\n */\n\n\nfunction getAxisOffset() {\n  return this._axisOffset;\n}\n/**\n * @private\n */\n\n\nfunction setAxisOffset(value) {\n  this._axisOffset = value;\n} //----------------------------------\n//  gap\n//----------------------------------\n\n/**\n * The distance between items.\n *\n * @default 0\n */\n\n\nfunction getGap() {\n  return this._gap;\n}\n/**\n * @private\n */\n\n\nfunction setGap(value) {\n  this._gap = value;\n} //--------------------------------------------------------------------------\n//\n//  Methods\n//\n//--------------------------------------------------------------------------\n\n/**\n * Return the size of the item at index.  If no size was ever\n * specified then then the defaultSize is returned.\n *\n * @param index The item's index.\n * @see defaultSize\n */\n\n\nfunction getItemSize(index) {\n  flushPendingChanges.call(this);\n  var block = this.block_table[index >> this.block_shift];\n\n  if (block) {\n    var value = block.sizes[index & this.block_mask];\n    return value !== value ? this._defaultSize : value;\n  } else {\n    return this._defaultSize;\n  }\n}\n/**\n * Set the size of the item at index. If an index is\n * set to <code>NaN</code> then subsequent calls to get\n * will return the defaultSize.\n *\n * @param index The item's index.\n * @param value The item's size.\n * @see defaultSize\n */\n\n\nfunction setItemSize(index, value) {\n  flushPendingChanges.call(this);\n\n  if (index >= this.getLength()) {\n    throw new Error(\"Invalid index and all that.\");\n  }\n\n  var blockIndex = index >> this.block_shift;\n  var block = this.block_table[blockIndex];\n\n  if (!block) {\n    block = this.block_table[blockIndex] = new Block(this.block_size);\n  }\n\n  var sizesIndex = index & this.block_mask;\n  var sizes = block.sizes;\n  var oldValue = sizes[sizesIndex];\n\n  if (oldValue === value) {\n    return;\n  }\n\n  if (oldValue !== oldValue) {\n    block.defaultCount -= 1;\n    block.sizesSum += value;\n  } else if (value !== value) {\n    block.defaultCount += 1;\n    block.sizesSum -= oldValue;\n  } else {\n    block.sizesSum += value - oldValue;\n  }\n\n  sizes[sizesIndex] = value;\n}\n/**\n * Make room for a new item at index by shifting all of the sizes\n * one position to the right, beginning with startIndex.\n *\n * The value at index will be NaN.\n *\n * This is similar to array.splice(index, 0, NaN).\n *\n * @param index The position of the new NaN size item.\n */\n\n\nfunction insert(index) {\n  // We don't support interleaved pending inserts and removes\n  if (this.removes) {\n    flushPendingChanges.call(this);\n  }\n\n  if (this.inserts) {\n    // Update the last interval or add a new one?\n    var lastIndex = this.inserts.length - 1;\n    var intervalEnd = this.inserts[lastIndex];\n\n    if (index === intervalEnd + 1) {\n      // Extend the end of the interval\n      this.inserts[lastIndex] = index;\n    } else if (index > intervalEnd) {\n      // New interval\n      this.inserts.push(index);\n      this.inserts.push(index);\n    } else {\n      // We can't support pending inserts that are not ascending\n      flushPendingChanges.call(this);\n    }\n  }\n\n  this._pendingLength = Math.max(this._length, index + 1);\n\n  if (!this.inserts) {\n    this.inserts = [];\n    this.inserts.push(index);\n    this.inserts.push(index);\n  }\n}\n/**\n * Remove index by shifting all of the sizes one position to the left,\n * begining with index+1.\n *\n * This is similar to array.splice(index, 1).\n *\n * @param index The position to be removed.\n */\n\n\nfunction remove(index) {\n  // We don't support interleaved pending inserts and removes\n  if (this.inserts) {\n    flushPendingChanges.call(this);\n  } // length getter takes into account pending inserts/removes but doesn't flush\n\n\n  if (index >= this.getLength()) {\n    throw new Error(\"Invalid index and all that.\");\n  }\n\n  if (this.removes) {\n    // Update the last interval or add a new one?\n    var lastIndex = this.removes.length - 1;\n    var intervalStart = this.removes[lastIndex];\n\n    if (index === intervalStart - 1) {\n      // Extend the start of the interval\n      this.removes[lastIndex] = index;\n    } else if (index < intervalStart) {\n      // New interval\n      this.removes.push(index);\n      this.removes.push(index);\n    } else {\n      // We can't support pending removes that are not descending\n      flushPendingChanges.call(this);\n    }\n  }\n\n  this._pendingLength = this._pendingLength === -1 ? length - 1 : this._pendingLength - 1;\n\n  if (!this.removes) {\n    this.removes = [];\n    this.removes.push(index);\n    this.removes.push(index);\n  }\n}\n/**\n * @private\n * Returns true when all sizes in the specified interval for the block are NaN\n */\n\n\nfunction isIntervalClear(block, index, count) {\n  var sizes = block.sizes,\n      size;\n\n  for (count += index; index < count; ++index) {\n    if ((size = sizes[index]) === size) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @private\n * Copies elements between blocks. Indices relative to the blocks.\n * If srcBlock is null, then it fills the destination with NaNs.\n * The case of srcBlock === dstBlock is also supported.\n * The caller must ensure that count is within range.\n */\n\n\nfunction inBlockCopy(dstBlock, dstIndexStart, srcBlock, srcIndexStart, count) {\n  var ascending = dstIndexStart < srcIndexStart;\n  var srcIndex = ascending ? srcIndexStart : srcIndexStart + count - 1;\n  var dstIndex = ascending ? dstIndexStart : dstIndexStart + count - 1;\n  var increment = ascending ? +1 : -1;\n  var dstSizes = dstBlock.sizes;\n  var srcSizes = srcBlock ? srcBlock.sizes : null;\n  var dstValue = NaN;\n  var srcValue = NaN;\n  var sizesSumDelta = 0; // How much the destination sizesSum will change\n\n  var defaultCountDelta = 0; // How much the destination defaultCount will change\n\n  while (count > 0) {\n    if (srcSizes) {\n      srcValue = srcSizes[srcIndex];\n    }\n\n    dstValue = dstSizes[dstIndex]; // Are the values different?\n\n    if (srcValue !== dstValue) {\n      // Triple '=' to handle NaN comparison\n      // Are we removing a default size or a chached size?\n      if (dstValue !== dstValue) {\n        defaultCountDelta--;\n      } else {\n        sizesSumDelta -= dstValue;\n      } // Are we adding a default size or a cached size?\n\n\n      if (srcValue !== srcValue) {\n        defaultCountDelta++;\n      } else {\n        sizesSumDelta += srcValue;\n      }\n\n      dstSizes[dstIndex] = srcValue;\n    }\n\n    srcIndex += increment;\n    dstIndex += increment;\n    count--;\n  }\n\n  dstBlock.sizesSum += sizesSumDelta;\n  dstBlock.defaultCount += defaultCountDelta;\n}\n/**\n * @private\n * Copies 'count' elements from dstIndex to srcIndex.\n * Safe for overlapping source and destination intervals.\n * If any blocks are left full of NaNs, they will be deallcated.\n */\n\n\nfunction copyInterval(dstIndex, srcIndex, count) {\n  var ascending = dstIndex < srcIndex;\n\n  if (!ascending) {\n    dstIndex += count - 1;\n    srcIndex += count - 1;\n  }\n\n  while (count > 0) {\n    // Figure out destination block\n    var dstBlockIndex = dstIndex >> this.block_shift;\n    var dstSizesIndex = dstIndex & this.block_mask;\n    var dstBlock = this.block_table[dstBlockIndex]; // Figure out source block\n\n    var srcBlockIndex = srcIndex >> this.block_shift;\n    var srcSizesIndex = srcIndex & this.block_mask;\n    var srcBlock = this.block_table[srcBlockIndex]; // Figure out number of elements to copy\n\n    var copyCount = ascending ? Math.min(this.block_size - dstSizesIndex, this.block_size - srcSizesIndex) : 1 + Math.min(dstSizesIndex, srcSizesIndex);\n    copyCount = Math.min(copyCount, count); // Figure out the start index for each block\n\n    var dstStartIndex = ascending ? dstSizesIndex : dstSizesIndex - copyCount + 1;\n    var srcStartIndex = ascending ? srcSizesIndex : srcSizesIndex - copyCount + 1; // Check whether a destination block needs to be allocated.\n    // Allocate only if there are non-default values to be copied from the source.\n\n    if (srcBlock && !dstBlock && isIntervalClear(srcBlock, srcStartIndex, copyCount)) {\n      dstBlock = new Block(this.block_size);\n      this.block_table[dstBlockIndex] = dstBlock;\n    } // Copy to non-null dstBlock, srcBlock can be null\n\n\n    if (dstBlock) {\n      inBlockCopy(dstBlock, dstStartIndex, srcBlock, srcStartIndex, copyCount); // If this is the last time we're visiting this block, and it contains\n      // only NaNs, then remove it\n\n      if (dstBlock.defaultCount === this.block_size) {\n        var blockEndReached = ascending ? dstStartIndex + copyCount === this.block_size : dstStartIndex === 0;\n        if (blockEndReached || count === copyCount) this.block_table[dstBlockIndex] = null;\n      }\n    }\n\n    dstIndex += ascending ? copyCount : -copyCount;\n    srcIndex += ascending ? copyCount : -copyCount;\n    count -= copyCount;\n  }\n}\n/**\n * @private\n * Sets all elements within the specified interval to NaN (both ends inclusive).\n * Releases empty blocks.\n */\n\n\nfunction clearInterval(start, end) {\n  while (start <= end) {\n    // Figure our destination block\n    var blockIndex = start >> this.block_shift;\n    var sizesIndex = start & this.block_mask;\n    var block = this.block_table[blockIndex]; // Figure out number of elements to clear in this iteration\n    // Make sure we don't clear more items than requested\n\n    var clearCount = this.block_size - sizesIndex;\n    clearCount = Math.min(clearCount, end - start + 1);\n\n    if (block) {\n      if (clearCount === this.block_size) {\n        this.block_table[blockIndex] = null;\n      } else {\n        // Copying from null source block is equivalent of clearing the destination block\n        inBlockCopy(block, sizesIndex, null\n        /*srcBlock*/\n        , 0, clearCount); // If the blockDst contains only default sizes, then remove the block\n\n        if (block.defaultCount === this.block_size) {\n          this.block_table[blockIndex] = null;\n        }\n      }\n    }\n\n    start += clearCount;\n  }\n}\n/**\n * @private\n * Removes the elements designated by the intervals and truncates\n * the LinearLayoutVector to the new length.\n * 'intervals' is a Vector of descending intervals [7, 5, 3, 1]\n */\n\n\nfunction removeIntervals(intervals) {\n  var intervalsCount = intervals.length;\n\n  if (intervalsCount === 0) {\n    return;\n  } // Adding final nextIntervalStart value (see below).\n\n\n  intervals.reverse(); // turn into ascending, for example [7, 5, 3, 1] --> [1, 3, 5, 7]\n\n  intervals.push(this.getLength()); // Move the elements\n\n  var dstStart = intervals[0];\n  var srcStart;\n  var count;\n  var i = 0;\n\n  do {\n    var intervalEnd = intervals[i + 1];\n    var nextIntervalStart = intervals[i + 2];\n    i += 2; // Start copy from after the end of current interval\n\n    srcStart = intervalEnd + 1; // copy all elements up to the start of the next interval.\n\n    count = nextIntervalStart - srcStart;\n    copyInterval.call(this, dstStart, srcStart, count);\n    dstStart += count;\n  } while (i < intervalsCount); // Truncate the excess elements.\n\n\n  this.setLength(dstStart);\n}\n/**\n * @private\n * Increases the length and inserts NaN values for the elements designated by the intervals.\n * 'intervals' is a Vector of ascending intervals [1, 3, 5, 7]\n */\n\n\nfunction insertIntervals(intervals, newLength) {\n  var intervalsCount = intervals.length;\n\n  if (intervalsCount === 0) {\n    return;\n  } // Allocate enough space for the insertions, all the elements\n  // allocated are NaN by default.\n\n\n  var oldLength = this.getLength();\n  this.setLength(newLength);\n  var srcEnd = oldLength - 1;\n  var dstEnd = newLength - 1;\n  var i = intervalsCount - 2;\n\n  while (i >= 0) {\n    // Find current interval\n    var intervalStart = intervals[i];\n    var intervalEnd = intervals[i + 1];\n    i -= 2; // Start after the current interval\n\n    var dstStart = intervalEnd + 1;\n    var copyCount = dstEnd - dstStart + 1;\n    var srcStart = srcEnd - copyCount + 1;\n    copyInterval.call(this, dstStart, srcStart, copyCount);\n    dstStart -= copyCount;\n    dstEnd = intervalStart - 1; // Fill in with default NaN values after the copy\n\n    clearInterval.call(this, intervalStart, intervalEnd);\n  }\n}\n/**\n * @private\n * Processes any pending removes or pending inserts.\n */\n\n\nfunction flushPendingChanges() {\n  var intervals;\n\n  if (this.removes) {\n    intervals = this.removes;\n    this.removes = null;\n    this._pendingLength = -1;\n    removeIntervals.call(this, intervals);\n  } else if (this.inserts) {\n    intervals = this.inserts;\n    var newLength = this._pendingLength;\n    this.inserts = null;\n    this._pendingLength = -1;\n    insertIntervals.call(this, intervals, newLength);\n  }\n}\n/**\n * The cumulative distance to the start of the item at index, including\n * the gaps between items and the axisOffset.\n *\n * The value of start(0) is axisOffset.\n *\n * Equivalent to:\n * <pre>\n * var distance = this.getAxisOffset();\n * for (var i = 0; i &lt; index; i++)\n *     distance += get(i);\n * return distance + (gap * index);\n * </pre>\n *\n * The actual implementation is relatively efficient.\n *\n * @param index The item's index.\n * @see #end\n */\n\n\nfunction start(index) {\n  flushPendingChanges.call(this);\n\n  if (this._length === 0 || index === 0) {\n    return this.getAxisOffset();\n  }\n\n  if (index >= this._length) {\n    throw new Error(\"Invalid index and all that.\");\n  }\n\n  var distance = this.getAxisOffset();\n  var blockIndex = index >> this.block_shift;\n\n  for (var i = 0; i < blockIndex; i++) {\n    var block = this.block_table[i];\n    distance += block ? block.sizesSum + block.defaultCount * this._defaultSize : this.block_size * this._defaultSize;\n  }\n\n  var lastBlock = this.block_table[blockIndex];\n  var lastBlockOffset = index & ~this.block_mask;\n  var lastBlockLength = index - lastBlockOffset;\n\n  if (lastBlock) {\n    var sizes = lastBlock.sizes;\n\n    for (i = 0; i < lastBlockLength; i++) {\n      var size = sizes[i];\n      distance += size !== size ? this._defaultSize : size;\n    }\n  } else {\n    distance += this._defaultSize * lastBlockLength;\n  }\n\n  distance += index * this.getGap();\n  return distance;\n}\n/**\n * The cumulative distance to the end of the item at index, including\n * the gaps between items.\n *\n * If <code>index &lt;(length-1)</code> then the value of this\n * function is defined as:\n * <code>start(index) + get(index)</code>.\n *\n * @param index The item's index.\n * @see #start\n */\n\n\nfunction end(index) {\n  flushPendingChanges.call(this);\n  return this.start(index) + this.getItemSize(index);\n}\n/**\n * Returns the index of the item that overlaps the specified distance.\n *\n * The item at index <code>i</code> overlaps a distance value\n * if <code>start(i) &lt;= distance &lt; end(i)</code>.\n *\n * If no such item exists, -1 is returned.\n */\n\n\nfunction indexOf(distance) {\n  flushPendingChanges.call(this);\n  var index = indexOfInternal.call(this, distance);\n  return index >= this._length ? -1 : index;\n}\n\nfunction indexOfInternal(distance) {\n  if (this._length === 0 || distance < 0) {\n    return -1;\n  } // The area of the first item includes the axisOffset\n\n\n  var curDistance = this.getAxisOffset();\n\n  if (distance < curDistance) {\n    return 0;\n  }\n\n  var index = -1,\n      block = null,\n      blockSize = this.block_size,\n      defaultSize = this._defaultSize,\n      gap = this.getGap(),\n      blockGap = gap * blockSize; // Find the block that contains distance and the index of its\n  // first element\n\n  var blockIndex = -1,\n      blockTable = this.block_table,\n      blockTableLength = blockTable.length;\n\n  for (; ++blockIndex < blockTableLength;) {\n    block = blockTable[blockIndex];\n    var blockDistance = blockGap + (block ? block.sizesSum + block.defaultCount * defaultSize : blockSize * defaultSize);\n\n    if (distance === curDistance || distance >= curDistance && distance < curDistance + blockDistance) {\n      index = blockIndex << this.block_shift;\n      break;\n    }\n\n    curDistance += blockDistance;\n  }\n\n  if (index === -1 || distance === curDistance) {\n    return index;\n  } // At this point index corresponds to the first item in this block\n\n\n  if (block) {\n    // Find the item that contains distance and return its index\n    var sizes = block.sizes,\n        n = this.block_size - 1;\n\n    for (var i = 0; i < n; i++) {\n      var size = sizes[i];\n      curDistance += gap + (size !== size ? this._defaultSize : size);\n\n      if (curDistance > distance) {\n        return index + i;\n      }\n    } // TBD special-case for the very last index\n\n\n    return index + this.block_size - 1;\n  } else {\n    return index + Math.floor(Number(distance - curDistance) / Number(this._defaultSize + gap));\n  }\n}\n/**\n * Clear all cached state, reset length to zero.\n */\n\n\nfunction clear() {\n  // Discard any pending changes, before setting the length\n  // otherwise the length setter will commit the changes.\n  this.removes = null;\n  this.inserts = null;\n  this._pendingLength = -1;\n  this.setLength(0); // clears the this.block_table as well\n}\n\nfunction toString() {\n  return \"LinearLayoutVector { \" + \"length: \" + this._length + \", \" + \"size: \" + this.end(this.getLength() - 1) + \", \" + \"[blocks: \" + this.block_table.length + \"]\" + \", \" + \"gap: \" + this._gap + \", \" + \"defaultSize: \" + this._defaultSize + \", \" + \"pendingRemoves: \" + (this.removes ? this.removes.length : 0) + \", \" + \"pendingInserts: \" + (this.inserts ? this.inserts.length : 0) + \" }\";\n}\n/**\n * @private\n * A LinearLayoutVector block of layout element heights or widths.\n *\n * Total \"distance\" for a Block is: sizesSum + (defaultCount * distanceVector.default).\n */\n\n\nfunction Block(block_size) {\n  this.sizes = new Array(block_size);\n  this.sizesSum = 0;\n  this.defaultCount = block_size;\n\n  for (var i = -1; ++i < block_size;) {\n    this.sizes[i] = NaN;\n  }\n}","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","module.exports = {\n  \"default\": require(\"core-js/library/fn/promise\"),\n  __esModule: true\n};","require('../modules/es6.object.to-string');\n\nrequire('../modules/es6.string.iterator');\n\nrequire('../modules/web.dom.iterable');\n\nrequire('../modules/es6.promise');\n\nrequire('../modules/es7.promise.finally');\n\nrequire('../modules/es7.promise.try');\n\nmodule.exports = require('../modules/_core').Promise;","'use strict';\n\nvar LIBRARY = require('./_library');\n\nvar global = require('./_global');\n\nvar ctx = require('./_ctx');\n\nvar classof = require('./_classof');\n\nvar $export = require('./_export');\n\nvar isObject = require('./_is-object');\n\nvar aFunction = require('./_a-function');\n\nvar anInstance = require('./_an-instance');\n\nvar forOf = require('./_for-of');\n\nvar speciesConstructor = require('./_species-constructor');\n\nvar task = require('./_task').set;\n\nvar microtask = require('./_microtask')();\n\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\n\nvar perform = require('./_perform');\n\nvar userAgent = require('./_user-agent');\n\nvar promiseResolve = require('./_promise-resolve');\n\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\n\nvar empty = function empty() {\n  /* empty */\n};\n\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    }; // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n\n\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // we can't detect it synchronously, so just check versions\n    && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) {\n    /* empty */\n  }\n}(); // helpers\n\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n\n    while (chain.length > i) {\n      run(chain[i++]);\n    } // variable length - can't use forEach\n\n\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\n\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      }); // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\n\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\n\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\n\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\n\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        }; // wrap\n\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e); // wrap\n  }\n}; // constructor polyfill\n\n\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  }; // eslint-disable-next-line no-unused-vars\n\n\n  Internal = function Promise(executor) {\n    this._c = []; // <- awaiting reactions\n\n    this._a = undefined; // <- checked in isUnhandled reactions\n\n    this._s = 0; // <- state\n\n    this._d = false; // <- done\n\n    this._v = undefined; // <- value\n\n    this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n\n    this._n = false; // <- notify\n  };\n\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n\n      this._c.push(reaction);\n\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {\n  Promise: $Promise\n});\n\nrequire('./_set-to-string-tag')($Promise, PROMISE);\n\nrequire('./_set-species')(PROMISE);\n\nWrapper = require('./_core')[PROMISE]; // statics\n\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n\n  return it;\n};","var ctx = require('./_ctx');\n\nvar call = require('./_iter-call');\n\nvar isArrayIter = require('./_is-array-iter');\n\nvar anObject = require('./_an-object');\n\nvar toLength = require('./_to-length');\n\nvar getIterFn = require('./core.get-iterator-method');\n\nvar BREAK = {};\nvar RETURN = {};\n\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!'); // fast case for arrays with default iterator\n\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n\n  return fn.apply(that, args);\n};","var global = require('./_global');\n\nvar macrotask = require('./_task').set;\n\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n\n    last = undefined;\n    if (parent) parent.enter();\n  }; // Node.js\n\n\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    }; // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, {\n      characterData: true\n    }); // eslint-disable-line no-new\n\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    }; // environments with maybe non-completely correct, but existent Promise\n\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n\n    notify = function notify() {\n      promise.then(flush);\n    }; // for other environments - macrotask based on:\n    // - setImmediate\n    // - MessageChannel\n    // - window.postMessag\n    // - onreadystatechange\n    // - setTimeout\n\n  } else {\n    notify = function notify() {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n\n    if (!head) {\n      head = task;\n      notify();\n    }\n\n    last = task;\n  };\n};","var global = require('./_global');\n\nvar navigator = global.navigator;\nmodule.exports = navigator && navigator.userAgent || '';","var hide = require('./_hide');\n\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];else hide(target, key, src[key]);\n  }\n\n  return target;\n};","'use strict';\n\nvar global = require('./_global');\n\nvar core = require('./_core');\n\nvar dP = require('./_object-dp');\n\nvar DESCRIPTORS = require('./_descriptors');\n\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};","// https://github.com/tc39/proposal-promise-finally\n'use strict';\n\nvar $export = require('./_export');\n\nvar core = require('./_core');\n\nvar global = require('./_global');\n\nvar speciesConstructor = require('./_species-constructor');\n\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});","'use strict'; // https://github.com/tc39/proposal-promise-try\n\nvar $export = require('./_export');\n\nvar newPromiseCapability = require('./_new-promise-capability');\n\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});","module.exports = {\n  \"default\": require(\"core-js/library/fn/object/get-own-property-descriptor\"),\n  __esModule: true\n};","require('../../modules/es6.object.get-own-property-descriptor');\n\nvar $Object = require('../../modules/_core').Object;\n\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\n\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);"],"sourceRoot":""}