{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/CanQuery.tsx","atoms/HorizontalSeparator.tsx","hooks/useGuardedMutation.tsx","atoms/Price.tsx","atoms/SelectControlFlat.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","hooks/useOnConnectionRestored.ts","segments/order/organisms/OrderListBranchFilter.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenOrderWareLine.tsx","segments/kitchen/organisms/KitchenOrderWareList.tsx","segments/kitchen/molecules/KitchenAcceptButton.tsx","segments/kitchen/molecules/KitchenOrderDetail.tsx","segments/kitchen/molecules/KitchenOrderBox.tsx","segments/kitchen/organisms/KitchenOrderListLoader.tsx","segments/kitchen/organisms/KitchenOrderList.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/routes/KitchenRoutes.tsx"],"names":["IconLineWrap","styled","div","withConfig","displayName","componentId","DescriptionContainer","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_1__","_RootProvider__WEBPACK_IMPORTED_MODULE_2__","mutationName","useRoot","user","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","NoAccess","PageLayoutFullHeightItem","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","id","CanQuery","queryName","canQuery","HorizontalSeparator","_styling__WEBPACK_IMPORTED_MODULE_2__","HorizontalSeparatorStyled","greyLight","_ref$visible","visible","useGuardedMutation","mutation","options","defaultMessage","_i18n__WEBPACK_IMPORTED_MODULE_9__","_","_useSnackBar","useSnackBar","enqueueSnackbar","enqueueError","enqueueWarning","handleUserErrors","useCallback","userErrors","forEach","handleGraphQLErrors","errors","filter","RM","propEq","map","prop","handleError","err","isApolloError","networkError","graphQLErrors","reportError","action","react__WEBPACK_IMPORTED_MODULE_5___default","ShowFeedbackButton","key","mutate","useMutation","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","variables","result","_data","wrap","_context","prev","next","sent","abrupt","data","getUserErrors","t0","stop","this","_x","apply","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_10__","onClick","Raven","showReportDialog","_lingui_react__WEBPACK_IMPORTED_MODULE_2__","Price","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","className","formatPrice","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_6___default","hasSelection","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","idx","Component","defaultProps","getItemValue","ScrollArea","CardDock","styled_components__WEBPACK_IMPORTED_MODULE_0__","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","padding","react","placeholder","i18n","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","cancelIconPadding","_templateObject","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","red","orange","green","bigNumberStyle","dashStyle","_templateObject2","clickable","_templateObject3","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","react__WEBPACK_IMPORTED_MODULE_2___default","companyBranch","_atoms_DeliveryTimeBadge__WEBPACK_IMPORTED_MODULE_10__","Date","orderStateCategory","OrderStateCategoryEnum","Cancel","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","formatAddress","address","_atoms_CustomerIdentity__WEBPACK_IMPORTED_MODULE_9__","_atoms_Price__WEBPACK_IMPORTED_MODULE_5__","totalSum","currency","code","isPaidWithCard","NoteLine","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_2__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_i18n__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","CurrentNoteStyled","span","PreviousNoteStyled","note","previousNote","useOnConnectionRestored","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","_helpers_offline__WEBPACK_IMPORTED_MODULE_1__","cb","useDisposable","whenGoingOnline","OrderListBranchFilter","react__WEBPACK_IMPORTED_MODULE_1__","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_3__","_styling__WEBPACK_IMPORTED_MODULE_4__","useObserver","from","list","setBranchFilter","clearBranchFilter","Label","DeliveryTime","DeliverLabel","deliverType","_lingui_react","KitchenOrderAtSummary","deliverTime","AccessTime","KitchenOrderAtSummary_DeliverLabel","formatTimeWithoutTodayDate","Circle","Small","CheckedInner","TouchCheckButton","isChecked","OrderWareLineWrap","IsDoneContainerStyled","CodeContainerStyled","FontSizes","CompactCardBig","NameContainerStyled","KitchenOrderWareLine","recipeId","isDone","isCheckable","updateOrderRecipeState","useMKitchenRecipeState","TouchCheckButton_TouchCheckButton","OrderRecipeStateEnum","Preparing","Cooked","KitchenOrderWareList","orderWares","orderWare","KitchenOrderWareLine_KitchenOrderWareLine","recipe","nameLabel","orderRecipeState","sidedishes","sidedish","KitchenAcceptButton","orderId","acceptOrder","UpdateOrderStateMutation","TouchButton","ButtonHeight","OrderStateEnum","InProduce","OrderDetailContainerStyled","KitchenOrderDetail","KitchenOrderWareList_KitchenOrderWareList","ReadyToDeliver","KitchenOrderAtSummary_KitchenOrderAtSummary","NewOrders","KitchenAcceptButton_KitchenAcceptButton","OrderBoxStyled","CompactCard","greyDarkest","Middle","KitchenOrderBox","href","replace","KitchenOrderDetail_KitchenOrderDetail","requiredCategories","loaderContext","createContext","loading","noFilter","orders","KitchenOrderListLoader","observer","orderModel","hasBranchFilter","_useQKitchenOrderList","useQKitchenOrderList","branchesFilter","categories","skip","updateQuery","refetch","useSKitchenOrderList","onSubscriptionData","dataUpdate","subscriptionData","update","updatedOrder","orderExists","o","unshift","handleSubscriptionUpdate","Provider","InfoMessage","KitchenOrderList","category","_useKitchenOrderList","useContext","categoryOrders","KitchenOrderBox_KitchenOrderBox","CategorySeparator","KitchenOverviewPage","PageLayout","pageTitle","useBackButton","layouts","i","x","y","w","h","KitchenRoutes_KitchenRoutes","KitchenRoutes","match","react_router","SecureRoute","exact","path"],"mappings":"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","file":"static/js/174.d5b28142.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return user.canMutate(mutationName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return user.canQuery(queryName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import { Trans } from '@lingui/macro'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport Raven from 'raven-js'\nimport React, { useCallback } from 'react'\nimport { MutationHookOptions, useMutation } from 'react-apollo-hooks'\n\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { useSnackBar } from './useSnackBar'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const { enqueueSnackbar, enqueueError, enqueueWarning } = useSnackBar()\n\n  const handleUserErrors = useCallback((userErrors: ReadonlyArray<string>) => {\n    userErrors.forEach(enqueueWarning)\n  }, [])\n\n  const handleGraphQLErrors = useCallback(\n    (errors: ReadonlyArray<GraphQLError>) => {\n      const userErrors = errors.filter(RM.propEq('showToUser', true))\n      if (userErrors.length === 0) {\n        enqueueError(defaultMessage)\n      } else {\n        handleUserErrors(userErrors.map(RM.prop('message')))\n      }\n    },\n    [],\n  )\n\n  const handleError = useCallback((err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        enqueueError(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n    enqueueSnackbar(defaultMessage, {\n      action: [<ShowFeedbackButton key=\"feedback\" />],\n    })\n  }, [])\n\n  const mutate = useMutation(mutation, options)\n  return async (variables: TVariables) => {\n    try {\n      const result = await mutate({ variables })\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      const data = result.data as TData\n      if (options.getUserErrors) {\n        const userErrors = options.getUserErrors(data)\n        if (userErrors !== null) {\n          handleUserErrors(userErrors)\n        }\n      }\n      return data\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n\nfunction ShowFeedbackButton() {\n  return (\n    <TouchButton onClick={() => Raven.showReportDialog()}>\n      <Trans> Submit feedback </Trans>\n    </TouchButton>\n  )\n}\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { GOrderListTicker, GOrderStateCategory } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={\n              order.orderStateCategory === OrderStateCategoryEnum.Cancel\n            }\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          <Price\n            price={order.totalSum.value}\n            currencyCode={order.totalSum.currency.code}\n          />\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { Colors } from '../../../styling'\n\ninterface IOrderListBranchFilterProps {}\n\nexport const OrderListBranchFilter: React.FC<\n  IOrderListBranchFilterProps\n> = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(order.list.branches)}\n      onSelectionChange={branches => {\n        order.list.setBranchFilter(branches)\n      }}\n      onSelectionClear={order.list.clearBranchFilter}\n      textColor={Colors.turquoise}\n      isMulti={true}\n      isClearable={false}\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  deliverTime: string | null\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<IProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<IProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport {\n  OrderRecipeStateEnum,\n  useMKitchenRecipeState,\n} from '../../../graph/generated'\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\n\ninterface IProps {\n  recipeId?: ID\n  code?: string\n  label: string\n  isDone: boolean\n  isCheckable: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst IsDoneContainerStyled = styled.div`\n  flex: 0 0 2.4rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 4.1rem;\n  font-size: ${FontSizes.CompactCardBig};\n  color: ${Colors.black};\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\n\nexport const KitchenOrderWareLine: React.FC<IProps> = ({\n  recipeId,\n  code,\n  label,\n  isDone,\n  isCheckable,\n}) => {\n  const updateOrderRecipeState = useMKitchenRecipeState()\n\n  return (\n    <OrderWareLineWrap>\n      <IsDoneContainerStyled>\n        {isCheckable && (\n          <TouchCheckButton\n            isChecked={isDone}\n            onClick={() => {\n              if (recipeId) {\n                updateOrderRecipeState({\n                  recipeId,\n                  state: isDone\n                    ? OrderRecipeStateEnum.Preparing\n                    : OrderRecipeStateEnum.Cooked,\n                })\n              }\n            }}\n          />\n        )}\n      </IsDoneContainerStyled>\n      <CodeContainerStyled>{code}</CodeContainerStyled>\n      <NameContainerStyled>{label}</NameContainerStyled>\n    </OrderWareLineWrap>\n  )\n}\n","import React, { Fragment } from 'react'\n\nimport { OrderRecipeStateEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { KitchenOrderWareLine } from '../molecules/KitchenOrderWareLine'\n\ninterface IProps {\n  orderWares: ReadonlyArray<FKitchenOrder.Items>\n  isCheckable: boolean\n}\n\nexport const KitchenOrderWareList: React.FC<IProps> = ({\n  orderWares,\n  isCheckable,\n}) => {\n  const renderWare = (orderWare: FKitchenOrder.Items) => (\n    <Fragment key={orderWare.id}>\n      <KitchenOrderWareLine\n        recipeId={orderWare.id}\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        isDone={orderWare.orderRecipeState.enum === OrderRecipeStateEnum.Cooked}\n        isCheckable={isCheckable}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <KitchenOrderWareLine\n            key={`${orderWare.id}-${sidedish.id}`}\n            recipeId={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            isDone={false}\n            isCheckable={false}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import React from 'react'\n\nimport { OrderStateEnum } from '../../../graph/generated'\nimport { GUpdateOrderState } from '../../../graph/types'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { UpdateOrderStateMutation } from '../../order/models/OrderStateModel.graphql'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const KitchenAcceptButton: React.FC<IProps> = ({ orderId }) => {\n  const acceptOrder = useGuardedMutation<\n    GUpdateOrderState.Mutation,\n    GUpdateOrderState.Variables\n  >(UpdateOrderStateMutation)\n\n  return (\n    <TouchButton\n      iconName=\"keyboard_arrow_right\"\n      width={Spacing.ButtonHeight}\n      color={Colors.green}\n      onClick={() => {\n        acceptOrder({ orderId, state: OrderStateEnum.InProduce })\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { KitchenOrderWareList } from '../organisms/KitchenOrderWareList'\nimport { KitchenAcceptButton } from './KitchenAcceptButton'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.2rem 0.1rem 0.2rem;\n`\n\nexport const KitchenOrderDetail: React.FC<IProps> = ({ order }) => (\n  <OrderDetailContainerStyled>\n    <HorizontalSeparator />\n    <KitchenOrderWareList\n      orderWares={order.items}\n      isCheckable={\n        order.orderStateCategory === OrderStateCategoryEnum.Preparing ||\n        order.orderStateCategory === OrderStateCategoryEnum.ReadyToDeliver\n      }\n    />\n    <HorizontalSeparator />\n    <KitchenOrderAtSummary\n      deliverTime={order.deliverAt}\n      deliverType={\n        order.deliveryType &&\n        order.deliveryType.enum === DeliveryTypeEnum.Pickup\n          ? 'PERSONAL'\n          : 'DELIVER_UNTIL'\n      }\n    />\n    <NoteLine note={order.note} previousNote={order.previousNote} />\n    {order.orderStateCategory === OrderStateCategoryEnum.NewOrders && (\n      <CardDock position=\"BottomRight\">\n        <KitchenAcceptButton orderId={order.id} />\n      </CardDock>\n    )}\n  </OrderDetailContainerStyled>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenOrderDetail } from './KitchenOrderDetail'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n  showBranch: boolean\n}\nexport const OrderBoxStyled = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n`\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.2rem;\n  color: ${Colors.greyMiddle};\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 1.8rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n`\n\nexport const KitchenOrderBox: React.FC<IProps> = ({ order, showBranch }) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderBoxStyled>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n          <br />\n          {order.customer && order.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${order.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {order.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </CustomerIdentityContainerStyled>\n      </OrderTickerMainContentStyled>\n\n      <KitchenOrderDetail order={order} />\n    </OrderBoxStyled>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderStateCategoryEnum,\n  QKitchenOrderListOrders,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\ntype TOrder = QKitchenOrderListOrders\n\ninterface ILoaderContext {\n  loading: boolean\n  noFilter: boolean\n  orders: ReadonlyArray<TOrder>\n}\n\nconst loaderContext = React.createContext<ILoaderContext>({\n  loading: true,\n  noFilter: true,\n  orders: [],\n})\n\nexport const KitchenOrderListLoader: React.FC = observer(props => {\n  const { order: orderModel } = useRoot()\n  const noFilter = !orderModel.list.hasBranchFilter\n  const { data, loading, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    { skip: noFilter },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    {\n      skip: noFilter,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return (\n    <loaderContext.Provider\n      value={{\n        loading,\n        noFilter,\n        orders: loading ? [] : data.orders,\n      }}\n    >\n      {props.children}\n    </loaderContext.Provider>\n  )\n})\n\nexport function useKitchenOrderList() {\n  return React.useContext(loaderContext)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(RM.propEq('id', order.id)) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { KitchenOrderBox } from '../molecules/KitchenOrderBox'\nimport { useKitchenOrderList } from './KitchenOrderListLoader'\n\ninterface IProps {\n  category: OrderStateCategoryEnum\n}\n\nconst InfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n\nexport const KitchenOrderList = observer<IProps>(({ category }) => {\n  const { order: orderModel } = useRoot()\n  const { loading, noFilter, orders } = useKitchenOrderList()\n\n  if (noFilter) {\n    return (\n      <InfoMessage>\n        <Trans>Select a branch</Trans>\n      </InfoMessage>\n    )\n  }\n\n  if (loading) {\n    return (\n      <InfoMessage>\n        <Trans>Loading</Trans>\n      </InfoMessage>\n    )\n  }\n\n  const categoryOrders = orders.filter(\n    RM.propEq('orderStateCategory', category),\n  )\n\n  if (categoryOrders.length === 0) {\n    switch (category) {\n      case OrderStateCategoryEnum.NewOrders:\n        return (\n          <InfoMessage>\n            <Trans>No new orders</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.Preparing:\n        return (\n          <InfoMessage>\n            <Trans>No orders to prepare</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.ReadyToDeliver:\n        return (\n          <InfoMessage>\n            <Trans>No orders to deliver</Trans>\n          </InfoMessage>\n        )\n      default:\n        return (\n          <InfoMessage>\n            <Trans>No orders</Trans>\n          </InfoMessage>\n        )\n    }\n  }\n\n  return (\n    <>\n      {categoryOrders.map(order => (\n        <KitchenOrderBox\n          key={order.id}\n          order={order}\n          showBranch={orderModel.list.branchesFilter.length > 1}\n        />\n      ))}\n    </>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { Colors } from '../../../styling'\nimport { OrderListBranchFilter } from '../../order/organisms/OrderListBranchFilter'\nimport { KitchenOrderList } from '../organisms/KitchenOrderList'\nimport { KitchenOrderListLoader } from '../organisms/KitchenOrderListLoader'\n\nfunction getLayout() {\n  return [{ i: 'filter', x: 4, y: 0, w: 10, h: 1 }]\n}\n\nconst CategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: -0.3rem;\n`\n\nexport const KitchenOverviewPage: React.FC = () => (\n  <KitchenOrderListLoader>\n    <PageLayoutFullHeightItem withScrollArea={true} row={1} widthInColumns={5}>\n      <KitchenOrderList category={OrderStateCategoryEnum.NewOrders} />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={5}\n      widthInColumns={6}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.Preparing} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={11}\n      widthInColumns={5}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.ReadyToDeliver} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      layouts={getLayout()}\n    >\n      <PageLayoutItem\n        key=\"filter\"\n        component={() => <OrderListBranchFilter />}\n      />\n    </PageLayout>\n  </KitchenOrderListLoader>\n)\n","import React from 'react'\nimport { RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const KitchenRoutes: React.FC<IProps> = ({ match }) => {\n  return (\n    <>\n      <Switch>\n        <SecureRoute\n          exact={true}\n          path={match.path}\n          component={KitchenOverviewPage}\n        />\n      </Switch>\n    </>\n  )\n}\n\nexport default KitchenRoutes\n"],"sourceRoot":""}