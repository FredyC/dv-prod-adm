{"version":3,"sources":["atoms/FormInputTextBox.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/LoginPageBackground.tsx","assets/bg_login.jpg","assets/bg_login@2x.jpg","atoms/NotifyMessage.tsx","segments/login/molecules/PasswordLoginError.tsx","segments/login/organisms/PasswordLoginForm.tsx","segments/login/pages/PasswordLoginPage.tsx","segments/login/routes/PasswordLoginRoute.tsx"],"names":["inputStyle","styled_components__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_5__","MarginAroundFormComponents","invalidInputStyle","FormInputStyled","input","withConfig","displayName","invalid","FormInputTextBox","react__WEBPACK_IMPORTED_MODULE_0___default","a","forwardRef","_a","inputRef","field","inputWidth","DefaultInputWidth","inputWidthUnit","DefaultSizeUnit","isRequired","validatioName","validationMessage","validate","props","__rest","createElement","react_form__WEBPACK_IMPORTED_MODULE_1__","value","Object","validator__WEBPACK_IMPORTED_MODULE_3__","_i18n__WEBPACK_IMPORTED_MODULE_4__","_","fieldApi","_extends","width","onChange","ev","setTouched","setValue","target","Boolean","error","ref","FormSubmit","children","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_3__","color","_styling__WEBPACK_IMPORTED_MODULE_4__","green","disabled","_helpers_form__WEBPACK_IMPORTED_MODULE_2__","submitting","onClick","e","preventDefault","submitForm","__webpack_require__","d","__webpack_exports__","isFormValid","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","length","fieldName","LoginPageBackground","styled_components__WEBPACK_IMPORTED_MODULE_0__","_assets_bg_login_jpg__WEBPACK_IMPORTED_MODULE_1__","_assets_bg_login_jpg__WEBPACK_IMPORTED_MODULE_1___default","n","_assets_bg_login_2x_jpg__WEBPACK_IMPORTED_MODULE_2__","_assets_bg_login_2x_jpg__WEBPACK_IMPORTED_MODULE_2___default","div","module","exports","p","NotifyMessageContainerStyled","styled_components_browser_esm","isError","styling","red","NotifyMessageStyled","NotifyMessage","isVisible","react_default","data-testid","PasswordLoginError","index_module","model","hasFailed","errorMessage","LoginContainerStyled","PasswordContainerStyled","SubmitButtonContainerStyled","PasswordLoginForm","es","onSubmit","username","password","requestToken","render","formApi","name","i18n","autoFocus","placeholder","type","_lingui_react","id","PasswordLoginPage","PageTitle","title","GridLayout","layouts","i","x","y","w","h","key","Display","PasswordLoginRoute","auth","RootProvider","isAuthenticatedUser","react_router","to","provider","passwordLogin"],"mappings":"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","file":"static/js/48.ed6f8ad3.chunk.js","sourcesContent":["import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport styled, { css } from 'styled-components'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { Spacing } from '../styling'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  inputWidth?: number\n  inputWidthUnit?: string\n  isRequired?: boolean\n  validatioName?: string\n  validationMessage?: string\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nconst inputStyle = css`\n  outline: none;\n  margin: ${Spacing.MarginAroundFormComponents};\n`\n\nconst invalidInputStyle = css`\n  border: 1px red solid;\n`\n\nexport const FormInputStyled = styled.input`\n  ${inputStyle};\n  ${({ invalid }: { invalid?: boolean }) => invalid && invalidInputStyle};\n`\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputWidth = Spacing.DefaultInputWidth,\n      inputWidthUnit = Spacing.DefaultSizeUnit,\n      isRequired,\n      validatioName,\n      validationMessage,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            if (validationMessage) {\n              return validationMessage\n            }\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          width={`${inputWidth}${inputWidthUnit}`}\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            fieldApi.setTouched(true)\n            fieldApi.setValue(ev.target.value)\n          }}\n          invalid={Boolean(fieldApi.error)}\n          // @ts-ignore\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.SFC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import styled from 'styled-components'\n\nimport backgroundImage from '../assets/bg_login.jpg'\nimport backgroundImage2x from '../assets/bg_login@2x.jpg'\n\nexport const LoginPageBackground = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n\n  @media only screen and (-webkit-min-device-pixel-ratio: 1.3),\n    only screen and (min--moz-device-pixel-ratio: 1.3),\n    only screen and (-o-min-device-pixel-ratio: 2.6/2),\n    only screen and (min-device-pixel-ratio: 1.3),\n    only screen and (min-width: 1024px) {\n    background-image: url(${backgroundImage2x});\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/media/bg_login.382d98be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg_login@2x.35ab1818.jpg\";","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface INotifyMessageProps {\n  isError?: Boolean\n  isVisible: Boolean\n  onClick?(): void\n}\n\nconst backgroundProperty = (props: INotifyMessageProps) =>\n  props.isError ? Colors.red : Colors.green\n\nconst NotifyMessageContainerStyled = styled.div`\n  position: relative;\n  border-radius: 1rem;\n  width: 60%;\n  height: 3.9rem;\n  opacity: 0.85;\n  left: 20%;\n  background: ${backgroundProperty};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst NotifyMessageStyled = styled.div`\n  color: white;\n  text-align: center;\n  margin: 0 0.5rem 0.4rem 0.5rem;\n  font-size: 1.375rem;\n`\n\nexport const NotifyMessage: React.SFC<INotifyMessageProps> = ({\n  children,\n  isVisible,\n  isError = false,\n  onClick,\n  ...props\n}) =>\n  isVisible ? (\n    <NotifyMessageContainerStyled\n      onClick={onClick}\n      isVisible={isVisible}\n      isError={isError}\n      {...props}\n    >\n      <NotifyMessageStyled data-testid={`notify${isError ? '-error' : ''}`}>\n        {children}\n      </NotifyMessageStyled>\n    </NotifyMessageContainerStyled>\n  ) : null\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NotifyMessage } from '../../../atoms/NotifyMessage'\nimport { TPasswordLoginModel } from '../models/PasswordLoginModel'\n\ninterface IPasswordLoginErrorProps {\n  model: TPasswordLoginModel\n}\n\nexport const PasswordLoginError = observer<IPasswordLoginErrorProps>(\n  ({ model }) =>\n    model.hasFailed ? (\n      <NotifyMessage isVisible={true} isError={true}>\n        {model.errorMessage}\n      </NotifyMessage>\n    ) : null,\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport { TPasswordLoginModel } from '../models/PasswordLoginModel'\n\ninterface IPasswordLoginFormProps {\n  model: TPasswordLoginModel\n}\n\nconst LoginContainerStyled = styled.div`\n  display: inline-block;\n  margin: 0.5rem;\n`\nconst PasswordContainerStyled = styled.div`\n  margin: 0.5rem;\n`\nconst SubmitButtonContainerStyled = styled.div`\n  display: inline-block;\n  width: 14rem;\n  margin: 0.5rem;\n`\n\ninterface IFormValues {\n  username: string\n  password: string\n}\n\nexport const PasswordLoginForm: React.SFC<IPasswordLoginFormProps> = ({\n  model,\n}) => (\n  <Form\n    onSubmit={({ username, password }: IFormValues) =>\n      model.requestToken(username, password)\n    }\n    render={formApi => (\n      <form onSubmit={formApi.submitForm}>\n        <LoginContainerStyled>\n          <FormInputTextBox\n            field=\"username\"\n            name=\"username\"\n            isRequired={true}\n            validatioName={i18n.t`username`}\n            autoFocus={true}\n            placeholder={i18n.t`username`}\n          />\n        </LoginContainerStyled>\n\n        <PasswordContainerStyled>\n          <FormInputTextBox\n            field=\"password\"\n            name=\"password\"\n            isRequired={true}\n            validatioName={i18n.t`password`}\n            type=\"password\"\n            placeholder={i18n.t`password`}\n          />\n        </PasswordContainerStyled>\n\n        <SubmitButtonContainerStyled>\n          <FormSubmit>\n            <Trans>Sign-in</Trans>\n          </FormSubmit>\n        </SubmitButtonContainerStyled>\n      </form>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { GridLayout } from '../../../atoms/GridLayout'\nimport { LoginPageBackground } from '../../../atoms/LoginPageBackground'\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { TPasswordLoginModel } from '../models/PasswordLoginModel'\nimport { PasswordLoginError } from '../molecules/PasswordLoginError'\nimport { PasswordLoginForm } from '../organisms/PasswordLoginForm'\n\ninterface IPasswordLoginPageProps {\n  model: TPasswordLoginModel\n}\n\nfunction getLayout() {\n  return [\n    { i: 'title', x: 6, y: 2, w: 8, h: 1 },\n    { i: 'loginform', x: 6, y: 3, w: 8, h: 4 },\n  ]\n}\n\nexport const PasswordLoginPage: React.SFC<IPasswordLoginPageProps> = ({\n  model,\n}) => (\n  <LoginPageBackground>\n    <PageTitle title={i18n.t`Login page`} />\n    <GridLayout layouts={getLayout()}>\n      <div key=\"title\">\n        <PageTitle.Display />\n      </div>\n      <div key=\"loginform\">\n        <PasswordLoginForm model={model} />\n      </div>\n    </GridLayout>\n    <PasswordLoginError model={model} />\n  </LoginPageBackground>\n)\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { PasswordLoginPage } from '../pages/PasswordLoginPage'\n\nexport const PasswordLoginRoute = () => {\n  const { auth } = useRoot()\n  return auth.isAuthenticatedUser ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <PasswordLoginPage model={auth.provider.passwordLogin} />\n  )\n}\n\nexport default PasswordLoginRoute\n"],"sourceRoot":""}