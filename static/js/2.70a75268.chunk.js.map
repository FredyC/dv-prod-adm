{"version":3,"sources":["../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/CellMeasurer/index.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/react-virtualized/dist/es/index.js","../node_modules/core-js/library/modules/_new-promise-capability.js","../node_modules/dom-helpers/util/scrollbarSize.js","../node_modules/core-js/library/modules/_species-constructor.js","../node_modules/core-js/library/modules/_task.js","../node_modules/core-js/library/modules/_perform.js","../node_modules/core-js/library/modules/_promise-resolve.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@material-ui/icons/esm/Edit.js","../node_modules/linear-layout-vector/index.js","../node_modules/dom-helpers/util/inDOM.js","../node_modules/babel-runtime/core-js/promise.js","../node_modules/core-js/library/fn/promise.js","../node_modules/core-js/library/modules/es6.promise.js","../node_modules/core-js/library/modules/_an-instance.js","../node_modules/core-js/library/modules/_for-of.js","../node_modules/core-js/library/modules/_invoke.js","../node_modules/core-js/library/modules/_microtask.js","../node_modules/core-js/library/modules/_user-agent.js","../node_modules/core-js/library/modules/_redefine-all.js","../node_modules/core-js/library/modules/_set-species.js","../node_modules/core-js/library/modules/es7.promise.finally.js","../node_modules/core-js/library/modules/es7.promise.try.js","../node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js","../node_modules/core-js/library/fn/object/get-own-property-descriptor.js","../node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","../node_modules/babel-runtime/helpers/defineProperty.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js"],"names":["calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","this","_lastMeasuredIndex","_cellSizeGetter","_cellCount","_estimatedCellSize","_layoutVector","setLength","setDefaultSize","key","value","_ref2","index","Error","vector","token","i","_size","undefined","setItemSize","Math","min","offset","start","size","getItemSize","lastIndex","end","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","datum","getSizeAndPositionOfCell","maxOffset","minOffset","idealOffset","max","totalSize","getTotalSize","params","_findNearestCell","stop","isNaN","targetOffset","nearestCellIndex","indexOf","getMaxElementSize","window","chrome","webstore","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","getSizeAndPositionOfLastMeasuredCell","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","SCROLL_DIRECTION_FORWARD","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","frame","delay","resolve","then","Date","now","timeout","call","SCROLL_POSITION_CHANGE_REASONS","_React$PureComponent","Grid","props","_this","__proto__","_onGridRenderedMemoizer","_onScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","_renderedColumnStartIndex","_renderedColumnStopIndex","_renderedRowStartIndex","_renderedRowStopIndex","_styleCache","_cellCache","_debounceScrollEndedCallback","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","_invokeOnGridRenderedHelper","onSectionRendered","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","columnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","rowStopIndex","_setScrollingContainerRef","ref","_scrollingContainer","_onScroll","event","target","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","prevScrollLeft","scrollLeft","prevScrollTop","scrollTop","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_props","autoHeight","autoWidth","height","width","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_props2","_ref4$columnIndex","_ref4$rowIndex","_props3","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_props5","_state","columnOrRowCountJustIncreasedFromZero","_props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","style","tabIndex","_state2","_isScrolling","gridStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","onScroll","maxWidth","maxHeight","overflow","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","recomputeGridSize","_this3","_props7","clientHeight","clientWidth","scrollHeight","scrollWidth","Object","hasOwnProperty","Boolean","_onScrollbarPresenceChange","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","defaultProps","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","top","cellRendererParams","renderedCell","push","propTypes","ArrowKeyStepper","_temp","_ret","_len","args","_key","apply","concat","_onKeyDown","_this$props","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_onSectionRendered","children","_getScrollState2","onKeyDown","isControlled","onScrollToChange","AutoSizer","defaultHeight","defaultWidth","_onResize","disableHeight","disableWidth","onResize","_parentNode","_height","offsetHeight","_width","offsetWidth","_style","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","_setRef","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","addResizeListener","removeResizeListener","outerStyle","childParams","CellMeasurer","_measure","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","_maybeMeasureCell","measure","node","styleWidth","styleHeight","ceil","_props$columnIndex","_props$rowIndex","_getCellMeasurements2","invalidateCellSizeAfterRender","__internalCellMeasurerFlag","DEFAULT_HEIGHT","DEFAULT_WIDTH","CellMeasurerCache","_cellHeightCache","_cellWidthCache","_columnWidthCache","_rowHeightCache","_columnCount","_rowCount","_keyMapper","_defaultWidth","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_updateCachedColumnAndRowSizes","_key2","columnKey","_i","rowKey","get","OBSERVED","REQUESTED","CollectionView","_calculateSizeAndPositionDataOnNextUpdate","_onSectionRenderedMemoizer","_invokeOnSectionRenderedHelper","cellLayoutManager","getLastRenderedIndices","_updateScrollPositionForScrollToCell","_this$props2","scrollToCell","_this$state","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","_this$props3","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","Section","_indexMap","_indices","SECTION_SIZE","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","forEach","section","getCellIndices","map","sectionXStart","floor","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_sectionManager","cellGroupRenderer","getCellMetadata","cellRendererProps","filter","ColumnSizer","_registerChild","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","registerChild","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","_cellRenderer","rowRenderer","writable","getOffsetForCell","measureAllCells","_ref7$columnIndex","_ref7$rowIndex","scrollToPosition","noRowsRenderer","classNames","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","NOT_FOUND","SUCCESS","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","prototype","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","interval","rebuildWithoutInterval","idx","splice","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","remove","n","queryPoint","queryInterval","tproto","defineProperty","PositionCache","_columnSizeMap","_intervalTree","_leftMap","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","columnSizeMap","columnHeight","Masonry","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_positionCache","_startIndex","_startIndexMemoized","_stopIndex","_stopIndexMemoized","_debounceResetIsScrollingCallback","eventScrollTop","_getEstimatedTotalHeight","_debounceResetIsScrolling","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","batchSize","estimatedColumnCount","_onScrollMemoized","_onCellsRendered","onCellsRendered","cellPositioner","_cellPositioner","_left","_top","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","fixedColumnCount","fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_bottomLeftGrid","_bottomRightGrid","_topLeftGrid","_topRightGrid","_ref2$columnIndex","_ref2$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","rest","_prepareForRender","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","showVerticalScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","showHorizontalScrollbar","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","_props8","_state3","scrollInfo","_state4","_props9","_state5","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","_React$Component","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","_Grid","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","document","body","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","currentTarget","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","element","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","_window","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","_isMounted","_positionFromTop","_positionFromLeft","Element","console","warn","_child","updatePosition","_onChildScroll","scrollTo","_registerResizeListener","_unregisterResizeListener","_scrollLeft","_scrollTop","thisNode","dimensions","prevScrollElement","onChildScroll","aFunction","PromiseCapability","C","reject","$$resolve","$$reject","TypeError","module","exports","f","_interopRequireDefault","__esModule","default","recalc","_inDOM","scrollDiv","createElement","appendChild","removeChild","anObject","SPECIES","O","D","S","constructor","defer","channel","port","ctx","invoke","html","cel","global","process","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","run","fn","listener","Function","nextTick","port2","port1","onmessage","postMessage","importScripts","exec","e","v","isObject","newPromiseCapability","promiseCapability","createDetectElementResize","attachEvent","requestFrame","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","innerHTML","__animationListener__","detachEvent","LinearLayoutVector","block_size","pow","log","mask","block_shift","block_mask","block_table","_defaultSize","_axisOffset","_gap","removes","inserts","_length","_pendingLength","isIntervalClear","block","sizes","inBlockCopy","dstBlock","dstIndexStart","srcBlock","srcIndexStart","ascending","srcIndex","dstIndex","increment","dstSizes","srcSizes","dstValue","NaN","srcValue","sizesSumDelta","defaultCountDelta","sizesSum","defaultCount","copyInterval","dstBlockIndex","dstSizesIndex","srcBlockIndex","srcSizesIndex","copyCount","dstStartIndex","srcStartIndex","Block","clearInterval","blockIndex","sizesIndex","clearCount","flushPendingChanges","intervalsCount","reverse","getLength","srcStart","dstStart","intervalEnd","nextIntervalStart","newLength","oldLength","srcEnd","dstEnd","intervalStart","endIndex","partialBlock","getDefaultSize","getAxisOffset","setAxisOffset","getGap","setGap","oldValue","distance","lastBlock","lastBlockOffset","lastBlockLength","curDistance","blockSize","defaultSize","gap","blockGap","blockTable","blockTableLength","blockDistance","Number","_default","Promise","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","classof","$export","anInstance","forOf","speciesConstructor","task","microtask","newPromiseCapabilityModule","perform","userAgent","promiseResolve","versions","v8","$Promise","isNode","empty","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","it","notify","isReject","_n","chain","_c","_v","ok","_s","reaction","exited","handler","fail","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","reason","error","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","err","onFulfilled","onRejected","G","W","F","capability","iter","all","iterable","values","remaining","$index","alreadyCalled","race","Constructor","name","forbiddenField","isArrayIter","toLength","getIterFn","BREAK","RETURN","entries","that","ITERATOR","step","iterator","iterFn","next","done","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","last","flush","navigator","standalone","toggle","observe","characterData","hide","src","safe","core","dP","DESCRIPTORS","KEY","configurable","P","R","onFinally","isFunction","callbackfn","$Object","getOwnPropertyDescriptor","toIObject","$getOwnPropertyDescriptor","obj","_defineProperty","_defineProperty2","enumerable","DialogTitle","forwardRef","classes","_props$disableTypogra","disableTypography","other","variant","margin","padding"],"mappings":"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","file":"static/js/2.70a75268.chunk.js","sourcesContent":["export default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex; // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport LinearLayoutVector from 'linear-layout-vector';\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\n\nvar CellSizeAndPositionManager = function () {\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    this._lastMeasuredIndex = -1;\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n    this._layoutVector = new LinearLayoutVector();\n\n    this._layoutVector.setLength(cellCount);\n\n    this._layoutVector.setDefaultSize(estimatedCellSize);\n  } // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n\n      this._layoutVector.setLength(cellCount);\n\n      this._layoutVector.setDefaultSize(estimatedCellSize);\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error('Requested index ' + index + ' is outside of range 0..' + this._cellCount);\n      }\n\n      var vector = this._layoutVector;\n\n      if (index > this._lastMeasuredIndex) {\n        var token = {\n          index: this._lastMeasuredIndex + 1\n        };\n\n        for (var i = token.index; i <= index; token.index = ++i) {\n          var _size = this._cellSizeGetter(token); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (_size === undefined || _size !== _size) {\n            throw Error('Invalid size returned for cell ' + i + ' of value ' + _size);\n          } else if (_size !== null) {\n            vector.setItemSize(i, _size);\n          }\n        }\n\n        this._lastMeasuredIndex = Math.min(index, this._cellCount - 1);\n      }\n\n      return {\n        offset: vector.start(index),\n        size: vector.getItemSize(index)\n      };\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      var index = this._lastMeasuredIndex;\n\n      if (index <= 0) {\n        return {\n          offset: 0,\n          size: 0\n        };\n      }\n\n      var vector = this._layoutVector;\n      return {\n        offset: vector.start(index),\n        size: vector.getItemSize(index)\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      var lastIndex = this._cellCount - 1;\n      return lastIndex >= 0 ? this._layoutVector.end(lastIndex) : 0;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset = void 0;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(params) {\n      if (this.getTotalSize() === 0) {\n        return {};\n      }\n\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var maxOffset = offset + containerSize - 1;\n      return {\n        start: this._findNearestCell(offset),\n        stop: this._findNearestCell(maxOffset)\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: '_findNearestCell',\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error('Invalid offset ' + offset + ' specified');\n      }\n\n      var vector = this._layoutVector;\n      var lastIndex = this._cellCount - 1; // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n      var targetOffset = Math.max(0, Math.min(offset, vector.start(lastIndex))); // First interrogate the constant-time lookup table\n\n      var nearestCellIndex = vector.indexOf(targetOffset); // If we haven't yet measured this high, compute sizes for each cell up to the desired offset.\n\n      while (nearestCellIndex > this._lastMeasuredIndex) {\n        // Measure all the cells up to the one we want to find presently.\n        // Do this before the last-index check to ensure the sparse array\n        // is fully populated.\n        this.getSizeAndPositionOfCell(nearestCellIndex); // No need to search and compare again if we're at the end.\n\n        if (nearestCellIndex === lastIndex) {\n          return nearestCellIndex;\n        }\n\n        nearestCellIndex = vector.indexOf(targetOffset); // Guard in case `getSizeAndPositionOfCell` didn't fully measure to\n        // the nearestCellIndex. This might happen scrolling quickly down\n        // and back up on large lists -- possible race with React or DOM?\n\n        if (nearestCellIndex === -1) {\n          nearestCellIndex = this._lastMeasuredIndex;\n          this._lastMeasuredIndex = nearestCellIndex - 1;\n          targetOffset = Math.max(0, Math.min(offset, vector.start(lastIndex)));\n        }\n      }\n\n      return nearestCellIndex;\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport default CellSizeAndPositionManager;\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSizeGetter } from '../types';\nimport { bpfrpt_proptype_VisibleCellRange } from '../types';","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome && !!window.chrome.webstore;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n/**\n * Browsers have scroll offset limitations (eg Chrome stops scrolling at ~33.5M pixels where as Edge tops out at ~1.5M pixels).\n * After a certain position, the browser won't allow the user to scroll further (even via JavaScript scroll offset adjustments).\n * This util picks a lower ceiling for max size and artificially adjusts positions within to make it transparent for users.\n */\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\n\nvar ScalingCellSizeAndPositionManager = function () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === undefined ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, ['maxScrollSize']);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager); // Favor composition over inheritance to simplify IE10 support\n\n\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: '_getOffsetPercentage',\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: '_offsetToSafeOffset',\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: '_safeOffsetToOffset',\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport default ScalingCellSizeAndPositionManager;\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSizeGetter } from '../types';\nimport { bpfrpt_proptype_VisibleCellRange } from '../types';","import _Object$keys from 'babel-runtime/core-js/object/keys';\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\n\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n\n    var keys = _Object$keys(indices);\n\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== _Object$keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from './types';\nimport { bpfrpt_proptype_OverscanIndices } from './types';","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSize } from '../types';","// Properly handle server-side rendering.\nvar win = void 0;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _Promise from 'babel-runtime/core-js/promise';\nimport { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  id: PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start = void 0; // wait for end of processing current event handler, because event handler may be long\n\n  _Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_AnimationTimeoutId };","import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/util/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\n\n\nvar Grid = function (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent); // Invokes onSectionRendered callback only when start/stop row or column indices change\n\n\n  function Grid(props) {\n    _classCallCheck(this, Grid);\n\n    var _this = _possibleConstructorReturn(this, (Grid.__proto__ || _Object$getPrototypeOf(Grid)).call(this, props));\n\n    _this._onGridRenderedMemoizer = createCallbackMemoizer();\n    _this._onScrollMemoizer = createCallbackMemoizer(false);\n    _this._deferredInvalidateColumnIndex = null;\n    _this._deferredInvalidateRowIndex = null;\n    _this._recomputeScrollLeftFlag = false;\n    _this._recomputeScrollTopFlag = false;\n    _this._horizontalScrollBarSize = 0;\n    _this._verticalScrollBarSize = 0;\n    _this._scrollbarPresenceChanged = false;\n    _this._renderedColumnStartIndex = 0;\n    _this._renderedColumnStopIndex = 0;\n    _this._renderedRowStartIndex = 0;\n    _this._renderedRowStopIndex = 0;\n    _this._styleCache = {};\n    _this._cellCache = {};\n\n    _this._debounceScrollEndedCallback = function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    };\n\n    _this._invokeOnGridRenderedHelper = function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    };\n\n    _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    };\n\n    _this._onScroll = function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    };\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        prevScrollLeft: props.scrollLeft,\n        prevScrollTop: props.scrollTop,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: props.scrollLeft || 0,\n      scrollTop: props.scrollTop || 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: 'getOffsetForCell',\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === undefined ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _extends({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: 'getTotalRowsHeight',\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: 'getTotalColumnsWidth',\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: 'handleScrollEvent',\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === undefined ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === undefined ? 0 : _ref2$scrollTop; // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _props = this.props,\n          autoHeight = _props.autoHeight,\n          autoWidth = _props.autoWidth,\n          height = _props.height,\n          width = _props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var _scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n\n        var _scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: _scrollDirectionHorizontal,\n          scrollDirectionVertical: _scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      var _props2 = this.props,\n          columnCount = _props2.columnCount,\n          rowCount = _props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === undefined ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === undefined ? 0 : _ref4$rowIndex;\n\n      var _props3 = this.props,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollToRow = _props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: 'scrollToCell',\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_extends({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_extends({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props4 = this.props,\n          getScrollbarSize = _props4.getScrollbarSize,\n          height = _props4.height,\n          scrollLeft = _props4.scrollLeft,\n          scrollToColumn = _props4.scrollToColumn,\n          scrollTop = _props4.scrollTop,\n          scrollToRow = _props4.scrollToRow,\n          width = _props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _extends({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _props5 = this.props,\n          autoHeight = _props5.autoHeight,\n          autoWidth = _props5.autoWidth,\n          columnCount = _props5.columnCount,\n          height = _props5.height,\n          rowCount = _props5.rowCount,\n          scrollToAlignment = _props5.scrollToAlignment,\n          scrollToColumn = _props5.scrollToColumn,\n          scrollToRow = _props5.scrollToRow,\n          width = _props5.width;\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollPositionChangeReason = _state.scrollPositionChangeReason,\n          scrollTop = _state.scrollTop,\n          instanceProps = _state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props6 = this.props,\n          autoContainerWidth = _props6.autoContainerWidth,\n          autoHeight = _props6.autoHeight,\n          autoWidth = _props6.autoWidth,\n          className = _props6.className,\n          containerProps = _props6.containerProps,\n          containerRole = _props6.containerRole,\n          containerStyle = _props6.containerStyle,\n          height = _props6.height,\n          id = _props6.id,\n          noContentRenderer = _props6.noContentRenderer,\n          role = _props6.role,\n          style = _props6.style,\n          tabIndex = _props6.tabIndex,\n          width = _props6.width;\n      var _state2 = this.state,\n          instanceProps = _state2.instanceProps,\n          needToResetStyleCache = _state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement('div', _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        'aria-label': this.props['aria-label'],\n        'aria-readonly': this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _extends({}, gridStyle, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement('div', {\n        className: 'ReactVirtualized__Grid__innerScrollContainer',\n        role: containerRole,\n        style: _extends({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: '_calculateChildrenToRender',\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: '_debounceScrollEnded',\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: '_invokeOnScrollMemoizer',\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _props7 = _this3.props,\n              height = _props7.height,\n              onScroll = _props7.onScroll,\n              width = _props7.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: '_isScrolling',\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state; // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: '_maybeCallOnScrollbarPresenceChange',\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var _onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n\n        _onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: 'scrollToPosition',\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: '_getCalculatedScrollLeft',\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: '_updateScrollLeftForScrollToColumn',\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: '_getCalculatedScrollTop',\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: '_resetStyleCache',\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = rowIndex + '-' + columnIndex;\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: '_updateScrollTopForScrollToRow',\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n      var instanceProps = prevState.instanceProps;\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== instanceProps.prevScrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== instanceProps.prevScrollTop && nextProps.scrollToRow < 0) {\n        _Object$assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      } // Initially we should not clearStyleCache\n\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        _Object$assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA = void 0;\n      var maybeStateB = void 0;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow;\n      instanceProps.prevScrollLeft = nextProps.scrollLeft;\n      instanceProps.prevScrollTop = nextProps.scrollTop; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _extends({}, newState, maybeStateA, maybeStateB);\n    }\n  }, {\n    key: '_getEstimatedColumnSize',\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: '_getEstimatedRowSize',\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: '_getScrollToPositionStateUpdate',\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return null;\n    }\n  }, {\n    key: '_wrapSizeGetter',\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: '_getCalculatedScrollLeft',\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: '_getScrollLeftForScrollToColumnStateUpdate',\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: '_getCalculatedScrollTop',\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: '_getScrollTopForScrollToRowStateUpdate',\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent);\n\nGrid.defaultProps = {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n};\nGrid.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  autoContainerWidth: PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  autoWidth: PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  cellRenderer: function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === 'function' ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  cellRangeRenderer: function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === 'function' ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  className: PropTypes.string,\n\n  /** Number of columns in grid.  */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  columnWidth: function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  containerProps: PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  containerRole: PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  containerStyle: PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  deferredMeasurementCache: PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  estimatedColumnSize: PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  getScrollbarSize: PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  height: PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  id: PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  isScrolling: PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  isScrollingOptOut: PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  noContentRenderer: function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === 'function' ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  onScrollbarPresenceChange: PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  overscanColumnCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  overscanIndicesGetter: function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === 'function' ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  rowHeight: function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  rowCount: PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === 'function' ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToColumn: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToRow: PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  style: PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  width: PropTypes.number.isRequired\n};\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from './types';\nimport { bpfrpt_proptype_CellRangeRenderer } from './types';\nimport { bpfrpt_proptype_CellPosition } from './types';\nimport { bpfrpt_proptype_CellSize } from './types';\nimport { bpfrpt_proptype_CellSizeGetter } from './types';\nimport { bpfrpt_proptype_NoContentRenderer } from './types';\nimport { bpfrpt_proptype_Scroll } from './types';\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from './types';\nimport { bpfrpt_proptype_RenderedSection } from './types';\nimport { bpfrpt_proptype_OverscanIndicesGetter } from './types';\nimport { bpfrpt_proptype_Alignment } from './types';\nimport { bpfrpt_proptype_CellCache } from './types';\nimport { bpfrpt_proptype_StyleCache } from './types';\nimport { bpfrpt_proptype_AnimationTimeoutId } from '../utils/requestAnimationTimeout';\nimport PropTypes from 'prop-types';","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = rowIndex + '-' + columnIndex;\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from './types';","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex; // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from './types';\nimport { bpfrpt_proptype_OverscanIndices } from './types';","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  scrollToColumn: PropTypes.number.isRequired,\n  scrollToRow: PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = function (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ArrowKeyStepper.__proto__ || _Object$getPrototypeOf(ArrowKeyStepper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      scrollToColumn: 0,\n      scrollToRow: 0\n    }, _this._columnStartIndex = 0, _this._columnStopIndex = 0, _this._rowStartIndex = 0, _this._rowStopIndex = 0, _this._onKeyDown = function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }, _this._onSectionRendered = function (_ref2) {\n      var columnStartIndex = _ref2.columnStartIndex,\n          columnStopIndex = _ref2.columnStopIndex,\n          rowStartIndex = _ref2.rowStartIndex,\n          rowStopIndex = _ref2.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: 'setScrollIndexes',\n    value: function setScrollIndexes(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          children = _props.children;\n\n      var _getScrollState2 = this._getScrollState(),\n          scrollToColumn = _getScrollState2.scrollToColumn,\n          scrollToRow = _getScrollState2.scrollToRow;\n\n      return React.createElement('div', {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: '_getScrollState',\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: '_updateScrollState',\n    value: function _updateScrollState(_ref4) {\n      var scrollToColumn = _ref4.scrollToColumn,\n          scrollToRow = _ref4.scrollToRow;\n      var _props2 = this.props,\n          isControlled = _props2.isControlled,\n          onScrollToChange = _props2.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return null;\n      }\n\n      if (nextProps.scrollToColumn !== prevState.scrollToColumn || nextProps.scrollToRow !== prevState.scrollToRow) {\n        return {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent);\n\nArrowKeyStepper.defaultProps = {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n};\nArrowKeyStepper.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  children: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  columnCount: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  isControlled: PropTypes.bool.isRequired,\n  mode: PropTypes.oneOf(['cells', 'edges']).isRequired,\n  onScrollToChange: PropTypes.func,\n  rowCount: PropTypes.number.isRequired,\n  scrollToColumn: PropTypes.number.isRequired,\n  scrollToRow: PropTypes.number.isRequired\n};\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from '../Grid';\nimport { bpfrpt_proptype_ScrollIndices } from './types';\nimport PropTypes from 'prop-types';","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\nvar AutoSizer = function (_React$PureComponent) {\n  _inherits(AutoSizer, _React$PureComponent);\n\n  function AutoSizer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AutoSizer.__proto__ || _Object$getPrototypeOf(AutoSizer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    }, _this._onResize = function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var _height = _this._parentNode.offsetHeight || 0;\n\n        var _width = _this._parentNode.offsetWidth || 0;\n\n        var _style = window.getComputedStyle(_this._parentNode) || {};\n\n        var paddingLeft = parseInt(_style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(_style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(_style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(_style.paddingBottom, 10) || 0;\n        var newHeight = _height - paddingTop - paddingBottom;\n        var newWidth = _width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: _height - paddingTop - paddingBottom,\n            width: _width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: _height,\n            width: _width\n          });\n        }\n      }\n    }, _this._setRef = function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(AutoSizer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeight = _props.disableHeight,\n          disableWidth = _props.disableWidth,\n          style = _props.style;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement('div', {\n        className: className,\n        ref: this._setRef,\n        style: _extends({}, outerStyle, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.PureComponent);\n\nAutoSizer.defaultProps = {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n};\nAutoSizer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  children: PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  className: PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  defaultHeight: PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  defaultWidth: PropTypes.number,\n\n  /** Disable dynamic :height property */\n  disableHeight: PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  disableWidth: PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  nonce: PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  onResize: PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  style: PropTypes.object\n};\nexport default AutoSizer;\nimport PropTypes from 'prop-types';","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\n\nvar CellMeasurer = function (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CellMeasurer.__proto__ || _Object$getPrototypeOf(CellMeasurer)).call.apply(_ref, [this].concat(args))), _this), _this._measure = function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === undefined ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === undefined ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(CellMeasurer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure\n      }) : children;\n    }\n  }, {\n    key: '_getCellMeasurements',\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: '_maybeMeasureCell',\n    value: function _maybeMeasureCell() {\n      var _props = this.props,\n          cache = _props.cache,\n          _props$columnIndex = _props.columnIndex,\n          columnIndex = _props$columnIndex === undefined ? 0 : _props$columnIndex,\n          parent = _props.parent,\n          _props$rowIndex = _props.rowIndex,\n          rowIndex = _props$rowIndex === undefined ? this.props.index || 0 : _props$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _getCellMeasurements2 = this._getCellMeasurements(),\n            height = _getCellMeasurements2.height,\n            width = _getCellMeasurements2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent); // Used for DEV mode warning check\n\n\nCellMeasurer.__internalCellMeasurerFlag = false;\nCellMeasurer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  cache: function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === 'function' ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  columnIndex: PropTypes.number,\n  index: PropTypes.number,\n  parent: PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  rowIndex: PropTypes.number\n};\nexport default CellMeasurer;\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from './types';\nimport PropTypes from 'prop-types';","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\n\nvar CellMeasurerCache = function () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    this._cellHeightCache = {};\n    this._cellWidthCache = {};\n    this._columnWidthCache = {};\n    this._rowHeightCache = {};\n    this._columnCount = 0;\n    this._rowCount = 0;\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache.hasOwnProperty(key) ? _this._columnWidthCache[key] : _this._defaultWidth;\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache.hasOwnProperty(key) ? _this._rowHeightCache[key] : _this._defaultHeight;\n    };\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: 'clear',\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache.hasOwnProperty(_key) ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache.hasOwnProperty(_key2) ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache.hasOwnProperty(key);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: '_updateCachedColumnAndRowSizes',\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport default CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return rowIndex + '-' + columnIndex;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from './types';","import CellMeasurer from './CellMeasurer';\nimport CellMeasurerCache from './CellMeasurerCache';\nexport default CellMeasurer;\nexport { CellMeasurer, CellMeasurerCache };","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/util/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView = function (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent); // Invokes callbacks only when their values have changed.\n\n\n  function CollectionView() {\n    var _ref;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    } // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n\n    var _this = _possibleConstructorReturn(this, (_ref = CollectionView.__proto__ || _Object$getPrototypeOf(CollectionView)).call.apply(_ref, [this].concat(args)));\n\n    _this.state = {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    };\n    _this._calculateSizeAndPositionDataOnNextUpdate = false;\n    _this._onSectionRenderedMemoizer = createCallbackMemoizer();\n    _this._onScrollMemoizer = createCallbackMemoizer(false);\n\n    _this._invokeOnSectionRenderedHelper = function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    };\n\n    _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    };\n\n    _this._updateScrollPositionForScrollToCell = function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    };\n\n    _this._onScroll = function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    };\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          cellLayoutManager = _props.cellLayoutManager,\n          scrollLeft = _props.scrollLeft,\n          scrollToCell = _props.scrollToCell,\n          scrollTop = _props.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _props2 = this.props,\n          height = _props2.height,\n          scrollToAlignment = _props2.scrollToAlignment,\n          scrollToCell = _props2.scrollToCell,\n          width = _props2.width;\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollPositionChangeReason = _state.scrollPositionChangeReason,\n          scrollTop = _state.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          autoHeight = _props3.autoHeight,\n          cellCount = _props3.cellCount,\n          cellLayoutManager = _props3.cellLayoutManager,\n          className = _props3.className,\n          height = _props3.height,\n          horizontalOverscanSize = _props3.horizontalOverscanSize,\n          id = _props3.id,\n          noContentRenderer = _props3.noContentRenderer,\n          style = _props3.style,\n          verticalOverscanSize = _props3.verticalOverscanSize,\n          width = _props3.width;\n      var _state2 = this.state,\n          isScrolling = _state2.isScrolling,\n          scrollLeft = _state2.scrollLeft,\n          scrollTop = _state2.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement('div', {\n        ref: this._setScrollingContainerRef,\n        'aria-label': this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: 'grid',\n        style: _extends({}, collectionStyle, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement('div', {\n        className: 'ReactVirtualized__Collection__innerScrollContainer',\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: '_enablePointerEventsAfterDelay',\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: '_invokeOnScrollMemoizer',\n    value: function _invokeOnScrollMemoizer(_ref2) {\n      var _this3 = this;\n\n      var scrollLeft = _ref2.scrollLeft,\n          scrollTop = _ref2.scrollTop,\n          totalHeight = _ref2.totalHeight,\n          totalWidth = _ref2.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref3) {\n          var scrollLeft = _ref3.scrollLeft,\n              scrollTop = _ref3.scrollTop;\n          var _props4 = _this3.props,\n              height = _props4.height,\n              onScroll = _props4.onScroll,\n              width = _props4.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: '_setScrollPosition',\n    value: function _setScrollPosition(_ref4) {\n      var scrollLeft = _ref4.scrollLeft,\n          scrollTop = _ref4.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\nCollectionView.defaultProps = {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n};\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\n\nvar Section = function () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: 'addCellIndex',\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: 'getCellIndices',\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.x + ',' + this.y + ' ' + this.width + 'x' + this.height;\n    }\n  }]);\n\n  return Section;\n}();\n\nexport default Section;\nimport { bpfrpt_proptype_Index } from './types';\nimport { bpfrpt_proptype_SizeAndPositionInfo } from './types';","import _Object$keys from 'babel-runtime/core-js/object/keys';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\n\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\n\nvar SectionManager = function () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: 'getCellIndices',\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return _Object$keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: 'getCellMetadata',\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: 'getSections',\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = sectionX + '.' + sectionY;\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: 'getTotalSectionCount',\n    value: function getTotalSectionCount() {\n      return _Object$keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var _this = this;\n\n      return _Object$keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: 'registerCell',\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport default SectionManager;\nimport { bpfrpt_proptype_Index } from './types';\nimport { bpfrpt_proptype_SizeAndPositionInfo } from './types';","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === undefined ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\n\nvar Collection = function (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    _classCallCheck(this, Collection);\n\n    var _this = _possibleConstructorReturn(this, (Collection.__proto__ || _Object$getPrototypeOf(Collection)).call(this, props, context));\n\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for perforamnce)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_this);\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: 'forceUpdate',\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = _objectWithoutProperties(this.props, []);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: 'calculateSizeAndPositionData',\n    value: function calculateSizeAndPositionData() {\n      var _props = this.props,\n          cellCount = _props.cellCount,\n          cellSizeAndPositionGetter = _props.cellSizeAndPositionGetter,\n          sectionSize = _props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: 'getLastRenderedIndices',\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: 'getScrollPositionForCell',\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: 'cellRenderers',\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _props2 = this.props,\n          cellGroupRenderer = _props2.cellGroupRenderer,\n          cellRenderer = _props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: '_isScrollingChange',\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: '_setCollectionViewRef',\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\nCollection.defaultProps = {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n};\nexport default Collection;\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from './types';\nimport { bpfrpt_proptype_SizeInfo } from './types';","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error('Invalid metadata returned for cell ' + index + ':\\n        x:' + cellMetadatum.x + ', y:' + cellMetadatum.y + ', width:' + cellMetadatum.width + ', height:' + cellMetadatum.height);\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer = function (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    _classCallCheck(this, ColumnSizer);\n\n    var _this = _possibleConstructorReturn(this, (ColumnSizer.__proto__ || _Object$getPrototypeOf(ColumnSizer)).call(this, props, context));\n\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _props = this.props,\n          columnMaxWidth = _props.columnMaxWidth,\n          columnMinWidth = _props.columnMinWidth,\n          columnCount = _props.columnCount,\n          width = _props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          children = _props2.children,\n          columnMaxWidth = _props2.columnMaxWidth,\n          columnMinWidth = _props2.columnMinWidth,\n          columnCount = _props2.columnCount,\n          width = _props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: '_registerChild',\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport default ColumnSizer;\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader = function (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    _classCallCheck(this, InfiniteLoader);\n\n    var _this = _possibleConstructorReturn(this, (InfiniteLoader.__proto__ || _Object$getPrototypeOf(InfiniteLoader)).call(this, props, context));\n\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_this);\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: 'resetLoadMoreRowsCache',\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: '_loadUnloadedRanges',\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: '_onRowsRendered',\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: '_doStuff',\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _props = this.props,\n          isRowLoaded = _props.isRowLoaded,\n          minimumBatchSize = _props.minimumBatchSize,\n          rowCount = _props.rowCount,\n          threshold = _props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: '_registerChild',\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\nInfiniteLoader.defaultProps = {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n};\nexport default InfiniteLoader;\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getOwnPropertyDescriptor from 'babel-runtime/core-js/object/get-own-property-descriptor';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = function (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = List.__proto__ || _Object$getPrototypeOf(List)).call.apply(_ref, [this].concat(args))), _this), _this._cellRenderer = function (_ref2) {\n      var parent = _ref2.parent,\n          rowIndex = _ref2.rowIndex,\n          style = _ref2.style,\n          isScrolling = _ref2.isScrolling,\n          isVisible = _ref2.isVisible,\n          key = _ref2.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var _Object$getOwnPropert = _Object$getOwnPropertyDescriptor(style, 'width'),\n          writable = _Object$getOwnPropert.writable;\n\n      if (writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    }, _this._setRef = function (ref) {\n      _this.Grid = ref;\n    }, _this._onScroll = function (_ref3) {\n      var clientHeight = _ref3.clientHeight,\n          scrollHeight = _ref3.scrollHeight,\n          scrollTop = _ref3.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }, _this._onSectionRendered = function (_ref4) {\n      var rowOverscanStartIndex = _ref4.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref4.rowOverscanStopIndex,\n          rowStartIndex = _ref4.rowStartIndex,\n          rowStopIndex = _ref4.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(List, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref5) {\n      var alignment = _ref5.alignment,\n          index = _ref5.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            _scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return _scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === undefined ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === undefined ? 0 : _ref7$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          noRowsRenderer = _props.noRowsRenderer,\n          scrollToIndex = _props.scrollToIndex,\n          width = _props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent);\n\nList.defaultProps = {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nList.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  height: PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  noRowsRenderer: function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === 'function' ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  onRowsRendered: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === 'function' ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  rowHeight: function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  rowRenderer: function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === 'function' ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  rowCount: PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === 'function' ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /** Optional inline style */\n  style: PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n};\nexport default List;\nimport { bpfrpt_proptype_NoContentRenderer } from '../Grid';\nimport { bpfrpt_proptype_Alignment } from '../Grid';\nimport { bpfrpt_proptype_CellSize } from '../Grid';\nimport { bpfrpt_proptype_CellPosition } from '../Grid';\nimport { bpfrpt_proptype_OverscanIndicesGetter } from '../Grid';\nimport { bpfrpt_proptype_RenderedSection } from '../Grid';\nimport { bpfrpt_proptype_CellRendererParams } from '../Grid';\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from '../Grid';\nimport { bpfrpt_proptype_RowRenderer } from './types';\nimport { bpfrpt_proptype_RenderedRows } from './types';\nimport { bpfrpt_proptype_Scroll } from './types';\nimport PropTypes from 'prop-types';","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport createIntervalTree from '../vendor/intervalTree'; // Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\n\nvar PositionCache = function () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    this._columnSizeMap = {};\n    this._intervalTree = createIntervalTree();\n    this._leftMap = {};\n  } // Tracks the height of each column\n  // Store tops and bottoms of each cell for fast intersection lookup.\n  // Maps cell index to x coordinates for quick lookup.\n\n\n  _createClass(PositionCache, [{\n    key: 'estimateTotalHeight',\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: 'range',\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: 'count',\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: 'shortestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: 'tallestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport default PositionCache;","import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = function (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Masonry.__proto__ || _Object$getPrototypeOf(Masonry)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isScrolling: false,\n      scrollTop: 0\n    }, _this._invalidateOnUpdateStartIndex = null, _this._invalidateOnUpdateStopIndex = null, _this._positionCache = new PositionCache(), _this._startIndex = null, _this._startIndexMemoized = null, _this._stopIndex = null, _this._stopIndexMemoized = null, _this._debounceResetIsScrollingCallback = function () {\n      _this.setState({\n        isScrolling: false\n      });\n    }, _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    }, _this._onScroll = function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.target.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Masonry, [{\n    key: 'clearCellPositions',\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var index = _ref2.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: 'recomputeCellPositions',\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          autoHeight = _props.autoHeight,\n          cellCount = _props.cellCount,\n          cellMeasurerCache = _props.cellMeasurerCache,\n          cellRenderer = _props.cellRenderer,\n          className = _props.className,\n          height = _props.height,\n          id = _props.id,\n          keyMapper = _props.keyMapper,\n          overscanByPixels = _props.overscanByPixels,\n          role = _props.role,\n          style = _props.style,\n          tabIndex = _props.tabIndex,\n          width = _props.width,\n          rowDirection = _props.rowDirection;\n      var _state = this.state,\n          isScrolling = _state.isScrolling,\n          scrollTop = _state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex = void 0;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, 'position', 'absolute'), _defineProperty(_style, 'top', top), _defineProperty(_style, 'width', cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement('div', {\n        ref: this._setScrollingContainerRef,\n        'aria-label': this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _extends({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement('div', {\n        className: 'ReactVirtualized__Masonry__innerScrollContainer',\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: '_checkInvalidateOnUpdate',\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var _startIndex = this._invalidateOnUpdateStartIndex;\n        var _stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(_startIndex, _stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: '_debounceResetIsScrolling',\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: '_getEstimatedTotalHeight',\n    value: function _getEstimatedTotalHeight() {\n      var _props2 = this.props,\n          cellCount = _props2.cellCount,\n          cellMeasurerCache = _props2.cellMeasurerCache,\n          width = _props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: '_invokeOnScrollCallback',\n    value: function _invokeOnScrollCallback() {\n      var _props3 = this.props,\n          height = _props3.height,\n          onScroll = _props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: '_invokeOnCellsRenderedCallback',\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var _onCellsRendered = this.props.onCellsRendered;\n\n        _onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: '_populatePositionCache',\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _props4 = this.props,\n          cellMeasurerCache = _props4.cellMeasurerCache,\n          cellPositioner = _props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            _left = _cellPositioner.left,\n            _top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, _left, _top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent);\n\nMasonry.defaultProps = {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n};\nMasonry.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  autoHeight: PropTypes.bool.isRequired,\n  cellCount: PropTypes.number.isRequired,\n  cellMeasurerCache: function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === 'function' ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  cellPositioner: function cellPositioner() {\n    return (typeof Positioner === 'function' ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  cellRenderer: function cellRenderer() {\n    return (typeof CellRenderer === 'function' ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  className: PropTypes.string,\n  height: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  keyMapper: function keyMapper() {\n    return (typeof KeyMapper === 'function' ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  onCellsRendered: function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === 'function' ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  onScroll: function onScroll() {\n    return (typeof OnScrollCallback === 'function' ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  overscanByPixels: PropTypes.number.isRequired,\n  role: PropTypes.string.isRequired,\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n  style: function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  },\n  tabIndex: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  rowDirection: PropTypes.string.isRequired\n};\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  defaultHeight: PropTypes.number.isRequired,\n  defaultWidth: PropTypes.number.isRequired,\n  getHeight: PropTypes.func.isRequired,\n  getWidth: PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from '../utils/requestAnimationTimeout';\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport { CellMeasurerCache } from '../CellMeasurer';\n/**\n * Caches measurements for a given cell.\n */\n\nvar CellMeasurerCacheDecorator = function () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    };\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === undefined ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === undefined ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: 'clear',\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport default CellMeasurerCacheDecorator;","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid = function (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    _classCallCheck(this, MultiGrid);\n\n    var _this = _possibleConstructorReturn(this, (MultiGrid.__proto__ || _Object$getPrototypeOf(MultiGrid)).call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = fixedColumnCount > 0 || fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: 'forceUpdateGrids',\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? 0 : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? 0 : _ref$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$columnIndex = _ref2.columnIndex,\n          columnIndex = _ref2$columnIndex === undefined ? 0 : _ref2$columnIndex,\n          _ref2$rowIndex = _ref2.rowIndex,\n          rowIndex = _ref2$rowIndex === undefined ? 0 : _ref2$rowIndex;\n\n      var _props = this.props,\n          fixedColumnCount = _props.fixedColumnCount,\n          fixedRowCount = _props.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          scrollLeft = _props2.scrollLeft,\n          scrollTop = _props2.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          onScroll = _props3.onScroll,\n          onSectionRendered = _props3.onSectionRendered,\n          onScrollbarPresenceChange = _props3.onScrollbarPresenceChange,\n          scrollLeftProp = _props3.scrollLeft,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollTopProp = _props3.scrollTop,\n          scrollToRow = _props3.scrollToRow,\n          rest = _objectWithoutProperties(_props3, ['onScroll', 'onSectionRendered', 'onScrollbarPresenceChange', 'scrollLeft', 'scrollToColumn', 'scrollTop', 'scrollToRow']);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop;\n      return React.createElement('div', {\n        style: this._containerOuterStyle\n      }, React.createElement('div', {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_extends({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement('div', {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_extends({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_extends({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: '_getBottomGridHeight',\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: '_getLeftGridWidth',\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: '_getRightGridWidth',\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: '_getTopGridHeight',\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: '_maybeCalculateCachedStyles',\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _props4 = this.props,\n          columnWidth = _props4.columnWidth,\n          enableFixedColumnScroll = _props4.enableFixedColumnScroll,\n          enableFixedRowScroll = _props4.enableFixedRowScroll,\n          height = _props4.height,\n          fixedColumnCount = _props4.fixedColumnCount,\n          fixedRowCount = _props4.fixedRowCount,\n          rowHeight = _props4.rowHeight,\n          style = _props4.style,\n          styleBottomLeftGrid = _props4.styleBottomLeftGrid,\n          styleBottomRightGrid = _props4.styleBottomRightGrid,\n          styleTopLeftGrid = _props4.styleTopLeftGrid,\n          styleTopRightGrid = _props4.styleTopRightGrid,\n          width = _props4.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _extends({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: '_prepareForRender',\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: '_renderBottomLeftGrid',\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement('div', {\n          className: 'BottomLeftGrid_ScrollWrapper',\n          style: _extends({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: '_renderBottomRightGrid',\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopLeftGrid',\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopRightGrid',\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _state2 = this.state,\n          showHorizontalScrollbar = _state2.showHorizontalScrollbar,\n          scrollbarSize = _state2.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _extends({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement('div', {\n          className: 'TopRightGrid_ScrollWrapper',\n          style: _extends({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\nMultiGrid.defaultProps = {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = {\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollbarSize: 0,\n    showHorizontalScrollbar: false,\n    showVerticalScrollbar: false\n  };\n  this._deferredInvalidateColumnIndex = null;\n  this._deferredInvalidateRowIndex = null;\n\n  this._bottomLeftGridRef = function (ref) {\n    _this2._bottomLeftGrid = ref;\n  };\n\n  this._bottomRightGridRef = function (ref) {\n    _this2._bottomRightGrid = ref;\n  };\n\n  this._cellRendererBottomLeftGrid = function (_ref3) {\n    var rowIndex = _ref3.rowIndex,\n        rest = _objectWithoutProperties(_ref3, ['rowIndex']);\n\n    var _props5 = _this2.props,\n        cellRenderer = _props5.cellRenderer,\n        fixedRowCount = _props5.fixedRowCount,\n        rowCount = _props5.rowCount;\n\n    if (rowIndex === rowCount - fixedRowCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          height: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        parent: _this2,\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    }\n  };\n\n  this._cellRendererBottomRightGrid = function (_ref4) {\n    var columnIndex = _ref4.columnIndex,\n        rowIndex = _ref4.rowIndex,\n        rest = _objectWithoutProperties(_ref4, ['columnIndex', 'rowIndex']);\n\n    var _props6 = _this2.props,\n        cellRenderer = _props6.cellRenderer,\n        fixedColumnCount = _props6.fixedColumnCount,\n        fixedRowCount = _props6.fixedRowCount;\n    return cellRenderer(_extends({}, rest, {\n      columnIndex: columnIndex + fixedColumnCount,\n      parent: _this2,\n      rowIndex: rowIndex + fixedRowCount\n    }));\n  };\n\n  this._cellRendererTopRightGrid = function (_ref5) {\n    var columnIndex = _ref5.columnIndex,\n        rest = _objectWithoutProperties(_ref5, ['columnIndex']);\n\n    var _props7 = _this2.props,\n        cellRenderer = _props7.cellRenderer,\n        columnCount = _props7.columnCount,\n        fixedColumnCount = _props7.fixedColumnCount;\n\n    if (columnIndex === columnCount - fixedColumnCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          width: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _this2\n      }));\n    }\n  };\n\n  this._columnWidthRightGrid = function (_ref6) {\n    var index = _ref6.index;\n    var _props8 = _this2.props,\n        columnCount = _props8.columnCount,\n        fixedColumnCount = _props8.fixedColumnCount,\n        columnWidth = _props8.columnWidth;\n    var _state3 = _this2.state,\n        scrollbarSize = _state3.scrollbarSize,\n        showHorizontalScrollbar = _state3.showHorizontalScrollbar; // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n      return scrollbarSize;\n    }\n\n    return typeof columnWidth === 'function' ? columnWidth({\n      index: index + fixedColumnCount\n    }) : columnWidth;\n  };\n\n  this._onScroll = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n\n    _this2.setState({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    var onScroll = _this2.props.onScroll;\n\n    if (onScroll) {\n      onScroll(scrollInfo);\n    }\n  };\n\n  this._onScrollbarPresenceChange = function (_ref7) {\n    var horizontal = _ref7.horizontal,\n        size = _ref7.size,\n        vertical = _ref7.vertical;\n    var _state4 = _this2.state,\n        showHorizontalScrollbar = _state4.showHorizontalScrollbar,\n        showVerticalScrollbar = _state4.showVerticalScrollbar;\n\n    if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n      _this2.setState({\n        scrollbarSize: size,\n        showHorizontalScrollbar: horizontal,\n        showVerticalScrollbar: vertical\n      });\n\n      var onScrollbarPresenceChange = _this2.props.onScrollbarPresenceChange;\n\n      if (typeof onScrollbarPresenceChange === 'function') {\n        onScrollbarPresenceChange({\n          horizontal: horizontal,\n          size: size,\n          vertical: vertical\n        });\n      }\n    }\n  };\n\n  this._onScrollLeft = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft;\n\n    _this2._onScroll({\n      scrollLeft: scrollLeft,\n      scrollTop: _this2.state.scrollTop\n    });\n  };\n\n  this._onScrollTop = function (scrollInfo) {\n    var scrollTop = scrollInfo.scrollTop;\n\n    _this2._onScroll({\n      scrollTop: scrollTop,\n      scrollLeft: _this2.state.scrollLeft\n    });\n  };\n\n  this._rowHeightBottomGrid = function (_ref8) {\n    var index = _ref8.index;\n    var _props9 = _this2.props,\n        fixedRowCount = _props9.fixedRowCount,\n        rowCount = _props9.rowCount,\n        rowHeight = _props9.rowHeight;\n    var _state5 = _this2.state,\n        scrollbarSize = _state5.scrollbarSize,\n        showVerticalScrollbar = _state5.showVerticalScrollbar; // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n      return scrollbarSize;\n    }\n\n    return typeof rowHeight === 'function' ? rowHeight({\n      index: index + fixedRowCount\n    }) : rowHeight;\n  };\n\n  this._topLeftGridRef = function (ref) {\n    _this2._topLeftGrid = ref;\n  };\n\n  this._topRightGridRef = function (ref) {\n    _this2._topRightGrid = ref;\n  };\n};\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync = function (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    _classCallCheck(this, ScrollSync);\n\n    var _this = _possibleConstructorReturn(this, (ScrollSync.__proto__ || _Object$getPrototypeOf(ScrollSync)).call(this, props, context));\n\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_this);\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      var _state = this.state,\n          clientHeight = _state.clientHeight,\n          clientWidth = _state.clientWidth,\n          scrollHeight = _state.scrollHeight,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop,\n          scrollWidth = _state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport default ScrollSync;\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement('div', {\n    className: className,\n    role: 'row',\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from './types';\nimport PropTypes from 'prop-types';","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement('svg', {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: '0 0 24 24'\n  }, sortDirection === SortDirection.ASC ? React.createElement('path', {\n    d: 'M7 14l5-5 5 5z'\n  }) : React.createElement('path', {\n    d: 'M7 10l5 5 5-5z'\n  }), React.createElement('path', {\n    d: 'M0 0h24v24H0z',\n    fill: 'none'\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n/**\n * Default table header renderer.\n */\n\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement('span', {\n    className: 'ReactVirtualized__Table__headerTruncatedText',\n    key: 'label',\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: 'SortIndicator',\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from './types';\nimport PropTypes from 'prop-types';","import _extends from 'babel-runtime/helpers/extends';\nimport * as React from 'react';\n/**\n * Default row renderer for Table.\n */\n\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement('div', _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: 'row',\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from './types';\nimport PropTypes from 'prop-types';","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column = function (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, (Column.__proto__ || _Object$getPrototypeOf(Column)).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\nColumn.defaultProps = {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n};\nexport default Column;\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from './types';","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from './types';","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table = function (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    _classCallCheck(this, Table);\n\n    var _this = _possibleConstructorReturn(this, (Table.__proto__ || _Object$getPrototypeOf(Table)).call(this, props));\n\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_this);\n    _this._createRow = _this._createRow.bind(_this);\n    _this._onScroll = _this._onScroll.bind(_this);\n    _this._onSectionRendered = _this._onSectionRendered.bind(_this);\n    _this._setRef = _this._setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === undefined ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === undefined ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeader = _props.disableHeader,\n          gridClassName = _props.gridClassName,\n          gridStyle = _props.gridStyle,\n          headerHeight = _props.headerHeight,\n          headerRowRenderer = _props.headerRowRenderer,\n          height = _props.height,\n          id = _props.id,\n          noRowsRenderer = _props.noRowsRenderer,\n          rowClassName = _props.rowClassName,\n          rowStyle = _props.rowStyle,\n          scrollToIndex = _props.scrollToIndex,\n          style = _props.style,\n          width = _props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _extends({}, flexStyles, {\n          overflow: 'hidden'\n        });\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement('div', {\n        'aria-label': this.props['aria-label'],\n        'aria-labelledby': this.props['aria-labelledby'],\n        'aria-colcount': React.Children.toArray(children).length,\n        'aria-rowcount': this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: 'grid',\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _extends({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: 'rowgroup',\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _extends({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: '_createColumn',\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement('div', {\n        'aria-colindex': columnIndex + 1,\n        'aria-describedby': id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: 'gridcell',\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: '_createHeader',\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _props2 = this.props,\n          headerClassName = _props2.headerClassName,\n          headerStyle = _props2.headerStyle,\n          onHeaderClick = _props2.onHeaderClick,\n          sort = _props2.sort,\n          sortBy = _props2.sortBy,\n          sortDirection = _props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _extends({}, headerStyle, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick = void 0,\n          headerOnKeyDown = void 0,\n          headerTabIndex = void 0,\n          headerAriaSort = void 0,\n          headerAriaLabel = void 0;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement('div', {\n        'aria-label': headerAriaLabel,\n        'aria-sort': headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: 'columnheader',\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: '_createRow',\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _props3 = this.props,\n          children = _props3.children,\n          onRowClick = _props3.onRowClick,\n          onRowDoubleClick = _props3.onRowDoubleClick,\n          onRowRightClick = _props3.onRowRightClick,\n          onRowMouseOver = _props3.onRowMouseOver,\n          onRowMouseOut = _props3.onRowMouseOut,\n          rowClassName = _props3.rowClassName,\n          rowGetter = _props3.rowGetter,\n          rowRenderer = _props3.rowRenderer,\n          rowStyle = _props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _extends({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: '_getFlexStyleForColumn',\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = column.props.flexGrow + ' ' + column.props.flexShrink + ' ' + column.props.width + 'px';\n\n      var style = _extends({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: '_getHeaderColumns',\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _props4 = this.props,\n          children = _props4.children,\n          disableHeader = _props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: '_getRowHeight',\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: '_onSectionRendered',\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: '_setRef',\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: '_setScrollbarWidth',\n    value: function _setScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        var scrollbarWidth = offsetWidth - clientWidth;\n        this.setState({\n          scrollbarWidth: scrollbarWidth\n        });\n      }\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\nTable.defaultProps = {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nexport default Table;\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from '../Grid';","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from '../WindowScroller.js';","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\nvar isWindow = function isWindow(element) {\n  return element === window;\n}; // TODO Move this into WindowScroller and import from there\n\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = function (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WindowScroller.__proto__ || _Object$getPrototypeOf(WindowScroller)).call.apply(_ref, [this].concat(args))), _this), _this._window = getWindow(), _this._isMounted = false, _this._positionFromTop = 0, _this._positionFromLeft = 0, _this.state = _extends({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }), _this._registerChild = function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    }, _this._onChildScroll = function (_ref2) {\n      var scrollTop = _ref2.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    }, _this._registerResizeListener = function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    }, _this._unregisterResizeListener = function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    }, _this._onResize = function () {\n      _this.updatePosition();\n    }, _this.__handleWindowScrollEvent = function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n\n        var _scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n\n        var _scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: _scrollLeft,\n          scrollTop: _scrollTop\n        });\n\n        onScroll({\n          scrollLeft: _scrollLeft,\n          scrollTop: _scrollTop\n        });\n      }\n    }, _this.__resetIsScrolling = function () {\n      _this.setState({\n        isScrolling: false\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(WindowScroller, [{\n    key: 'updatePosition',\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      var _state2 = this.state,\n          isScrolling = _state2.isScrolling,\n          scrollTop = _state2.scrollTop,\n          scrollLeft = _state2.scrollLeft,\n          height = _state2.height,\n          width = _state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    } // Referenced by utils/onScroll\n    // Referenced by utils/onScroll\n\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent);\n\nWindowScroller.defaultProps = {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n};\nWindowScroller.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  onResize: PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  onScroll: PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  scrollElement: PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === 'function' ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  serverHeight: PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  serverWidth: PropTypes.number.isRequired\n};\nexport default WindowScroller;\nimport PropTypes from 'prop-types';","export { ArrowKeyStepper } from './ArrowKeyStepper';\nexport { AutoSizer } from './AutoSizer';\nexport { CellMeasurer, CellMeasurerCache } from './CellMeasurer';\nexport { Collection } from './Collection';\nexport { ColumnSizer } from './ColumnSizer';\nexport { accessibilityOverscanIndicesGetter, defaultCellRangeRenderer, defaultOverscanIndicesGetter, Grid } from './Grid';\nexport { InfiniteLoader } from './InfiniteLoader';\nexport { List } from './List';\nexport { createCellPositioner as createMasonryCellPositioner, Masonry } from './Masonry';\nexport { MultiGrid } from './MultiGrid';\nexport { ScrollSync } from './ScrollSync';\nexport { createMultiSort as createTableMultiSort, defaultCellDataGetter as defaultTableCellDataGetter, defaultCellRenderer as defaultTableCellRenderer, defaultHeaderRenderer as defaultTableHeaderRenderer, defaultHeaderRowRenderer as defaultTableHeaderRowRenderer, defaultRowRenderer as defaultTableRowRenderer, Table, Column, SortDirection, SortIndicator } from './Table';\nexport { WindowScroller } from './WindowScroller';","'use strict'; // 25.4.1.5 NewPromiseCapability(C)\n\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = scrollbarSize;\n\nvar _inDOM = _interopRequireDefault(require(\"./inDOM\"));\n\nvar size;\n\nfunction scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (_inDOM.default) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}\n\nmodule.exports = exports[\"default\"];","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\n\nvar aFunction = require('./_a-function');\n\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};","var ctx = require('./_ctx');\n\nvar invoke = require('./_invoke');\n\nvar html = require('./_html');\n\nvar cel = require('./_dom-create');\n\nvar global = require('./_global');\n\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function run() {\n  var id = +this; // eslint-disable-next-line no-prototype-builtins\n\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar listener = function listener(event) {\n  run.call(event.data);\n}; // Node.js 0.9+ & IE10+ has setImmediate, otherwise:\n\n\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }\n\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n\n    defer(counter);\n    return counter;\n  };\n\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  }; // Node.js 0.8-\n\n\n  if (require('./_cof')(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    }; // Sphere (JS game engine) Dispatch API\n\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    }; // Browsers with MessageChannel, includes WebWorkers\n\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1); // Browsers with postMessage, skip WebWorkers\n    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n\n    global.addEventListener('message', listener, false); // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    }; // Rest old browsers\n\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};","module.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};","var anObject = require('./_an-object');\n\nvar isObject = require('./_is-object');\n\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n **/\nexport default function createDetectElementResize(nonce) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof document !== 'undefined' && document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","module.exports = LinearLayoutVector;\nLinearLayoutVector.prototype.getLength = getLength;\nLinearLayoutVector.prototype.setLength = setLength;\nLinearLayoutVector.prototype.getDefaultSize = getDefaultSize;\nLinearLayoutVector.prototype.setDefaultSize = setDefaultSize;\nLinearLayoutVector.prototype.getAxisOffset = getAxisOffset;\nLinearLayoutVector.prototype.setAxisOffset = setAxisOffset;\nLinearLayoutVector.prototype.getGap = getGap;\nLinearLayoutVector.prototype.setGap = setGap;\nLinearLayoutVector.prototype.getItemSize = getItemSize;\nLinearLayoutVector.prototype.setItemSize = setItemSize;\nLinearLayoutVector.prototype.insert = insert;\nLinearLayoutVector.prototype.remove = remove;\nLinearLayoutVector.prototype.start = start;\nLinearLayoutVector.prototype.end = end;\nLinearLayoutVector.prototype.indexOf = indexOf;\nLinearLayoutVector.prototype.clear = clear;\nLinearLayoutVector.prototype.toString = toString;\n/**\n * A sparse array of sizes that represent items in a dimension.\n *\n * Provides efficient support for finding the cumulative distance to\n * the start/end of an item along the axis, and similarly for finding the\n * index of the item at a particular distance.\n *\n * Default size is used for items whose size hasn't been specified.\n */\n\nfunction LinearLayoutVector(block_size) {\n  if (block_size === undefined) {\n    block_size = 128;\n  } // Assumption: vector elements (sizes) will typically be set in\n  // small ranges that reflect localized scrolling.  Allocate vector\n  // elements in blocks of block_size, which must be a power of 2.\n  // block_shift is the power of 2 and block_mask masks off as many\n  // low order bits.  The block_table contains all of the allocated\n  // blocks and has length/block_size elements which are allocated lazily.\n\n\n  var pow = Math.log(block_size) / Math.log(2) | 0,\n      size = Math.pow(2, pow),\n      mask = size - 1;\n  this.block_size = size;\n  this.block_shift = pow;\n  this.block_mask = mask;\n  this.block_table = [];\n  this._defaultSize = 0;\n  this._axisOffset = 0;\n  this._gap = 0; // Sorted Vector of intervals for the pending removes, in descending order,\n  // for example [7, 5, 3, 1] for the removes at 7, 6, 5, 3, 2, 1\n\n  this.removes = null; // Sorted Vector of intervals for the pending inserts, in ascending order,\n  // for example [1, 3, 5, 7] for the inserts at 1, 2, 3, 5, 6, 7\n\n  this.inserts = null;\n  this._length = 0; // What the length will be after any pending changes are flushed.\n\n  this._pendingLength = -1;\n}\n/**\n * The number of item size valued elements.\n *\n * @default 0\n */\n\n\nfunction getLength() {\n  return this._pendingLength === -1 ? this._length : this._pendingLength;\n}\n/**\n * @private\n * Grows or truncates the vector to be the specified newLength.\n * When truncating, releases empty blocks and sets to NaN any values\n * in the last block beyond the newLength.\n */\n\n\nfunction setLength(newLength) {\n  flushPendingChanges.call(this);\n\n  if (newLength < this._length) {\n    // Clear any remaining non-NaN values in the last block\n    var blockIndex = newLength >> this.block_shift;\n    var endIndex = Math.min(blockIndex * this.block_size + this.block_size, this._length) - 1;\n    clearInterval.call(this, newLength, endIndex);\n  }\n\n  this._length = newLength; // update the table\n\n  var partialBlock = (this._length & this.block_mask) === 0 ? 0 : 1;\n  this.block_table.length = (this._length >> this.block_shift) + partialBlock;\n} //----------------------------------\n//  defaultSize\n//----------------------------------\n\n/**\n * The size of items whose size was not specified with setItemSize.\n *\n * @default 0\n */\n\n\nfunction getDefaultSize() {\n  return this._defaultSize;\n}\n/**\n * @private\n */\n\n\nfunction setDefaultSize(value) {\n  this._defaultSize = value;\n} //----------------------------------\n//  axisOffset\n//----------------------------------\n\n/**\n * The offset of the first item from the origin in the majorAxis\n * direction. This is useful when implementing padding,\n * in addition to gaps, for virtual layouts.\n *\n * @see #gap\n */\n\n\nfunction getAxisOffset() {\n  return this._axisOffset;\n}\n/**\n * @private\n */\n\n\nfunction setAxisOffset(value) {\n  this._axisOffset = value;\n} //----------------------------------\n//  gap\n//----------------------------------\n\n/**\n * The distance between items.\n *\n * @default 0\n */\n\n\nfunction getGap() {\n  return this._gap;\n}\n/**\n * @private\n */\n\n\nfunction setGap(value) {\n  this._gap = value;\n} //--------------------------------------------------------------------------\n//\n//  Methods\n//\n//--------------------------------------------------------------------------\n\n/**\n * Return the size of the item at index.  If no size was ever\n * specified then then the defaultSize is returned.\n *\n * @param index The item's index.\n * @see defaultSize\n */\n\n\nfunction getItemSize(index) {\n  flushPendingChanges.call(this);\n  var block = this.block_table[index >> this.block_shift];\n\n  if (block) {\n    var value = block.sizes[index & this.block_mask];\n    return value !== value ? this._defaultSize : value;\n  } else {\n    return this._defaultSize;\n  }\n}\n/**\n * Set the size of the item at index. If an index is\n * set to <code>NaN</code> then subsequent calls to get\n * will return the defaultSize.\n *\n * @param index The item's index.\n * @param value The item's size.\n * @see defaultSize\n */\n\n\nfunction setItemSize(index, value) {\n  flushPendingChanges.call(this);\n\n  if (index >= this.getLength()) {\n    throw new Error(\"Invalid index and all that.\");\n  }\n\n  var blockIndex = index >> this.block_shift;\n  var block = this.block_table[blockIndex];\n\n  if (!block) {\n    block = this.block_table[blockIndex] = new Block(this.block_size);\n  }\n\n  var sizesIndex = index & this.block_mask;\n  var sizes = block.sizes;\n  var oldValue = sizes[sizesIndex];\n\n  if (oldValue === value) {\n    return;\n  }\n\n  if (oldValue !== oldValue) {\n    block.defaultCount -= 1;\n    block.sizesSum += value;\n  } else if (value !== value) {\n    block.defaultCount += 1;\n    block.sizesSum -= oldValue;\n  } else {\n    block.sizesSum += value - oldValue;\n  }\n\n  sizes[sizesIndex] = value;\n}\n/**\n * Make room for a new item at index by shifting all of the sizes\n * one position to the right, beginning with startIndex.\n *\n * The value at index will be NaN.\n *\n * This is similar to array.splice(index, 0, NaN).\n *\n * @param index The position of the new NaN size item.\n */\n\n\nfunction insert(index) {\n  // We don't support interleaved pending inserts and removes\n  if (this.removes) {\n    flushPendingChanges.call(this);\n  }\n\n  if (this.inserts) {\n    // Update the last interval or add a new one?\n    var lastIndex = this.inserts.length - 1;\n    var intervalEnd = this.inserts[lastIndex];\n\n    if (index === intervalEnd + 1) {\n      // Extend the end of the interval\n      this.inserts[lastIndex] = index;\n    } else if (index > intervalEnd) {\n      // New interval\n      this.inserts.push(index);\n      this.inserts.push(index);\n    } else {\n      // We can't support pending inserts that are not ascending\n      flushPendingChanges.call(this);\n    }\n  }\n\n  this._pendingLength = Math.max(this._length, index + 1);\n\n  if (!this.inserts) {\n    this.inserts = [];\n    this.inserts.push(index);\n    this.inserts.push(index);\n  }\n}\n/**\n * Remove index by shifting all of the sizes one position to the left,\n * begining with index+1.\n *\n * This is similar to array.splice(index, 1).\n *\n * @param index The position to be removed.\n */\n\n\nfunction remove(index) {\n  // We don't support interleaved pending inserts and removes\n  if (this.inserts) {\n    flushPendingChanges.call(this);\n  } // length getter takes into account pending inserts/removes but doesn't flush\n\n\n  if (index >= this.getLength()) {\n    throw new Error(\"Invalid index and all that.\");\n  }\n\n  if (this.removes) {\n    // Update the last interval or add a new one?\n    var lastIndex = this.removes.length - 1;\n    var intervalStart = this.removes[lastIndex];\n\n    if (index === intervalStart - 1) {\n      // Extend the start of the interval\n      this.removes[lastIndex] = index;\n    } else if (index < intervalStart) {\n      // New interval\n      this.removes.push(index);\n      this.removes.push(index);\n    } else {\n      // We can't support pending removes that are not descending\n      flushPendingChanges.call(this);\n    }\n  }\n\n  this._pendingLength = this._pendingLength === -1 ? length - 1 : this._pendingLength - 1;\n\n  if (!this.removes) {\n    this.removes = [];\n    this.removes.push(index);\n    this.removes.push(index);\n  }\n}\n/**\n * @private\n * Returns true when all sizes in the specified interval for the block are NaN\n */\n\n\nfunction isIntervalClear(block, index, count) {\n  var sizes = block.sizes,\n      size;\n\n  for (count += index; index < count; ++index) {\n    if ((size = sizes[index]) === size) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @private\n * Copies elements between blocks. Indices relative to the blocks.\n * If srcBlock is null, then it fills the destination with NaNs.\n * The case of srcBlock === dstBlock is also supported.\n * The caller must ensure that count is within range.\n */\n\n\nfunction inBlockCopy(dstBlock, dstIndexStart, srcBlock, srcIndexStart, count) {\n  var ascending = dstIndexStart < srcIndexStart;\n  var srcIndex = ascending ? srcIndexStart : srcIndexStart + count - 1;\n  var dstIndex = ascending ? dstIndexStart : dstIndexStart + count - 1;\n  var increment = ascending ? +1 : -1;\n  var dstSizes = dstBlock.sizes;\n  var srcSizes = srcBlock ? srcBlock.sizes : null;\n  var dstValue = NaN;\n  var srcValue = NaN;\n  var sizesSumDelta = 0; // How much the destination sizesSum will change\n\n  var defaultCountDelta = 0; // How much the destination defaultCount will change\n\n  while (count > 0) {\n    if (srcSizes) {\n      srcValue = srcSizes[srcIndex];\n    }\n\n    dstValue = dstSizes[dstIndex]; // Are the values different?\n\n    if (srcValue !== dstValue) {\n      // Triple '=' to handle NaN comparison\n      // Are we removing a default size or a chached size?\n      if (dstValue !== dstValue) {\n        defaultCountDelta--;\n      } else {\n        sizesSumDelta -= dstValue;\n      } // Are we adding a default size or a cached size?\n\n\n      if (srcValue !== srcValue) {\n        defaultCountDelta++;\n      } else {\n        sizesSumDelta += srcValue;\n      }\n\n      dstSizes[dstIndex] = srcValue;\n    }\n\n    srcIndex += increment;\n    dstIndex += increment;\n    count--;\n  }\n\n  dstBlock.sizesSum += sizesSumDelta;\n  dstBlock.defaultCount += defaultCountDelta;\n}\n/**\n * @private\n * Copies 'count' elements from dstIndex to srcIndex.\n * Safe for overlapping source and destination intervals.\n * If any blocks are left full of NaNs, they will be deallcated.\n */\n\n\nfunction copyInterval(dstIndex, srcIndex, count) {\n  var ascending = dstIndex < srcIndex;\n\n  if (!ascending) {\n    dstIndex += count - 1;\n    srcIndex += count - 1;\n  }\n\n  while (count > 0) {\n    // Figure out destination block\n    var dstBlockIndex = dstIndex >> this.block_shift;\n    var dstSizesIndex = dstIndex & this.block_mask;\n    var dstBlock = this.block_table[dstBlockIndex]; // Figure out source block\n\n    var srcBlockIndex = srcIndex >> this.block_shift;\n    var srcSizesIndex = srcIndex & this.block_mask;\n    var srcBlock = this.block_table[srcBlockIndex]; // Figure out number of elements to copy\n\n    var copyCount = ascending ? Math.min(this.block_size - dstSizesIndex, this.block_size - srcSizesIndex) : 1 + Math.min(dstSizesIndex, srcSizesIndex);\n    copyCount = Math.min(copyCount, count); // Figure out the start index for each block\n\n    var dstStartIndex = ascending ? dstSizesIndex : dstSizesIndex - copyCount + 1;\n    var srcStartIndex = ascending ? srcSizesIndex : srcSizesIndex - copyCount + 1; // Check whether a destination block needs to be allocated.\n    // Allocate only if there are non-default values to be copied from the source.\n\n    if (srcBlock && !dstBlock && isIntervalClear(srcBlock, srcStartIndex, copyCount)) {\n      dstBlock = new Block(this.block_size);\n      this.block_table[dstBlockIndex] = dstBlock;\n    } // Copy to non-null dstBlock, srcBlock can be null\n\n\n    if (dstBlock) {\n      inBlockCopy(dstBlock, dstStartIndex, srcBlock, srcStartIndex, copyCount); // If this is the last time we're visiting this block, and it contains\n      // only NaNs, then remove it\n\n      if (dstBlock.defaultCount === this.block_size) {\n        var blockEndReached = ascending ? dstStartIndex + copyCount === this.block_size : dstStartIndex === 0;\n        if (blockEndReached || count === copyCount) this.block_table[dstBlockIndex] = null;\n      }\n    }\n\n    dstIndex += ascending ? copyCount : -copyCount;\n    srcIndex += ascending ? copyCount : -copyCount;\n    count -= copyCount;\n  }\n}\n/**\n * @private\n * Sets all elements within the specified interval to NaN (both ends inclusive).\n * Releases empty blocks.\n */\n\n\nfunction clearInterval(start, end) {\n  while (start <= end) {\n    // Figure our destination block\n    var blockIndex = start >> this.block_shift;\n    var sizesIndex = start & this.block_mask;\n    var block = this.block_table[blockIndex]; // Figure out number of elements to clear in this iteration\n    // Make sure we don't clear more items than requested\n\n    var clearCount = this.block_size - sizesIndex;\n    clearCount = Math.min(clearCount, end - start + 1);\n\n    if (block) {\n      if (clearCount === this.block_size) {\n        this.block_table[blockIndex] = null;\n      } else {\n        // Copying from null source block is equivalent of clearing the destination block\n        inBlockCopy(block, sizesIndex, null\n        /*srcBlock*/\n        , 0, clearCount); // If the blockDst contains only default sizes, then remove the block\n\n        if (block.defaultCount === this.block_size) {\n          this.block_table[blockIndex] = null;\n        }\n      }\n    }\n\n    start += clearCount;\n  }\n}\n/**\n * @private\n * Removes the elements designated by the intervals and truncates\n * the LinearLayoutVector to the new length.\n * 'intervals' is a Vector of descending intervals [7, 5, 3, 1]\n */\n\n\nfunction removeIntervals(intervals) {\n  var intervalsCount = intervals.length;\n\n  if (intervalsCount === 0) {\n    return;\n  } // Adding final nextIntervalStart value (see below).\n\n\n  intervals.reverse(); // turn into ascending, for example [7, 5, 3, 1] --> [1, 3, 5, 7]\n\n  intervals.push(this.getLength()); // Move the elements\n\n  var dstStart = intervals[0];\n  var srcStart;\n  var count;\n  var i = 0;\n\n  do {\n    var intervalEnd = intervals[i + 1];\n    var nextIntervalStart = intervals[i + 2];\n    i += 2; // Start copy from after the end of current interval\n\n    srcStart = intervalEnd + 1; // copy all elements up to the start of the next interval.\n\n    count = nextIntervalStart - srcStart;\n    copyInterval.call(this, dstStart, srcStart, count);\n    dstStart += count;\n  } while (i < intervalsCount); // Truncate the excess elements.\n\n\n  this.setLength(dstStart);\n}\n/**\n * @private\n * Increases the length and inserts NaN values for the elements designated by the intervals.\n * 'intervals' is a Vector of ascending intervals [1, 3, 5, 7]\n */\n\n\nfunction insertIntervals(intervals, newLength) {\n  var intervalsCount = intervals.length;\n\n  if (intervalsCount === 0) {\n    return;\n  } // Allocate enough space for the insertions, all the elements\n  // allocated are NaN by default.\n\n\n  var oldLength = this.getLength();\n  this.setLength(newLength);\n  var srcEnd = oldLength - 1;\n  var dstEnd = newLength - 1;\n  var i = intervalsCount - 2;\n\n  while (i >= 0) {\n    // Find current interval\n    var intervalStart = intervals[i];\n    var intervalEnd = intervals[i + 1];\n    i -= 2; // Start after the current interval\n\n    var dstStart = intervalEnd + 1;\n    var copyCount = dstEnd - dstStart + 1;\n    var srcStart = srcEnd - copyCount + 1;\n    copyInterval.call(this, dstStart, srcStart, copyCount);\n    dstStart -= copyCount;\n    dstEnd = intervalStart - 1; // Fill in with default NaN values after the copy\n\n    clearInterval.call(this, intervalStart, intervalEnd);\n  }\n}\n/**\n * @private\n * Processes any pending removes or pending inserts.\n */\n\n\nfunction flushPendingChanges() {\n  var intervals;\n\n  if (this.removes) {\n    intervals = this.removes;\n    this.removes = null;\n    this._pendingLength = -1;\n    removeIntervals.call(this, intervals);\n  } else if (this.inserts) {\n    intervals = this.inserts;\n    var newLength = this._pendingLength;\n    this.inserts = null;\n    this._pendingLength = -1;\n    insertIntervals.call(this, intervals, newLength);\n  }\n}\n/**\n * The cumulative distance to the start of the item at index, including\n * the gaps between items and the axisOffset.\n *\n * The value of start(0) is axisOffset.\n *\n * Equivalent to:\n * <pre>\n * var distance = this.getAxisOffset();\n * for (var i = 0; i &lt; index; i++)\n *     distance += get(i);\n * return distance + (gap * index);\n * </pre>\n *\n * The actual implementation is relatively efficient.\n *\n * @param index The item's index.\n * @see #end\n */\n\n\nfunction start(index) {\n  flushPendingChanges.call(this);\n\n  if (this._length === 0 || index === 0) {\n    return this.getAxisOffset();\n  }\n\n  if (index >= this._length) {\n    throw new Error(\"Invalid index and all that.\");\n  }\n\n  var distance = this.getAxisOffset();\n  var blockIndex = index >> this.block_shift;\n\n  for (var i = 0; i < blockIndex; i++) {\n    var block = this.block_table[i];\n    distance += block ? block.sizesSum + block.defaultCount * this._defaultSize : this.block_size * this._defaultSize;\n  }\n\n  var lastBlock = this.block_table[blockIndex];\n  var lastBlockOffset = index & ~this.block_mask;\n  var lastBlockLength = index - lastBlockOffset;\n\n  if (lastBlock) {\n    var sizes = lastBlock.sizes;\n\n    for (i = 0; i < lastBlockLength; i++) {\n      var size = sizes[i];\n      distance += size !== size ? this._defaultSize : size;\n    }\n  } else {\n    distance += this._defaultSize * lastBlockLength;\n  }\n\n  distance += index * this.getGap();\n  return distance;\n}\n/**\n * The cumulative distance to the end of the item at index, including\n * the gaps between items.\n *\n * If <code>index &lt;(length-1)</code> then the value of this\n * function is defined as:\n * <code>start(index) + get(index)</code>.\n *\n * @param index The item's index.\n * @see #start\n */\n\n\nfunction end(index) {\n  flushPendingChanges.call(this);\n  return this.start(index) + this.getItemSize(index);\n}\n/**\n * Returns the index of the item that overlaps the specified distance.\n *\n * The item at index <code>i</code> overlaps a distance value\n * if <code>start(i) &lt;= distance &lt; end(i)</code>.\n *\n * If no such item exists, -1 is returned.\n */\n\n\nfunction indexOf(distance) {\n  flushPendingChanges.call(this);\n  var index = indexOfInternal.call(this, distance);\n  return index >= this._length ? -1 : index;\n}\n\nfunction indexOfInternal(distance) {\n  if (this._length === 0 || distance < 0) {\n    return -1;\n  } // The area of the first item includes the axisOffset\n\n\n  var curDistance = this.getAxisOffset();\n\n  if (distance < curDistance) {\n    return 0;\n  }\n\n  var index = -1,\n      block = null,\n      blockSize = this.block_size,\n      defaultSize = this._defaultSize,\n      gap = this.getGap(),\n      blockGap = gap * blockSize; // Find the block that contains distance and the index of its\n  // first element\n\n  var blockIndex = -1,\n      blockTable = this.block_table,\n      blockTableLength = blockTable.length;\n\n  for (; ++blockIndex < blockTableLength;) {\n    block = blockTable[blockIndex];\n    var blockDistance = blockGap + (block ? block.sizesSum + block.defaultCount * defaultSize : blockSize * defaultSize);\n\n    if (distance === curDistance || distance >= curDistance && distance < curDistance + blockDistance) {\n      index = blockIndex << this.block_shift;\n      break;\n    }\n\n    curDistance += blockDistance;\n  }\n\n  if (index === -1 || distance === curDistance) {\n    return index;\n  } // At this point index corresponds to the first item in this block\n\n\n  if (block) {\n    // Find the item that contains distance and return its index\n    var sizes = block.sizes,\n        n = this.block_size - 1;\n\n    for (var i = 0; i < n; i++) {\n      var size = sizes[i];\n      curDistance += gap + (size !== size ? this._defaultSize : size);\n\n      if (curDistance > distance) {\n        return index + i;\n      }\n    } // TBD special-case for the very last index\n\n\n    return index + this.block_size - 1;\n  } else {\n    return index + Math.floor(Number(distance - curDistance) / Number(this._defaultSize + gap));\n  }\n}\n/**\n * Clear all cached state, reset length to zero.\n */\n\n\nfunction clear() {\n  // Discard any pending changes, before setting the length\n  // otherwise the length setter will commit the changes.\n  this.removes = null;\n  this.inserts = null;\n  this._pendingLength = -1;\n  this.setLength(0); // clears the this.block_table as well\n}\n\nfunction toString() {\n  return \"LinearLayoutVector { \" + \"length: \" + this._length + \", \" + \"size: \" + this.end(this.getLength() - 1) + \", \" + \"[blocks: \" + this.block_table.length + \"]\" + \", \" + \"gap: \" + this._gap + \", \" + \"defaultSize: \" + this._defaultSize + \", \" + \"pendingRemoves: \" + (this.removes ? this.removes.length : 0) + \", \" + \"pendingInserts: \" + (this.inserts ? this.inserts.length : 0) + \" }\";\n}\n/**\n * @private\n * A LinearLayoutVector block of layout element heights or widths.\n *\n * Total \"distance\" for a Block is: sizesSum + (defaultCount * distanceVector.default).\n */\n\n\nfunction Block(block_size) {\n  this.sizes = new Array(block_size);\n  this.sizesSum = 0;\n  this.defaultCount = block_size;\n\n  for (var i = -1; ++i < block_size;) {\n    this.sizes[i] = NaN;\n  }\n}","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","module.exports = {\n  \"default\": require(\"core-js/library/fn/promise\"),\n  __esModule: true\n};","require('../modules/es6.object.to-string');\n\nrequire('../modules/es6.string.iterator');\n\nrequire('../modules/web.dom.iterable');\n\nrequire('../modules/es6.promise');\n\nrequire('../modules/es7.promise.finally');\n\nrequire('../modules/es7.promise.try');\n\nmodule.exports = require('../modules/_core').Promise;","'use strict';\n\nvar LIBRARY = require('./_library');\n\nvar global = require('./_global');\n\nvar ctx = require('./_ctx');\n\nvar classof = require('./_classof');\n\nvar $export = require('./_export');\n\nvar isObject = require('./_is-object');\n\nvar aFunction = require('./_a-function');\n\nvar anInstance = require('./_an-instance');\n\nvar forOf = require('./_for-of');\n\nvar speciesConstructor = require('./_species-constructor');\n\nvar task = require('./_task').set;\n\nvar microtask = require('./_microtask')();\n\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\n\nvar perform = require('./_perform');\n\nvar userAgent = require('./_user-agent');\n\nvar promiseResolve = require('./_promise-resolve');\n\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\n\nvar empty = function empty() {\n  /* empty */\n};\n\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    }; // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n\n\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // we can't detect it synchronously, so just check versions\n    && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) {\n    /* empty */\n  }\n}(); // helpers\n\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n\n    while (chain.length > i) {\n      run(chain[i++]);\n    } // variable length - can't use forEach\n\n\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\n\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      }); // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\n\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\n\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\n\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\n\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        }; // wrap\n\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e); // wrap\n  }\n}; // constructor polyfill\n\n\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  }; // eslint-disable-next-line no-unused-vars\n\n\n  Internal = function Promise(executor) {\n    this._c = []; // <- awaiting reactions\n\n    this._a = undefined; // <- checked in isUnhandled reactions\n\n    this._s = 0; // <- state\n\n    this._d = false; // <- done\n\n    this._v = undefined; // <- value\n\n    this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n\n    this._n = false; // <- notify\n  };\n\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n\n      this._c.push(reaction);\n\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {\n  Promise: $Promise\n});\n\nrequire('./_set-to-string-tag')($Promise, PROMISE);\n\nrequire('./_set-species')(PROMISE);\n\nWrapper = require('./_core')[PROMISE]; // statics\n\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n\n  return it;\n};","var ctx = require('./_ctx');\n\nvar call = require('./_iter-call');\n\nvar isArrayIter = require('./_is-array-iter');\n\nvar anObject = require('./_an-object');\n\nvar toLength = require('./_to-length');\n\nvar getIterFn = require('./core.get-iterator-method');\n\nvar BREAK = {};\nvar RETURN = {};\n\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!'); // fast case for arrays with default iterator\n\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n\n  return fn.apply(that, args);\n};","var global = require('./_global');\n\nvar macrotask = require('./_task').set;\n\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n\n    last = undefined;\n    if (parent) parent.enter();\n  }; // Node.js\n\n\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    }; // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, {\n      characterData: true\n    }); // eslint-disable-line no-new\n\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    }; // environments with maybe non-completely correct, but existent Promise\n\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n\n    notify = function notify() {\n      promise.then(flush);\n    }; // for other environments - macrotask based on:\n    // - setImmediate\n    // - MessageChannel\n    // - window.postMessag\n    // - onreadystatechange\n    // - setTimeout\n\n  } else {\n    notify = function notify() {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n\n    if (!head) {\n      head = task;\n      notify();\n    }\n\n    last = task;\n  };\n};","var global = require('./_global');\n\nvar navigator = global.navigator;\nmodule.exports = navigator && navigator.userAgent || '';","var hide = require('./_hide');\n\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];else hide(target, key, src[key]);\n  }\n\n  return target;\n};","'use strict';\n\nvar global = require('./_global');\n\nvar core = require('./_core');\n\nvar dP = require('./_object-dp');\n\nvar DESCRIPTORS = require('./_descriptors');\n\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};","// https://github.com/tc39/proposal-promise-finally\n'use strict';\n\nvar $export = require('./_export');\n\nvar core = require('./_core');\n\nvar global = require('./_global');\n\nvar speciesConstructor = require('./_species-constructor');\n\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});","'use strict'; // https://github.com/tc39/proposal-promise-try\n\nvar $export = require('./_export');\n\nvar newPromiseCapability = require('./_new-promise-capability');\n\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});","module.exports = {\n  \"default\": require(\"core-js/library/fn/object/get-own-property-descriptor\"),\n  __esModule: true\n};","require('../../modules/es6.object.get-own-property-descriptor');\n\nvar $Object = require('../../modules/_core').Object;\n\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\n\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);"],"sourceRoot":""}