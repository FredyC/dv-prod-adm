{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/HorizontalSeparator.tsx","atoms/Price.tsx","atoms/SelectControlFlat.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","hooks/useOnConnectionRestored.ts","segments/order/organisms/OrderListBranchFilter.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenOrderWareLine.tsx","segments/kitchen/organisms/KitchenOrderWareList.tsx","segments/kitchen/molecules/KitchenAcceptButton.tsx","segments/kitchen/molecules/KitchenOrderDetail.tsx","segments/kitchen/molecules/KitchenOrderBox.tsx","segments/kitchen/organisms/KitchenOrderListLoader.tsx","segments/kitchen/organisms/KitchenOrderList.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/routes/KitchenRoutes.tsx"],"names":["IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","NoAccess","CanQuery","queryName","canQuery","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","PageLayoutFullHeightItem","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_3__","id","HorizontalSeparatorStyled","greyLight","HorizontalSeparator","_ref$visible","visible","Price","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","className","formatPrice","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","RM","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_7___default","hasSelection","onClick","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","map","idx","Component","defaultProps","prop","getItemValue","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","padding","react","placeholder","i18n","_","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","cancelIconPadding","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","red","orange","_templateObject5","green","bigNumberStyle","_templateObject6","dashStyle","_templateObject7","clickable","_templateObject8","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","_templateObject9","Radiuses","Card","ToPickupLabel","_templateObject10","violet","OrderTicker","order","showBranch","companyBranch","_atoms_DeliveryTimeBadge__WEBPACK_IMPORTED_MODULE_11__","Date","orderStateCategory","OrderStateCategoryEnum","Cancel","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","formatAddress","address","_atoms_CustomerIdentity__WEBPACK_IMPORTED_MODULE_10__","_atoms_Price__WEBPACK_IMPORTED_MODULE_6__","totalSum","currency","code","isPaidWithCard","CurrentNoteStyled","span","PreviousNoteStyled","NoteLine","note","previousNote","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_3__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_4__","_i18n__WEBPACK_IMPORTED_MODULE_5__","useOnConnectionRestored","_helpers_offline__WEBPACK_IMPORTED_MODULE_1__","cb","useDisposable","whenGoingOnline","OrderListBranchFilter","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_3__","_styling__WEBPACK_IMPORTED_MODULE_4__","from","list","setBranchFilter","clearBranchFilter","Label","DeliveryTime","DeliverLabel","deliverType","_lingui_react","KitchenOrderAtSummary","deliverTime","AccessTime","KitchenOrderAtSummary_DeliverLabel","formatTimeWithoutTodayDate","Circle","TouchCheckButton_templateObject","Small","CheckedInner","TouchCheckButton_templateObject2","TouchCheckButton","isChecked","firstSideDishStyle","KitchenOrderWareLine_templateObject","OrderWareLineWrap","KitchenOrderWareLine_templateObject2","isFirstSidedish","IsDoneContainerStyled","CodeContainerStyled","FontSizes","CompactCardBig","NameContainerStyled","KitchenOrderWareLine","recipeId","isDone","isCheckable","_ref$isFirstSidedish","_useMKitchenRecipeSta","useMKitchenRecipeState","updateOrderRecipeState","slicedToArray","TouchCheckButton_TouchCheckButton","OrderRecipeStateEnum","Preparing","Cooked","KitchenOrderWareList","orderWares","orderWare","KitchenOrderWareLine_KitchenOrderWareLine","recipe","nameLabel","orderRecipeState","sidedishes","sidedish","index","KitchenAcceptButton","orderId","_useMOrderState","useMOrderState","acceptOrder","TouchButton","ButtonHeight","OrderStateEnum","InProduce","OrderDetailContainerStyled","KitchenOrderDetail_templateObject","KitchenOrderDetail","KitchenOrderWareList_KitchenOrderWareList","ReadyToDeliver","KitchenOrderAtSummary_KitchenOrderAtSummary","NewOrders","KitchenAcceptButton_KitchenAcceptButton","OrderBoxStyled","KitchenOrderBox_templateObject","CompactCard","greyDarkest","Middle","KitchenOrderBox_templateObject2","KitchenOrderBox_templateObject3","KitchenOrderBox_templateObject4","KitchenOrderBox_templateObject5","KitchenOrderBox","href","replace","KitchenOrderDetail_KitchenOrderDetail","requiredCategories","loaderContext","createContext","loading","noFilter","orders","KitchenOrderListLoader","observer","orderModel","hasBranchFilter","_useQKitchenOrderList","useQKitchenOrderList","branchesFilter","categories","skip","updateQuery","refetch","useSKitchenOrderList","Finished","onSubscriptionData","dataUpdate","subscriptionData","prev","update","updatedOrder","o","orderExists","unshift","handleSubscriptionUpdate","Provider","InfoMessage","KitchenOrderList_templateObject","KitchenOrderList","category","_useKitchenOrderList","useContext","categoryOrders","propEq","KitchenOrderBox_KitchenOrderBox","CategorySeparator","KitchenOverviewPage_templateObject","KitchenOverviewPage","PageLayout","pageTitle","useBackButton","layouts","i","x","y","w","h","KitchenRoutes_KitchenRoutes","KitchenRoutes","match","react_router","SecureRoute","exact","path"],"mappings":"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","file":"static/js/175.dd3d7cbd.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  DeliveryTypeEnum,\n  FOrderStateCategoryFragment,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { GOrderListTicker } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & FOrderStateCategoryFragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={\n              order.orderStateCategory === OrderStateCategoryEnum.Cancel\n            }\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          <Price\n            price={order.totalSum.value}\n            currencyCode={order.totalSum.currency.code}\n          />\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { Colors } from '../../../styling'\n\ninterface IOrderListBranchFilterProps {}\n\nexport const OrderListBranchFilter: React.FC<\n  IOrderListBranchFilterProps\n> = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(order.list.branches)}\n      onSelectionChange={branches => {\n        order.list.setBranchFilter(branches)\n      }}\n      onSelectionClear={order.list.clearBranchFilter}\n      textColor={Colors.turquoise}\n      isMulti={true}\n      isClearable={false}\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  deliverTime: string | null\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<IProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<IProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport {\n  OrderRecipeStateEnum,\n  useMKitchenRecipeState,\n} from '../../../graph/generated'\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\n\ninterface IProps {\n  recipeId?: ID\n  code?: string\n  label: string\n  isDone: boolean\n  isCheckable: boolean\n  isFirstSidedish?: boolean\n}\n\nconst firstSideDishStyle = css`\n  margin-top: -0.8rem;\n`\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${(props: { isFirstSidedish: boolean }) =>\n    props.isFirstSidedish && firstSideDishStyle};\n`\n\nconst IsDoneContainerStyled = styled.div`\n  flex: 0 0 2.4rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 4.1rem;\n  font-size: ${FontSizes.CompactCardBig};\n  color: ${Colors.black};\n  margin-top: 0.35rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n  margin-top: 0.35rem;\n`\n\nexport const KitchenOrderWareLine: React.FC<IProps> = ({\n  recipeId,\n  code,\n  label,\n  isDone,\n  isCheckable,\n  isFirstSidedish = false,\n}) => {\n  const [updateOrderRecipeState] = useMKitchenRecipeState()\n\n  return (\n    <OrderWareLineWrap isFirstSidedish={isFirstSidedish}>\n      <IsDoneContainerStyled>\n        {isCheckable && (\n          <TouchCheckButton\n            isChecked={isDone}\n            onClick={() => {\n              if (recipeId) {\n                updateOrderRecipeState({\n                  recipeId,\n                  state: isDone\n                    ? OrderRecipeStateEnum.Preparing\n                    : OrderRecipeStateEnum.Cooked,\n                })\n              }\n            }}\n          />\n        )}\n      </IsDoneContainerStyled>\n      <CodeContainerStyled>{code}</CodeContainerStyled>\n      <NameContainerStyled>{label}</NameContainerStyled>\n    </OrderWareLineWrap>\n  )\n}\n","import React, { Fragment } from 'react'\n\nimport { OrderRecipeStateEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { KitchenOrderWareLine } from '../molecules/KitchenOrderWareLine'\n\ninterface IProps {\n  orderWares: ReadonlyArray<FKitchenOrder.Items>\n  isCheckable: boolean\n}\n\nexport const KitchenOrderWareList: React.FC<IProps> = ({\n  orderWares,\n  isCheckable,\n}) => {\n  const renderWare = (orderWare: FKitchenOrder.Items) => (\n    <Fragment key={orderWare.id}>\n      <KitchenOrderWareLine\n        recipeId={orderWare.id}\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        isDone={orderWare.orderRecipeState.enum === OrderRecipeStateEnum.Cooked}\n        isCheckable={isCheckable}\n      />\n      <>\n        {orderWare.sidedishes.map((sidedish, index) => (\n          <KitchenOrderWareLine\n            key={`${orderWare.id}-${sidedish.id}`}\n            recipeId={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            isDone={false}\n            isCheckable={false}\n            isFirstSidedish={index === 0 && isCheckable}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const KitchenAcceptButton: React.FC<IProps> = ({ orderId }) => {\n  const [acceptOrder] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        iconName=\"keyboard_arrow_right\"\n        width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        color={Colors.green}\n        onClick={() => {\n          acceptOrder({ orderId, state: OrderStateEnum.InProduce })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { KitchenOrderWareList } from '../organisms/KitchenOrderWareList'\nimport { KitchenAcceptButton } from './KitchenAcceptButton'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.2rem 0.1rem 0.2rem;\n`\n\nexport const KitchenOrderDetail: React.FC<IProps> = ({ order }) => (\n  <OrderDetailContainerStyled>\n    <HorizontalSeparator />\n    <KitchenOrderWareList\n      orderWares={order.items}\n      isCheckable={\n        order.orderStateCategory === OrderStateCategoryEnum.Preparing ||\n        order.orderStateCategory === OrderStateCategoryEnum.ReadyToDeliver\n      }\n    />\n    <HorizontalSeparator />\n    <KitchenOrderAtSummary\n      deliverTime={order.deliverAt}\n      deliverType={\n        order.deliveryType &&\n        order.deliveryType.enum === DeliveryTypeEnum.Pickup\n          ? 'PERSONAL'\n          : 'DELIVER_UNTIL'\n      }\n    />\n    <NoteLine note={order.note} previousNote={order.previousNote} />\n    {order.orderStateCategory === OrderStateCategoryEnum.NewOrders && (\n      <CardDock position=\"BottomRight\">\n        <KitchenAcceptButton orderId={order.id} />\n      </CardDock>\n    )}\n  </OrderDetailContainerStyled>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenOrderDetail } from './KitchenOrderDetail'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n  showBranch: boolean\n}\nexport const OrderBoxStyled = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  margin-right: ${Spacing.Middle};\n  position: relative;\n`\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.2rem;\n  color: ${Colors.greyMiddle};\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 1.8rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n`\n\nexport const KitchenOrderBox: React.FC<IProps> = ({ order, showBranch }) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderBoxStyled>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n          <br />\n          {order.customer && order.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${order.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {order.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </CustomerIdentityContainerStyled>\n      </OrderTickerMainContentStyled>\n\n      <KitchenOrderDetail order={order} />\n    </OrderBoxStyled>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderStateCategoryEnum,\n  QKitchenOrderListOrders,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\ntype TOrder = QKitchenOrderListOrders\n\ninterface ILoaderContext {\n  loading: boolean\n  noFilter: boolean\n  orders: ReadonlyArray<TOrder>\n}\n\nconst loaderContext = React.createContext<ILoaderContext>({\n  loading: true,\n  noFilter: true,\n  orders: [],\n})\n\nexport const KitchenOrderListLoader: React.FC = observer(props => {\n  const { order: orderModel } = useRoot()\n  const noFilter = !orderModel.list.hasBranchFilter\n  const { data, loading, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    { skip: noFilter },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip: noFilter,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return (\n    <loaderContext.Provider\n      value={{\n        loading,\n        noFilter,\n        orders: loading ? [] : data.orders,\n      }}\n    >\n      {props.children}\n    </loaderContext.Provider>\n  )\n})\n\nexport function useKitchenOrderList() {\n  return React.useContext(loaderContext)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { KitchenOrderBox } from '../molecules/KitchenOrderBox'\nimport { useKitchenOrderList } from './KitchenOrderListLoader'\n\ninterface IProps {\n  category: OrderStateCategoryEnum\n}\n\nconst InfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n\nexport const KitchenOrderList = observer<IProps>(({ category }) => {\n  const { order: orderModel } = useRoot()\n  const { loading, noFilter, orders } = useKitchenOrderList()\n\n  if (noFilter) {\n    return (\n      <InfoMessage>\n        <Trans>Select a branch</Trans>\n      </InfoMessage>\n    )\n  }\n\n  if (loading) {\n    return (\n      <InfoMessage>\n        <Trans>Loading</Trans>\n      </InfoMessage>\n    )\n  }\n\n  const categoryOrders = orders.filter(\n    RM.propEq('orderStateCategory', category),\n  )\n\n  if (categoryOrders.length === 0) {\n    switch (category) {\n      case OrderStateCategoryEnum.NewOrders:\n        return (\n          <InfoMessage>\n            <Trans>No new orders</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.Preparing:\n        return (\n          <InfoMessage>\n            <Trans>No orders to prepare</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.ReadyToDeliver:\n        return (\n          <InfoMessage>\n            <Trans>No orders to deliver</Trans>\n          </InfoMessage>\n        )\n      default:\n        return (\n          <InfoMessage>\n            <Trans>No orders</Trans>\n          </InfoMessage>\n        )\n    }\n  }\n\n  return (\n    <>\n      {categoryOrders.map(order => (\n        <KitchenOrderBox\n          key={order.id}\n          order={order}\n          showBranch={orderModel.list.branchesFilter.length > 1}\n        />\n      ))}\n    </>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { Colors } from '../../../styling'\nimport { OrderListBranchFilter } from '../../order/organisms/OrderListBranchFilter'\nimport { KitchenOrderList } from '../organisms/KitchenOrderList'\nimport { KitchenOrderListLoader } from '../organisms/KitchenOrderListLoader'\n\nfunction getLayout() {\n  return [{ i: 'filter', x: 4, y: 0, w: 10, h: 1 }]\n}\n\nconst CategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: -0.5rem;\n`\n\nexport const KitchenOverviewPage: React.FC = () => (\n  <KitchenOrderListLoader>\n    <PageLayoutFullHeightItem withScrollArea={true} row={1} widthInColumns={5}>\n      <KitchenOrderList category={OrderStateCategoryEnum.NewOrders} />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={5}\n      widthInColumns={6}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.Preparing} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={11}\n      widthInColumns={5}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.ReadyToDeliver} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      layouts={getLayout()}\n    >\n      <PageLayoutItem\n        key=\"filter\"\n        component={() => <OrderListBranchFilter />}\n      />\n    </PageLayout>\n  </KitchenOrderListLoader>\n)\n","import React from 'react'\nimport { RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const KitchenRoutes: React.FC<IProps> = ({ match }) => {\n  return (\n    <>\n      <Switch>\n        <SecureRoute\n          exact={true}\n          path={match.path}\n          component={KitchenOverviewPage}\n        />\n      </Switch>\n    </>\n  )\n}\n\nexport default KitchenRoutes\n"],"sourceRoot":""}