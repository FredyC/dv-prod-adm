{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/FormInputTextBox.tsx","atoms/FormInputStyled.tsx","atoms/Headline.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","atoms/SelectControlFlat.tsx","atoms/FlexColumn.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","molecules/PageLayoutItem.tsx","molecules/TouchButtonDelete.tsx","segments/settings/organisms/SettingsCompanyBranchPicker.tsx","segments/settings/atoms/WithSettings.tsx","atoms/FormInputCheckbox.tsx","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","atoms/StyledCheckbox.tsx","segments/branchpreferences/organism/SaveInvoicePreferencesButton.tsx","segments/branchpreferences/organism/InvoicePreferencesForm.tsx","segments/branchpreferences/organism/StoppageForm.tsx","segments/branchpreferences/pages/BranchPreferencesPage.tsx","segments/branchpreferences/routes/BranchPreferencesRoutes.tsx","atoms/FormInputTime.tsx","atoms/FormInputTimeSpan.tsx","segments/businesshours/molecules/SpecificModeSelector.tsx","segments/businesshours/organisms/SpecificBusinessHourForm.tsx","segments/businesshours/molecules/SpecificBusinessHourLine.tsx","segments/businesshours/organisms/SpecificBusinessHours.tsx","segments/businesshours/pages/BusinessHoursPage.tsx","segments/businesshours/routes/BusinessHoursRoutes.tsx","segments/settings/organisms/BusinessHoursButton.tsx","segments/settings/organisms/MenuCategoryButton.tsx","segments/settings/organisms/MenuRecipeButton.tsx","segments/settings/organisms/MenuStockButton.tsx","segments/settings/organisms/MenuStockDepositButton.tsx","segments/settings/organisms/UserMenuButton.tsx","segments/settings/organisms/ZonesMenuButton.tsx","segments/settings/pages/SettingsPage.tsx","segments/settings/routes/SettingsRoutes.tsx"],"names":["IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","FormInputTextBox","forwardRef","inputRef","field","_ref$inputFullWidth","inputFullWidth","isRequired","validatioName","validationMessage","validate","react_form__WEBPACK_IMPORTED_MODULE_2__","value","isEmpty","_i18n__WEBPACK_IMPORTED_MODULE_4__","_","fieldApi","_FormInputStyled__WEBPACK_IMPORTED_MODULE_5__","onChange","ev","target","validity","valid","setTouched","setValue","invalid","Boolean","error","ref","invalidInputStyle","css","fullWidthStyle","FormInputStyled","input","Headline","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","NoAccess","CanQuery","queryName","canQuery","ItemStyled","textColor","isSelected","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","RM","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_7___default","hasSelection","onClick","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","id","map","idx","Component","defaultProps","prop","getItemValue","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","restInnerProps","style","react","placeholder","i18n","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","selection","head","FormSubmit","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","utils","MomentUtils","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","TouchButtonDelete","onDelete","confirmText","_atoms_SizerButton__WEBPACK_IMPORTED_MODULE_2__","_TouchButton__WEBPACK_IMPORTED_MODULE_4__","window","confirm","SettingsCompanyBranchPicker","settings","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_5__","branchId","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","selectBranch","WithSettings","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_atoms_WithRoot__WEBPACK_IMPORTED_MODULE_1__","observe","render","_render","_x","toString","FormInputCheckbox","defaultValue","inputProps","_StyledCheckbox__WEBPACK_IMPORTED_MODULE_3__","checked","FormInputDate","pickerProps","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_5__","react_form__WEBPACK_IMPORTED_MODULE_3__","onOpen","format","ampm","okLabel","cancelLabel","clearLabel","todayLabel","maxDateMessage","minDateMessage","FlexRow","StyledCheckbox","span","white","Radiuses","TextComponent","SaveInvoicePreferencesButton","TouchButton","text","SaveButtonContainer","InvoicePreferencesForm","es","SaveInvoicePreferencesButton_SaveInvoicePreferencesButton","StoppageForm","BranchPreferencesPage","FullPageLayout","pageTitle","Card","_lingui_react","StoppageForm_StoppageForm","InvoicePreferencesForm_InvoicePreferencesForm","BranchPreferencesRoutes","match","react_router","SecureRoute","exact","path","NotFoundPage","FormInputTime","material_ui_pickers_esm","InlineWrap","FormInputTimeSpan_templateObject","FormInputTimeSpan","fieldFrom","fieldTo","FormInputTime_FormInputTime","fullWidth","labels","_labels","defineProperty","ESpecificHourMode","TIMESPAN","i18nMark","FULLDAY","SpecificModeSelector","businessHours","specificMode","mode","changeSpecificMode","DateContainer","SpecificBusinessHourForm_templateObject","FormContainer","SpecificBusinessHourForm","onSubmit","submitSpecificHour","defaultValues","getDefaultValues","fullDateFormat","minDate","Date","SpecificModeSelector_SpecificModeSelector","index_module","FormInputTimeSpan_FormInputTimeSpan","Sizer","now","date","openAt","setHours","setMinutes","closeAt","SpecificBusinessHourLine","bsHour","0","specificDateLocalized","closed","closedNote","formatLineTime","sortByDate","sort","ascend","or","not","SpecificBusinessHours","SpecificBusinessHours_graphql","variables","fetchPolicy","renderFragment","SpecificBusinessHourLine_SpecificBusinessHourLine","deleteSpecificHour","BusinessHoursPage","useBackButton","SpecificBusinessHours_SpecificBusinessHours","SpecificBusinessHourForm_SpecificBusinessHourForm","BusinessHoursRoutes","BusinessHoursButton","red","MenuCategoryButton","turquoise","MenuRecipeButton","MenuStockButton","MenuStockDepositButton","UserMenuButton","ZonesMenuButton","violet","SettingsPage","PageLayout","layouts","i","x","y","w","h","SettingsRoutes_SettingsRoutes","ZoneMenuRoutes","lazy","Promise","all","then","bind","MenuRoutes","UserMenuPage","SettingsRoutes","PageTitle","Route","LazyRoute"],"mappings":"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","file":"static/js/174.384327e3.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { FormInputStyled } from './FormInputStyled'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  isRequired?: boolean\n  validatioName?: string\n  validationMessage?: string\n  inputFullWidth?: boolean\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputFullWidth = false,\n      isRequired,\n      validatioName,\n      validationMessage,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            if (validationMessage) {\n              return validationMessage\n            }\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              fieldApi.setTouched(true)\n              fieldApi.setValue(ev.target.value)\n            }\n          }}\n          inputFullWidth={inputFullWidth}\n          invalid={Boolean(fieldApi.error)}\n          // @ts-ignore\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import styled, { css } from 'styled-components'\n\nimport { Spacing } from '../styling'\n\ninterface IFormInputStyled {\n  invalid?: boolean\n  inputFullWidth?: boolean\n}\n\nexport const invalidInputStyle = css`\n  border: 1px red solid;\n`\n\nexport const fullWidthStyle = css`\n  width: 100%;\n`\n\nexport const FormInputStyled = styled.input`\n  margin: ${Spacing.MarginAroundFormComponents};\n  ${({ inputFullWidth }: IFormInputStyled) => inputFullWidth && fullWidthStyle};\n  ${({ invalid }: IFormInputStyled) => invalid && invalidInputStyle};\n`\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps extends Omit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.FC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      iconName=\"delete\"\n      color={Colors.greyMiddle}\n      onClick={ev => {\n        ev.preventDefault()\n        if (!confirmText || window.confirm(confirmText)) {\n          onDelete()\n        }\n      }}\n      {...props}\n    />\n  </SizerButton>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {\n  isMulti?: boolean\n  width?: number\n}\n\nexport const SettingsCompanyBranchPicker: React.FC<IProps> = ({\n  isMulti,\n  width,\n}) => {\n  const { settings } = useRoot()\n  return useObserver(() => (\n    <IconLine icon=\"store_mall_directory\">\n      <CompanyBranchPicker\n        selectedBranches={settings.branchId ? [settings.branchId] : undefined}\n        onSelectionChange={([branch]) => settings.selectBranch(branch)}\n        isMulti={isMulti}\n        isClearable={false}\n        getDropdownProps={() => ({ width })}\n      />\n    </IconLine>\n  ))\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { TSettingsModel } from '../models/SettingsModel'\n\ninterface IProps {\n  render(settings: TSettingsModel): ReactNode\n  observe?: boolean\n}\n\nexport const WithSettings: React.FC<IProps> = ({ observe, render }) => (\n  <WithRoot observe={observe} render={({ settings }) => render(settings)} />\n)\n","import React from 'react'\nimport { Checkbox, FieldType } from 'react-form'\n\nimport { StyledCheckbox } from './StyledCheckbox'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  label?: string\n}\n\nexport const FormInputCheckbox: React.FC<IProps> = ({\n  field,\n  label,\n  defaultValue,\n  children,\n  ...inputProps\n}) => (\n  <StyledCheckbox>\n    <Checkbox field={field} checked={Boolean(defaultValue)} {...inputProps} />\n    {label && <label>{label}</label>}\n  </StyledCheckbox>\n)\n","import { DatePickerProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineDatePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"ll\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            todayLabel={i18n.t`Today`}\n            maxDateMessage={i18n.t`Date is too much in the future`}\n            minDateMessage={i18n.t`Date is too much in the past`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses, Spacing } from '../styling'\n\nexport const StyledCheckbox = styled.span`\n  input {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-color: ${Colors.white};\n    border: 1px solid ${Colors.greyMiddle};\n    padding: 1rem;\n    border-radius: ${Radiuses.TextComponent};\n    display: inline-block;\n    position: relative;\n    margin: ${Spacing.MarginAroundFormComponents};\n    outline: none;\n    &:checked {\n      background-color: ${Colors.white};\n      border: 1px solid ${Colors.greyMiddle};\n    }\n    &:checked:after {\n      content: '\\\\2714';\n      font-size: 2rem;\n      position: absolute;\n      top: -0.5rem;\n      left: 0.1rem;\n      color: ${Colors.greyDark};\n      overflow: hidden;\n    }\n    &:disabled {\n      background-color: ${Colors.greyLight};\n    }\n    &:disabled:after {\n      color: ${Colors.greyMiddle};\n    }\n  }\n  label {\n    display: inline-block;\n    margin: 0.4rem 0 0 0.5rem;\n    vertical-align: top;\n  }\n`\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const SaveInvoicePreferencesButton: React.FC = props => (\n  <TouchButton text={i18n.t`Save invoice preferences`} color={Colors.green} />\n)\n","import React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { SaveInvoicePreferencesButton } from './SaveInvoicePreferencesButton'\n\ninterface IInvoicePreferencesFormProps {}\n\nconst SaveButtonContainer = styled.div`\n  margin-top: 1rem;\n  width: 15rem;\n`\n\nexport const InvoicePreferencesForm: React.FC<\n  IInvoicePreferencesFormProps\n> = props => (\n  <Form>\n    <FormInputTextBox field=\"account\" placeholder=\"Název firmy\" />\n    <br />\n    <FormInputTextBox field=\"number\" placeholder=\"IČ\" />\n    <FormInputTextBox field=\"vatIdent\" placeholder=\"DIČ\" />\n\n    <SaveButtonContainer>\n      <SaveInvoicePreferencesButton />\n    </SaveButtonContainer>\n  </Form>\n)\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { i18n } from '../../../i18n'\n\ninterface IStoppageFormProps {}\n\nexport const StoppageForm: React.FC<IStoppageFormProps> = props => (\n  <Form>\n    <FormInputCheckbox\n      field=\"onlyPersonalPickup\"\n      label={i18n.t`We are not delivering, only take away.`}\n    />\n    <br />\n    <FormInputCheckbox\n      field=\"stoppage\"\n      label={i18n.t`Completely stop all orders.`}\n    />\n  </Form>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { InvoicePreferencesForm } from '../organism/InvoicePreferencesForm'\nimport { StoppageForm } from '../organism/StoppageForm'\n\ninterface IPreferencesPageProps {}\n\nexport const BranchPreferencesPage: React.FC<IPreferencesPageProps> = props => (\n  <FullPageLayout pageTitle={i18n.t`Branch preferences`}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <Headline>\n        <Trans id=\"branch.preferences.stoppage\">Stoppage</Trans>\n      </Headline>\n      <StoppageForm />\n\n      <Headline>\n        <Trans>Change of invoice preferences</Trans>\n      </Headline>\n      <InvoicePreferencesForm />\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesPage } from '../pages/BranchPreferencesPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BranchPreferencesRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      component={BranchPreferencesPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import { InlineTimePicker, TimePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<TimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputTime: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineTimePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"LT\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTime } from './FormInputTime'\n\ninterface IFormInputTimeSpanProps {\n  fieldFrom: FieldType\n  fieldTo: FieldType\n}\n\nconst InlineWrap = styled.div`\n  width: 5rem;\n  display: inline-block;\n`\n\nexport const FormInputTimeSpan: React.FC<IFormInputTimeSpanProps> = ({\n  fieldFrom,\n  fieldTo,\n}) => (\n  <>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldFrom}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldTo}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n  </>\n)\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { ESpecificHourMode } from '../models/BusinessHoursModel'\n\nconst labels = {\n  [ESpecificHourMode.TIMESPAN]: i18nMark('Open between'),\n  [ESpecificHourMode.FULLDAY]: i18nMark('Closed'),\n}\n\nexport const SpecificModeSelector: React.FC = () => (\n  <WithSettings\n    observe={true}\n    render={({ businessHours }) => (\n      <SelectControlFlat<ESpecificHourMode>\n        items={[ESpecificHourMode.TIMESPAN, ESpecificHourMode.FULLDAY]}\n        selectedItem={businessHours.specificMode as ESpecificHourMode}\n        formatItem={mode => i18n._(labels[mode])}\n        onSingleSelection={(mode: ESpecificHourMode) =>\n          businessHours.changeSpecificMode(mode)\n        }\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/macro'\nimport { setHours, setMinutes } from 'date-fns'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { FormInputTimeSpan } from '../../../atoms/FormInputTimeSpan'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { fullDateFormat } from '../../../helpers/formats'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport {\n  ESpecificHourMode,\n  ISpecificFormData,\n} from '../models/BusinessHoursModel'\nimport { SpecificModeSelector } from '../molecules/SpecificModeSelector'\n\nconst DateContainer = styled.div`\n  display: inline-block;\n  width: 13rem;\n  margin-left: 1rem;\n  margin-top: 2rem;\n`\n\nconst FormContainer = styled.div`\n  display: inline-block;\n  width: 16rem;\n  min-height: 6rem;\n  margin: 0rem 0 0 1rem;\n  vertical-align: top;\n`\n\nexport const SpecificBusinessHourForm: React.FC = props => {\n  const {\n    settings: { businessHours },\n  } = useRoot()\n  return (\n    <Form\n      onSubmit={businessHours.submitSpecificHour}\n      defaultValues={getDefaultValues()}\n    >\n      <DateContainer>\n        <FormInputDate\n          field=\"date\"\n          format={fullDateFormat}\n          minDate={new Date()}\n          fullWidth={true}\n          label={<Trans>Date</Trans>}\n        />\n      </DateContainer>\n\n      <FormContainer>\n        <SpecificModeSelector />\n        <Observer>\n          {() =>\n            businessHours.specificMode === ESpecificHourMode.TIMESPAN ? (\n              <FormInputTimeSpan fieldFrom=\"openAt\" fieldTo=\"closeAt\" />\n            ) : (\n              <Sizer width={13}>\n                <FormInputTextBox\n                  field=\"note\"\n                  inputFullWidth={true}\n                  placeholder={i18n.t`Closing reason`}\n                />\n              </Sizer>\n            )\n          }\n        </Observer>\n      </FormContainer>\n\n      <FormSubmit width=\"9rem\">{i18n.t`Add`}</FormSubmit>\n    </Form>\n  )\n}\n\nfunction getDefaultValues(): Partial<ISpecificFormData> {\n  const now = new Date()\n  return {\n    date: now,\n    openAt: setHours(setMinutes(now, 0), 9),\n    closeAt: setHours(setMinutes(now, 0), 20),\n  }\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface ISpecificBusinessHourLineProps {\n  bsHour: GSpecificBusinessHour.Fragment\n  onDelete(): void\n}\n\nexport const SpecificBusinessHourLine: React.FC<\n  ISpecificBusinessHourLineProps\n> = ({ bsHour, onDelete }) => (\n  <FlexRow>\n    <FlexColumn fixedWidth={true}>\n      <CanMutate mutationName=\"destroyBusinessHour\">\n        <TouchButtonDelete\n          onDelete={onDelete}\n          confirmText={`${i18n.t`Really remove specific business hour ${\n            bsHour.specificDateLocalized\n          }?`}`}\n        />\n      </CanMutate>\n    </FlexColumn>\n    <FlexColumn fixedWidth={true} width=\"14rem\">\n      {bsHour.specificDateLocalized}\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={1}>{formatLineTime(bsHour)}</FlexColumn>\n  </FlexRow>\n)\n\nfunction formatLineTime(bsHour: GSpecificBusinessHour.Fragment) {\n  if (bsHour.closed) {\n    return bsHour.closedNote\n  }\n  return `${bsHour.openAt} - ${bsHour.closeAt}`\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { SpecificBusinessHourLine } from '../molecules/SpecificBusinessHourLine'\nimport { QuerySpecificBusinessHours } from './SpecificBusinessHours.graphql'\n\nconst sortByDate = RM.sort<GSpecificBusinessHour.Fragment>(\n  // @ts-ignore Fix typing\n  RM.ascend(RM.or(RM.prop('specificDate'), RM.not)),\n)\n\nexport const SpecificBusinessHours: React.FC = () => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QuerySpecificBusinessHours\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderFragment={({ businessHours }) =>\n        sortByDate(businessHours).map(bsHour => (\n          <SpecificBusinessHourLine\n            key={bsHour.id}\n            bsHour={bsHour}\n            onDelete={() =>\n              settings.businessHours.deleteSpecificHour(bsHour.id)\n            }\n          />\n        ))\n      }\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../../segments/settings/organisms/SettingsCompanyBranchPicker'\nimport { SpecificBusinessHourForm } from '../organisms/SpecificBusinessHourForm'\nimport { SpecificBusinessHours } from '../organisms/SpecificBusinessHours'\n\nexport const BusinessHoursPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Business hours`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      {/* <Headline>Pravidelné otevírací hodiny</Headline>\n      <RegularOpeningHours /> */}\n\n      <Headline>\n        <Trans>Specific business hours</Trans>\n      </Headline>\n      <SpecificBusinessHours />\n\n      <CanMutate mutationName=\"addSpecialBusinessHour\">\n        <Headline>\n          <Trans>Add specific business hour</Trans>\n        </Headline>\n        <SpecificBusinessHourForm />\n      </CanMutate>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BusinessHoursPage } from '../pages/BusinessHoursPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BusinessHoursRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute exact={true} path={match.path} component={BusinessHoursPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const BusinessHoursButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Business hours`}\n    iconName=\"av_timer\"\n    color={Colors.red}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuCategoryButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Categories`}\n    iconName=\"folder\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuRecipeButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Recipes`}\n    iconName=\"insert_drive_file\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Stock overview`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockDepositButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Stock deposit`}\n    iconName=\"open_in_browser\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const UserMenuButton: React.FC = () => (\n  <TouchButton\n    text={i18n.t`User`}\n    iconName=\"person\"\n    color={Colors.greyMiddle}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IZonesMenuButtonProps {}\n\nexport const ZonesMenuButton: React.FC<IZonesMenuButtonProps> = props => (\n  <TouchButton\n    text={i18n.t`Delivery zones`}\n    iconName=\"edit_location\"\n    color={Colors.violet}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { BusinessHoursButton } from '../organisms/BusinessHoursButton'\nimport { MenuCategoryButton } from '../organisms/MenuCategoryButton'\nimport { MenuRecipeButton } from '../organisms/MenuRecipeButton'\nimport { MenuStockButton } from '../organisms/MenuStockButton'\nimport { MenuStockDepositButton } from '../organisms/MenuStockDepositButton'\nimport { UserMenuButton } from '../organisms/UserMenuButton'\nimport { ZonesMenuButton } from '../organisms/ZonesMenuButton'\n\ninterface ISettingsPageProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'BusinessHours', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'Preferences', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'ZonesMenu', x: 4, y: 1, w: 2, h: 2 },\n    { i: 'UserMenu', x: 6, y: 1, w: 2, h: 2 },\n    { i: 'MenuRecipe', x: 0, y: 3, w: 2, h: 2 },\n    { i: 'MenuCategory', x: 2, y: 3, w: 2, h: 2 },\n    { i: 'MenuStock', x: 4, y: 3, w: 2, h: 2 },\n    { i: 'MenuStockDeposit', x: 6, y: 3, w: 2, h: 2 },\n  ]\n}\n\nexport const SettingsPage: React.FC<ISettingsPageProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"BusinessHours\"\n      route=\"/settings/businesshours\"\n      component={BusinessHoursButton}\n      canQuery=\"businessHours\"\n    />\n    {/* <PageLayoutItem\n      key=\"Preferences\"\n      route=\"/settings/preferences\"\n      component={PreferencesButton}\n    /> */}\n    <PageLayoutItem\n      key=\"MenuRecipe\"\n      route=\"/settings/menu/recipe\"\n      component={MenuRecipeButton}\n      canQuery=\"recipes\"\n    />\n    <PageLayoutItem\n      key=\"MenuCategory\"\n      route=\"/settings/menu/category\"\n      component={MenuCategoryButton}\n      canQuery=\"wareCategories\"\n    />\n    <PageLayoutItem\n      key=\"MenuStock\"\n      route=\"/settings/menu/stock\"\n      component={MenuStockButton}\n      canQuery=\"stockItems\"\n    />\n    <PageLayoutItem\n      key=\"MenuStockDeposit\"\n      route=\"/settings/menu/stock/deposit\"\n      component={MenuStockDepositButton}\n      canMutate=\"changeAmountStockItem\"\n    />\n    <PageLayoutItem\n      key=\"ZonesMenu\"\n      route=\"/settings/zones\"\n      component={ZonesMenuButton}\n      canQuery=\"zones\"\n    />\n    <PageLayoutItem\n      key=\"UserMenu\"\n      route=\"/settings/user\"\n      component={UserMenuButton}\n      canQuery=\"user\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { LazyRoute } from '../../../routes/LazyRoute'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesRoutes } from '../../branchpreferences/routes/BranchPreferencesRoutes'\nimport { BusinessHoursRoutes } from '../../businesshours/routes/BusinessHoursRoutes'\nimport { SettingsPage } from '../pages/SettingsPage'\n\nconst ZoneMenuRoutes = React.lazy(() =>\n  import('../../../segments/zones/routes/ZoneMenuRoutes'),\n)\n\nconst MenuRoutes = React.lazy(() =>\n  import('../../../segments/menu/routes/MenuRoutes'),\n)\n\nconst UserMenuPage = React.lazy(() => import('../pages/UserMenuPage'))\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const SettingsRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => {\n  return (\n    <>\n      <PageTitle.Route path={match.path} title={i18n.t`Settings`} />\n      <Switch>\n        <SecureRoute exact={true} path={match.path} component={SettingsPage} />\n        <LazyRoute path={`${match.path}/menu`} component={MenuRoutes} />\n        <LazyRoute path={`${match.path}/zones`} component={ZoneMenuRoutes} />\n        <LazyRoute path={`${match.path}/user`} component={UserMenuPage} />\n        <Route\n          path={`${match.path}/businesshours`}\n          component={BusinessHoursRoutes}\n        />\n        <Route\n          path={`${match.path}/preferences`}\n          component={BranchPreferencesRoutes}\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </>\n  )\n}\n\nexport default SettingsRoutes\n"],"sourceRoot":""}