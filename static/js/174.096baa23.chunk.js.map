{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/CanQuery.tsx","atoms/HorizontalSeparator.tsx","atoms/Price.tsx","atoms/SelectControlFlat.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","hooks/useOnConnectionRestored.ts","segments/order/organisms/OrderListBranchFilter.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenOrderWareLine.tsx","segments/kitchen/organisms/KitchenOrderWareList.tsx","segments/kitchen/molecules/KitchenAcceptButton.tsx","segments/kitchen/molecules/KitchenOrderDetail.tsx","segments/kitchen/molecules/KitchenOrderBox.tsx","segments/kitchen/organisms/KitchenOrderListLoader.tsx","segments/kitchen/organisms/KitchenOrderList.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/routes/KitchenRoutes.tsx"],"names":["IconLineWrap","styled","div","withConfig","displayName","componentId","DescriptionContainer","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","NoAccess","PageLayoutFullHeightItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","id","CanQuery","queryName","canQuery","HorizontalSeparator","_styling__WEBPACK_IMPORTED_MODULE_2__","HorizontalSeparatorStyled","greyLight","_ref$visible","visible","Price","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","className","formatPrice","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","RM","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_6___default","hasSelection","onClick","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","map","idx","Component","defaultProps","prop","getItemValue","ScrollArea","CardDock","styled_components__WEBPACK_IMPORTED_MODULE_0__","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","padding","react","placeholder","i18n","_","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","cancelIconPadding","_templateObject","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","red","orange","green","bigNumberStyle","dashStyle","_templateObject2","clickable","_templateObject3","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","react__WEBPACK_IMPORTED_MODULE_2___default","companyBranch","_atoms_DeliveryTimeBadge__WEBPACK_IMPORTED_MODULE_10__","Date","orderStateCategory","OrderStateCategoryEnum","Cancel","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","formatAddress","address","_atoms_CustomerIdentity__WEBPACK_IMPORTED_MODULE_9__","_atoms_Price__WEBPACK_IMPORTED_MODULE_5__","totalSum","currency","code","isPaidWithCard","NoteLine","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_2__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_i18n__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","CurrentNoteStyled","span","PreviousNoteStyled","note","previousNote","useOnConnectionRestored","_helpers_offline__WEBPACK_IMPORTED_MODULE_1__","cb","useDisposable","whenGoingOnline","OrderListBranchFilter","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_3__","_styling__WEBPACK_IMPORTED_MODULE_4__","from","list","setBranchFilter","clearBranchFilter","Label","DeliveryTime","DeliverLabel","deliverType","_lingui_react","KitchenOrderAtSummary","deliverTime","AccessTime","KitchenOrderAtSummary_DeliverLabel","formatTimeWithoutTodayDate","Circle","Small","CheckedInner","TouchCheckButton","isChecked","OrderWareLineWrap","IsDoneContainerStyled","CodeContainerStyled","FontSizes","CompactCardBig","NameContainerStyled","KitchenOrderWareLine","recipeId","isDone","isCheckable","_useMKitchenRecipeSta","useMKitchenRecipeState","updateOrderRecipeState","slicedToArray","TouchCheckButton_TouchCheckButton","OrderRecipeStateEnum","Preparing","Cooked","KitchenOrderWareList","orderWares","orderWare","KitchenOrderWareLine_KitchenOrderWareLine","recipe","nameLabel","orderRecipeState","sidedishes","sidedish","KitchenAcceptButton","orderId","_useMOrderState","useMOrderState","acceptOrder","TouchButton","ButtonHeight","OrderStateEnum","InProduce","OrderDetailContainerStyled","KitchenOrderDetail","KitchenOrderWareList_KitchenOrderWareList","ReadyToDeliver","KitchenOrderAtSummary_KitchenOrderAtSummary","NewOrders","KitchenAcceptButton_KitchenAcceptButton","OrderBoxStyled","CompactCard","greyDarkest","Middle","KitchenOrderBox","href","replace","KitchenOrderDetail_KitchenOrderDetail","requiredCategories","loaderContext","createContext","loading","noFilter","orders","KitchenOrderListLoader","observer","orderModel","hasBranchFilter","_useQKitchenOrderList","useQKitchenOrderList","branchesFilter","categories","skip","updateQuery","refetch","useSKitchenOrderList","Finished","onSubscriptionData","dataUpdate","subscriptionData","prev","update","updatedOrder","o","orderExists","unshift","handleSubscriptionUpdate","Provider","InfoMessage","KitchenOrderList","category","_useKitchenOrderList","useContext","categoryOrders","propEq","KitchenOrderBox_KitchenOrderBox","CategorySeparator","KitchenOverviewPage","PageLayout","pageTitle","useBackButton","layouts","i","x","y","w","h","KitchenRoutes_KitchenRoutes","KitchenRoutes","match","react_router","SecureRoute","exact","path"],"mappings":"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","file":"static/js/174.096baa23.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  DeliveryTypeEnum,\n  FOrderStateCategoryFragment,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { GOrderListTicker } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & FOrderStateCategoryFragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={\n              order.orderStateCategory === OrderStateCategoryEnum.Cancel\n            }\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          <Price\n            price={order.totalSum.value}\n            currencyCode={order.totalSum.currency.code}\n          />\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { Colors } from '../../../styling'\n\ninterface IOrderListBranchFilterProps {}\n\nexport const OrderListBranchFilter: React.FC<\n  IOrderListBranchFilterProps\n> = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(order.list.branches)}\n      onSelectionChange={branches => {\n        order.list.setBranchFilter(branches)\n      }}\n      onSelectionClear={order.list.clearBranchFilter}\n      textColor={Colors.turquoise}\n      isMulti={true}\n      isClearable={false}\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  deliverTime: string | null\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<IProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<IProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport {\n  OrderRecipeStateEnum,\n  useMKitchenRecipeState,\n} from '../../../graph/generated'\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\n\ninterface IProps {\n  recipeId?: ID\n  code?: string\n  label: string\n  isDone: boolean\n  isCheckable: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst IsDoneContainerStyled = styled.div`\n  flex: 0 0 2.4rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 4.1rem;\n  font-size: ${FontSizes.CompactCardBig};\n  color: ${Colors.black};\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\n\nexport const KitchenOrderWareLine: React.FC<IProps> = ({\n  recipeId,\n  code,\n  label,\n  isDone,\n  isCheckable,\n}) => {\n  const [updateOrderRecipeState] = useMKitchenRecipeState()\n\n  return (\n    <OrderWareLineWrap>\n      <IsDoneContainerStyled>\n        {isCheckable && (\n          <TouchCheckButton\n            isChecked={isDone}\n            onClick={() => {\n              if (recipeId) {\n                updateOrderRecipeState({\n                  recipeId,\n                  state: isDone\n                    ? OrderRecipeStateEnum.Preparing\n                    : OrderRecipeStateEnum.Cooked,\n                })\n              }\n            }}\n          />\n        )}\n      </IsDoneContainerStyled>\n      <CodeContainerStyled>{code}</CodeContainerStyled>\n      <NameContainerStyled>{label}</NameContainerStyled>\n    </OrderWareLineWrap>\n  )\n}\n","import React, { Fragment } from 'react'\n\nimport { OrderRecipeStateEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { KitchenOrderWareLine } from '../molecules/KitchenOrderWareLine'\n\ninterface IProps {\n  orderWares: ReadonlyArray<FKitchenOrder.Items>\n  isCheckable: boolean\n}\n\nexport const KitchenOrderWareList: React.FC<IProps> = ({\n  orderWares,\n  isCheckable,\n}) => {\n  const renderWare = (orderWare: FKitchenOrder.Items) => (\n    <Fragment key={orderWare.id}>\n      <KitchenOrderWareLine\n        recipeId={orderWare.id}\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        isDone={orderWare.orderRecipeState.enum === OrderRecipeStateEnum.Cooked}\n        isCheckable={isCheckable}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <KitchenOrderWareLine\n            key={`${orderWare.id}-${sidedish.id}`}\n            recipeId={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            isDone={false}\n            isCheckable={false}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const KitchenAcceptButton: React.FC<IProps> = ({ orderId }) => {\n  const [acceptOrder] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        iconName=\"keyboard_arrow_right\"\n        width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        color={Colors.green}\n        onClick={() => {\n          acceptOrder({ orderId, state: OrderStateEnum.InProduce })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { KitchenOrderWareList } from '../organisms/KitchenOrderWareList'\nimport { KitchenAcceptButton } from './KitchenAcceptButton'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.2rem 0.1rem 0.2rem;\n`\n\nexport const KitchenOrderDetail: React.FC<IProps> = ({ order }) => (\n  <OrderDetailContainerStyled>\n    <HorizontalSeparator />\n    <KitchenOrderWareList\n      orderWares={order.items}\n      isCheckable={\n        order.orderStateCategory === OrderStateCategoryEnum.Preparing ||\n        order.orderStateCategory === OrderStateCategoryEnum.ReadyToDeliver\n      }\n    />\n    <HorizontalSeparator />\n    <KitchenOrderAtSummary\n      deliverTime={order.deliverAt}\n      deliverType={\n        order.deliveryType &&\n        order.deliveryType.enum === DeliveryTypeEnum.Pickup\n          ? 'PERSONAL'\n          : 'DELIVER_UNTIL'\n      }\n    />\n    <NoteLine note={order.note} previousNote={order.previousNote} />\n    {order.orderStateCategory === OrderStateCategoryEnum.NewOrders && (\n      <CardDock position=\"BottomRight\">\n        <KitchenAcceptButton orderId={order.id} />\n      </CardDock>\n    )}\n  </OrderDetailContainerStyled>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenOrderDetail } from './KitchenOrderDetail'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n  showBranch: boolean\n}\nexport const OrderBoxStyled = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n`\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.2rem;\n  color: ${Colors.greyMiddle};\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 1.8rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n`\n\nexport const KitchenOrderBox: React.FC<IProps> = ({ order, showBranch }) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderBoxStyled>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n          <br />\n          {order.customer && order.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${order.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {order.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </CustomerIdentityContainerStyled>\n      </OrderTickerMainContentStyled>\n\n      <KitchenOrderDetail order={order} />\n    </OrderBoxStyled>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderStateCategoryEnum,\n  QKitchenOrderListOrders,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\ntype TOrder = QKitchenOrderListOrders\n\ninterface ILoaderContext {\n  loading: boolean\n  noFilter: boolean\n  orders: ReadonlyArray<TOrder>\n}\n\nconst loaderContext = React.createContext<ILoaderContext>({\n  loading: true,\n  noFilter: true,\n  orders: [],\n})\n\nexport const KitchenOrderListLoader: React.FC = observer(props => {\n  const { order: orderModel } = useRoot()\n  const noFilter = !orderModel.list.hasBranchFilter\n  const { data, loading, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    { skip: noFilter },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip: noFilter,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return (\n    <loaderContext.Provider\n      value={{\n        loading,\n        noFilter,\n        orders: loading ? [] : data.orders,\n      }}\n    >\n      {props.children}\n    </loaderContext.Provider>\n  )\n})\n\nexport function useKitchenOrderList() {\n  return React.useContext(loaderContext)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { KitchenOrderBox } from '../molecules/KitchenOrderBox'\nimport { useKitchenOrderList } from './KitchenOrderListLoader'\n\ninterface IProps {\n  category: OrderStateCategoryEnum\n}\n\nconst InfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n\nexport const KitchenOrderList = observer<IProps>(({ category }) => {\n  const { order: orderModel } = useRoot()\n  const { loading, noFilter, orders } = useKitchenOrderList()\n\n  if (noFilter) {\n    return (\n      <InfoMessage>\n        <Trans>Select a branch</Trans>\n      </InfoMessage>\n    )\n  }\n\n  if (loading) {\n    return (\n      <InfoMessage>\n        <Trans>Loading</Trans>\n      </InfoMessage>\n    )\n  }\n\n  const categoryOrders = orders.filter(\n    RM.propEq('orderStateCategory', category),\n  )\n\n  if (categoryOrders.length === 0) {\n    switch (category) {\n      case OrderStateCategoryEnum.NewOrders:\n        return (\n          <InfoMessage>\n            <Trans>No new orders</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.Preparing:\n        return (\n          <InfoMessage>\n            <Trans>No orders to prepare</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.ReadyToDeliver:\n        return (\n          <InfoMessage>\n            <Trans>No orders to deliver</Trans>\n          </InfoMessage>\n        )\n      default:\n        return (\n          <InfoMessage>\n            <Trans>No orders</Trans>\n          </InfoMessage>\n        )\n    }\n  }\n\n  return (\n    <>\n      {categoryOrders.map(order => (\n        <KitchenOrderBox\n          key={order.id}\n          order={order}\n          showBranch={orderModel.list.branchesFilter.length > 1}\n        />\n      ))}\n    </>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { Colors } from '../../../styling'\nimport { OrderListBranchFilter } from '../../order/organisms/OrderListBranchFilter'\nimport { KitchenOrderList } from '../organisms/KitchenOrderList'\nimport { KitchenOrderListLoader } from '../organisms/KitchenOrderListLoader'\n\nfunction getLayout() {\n  return [{ i: 'filter', x: 4, y: 0, w: 10, h: 1 }]\n}\n\nconst CategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: -0.3rem;\n`\n\nexport const KitchenOverviewPage: React.FC = () => (\n  <KitchenOrderListLoader>\n    <PageLayoutFullHeightItem withScrollArea={true} row={1} widthInColumns={5}>\n      <KitchenOrderList category={OrderStateCategoryEnum.NewOrders} />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={5}\n      widthInColumns={6}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.Preparing} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={11}\n      widthInColumns={5}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.ReadyToDeliver} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      layouts={getLayout()}\n    >\n      <PageLayoutItem\n        key=\"filter\"\n        component={() => <OrderListBranchFilter />}\n      />\n    </PageLayout>\n  </KitchenOrderListLoader>\n)\n","import React from 'react'\nimport { RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const KitchenRoutes: React.FC<IProps> = ({ match }) => {\n  return (\n    <>\n      <Switch>\n        <SecureRoute\n          exact={true}\n          path={match.path}\n          component={KitchenOverviewPage}\n        />\n      </Switch>\n    </>\n  )\n}\n\nexport default KitchenRoutes\n"],"sourceRoot":""}