{"version":3,"sources":["molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","segments/menu/hooks/useMenuRouting.ts","molecules/TouchButtonEdit.tsx","../node_modules/@material-ui/icons/esm/RemoveRedEye.js","molecules/TouchButtonVisibility.tsx","atoms/DataTable.tsx","atoms/CardDock.tsx","atoms/ScrollArea.tsx","helpers/filter.ts","hooks/useAccessGuard.ts","atoms/BlockLoader.tsx","atoms/NoteText.tsx","segments/menu/labels.ts","segments/menu/molecules/MenuFilterInput.tsx","segments/menu/molecules/CreateButton.tsx","segments/menu/menutypes.ts","segments/menu/molecules/MenuCategoryFilter.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipeListPage.tsx","../node_modules/@material-ui/icons/esm/RemoveCircleOutline.js","molecules/TouchButtonRemove.tsx","atoms/FormInputFlatSelect.tsx","atoms/FormInputSelect.tsx","atoms/DragHandle.tsx","../node_modules/resolve-pathname/esm/resolve-pathname.js","atoms/RelativeLink.tsx","atoms/PictogramDisplay.tsx","atoms/DataList.tsx","../node_modules/@material-ui/icons/esm/Search.js","../node_modules/apollo-client/errors/ApolloError.js","../node_modules/apollo-client/util/arrays.js","molecules/SortableDataTable.tsx","segments/menu/molecules/CategoryListTable.tsx","segments/menu/organisms/CategoryList.tsx","segments/menu/organisms/MenuGuideDownload.tsx","segments/menu/pages/MenuCategoryListPage.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/molecules/SubmitButton.tsx","atoms/FormContainer.tsx","segments/settings/atoms/WithSettings.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/molecules/MenuCategoryOrigins.tsx","segments/menu/organisms/CategoryFormBasic.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","segments/menu/organisms/CategoryFormLoader.tsx","../node_modules/@material-ui/icons/esm/Toll.js","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormPricingField.tsx","atoms/FormDisplayField.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/molecules/CategoryRequirementControl.tsx","segments/menu/organisms/CategoryRequirementsForm.tsx","segments/menu/pages/MenuCategoryPage.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeCategoryView.tsx","../node_modules/@material-ui/icons/esm/ErrorOutline.js","segments/menu/molecules/FormInputCode.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","../node_modules/@material-ui/icons/esm/Done.js","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/atoms/ImportCheckbox.tsx","segments/menu/hooks/useTransferModel.ts","segments/menu/molecules/StockTransferAmountInput.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormLoader.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","../node_modules/@material-ui/icons/esm/Fingerprint.js","segments/menu/molecules/FormInputPlu.tsx","../node_modules/@material-ui/icons/esm/SelectAll.js","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/organisms/StockFormMain.tsx","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/molecules/ConfirmTransferButton.tsx","segments/menu/molecules/ImportModeToggle.tsx","segments/menu/molecules/TransferSourceBranchPicker.tsx","../node_modules/@material-ui/icons/esm/ArrowRightAlt.js","segments/menu/molecules/TransferTargetBranchPicker.tsx","segments/menu/pages/MenuStockTransferPage.tsx","segments/menu/routes/MenuRoutes.tsx"],"names":["StyledPageLayoutFullHeightItem","styled","div","withConfig","displayName","componentId","mediaDesktop","_templateObject","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","column","row","mediaMobile","_templateObject2","_ref","rowInMobile","_ref2","forcePercentHeightInMobile","concat","PageHeaderHeight","DefaultSizeUnit","PageLayoutFullHeightItem","_ref3","children","_ref3$row","_ref3$rowInMobile","_ref3$column","_ref3$widthInColumns","_ref3$withScrollArea","withScrollArea","scrollAreaId","forceHeightInMobile","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_4__","id","_atoms_Sizer__WEBPACK_IMPORTED_MODULE_5__","height","heightUnit","FlexRowSingle","_ref$flexWrap","flexWrap","_ref2$justify","justify","VerticalGap","_ref$size","size","_ref$sizeUnit","sizeUnit","__webpack_require__","d","__webpack_exports__","MENU_ROUTE","useMenuRouting","_speedlo_hooks__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","RECIPE_ROUTE","CATEGORY_ROUTE","STOCK_ROUTE","CREATE_ROUTE","itemId","_useRouterContext","useRouterContext","location","history","itemType","React","useMemo","URLSearchParams","search","get","getItemRoute","getRecipeListRoute","getCategoryListRoute","getStockListRoute","isCreate","getRecipeCreateRoute","recipeType","getRecipeEditRoute","recipeId","getCategoryCreateRoute","categoryType","getCategoryEditRoute","categoryId","getStockDepositRoute","getStockTransferRoute","getStockCreateRoute","getStockEditRoute","redirectToCategoryList","replace","redirectToRecipeList","redirectToStockList","TouchButtonEdit","target","_ref$Link","Link","RelativeLink","Object","objectWithoutProperties","react_default","to","SizerButton","TouchButton","assign","icon","Edit","RemoveRedEye","createSvgIcon","TouchButtonVisibility","isVisible","iconColor","Colors","white","greyMiddle","color","DataTable","items","_props$heightStretch","heightStretch","_props$fullHeight","fullHeight","_props$rowHeight","rowHeight","_props$isLoading","isLoading","tableProps","rowGetter","useCallback","index","noRowsRenderer","BlockLoader","renderTable","width","es","autoHeight","headerHeight","rowCount","length","style","outline","disableHeight","scrollElement","window","_ref4","_ref5","checkColumnAccess","_ref6","renderer","canQuery","canMutate","cellProps","result","CanQuery","queryName","CanMutate","mutationName","ColumnRendererEdit","_ref7","cellData","TouchButtonEdit_TouchButtonEdit","ColumnRendererRemove","_ref8","columnData","TouchButtonRemove","onClick","onRemove","ColumnRendererVisibility","_ref9","rowData","TouchButtonVisibility_TouchButtonVisibility","onToggle","ColumnRendererWithNote","_ref10","Fragment","NoteText","noteKey","DataTableEmptyText","_ref11","_ref11$text","text","i18n","_","CardDock","position","ScrollArea","isPartialMatch","searchValue","toLocaleLowerCase","propValue","includes","useCanQuery","useCanMutate","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_0__","useAccessGuard","queries","mutations","user","useRoot","every","_len","arguments","Array","_key","_len2","_key2","ScaleOut","keyframes","ScaleOutWebkit","StyledBlockLoader","orange","className","categories","_categories","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","WareCategoryTypeEnum","Main","i18nMark","SideDish","Cover","recipes","_recipes","getCategoryTypeLabel","getRecipeTypeLabel","MenuFilterInput","_material_ui_icons__WEBPACK_IMPORTED_MODULE_0__","_speedlo_hooks__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","_atoms_FormInputStyled__WEBPACK_IMPORTED_MODULE_3__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_4__","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_5__","_atoms_Sizer__WEBPACK_IMPORTED_MODULE_6__","_i18n__WEBPACK_IMPORTED_MODULE_7__","modelType","model","settings","menu","onChange","useDebounceCallback","setFilterInput","Search","defaultValue","filterInput","inputFullWidth","ev","value","placeholder","CreateButtonContainer","CreateButton","routeTo","button","_atoms_SizerButton__WEBPACK_IMPORTED_MODULE_5__","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_6__","AddCircle","green","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","_graph_generated__WEBPACK_IMPORTED_MODULE_0__","MenuCategoryFilter","observer","recipe","_useQMenuCategoryFilt","useQMenuCategoryFilter","branchId","data","loading","Sizer","SelectControl","key","setCategoryFilter","options","grouped","RM","groupBy","cat","enum","toString","keys","map","typeString","label","getOptions","isMulti","isClearable","isSearchable","getOptionValue","prop","getOptionLabel","propOr","RecipeTypeSelection","_React$useState","useState","_React$useState2","slicedToArray","isOpen","setOpen","onSelect","push","preventDefault","Dialog","open","onClose","DialogTitle","_lingui_react","RecipeListTable","_ref$showEditColumn","showEditColumn","_ref$showRemoveColumn","showRemoveColumn","_ref$showVisibilityCo","showVisibilityColumn","_ref$showTypeColumn","showTypeColumn","_ref$isLoading","_ref$heightStretch","react_content_loader_es","Headline","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","cellDataGetter","ColumnRendererCode","flexGrow","ColumnRendererPrice","priceType","TPriceType","Delivery","Inhouse","defaults","prices","foundPrice","find","pathEq","price","formattedValue","type","RecipeListLoader","_useQMenuRecipeList","useQMenuRecipeList","categoryFilterId","filteredRecipes","useComputed","partialMatch","filter","cond","propSatisfies","T","RecipeListTable_RecipeListTable","changeVisibility","StyledFilterWithTableContainer","MenuRecipeListPage","FullPageLayout","pageTitle","useBackButton","Card","stretchToParent","FlexColumn","SettingsCompanyBranchPicker","RecipeTypeSelection_RecipeTypeSelection","RemoveCircleOutline","esm_extends","FormInputFlatSelect","_speedlo_tools__WEBPACK_IMPORTED_MODULE_0__","react_form__WEBPACK_IMPORTED_MODULE_2__","_i18n__WEBPACK_IMPORTED_MODULE_3__","_SelectControlFlat__WEBPACK_IMPORTED_MODULE_4__","field","_props$fieldIsPure","fieldIsPure","_props$isClearable","_props$isMulti","_props$isRequired","isRequired","_props$validationName","validationName","_props$getItemId","getItemId","idProp","pure","validate","isArray","fieldApi","selection","selectedItems","item","onMultiSelection","setValue","setTouched","selectedItem","onSingleSelection","getControlProps","isInvalid","Boolean","error","FormInputSelect","_React$Component","_getPrototypeOf2","_this","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","args","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","apply","_i18n__WEBPACK_IMPORTED_MODULE_10__","0","validatioName","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_this$props","isSelected","F","selectedOptions","option","_this2","_this$props2","_this$props2$fieldIsP","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7___default","react_form__WEBPACK_IMPORTED_MODULE_8__","_SelectControl__WEBPACK_IMPORTED_MODULE_11__","onFocus","styles","control","base","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","borderColor","Component","defaultProps","StyledDragHandle","DragHandle","SortableHandle","_Icon__WEBPACK_IMPORTED_MODULE_5__","Reorder","isAbsolute","pathname","charAt","spliceOne","list","i","k","pop","resolve_pathname","from","hasTrailingSlash","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","last","up","part","unshift","join","substr","linkProps","react_router","react_router_dom","resolveLocation","resolvePathname","resolved","objectSpread","PictogramDisplay","attrs","getPictogramClassName","pictogramId","_ref$fontSize","fontSize","_ref$fontSizeUnit","fontSizeUnit","DataList","renderItem","listProps","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","rowRenderer","renderList","react_virtualized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","defineProperty","exports","tslib_1","arrays_1","isApolloError","err","hasOwnProperty","generateErrorMessage","message","isNonEmptyArray","graphQLErrors","forEach","graphQLError","errorMessage","networkError","ApolloError","_super","_a","extraInfo","__proto__","prototype","__extends","Error","SortableTableRowRenderer","SortableElement","columns","SortableDataTableContainer","SortableContainer","SortableDataTable","_React$PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","sortedItems","rowProps","onHandleSorting","asyncToGenerator","regenerator_default","mark","_callee","newIndex","oldIndex","currentItems","sortSuccess","wrap","_context","prev","next","abrupt","toConsumableArray","arrayMove","setState","onSort","offset","t0","sent","stop","_x","inherits","createClass","lockAxis","useDragHandle","onSortEnd","PureComponent","getDerivedStateFromProps","nextProps","CategoryListTable","_ref$showHeader","showHeader","_ref$isSortable","isSortable","_ref$fullHeight","_ref$noRowsDisplay","noRowsDisplay","disableHeader","StyledCategoryList","greyLight","headline","_ref$subHeadline","subHeadline","_useQMenuCategoryList","useQMenuCategoryList","updateQuery","refetch","dataOrigins","useQMenuCategoryOrigins","originsMap","origins","reduce","acc","origin","code","renderOrigins","sort","originEnum","_useMMenuCategoryVisi","useMMenuCategoryVisibility","widthGrowIndex","fixedWidth","CategoryListTable_CategoryListTable","visible","optimisticResponse","updateWareCategory","__typename","category","sortCategory","MenuGuideDownloadButton","MenuGuideDownload_templateObject","black","MenuGuideDownload","_useQMenuGuideDownloa","useQMenuGuideDownload","companyBranch","foodMenuUrl","href","rel","PartialDataTableContainer","MenuCategoryListPage_templateObject","MenuCategoryListPage","organisms_CategoryList","TopRightButtonContainer","TopRightButtonContainer_templateObject","Radiuses","Button","IsCategoryType","isMain","isSideDish","isCover","SubmitButton","_ref$isCreate","render","form","FormSubmit","isFormValid","getButtonText","FormContainer","FormContainer_templateObject","FormColumn","WithSettings","observe","WithRoot","_render","MenuCategoryPictogramSelect","pictogram","availablePictograms","formatOptionLabel","components","SingleValue","container","menuList","maxHeight","FormDeleteButton","confirmText","onDelete","TouchButtonDelete","goBack","FormInputInternalNote","_ref$field","_ref$label","IconLine","labelWidth","FormInputTextBox","FormInputName","Label","MenuCategoryOrigins","_useQMenuCategoryOrig","CategoryBasicForm","FormInputName_FormInputName","FormInputInternalNote_FormInputInternalNote","MenuCategoryOrigins_MenuCategoryOrigins","FormInputCheckbox","MenuCategoryPictogramSelect_MenuCategoryPictogramSelect","WithSettings_WithSettings","FormDeleteButton_FormDeleteButton","deleteCategory","FormLoader","shouldLoad","loader","_useState","_useState2","values","setValues","useEffect","then","NavigateBack","ErrorPop","MenuBaseFormLoader_templateObject","MenuBaseFormLoader","submitError","validationErrors","_this$state","renderSubmitError","renderValidationErrors","messages","propEq","userErrors","renderPopover","errors","Popover","anchorEl","document","getElementById","anchorOrigin","vertical","horizontal","idx","_this3","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack_NavigateBack","defaultValues","loadedDefaults","formApi","logForm","onSubmit","_callee2","_context2","onSubmitFailure","logError","renderErrors","useMenu","CategoryFormLoader","MenuBaseFormLoader_MenuBaseFormLoader","createCategory","updateCategory","internalNoteLabel","nameLabel","minCount","maxCount","getDefaults","client","query","QMenuCategoryDocument","variables","fetchPolicy","Toll","fill","formInputPriceValidate","isEmpty","validateNumber","FormInputPrice","VatsQuery","gql","FormInputVatSelect_graphql_templateObject","QueryVat","buildQuery","css","FormInputVatSelect_templateObject","FormInputVatSelect","useObserver","renderLoading","vats","formatItem","vat","FormPricingCurrencyCode","FormPricingField_templateObject","FormPricingField","FormInputPrice_FormInputPrice","FormInputVatSelect_FormInputVatSelect","MenuSuggestionPanel","onAdd","_props$addLabel","addLabel","_props$addButtonText","addButtonText","selectProps","_useStateRef","useStateRef","_useStateRef2","getSelected","setSelected","onConfirm","selected","onKeyDown","margin","disabled","RecipeAssocListTable","RecipeAssociatedView","priceTypeRecipes","rejectSuggestions","reject","some","onAddRecipe","addedRecipe","warePriceType","associatedRecipe","formattedPrice","RecipeAssocListTable_RecipeAssocListTable","RecipeForm_graphql","priceTypes","WarePriceTypeEnum","RecipeFormPricing","react","FormPricingField_FormPricingField","TRecipeType","RecipeAssociatedView_RecipeAssociatedView","RecipeSuggestionPanel","filterRecipes","Container","CategoryRecipesView_templateObject","FormFixedRow","CategoryRecipesView_templateObject2","FormStretchedRow","_templateObject3","SortableRecipes","RecipeRow","_templateObject4","MoveCell","_templateObject5","SortableRecipe","internalNote","CategoryRecipesView","without","lockToContainerEdges","StyledCategoryRequirementControl","CategoryRequirementControl_templateObject","CategoryRequirementControl","count","enabled","countRef","useRef","htmlFor","FormInputStyled","_onChange","validity","valid","Number","parseInt","select","pattern","StyledCheckbox","checked","_onChange2","_x2","current","getRulesMap","noLimit","min","max","optional","required","onlyOne","custom","CategoryRequirementsForm","ruleMap","currentRule","setRule","getValue","found","findKey","setMinCount","setMaxCount","SelectControlFlat","req","selectedRule","rule","CategoryRequirementControl_CategoryRequirementControl","MenuCategoryPage","match","params","_useMenuRouting","CategoryFormLoader_CategoryFormLoader","hideLogoutWidget","MenuCategoryPage_FormContainer","MenuCategoryPage_FormFixedRow","CategoryFormBasic_CategoryBasicForm","IsCategoryType_IsCategoryType","component","MenuCategoryPage_FormStretchedRow","CategoryRecipesView_CategoryRecipesView","SubmitButton_SubmitButton","currentCategories","RecipeCategoryView","noRowsText","organisms_CategorySuggestionPanel","addedCategory","ErrorOutline","FormInputCode","FormInputDescription","AllergensQuery","FormInputAllergens_graphql_templateObject","FMenuAllergenFragmentDoc","QueryAllergens","AllergenBox","AllergenIndicator_templateObject","MarginAroundFormComponents","active","AllergenIndicator_templateObject2","yellow","MenuAllergenIndicator","allergens","allergen","title","RecipeAllergenDisplay","uniq","flatten","AllergenIndicator_MenuAllergenIndicator","RecipeFormBasic","FormInputCode_FormInputCode","FormInputDescription_FormInputDescription","RecipeAllergenDisplay_RecipeAllergenDisplay","deleteRecipe","RecipeFormLoader","createRecipe","updateRecipe","currencyCode","queryDefaults","getPriceMap","vatId","MenuRecipeFormQuery","normalizeValues","descriptionLabel","image","sourcePrices","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","recipeSource","quantity","_ref7$stockItem","stockItem","unitLabel","wareUnit","sourcePrice","currency","RecipeIngredientsTable","rowIndex","validateQuantity","fieldName","validator","isFloat","unselectedStockOnly","differenceWith","RecipeIngredientsControl","_useQMenuStockList","useQMenuStockList","RecipeIngredientsTable_RecipeIngredientsTable","stockItems","_onAdd","addedStockItem","RecipeIngredientsView","ingredient","stockItemId","MenuRecipePage","RecipeFormLoader_RecipeFormLoader","MarginBox","RecipeFormBasic_RecipeFormBasic","RecipeFormPricing_RecipeFormPricing","RecipeIngredientsView_RecipeIngredientsView","RecipeCategoryView_RecipeCategoryView","StockDepositConfirmButton","numeral","format","priceFormat","1","StockDepositFilterInput","forwardRef","ref","onFilter","autoFocus","onKeyPressCapture","StockDepositQuantityInput","Done","StockDepositResultTable","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","StockDepositResultTable_templateObject","indexOf","begin","substring","end","StockDepositControl","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","trim","head","onConfirmFilter","focus","onQuantity","onSelectStockItem","onDeposit","prevProps","_this$state2","hasSearchValue","isNoneFind","isMultiFind","StockDepositConfirmButton_StockDepositConfirmButton","cardName","StockDepositResultTable_StockDepositResultTable","StockDepositLoader","_useQMenuStockDeposit","useQMenuStockDeposit","_useMMenuStockQuantit","useMMenuStockQuantity","changeQuantity","quantityChange","MenuStockDepositPage","StockDepositControl_StockDepositControl","ImportCheckbox","sideText","useTransferModel","stock","transfer","StockTransferAmountInput","inputRef","setQuantity","getItemTransferQuantity","targetId","numberRx","source","invalid","hasInvalidAmount","StyledDataTable","StockListTable_templateObject","VerticallyCenteredFlexContainer","StockListTable_templateObject2","StockListTable","isTransferTable","unfilteredItems","allowNegative","MAX_SAFE_INTEGER","Math","getItemMaxLimit","initItems","filterItems","renderImportItemCheckbox","index_module","ImportCheckbox_ImportCheckbox","isImportingItem","toggleImportItem","renderImportAllHeader","isImportingAll","toggleImportAll","renderAmountInput","quantityColumn","Loading","isImportMode","headerRenderer","isTransferMode","stockAllowNegative","StockListLoader","_ref$isTransferring","isTransferring","MenuStockListPage","MenuStockFormQuery","StockForm_graphql_templateObject","FMenuWareUnitFragmentDoc","MenuStockDefaultsQuery","StockForm_graphql_templateObject2","StockFormLoader","stockId","createItem","updateItem","allowNegativeDefault","getAllowNegativeDefault","note","plu","FieldStateEnum","Default","isEnabled","Disabled","FormInputAllergens","Enabled","FormInputAllowNegative","labelForDefault","Fingerprint","FormInputPlu","SelectAll","WareUnitsQuery","FormInputWareUnit_graphql_templateObject","QueryWareUnits","FormInputWareUnit","wareUnits","StockFormMain","FormInputWareUnit_FormInputWareUnit","FormInputPlu_FormInputPlu","FormInputAllergens_FormInputAllergens","FormInputAllowNegative_FormInputAllowNegative","deleteItem","StockRecipesView","_useQStockRecipes","useQStockRecipes","MenuStockPage","StockFormLoader_StockFormLoader","StockFormMain_StockFormMain","StockRecipesVIew_StockRecipesView","StyledConfirmTransferButton","ConfirmTransferButton_templateObject","ConfirmTransferButton_templateObject2","Middle","ConfirmTransferButton_templateObject3","ConfirmTransferButton","enqueueSuccess","useSnackBar","_useMCreateTransfers","useMCreateTransfers","createTransfers","canTransferStockItems","targetBranch","noTargetSelected","transfers","transferVariables","itemsForTransfer","gt","clearTransferState","ImportModeToggle","toggleImportMode","TransferSourceBranchPicker","ArrowRightAlt","TransferTargetBranchPicker","branchesWithoutSourceBranch","idPropEq","sourceId","branches","CompanyBranchPicker","selectedBranches","onSelectionChange","branch","setTargetId","onSelectionClear","getDropdownProps","hideWhenSingleBranch","StyledTopContainer","MenuStockTransferPage_templateObject","VerticallyCenteredRow","MenuStockTransferPage_templateObject2","MenuStockTransferPage","canAccessPage","hasSingleBranch","topContent","TransferSourceBranchPicker_TransferSourceBranchPicker","MenuRoutes_MenuRoutes","MenuRoutes","routing","SecureRoute","path","NotFoundPage"],"mappings":"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","file":"static/js/178.799e0295.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => (\n  <StyledPageLayoutFullHeightItem\n    column={column}\n    row={row}\n    rowInMobile={rowInMobile}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n    forcePercentHeightInMobile={forceHeightInMobile}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <Sizer height={100} heightUnit=\"%\">\n        {children}\n      </Sizer>\n    )}\n  </StyledPageLayoutFullHeightItem>\n)\n","import styled from 'styled-components'\n\ninterface IProps {\n  flexWrap?: string\n  justify?: string\n}\n\nexport const FlexRowSingle = styled.div<IProps>`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: ${({ flexWrap = 'unset' }: IProps) => flexWrap};\n  justify-content: ${({ justify = 'space-between' }: IProps) => justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TCategoryType, TRecipeType } from '../menutypes'\n\nexport const MENU_ROUTE = '/settings/menu'\nconst RECIPE_ROUTE = `${MENU_ROUTE}/recipe`\nconst CATEGORY_ROUTE = `${MENU_ROUTE}/category`\nconst STOCK_ROUTE = `${MENU_ROUTE}/stock`\nconst CREATE_ROUTE = 'create'\n\nexport function useMenuRouting(itemId?: ID) {\n  const { location, history } = useRouterContext()\n\n  const itemType = React.useMemo(\n    () =>\n      new URLSearchParams(location.search).get('type') as Maybe<\n        WareCategoryTypeEnum\n      >,\n    [location.search],\n  )\n\n  const isCreate = itemId === CREATE_ROUTE\n\n  const getItemRoute = (itemId: ID, itemType?: WareCategoryTypeEnum) => {\n    return itemType ? `${itemId}?type=${itemType}` : itemId\n  }\n\n  const getRecipeListRoute = () => RECIPE_ROUTE\n  const getRecipeCreateRoute = (recipeType: TRecipeType) =>\n    getItemRoute(`${RECIPE_ROUTE}/${CREATE_ROUTE}`, recipeType)\n  const getRecipeEditRoute = (recipeId: ID, recipeType?: TRecipeType) =>\n    getItemRoute(`${RECIPE_ROUTE}/${recipeId}`, recipeType)\n\n  const getCategoryListRoute = () => CATEGORY_ROUTE\n  const getCategoryCreateRoute = (categoryType: TCategoryType) =>\n    getItemRoute(`${CATEGORY_ROUTE}/${CREATE_ROUTE}`, categoryType)\n  const getCategoryEditRoute = (categoryId: ID, categoryType?: TCategoryType) =>\n    getItemRoute(`${CATEGORY_ROUTE}/${categoryId}`, categoryType)\n\n  const getStockListRoute = () => STOCK_ROUTE\n  const getStockDepositRoute = () => `${STOCK_ROUTE}/deposit`\n  const getStockTransferRoute = () => `${STOCK_ROUTE}/transfer`\n  const getStockCreateRoute = () =>\n    getItemRoute(`${STOCK_ROUTE}/${CREATE_ROUTE}`)\n  const getStockEditRoute = (categoryId: ID, categoryType?: TCategoryType) =>\n    getItemRoute(`${STOCK_ROUTE}/${categoryId}`, categoryType)\n\n  const redirectToRecipeList = () => {\n    history.replace(getRecipeListRoute())\n  }\n  const redirectToCategoryList = () => {\n    history.replace(getCategoryListRoute())\n  }\n  const redirectToStockList = () => {\n    history.replace(getStockListRoute())\n  }\n\n  return {\n    itemType,\n    isCreate,\n    getItemRoute,\n    getRecipeListRoute,\n    getRecipeCreateRoute,\n    getRecipeEditRoute,\n    getCategoryListRoute,\n    getCategoryCreateRoute,\n    getCategoryEditRoute,\n    getStockListRoute,\n    getStockDepositRoute,\n    getStockTransferRoute,\n    getStockCreateRoute,\n    getStockEditRoute,\n    redirectToCategoryList,\n    redirectToRecipeList,\n    redirectToStockList,\n  }\n}\n","import { Edit } from '@material-ui/icons'\nimport { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends LegacyOmit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.FC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <SizerButton>\n      <TouchButton icon={Edit} {...props} />\n    </SizerButton>\n  </Link>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');","import { RemoveRedEye } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.FC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      icon={RemoveRedEye}\n      iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n      color={Colors.greyMiddle}\n      {...props}\n    />\n  </SizerButton>\n)\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Index,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { BlockLoader } from './BlockLoader'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport { NoteText } from './NoteText'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  rowHeight?: number\n  isLoading?: boolean\n  heightStretch?: boolean\n  fullHeight?: boolean\n}\n\nexport const DataTable = <T extends {}>(props: IDataTableProps<T>) => {\n  const {\n    items,\n    heightStretch = false,\n    fullHeight = false,\n    rowHeight = 60,\n    isLoading = false,\n    children,\n    ...tableProps\n  } = props\n\n  const rowGetter = React.useCallback(({ index }: Index) => items[index], [\n    items,\n  ])\n\n  const noRowsRenderer = React.useCallback(\n    () => (isLoading ? <BlockLoader /> : null),\n    [isLoading],\n  )\n\n  const renderTable = (width: number, height: number) => {\n    return (\n      <Table\n        autoHeight={!heightStretch && !fullHeight}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowCount={items ? items.length : 0}\n        rowHeight={rowHeight}\n        rowGetter={rowGetter}\n        noRowsRenderer={noRowsRenderer}\n        style={{ outline: 'none' }}\n        {...tableProps}\n      >\n        {children}\n      </Table>\n    )\n  }\n\n  if (fullHeight) {\n    return (\n      <AutoSizer disableHeight={true}>\n        {({ width }) => renderTable(width, items.length * rowHeight)}\n      </AutoSizer>\n    )\n  }\n\n  if (heightStretch) {\n    return (\n      <AutoSizer>{({ width, height }) => renderTable(width, height)}</AutoSizer>\n    )\n  }\n\n  return (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderTable(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import styled from 'styled-components/macro'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nexport const CardDock = styled.div<IProps>`\n  position: absolute;\n  ${({ position }) =>\n    position === 'BottomRight' || position === 'BottomLeft'\n      ? 'bottom: 0'\n      : 'top: 0'};\n  ${({ position }) =>\n    position === 'BottomLeft' || position === 'TopLeft'\n      ? 'left: 0'\n      : 'right: 0'};\n`\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nconst ScaleOut = keyframes`\n  0% {\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    opacity: 0;\n  }\n`\n\nconst ScaleOutWebkit = keyframes`\n  0% {\n    -webkit-transform: scale(0);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    opacity: 0;\n  }\n`\n\nconst StyledBlockLoader = styled.div`\n  width: 40px;\n  height: 40px;\n  margin: 100px auto;\n  background-color: ${Colors.orange};\n\n  border-radius: 100%;\n  -webkit-animation: ${ScaleOutWebkit} 1s infinite ease-in-out;\n  animation: ${ScaleOut} 1s infinite ease-in-out;\n`\n\nexport const BlockLoader: React.FC = props => {\n  return (\n    <StyledBlockLoader>\n      <div className=\"bounce1\" />\n      <div className=\"bounce2\" />\n      <div className=\"bounce3\" />\n    </StyledBlockLoader>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menutypes'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport function getCategoryTypeLabel(categoryType: TCategoryType) {\n  return i18n._(categories[categoryType])\n}\n\nexport function getRecipeTypeLabel(recipeType: TRecipeType) {\n  return i18n._(recipes[recipeType])\n}\n","import { Search } from '@material-ui/icons'\nimport { useDebounceCallback } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <Sizer width={17}>\n        <FormInputStyled\n          defaultValue={model.filterInput}\n          inputFullWidth={true}\n          onChange={ev => onChange(ev.target.value)}\n          placeholder={i18n.t`Filter by name or code`}\n        />\n      </Sizer>\n    </IconLine>\n  )\n}\n","import { AddCircle } from '@material-ui/icons'\nimport { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.FC<IProps> = ({ routeTo, onClick }) => {\n  const button = (\n    <SizerButton>\n      <TouchButton icon={AddCircle} color={Colors.green} onClick={onClick} />\n    </SizerButton>\n  )\n\n  return (\n    <CreateButtonContainer>\n      {routeTo ? <Link to={routeTo}>{button}</Link> : button}\n    </CreateButtonContainer>\n  )\n}\n","import { AllergenEnum, WarePriceTypeEnum } from '../../graph/generated'\nimport { GMenuRecipeForm, GMenuRecipePrice } from '../../graph/types'\n\nexport {\n  WareCategoryTypeEnum as TCategoryType,\n  WareCategoryTypeEnum as TRecipeType,\n  WarePriceTypeEnum as TPriceType,\n} from '../../graph/generated'\n\nexport type TAssocRecipe = {\n  warePriceType: WarePriceTypeEnum\n  associatedRecipe: ID\n  nameLabel?: string\n  formattedPrice?: string\n}\n\nexport type TIngredient = {\n  stockItem: ID\n  label: string\n  quantity: number | string\n  unitLabel: string\n  allergens: AllergenEnum[]\n}\n\nexport type TPricing = GMenuRecipePrice.Fragment\nexport type TRecipeFormValues = GMenuRecipeForm.Recipe & {\n  associatedRecipes: TAssocRecipe[]\n  ingredients: TIngredient[]\n  prices: {\n    [priceType in WarePriceTypeEnum]: {\n      value: number\n      vatId: MaybeID\n      currencyCode: string\n    }\n  }\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  QMenuCategoryFilterCategories,\n  useQMenuCategoryFilter,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { getCategoryTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\n\ntype TCategory = QMenuCategoryFilterCategories\n\nexport const MenuCategoryFilter = observer(() => {\n  const {\n    settings: {\n      menu: { recipe },\n    },\n  } = useRoot()\n\n  const { data, loading } = useQMenuCategoryFilter({\n    branchId: recipe.branchId,\n  })\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return []\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TRecipeType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        key={recipe.branchId}\n        onChange={value => {\n          recipe.setCategoryFilter(value ? (value as TCategory).id : null)\n        }}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={true}\n        isSearchable={true}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.propOr('', 'nameLabel')}\n      />\n    </Sizer>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { TRecipeType } from '../menutypes'\nimport { CreateButton } from './CreateButton'\n\nexport const RecipeTypeSelection: React.FC = () => {\n  const [isOpen, setOpen] = React.useState(false)\n  const { history } = useRouterContext()\n  const { getRecipeCreateRoute } = useMenuRouting()\n\n  const onSelect = (recipeType: TRecipeType) => () => {\n    history.push(getRecipeCreateRoute(recipeType))\n  }\n\n  return (\n    <>\n      <CreateButton\n        onClick={ev => {\n          ev.preventDefault()\n          setOpen(true)\n        }}\n      />\n      <Dialog open={isOpen} onClose={() => setOpen(false)}>\n        <DialogTitle>Select item type</DialogTitle>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Main)}>\n          <Trans>Ware</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.SideDish)}>\n          <Trans>Sidedish</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Cover)}>\n          <Trans>Cover</Trans>\n        </TouchButton>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport {\n  QMenuRecipeListRecipes,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { TPriceType } from '../menutypes'\n\ntype TRecipe = QMenuRecipeListRecipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.FC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  const { getRecipeEditRoute } = useMenuRouting()\n  return (\n    <DataTable {...props}>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeEditRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n    </DataTable>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuRecipeList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuRecipeList({\n    branchId: settings.branchId,\n    categoryId: settings.menu.recipe.categoryFilterId,\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data || !data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuCategoryFilter } from '../molecules/MenuCategoryFilter'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const StyledFilterWithTableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  & .filter {\n    flex: 0 0 auto;\n  }\n\n  & .table {\n    flex: 1 1 0;\n    min-height: 0;\n  }\n`\n\nexport const MenuRecipeListPage: React.FC = props => (\n  <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true}>\n    <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n      <Card stretchToParent={true}>\n        <StyledFilterWithTableContainer>\n          <div className=\"filter\">\n            <FlexRowSingle justify=\"start\" flexWrap=\"wrap\">\n              <FlexColumn>\n                <SettingsCompanyBranchPicker width={20} />\n              </FlexColumn>\n              <FlexColumn>\n                <MenuFilterInput modelType=\"recipe\" />\n              </FlexColumn>\n              <FlexColumn>\n                <MenuCategoryFilter />\n              </FlexColumn>\n            </FlexRowSingle>\n            <CanMutate mutationName=\"createRecipe\">\n              <RecipeTypeSelection />\n            </CanMutate>\n          </div>\n          <div className=\"table\">\n            <RecipeListLoader />\n          </div>\n        </StyledFilterWithTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </FullPageLayout>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'RemoveCircleOutline');","import { RemoveCircleOutline } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.FC<IProps> = ({ ...props }) => (\n  <SizerButton>\n    <TouchButton icon={RemoveCircleOutline} {...props} />\n  </SizerButton>\n)\n","import { idProp } from '@speedlo/tools'\nimport React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends LegacyOmit<\n    ISelectControlFlatProps<ItemType>,\n    'selectedItems' | 'onMultiSelection' | 'selectedItem' | 'onSingleSelection'\n  > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n}\n\nexport const FormInputFlatSelect = <ItemType extends Record<string, any>>(\n  props: IFormInputSelectProps<ItemType>,\n) => {\n  const {\n    items,\n    field,\n    fieldIsPure = false,\n    isClearable = false,\n    isMulti = false,\n    isRequired = false,\n    validationName = i18n.t`Value`,\n    getItemId = idProp as AnyFunction,\n  } = props\n\n  const validate = value => {\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && (value === null || value === undefined)) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n\n  const getControlProps = (\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> => {\n    const selection = fieldApi.value\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) => selection.includes(getItemId(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n\n  return (\n    <Field field={field} pure={fieldIsPure} validate={validate}>\n      {fieldApi => (\n        <SelectControlFlat<ItemType>\n          {...getControlProps(fieldApi)}\n          isInvalid={Boolean(fieldApi.error)}\n          isClearable={isClearable && !isRequired}\n          {...props}\n        />\n      )}\n    </Field>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const { field, fieldIsPure = false, defaultValue, ...props } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import { Reorder } from '@material-ui/icons'\nimport React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IProps {}\n\nconst StyledDragHandle = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IProps>(() => (\n  <StyledDragHandle>\n    <Icon icon={Reorder} />\n  </StyledDragHandle>\n))\n","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import '@speedlo/assets/Flaticon.css'\n\nimport styled from 'styled-components/macro'\n\nimport { Spacing } from '../styling'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst getFontSize = ({\n  fontSize = 2,\n  fontSizeUnit = Spacing.DefaultSizeUnit,\n}: IProps) => `${fontSize}${fontSizeUnit}`\n\nexport const PictogramDisplay = styled.div.attrs<IProps>(({ pictogramId }) => ({\n  className: getPictogramClassName(pictogramId),\n}))<IProps>`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport function getPictogramClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  List,\n  ListProps,\n  ListRowRenderer,\n  WindowScroller,\n} from 'react-virtualized'\n\ninterface IColumn {\n  size: string\n}\n\ninterface IDataListProps<T> extends Partial<ListProps> {\n  items: ReadonlyArray<T>\n  columns?: IColumn[]\n  renderItem(item: T, index: number): ReactNode\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport function DataList<T>(props: IDataListProps<T>) {\n  const {\n    items,\n    renderItem,\n    heightStretch = false,\n    rowHeight = 60,\n    ...listProps\n  } = props\n\n  const rowRenderer: ListRowRenderer = React.useCallback(\n    ({ key, style, index }) => (\n      <div key={key} style={style}>\n        {renderItem(items[index], index)}\n      </div>\n    ),\n    [renderItem, items],\n  )\n\n  const renderList = (width: number, height: number) => (\n    <List\n      width={width}\n      height={height}\n      headerHeight={50}\n      rowHeight={rowHeight}\n      rowCount={items ? items.length : 0}\n      rowRenderer={rowRenderer}\n      style={{ outline: 'none' }}\n      {...listProps}\n    />\n  )\n\n  return heightStretch ? (\n    <AutoSizer>{({ width, height }) => renderList(width, height)}</AutoSizer>\n  ) : (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderList(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar arrays_1 = require(\"../util/arrays\");\n\nfunction isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\nexports.isApolloError = isApolloError;\n\nvar generateErrorMessage = function generateErrorMessage(err) {\n  var message = '';\n\n  if (arrays_1.isNonEmptyArray(err.graphQLErrors)) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += \"GraphQL error: \" + errorMessage + \"\\n\";\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nvar ApolloError = function (_super) {\n  tslib_1.__extends(ApolloError, _super);\n\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        networkError = _a.networkError,\n        errorMessage = _a.errorMessage,\n        extraInfo = _a.extraInfo;\n\n    var _this = _super.call(this, errorMessage) || this;\n\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      _this.message = generateErrorMessage(_this);\n    } else {\n      _this.message = errorMessage;\n    }\n\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n\n  return ApolloError;\n}(Error);\n\nexports.ApolloError = ApolloError;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction isNonEmptyArray(value) {\n  return Array.isArray(value) && value.length > 0;\n}\n\nexports.isNonEmptyArray = isNonEmptyArray;","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.PureComponent<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  rowRenderer = rowProps => {\n    return <SortableTableRowRenderer {...rowProps} />\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        lockAxis=\"y\"\n        useDragHandle={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={this.rowRenderer}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FMenuCategoryListItemFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\n\ntype TCategory = FMenuCategoryListItemFragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  fullHeight?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.FC<IProps> = ({\n  categories,\n  children,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  fullHeight = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    heightStretch,\n    fullHeight,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  const { getCategoryEditRoute } = useMenuRouting()\n  const columns = [\n    showEditColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canQuery: 'wareCategory' },\n          ColumnRendererEdit,\n        )}\n        cellDataGetter={({ rowData }) =>\n          getCategoryEditRoute(rowData.id, rowData.categoryType.enum)\n        }\n      />\n    ),\n    showRemoveColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererRemove}\n        columnData={{ onRemove }}\n      />\n    ),\n    showVisibilityColumn && (\n      <Column\n        dataKey=\"visible\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canMutate: 'updateWareCategory' },\n          ColumnRendererVisibility,\n        )}\n        columnData={{ onToggle }}\n      />\n    ),\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNoteLabel' }}\n    />,\n    <Column\n      dataKey=\"countRecipes\"\n      label={i18n.t`Recipe count`}\n      width={100}\n      cellRenderer={({ cellData }) =>\n        `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n      }\n    />,\n    children,\n    isSortable && (\n      <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n    ),\n  ]\n\n  if (isSortable) {\n    return React.createElement(\n      SortableDataTable,\n      {\n        onSort: onSort as any,\n        ...props,\n      },\n      ...columns,\n    )\n  }\n\n  return React.createElement(DataTable, props, ...columns)\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Column } from '../../../atoms/DataTable'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderOriginCategoryEnum,\n  useMMenuCategoryVisibility,\n  useQMenuCategoryList,\n  useQMenuCategoryOrigins,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst StyledCategoryList = styled.div`\n  .origins span {\n    display: inline-block;\n    margin: 0.2rem;\n    padding: 0.2rem;\n    background-color: ${Colors.greyLight};\n  }\n`\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery, refetch } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const { data: dataOrigins } = useQMenuCategoryOrigins()\n\n  const originsMap = React.useMemo(() => {\n    if (dataOrigins && dataOrigins.origins) {\n      return dataOrigins.origins.reduce((acc, origin) => {\n        acc[origin.enum] = origin.code\n        return acc\n      }, {}) as Record<OrderOriginCategoryEnum, string>\n    }\n    return {} as Record<OrderOriginCategoryEnum, string>\n  }, [dataOrigins])\n\n  const renderOrigins = React.useCallback(\n    ({ cellData }) => {\n      cellData.sort()\n      return cellData.map(originEnum => (\n        <span key={originEnum}>{originsMap[originEnum]}</span>\n      ))\n    },\n    [originsMap],\n  )\n\n  const { getCategoryCreateRoute } = useMenuRouting()\n\n  const [changeVisibility] = useMMenuCategoryVisibility()\n\n  const categories = loading ? [] : data.categories\n\n  return (\n    <StyledCategoryList>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <CreateButton routeTo={getCategoryCreateRoute(categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories}\n        onToggle={(categoryId: ID, visible: boolean) => {\n          changeVisibility(\n            { categoryId, visible },\n            {\n              optimisticResponse: {\n                updateWareCategory: {\n                  __typename: 'WareCategory',\n                  id: categoryId,\n                  visible,\n                },\n              },\n            },\n          )\n        }}\n        isSortable={true}\n        showHeader={false}\n        fullHeight={true}\n        showVisibilityColumn={true}\n        onSort={async ({ item, items, offset }) => {\n          updateQuery(() => ({\n            categories: items,\n          }))\n          const result = await settings.menu.category.sortCategory(\n            item.id,\n            offset,\n          )\n          if (result) {\n            await refetch()\n          }\n          return result\n        }}\n      >\n        <Column\n          dataKey=\"origins\"\n          width={300}\n          className=\"origins\"\n          cellRenderer={renderOrigins}\n          style={{ fontSize: '0.8rem' }}\n        />\n      </CategoryListTable>\n    </StyledCategoryList>\n  )\n}\n\nexport default observer(CategoryList)\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuGuideDownload } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nconst MenuGuideDownloadButton = styled(TouchButton)`\n  white-space: nowrap;\n  margin-left: 2rem;\n  & a {\n    text-decoration: none;\n    color: ${Colors.black};\n    padding: 1rem;\n  }\n`\n\nexport const MenuGuideDownload = observer(() => {\n  const { settings } = useRoot()\n  const { loading, data } = useQMenuGuideDownload({\n    branchId: settings.branchId,\n  })\n  if (\n    loading ||\n    !(data && data.companyBranch && data.companyBranch.foodMenuUrl)\n  ) {\n    return null\n  }\n  return (\n    <MenuGuideDownloadButton color={Colors.greyMiddle}>\n      <a\n        href={data.companyBranch.foodMenuUrl}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Trans>Menu codes manual</Trans>\n      </a>\n    </MenuGuideDownloadButton>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport CategoryList from '../organisms/CategoryList'\nimport { MenuGuideDownload } from '../organisms/MenuGuideDownload'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Category overview`} useBackButton={true}>\n    <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuGuideDownload />\n          </FlexColumn>\n        </FlexRowSingle>\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </FullPageLayout>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0;\n  top: 0rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.FC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.FC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { TSettingsModel } from '../models/SettingsModel'\n\ninterface IProps {\n  render(settings: TSettingsModel): ReactNode\n  observe?: boolean\n}\n\nexport const WithSettings: React.FC<IProps> = ({ observe, render }) => (\n  <WithRoot observe={observe} render={({ settings }) => render(settings)} />\n)\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.FC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value) {\n            fieldApi.setValue((value as IFormValue).pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router-dom'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.FC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.FC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import { Label } from '@material-ui/icons'\nimport React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {}\n\nexport const FormInputName: React.FC<IProps> = ({\n  field = 'nameLabel',\n  ...props\n}) => (\n  <IconLine icon={Label} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputFullWidth={true}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import { RM } from '@speedlo/tools'\nimport React from 'react'\n\nimport { FormInputSelect } from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  QMenuCategoryOriginsOrigins,\n  useQMenuCategoryOrigins,\n} from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\nexport const MenuCategoryOrigins: React.FC = () => {\n  const { data, loading } = useQMenuCategoryOrigins()\n  return (\n    <IconLine label={i18n.t`cat. origins`} labelWidth={7}>\n      <FormInputSelect<QMenuCategoryOriginsOrigins>\n        field=\"origins\"\n        isMulti={true}\n        isLoading={loading}\n        isSearchable={true}\n        options={loading ? [] : (data.origins as any)}\n        getOptionLabel={RM.prop('code')}\n        getOptionValue={RM.prop('enum')}\n      />\n    </IconLine>\n  )\n}\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { MenuCategoryOrigins } from '../molecules/MenuCategoryOrigins'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.FC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <Sizer width={30}>\n        <FormInputName\n          placeholder={i18n.t`Category name`}\n          inputFullWidth={true}\n        />\n      </Sizer>\n      <Sizer width={30}>\n        <FormInputInternalNote placeholder={i18n.t`Category internal note`} />\n      </Sizer>\n      <Sizer width={30}>\n        <MenuCategoryOrigins />\n      </Sizer>\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <CardDock position=\"BottomRight\">\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </CardDock>\n  </FormContainer>\n)\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(() => {\n    if (!shouldLoad) {\n      return\n    }\n    loader().then(setValues)\n  }, [loader, shouldLoad])\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.FC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              const defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import React from 'react'\n\nimport {\n  OrderOriginCategoryEnum,\n  QMenuCategoryDocument,\n  QMenuCategoryQuery,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TCategoryFormValues } from '../models/MenuCategoryModel'\n\ninterface IProps {\n  isCreate: boolean\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport const CategoryFormLoader: React.FC<IProps> = ({\n  isCreate,\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={isCreate}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<QMenuCategoryQuery>({\n          query: QMenuCategoryDocument,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          ...data.category,\n          origins: data.category.origins as OrderOriginCategoryEnum[],\n        }\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    minCount: 0,\n    maxCount: 0,\n    categoryType: { enum: categoryType },\n    recipes: [],\n    origins: [],\n  }\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), React.createElement(\"path\", {\n  d: \"M3 12c0-2.61 1.67-4.83 4-5.65V4.26C3.55 5.15 1 8.27 1 12s2.55 6.85 6 7.74v-2.09c-2.33-.82-4-3.04-4-5.65z\"\n})), 'Toll');","import { Toll } from '@material-ui/icons'\nimport React from 'react'\nimport { isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { validateNumber } from '../../../locale/numeral'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {}\n\nconst formInputPriceValidate = (value: string) => {\n  if (\n    value === undefined ||\n    isEmpty(value + '') ||\n    !validateNumber(value + '')\n  ) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.FC<IProps> = ({\n  field = 'price.value',\n  ...props\n}) => (\n  <IconLine icon={Toll}>\n    <Sizer width={5}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        validate={formInputPriceValidate}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import { css } from 'emotion'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.FC<IProps> = ({\n  field = 'price.vat',\n}) => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QueryVat\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderLoading={false}\n      render={({ vats }) => (\n        <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n          {vats && (\n            <FormInputFlatSelect\n              field={field}\n              items={vats}\n              formatItem={({ vat }) => `${vat}%`}\n              isRequired={true}\n              validationName={i18n.t`VAT`}\n            />\n          )}\n        </IconLine>\n      )}\n    />\n  ))\n}\n","import React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormDisplayField } from '../../../atoms/FormDisplayField'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nconst FormPricingCurrencyCode = styled(FormDisplayField)`\n  padding: 0.5rem;\n`\n\nexport const FormPricingField: React.FC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormPricingCurrencyCode field=\"currencyCode\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\ninterface IProps {\n  field: FieldType\n  className?: string\n  children?: never\n}\n\nexport const FormDisplayField: React.FC<IProps> = ({ field, className }) => {\n  return (\n    <Field field={field}>\n      {fieldApi => <span className={className}>{fieldApi.value}</span>}\n    </Field>\n  )\n}\n","import { useStateRef } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: Maybe<string> }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(() => {\n    const selected = getSelected()\n    if (selected !== null) {\n      onAdd(selected)\n      setSelected(null)\n    }\n  }, [getSelected, onAdd, setSelected])\n\n  const onKeyDown = useCallback(\n    (ev: React.KeyboardEvent<HTMLElement>) => {\n      if (ev.key === 'Enter') {\n        onConfirm()\n      }\n    },\n    [onConfirm],\n  )\n\n  const onSelect = useCallback(\n    option => {\n      setSelected(option || null)\n    },\n    [setSelected],\n  )\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.propOr('', 'nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.FC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.FC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel!,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                variables={{\n                  branchId: settings.branchId,\n                }}\n                fetchPolicy=\"cache-and-network\"\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.FC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useQMenuRecipeList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel = observer<IProps>(\n  ({ categoryType, filterRecipes, onAdd }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuRecipeList({\n      branchId: settings.branchId,\n      categoryType,\n    })\n    return (\n      <MenuSuggestionPanel<TRecipe>\n        isLoading={loading}\n        options={loading ? [] : filterRecipes(data.recipes)}\n        onAdd={onAdd}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { DataList } from '../../../atoms/DataList'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { priceTypes } from './RecipeFormPricing'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n`\n\nconst FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\n\nconst FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  margin: 1rem 0 0 1rem;\n`\n\nconst SortableRecipes = SortableContainer(FormStretchedRow)\n\nconst RecipeRow = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: ${Spacing.ButtonColumnWidthPx}px 100px 3fr 1fr 1fr 50px;\n`\n\nconst MoveCell = styled.div`\n  cursor: move;\n`\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IRecipeRow {\n  recipe: TRecipe\n  onRemove(): void\n}\n\nconst SortableRecipe = SortableElement<IRecipeRow>(({ recipe, onRemove }) => {\n  const prices = priceTypes.map(({ priceType, label }) => {\n    const foundPrice = recipe.prices.find(\n      RM.pathEq(['priceType', 'enum'], priceType),\n    )\n    return (\n      <MoveCell key={priceType}>\n        <NoteText>{i18n._(label)}</NoteText>\n        {foundPrice ? (\n          foundPrice.price.formattedValue\n        ) : (\n          <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n        )}\n      </MoveCell>\n    )\n  })\n\n  return (\n    <RecipeRow>\n      <div>\n        <TouchButtonRemove onClick={onRemove} />\n      </div>\n      <MoveCell>{recipe.code}</MoveCell>\n      <MoveCell>\n        {recipe.nameLabel}\n        <NoteText>{recipe.internalNote}</NoteText>\n      </MoveCell>\n      {prices}\n      <DragHandle />\n    </RecipeRow>\n  )\n})\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<TRecipe>>) => {\n        const recipes = fieldApi.value\n        const onHandleSorting: SortEndHandler = async ({\n          newIndex,\n          oldIndex,\n        }) => {\n          if (newIndex === oldIndex) {\n            return\n          }\n          const sortedItems = arrayMove(\n            recipes as TRecipe[],\n            oldIndex,\n            newIndex,\n          )\n\n          fieldApi.setValue(sortedItems)\n        }\n        return (\n          <Container>\n            <FormFixedRow>\n              <RecipeSuggestionPanel\n                categoryType={categoryType}\n                filterRecipes={RM.without(fieldApi.value)}\n                onAdd={addedRecipe =>\n                  fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n                }\n              />\n            </FormFixedRow>\n            <SortableRecipes\n              lockAxis=\"y\"\n              lockToContainerEdges={true}\n              onSortEnd={onHandleSorting}\n            >\n              <DataList\n                items={fieldApi.value}\n                heightStretch={true}\n                rowHeight={60}\n                renderItem={(recipe, index) => (\n                  <SortableRecipe\n                    recipe={recipe}\n                    onRemove={() => {\n                      fieldApi.setValue(\n                        RM.reject(RM.propEq('id', recipe.id), fieldApi.value),\n                      )\n                    }}\n                    index={index}\n                  />\n                )}\n                rowCount={fieldApi.value.length}\n              />\n            </SortableRecipes>\n          </Container>\n        )\n      }}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { StyledCheckbox } from '../../../atoms/StyledCheckbox'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  id: string\n  count: number\n  label: ReactNode | string\n  enabled: boolean\n  onChange(count: number): void\n}\n\nconst StyledCategoryRequirementControl = styled.div`\n  display: flex;\n  align-items: center;\n  & > label {\n    min-width: 5rem;\n  }\n  & > * {\n    margin: 0.2rem 0.5rem;\n  }\n  input.count {\n    font-size: 1.5rem;\n    line-height: 1.5rem;\n    text-align: center;\n  }\n`\n\nexport const CategoryRequirementControl: React.FC<IProps> = ({\n  count,\n  label,\n  enabled,\n  onChange,\n  id,\n}) => {\n  const countRef = React.useRef(count)\n  return (\n    <StyledCategoryRequirementControl>\n      <label htmlFor={id}>{label}</label>\n      <Sizer width={3}>\n        <FormInputStyled\n          id={id}\n          value={count === 0 ? '' : count}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              onChange(Number.parseInt(ev.target.value, 10))\n            }\n          }}\n          onFocus={ev => {\n            ev.target.select()\n          }}\n          disabled={count === 0 || !enabled}\n          inputFullWidth={true}\n          type=\"tel\"\n          pattern=\"^[1-9]\\d*$\"\n          className=\"count\"\n        />\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton\n          disabled={!enabled || count <= 0}\n          onClick={() => onChange(count - 1)}\n        >\n          ➖\n        </TouchButton>\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton disabled={!enabled} onClick={() => onChange(count + 1)}>\n          ➕\n        </TouchButton>\n      </Sizer>\n      <div>\n        <StyledCheckbox>\n          <input\n            type=\"checkbox\"\n            id={`${id}-nolimit`}\n            checked={count === 0}\n            disabled={!enabled}\n            onChange={ev => {\n              if (count === 0) {\n                onChange(countRef.current || 1)\n              } else {\n                countRef.current = count\n                onChange(0)\n              }\n            }}\n          />\n          <label htmlFor={`${id}-nolimit`}>\n            <Trans>Unlimited</Trans>\n          </label>\n        </StyledCheckbox>\n      </div>\n    </StyledCategoryRequirementControl>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport _ from 'lodash'\nimport React from 'react'\nimport { IFormApi, IFormState } from 'react-form'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { CategoryRequirementControl } from '../molecules/CategoryRequirementControl'\n\ninterface IRequirement {\n  label: string\n  min?: number\n  max?: number\n}\n\nexport const getRulesMap = (): Record<string, IRequirement> => ({\n  noLimit: {\n    label: i18n.t`No limitation`,\n    min: 0,\n    max: 0,\n  },\n  optional: {\n    label: i18n.t`One at most`,\n    min: 0,\n    max: 1,\n  },\n  required: {\n    label: i18n.t`One at least`,\n    min: 1,\n    max: 0,\n  },\n  onlyOne: {\n    label: i18n.t`Exactly one`,\n    min: 1,\n    max: 1,\n  },\n  custom: {\n    label: i18n.t`Custom range`,\n  },\n})\n\ntype TRule = keyof ReturnType<typeof getRulesMap>\n\nexport const CategoryRequirementsForm: React.FC<{\n  formApi: IFormApi & IFormState\n}> = ({ formApi }) => {\n  const ruleMap = React.useMemo(getRulesMap, [])\n  const [currentRule, setRule] = React.useState<TRule>('noLimit')\n\n  const minCount = formApi.getValue('minCount')\n  const maxCount = formApi.getValue('maxCount')\n\n  React.useEffect(() => {\n    if (currentRule !== 'custom') {\n      const found = _.findKey(\n        ruleMap,\n        ({ min, max }) => min === minCount && max === maxCount,\n      )\n      if (found) {\n        setRule(found)\n      }\n    }\n  }, [currentRule, minCount, maxCount, ruleMap])\n\n  const setMinCount = (count: number) => formApi.setValue('minCount', count)\n  const setMaxCount = (count: number) => formApi.setValue('maxCount', count)\n\n  return (\n    <>\n      <SelectControlFlat<TRule>\n        items={Object.keys(ruleMap) as ReadonlyArray<TRule>}\n        formatItem={req => ruleMap[req].label}\n        onSingleSelection={selectedRule => {\n          if (selectedRule) {\n            setRule(selectedRule)\n            const rule = ruleMap[selectedRule]\n            setMinCount(rule.min || 0)\n            setMaxCount(rule.max || 0)\n          }\n        }}\n        selectedItem={currentRule}\n      />\n      <CategoryRequirementControl\n        id=\"minCount\"\n        count={minCount}\n        label={<Trans>Minimum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMinCount}\n      />\n      <CategoryRequirementControl\n        id=\"maxCount\"\n        count={maxCount}\n        label={<Trans>Maximum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMaxCount}\n      />\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FormApi } from 'react-form'\nimport { Redirect, RouteComponentProps } from 'react-router'\nimport styled from 'styled-components/macro'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { getCategoryTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\nimport { CategoryRequirementsForm } from '../organisms/CategoryRequirementsForm'\n\ninterface IProps extends RouteComponentProps<{ categoryId: ID }> {}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.FC<IProps> = ({ match }) => {\n  const { categoryId } = match.params\n  const {\n    isCreate,\n    itemType: categoryType,\n    getCategoryListRoute,\n  } = useMenuRouting(categoryId)\n\n  if (categoryType === null) {\n    return <Redirect to={getCategoryListRoute()} />\n  }\n\n  return (\n    <CategoryFormLoader\n      isCreate={isCreate}\n      categoryId={categoryId}\n      categoryType={categoryType}\n    >\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n          <FormContainer>\n            <FormFixedRow>\n              <Card>\n                <CategoryBasicForm categoryType={categoryType} />\n              </Card>\n            </FormFixedRow>\n            <IsCategoryType isSideDish={true} type={categoryType}>\n              <FormFixedRow>\n                <Card>\n                  <Headline>\n                    <Trans>Required amounts of recipes to be picked</Trans>\n                  </Headline>\n                  <FormApi component={CategoryRequirementsForm} />\n                </Card>\n              </FormFixedRow>\n            </IsCategoryType>\n            <FormStretchedRow>\n              <Card stretchToParent={true}>\n                <Headline>\n                  <Trans>Recipes assigned to this category</Trans>\n                </Headline>\n                <CategoryRecipesView categoryType={categoryType} />\n              </Card>\n            </FormStretchedRow>\n          </FormContainer>\n        </PageLayoutFullHeightItem>\n\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n            }\n          >\n            <SubmitButton isCreate={categoryId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n      </FullPageLayout>\n    </CategoryFormLoader>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FMenuCategoryListItemFragment,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nconst CategorySuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <MenuSuggestionPanel<TCategory>\n      isLoading={loading}\n      options={RM.without(currentCategories, categories)}\n      addButtonText={addButtonText}\n      onAdd={onAdd}\n    />\n  )\n}\n\nexport default observer(CategorySuggestionPanel)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport {\n  FMenuCategoryListItemFragment,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport CategorySuggestionPanel from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nexport const RecipeCategoryView: React.FC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<TCategory[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n})), 'ErrorOutline');","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.FC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        isRequired={true}\n        validatioName={i18n.t`Code`}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.FC<IProps> = ({\n  field = 'descriptionLabel',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { FMenuAllergenFragmentDoc } from '../../../graph/generated'\nimport { GAllergens } from '../../../graph/types'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...FMenuAllergen\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/generated'\nimport { Colors, Spacing } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.FC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import _ from 'lodash'\nimport React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nexport const RecipeAllergenDisplay: React.FC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = _.uniq(_.flatten(value.map(RM.prop('allergens'))))\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import { ErrorOutline } from '@material-ui/icons'\nimport React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.FC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon={ErrorOutline}>\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <CardDock position=\"BottomRight\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </CardDock>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  isCreate: boolean\n  recipeId: ID\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.FC<IProps> = ({\n  isCreate,\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={isCreate}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const { vats, currencyCode } = await menu.recipe.queryDefaults()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: vats[priceType],\n          currencyCode,\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel!,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.FC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInputTextBox\n            field={['ingredients', rowIndex, 'quantity']}\n            validate={validateQuantity}\n            inputFullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onAdd(ingredient: TIngredient): void\n  onRemove(stockItemId: ID): void\n}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsControl = observer<IProps>(\n  ({ ingredients, onAdd, onRemove }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuStockList({\n      branchId: settings.branchId,\n    })\n\n    return (\n      <>\n        <RecipeIngredientsTable ingredients={ingredients} onRemove={onRemove} />\n        <MenuSuggestionPanel<GMenuStockItem.Fragment>\n          isLoading={loading}\n          addButtonText={i18n.t`Add ingredient`}\n          options={\n            loading ? [] : unselectedStockOnly(data.stockItems, ingredients)\n          }\n          onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n            onAdd({\n              stockItem: addedStockItem.id,\n              label: addedStockItem.nameLabel,\n              quantity: 1,\n              unitLabel: addedStockItem.wareUnit.code,\n              allergens: addedStockItem.allergens.map(RM.prop('enum')),\n            })\n          }}\n        />\n      </>\n    )\n  },\n)\n\nexport const RecipeIngredientsView = () => {\n  return (\n    <Field field=\"ingredients\">\n      {(fieldApi: IFieldApi<TIngredient[]>) => (\n        <RecipeIngredientsControl\n          ingredients={fieldApi.value}\n          onAdd={ingredient => {\n            fieldApi.setValue([...fieldApi.value, ingredient])\n          }}\n          onRemove={stockItemId => {\n            fieldApi.setValue(\n              RM.reject(RM.propEq('stockItem', stockItemId), fieldApi.value),\n            )\n          }}\n        />\n      )}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { getRecipeTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps extends RouteComponentProps<{ recipeId: ID }> {}\n\nexport const MenuRecipePage: React.FC<IProps> = ({ match }) => {\n  const { recipeId } = match.params\n  const { isCreate, itemType: recipeType, getRecipeListRoute } = useMenuRouting(\n    recipeId,\n  )\n\n  if (recipeType === null) {\n    return <Redirect to={getRecipeListRoute()} />\n  }\n\n  return (\n    <RecipeFormLoader\n      isCreate={isCreate}\n      recipeId={recipeId}\n      recipeType={recipeType}\n    >\n      <MarginBox margin=\"0 1.25rem 4rem 0\">\n        <FullPageLayout\n          pageTitle={getRecipeTypeLabel(recipeType)}\n          hideLogoutWidget={true}\n          useBackButton={true}\n        >\n          <Card>\n            <RecipeFormBasic recipeType={recipeType} />\n          </Card>\n          <Card>\n            <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Recipe ingredients</Trans>\n            </Headline>\n            <VerticalGap />\n            <RecipeIngredientsView />\n          </Card>\n          <IsCategoryType type={recipeType} isMain={true}>\n            <Card>\n              <Headline>\n                <Trans>Sidedish categories</Trans>\n              </Headline>\n              <NoteText>\n                <Trans>These sidedish are presented with recipe</Trans>\n              </NoteText>\n              <RecipeCategoryView\n                categoryType={TRecipeType.SideDish}\n                field=\"sideDishes\"\n                addButtonText={i18n.t`Attach sidedish category`}\n                noRowsText={i18n.t`Recipe has no sidedish category attached`}\n              />\n            </Card>\n            <Card>\n              <Headline>\n                <Trans>Category assignments</Trans>\n              </Headline>\n              <NoteText>\n                <Trans>Recipe is in these categories</Trans>\n              </NoteText>\n              <RecipeCategoryView\n                categoryType={TRecipeType.Main}\n                field=\"categories\"\n                addButtonText={i18n.t`Add to category`}\n                noRowsText={i18n.t`Recipe is not in any category`}\n              />\n            </Card>\n          </IsCategoryType>\n        </FullPageLayout>\n\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n          >\n            <SubmitButton isCreate={recipeId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n      </MarginBox>\n    </RecipeFormLoader>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { FMenuWareUnitFragment } from '../../../graph/generated'\nimport { priceFormat } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<FMenuWareUnitFragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.FC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format(priceFormat)} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');","import { Done } from '@material-ui/icons'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { QMenuStockDepositStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: QMenuStockDepositStockItems[]\n  onSelect(stockItem: QMenuStockDepositStockItems): void\n}\n\nexport const StockDepositResultTable: React.FC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTable items={stockItems} heightStretch={false}>\n    <Column\n      dataKey=\"id\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererSelect}\n      columnData={{ onSelect }}\n    />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"code\"\n      width={100}\n      label={i18n.t`Card code`}\n      cellRenderer={highlightMatch(searchValue)}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Card name`}\n      cellRenderer={highlightMatch(searchValue)}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <SizerButton>\n      <TouchButton icon={Done} onClick={() => onSelect(rowData)} />\n    </SizerButton>\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  componentDidUpdate(prevProps: IProps) {\n    if (prevProps.stockItems !== this.props.stockItems) {\n      this.onFilter(this.state.searchValue)\n    }\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { observer } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QMenuStockDepositStockItems,\n  useMMenuStockQuantity,\n  useQMenuStockDeposit,\n} from '../../../graph/generated'\n\nexport type TStockItem = QMenuStockDepositStockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader = observer<IProps>(({ children }) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockDeposit({\n    branchId: settings.branchId,\n  })\n  const [changeQuantity] = useMMenuStockQuantity()\n  const onDeposit: TDepositFn = (stockItem, quantity) => {\n    changeQuantity({\n      stockItem: stockItem.id,\n      quantityChange: quantity,\n    })\n  }\n  return children(loading ? [] : data.stockItems, onDeposit)\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.FC<IProps> = props => (\n  <FullPageLayout pageTitle={i18n.t`Stock deposit`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\n\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { StyledCheckbox } from '../../../atoms/StyledCheckbox'\n\ninterface IProps {\n  checked: boolean\n  onChange: () => void\n  sideText?: string | ReactNode\n}\n\nexport const ImportCheckbox: React.FC<IProps> = ({ sideText, ...props }) => (\n  <>\n    <MarginBox margin=\"0 10px 0 0\">\n      <StyledCheckbox>\n        <input type=\"checkbox\" {...props} />\n      </StyledCheckbox>\n    </MarginBox>\n    {sideText}\n  </>\n)\n","import { useMenu } from './useMenu'\n\nexport function useTransferModel() {\n  const {\n    stock: { transfer },\n  } = useMenu()\n  return transfer\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { i18n } from '../../../i18n'\nimport { numberRx } from '../../../locale/numeral'\nimport { useTransferModel } from '../hooks/useTransferModel'\n\ninterface IProps {\n  stockItemId: ID\n}\n\nexport const StockTransferAmountInput = observer<IProps>(({ stockItemId }) => {\n  const transfer = useTransferModel()\n\n  const inputRef = React.useRef<HTMLInputElement | null>(null)\n\n  const onChange = React.useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = ev.target\n      transfer.setQuantity(stockItemId, Number(value.replace(',', '.')))\n    },\n    [stockItemId, transfer],\n  )\n\n  const onFocus = React.useCallback(() => {\n    if (inputRef.current) {\n      inputRef.current.select()\n    }\n  }, [])\n\n  const value = transfer.getItemTransferQuantity(stockItemId)\n\n  return (\n    <FormInputStyled\n      type=\"text\"\n      inputFullWidth={true}\n      value={value === null ? '' : value}\n      disabled={transfer.targetId === null}\n      onChange={onChange}\n      onFocus={onFocus}\n      placeholder={i18n.t`to transfer`}\n      pattern={numberRx.source}\n      invalid={transfer.hasInvalidAmount(stockItemId)}\n    />\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { RM } from '@speedlo/tools'\nimport { Observer, observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { QMenuStockListStockItems } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { ImportCheckbox } from '../atoms/ImportCheckbox'\nimport { useMenu } from '../hooks/useMenu'\nimport { useTransferModel } from '../hooks/useTransferModel'\nimport { StockTransferAmountInput } from '../molecules/StockTransferAmountInput'\n\ntype TStockItem = QMenuStockListStockItems\n\ninterface IProps {\n  stockItems: RoA<TStockItem>\n  isLoading: boolean\n  isTransferTable: boolean\n}\n\nconst ANIMATION_DURATION = '0.3s'\nconst ANIMATED_COLUMN_WIDTH = 130\n\nconst StyledDataTable = styled(DataTable)`\n  [aria-label='grid']:focus {\n    outline: none;\n  }\n\n  [role='columnheader'] {\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n  }\n\n  .flex-animation,\n  [role='columnheader'] {\n    transition: flex ${ANIMATION_DURATION};\n  }\n`\n\nconst VerticallyCenteredFlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const StockListTable: React.FC<IProps> = observer(\n  ({ stockItems, isLoading, isTransferTable }) => {\n    const { stock } = useMenu()\n    const transfer = useTransferModel()\n\n    const getItemMaxLimit = ({ quantity, allowNegative }: TStockItem) => {\n      if (allowNegative) {\n        return Number.MAX_SAFE_INTEGER\n      } else {\n        return Math.max(quantity, 0)\n      }\n    }\n\n    React.useEffect(() => {\n      if (isTransferTable) {\n        const unfilteredItems = stockItems.map(item => {\n          const max = getItemMaxLimit(item)\n          return { id: item.id, max }\n        })\n\n        transfer.initItems(unfilteredItems)\n      }\n    }, [isTransferTable, stockItems, transfer])\n\n    const searchValue = stock.filterInput\n    const partialMatch = isPartialMatch(searchValue)\n    const filterItems = RM.cond([\n      [RM.propEq('plu', searchValue), RM.T],\n      [RM.propSatisfies(partialMatch, 'code'), RM.T],\n      [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n    ])\n\n    const renderImportItemCheckbox = React.useCallback(\n      ({ cellData: itemId }: TableCellProps) => (\n        <Observer>\n          {() => (\n            <ImportCheckbox\n              checked={transfer.isImportingItem(itemId)}\n              onChange={() => transfer.toggleImportItem(itemId)}\n            />\n          )}\n        </Observer>\n      ),\n      [transfer],\n    )\n\n    const renderImportAllHeader = React.useCallback(\n      () => (\n        <Observer>\n          {() => (\n            <ImportCheckbox\n              checked={transfer.isImportingAll}\n              onChange={transfer.toggleImportAll}\n              sideText={<Trans>Import</Trans>}\n            />\n          )}\n        </Observer>\n      ),\n      [transfer],\n    )\n\n    const renderAmountInput = React.useCallback(\n      ({ cellData }: TableCellProps) => {\n        const itemId = cellData as ID\n        return (\n          <Observer>\n            {() => (\n              <VerticallyCenteredFlexContainer>\n                <Sizer width={5.5} margin=\"0 0.5rem 0 0\">\n                  <StockTransferAmountInput stockItemId={itemId} />\n                </Sizer>\n              </VerticallyCenteredFlexContainer>\n            )}\n          </Observer>\n        )\n      },\n      [],\n    )\n\n    const quantityColumn = (\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n    )\n\n    return (\n      <StyledDataTable\n        items={stockItems.filter(filterItems)}\n        heightStretch={true}\n        noRowsRenderer={() =>\n          isLoading ? (\n            <Loading />\n          ) : (\n            <h3>\n              <Trans>Selected branch has no stock cards</Trans>\n            </h3>\n          )\n        }\n      >\n        {isTransferTable && (\n          <Column\n            dataKey=\"id\"\n            width={transfer.isImportMode ? ANIMATED_COLUMN_WIDTH : 0}\n            label={i18n.t`Import`}\n            headerRenderer={renderImportAllHeader}\n            cellRenderer={renderImportItemCheckbox}\n            className=\"flex-animation\"\n          />\n        )}\n        {isTransferTable && (\n          <Column\n            dataKey=\"id\"\n            width={transfer.isTransferMode ? ANIMATED_COLUMN_WIDTH : 0}\n            label={i18n.t`Amount`}\n            cellRenderer={renderAmountInput}\n            className=\"flex-animation\"\n          />\n        )}\n        {!isTransferTable && (\n          <Column\n            dataKey=\"id\"\n            width={Spacing.ButtonColumnWidthPx}\n            minWidth={Spacing.ButtonColumnWidthPx}\n            cellRenderer={checkColumnAccess(\n              { canQuery: 'stockItem' },\n              ColumnRendererEdit,\n            )}\n          />\n        )}\n        {isTransferTable && quantityColumn}\n        <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n        <Column\n          dataKey=\"nameLabel\"\n          width={300}\n          minWidth={30}\n          flexGrow={2}\n          label={i18n.t`Card name`}\n        />\n        {!isTransferTable && quantityColumn}\n        <Column\n          dataKey=\"allowNegative\"\n          width={300}\n          label={i18n.t`Negative stock`}\n          cellRenderer={stockAllowNegative}\n        />\n        {isTransferTable ? null : (\n          <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n        )}\n      </StyledDataTable>\n    )\n  },\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { StockListTable } from './StockListTable'\n\ninterface IProps {\n  isTransferring?: boolean\n}\n\nexport const StockListLoader = observer<IProps>(\n  ({ isTransferring = false }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuStockList({\n      branchId: settings.branchId,\n    })\n\n    const stockItems =\n      !data || !data.stockItems || data.stockItems.length === 0\n        ? []\n        : data.stockItems\n\n    return (\n      <StockListTable\n        stockItems={stockItems}\n        isLoading={loading}\n        isTransferTable={isTransferring}\n      />\n    )\n  },\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\nimport { StyledFilterWithTableContainer } from './MenuRecipeListPage'\n\nexport const MenuStockListPage: React.FC = () => {\n  const { getStockCreateRoute } = useMenuRouting()\n  return (\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true}>\n      <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n        <Card stretchToParent={true}>\n          <StyledFilterWithTableContainer>\n            <div className=\"filter\">\n              <FlexRowSingle justify=\"start\" flexWrap=\"wrap\">\n                <FlexColumn>\n                  <SettingsCompanyBranchPicker width={20} />\n                </FlexColumn>\n                <FlexColumn>\n                  <MenuFilterInput modelType=\"stock\" />\n                </FlexColumn>\n              </FlexRowSingle>\n              <CanMutate mutationName=\"createStockItem\">\n                <CreateButton routeTo={getStockCreateRoute()} />\n              </CanMutate>\n            </div>\n            <div className=\"table\">\n              <StockListLoader />\n            </div>\n          </StyledFilterWithTableContainer>\n        </Card>\n      </PageLayoutFullHeightItem>\n    </FullPageLayout>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FMenuAllergenFragmentDoc,\n  FMenuWareUnitFragmentDoc,\n} from '../../../graph/generated'\nimport { GMenuStockForm } from '../../../graph/types'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...FMenuWareUnit\n      }\n      allergens {\n        ...FMenuAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n  ${FMenuWareUnitFragmentDoc}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  WareUnitEnum,\n} from '../../../graph/generated'\nimport { GMenuStockDefaults, GMenuStockForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  isCreate: boolean\n  stockId: ID\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.FC<IProps> = ({\n  isCreate,\n  stockId,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={isCreate}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import { ErrorOutline } from '@material-ui/icons'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n}\n\nexport const FormInputAllergens: React.FC<IProps> = ({\n  field = 'allergens',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={ErrorOutline} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.FC<IProps> = () => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z\"\n}), 'Fingerprint');","import { Fingerprint } from '@material-ui/icons'\nimport React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {}\n\nexport const FormInputPlu: React.FC<IProps> = ({ field = 'plu', ...props }) => (\n  <IconLine icon={Fingerprint} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z\"\n}), 'SelectAll');","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import { SelectAll } from '@material-ui/icons'\nimport React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {}\n\nexport const FormInputWareUnit: React.FC<IProps> = ({\n  field = 'wareUnit',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={SelectAll} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.FC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <CardDock position=\"BottomRight\">\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </CardDock>\n  </FormContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { BlockLoader } from '../../../atoms/BlockLoader'\nimport { Column, ColumnRendererEdit, DataTable } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { useQStockRecipes } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  stockId: ID\n}\n\nexport const StockRecipesView: React.FC<IProps> = ({ stockId }) => {\n  const { data, loading } = useQStockRecipes({\n    stockId,\n  })\n\n  if (loading) {\n    return <BlockLoader />\n  }\n\n  const {\n    stockItem: { ingredients },\n  } = data\n  if (ingredients.length === 0) {\n    return (\n      <Headline>\n        <Trans>No recipes are using stock card</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      <Headline>\n        <Trans>Recipes using this card</Trans>\n      </Headline>\n\n      <DataTable\n        items={[...ingredients]}\n        disableHeader={true}\n        fullHeight={true}\n      >\n        <Column\n          dataKey=\"\"\n          cellDataGetter={({ rowData }) => ({\n            pathname: `/settings/menu/recipe/${rowData.recipe.id}`,\n            state: { recipeType: rowData.recipe.recipeType.enum },\n          })}\n          cellRenderer={ColumnRendererEdit}\n          width={100}\n        />\n        <Column\n          dataKey=\"recipe\"\n          width={300}\n          label={i18n.t`Name`}\n          cellRenderer={({ rowData }) => (\n            <>\n              {rowData.recipe.nameLabel}\n              <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n            </>\n          )}\n        />\n      </DataTable>\n    </>\n  )\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps extends RouteComponentProps<{ stockId: ID }> {}\n\nexport const MenuStockPage: React.FC<IProps> = ({ match }) => {\n  const { stockId } = match.params\n  const { isCreate } = useMenuRouting(stockId)\n\n  return (\n    <FullPageLayout\n      pageTitle={i18n.t`Stock card`}\n      hideLogoutWidget={true}\n      useBackButton={true}\n    >\n      <StockFormLoader isCreate={isCreate} stockId={stockId}>\n        <>\n          <TopRightButtonContainer>\n            <CanMutate\n              mutationName={isCreate ? 'createStockItem' : 'updateStockItem'}\n            >\n              <SubmitButton isCreate={isCreate} />\n            </CanMutate>\n          </TopRightButtonContainer>\n          <Card>\n            <StockFormMain />\n            {!isCreate && (\n              <CanQuery queryName=\"recipes\">\n                <StockRecipesView stockId={stockId} />\n              </CanQuery>\n            )}\n          </Card>\n        </>\n      </StockFormLoader>\n    </FullPageLayout>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../../app/Responsive'\nimport { useMCreateTransfers } from '../../../graph/generated'\nimport { useCanMutate } from '../../../hooks/useAccessGuard'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { useTransferModel } from '../hooks/useTransferModel'\n\nconst StyledConfirmTransferButton = styled.div`\n  flex: 0 0 auto;\n  ${mediaDesktop`\n    margin-left: 3rem;\n    width: 16rem;\n  `};\n  @media (max-width: 760px) {\n    width: unset;\n    margin-left: ${Spacing.Middle};\n  }\n  ${mediaMobile`\n    margin-left: ${Spacing.Middle};\n  `};\n`\n\nexport const ConfirmTransferButton = observer(() => {\n  const transfer = useTransferModel()\n  const { enqueueSuccess } = useSnackBar()\n  const [createTransfers] = useMCreateTransfers()\n  const canTransferStockItems = useCanMutate('createStockItemTransfers')\n\n  const targetBranch = transfer.targetId\n  const noTargetSelected = targetBranch === null\n\n  const onConfirm = React.useCallback(async () => {\n    const transfers = transfer.itemsForTransfer\n      .filter(RM.propSatisfies(RM.gt(0), 'quantity'))\n      .map(item => ({\n        stockItemId: item.id,\n        quantity: item.quantity!,\n      }))\n\n    if (transfers.length > 0 && targetBranch) {\n      const transferVariables = {\n        targetBranch,\n        transfers,\n      }\n\n      const result = await createTransfers(transferVariables)\n\n      if (result) {\n        enqueueSuccess(i18n.t`Transfer was successfully completed!`)\n        transfer.clearTransferState()\n      }\n    }\n  }, [createTransfers, enqueueSuccess, targetBranch, transfer])\n\n  if (!canTransferStockItems) {\n    return null\n  }\n\n  return (\n    <StyledConfirmTransferButton>\n      <TouchButton\n        color={Colors.green}\n        onClick={onConfirm}\n        disabled={noTargetSelected}\n      >\n        {transfer.isImportMode ? (\n          <Trans>Confirm import</Trans>\n        ) : (\n          <Trans>Confirm transfer</Trans>\n        )}\n      </TouchButton>\n    </StyledConfirmTransferButton>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Sizer } from '../../../atoms/Sizer'\nimport { ImportCheckbox } from '../atoms/ImportCheckbox'\nimport { useTransferModel } from '../hooks/useTransferModel'\n\nexport const ImportModeToggle = observer(() => {\n  const transfer = useTransferModel()\n\n  return (\n    <>\n      <ImportCheckbox\n        checked={transfer.isImportMode}\n        onChange={transfer.toggleImportMode}\n      />\n      <Sizer width={10}>\n        <Trans>Enable import mode</Trans>\n      </Sizer>\n    </>\n  )\n})\n","import React from 'react'\n\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\n\nexport const TransferSourceBranchPicker: React.FC = () => {\n  return <SettingsCompanyBranchPicker width={20} />\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');","import { ArrowRightAlt } from '@material-ui/icons'\nimport { idPropEq, RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { useTransferModel } from '../hooks/useTransferModel'\n\nexport const TransferTargetBranchPicker = observer(() => {\n  const { user } = useRoot()\n  const transfer = useTransferModel()\n\n  const branchesWithoutSourceBranch = RM.reject(\n    idPropEq(transfer.sourceId),\n    user.branches,\n  )\n\n  return (\n    <IconLine icon={ArrowRightAlt}>\n      <CompanyBranchPicker\n        selectedBranches={transfer.targetId ? [transfer.targetId] : []}\n        onSelectionChange={([branch]) => transfer.setTargetId(branch)}\n        onSelectionClear={() => transfer.setTargetId(null)}\n        isMulti={false}\n        isClearable={false}\n        getDropdownProps={() => ({ width: 20 })}\n        hideWhenSingleBranch={true}\n        branches={branchesWithoutSourceBranch}\n      />\n    </IconLine>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useCanMutate } from '../../../hooks/useAccessGuard'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { ConfirmTransferButton } from '../molecules/ConfirmTransferButton'\nimport { ImportModeToggle } from '../molecules/ImportModeToggle'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { TransferSourceBranchPicker } from '../molecules/TransferSourceBranchPicker'\nimport { TransferTargetBranchPicker } from '../molecules/TransferTargetBranchPicker'\nimport { StockListLoader } from '../organisms/StockListLoader'\nimport { StyledFilterWithTableContainer } from './MenuRecipeListPage'\n\nconst StyledTopContainer = styled.div`\n  display: flex;\n`\n\nconst VerticallyCenteredRow = styled(FlexRowSingle)`\n  &,\n  & > * {\n    display: flex;\n    align-items: center;\n  }\n`\n\nexport const MenuStockTransferPage: React.FC = props => {\n  const { user } = useRoot()\n  const canTransferItems = useCanMutate('createStockItemTransfers')\n  const canAccessPage = canTransferItems && !user.hasSingleBranch\n\n  return (\n    <FullPageLayout\n      pageTitle={i18n.t`Stock transfer`}\n      useBackButton={true}\n      topContent={\n        <StyledTopContainer>\n          <ConfirmTransferButton />\n        </StyledTopContainer>\n      }\n    >\n      <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n        <Card stretchToParent={true}>\n          {canAccessPage ? (\n            <StyledFilterWithTableContainer>\n              <div className=\"filter\">\n                <VerticallyCenteredRow justify=\"start\" flexWrap=\"wrap\">\n                  <FlexColumn>\n                    <TransferSourceBranchPicker />\n                  </FlexColumn>\n                  <FlexColumn>\n                    <TransferTargetBranchPicker />\n                  </FlexColumn>\n                  <FlexColumn>\n                    <MenuFilterInput modelType=\"stock\" />\n                  </FlexColumn>\n                  <FlexColumn>\n                    <ImportModeToggle />\n                  </FlexColumn>\n                </VerticallyCenteredRow>\n              </div>\n              <div className=\"table\">\n                <StockListLoader isTransferring={true} />\n              </div>\n            </StyledFilterWithTableContainer>\n          ) : (\n            <Headline>\n              <Trans>Can't access page</Trans>\n            </Headline>\n          )}\n        </Card>\n      </PageLayoutFullHeightItem>\n    </FullPageLayout>\n  )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MENU_ROUTE, useMenuRouting } from '../hooks/useMenuRouting'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\nimport { MenuStockTransferPage } from '../pages/MenuStockTransferPage'\n\ninterface IProps {}\n\nexport const MenuRoutes: React.FC<IProps> = () => {\n  const routing = useMenuRouting()\n  return (\n    <Switch>\n      <SecureRoute\n        path={routing.getCategoryEditRoute(':categoryId')}\n        component={MenuCategoryPage}\n      />\n      <SecureRoute\n        path={routing.getCategoryListRoute()}\n        component={MenuCategoryListPage}\n      />\n      <SecureRoute\n        path={routing.getRecipeEditRoute(':recipeId')}\n        component={MenuRecipePage}\n      />\n      <SecureRoute\n        path={routing.getRecipeListRoute()}\n        component={MenuRecipeListPage}\n      />\n      <SecureRoute\n        path={routing.getStockDepositRoute()}\n        component={MenuStockDepositPage}\n      />\n      <SecureRoute\n        path={routing.getStockTransferRoute()}\n        component={MenuStockTransferPage}\n      />\n      <SecureRoute\n        path={routing.getStockEditRoute(':stockId')}\n        component={MenuStockPage}\n      />\n      <SecureRoute\n        path={routing.getStockListRoute()}\n        component={MenuStockListPage}\n      />\n      <Redirect to={routing.getCategoryListRoute()} from={MENU_ROUTE} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default MenuRoutes\n"],"sourceRoot":""}