{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/FormInputTextBox.tsx","atoms/Sizer.tsx","atoms/Headline.tsx","atoms/FormInputStyled.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","atoms/FlexColumn.tsx","atoms/SelectControlFlat.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","molecules/PageLayoutItem.tsx","segments/settings/atoms/WithSettings.tsx","atoms/MarginBox.tsx","molecules/TouchButtonDelete.tsx","segments/settings/organisms/SettingsCompanyBranchPicker.tsx","atoms/FormInputCheckbox.tsx","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","segments/branchpreferences/organism/SaveInvoicePreferencesButton.tsx","segments/branchpreferences/organism/InvoicePreferencesForm.tsx","segments/branchpreferences/organism/StoppageForm.tsx","segments/branchpreferences/pages/BranchPreferencesPage.tsx","segments/branchpreferences/routes/BranchPreferencesRoutes.tsx","atoms/FormInputTime.tsx","atoms/FormInputTimeSpan.tsx","segments/businesshours/molecules/SpecificModeSelector.tsx","segments/businesshours/organisms/SpecificBusinessHourForm.tsx","segments/businesshours/molecules/SpecificBusinessHourLine.tsx","segments/businesshours/organisms/SpecificBusinessHours.tsx","segments/businesshours/pages/BusinessHoursPage.tsx","segments/businesshours/routes/BusinessHoursRoutes.tsx","segments/settings/organisms/BusinessHoursButton.tsx","segments/settings/organisms/MenuCategoryButton.tsx","segments/settings/organisms/MenuRecipeButton.tsx","segments/settings/organisms/MenuStockButton.tsx","segments/settings/organisms/MenuStockDepositButton.tsx","segments/settings/organisms/UserMenuButton.tsx","segments/settings/organisms/ZonesMenuButton.tsx","segments/settings/pages/SettingsPage.tsx","segments/settings/routes/SettingsRoutes.tsx"],"names":["IconLineWrap","styled","div","withConfig","displayName","componentId","DescriptionContainer","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","FormInputTextBox","forwardRef","inputRef","field","_ref$inputFullWidth","inputFullWidth","isRequired","validatioName","validationMessage","validate","react_form__WEBPACK_IMPORTED_MODULE_2__","value","isEmpty","_i18n__WEBPACK_IMPORTED_MODULE_4__","_","fieldApi","_FormInputStyled__WEBPACK_IMPORTED_MODULE_5__","onChange","ev","setTouched","setValue","target","invalid","Boolean","error","ref","SizerContainer","_ref$widthUnit","widthUnit","height","_ref2$heightUnit","heightUnit","Sizer","_ref3$widthUnit","_ref3$heightUnit","className","wrap","_MarginBox__WEBPACK_IMPORTED_MODULE_4__","Headline","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","fullWidthStyle","FormInputStyled","invalidInputStyle","css","input","NoAccess","CanQuery","queryName","canQuery","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","ItemStyled","textColor","isSelected","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","RM","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_6___default","hasSelection","onClick","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","id","map","idx","Component","defaultProps","prop","getItemValue","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","restInnerProps","style","react","placeholder","i18n","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","selection","head","FormSubmit","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","utils","MomentUtils","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","WithSettings","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_atoms_WithRoot__WEBPACK_IMPORTED_MODULE_1__","observe","render","_render","_x","toString","settings","MarginBox","TouchButtonDelete","onDelete","confirmText","_TouchButton__WEBPACK_IMPORTED_MODULE_3__","ButtonHeight","window","confirm","SettingsCompanyBranchPicker","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_5__","branchId","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","selectBranch","CheckboxStyled","Checkbox","white","Radiuses","TextComponent","FormInputCheckbox","defaultValue","inputProps","checked","FormInputDate","pickerProps","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_5__","react_form__WEBPACK_IMPORTED_MODULE_3__","onOpen","format","ampm","okLabel","cancelLabel","clearLabel","todayLabel","maxDateMessage","minDateMessage","FlexRow","SaveInvoicePreferencesButton","TouchButton","text","SaveButtonContainer","InvoicePreferencesForm","es","SaveInvoicePreferencesButton_SaveInvoicePreferencesButton","StoppageForm","BranchPreferencesPage","FullPageLayout","pageTitle","Card","_lingui_react","StoppageForm_StoppageForm","InvoicePreferencesForm_InvoicePreferencesForm","BranchPreferencesRoutes","match","react_router","SecureRoute","exact","path","NotFoundPage","FormInputTime","material_ui_pickers_esm","InlineWrap","FormInputTimeSpan","fieldFrom","fieldTo","FormInputTime_FormInputTime","fullWidth","labels","_labels","defineProperty","ESpecificHourMode","TIMESPAN","i18nMark","FULLDAY","SpecificModeSelector","businessHours","specificMode","mode","changeSpecificMode","DateContainer","FormContainer","SpecificBusinessHourForm","onSubmit","submitSpecificHour","defaultValues","getDefaultValues","fullDateFormat","minDate","Date","SpecificModeSelector_SpecificModeSelector","index_module","FormInputTimeSpan_FormInputTimeSpan","now","date","openAt","setHours","setMinutes","closeAt","SpecificBusinessHourLine","bsHour","0","specificDateLocalized","closed","closedNote","formatLineTime","sortByDate","sort","ascend","or","not","SpecificBusinessHours","WithRoot","SpecificBusinessHours_graphql","queryProps","fetchPolicy","renderFragment","SpecificBusinessHourLine_SpecificBusinessHourLine","deleteSpecificHour","BusinessHoursPage","useBackButton","SpecificBusinessHours_SpecificBusinessHours","SpecificBusinessHourForm_SpecificBusinessHourForm","BusinessHoursRoutes","BusinessHoursButton","red","MenuCategoryButton","turquoise","MenuRecipeButton","MenuStockButton","MenuStockDepositButton","UserMenuButton","ZonesMenuButton","violet","SettingsPage","PageLayout","layouts","i","x","y","w","h","SettingsRoutes_SettingsRoutes","ZoneMenuRoutes","lazy","Promise","all","then","bind","MenuRoutes","UserMenuPage","SettingsRoutes","PageTitle","Route","LazyRoute"],"mappings":"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","file":"static/js/175.674c5a43.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { FormInputStyled } from './FormInputStyled'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  isRequired?: boolean\n  validatioName?: string\n  validationMessage?: string\n  inputFullWidth?: boolean\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputFullWidth = false,\n      isRequired,\n      validatioName,\n      validationMessage,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            if (validationMessage) {\n              return validationMessage\n            }\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            fieldApi.setTouched(true)\n            fieldApi.setValue(ev.target.value)\n          }}\n          inputFullWidth={inputFullWidth}\n          invalid={Boolean(fieldApi.error)}\n          // @ts-ignore\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../styling'\nimport { MarginBox } from './MarginBox'\n\ninterface IProps {\n  width?: number\n  widthUnit?: string\n  height?: number\n  heightUnit?: string\n  margin?: string\n  className?: string\n}\n\nconst widthProperty = ({\n  width: width,\n  widthUnit: widthUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (width === undefined) {\n    return ''\n  } else {\n    return `width: ${width}${widthUnit}`\n  }\n}\n\nconst heightProperty = ({\n  height: height,\n  heightUnit: heightUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (height === undefined) {\n    return ''\n  } else {\n    return `height: ${height}${heightUnit}`\n  }\n}\n\nconst SizerContainer = styled('div')`\n  ${widthProperty};\n  ${heightProperty};\n`\n\nexport const Sizer: React.FC<IProps> = ({\n  width,\n  widthUnit = Spacing.DefaultSizeUnit,\n  height,\n  heightUnit = Spacing.DefaultSizeUnit,\n  margin,\n  children,\n  className,\n  ...props\n}) => {\n  const wrap = (\n    <SizerContainer\n      width={width}\n      widthUnit={widthUnit}\n      height={height}\n      heightUnit={heightUnit}\n      className={className}\n      {...props}\n    >\n      {children}\n    </SizerContainer>\n  )\n\n  return margin === undefined ? (\n    wrap\n  ) : (\n    <MarginBox margin={margin}>{wrap}</MarginBox>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import styled, { css } from 'styled-components'\n\nimport { Spacing } from '../styling'\n\ninterface IFormInputStyled {\n  invalid?: boolean\n  inputFullWidth?: boolean\n}\n\nexport const invalidInputStyle = css`\n  border: 1px red solid;\n`\n\nexport const fullWidthStyle = css`\n  width: 100%;\n`\n\nexport const FormInputStyled = styled.input`\n  margin: ${Spacing.MarginAroundFormComponents};\n  ${({ inputFullWidth }: IFormInputStyled) => inputFullWidth && fullWidthStyle};\n  ${({ invalid }: IFormInputStyled) => invalid && invalidInputStyle};\n`\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { TSettingsModel } from '../models/SettingsModel'\n\ninterface IProps {\n  render(settings: TSettingsModel): ReactNode\n  observe?: boolean\n}\n\nexport const WithSettings: React.FC<IProps> = ({ observe, render }) => (\n  <WithRoot observe={observe} render={({ settings }) => render(settings)} />\n)\n","import styled from 'styled-components'\n\nexport interface IProps {\n  margin: string\n  className?: string\n}\n\nexport const MarginBox = styled('div')`\n  margin: ${(props: IProps) => props.margin};\n`\n","import React from 'react'\n\nimport { Colors, Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps extends Omit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.FC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => (\n  <TouchButton\n    iconName=\"delete\"\n    color={Colors.greyMiddle}\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    onClick={ev => {\n      ev.preventDefault()\n      if (!confirmText || window.confirm(confirmText)) {\n        onDelete()\n      }\n    }}\n    {...props}\n  />\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {\n  isMulti?: boolean\n  width?: number\n}\n\nexport const SettingsCompanyBranchPicker: React.FC<IProps> = ({\n  isMulti,\n  width,\n}) => {\n  const { settings } = useRoot()\n  return useObserver(() => (\n    <IconLine icon=\"store_mall_directory\">\n      <CompanyBranchPicker\n        selectedBranches={settings.branchId ? [settings.branchId] : undefined}\n        onSelectionChange={([branch]) => settings.selectBranch(branch)}\n        isMulti={isMulti}\n        isClearable={false}\n        getDropdownProps={() => ({ width })}\n      />\n    </IconLine>\n  ))\n}\n","import React from 'react'\nimport { Checkbox, FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { Colors, Radiuses, Spacing } from '../styling'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  label?: string\n}\n\nconst CheckboxStyled = styled(Checkbox)`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-color: ${Colors.white};\n  border: 1px solid ${Colors.greyMiddle};\n  padding: 1rem;\n  border-radius: ${Radiuses.TextComponent};\n  display: inline-block;\n  position: relative;\n  margin: ${Spacing.MarginAroundFormComponents};\n  outline: none;\n  &:checked {\n    background-color: ${Colors.white};\n    border: 1px solid ${Colors.greyMiddle};\n  }\n  &:checked:after {\n    content: '\\\\2714';\n    font-size: 2rem;\n    position: absolute;\n    top: -0.5rem;\n    left: 0.1rem;\n    color: ${Colors.greyDark};\n    overflow: hidden;\n  }\n`\n\nconst LabelStyled = styled.div`\n  display: inline-block;\n  margin: 0.4rem 0 0 0.5rem;\n  vertical-align: top;\n`\n\nexport const FormInputCheckbox: React.FC<IProps> = ({\n  field,\n  label,\n  defaultValue,\n  children,\n  ...inputProps\n}) => (\n  <>\n    <CheckboxStyled\n      field={field}\n      checked={Boolean(defaultValue)}\n      {...inputProps}\n    />\n    {label && <LabelStyled>{label}</LabelStyled>}\n  </>\n)\n","import { DatePickerProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineDatePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"ll\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            todayLabel={i18n.t`Today`}\n            maxDateMessage={i18n.t`Date is too much in the future`}\n            minDateMessage={i18n.t`Date is too much in the past`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const SaveInvoicePreferencesButton: React.FC = props => (\n  <TouchButton text={i18n.t`Save invoice preferences`} color={Colors.green} />\n)\n","import React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { SaveInvoicePreferencesButton } from './SaveInvoicePreferencesButton'\n\ninterface IInvoicePreferencesFormProps {}\n\nconst SaveButtonContainer = styled.div`\n  margin-top: 1rem;\n  width: 15rem;\n`\n\nexport const InvoicePreferencesForm: React.FC<\n  IInvoicePreferencesFormProps\n> = props => (\n  <Form>\n    <FormInputTextBox field=\"account\" placeholder=\"Název firmy\" />\n    <br />\n    <FormInputTextBox field=\"number\" placeholder=\"IČ\" />\n    <FormInputTextBox field=\"vatIdent\" placeholder=\"DIČ\" />\n\n    <SaveButtonContainer>\n      <SaveInvoicePreferencesButton />\n    </SaveButtonContainer>\n  </Form>\n)\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { i18n } from '../../../i18n'\n\ninterface IStoppageFormProps {}\n\nexport const StoppageForm: React.FC<IStoppageFormProps> = props => (\n  <Form>\n    <FormInputCheckbox\n      field=\"onlyPersonalPickup\"\n      label={i18n.t`We are not delivering, only take away.`}\n    />\n    <br />\n    <FormInputCheckbox\n      field=\"stoppage\"\n      label={i18n.t`Completely stop all orders.`}\n    />\n  </Form>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { InvoicePreferencesForm } from '../organism/InvoicePreferencesForm'\nimport { StoppageForm } from '../organism/StoppageForm'\n\ninterface IPreferencesPageProps {}\n\nexport const BranchPreferencesPage: React.FC<IPreferencesPageProps> = props => (\n  <FullPageLayout pageTitle={i18n.t`Branch preferences`}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <Headline>\n        <Trans id=\"branch.preferences.stoppage\">Stoppage</Trans>\n      </Headline>\n      <StoppageForm />\n\n      <Headline>\n        <Trans>Change of invoice preferences</Trans>\n      </Headline>\n      <InvoicePreferencesForm />\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesPage } from '../pages/BranchPreferencesPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BranchPreferencesRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      component={BranchPreferencesPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import { InlineTimePicker, TimePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<TimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputTime: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineTimePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"LT\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTime } from './FormInputTime'\n\ninterface IFormInputTimeSpanProps {\n  fieldFrom: FieldType\n  fieldTo: FieldType\n}\n\nconst InlineWrap = styled.div`\n  width: 5rem;\n  display: inline-block;\n`\n\nexport const FormInputTimeSpan: React.FC<IFormInputTimeSpanProps> = ({\n  fieldFrom,\n  fieldTo,\n}) => (\n  <>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldFrom}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldTo}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n  </>\n)\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { ESpecificHourMode } from '../models/BusinessHoursModel'\n\nconst labels = {\n  [ESpecificHourMode.TIMESPAN]: i18nMark('Open between'),\n  [ESpecificHourMode.FULLDAY]: i18nMark('Closed'),\n}\n\nexport const SpecificModeSelector: React.FC = () => (\n  <WithSettings\n    observe={true}\n    render={({ businessHours }) => (\n      <SelectControlFlat<ESpecificHourMode>\n        items={[ESpecificHourMode.TIMESPAN, ESpecificHourMode.FULLDAY]}\n        selectedItem={businessHours.specificMode as ESpecificHourMode}\n        formatItem={mode => i18n._(labels[mode])}\n        onSingleSelection={(mode: ESpecificHourMode) =>\n          businessHours.changeSpecificMode(mode)\n        }\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/macro'\nimport { setHours, setMinutes } from 'date-fns'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { FormInputTimeSpan } from '../../../atoms/FormInputTimeSpan'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { fullDateFormat } from '../../../helpers/formats'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport {\n  ESpecificHourMode,\n  ISpecificFormData,\n} from '../models/BusinessHoursModel'\nimport { SpecificModeSelector } from '../molecules/SpecificModeSelector'\n\nconst DateContainer = styled.div`\n  display: inline-block;\n  width: 13rem;\n  margin-left: 1rem;\n  margin-top: 2rem;\n`\n\nconst FormContainer = styled.div`\n  display: inline-block;\n  width: 16rem;\n  min-height: 6rem;\n  margin: 0rem 0 0 1rem;\n  vertical-align: top;\n`\n\nexport const SpecificBusinessHourForm: React.FC = props => {\n  const {\n    settings: { businessHours },\n  } = useRoot()\n  return (\n    <Form\n      onSubmit={businessHours.submitSpecificHour}\n      defaultValues={getDefaultValues()}\n    >\n      <DateContainer>\n        <FormInputDate\n          field=\"date\"\n          format={fullDateFormat}\n          minDate={new Date()}\n          fullWidth={true}\n          label={<Trans>Date</Trans>}\n        />\n      </DateContainer>\n\n      <FormContainer>\n        <SpecificModeSelector />\n        <Observer>\n          {() =>\n            businessHours.specificMode === ESpecificHourMode.TIMESPAN ? (\n              <FormInputTimeSpan fieldFrom=\"openAt\" fieldTo=\"closeAt\" />\n            ) : (\n              <Sizer width={13}>\n                <FormInputTextBox\n                  field=\"note\"\n                  inputFullWidth={true}\n                  placeholder={i18n.t`Closing reason`}\n                />\n              </Sizer>\n            )\n          }\n        </Observer>\n      </FormContainer>\n\n      <FormSubmit width=\"9rem\">{i18n.t`Add`}</FormSubmit>\n    </Form>\n  )\n}\n\nfunction getDefaultValues(): Partial<ISpecificFormData> {\n  const now = new Date()\n  return {\n    date: now,\n    openAt: setHours(setMinutes(now, 0), 9),\n    closeAt: setHours(setMinutes(now, 0), 20),\n  }\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface ISpecificBusinessHourLineProps {\n  bsHour: GSpecificBusinessHour.Fragment\n  onDelete(): void\n}\n\nexport const SpecificBusinessHourLine: React.FC<\n  ISpecificBusinessHourLineProps\n> = ({ bsHour, onDelete }) => (\n  <FlexRow>\n    <FlexColumn fixedWidth={true}>\n      <CanMutate mutationName=\"destroyBusinessHour\">\n        <TouchButtonDelete\n          onDelete={onDelete}\n          confirmText={`${i18n.t`Really remove specific business hour ${\n            bsHour.specificDateLocalized\n          }?`}`}\n        />\n      </CanMutate>\n    </FlexColumn>\n    <FlexColumn fixedWidth={true} width=\"14rem\">\n      {bsHour.specificDateLocalized}\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={1}>{formatLineTime(bsHour)}</FlexColumn>\n  </FlexRow>\n)\n\nfunction formatLineTime(bsHour: GSpecificBusinessHour.Fragment) {\n  if (bsHour.closed) {\n    return bsHour.closedNote\n  }\n  return `${bsHour.openAt} - ${bsHour.closeAt}`\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { SpecificBusinessHourLine } from '../molecules/SpecificBusinessHourLine'\nimport { QuerySpecificBusinessHours } from './SpecificBusinessHours.graphql'\n\nconst sortByDate = RM.sort<GSpecificBusinessHour.Fragment>(\n  // @ts-ignore Fix typing\n  RM.ascend(RM.or(RM.prop('specificDate'), RM.not)),\n)\n\nexport const SpecificBusinessHours: React.FC = props => (\n  <WithRoot\n    render={({ settings }) => (\n      <QuerySpecificBusinessHours\n        {...settings.queryProps}\n        fetchPolicy=\"cache-and-network\"\n        renderFragment={({ businessHours }) =>\n          sortByDate(businessHours).map(bsHour => (\n            <SpecificBusinessHourLine\n              key={bsHour.id}\n              bsHour={bsHour}\n              onDelete={() =>\n                settings.businessHours.deleteSpecificHour(bsHour.id)\n              }\n            />\n          ))\n        }\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../../segments/settings/organisms/SettingsCompanyBranchPicker'\nimport { SpecificBusinessHourForm } from '../organisms/SpecificBusinessHourForm'\nimport { SpecificBusinessHours } from '../organisms/SpecificBusinessHours'\n\nexport const BusinessHoursPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Business hours`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      {/* <Headline>Pravidelné otevírací hodiny</Headline>\n      <RegularOpeningHours /> */}\n\n      <Headline>\n        <Trans>Specific business hours</Trans>\n      </Headline>\n      <SpecificBusinessHours />\n\n      <CanMutate mutationName=\"addSpecialBusinessHour\">\n        <Headline>\n          <Trans>Add specific business hour</Trans>\n        </Headline>\n        <SpecificBusinessHourForm />\n      </CanMutate>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BusinessHoursPage } from '../pages/BusinessHoursPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BusinessHoursRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute exact={true} path={match.path} component={BusinessHoursPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const BusinessHoursButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Business hours`}\n    iconName=\"av_timer\"\n    color={Colors.red}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuCategoryButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Categories`}\n    iconName=\"folder\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuRecipeButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Recipes`}\n    iconName=\"insert_drive_file\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Stock overview`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockDepositButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Stock deposit`}\n    iconName=\"open_in_browser\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const UserMenuButton: React.FC = () => (\n  <TouchButton\n    text={i18n.t`User`}\n    iconName=\"person\"\n    color={Colors.greyMiddle}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IZonesMenuButtonProps {}\n\nexport const ZonesMenuButton: React.FC<IZonesMenuButtonProps> = props => (\n  <TouchButton\n    text={i18n.t`Delivery zones`}\n    iconName=\"edit_location\"\n    color={Colors.violet}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { BusinessHoursButton } from '../organisms/BusinessHoursButton'\nimport { MenuCategoryButton } from '../organisms/MenuCategoryButton'\nimport { MenuRecipeButton } from '../organisms/MenuRecipeButton'\nimport { MenuStockButton } from '../organisms/MenuStockButton'\nimport { MenuStockDepositButton } from '../organisms/MenuStockDepositButton'\nimport { UserMenuButton } from '../organisms/UserMenuButton'\nimport { ZonesMenuButton } from '../organisms/ZonesMenuButton'\n\ninterface ISettingsPageProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'BusinessHours', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'Preferences', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'ZonesMenu', x: 4, y: 1, w: 2, h: 2 },\n    { i: 'UserMenu', x: 6, y: 1, w: 2, h: 2 },\n    { i: 'MenuRecipe', x: 0, y: 3, w: 2, h: 2 },\n    { i: 'MenuCategory', x: 2, y: 3, w: 2, h: 2 },\n    { i: 'MenuStock', x: 4, y: 3, w: 2, h: 2 },\n    { i: 'MenuStockDeposit', x: 6, y: 3, w: 2, h: 2 },\n  ]\n}\n\nexport const SettingsPage: React.FC<ISettingsPageProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"BusinessHours\"\n      route=\"/settings/businesshours\"\n      component={BusinessHoursButton}\n      canQuery=\"businessHours\"\n    />\n    {/* <PageLayoutItem\n      key=\"Preferences\"\n      route=\"/settings/preferences\"\n      component={PreferencesButton}\n    /> */}\n    <PageLayoutItem\n      key=\"MenuRecipe\"\n      route=\"/settings/menu/recipe\"\n      component={MenuRecipeButton}\n      canQuery=\"recipes\"\n    />\n    <PageLayoutItem\n      key=\"MenuCategory\"\n      route=\"/settings/menu/category\"\n      component={MenuCategoryButton}\n      canQuery=\"wareCategories\"\n    />\n    <PageLayoutItem\n      key=\"MenuStock\"\n      route=\"/settings/menu/stock\"\n      component={MenuStockButton}\n      canQuery=\"stockItems\"\n    />\n    <PageLayoutItem\n      key=\"MenuStockDeposit\"\n      route=\"/settings/menu/stock/deposit\"\n      component={MenuStockDepositButton}\n      canMutate=\"changeAmountStockItem\"\n    />\n    <PageLayoutItem\n      key=\"ZonesMenu\"\n      route=\"/settings/zones\"\n      component={ZonesMenuButton}\n      canQuery=\"zones\"\n    />\n    <PageLayoutItem\n      key=\"UserMenu\"\n      route=\"/settings/user\"\n      component={UserMenuButton}\n      canQuery=\"user\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { LazyRoute } from '../../../routes/LazyRoute'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesRoutes } from '../../branchpreferences/routes/BranchPreferencesRoutes'\nimport { BusinessHoursRoutes } from '../../businesshours/routes/BusinessHoursRoutes'\nimport { SettingsPage } from '../pages/SettingsPage'\n\nconst ZoneMenuRoutes = React.lazy(() =>\n  import('../../../segments/zones/routes/ZoneMenuRoutes'),\n)\n\nconst MenuRoutes = React.lazy(() =>\n  import('../../../segments/menu/routes/MenuRoutes'),\n)\n\nconst UserMenuPage = React.lazy(() => import('../pages/UserMenuPage'))\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const SettingsRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => {\n  return (\n    <>\n      <PageTitle.Route path={match.path} title={i18n.t`Settings`} />\n      <Switch>\n        <SecureRoute exact={true} path={match.path} component={SettingsPage} />\n        <LazyRoute path={`${match.path}/menu`} component={MenuRoutes} />\n        <LazyRoute path={`${match.path}/zones`} component={ZoneMenuRoutes} />\n        <LazyRoute path={`${match.path}/user`} component={UserMenuPage} />\n        <Route\n          path={`${match.path}/businesshours`}\n          component={BusinessHoursRoutes}\n        />\n        <Route\n          path={`${match.path}/preferences`}\n          component={BranchPreferencesRoutes}\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </>\n  )\n}\n\nexport default SettingsRoutes\n"],"sourceRoot":""}