{"version":3,"sources":["atoms/CanMutate.tsx","atoms/FlexColumn.tsx","atoms/CanQuery.tsx","components/forms/FormInput.tsx","molecules/TouchButtonDelete.tsx","atoms/DateTimeFormatProvider.tsx","components/forms/FormSubmitButton.tsx","atoms/FlexDiv.tsx","../node_modules/@material-ui/icons/esm/AddCircle.js","atoms/FlexRow.tsx","hooks/useSettings.ts","atoms/InputDate.tsx","components/forms/FormInputDate.tsx","../node_modules/@material-ui/icons/esm/Delete.js","../node_modules/@material-ui/icons/esm/ErrorOutline.js","atoms/InputTime.tsx","segments/businesshours/atoms/BusinessHoursTimeRange.tsx","segments/businesshours/molecules/BusinessHoursWeekday.tsx","segments/businesshours/organisms/BusinessHoursForm.tsx","components/forms/FormInputTime.tsx","components/forms/FormInputTimeSpan.tsx","segments/businesshours/molecules/SpecificModeSelector.tsx","segments/businesshours/organisms/SpecificBusinessHourForm.tsx","segments/businesshours/molecules/SpecificBusinessHourLine.tsx","segments/businesshours/organisms/SpecificBusinessHours.tsx","segments/businesshours/pages/BusinessHoursPage.tsx","segments/businesshours/routes/BusinessHoursRouting.tsx"],"names":["CanMutate","observer","mutationName","children","useCanMutate","FlexColumn","styled","div","fixedWidth","width","widthGrowIndex","padding","margin","CanQuery","queryName","useCanQuery","FormInput","React","forwardRef","inputRef","fieldName","fullWidth","addHiddenLabelWithPlaceholderText","withLabel","props","useXFieldForInput","field","getInputProps","useObserver","invalid","touched","Boolean","error","inputFullWidth","ref","placeholder","hidden","htmlFor","name","TouchButtonDelete","onDelete","confirmText","icon","Delete","color","Colors","greyMiddle","onClick","ev","preventDefault","window","confirm","DateTimeFormatProvider","utils","MomentUtils","FormSubmitButton","id","state","useXFormState","type","green","disabled","isSubmitting","isDirty","isValid","undefined","ErrorOutline","iconSize","iconColor","red","FlexDiv","createElement","d","FlexRow","useSettings","useRoot","settings","InputDate","variant","format","maxDateMessage","minDateMessage","FormInputDate","pickerProps","getProps","onChange","setValue","onOpen","setTouched","Fragment","fill","InputTime","StyledBussinessHoursTimeRange","BusinessHoursTimeRange","memo","hour","value","openAt","label","closeAt","StyledBusinessHoursWeekday","article","white","Radiuses","Button","BusinessHoursWeekday","weekday","hours","onAdd","onRemove","renderHour","key","data-testid","className","SizerButton","TouchButton","title","i18n","role","code","length","map","AddCircle","getTodayTime","DFP","parse","Date","BusinessHoursForm","useQRegularBusinessHours","branchId","data","loading","useState","observable","Map","businessHours","useMBusinessHoursSubmit","submitBusinessHours","useEffect","size","weekDays","forEach","set","enum","array","weekDay","get","push","weekDayHours","clear","hourIdCounter","useRef","hourId","idx","findIndex","RM","propEq","splice","enqueueSuccess","useSnackBar","onSubmit","useCallback","a","formatTime","Loading","current","startOfDay","endOfDay","Sizer","MarginBox","text","FormInputTime","InlineWrap","FormInputTimeSpan","fieldFrom","fieldTo","labels","ESpecificHourMode","TIMESPAN","i18nMark","FULLDAY","SpecificModeSelector","SelectControlFlat","items","selectedItem","specificMode","formatItem","mode","_","onSingleSelection","changeSpecificMode","DateContainer","FormContainer","SpecificBusinessHourForm","submitSpecificHour","initialValues","getInitialValues","fullDateFormat","minDate","now","date","setHours","setMinutes","SpecificBusinessHourLine","bsHour","specificDateLocalized","formatLineTime","closed","closedNote","sortByDate","sort","ascend","or","prop","not","SpecificBusinessHours","variables","fetchPolicy","renderFragment","deleteSpecificHour","BusinessHoursPage","FullPageLayout","pageTitle","useBackButton","Card","SettingsCompanyBranchPicker","Headline","BusinessHoursRouting","SecureRoute","exact","path","ROUTE_SETTINGS_HOURS","component","NotFoundPage"],"mappings":"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","file":"static/js/185.8cd5b5cf.chunk.js","sourcesContent":["import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useCanMutate } from '../hooks/useAccessGuard'\nimport { NoAccess } from './NoAccess'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate = observer<IProps>(({ mutationName, children }) => {\n  const canMutate = useCanMutate(mutationName)\n  return canMutate ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n})\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useCanQuery } from '../hooks/useAccessGuard'\nimport { NoAccess } from './NoAccess'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery = observer<IProps>(({ queryName, children }) => {\n  const canQuery = useCanQuery(queryName)\n  return canQuery ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n})\n","import { useXFieldForInput, XFieldValidator } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { StyledFormInput } from '../../atoms/FormInputStyled'\n\ninterface IProps extends LegacyOmit<React.InputHTMLAttributes<never>, 'name'> {\n  fieldName: FieldName\n  validate?: XFieldValidator<string>\n  fullWidth?: boolean\n  children?: never\n  addHiddenLabelWithPlaceholderText?: boolean\n}\n\nexport type FormInputProps = IProps\n\nexport const FormInput = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      fieldName,\n      fullWidth,\n      addHiddenLabelWithPlaceholderText: withLabel = true,\n      ...props\n    },\n    inputRef,\n  ) => {\n    const [field, getInputProps] = useXFieldForInput<string>(fieldName)\n    return useObserver(() => (\n      <>\n        <StyledFormInput\n          {...getInputProps()}\n          invalid={field.touched && Boolean(field.error)}\n          inputFullWidth={fullWidth}\n          ref={inputRef}\n          {...props}\n        />\n        {withLabel && props.placeholder && (\n          <label hidden={true} htmlFor={field.name}>\n            {props.placeholder}\n          </label>\n        )}\n      </>\n    ))\n  },\n)\n","import { Delete } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps\n  extends LegacyOmit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.FC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => {\n  return (\n    <SizerButton>\n      <TouchButton\n        icon={Delete}\n        color={Colors.greyMiddle}\n        onClick={ev => {\n          ev.preventDefault()\n          if (!confirmText || window.confirm(confirmText)) {\n            onDelete()\n          }\n        }}\n        {...props}\n      />\n    </SizerButton>\n  )\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { ErrorOutline } from '@material-ui/icons'\nimport { useXFormState } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../../molecules/TouchButton'\nimport { Colors } from '../../styling'\n\ninterface IProps extends ITouchButtonProps {\n  children: ReactNode | ReactNode[] | string\n}\n\nexport const FormSubmitButton: React.FC<IProps> = ({\n  children,\n  id = 'form-submit',\n  ...props\n}) => {\n  const state = useXFormState()\n  return useObserver(() => (\n    <TouchButton\n      type=\"submit\"\n      color={Colors.green}\n      disabled={state.isSubmitting && state.isDirty}\n      id={id}\n      icon={!state.isValid ? ErrorOutline : undefined}\n      iconSize={1.1}\n      iconColor={Colors.red}\n      {...props}\n    >\n      <>{children}</>\n    </TouchButton>\n  ))\n}\n","import styled from 'styled-components/macro'\n\nexport const FlexDiv = styled.div`\n  display: flex;\n`\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\nimport { FlexDiv } from './FlexDiv'\n\nexport const FlexRow = styled(FlexDiv)`\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useSettings() {\n  const { settings } = useRoot()\n  return settings\n}\n","import { i18n } from '@lingui/core'\nimport { DatePicker, DatePickerProps } from '@material-ui/pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends DatePickerProps {}\n\nexport const InputDate: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <DatePicker\n        variant=\"inline\"\n        format=\"ll\"\n        maxDateMessage={i18n.t`Date is too much in the future`}\n        minDateMessage={i18n.t`Date is too much in the past`}\n        {...props}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { DatePickerProps } from '@material-ui/pickers'\nimport { useXFieldForInput, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { InputDate } from '../../atoms/InputDate'\n\ninterface IProps extends LegacyOmit<DatePickerProps, 'value' | 'onChange'> {\n  fieldName: XFieldName\n}\n\nexport const FormInputDate: React.FC<IProps> = ({\n  fieldName,\n  ...pickerProps\n}) => {\n  const [field, getProps] = useXFieldForInput(fieldName)\n  return useObserver(() => (\n    <InputDate\n      {...getProps()}\n      onChange={field.setValue}\n      onOpen={field.setTouched}\n      {...pickerProps}\n    />\n  ))\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n})), 'ErrorOutline');","import { TimePicker, TimePickerProps } from '@material-ui/pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends TimePickerProps {}\n\nexport const InputTime: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <TimePicker format=\"LT\" variant=\"inline\" {...props} />\n    </DateTimeFormatProvider>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { InputTime } from '../../../atoms/InputTime'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  hour: TBusinessHour\n}\n\nconst StyledBussinessHoursTimeRange = styled.div`\n  & input {\n    width: 5rem;\n  }\n`\n\nexport const BusinessHoursTimeRange = React.memo<IProps>(({ hour }) => {\n  return useObserver(() => (\n    <StyledBussinessHoursTimeRange>\n      <InputTime\n        value={hour.openAt}\n        onChange={value => (hour.openAt = value)}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n      <InputTime\n        value={hour.closeAt}\n        onChange={value => (hour.closeAt = value)}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </StyledBussinessHoursTimeRange>\n  ))\n})\n","import { Trans } from '@lingui/macro'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { FWeekdayFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Radiuses } from '../../../styling'\nimport { BusinessHoursTimeRange } from '../atoms/BusinessHoursTimeRange'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  weekday: FWeekdayFragment\n  hours: RoA<TBusinessHour>\n  onAdd(): void\n  onRemove(hourId: ID): void\n}\n\nconst StyledBusinessHoursWeekday = styled.article`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 0.3rem 0;\n  h5 {\n    width: 5rem;\n  }\n  & .range {\n    display: flex;\n    margin: 0 2rem 0 0;\n    padding-right: 1rem;\n    background: ${Colors.white};\n    border-radius: ${Radiuses.Button};\n  }\n  .remove-btn {\n    margin-right: 1rem;\n  }\n`\n\nexport const BusinessHoursWeekday = React.memo<IProps>(\n  ({ weekday, hours, onAdd, onRemove }) => {\n    const renderHour = (hour: TBusinessHour) => {\n      return (\n        <div key={hour.id} data-testid=\"bh-range\" className=\"range\">\n          <SizerButton className=\"remove-btn\">\n            <TouchButton\n              title={i18n.t`Remove business hour`}\n              role=\"button\"\n              onClick={() => onRemove(hour.id)}\n            >\n              <Delete />\n            </TouchButton>\n          </SizerButton>\n          <BusinessHoursTimeRange hour={hour} />\n        </div>\n      )\n    }\n\n    const renderHours = () => {\n      if (hours.length === 0) {\n        return (\n          <em>\n            <Trans>Closed</Trans>\n          </em>\n        )\n      }\n      return hours.map(renderHour)\n    }\n\n    return useObserver(() => (\n      <StyledBusinessHoursWeekday>\n        <h5>{weekday.code}</h5>\n        {renderHours()}\n        <SizerButton>\n          <TouchButton\n            title={i18n.t`Add business hour`}\n            role=\"button\"\n            onClick={onAdd}\n          >\n            <AddCircle />\n          </TouchButton>\n        </SizerButton>\n      </StyledBusinessHoursWeekday>\n    ))\n  },\n)\n","import { DFP, RM } from '@speedlo/tools'\nimport { IObservableArray, observable } from 'mobx'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  InputBusinessHourCreate,\n  useMBusinessHoursSubmit,\n  useQRegularBusinessHours,\n  WeekDayEnum,\n} from '../../../graph/generated'\nimport { formatTime } from '../../../helpers/formats'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { TBusinessHour } from '../businesshours.types'\nimport { BusinessHoursWeekday } from '../molecules/BusinessHoursWeekday'\n\nconst getTodayTime = DFP.parse(new Date(), 'H:mm')\n\nexport const BusinessHoursForm = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQRegularBusinessHours({\n    branchId: settings.branchId,\n  })\n\n  const [businessHours] = React.useState(() =>\n    observable(new Map<WeekDayEnum, IObservableArray<TBusinessHour>>()),\n  )\n\n  const [submitBusinessHours] = useMBusinessHoursSubmit()\n\n  React.useEffect(() => {\n    if (loading) {\n      return\n    }\n    if (businessHours.size === 0) {\n      data.weekDays.forEach(weekday => {\n        businessHours.set(weekday.enum, observable.array([]))\n      })\n    }\n    data.businessHours.forEach(({ id, openAt, closeAt, weekDay }) => {\n      if (weekDay) {\n        businessHours.get(weekDay.enum)!.push({\n          id,\n          openAt: getTodayTime(openAt),\n          closeAt: getTodayTime(closeAt),\n          weekDay: weekDay.enum,\n        })\n      }\n    })\n    return () => {\n      businessHours.forEach(weekDayHours => {\n        weekDayHours.clear()\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data.businessHours, data.weekDays, loading, settings.branchId])\n\n  const hourIdCounter = React.useRef(0)\n\n  const onAdd = (weekDay: WeekDayEnum) => () => {\n    businessHours.get(weekDay)!.push({\n      weekDay,\n      id: `L${hourIdCounter.current++}`,\n      openAt: DFP.startOfDay(new Date()),\n      closeAt: DFP.endOfDay(new Date()),\n    })\n  }\n\n  const onRemove = (weekDay: WeekDayEnum) => (hourId: ID) => {\n    const hours = businessHours.get(weekDay)!\n    const idx = hours.findIndex(RM.propEq('id', hourId))\n    if (idx >= 0) {\n      hours.splice(idx, 1)\n    }\n  }\n\n  const { enqueueSuccess } = useSnackBar()\n\n  const onSubmit = React.useCallback(async () => {\n    const hours: InputBusinessHourCreate[] = []\n    businessHours.forEach((weekDayHours, weekDay) => {\n      hours.push(\n        ...weekDayHours.map(hour => ({\n          openAt: formatTime(hour.openAt),\n          closeAt: formatTime(hour.closeAt),\n          weekDay,\n        })),\n      )\n    })\n    const result = await submitBusinessHours({\n      branchId: settings.branchId,\n      hours,\n    })\n    if (result) {\n      enqueueSuccess(i18n.t`Regular business hours has been updated`)\n    }\n  }, [businessHours, enqueueSuccess, settings.branchId, submitBusinessHours])\n\n  if (loading || businessHours.size === 0) {\n    return <Loading />\n  }\n\n  return (\n    <div>\n      {data.weekDays.map(weekday => (\n        <BusinessHoursWeekday\n          key={weekday.enum}\n          weekday={weekday}\n          hours={businessHours.get(weekday.enum)!}\n          onAdd={onAdd(weekday.enum)}\n          onRemove={onRemove(weekday.enum)}\n        />\n      ))}\n      <Sizer width={20}>\n        <MarginBox margin=\"1rem\">\n          <TouchButton\n            text={i18n.t`Save regular hours`}\n            color={Colors.green}\n            onClick={onSubmit}\n          />\n        </MarginBox>\n      </Sizer>\n    </div>\n  )\n})\n","import { TimePickerProps } from '@material-ui/pickers'\nimport { useXFieldForInput, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { InputTime } from '../../atoms/InputTime'\n\ninterface IProps extends LegacyOmit<TimePickerProps, 'value' | 'onChange'> {\n  fieldName: XFieldName\n}\n\nexport const FormInputTime = React.memo<IProps>(\n  ({ fieldName, ...pickerProps }) => {\n    const [field, getProps] = useXFieldForInput(fieldName)\n    return useObserver(() => (\n      <InputTime\n        {...getProps()}\n        onChange={field.setValue}\n        onOpen={field.setTouched}\n        {...pickerProps}\n      />\n    ))\n  },\n)\n","import { Trans } from '@lingui/macro'\nimport { XFieldName } from '@speedlo/xform'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputTime } from './FormInputTime'\n\ninterface IFormInputTimeSpanProps {\n  fieldFrom: XFieldName\n  fieldTo: XFieldName\n}\n\nconst InlineWrap = styled.div`\n  width: 5rem;\n  display: inline-block;\n`\n\nexport const FormInputTimeSpan: React.FC<IFormInputTimeSpanProps> = ({\n  fieldFrom,\n  fieldTo,\n}) => (\n  <>\n    <InlineWrap>\n      <FormInputTime\n        fieldName={fieldFrom}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n    <InlineWrap>\n      <FormInputTime\n        fieldName={fieldTo}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n  </>\n)\n","import { i18nMark } from '@lingui/core'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { useSettings } from '../../../hooks/useSettings'\nimport { i18n } from '../../../i18n'\nimport { ESpecificHourMode } from '../models/BusinessHoursModel'\n\nconst labels = {\n  [ESpecificHourMode.TIMESPAN]: i18nMark('Open between'),\n  [ESpecificHourMode.FULLDAY]: i18nMark('Closed'),\n}\n\nexport const SpecificModeSelector = React.memo(() => {\n  const { businessHours } = useSettings()\n  return useObserver(() => (\n    <SelectControlFlat<ESpecificHourMode>\n      items={[ESpecificHourMode.TIMESPAN, ESpecificHourMode.FULLDAY]}\n      selectedItem={businessHours.specificMode as ESpecificHourMode}\n      formatItem={mode => i18n._(labels[mode])}\n      onSingleSelection={(mode: ESpecificHourMode) =>\n        businessHours.changeSpecificMode(mode)\n      }\n    />\n  ))\n})\n","import { Trans } from '@lingui/macro'\nimport { XForm } from '@speedlo/xform'\nimport { setHours, setMinutes } from 'date-fns'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { FormInput } from '../../../components/forms/FormInput'\nimport { FormInputDate } from '../../../components/forms/FormInputDate'\nimport { FormInputTimeSpan } from '../../../components/forms/FormInputTimeSpan'\nimport { FormSubmitButton } from '../../../components/forms/FormSubmitButton'\nimport { fullDateFormat } from '../../../helpers/formats'\nimport { i18n } from '../../../i18n'\nimport {\n  ESpecificHourMode,\n  ISpecificFormData,\n} from '../models/BusinessHoursModel'\nimport { SpecificModeSelector } from '../molecules/SpecificModeSelector'\n\nconst DateContainer = styled.div`\n  display: inline-block;\n  width: 13rem;\n  margin-left: 1rem;\n  margin-top: 2rem;\n`\n\nconst FormContainer = styled.div`\n  display: inline-block;\n  width: 16rem;\n  min-height: 6rem;\n  margin: 0rem 0 0 1rem;\n  vertical-align: top;\n`\n\nexport const SpecificBusinessHourForm: React.FC = props => {\n  const {\n    settings: { businessHours },\n  } = useRoot()\n  return (\n    <XForm\n      onSubmit={businessHours.submitSpecificHour}\n      initialValues={getInitialValues()}\n    >\n      <DateContainer>\n        <FormInputDate\n          fieldName=\"date\"\n          format={fullDateFormat}\n          minDate={new Date()}\n          fullWidth={true}\n          label={<Trans>Date</Trans>}\n        />\n      </DateContainer>\n\n      <FormContainer>\n        <SpecificModeSelector />\n        <Observer>\n          {() =>\n            businessHours.specificMode === ESpecificHourMode.TIMESPAN ? (\n              <FormInputTimeSpan fieldFrom=\"openAt\" fieldTo=\"closeAt\" />\n            ) : (\n              <Sizer width={13}>\n                <FormInput\n                  fieldName=\"note\"\n                  fullWidth={true}\n                  placeholder={i18n.t`Closing reason`}\n                />\n              </Sizer>\n            )\n          }\n        </Observer>\n      </FormContainer>\n\n      <FormSubmitButton width=\"9rem\">\n        <Trans>Add</Trans>\n      </FormSubmitButton>\n    </XForm>\n  )\n}\n\nfunction getInitialValues(): Partial<ISpecificFormData> {\n  const now = new Date()\n  return {\n    date: now,\n    openAt: setHours(setMinutes(now, 0), 9),\n    closeAt: setHours(setMinutes(now, 0), 20),\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface ISpecificBusinessHourLineProps {\n  bsHour: GSpecificBusinessHour.Fragment\n  onDelete(): void\n}\n\nexport const SpecificBusinessHourLine: React.FC<\n  ISpecificBusinessHourLineProps\n> = ({ bsHour, onDelete }) => (\n  <FlexRow>\n    <FlexColumn fixedWidth>\n      <CanMutate mutationName=\"destroyBusinessHour\">\n        <TouchButtonDelete\n          onDelete={onDelete}\n          confirmText={`${i18n.t`Really remove specific business hour ${bsHour.specificDateLocalized}?`}`}\n        />\n      </CanMutate>\n    </FlexColumn>\n    <FlexColumn fixedWidth width=\"14rem\">\n      {bsHour.specificDateLocalized}\n    </FlexColumn>\n    <FlexColumn fixedWidth width=\"10rem\">\n      {formatLineTime(bsHour)}\n    </FlexColumn>\n    <FlexColumn fixedWidth width=\"10rem\">\n      {bsHour.closed ? <Trans>Closed</Trans> : <Trans>Open</Trans>}\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={1}>{bsHour.closedNote}</FlexColumn>\n  </FlexRow>\n)\n\nfunction formatLineTime(bsHour: GSpecificBusinessHour.Fragment) {\n  return `${bsHour.openAt} - ${bsHour.closeAt}`\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { SpecificBusinessHourLine } from '../molecules/SpecificBusinessHourLine'\nimport { QuerySpecificBusinessHours } from './SpecificBusinessHours.graphql'\n\nconst sortByDate = RM.sort<GSpecificBusinessHour.Fragment>(\n  // @ts-ignore Fix typing\n  RM.ascend(RM.or(RM.prop('specificDate'), RM.not)),\n)\n\nexport const SpecificBusinessHours: React.FC = () => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QuerySpecificBusinessHours\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderFragment={({ businessHours }) =>\n        sortByDate(businessHours).map(bsHour => (\n          <SpecificBusinessHourLine\n            key={bsHour.id}\n            bsHour={bsHour}\n            onDelete={() =>\n              settings.businessHours.deleteSpecificHour(bsHour.id)\n            }\n          />\n        ))\n      }\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../../segments/settings/organisms/SettingsCompanyBranchPicker'\nimport { BusinessHoursForm } from '../organisms/BusinessHoursForm'\nimport { SpecificBusinessHourForm } from '../organisms/SpecificBusinessHourForm'\nimport { SpecificBusinessHours } from '../organisms/SpecificBusinessHours'\n\nexport const BusinessHoursPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Business hours`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <CanQuery queryName=\"businessHours\">\n        <Headline>\n          <MarginBox margin=\"1rem 0\">\n            <Trans>Regular business hours</Trans>\n          </MarginBox>\n        </Headline>\n        <BusinessHoursForm />\n      </CanQuery>\n\n      <Headline>\n        <MarginBox margin=\"1rem 0\">\n          <Trans>Specific business hours</Trans>\n        </MarginBox>\n      </Headline>\n      <SpecificBusinessHours />\n\n      <CanMutate mutationName=\"addSpecialBusinessHour\">\n        <Headline>\n          <MarginBox margin=\"1rem 0\">\n            <Trans>Add specific business hour</Trans>\n          </MarginBox>\n        </Headline>\n        <SpecificBusinessHourForm />\n      </CanMutate>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ROUTE_SETTINGS_HOURS } from '../../settings/settings.routes'\nimport { BusinessHoursPage } from '../pages/BusinessHoursPage'\n\ninterface IProps {}\n\nexport const BusinessHoursRouting: React.FC<IProps> = () => (\n  <Switch>\n    <SecureRoute\n      exact\n      path={ROUTE_SETTINGS_HOURS}\n      component={BusinessHoursPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default BusinessHoursRouting\n"],"sourceRoot":""}