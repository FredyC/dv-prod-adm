{"version":3,"sources":["atoms/CanMutate.tsx","atoms/FlexRowSingle.tsx","atoms/FlexColumn.tsx","atoms/ScrollArea.tsx","molecules/PageLayoutFullHeightItem.tsx","hooks/useDropdownFilter.ts","atoms/Loading.tsx","segments/menu/hooks/useMenu.ts","segments/menu/hooks/useMenuRouting.ts","molecules/TouchButtonEdit.tsx","molecules/TouchButtonVisibility.tsx","atoms/DataTable.tsx","atoms/CanQuery.tsx","atoms/BlockLoader.tsx","atoms/NoteText.tsx","segments/menu/menu.labels.ts","segments/menu/molecules/RecipeCategoryFilter.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipeListPage.tsx","atoms/RelativeLink.tsx","molecules/TouchButtonRemove.tsx","hooks/useSettings.ts","segments/menu/atoms/MenuCreateButton.tsx","segments/menu/molecules/MenuFilterInput.tsx","components/FilterInput/FilterInput.tsx","segments/menu/menu.types.ts","atoms/DataList.tsx"],"names":["CanMutate","observer","mutationName","children","useCanMutate","FlexRowSingle","styled","div","flexWrap","justify","FlexColumn","fixedWidth","width","widthGrowIndex","padding","margin","ScrollArea","StyledPageLayoutFullHeightItem","mediaDesktop","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","column","row","mediaMobile","rowInMobile","forcePercentHeightInMobile","PageHeaderHeight","DefaultSizeUnit","PageLayoutFullHeightItem","withScrollArea","scrollAreaId","forceHeightInMobile","isMobile","useResponsive","id","Sizer","height","heightUnit","useDropdownFilter","getOptionFilter","isSearchable","filterOption","React","useCallback","option","rawInput","length","data","toLocaleLowerCase","includes","Loading","text","useMenuModel","useSettings","menu","CREATE_PATH","useMenuRouting","itemId","history","useRouterContext","itemType","getQueryParam","useQueryParams","getItemRoute","isCreate","getRecipeCreateRoute","recipeType","ROUTE_MENU_RECIPE","getRecipeEditRoute","recipeId","getCategoryCreateRoute","categoryType","ROUTE_MENU_CATEGORY","getCategoryEditRoute","categoryId","getStockCreateRoute","ROUTE_MENU_STOCK","getStockEditRoute","stockId","redirectToCategoryList","replace","redirectToRecipeList","redirectToStockList","TouchButtonEdit","target","Link","RelativeLink","to","SizerButton","TouchButton","icon","Edit","TouchButtonVisibility","isVisible","RemoveRedEye","iconColor","Colors","white","greyMiddle","color","DataTable","items","heightStretch","fullHeight","rowHeight","isLoading","tableProps","rowGetter","index","noRowsRenderer","BlockLoader","renderTable","autoHeight","headerHeight","rowCount","style","outline","disableHeight","scrollElement","window","checkColumnAccess","renderer","canQuery","canMutate","cellProps","result","CanQuery","queryName","ColumnRendererEdit","cellData","ColumnRendererRemove","columnData","TouchButtonRemove","onClick","onRemove","ColumnRendererVisibility","rowData","onToggle","ColumnRendererWithNote","NoteText","noteKey","DataTableEmptyText","i18n","useCanQuery","ScaleOut","keyframes","ScaleOutWebkit","StyledBlockLoader","orange","className","categories","WareCategoryTypeEnum","Main","i18nMark","SideDish","Cover","recipes","getPriceTypesLabels","WarePriceTypeEnum","Delivery","Inhouse","getCategoryTypeLabel","_","getRecipeTypeLabel","RecipeCategoryFilter","menuModel","useQMenuCategoryFilter","branchId","loading","useReaction","setCategoryFilter","SelectControl","key","value","find","idPropEq","categoryFilterId","onChange","options","ARRAY_EMPTY","grouped","RM","groupBy","cat","enum","toString","Object","keys","map","typeString","label","getOptions","isMulti","isClearable","placeholder","getOptionValue","prop","getOptionLabel","propOr","StyledRecipeTypeSelection","RecipeTypeSelection","useState","isOpen","setOpen","onSelect","push","MenuCreateButton","ev","preventDefault","Dialog","open","onClose","DialogTitle","MarginBox","right","green","greyDarkest","RecipeListTable","showEditColumn","showRemoveColumn","showVisibilityColumn","showTypeColumn","Headline","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","cellDataGetter","ColumnRendererCode","flexGrow","ColumnRendererPrice","priceType","TPriceType","prices","foundPrice","pathEq","price","code","currency","formatPrice","type","RecipeListLoader","useQMenuRecipeList","getStash","useMMenuRecipeVisibility","updateVisibility","onVisibilityToggle","visible","optimisticResponse","__typename","filterRecipe","filter","getCodeAndNamePredicate","StyledFilterWithTableContainer","MenuRecipeListPage","FullPageLayout","pageTitle","useBackButton","backRoute","ROUTE_SETTINGS","Card","stretchToParent","SettingsCompanyBranchPicker","MenuFilterInput","from","linkProps","location","resolveLocation","pathname","resolvePathname","RemoveCircleOutline","useRoot","settings","StyledMenuCreateButton","routeTo","button","AddCircle","model","debounceIntervalMs","FilterInput","Search","useDebouncedCallback","setValue","useObserver","inputFullWidth","defaultValue","DataList","renderItem","listProps","rowRenderer","renderList"],"mappings":"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","file":"static/js/39.a88085e7.chunk.js","sourcesContent":["import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useCanMutate } from '../hooks/useAccessGuard'\nimport { NoAccess } from './NoAccess'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate = observer<IProps>(({ mutationName, children }) => {\n  const canMutate = useCanMutate(mutationName)\n  return canMutate ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n})\n","import styled from 'styled-components'\n\ninterface IProps {\n  flexWrap?: string\n  justify?: string\n}\n\nexport const FlexRowSingle = styled.div<IProps>`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: ${({ flexWrap = 'unset' }: IProps) => flexWrap};\n  justify-content: ${({ justify = 'space-between' }: IProps) => justify};\n`\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile, useResponsive } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => {\n  const { isMobile } = useResponsive()\n\n  return (\n    <StyledPageLayoutFullHeightItem\n      column={column}\n      row={row}\n      rowInMobile={rowInMobile}\n      widthInColumns={widthInColumns}\n      withScrollArea={withScrollArea}\n      forcePercentHeightInMobile={forceHeightInMobile}\n    >\n      {withScrollArea && !isMobile ? (\n        <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n      ) : (\n        <Sizer height={100} heightUnit=\"%\">\n          {children}\n        </Sizer>\n      )}\n    </StyledPageLayoutFullHeightItem>\n  )\n}\n","import React from 'react'\n\ntype TOptions<TSelectOption> = {\n  getOptionFilter?(option: TSelectOption): string\n}\n\nexport function useDropdownFilter<TSelectOption>({\n  getOptionFilter,\n}: TOptions<TSelectOption>) {\n  const isSearchable = typeof getOptionFilter === 'function'\n\n  const filterOption = React.useCallback(\n    (option, rawInput) => {\n      if (!getOptionFilter || rawInput.length === 0) {\n        return true\n      }\n      return getOptionFilter(option.data)\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    },\n    [getOptionFilter],\n  )\n\n  return { filterOption, isSearchable }\n}\n","import React from 'react'\n\ninterface ILoadingProps {\n  text?: string\n}\n\nexport const Loading: React.FC<ILoadingProps> = ({ text = '...' }) => (\n  <h1>{text}</h1>\n)\n","import { useSettings } from '../../../hooks/useSettings'\n\nexport function useMenuModel() {\n  const { menu } = useSettings()\n  return menu\n}\n","import { useRouterContext } from '@speedlo/hooks'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { useQueryParams } from '../../../hooks/useQueryParams'\nimport {\n  ROUTE_MENU_CATEGORY,\n  ROUTE_MENU_RECIPE,\n  ROUTE_MENU_STOCK,\n} from '../menu.routes'\nimport { TCategoryType, TRecipeType } from '../menu.types'\n\nconst CREATE_PATH = 'create'\n\nexport function useMenuRouting(itemId?: ID) {\n  const { history } = useRouterContext()\n\n  const { getQueryParam } = useQueryParams()\n  const itemType = getQueryParam('type') as Maybe<WareCategoryTypeEnum>\n\n  const isCreate = itemId === CREATE_PATH\n\n  const getItemRoute = (itemId: ID, itemType?: WareCategoryTypeEnum) => {\n    return itemType ? `${itemId}?type=${itemType}` : itemId\n  }\n\n  const getRecipeCreateRoute = (recipeType: TRecipeType) =>\n    getItemRoute(`${ROUTE_MENU_RECIPE}/${CREATE_PATH}`, recipeType)\n  const getRecipeEditRoute = (recipeId: ID, recipeType?: TRecipeType) =>\n    getItemRoute(`${ROUTE_MENU_RECIPE}/${recipeId}`, recipeType)\n\n  const getCategoryCreateRoute = (categoryType: TCategoryType) =>\n    getItemRoute(`${ROUTE_MENU_CATEGORY}/${CREATE_PATH}`, categoryType)\n  const getCategoryEditRoute = (categoryId: ID, categoryType?: TCategoryType) =>\n    getItemRoute(`${ROUTE_MENU_CATEGORY}/${categoryId}`, categoryType)\n\n  const getStockCreateRoute = () =>\n    getItemRoute(`${ROUTE_MENU_STOCK}/${CREATE_PATH}`)\n  const getStockEditRoute = (stockId: ID) =>\n    getItemRoute(`${ROUTE_MENU_STOCK}/${stockId}`)\n\n  const redirectToRecipeList = () => {\n    history.replace(ROUTE_MENU_RECIPE)\n  }\n  const redirectToCategoryList = () => {\n    history.replace(ROUTE_MENU_CATEGORY)\n  }\n  const redirectToStockList = () => {\n    history.replace(ROUTE_MENU_STOCK)\n  }\n\n  return {\n    itemType,\n    isCreate,\n    getItemRoute,\n    getRecipeCreateRoute,\n    getRecipeEditRoute,\n    getCategoryCreateRoute,\n    getCategoryEditRoute,\n    getStockCreateRoute,\n    getStockEditRoute,\n    redirectToCategoryList,\n    redirectToRecipeList,\n    redirectToStockList,\n  }\n}\n","import { Edit } from '@material-ui/icons'\nimport { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends Omit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.FC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <SizerButton>\n      <TouchButton icon={Edit} {...props} />\n    </SizerButton>\n  </Link>\n)\n","import { RemoveRedEye } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.FC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      icon={RemoveRedEye}\n      iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n      color={Colors.greyMiddle}\n      {...props}\n    />\n  </SizerButton>\n)\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Index,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { BlockLoader } from './BlockLoader'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport { NoteText } from './NoteText'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: RoA<T>\n  rowHeight?: number\n  isLoading?: boolean\n  heightStretch?: boolean\n  fullHeight?: boolean\n}\n\nexport const DataTable = <T extends {}>(props: IDataTableProps<T>) => {\n  const {\n    items,\n    heightStretch = false,\n    fullHeight = false,\n    rowHeight = 60,\n    isLoading = false,\n    children,\n    ...tableProps\n  } = props\n\n  const rowGetter = React.useCallback(({ index }: Index) => items[index], [\n    items,\n  ])\n\n  const noRowsRenderer = React.useCallback(\n    () => (isLoading ? <BlockLoader /> : null),\n    [isLoading],\n  )\n\n  const renderTable = (width: number, height: number) => {\n    return (\n      <Table\n        autoHeight={!heightStretch && !fullHeight}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowCount={items ? items.length : 0}\n        rowHeight={rowHeight}\n        rowGetter={rowGetter}\n        noRowsRenderer={noRowsRenderer}\n        style={{ outline: 'none' }}\n        {...tableProps}\n      >\n        {children}\n      </Table>\n    )\n  }\n\n  if (process.env.NODE_ENV === 'test') {\n    // for tests to work we need to render table with some dimensions (otherwise the virtual table would be 0,0)\n    const columnWidth = 200\n    return renderTable(\n      React.Children.count(children) * columnWidth,\n      items.length * rowHeight,\n    )\n  }\n\n  if (fullHeight) {\n    return (\n      <AutoSizer disableHeight={true}>\n        {({ width }) => renderTable(width, items.length * rowHeight)}\n      </AutoSizer>\n    )\n  }\n\n  if (heightStretch) {\n    return (\n      <AutoSizer>{({ width, height }) => renderTable(width, height)}</AutoSizer>\n    )\n  }\n\n  return (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderTable(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey] || ''}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useCanQuery } from '../hooks/useAccessGuard'\nimport { NoAccess } from './NoAccess'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery = observer<IProps>(({ queryName, children }) => {\n  const canQuery = useCanQuery(queryName)\n  return canQuery ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n})\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nconst ScaleOut = keyframes`\n  0% {\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    opacity: 0;\n  }\n`\n\nconst ScaleOutWebkit = keyframes`\n  0% {\n    -webkit-transform: scale(0);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    opacity: 0;\n  }\n`\n\nconst StyledBlockLoader = styled.div`\n  width: 40px;\n  height: 40px;\n  margin: 100px auto;\n  background-color: ${Colors.orange};\n\n  border-radius: 100%;\n  -webkit-animation: ${ScaleOutWebkit} 1s infinite ease-in-out;\n  animation: ${ScaleOut} 1s infinite ease-in-out;\n`\n\nexport const BlockLoader: React.FC = props => {\n  return (\n    <StyledBlockLoader>\n      <div className=\"bounce1\" />\n      <div className=\"bounce2\" />\n      <div className=\"bounce3\" />\n    </StyledBlockLoader>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum, WarePriceTypeEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menu.types'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport const getPriceTypesLabels = () => ({\n  [WarePriceTypeEnum.Delivery]: i18n.t`Delivery sale`,\n  [WarePriceTypeEnum.Inhouse]: i18n.t`Local sale`,\n})\n\nexport function getCategoryTypeLabel(categoryType?: TCategoryType) {\n  return categoryType ? i18n._(categories[categoryType]) : ''\n}\n\nexport function getRecipeTypeLabel(recipeType?: TRecipeType) {\n  return recipeType ? i18n._(recipes[recipeType]) : ''\n}\n","import { useReaction } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  QMenuCategoryFilterCategories,\n  useQMenuCategoryFilter,\n} from '../../../graph/generated'\nimport { ARRAY_EMPTY } from '../../../helpers/form'\nimport { RM } from '../../../tools/ramda'\nimport { i18n } from '../../../i18n'\nimport { idPropEq } from '../../../tools/ramda'\nimport { useMenuModel } from '../hooks/useMenu'\nimport { getCategoryTypeLabel } from '../menu.labels'\nimport { TCategoryType } from '../menu.types'\n\ntype TCategory = QMenuCategoryFilterCategories\n\nexport const RecipeCategoryFilter = observer(() => {\n  const menuModel = useMenuModel()\n\n  const { data, loading } = useQMenuCategoryFilter({\n    branchId: menuModel.branchId,\n  })\n\n  useReaction(\n    () => menuModel.branchId,\n    () => {\n      menuModel.setCategoryFilter(null)\n    },\n  )\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return ARRAY_EMPTY\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TCategoryType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        key={menuModel.branchId}\n        value={\n          data && data.categories.find(idPropEq(menuModel.categoryFilterId))\n        }\n        onChange={value => {\n          menuModel.setCategoryFilter(value ? (value as TCategory).id : null)\n        }}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={true}\n        isSearchable={true}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.propOr('', 'nameLabel')}\n      />\n    </Sizer>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { MenuCreateButton } from '../atoms/MenuCreateButton'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { TRecipeType } from '../menu.types'\n\nconst StyledRecipeTypeSelection = styled.div`\n  button {\n    margin: 0.5rem 1rem;\n  }\n`\n\nexport const RecipeTypeSelection: React.FC = () => {\n  const [isOpen, setOpen] = React.useState(false)\n  const { history } = useRouterContext()\n  const { getRecipeCreateRoute } = useMenuRouting()\n\n  const onSelect = (recipeType: TRecipeType) => () => {\n    history.push(getRecipeCreateRoute(recipeType))\n  }\n\n  return (\n    <>\n      <MenuCreateButton\n        onClick={ev => {\n          ev.preventDefault()\n          setOpen(true)\n        }}\n      />\n      <Dialog open={isOpen} onClose={() => setOpen(false)}>\n        <StyledRecipeTypeSelection>\n          <DialogTitle>\n            <Trans>Select item type</Trans>\n          </DialogTitle>\n          <Sizer width={14}>\n            <MarginBox right={2}>\n              <TouchButton\n                onClick={onSelect(WareCategoryTypeEnum.Main)}\n                color={Colors.green}\n              >\n                <Trans>Ware</Trans>\n              </TouchButton>\n\n              <TouchButton\n                onClick={onSelect(WareCategoryTypeEnum.SideDish)}\n                color={Colors.greyDarkest}\n              >\n                <Trans>Sidedish</Trans>\n              </TouchButton>\n              <TouchButton\n                onClick={onSelect(WareCategoryTypeEnum.Cover)}\n                color={Colors.greyDarkest}\n              >\n                <Trans>Cover</Trans>\n              </TouchButton>\n            </MarginBox>\n          </Sizer>\n        </StyledRecipeTypeSelection>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport {\n  FMenuRecipePricingFragment,\n  QMenuRecipeListRecipes,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { formatPrice } from '../../../helpers/formats'\nimport { RM } from '../../../tools/ramda'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { TPriceType } from '../menu.types'\n\ntype TRecipe = QMenuRecipeListRecipes\n\ninterface IProps {\n  recipes: RoA<TRecipe>\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.FC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  const { getRecipeEditRoute } = useMenuRouting()\n  return (\n    <DataTable {...props}>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeEditRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n    </DataTable>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = (prices as RoA<FMenuRecipePricingFragment>).find(\n    RM.pathEq(['priceType', 'enum'], priceType),\n  )\n  if (foundPrice) {\n    const {\n      value,\n      currency: { code },\n    } = foundPrice.price\n    return formatPrice(value, code)\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport {\n  useMMenuRecipeVisibility,\n  useQMenuRecipeList,\n} from '../../../graph/generated'\nimport { ARRAY_EMPTY } from '../../../helpers/form'\nimport { useMenuModel } from '../hooks/useMenu'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\n\nexport const RecipeListLoader = observer(() => {\n  const menuModel = useMenuModel()\n  const { getStash, loading } = useQMenuRecipeList({\n    branchId: menuModel.branchId,\n    categoryId: menuModel.categoryFilterId,\n  })\n\n  const [updateVisibility] = useMMenuRecipeVisibility()\n\n  const onVisibilityToggle = React.useCallback(\n    (recipeId: ID, visible: boolean) => {\n      updateVisibility(\n        {\n          recipeId,\n          visible,\n        },\n        {\n          optimisticResponse: {\n            updateVisibility: {\n              __typename: 'Recipe',\n              id: recipeId,\n              visible,\n            },\n          },\n        },\n      )\n    },\n    [updateVisibility],\n  )\n\n  const filterRecipe = menuModel.filter.getCodeAndNamePredicate()\n\n  const recipes = getStash(data => data.recipes.filter(filterRecipe))\n\n  return (\n    <RecipeListTable\n      recipes={recipes || ARRAY_EMPTY}\n      onToggle={onVisibilityToggle}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { ROUTE_SETTINGS } from '../../settings/settings.routes'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeCategoryFilter } from '../molecules/RecipeCategoryFilter'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const StyledFilterWithTableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  & .filter {\n    flex: 0 0 auto;\n  }\n\n  & .table {\n    flex: 1 1 0;\n    min-height: 0;\n  }\n`\n\nexport const MenuRecipeListPage: React.FC = props => (\n  <FullPageLayout\n    pageTitle={i18n.t`Recipe overview`}\n    useBackButton\n    backRoute={ROUTE_SETTINGS}\n  >\n    <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n      <Card stretchToParent={true}>\n        <StyledFilterWithTableContainer>\n          <div className=\"filter\">\n            <FlexRowSingle justify=\"start\" flexWrap=\"wrap\">\n              <FlexColumn>\n                <SettingsCompanyBranchPicker width={20} />\n              </FlexColumn>\n              <FlexColumn>\n                <MenuFilterInput />\n              </FlexColumn>\n              <FlexColumn>\n                <RecipeCategoryFilter />\n              </FlexColumn>\n            </FlexRowSingle>\n            <CanMutate mutationName=\"createRecipe\">\n              <RecipeTypeSelection />\n            </CanMutate>\n          </div>\n          <div className=\"table\">\n            <RecipeListLoader />\n          </div>\n        </StyledFilterWithTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </FullPageLayout>\n)\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import { RemoveCircleOutline } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.FC<IProps> = ({ ...props }) => (\n  <SizerButton>\n    <TouchButton type=\"button\" icon={RemoveCircleOutline} {...props} />\n  </SizerButton>\n)\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useSettings() {\n  const { settings } = useRoot()\n  return settings\n}\n","import { AddCircle } from '@material-ui/icons'\nimport { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => void\n}\n\nconst StyledMenuCreateButton = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const MenuCreateButton: React.FC<IProps> = ({ routeTo, onClick }) => {\n  const button = (\n    <SizerButton>\n      <TouchButton icon={AddCircle} color={Colors.green} onClick={onClick} />\n    </SizerButton>\n  )\n\n  return (\n    <StyledMenuCreateButton>\n      {routeTo ? <Link to={routeTo}>{button}</Link> : button}\n    </StyledMenuCreateButton>\n  )\n}\n","import React from 'react'\n\nimport { FilterInput } from '../../../components/FilterInput/FilterInput'\nimport { i18n } from '../../../i18n'\nimport { useMenuModel } from '../hooks/useMenu'\n\ninterface IProps {}\n\nexport const MenuFilterInput: React.FC<IProps> = () => {\n  const menuModel = useMenuModel()\n  return (\n    <FilterInput\n      placeholder={i18n.t`Filter by name or code`}\n      model={menuModel.filter}\n      debounceIntervalMs={250}\n    />\n  )\n}\n","import { Search, SvgIconComponent } from '@material-ui/icons'\nimport { useDebouncedCallback } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../atoms/FormInputStyled'\nimport { IconLine } from '../../atoms/IconLine'\nimport { Sizer } from '../../atoms/Sizer'\nimport { TFilterInputModel } from './FilterInputModel'\n\ninterface IProps {\n  model: TFilterInputModel\n  icon?: SvgIconComponent\n  placeholder?: string\n  debounceIntervalMs?: number\n}\n\nexport const FilterInput: React.FC<IProps> = ({\n  model,\n  icon = Search,\n  placeholder,\n  debounceIntervalMs = 0,\n}) => {\n  const [setValue] = useDebouncedCallback((value: string) => {\n    model.setValue(value)\n  }, debounceIntervalMs)\n\n  const onChange = React.useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(ev.target.value)\n    },\n    [setValue],\n  )\n  return useObserver(() => (\n    <IconLine icon={icon}>\n      <Sizer width={17}>\n        <FormInputStyled\n          inputFullWidth={true}\n          defaultValue={model.value}\n          onChange={onChange}\n          placeholder={placeholder}\n        />\n      </Sizer>\n    </IconLine>\n  ))\n}\n","import {\n  AllergenEnum,\n  FieldStateEnum,\n  FMenuCategoryInFormFragment,\n  FMenuRecipeInFormFragment,\n  FMenuStockItemFragment,\n  InputRecipeTranslation,\n  InputWareCategoryTranslation,\n  OrderOriginCategoryEnum,\n  WareCategoryTypeEnum,\n  WarePriceTypeEnum,\n  WareUnitEnum,\n} from '../../graph/generated'\nimport { LocaleNumber } from '../../helpers/numeral'\nimport { WithTranslations } from './hooks/useMenuTranslations'\n\nexport {\n  WareCategoryTypeEnum as TCategoryType,\n  WareCategoryTypeEnum as TRecipeType,\n  WarePriceTypeEnum as TPriceType,\n} from '../../graph/generated'\n\nexport type TAssocRecipe = {\n  warePriceType: WarePriceTypeEnum\n  associatedRecipe: ID\n  nameLabel?: string\n  formattedPrice?: string\n}\n\nexport type TIngredient = {\n  stockItem: ID\n  label: string\n  quantity: LocaleNumber\n  unitLabel: string\n  allergens: AllergenEnum[]\n}\n\nexport type TMenuItemType = WareCategoryTypeEnum\n\ninterface WithItemType {\n  itemType: TMenuItemType\n}\n\nexport type TRecipeFormValues = Omit<\n  FMenuRecipeInFormFragment,\n  'recipeType' | 'image'\n> &\n  WithItemType &\n  WithTranslations<InputRecipeTranslation> & {\n    associatedRecipes: TAssocRecipe[]\n    ingredients: TIngredient[]\n    prices: {\n      [priceType in WarePriceTypeEnum]: {\n        value: LocaleNumber\n        vatId: MaybeID\n        currencyCode: string\n      }\n    }\n    image: Blob | string | null\n  }\n\nexport type TCategoryFormValues = Omit<\n  FMenuCategoryInFormFragment,\n  'origins' | 'categoryType'\n> &\n  WithItemType &\n  WithTranslations<InputWareCategoryTranslation> & {\n    origins: OrderOriginCategoryEnum[]\n  }\n\nexport type TStockFormValues = Omit<\n  FMenuStockItemFragment,\n  'allergens' | 'wareUnit'\n> & {\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  List,\n  ListProps,\n  ListRowRenderer,\n  WindowScroller,\n} from 'react-virtualized'\n\ninterface IColumn {\n  size: string\n}\n\ninterface IDataListProps<T> extends Partial<ListProps> {\n  items: RoA<T>\n  columns?: IColumn[]\n  renderItem(item: T, index: number): ReactNode\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport function DataList<T>(props: IDataListProps<T>) {\n  const {\n    items,\n    renderItem,\n    heightStretch = false,\n    rowHeight = 60,\n    ...listProps\n  } = props\n\n  const rowRenderer: ListRowRenderer = React.useCallback(\n    ({ key, style, index }) => (\n      <div key={key} style={style}>\n        {renderItem(items[index], index)}\n      </div>\n    ),\n    [renderItem, items],\n  )\n\n  const renderList = (width: number, height: number) => (\n    <List\n      width={width}\n      height={height}\n      headerHeight={50}\n      rowHeight={rowHeight}\n      rowCount={items ? items.length : 0}\n      rowRenderer={rowRenderer}\n      style={{ outline: 'none' }}\n      {...listProps}\n    />\n  )\n\n  return heightStretch ? (\n    <AutoSizer>{({ width, height }) => renderList(width, height)}</AutoSizer>\n  ) : (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderList(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n"],"sourceRoot":""}