{"version":3,"sources":["atoms/IconLine.tsx","atoms/FormInputTextBox.tsx","atoms/CanMutate.tsx","atoms/Headline.tsx","atoms/SelectControl.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","segments/settings/atoms/WithSettings.tsx","atoms/SelectControlFlat.tsx","atoms/FlexColumn.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/UserCompanyBranches.tsx","organisms/CompanyBranchPicker.tsx","molecules/TouchButtonDelete.tsx","segments/settings/organisms/SettingsCompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","helpers/form.ts","molecules/PageLayoutItem.tsx","molecules/FormSubmit.tsx","atoms/FormInputCheckbox.tsx","helpers/moment.ts","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","segments/branchpreferences/organism/SaveInvoicePreferencesButton.tsx","segments/branchpreferences/organism/InvoicePreferencesForm.tsx","segments/branchpreferences/organism/StoppageForm.tsx","segments/branchpreferences/pages/BranchPreferencesPage.tsx","segments/branchpreferences/routes/BranchPreferencesRoutes.tsx","atoms/FormInputTime.tsx","atoms/FormInputTimeSpan.tsx","segments/businesshours/molecules/SpecificModeSelector.tsx","segments/businesshours/organisms/SpecificBusinessHourForm.tsx","segments/businesshours/molecules/SpecificBusinessHourLine.tsx","segments/businesshours/organisms/SpecificBusinessHours.tsx","segments/businesshours/pages/BusinessHoursPage.tsx","segments/businesshours/routes/BusinessHoursRoutes.tsx","segments/settings/organisms/BusinessHoursButton.tsx","segments/settings/organisms/MenuCategoryButton.tsx","segments/settings/organisms/MenuRecipeButton.tsx","segments/settings/organisms/MenuStockButton.tsx","segments/settings/organisms/MenuStockDepositButton.tsx","segments/settings/organisms/ZonesMenuButton.tsx","segments/settings/pages/SettingsPage.tsx","segments/settings/routes/SettingsRoutes.tsx"],"names":["IconLineWrap","styled_components__WEBPACK_IMPORTED_MODULE_1__","div","withConfig","displayName","DescriptionContainer","labelMargin","labelWidth","labelWidthUnits","_styling__WEBPACK_IMPORTED_MODULE_2__","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_a","icon","label","children","props","__rest","iconComponent","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_3__","iconName","color","greyDark","nativeColor","inputStyle","styled_components__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_5__","MarginAroundFormComponents","invalidInputStyle","FormInputStyled","input","invalid","FormInputTextBox","forwardRef","inputRef","field","inputWidth","DefaultInputWidth","inputWidthUnit","isRequired","validatioName","validate","react_form__WEBPACK_IMPORTED_MODULE_1__","value","Object","validator__WEBPACK_IMPORTED_MODULE_3__","_i18n__WEBPACK_IMPORTED_MODULE_4__","_","fieldApi","_extends","width","onChange","ev","setTouched","setValue","target","ref","__webpack_require__","d","__webpack_exports__","CanMutate","react__WEBPACK_IMPORTED_MODULE_0__","n","_NoAccess__WEBPACK_IMPORTED_MODULE_1__","_RootProvider__WEBPACK_IMPORTED_MODULE_2__","mutationName","user","canMutate","Fragment","Headline","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","h2","light","greyLight","greyDarkest","margin","size","composeStyles","outerStyles","assign","control","base","state","selectProps","minWidth","controlStyles","border","greyMiddle","undefined","menu","menuStyles","zIndex","black","SelectControl","Component","[object Object]","react_select__WEBPACK_IMPORTED_MODULE_1__","this","styles","NoAccess","CanQuery","queryName","canQuery","WithSettings","_atoms_WithRoot__WEBPACK_IMPORTED_MODULE_1__","observe","render","settings","SelectControlFlat","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_helpers_ramda__WEBPACK_IMPORTED_MODULE_3__","ItemStyled","textColor","isSelected","SelectorStyled","isInvalid","isMulti","selectedItem","selectedItems","Array","isArray","length","item","contains","equals","onSingleSelection","onMultiSelection","isItemSelected","without","concat","items","isClearable","formatItem","hasSelection","onClick","updateSelection","id","map","idx","key","defaultProps","prop","getItemValue","FlexColumn","fixedWidth","widthGrowIndex","padding","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","styling","react_default","title","brand","name","UserCompanyBranches","WithRoot","CompanyBranchPicker","breakpoint","onSelectionChange","onSelectionClear","isLoading","branch","includes","find","filter","selected","ramda","CompanyBranchDropdown","TouchButtonDelete","onDelete","confirmText","_TouchButton__WEBPACK_IMPORTED_MODULE_2__","ButtonHeight","height","preventDefault","window","confirm","SettingsCompanyBranchPicker","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_1__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_2__","_atoms_WithSettings__WEBPACK_IMPORTED_MODULE_3__","branchId","selectBranch","CursorContainer","cursor","CompanyBranch","short","showBrand","substr","placeholder","i18n","options","getOptionValue","formatOptionLabel","filterOption","rawInput","data","toLocaleLowerCase","selection","head","isFormValid","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_3__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_2__","FormSubmit","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","green","disabled","_helpers_form__WEBPACK_IMPORTED_MODULE_1__","submitting","e","submitForm","CheckboxStyled","white","TextComponent","FormInputCheckbox","defaultValue","inputProps","checked","Boolean","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","cs","updateLocale","FormInputDateContainer","styled_components__WEBPACK_IMPORTED_MODULE_4__","FormInputDate","minDate","react_form__WEBPACK_IMPORTED_MODULE_3__","react_datepicker__WEBPACK_IMPORTED_MODULE_2__","_helpers_moment__WEBPACK_IMPORTED_MODULE_5__","Date","date","FlexRow","SaveInvoicePreferencesButton","TouchButton","text","SaveButtonContainer","styled_components_browser_esm","InvoicePreferencesForm","es","StoppageForm","BranchPreferencesPage","FullPageLayout","pageTitle","Card","_lingui_react","BranchPreferencesRoutes","match","react_router","SecureRoute","exact","path","NotFoundPage","FormInputTypeContainer","FormInputTime","timeIntervals","timeFormat","react_datepicker_es","moment","time","showTimeSelect","showTimeSelectOnly","dateFormat","LabelToStyled","FormInputTimeSpan","fieldFrom","fieldTo","labels","BusinessHoursModel","TIMESPAN","FULLDAY","SpecificModeSelector","businessHours","specificMode","mode","changeSpecificMode","DateContainer","FormContainer","SpecificBusinessHourForm","onSubmit","submitSpecificHour","defaultValues","now","openAt","esm","closeAt","getDefaultValues","formats","index_module","SpecificBusinessHourLine","bsHour","0","specificDateLocalized","closed","closedNote","formatLineTime","sortByDate","sort","ascend","or","not","SpecificBusinessHours","SpecificBusinessHours_graphql","queryProps","fetchPolicy","renderFragment","deleteSpecificHour","BusinessHoursPage","useBackButton","BusinessHoursRoutes","BusinessHoursButton","red","MenuCategoryButton","turquoise","MenuRecipeButton","MenuStockButton","MenuStockDepositButton","ZonesMenuButton","violet","SettingsPage","PageLayout","layouts","i","x","y","w","h","SettingsRoutes","PageTitle","Route","LazyRoute","lazy","Promise","all","then","bind"],"mappings":"gcAgBA,MAWMA,EAAeC,EAAA,EAAOC,IAAGC,WAAA,CAAAC,YAAA;;EAG/BJ,EAAaI,YAAc,eAE3B,MAAMC,EAAuBJ,EAAA,EAAOC,IAAGC,WAAA,CAAAC,YAAA;YAThB,EAAGE,cAAc,0BAC/BA;eARa,EACpBC,aAAa,EACbC,kBAAkBC,EAAA,EAAQC,mBAEnBH,EAAaC;;;EAmBhBG,EAAmBV,EAAA,EAAOC,IAAGC,WAAA,CAAAC,YAAA;;;;EAK7BQ,EAAcX,EAAA,EAAOC,IAAGC,WAAA,CAAAC,YAAA;;;EAK9BO,EAAiBP,YAAc,mBAExB,MAAMS,EAA+BC,QAAAC,KAC1CA,EAD0CC,MAE1CA,EAF0CT,WAG1CA,EAH0CC,gBAI1CA,EAJ0CF,YAK1CA,EAL0CW,SAM1CA,GAAQH,EACRI,EAAAC,EAAAL,EAAA,0EAEA,IAAIM,EAWJ,OAVIL,IAEAK,EADkB,kBAATL,EACOM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,SAAUV,EAAMW,MAAOjB,EAAA,EAAOkB,WAEpCN,EAAAC,EAAMC,cAAcR,EAAM,CACxCa,YAAanB,EAAA,EAAOkB,YAMxBN,EAAAC,EAAAC,cAACvB,EAAiBkB,EAChBG,EAAAC,EAAAC,cAAClB,EAAD,CACEE,WAAYA,EACZC,gBAAiBA,EACjBF,YAAaA,GAEZc,EACAJ,EAAQK,EAAAC,EAAAC,cAACX,EAAD,KAAcI,GAAuB,MAEhDK,EAAAC,EAAAC,cAACZ,EAAD,KAAmBM,mpBC7DzB,MAAMY,EAAaC,EAAA;;YAEPC,EAAA,EAAQC;EAGdC,EAAoBH,EAAA;;EAIbI,EAAkBJ,EAAA,EAAOK,MAAKhC,WAAA,CAAAC,YAAA;IACvCyB;IACA,EAAGO,aAAqCA,GAAWH;EAG1CI,EAAmBhB,EAAAC,EAAMgB,WACpC,CACExB,EASAyB,SATAC,MACEA,EADFC,WAEEA,EAAaV,EAAA,EAAQW,kBAFvBC,eAGEA,EAAiBZ,EAAA,EAAQrB,gBAH3BkC,WAIEA,EAJFC,cAKEA,EALFC,SAMEA,GAAQhC,EACRI,EAAAC,EAAAL,EAAA,iFAGC,OACHO,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CACEP,MAAOA,EACPM,SACEA,GAAQ,CACPE,GACKJ,GAAcK,OAAAC,EAAA,QAAAD,CAAQD,EAAQ,IACzBG,EAAA,EAAIC,EAAA,+BAAKP,kBAEX,OAIVQ,GACChC,EAAAC,EAAAC,cAACW,EAADoB,EAAA,CACEC,SAAUd,IAAaE,IACvBK,MAAQK,EAASL,OAA4B,IAAnBK,EAASL,MAAmBK,EAASL,MAAd,GACjDQ,SAAUC,IACRJ,EAASK,YAAW,GACpBL,EAASM,SAASF,EAAGG,OAAOZ,QAG9Ba,IAAKtB,GACDrB,0CCrEd4C,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAzC,EAAAyC,EAAAK,EAAAD,GAAAE,EAAAN,EAAA,MAAAO,EAAAP,EAAA,IASO,MAAMG,EAA+B,EAAGK,eAAcrD,eAC3D,MAAMsD,KAAEA,GAAStB,OAAAoB,EAAA,EAAApB,GACjB,OAAOsB,EAAKC,UAAUF,GACpBjD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmD,SAAA,KAAGxD,GAEHI,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,8BAAoCE,yCCdxCR,EAAAC,EAAAC,EAAA,sBAAAU,IAAA,IAAAC,EAAAb,EAAA,IAAAc,EAAAd,EAAA,GAUA,MAOaY,EAAWC,EAAA,EAAOE,GAAE1E,WAAA,CAAAC,YAAA;WAHhB,EAAG0E,SAAQ,KAC1BA,EAAQF,EAAA,EAAOG,UAAYH,EAAA,EAAOI;;YALlB,EAAGC,SAAS,uBAA0CA;eAEpD,EAAGC,UAAoC,YAATA,GAAsB;yTCCxE,MAAMC,EAAgB,CAACC,EAA4B,KAAOnC,OAAAoC,OAAA,GACrDD,EAAW,CACdE,QAAS,CAACC,EAAMC,KACd,MACEC,aAAalC,MAAEA,EAAFmC,SAASA,IACpBF,EACEG,EAAa1C,OAAAoC,OAAA,GACdE,EAAI,CACPK,oBAAqBnF,EAAA,EAAOoF,aAC5BZ,OAAQxE,EAAA,EAAQuB,2BAChBuB,WAAiBuC,IAAVvC,KAAyBA,OAAa,OAC7CmC,cAAuBI,IAAbJ,KAA4BA,OAAgB,SAExD,OAAON,EAAYE,QACfF,EAAYE,QAAQK,EAAeH,GACnCG,GAENI,KAAM,CAACR,EAAMC,KACX,MACEC,aAAalC,MAAEA,IACbiC,EACEQ,EAAU/C,OAAAoC,OAAA,GACXE,EAAI,CACPU,OAAQ,GACRvE,MAAOjB,EAAA,EAAOyF,MACd3C,WAAiBuC,IAAVvC,KAAyBA,OAAa,SAE/C,OAAO6B,EAAYW,KAAOX,EAAYW,KAAKC,EAAYR,GAASQ,KAI9D,MAAOG,UAAkC9E,EAAAC,EAAM8E,UAGnDC,SACE,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAA,EAADhD,EAAA,GAAYiD,KAAKrF,MAAjB,CAAwBsF,OAAQrB,EAAcoB,KAAKrF,MAAMsF,gDChDpE1C,EAAAC,EAAAC,EAAA,sBAAAyC,IAAA3C,EAAA,GAQO,MAAM2C,EAA8B,EAAGxF,cAKxC,wCCbN6C,EAAAC,EAAAC,EAAA,sBAAA0C,IAAA,IAAAxC,EAAAJ,EAAA,GAAAzC,EAAAyC,EAAAK,EAAAD,GAAAE,EAAAN,EAAA,MAAAO,EAAAP,EAAA,IASO,MAAM4C,EAA8B,EAAGC,YAAW1F,eACvD,MAAMsD,KAAEA,GAAStB,OAAAoB,EAAA,EAAApB,GACjB,OAAOsB,EAAKqC,SAASD,GACnBtF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmD,SAAA,KAAGxD,GAEHI,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,2BAAiCuC,yCCdrC7C,EAAAC,EAAAC,EAAA,sBAAA6C,IAAA,IAAA3C,EAAAJ,EAAA,GAAAzC,EAAAyC,EAAAK,EAAAD,GAAA4C,EAAAhD,EAAA,IAUO,MAAM+C,EAAkC,EAAGE,UAASC,YACzD3F,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAUC,QAASA,EAASC,OAAQ,EAAGC,cAAeD,EAAOC,wCCX/DnD,EAAAC,EAAAC,EAAA,sBAAAkD,IAAA,IAAAC,EAAArD,EAAA,IAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAAK,EAAAiD,GAAAtF,EAAAgC,EAAA,IAAAwD,EAAAxD,EAAA,IAyBA,MAAMyD,EAAazF,EAAA,EAAO5B,IAAGC,WAAA,CAAAC,YAAA;;;;WAIlB,EAAGoH,eAA4BA;IAmG1C,UAA6BC,WAAEA,IAC7B,IAAKA,EACH,MAAO,GAET,OAAO3F,EAAA;;;;EAnGH4F,EAAiB5F,EAAA,EAAO5B,IAAGC,WAAA,CAAAC,YAAA;YACrB,EAAGuH,gBACG,IAAdA,EAAqB,gBAAkB;EAGrC,MAAOT,UAEHG,EAAA/F,EAAM8E,UAKdC,eACE,MAAMuB,QAAEA,EAAFC,aAAWA,EAAXC,cAAyBA,GAAkBvB,KAAKrF,MACtD,OAAI0G,EACKG,MAAMC,QAAQF,IAAkBA,EAAcG,OAAS,EAEzC,MAAhBJ,EAETxB,eAAe6B,GACb,MAAMN,QAAEA,EAAFC,aAAWA,EAAXC,cAAyBA,GAAkBvB,KAAKrF,MACtD,OAAI0G,GAAWG,MAAMC,QAAQF,GACpBR,EAAA,EAAGa,SAASD,EAAMJ,GAEpBR,EAAA,EAAGc,OAAOP,EAAcK,GAEjC7B,gBAAgB6B,GACd,MAAMN,QACJA,EADIE,cAEJA,EAAgB,GAFZO,kBAGJA,EAHIC,iBAIJA,GACE/B,KAAKrF,MACI,OAATgH,EACEN,GAAWU,EACbA,EAAiB,IACRD,GACTA,EAAkB,MAEXT,GAAWU,EAChB/B,KAAKgC,eAAeL,GACtBI,EACEP,MAAMC,QAAQF,GACVR,EAAA,EAAGkB,QAAQ,CAACN,GAAOJ,GACnB,CAACI,IAGPI,EACEP,MAAMC,QAAQF,GAAiBR,EAAA,EAAGmB,OAAOX,EAAe,CAACI,IAAS,IAG7DG,GACTA,EAAkBH,GAGtB7B,SACE,MAAMqC,MACJA,EADIC,YAEJA,EAFIhB,UAGJA,GAAY,EAHRH,UAIJA,EAAY,UAJRoB,WAKJA,GACErC,KAAKrF,MACT,OACEmG,EAAA/F,EAAAC,cAACmG,EAAD,CAAgBC,UAAWA,GACxBgB,GACCtB,EAAA/F,EAAAC,cAACgG,EAAD,CACEE,YAAalB,KAAKsC,eAClBrB,UAAWA,EACXsB,QAAS,KACPvC,KAAKwC,gBAAgB,QAGvB1B,EAAA/F,EAAAC,cAAC4F,EAAA,MAAD,CAAO6B,GAAG,iCAGbN,EAAMO,IAAI,CAACf,EAAMgB,IAEd7B,EAAA/F,EAAAC,cAACgG,EAAD,CACE4B,IAAKD,EACLzB,WAAYlB,KAAKgC,eAAeL,GAChCV,UAAWA,EACXsB,QAAS,KACPvC,KAAKwC,gBAAgBb,KAGtBU,EAAYV,OA9ElBhB,EAAAkC,aAAe,CACpBR,WAAYtB,EAAA,EAAG+B,KAAK,eACpBC,aAAchC,EAAA,EAAG+B,KAAK,0CC3C1BvF,EAAAC,EAAAC,EAAA,sBAAAuF,IAUO,MAAMA,EAVbzF,EAAA,IAU0B,EAAO5D,IAAGC,WAAA,CAAAC,YAAA;UAMpC,UAAsBoJ,WACpBA,GAAa,EADOjG,MAEpBA,EAFoBkG,eAGpBA,EAAiB,IAEjB,OAAOD,EAAcjG,SAAeA,IAAU,SAAYkG;aAG5D,UAAoBC,QAAEA,EAAU,YAC9B,OAAOA;YAGT,UAAmBzE,OAAEA,EAAS,KAC5B,OAAOA;wkBCtBF,MAAM0E,EAAgE7I,QAAA8I,SAC3EA,EAD2EC,eAE3EA,EAF2EC,iBAG3EA,EAH2EtC,UAI3EA,EAAYuC,EAAA,EAAO7D,OAAKpF,EACxBI,EAAAC,EAAAL,EAAA,8DACI,OACJkJ,EAAA1I,EAAAC,cAAC2F,EAAA,EAAD5D,EAAA,CACEoF,MAAOkB,EACP/B,aAAcgC,EACd/B,cAAegC,EACftC,UAAWA,EACXoB,WAAYV,GAAQ8B,EAAA1I,EAAAC,cAAA,QAAM0I,MAAO/B,EAAKgC,MAAMC,MAAOjC,EAAKiC,OACpDjJ,iBCXD,MAAMkJ,EAA4D,EACvEpD,YAEAgD,EAAA1I,EAAAC,cAAC8I,EAAA,EAAD,CACErD,OAAQ,EAAGzC,UACTA,EAAKqF,SAAW5C,EAAOzC,EAAKqF,UAAU,GAAS5C,EAAO,IAAI,KCdhElD,EAAAC,EAAAC,EAAA,sBAAAsG,IAgCO,MAAMA,EAA4D,EACvEC,aAAa,EACbT,mBAAmB,GACnBlC,WAAU,EACVe,eAAc,EACdnB,YACAgD,oBACAC,sBAEAT,EAAA1I,EAAAC,cAAC6I,EAAD,CACEpD,OAAQ,CAAC4C,EAAUc,KACjB,MAAMjD,EAAakD,GAAUb,EAAiBc,SAASD,EAAO3B,IACxD9H,EAAkC,CACtCsG,YACAmB,cACAf,UACA8C,YACAd,WACAC,eAAgBa,EAAY,KAAOd,EAASiB,KAAKpD,GACjDqC,iBAAkBY,EAAY,GAAKd,EAASkB,OAAOrD,GACnDpB,kBAAkB0E,GACC,OAAbA,GAAqBN,EACvBA,IACsB,OAAbM,GAAqBP,GAC9BA,EAAkB,CAACO,EAAS/B,IAAK,CAAC+B,KAGtC1E,iBAAiB0E,GACS,IAApBA,EAAS9C,QAAgBwC,EAC3BA,IACSM,EAAS9C,QAAUuC,GAC5BA,EAAkBO,EAAS9B,IAAI+B,EAAA,EAAG3B,KAAK,OAAQ0B,KAI/C3E,EACJwD,EAAS3B,OAASsC,EACdU,EAAA,EACAtB,EACN,OAAOK,EAAA1I,EAAAC,cAAC6E,EAAclF,ylBC7DrB,MAAMgK,EAAyDpK,QAAAqK,SACpEA,EADoEC,YAEpEA,GAAWtK,EACXI,EAAAC,EAAAL,EAAA,4BACI,OACJO,EAAAC,EAAAC,cAAC8J,EAAA,EAAD/H,EAAA,CACE7B,SAAS,SACTC,MAAOkD,EAAA,EAAOiB,WACdtC,MAAOqB,EAAA,EAAQ0G,aACfC,OAAQ3G,EAAA,EAAQ0G,aAChBxC,QAASrF,IACPA,EAAG+H,iBACEJ,IAAeK,OAAOC,QAAQN,IACjCD,MAGAjK,wCC1BR4C,EAAAC,EAAAC,EAAA,sBAAA2H,IAAA,IAAAzH,EAAAJ,EAAA,GAAAzC,EAAAyC,EAAAK,EAAAD,GAAA0H,EAAA9H,EAAA,MAAA+H,EAAA/H,EAAA,MAAAgI,EAAAhI,EAAA,MAMO,MAAM6H,EAAyC,IACpDtK,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CACE9E,OAAQC,GACN5F,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAU7K,KAAK,wBACbM,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CACE/B,iBAAkB7C,EAAS8E,SAAW,CAAC9E,EAAS8E,eAAYjG,EAC5D0E,kBAAmB,EAAEG,KAAY1D,EAAS+E,aAAarB,GACvDhC,aAAa,8DCThB,MAAMsD,QAAkB,EAAO/L,IAAGC,WAAA,CAAAC,YAAA;YAC7B,EAAG8L,SAAS,aAAsCA;ECOjDC,EAAgD,EAC3DxB,SACA7B,UACAsD,SAAQ,EACRC,aAAY,KAEZrC,EAAA1I,EAAAC,cAAC0K,EAAD,CAAiBC,OAAO,UAAUpD,QAASA,GACxCsD,EACCzB,EAAOR,KAAKmC,OAAO,EAAG,GAEtBtC,EAAA1I,EAAAC,cAAAyI,EAAA1I,EAAAmD,SAAA,KACEuF,EAAA1I,EAAAC,cAAA,YAAOoJ,EAAOR,MACbkC,GAAarC,EAAA1I,EAAAC,cAAA,iBAAYoJ,EAAOT,MAAMC,qjBCVxC,MAAMc,EAA4CnK,QAAA8I,SACvDA,EADuDC,eAEvDA,EAFuDxB,kBAGvDA,EAHuDyB,iBAIvDA,EAJuDxB,iBAKvDA,GAAgBxH,EAChBI,EAAAC,EAAAL,EAAA,yFACI,OACJkJ,EAAA1I,EAAAC,cAAC4E,EAAA,EAAD7C,EAAA,CACEN,MAAO9B,EAAM0G,QAAUkC,EAAmBD,EAC1C0C,YAAaC,EAAA,EAAIpJ,EAAA,sBACjBqJ,QAAS7C,EACT8C,eAAgB1B,EAAA,EAAG3B,KAAK,MACxBsD,kBAAmBhC,GAAUX,EAAA1I,EAAAC,cAAC4K,EAAD,CAAexB,OAAQA,IACpDiC,aAAc,CAACjC,EAAQkC,IACrBlC,EAAOmC,KAAK3C,KACT4C,oBACAnC,SAASiC,EAASE,qBAEvBvJ,SAAUwJ,IACJ9L,EAAM0G,SAAWU,GAAoBP,MAAMC,QAAQgF,IACrD1E,EAAiB0E,IAEd9L,EAAM0G,SAAWS,IAChBN,MAAMC,QAAQgF,GAChB3E,EAAkB2C,EAAA,EAAGiC,KAAKD,IAAc,MAExC3E,EAAkB2E,GAAa,SAIjC9L,wCC5CR4C,EAAAC,EAAAC,EAAA,sBAAAkJ,IAAApJ,EAAAC,EAAAC,EAAA,sBAAAmJ,IAAA,IAAAC,EAAAtJ,EAAA,MAAAuJ,EAAAvJ,EAAA,IAIM,SAAUoJ,EAAYI,GAC1B,OAAQA,EAAUC,QAAmD,IAAzCtK,OAAOuK,KAAKF,EAAUC,QAAQtF,OAGtD,SAAUkF,EAAmBM,GACjC,OAAQzK,GACNC,OAAAmK,EAAA,QAAAnK,CAAQD,EAAQ,IAAMqK,EAAA,EAAIjK,EAAA,+BAAKqK,cAA8B,kZCE1D,MAAMC,EAAmD5M,QAAA6M,MAC9DA,EAD8DC,UAE9DA,EAF8DhH,SAG9DA,EAH8DpC,UAI9DA,GAAS1D,EACTI,EAAAC,EAAAL,EAAA,8CAEA,IAAI+M,EAAaF,EACftM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAMC,GAAIJ,GAAQ1K,OAAAiB,EAAA,cAAAjB,CAAc2K,IAEhC3K,OAAAiB,EAAA,cAAAjB,CAAc2K,GAShB,OANIhH,IACFiH,EAAaxM,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAUrH,UAAWC,GAAWiH,IAE3CrJ,IACFqJ,EAAaxM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAW3J,aAAcE,GAAYqJ,IAE7CxM,EAAAC,EAAAC,cAAA,MAASL,EAAQ2M,imBCrBnB,MAAMK,EAAiCpN,QAAAG,SAAEA,EAAFkN,KAAYA,GAAIrN,EAAEI,EAAAC,EAAAL,EAAA,qBAAe,OAC7EO,EAAAC,EAAAC,cAAC6M,EAAA,EAAD9K,EAAA,CACE5B,MAAO2M,EAAA,EAAOC,MACdC,UAAWtL,OAAAuL,EAAA,EAAAvL,CAAYkL,IAASA,EAAKM,WACrC3F,QAAS4F,IACPA,EAAElD,iBACF2C,EAAKQ,WAAWD,KAEdxN,GAEHD,gmBCVL,MAAM2N,EAAiB3L,OAAAnB,EAAA,EAAAmB,CAAOF,EAAA,UAAS5C,WAAA,CAAAC,YAAA;;;sBAGjBiO,EAAA,EAAOQ;sBACPR,EAAA,EAAOxI;;mBAEVwI,EAAA,EAASS;;;YAGhBT,EAAA,EAAQrM;;;wBAGIqM,EAAA,EAAOQ;wBACPR,EAAA,EAAOxI;;;;;;;;aAQlBwI,EAAA,EAAO1M;;;EAKdf,EAAckB,EAAA,EAAO5B,IAAGC,WAAA,CAAAC,YAAA;;;;EAMjB2O,EAAwCjO,QAAA0B,MACnDA,EADmDxB,MAEnDA,EAFmDgO,aAGnDA,EAHmD/N,SAInDA,GAAQH,EACRmO,EAAA9N,EAAAL,EAAA,6CACI,OACJO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmD,SAAA,KACEpD,EAAAC,EAAAC,cAACqN,EAADtL,EAAA,CACEd,MAAOA,EACP0M,QAASC,QAAQH,IACbC,IAELjO,GAASK,EAAAC,EAAAC,cAACX,EAAD,KAAcI,wCCxD5B,IAAAoO,EAAAtL,EAAA,MAAAuL,EAAAvL,EAAAK,EAAAiL,GAEA,MAAME,EAAKxL,EAAQ,MAEnBuL,EAAA/N,EAAOiO,aAAa,KAAMD,GAEXtL,EAAA,EAAAqL,EAAf,mnBCWA,MAAMG,EAAyBC,EAAA,EAAOvP,IAAGC,WAAA,CAAAC,YAAA;;;;aAI5B,EAAGmD,QAAQ,UAAiCA;;EAGzDiM,EAAuBpP,YAAc,yBAE9B,MAAMsP,EAAoC5O,QAAA0B,MAC/CA,EAD+CwM,aAE/CA,EAF+CvM,WAG/CA,EAH+CkN,QAI/CA,GAAO7O,EACPI,EAAAC,EAAAL,EAAA,iDACI,OACJuG,EAAA/F,EAAAC,cAACiO,EAAD,CAAwBjM,MAAOd,GAC7B4E,EAAA/F,EAAAC,cAACqO,EAAA,MAAD,CACEpN,MAAOA,EACPwM,aAAcA,EACdhI,OAAQ3D,GACNgE,EAAA/F,EAAAC,cAACsO,EAAA,EAADvM,EAAA,CACEyH,SAAU9H,OAAA6M,EAAA,EAAA7M,CAAOI,EAASL,OAAS,IAAI+M,MACvCvM,SAAUwM,GAAQ3M,EAASM,SAASqM,GACpCL,aAAqB7J,IAAZ6J,OAAwB7J,EAAY7C,OAAA6M,EAAA,EAAA7M,CAAO0M,IAChDzO,2CC1Cd4C,EAAAC,EAAAC,EAAA,sBAAAiM,IAAA,IAAAtL,EAAAb,EAAA,IAAAc,EAAAd,EAAA,GAIO,MAAMmM,EAAUtL,EAAA,EAAOzE,IAAGC,WAAA,CAAAC,YAAA;;;;6BAIJwE,EAAA,EAAOiB;;4MCF7B,MAAMqK,EAA0ChP,GACrD8I,EAAA1I,EAAAC,cAAC4O,EAAA,EAAD,CAAaC,KAAM5D,EAAA,EAAIpJ,EAAA,4BAA8B1B,MAAOqI,EAAA,EAAOuE,QCE/D+B,EAAsBC,EAAA,EAAOpQ,IAAGC,WAAA,CAAAC,YAAA;;;EAKzBmQ,EAETrP,GACF8I,EAAA1I,EAAAC,cAACiP,EAAA,KAAD,KACExG,EAAA1I,EAAAC,cAACc,EAAA,EAAD,CAAkBG,MAAM,UAAU+J,YAAY,mBAC9CvC,EAAA1I,EAAAC,cAAA,WACAyI,EAAA1I,EAAAC,cAACc,EAAA,EAAD,CAAkBG,MAAM,SAAS+J,YAAY,YAC7CvC,EAAA1I,EAAAC,cAACc,EAAA,EAAD,CAAkBG,MAAM,WAAW+J,YAAY,aAE/CvC,EAAA1I,EAAAC,cAAC8O,EAAD,KACErG,EAAA1I,EAAAC,cAAC2O,EAAD,sBChBC,MAAMO,EAA8CvP,GACzD8I,EAAA1I,EAAAC,cAACiP,EAAA,KAAD,KACExG,EAAA1I,EAAAC,cAACwN,EAAA,EAAD,CACEvM,MAAM,qBACNxB,MAAOwL,EAAA,EAAIpJ,EAAA,4CAEb4G,EAAA1I,EAAAC,cAAA,WACAyI,EAAA1I,EAAAC,cAACwN,EAAA,EAAD,CACEvM,MAAM,WACNxB,MAAOwL,EAAA,EAAIpJ,EAAA,kCCJJsN,EAETxP,GACF8I,EAAA1I,EAAAC,cAACoP,EAAA,EAAD,CAAgBC,UAAWpE,EAAA,EAAIpJ,EAAA,uBAC7B4G,EAAA1I,EAAAC,cAACsP,EAAA,EAAD,KACE7G,EAAA1I,EAAAC,cAACoK,EAAA,EAAD,MACA3B,EAAA1I,EAAAC,cAACmD,EAAA,EAAD,KACEsF,EAAA1I,EAAAC,cAACuP,EAAA,MAAD,CAAO9H,GAAG,iCAEZgB,EAAA1I,EAAAC,cAACkP,EAAD,MAEAzG,EAAA1I,EAAAC,cAACmD,EAAA,EAAD,KACEsF,EAAA1I,EAAAC,cAACuP,EAAA,MAAD,CAAA9H,GAAA,mCAEFgB,EAAA1I,EAAAC,cAACgP,EAAD,QClBOQ,EAA6C,EAAGC,WAC3DhH,EAAA1I,EAAAC,cAAC0P,EAAA,EAAD,KACEjH,EAAA1I,EAAAC,cAAC2P,EAAA,EAAD,CACEC,OAAO,EACPC,KAAMJ,EAAMI,KACZxD,UAAW8C,IAEb1G,EAAA1I,EAAAC,cAAC0P,EAAA,EAAD,CAAOrD,UAAWyD,EAAA,4ECDtB,MAAMC,EAAyBhB,EAAA,EAAOpQ,IAAGC,WAAA,CAAAC,YAAA;;;;;;;;;;;;;;;;;;EAmBzCkR,EAAuBlR,YAAc,yBAE9B,MAAMmR,EAAgD,EAC3D/O,QACAgP,gBAAgB,GAChBC,aAAa,QAEbzH,EAAA1I,EAAAC,cAAC+P,EAAD,KACEtH,EAAA1I,EAAAC,cAACiP,EAAA,MAAD,CACEhO,MAAOA,EACPwE,OAAQ3D,GACN2G,EAAA1I,EAAAC,cAACmQ,EAAA,EAAD,CACE3G,SAAU9H,OAAA0O,EAAA,EAAA1O,CAAOI,EAASL,OAAS,IAAI+M,MACvCvM,SAAUoO,GAAQvO,EAASM,SAASiO,GACpCC,gBAAgB,EAChBC,oBAAoB,EACpBN,cAAeA,EACfO,WAAYN,EACZA,WAAYA,OCxChB7Q,EAAc0P,EAAA,EAAOpQ,IAAGC,WAAA,CAAAC,YAAA;;;EAKxB4R,EAAgB/O,OAAAqN,EAAA,EAAArN,CAAOrC,GAAYT,WAAA,CAAAC,YAAA;;EAI5B6R,EAAwD,EACnEC,YACAC,aAEAnI,EAAA1I,EAAAC,cAAAyI,EAAA1I,EAAAmD,SAAA,KACGyN,GACClI,EAAA1I,EAAAC,cAAAyI,EAAA1I,EAAAmD,SAAA,KACEuF,EAAA1I,EAAAC,cAACX,EAAD,KACEoJ,EAAA1I,EAAAC,cAACuP,EAAA,MAAD,CAAO9H,GAAG,yBAEZgB,EAAA1I,EAAAC,cAACgQ,EAAD,CAAe/O,MAAO0P,KAGzBC,GACCnI,EAAA1I,EAAAC,cAAAyI,EAAA1I,EAAAmD,SAAA,KACEuF,EAAA1I,EAAAC,cAACyQ,EAAD,KACEhI,EAAA1I,EAAAC,cAACuP,EAAA,MAAD,CAAO9H,GAAG,uBAEZgB,EAAA1I,EAAAC,cAACgQ,EAAD,CAAe/O,MAAO2P,kEC/B9B,MAAMC,EAAS,CACb/L,CAACgM,EAAA,EAAkBC,UAAWrP,OAAA6N,EAAA,SAAA7N,CAAS,gBACvCoD,CAACgM,EAAA,EAAkBE,SAAUtP,OAAA6N,EAAA,SAAA7N,CAAS,WAG3BuP,EAAkC,IAC7CxI,EAAA1I,EAAAC,cAACsF,EAAA,EAAD,CACEE,SAAS,EACTC,OAAQ,EAAGyL,mBACTzI,EAAA1I,EAAAC,cAAC2F,EAAA,EAAD,CACEwB,MAAO,CAAC2J,EAAA,EAAkBC,SAAUD,EAAA,EAAkBE,SACtD1K,aAAc4K,EAAcC,aAC5B9J,WAAY+J,GAAQnG,EAAA,EAAKpJ,EAAEgP,EAAOO,IAClCtK,kBAAoBsK,GAClBF,EAAcG,mBAAmBD,OCHrCE,EAAgBvC,EAAA,EAAOpQ,IAAGC,WAAA,CAAAC,YAAA;;;;EAM1B0S,EAAgBxC,EAAA,EAAOpQ,IAAGC,WAAA,CAAAC,YAAA;;;;;;EAQnB2S,EAAsC7R,GACjD8I,EAAA1I,EAAAC,cAAC8I,EAAA,EAAD,CACEtD,SAAS,EACTC,OAAQ,EAAGC,UAAYwL,oBACrBzI,EAAA1I,EAAAC,cAACiP,EAAA,KAAD,CACEwC,SAAUP,EAAcQ,mBACxBC,cAwCR,WACE,MAAMC,EAAM,IAAIpD,KAChB,MAAO,CACLC,KAAMmD,EACNC,OAAQnQ,OAAAoQ,EAAA,EAAApQ,CAASA,OAAAoQ,EAAA,EAAApQ,CAAWkQ,EAAK,GAAI,GACrCG,QAASrQ,OAAAoQ,EAAA,EAAApQ,CAASA,OAAAoQ,EAAA,EAAApQ,CAAWkQ,EAAK,GAAI,KA7CnBI,GACfvM,OAAQmH,GACNnE,EAAA1I,EAAAC,cAAAyI,EAAA1I,EAAAmD,SAAA,KACEuF,EAAA1I,EAAAC,cAACsR,EAAD,KACE7I,EAAA1I,EAAAC,cAACmO,EAAA,EAAD,CACElN,MAAM,OACNuP,WAAYyB,EAAA,EACZ7D,QAAS,IAAII,KACbtN,WAAW,WAIfuH,EAAA1I,EAAAC,cAACuR,EAAD,KACE9I,EAAA1I,EAAAC,cAACiR,EAAD,MACAxI,EAAA1I,EAAAC,cAAA,WACAyI,EAAA1I,EAAAC,cAACkS,EAAA,EAAD,KACG,IACChB,EAAcC,eAAiBL,EAAA,EAAkBC,SAC/CtI,EAAA1I,EAAAC,cAAC0Q,EAAD,CAAmBC,UAAU,SAASC,QAAQ,YAE9CnI,EAAA1I,EAAAC,cAACc,EAAA,EAAD,CACEG,MAAM,OACN+J,YAAaC,EAAA,EAAIpJ,EAAA,kBACjBX,WAAY,OAOtBuH,EAAA1I,EAAAC,cAAC2M,EAAA,EAAD,CAAYC,KAAMA,EAAM5K,MAAM,QAC3BiJ,EAAA,EAAIpJ,EAAA,uDCxDZ,MAAMsQ,GAET,EAAGC,SAAQxI,cACbnB,EAAA1I,EAAAC,cAAC0O,EAAA,EAAD,KACEjG,EAAA1I,EAAAC,cAACgI,EAAA,EAAD,CAAYC,YAAY,GACtBQ,EAAA1I,EAAAC,cAAC0C,EAAA,EAAD,CAAWK,aAAa,uBACtB0F,EAAA1I,EAAAC,cAAC2J,EAAA,EAAD,CACEC,SAAUA,EACVC,eAAgBoB,EAAA,EAAIpJ,EAAA,6CAAJwQ,EACdD,EAAOE,8BAKf7J,EAAA1I,EAAAC,cAACgI,EAAA,EAAD,CAAYC,YAAY,EAAMjG,MAAM,SACjCoQ,EAAOE,uBAEV7J,EAAA1I,EAAAC,cAACgI,EAAA,EAAD,CAAYE,eAAgB,GAIhC,SAAwBkK,GACtB,GAAIA,EAAOG,OACT,OAAOH,EAAOI,WAEhB,SAAUJ,EAAOP,YAAYO,EAAOL,UARFU,CAAeL,oOCvBnD,MAAMM,GAAajJ,EAAA,EAAGkJ,KACpBlJ,EAAA,EAAGmJ,OAAOnJ,EAAA,EAAGoJ,GAAGpJ,EAAA,EAAG3B,KAAK,gBAAiB2B,EAAA,EAAGqJ,OAGjCC,GAAmCpT,GAC9C8I,EAAA1I,EAAAC,cAAC8I,EAAA,EAAD,CACErD,OAAQ,EAAGC,cACT+C,EAAA1I,EAAAC,cAACgT,GAAA,EAADjR,GAAA,GACM2D,EAASuN,WADf,CAEEC,YAAY,oBACZC,eAAgB,EAAGjC,mBACjBwB,GAAWxB,GAAexJ,IAAI0K,GAC5B3J,EAAA1I,EAAAC,cAACmS,GAAD,CACEvK,IAAKwK,EAAO3K,GACZ2K,OAAQA,EACRxI,SAAU,IACRlE,EAASwL,cAAckC,mBAAmBhB,EAAO3K,YCZpD4L,GAA+B,IAC1C5K,EAAA1I,EAAAC,cAACoP,EAAA,EAAD,CAAgBC,UAAWpE,EAAA,EAAIpJ,EAAA,kBAAoByR,eAAe,GAChE7K,EAAA1I,EAAAC,cAACsP,EAAA,EAAD,KACE7G,EAAA1I,EAAAC,cAACoK,EAAA,EAAD,MAIA3B,EAAA1I,EAAAC,cAACmD,EAAA,EAAD,KACEsF,EAAA1I,EAAAC,cAACuP,EAAA,MAAD,CAAA9H,GAAA,6BAEFgB,EAAA1I,EAAAC,cAAC+S,GAAD,MAEAtK,EAAA1I,EAAAC,cAAC0C,EAAA,EAAD,CAAWK,aAAa,0BACtB0F,EAAA1I,EAAAC,cAACmD,EAAA,EAAD,KACEsF,EAAA1I,EAAAC,cAACuP,EAAA,MAAD,CAAA9H,GAAA,gCAEFgB,EAAA1I,EAAAC,cAACwR,EAAD,SCnBK+B,GAAyC,EAAG9D,WACvDhH,EAAA1I,EAAAC,cAAC0P,EAAA,EAAD,KACEjH,EAAA1I,EAAAC,cAAC2P,EAAA,EAAD,CAAaC,OAAO,EAAMC,KAAMJ,EAAMI,KAAMxD,UAAWgH,KACvD5K,EAAA1I,EAAAC,cAAC0P,EAAA,EAAD,CAAOrD,UAAWyD,EAAA,8BCNf,MAAM0D,GAAiC7T,GAC5C8I,EAAA1I,EAAAC,cAAC4O,EAAA,EAAD,CACEC,KAAM5D,EAAA,EAAIpJ,EAAA,kBACV3B,SAAS,WACTC,MAAOqI,EAAA,EAAOiL,MCJLC,GAAgC/T,GAC3C8I,EAAA1I,EAAAC,cAAC4O,EAAA,EAAD,CACEC,KAAM5D,EAAA,EAAIpJ,EAAA,cACV3B,SAAS,SACTC,MAAOqI,EAAA,EAAOmL,YCJLC,GAA8BjU,GACzC8I,EAAA1I,EAAAC,cAAC4O,EAAA,EAAD,CACEC,KAAM5D,EAAA,EAAIpJ,EAAA,WACV3B,SAAS,oBACTC,MAAOqI,EAAA,EAAOmL,YCJLE,GAA6BlU,GACxC8I,EAAA1I,EAAAC,cAAC4O,EAAA,EAAD,CACEC,KAAM5D,EAAA,EAAIpJ,EAAA,kBACV3B,SAAS,aACTC,MAAOqI,EAAA,EAAOmL,YCJLG,GAAoCnU,GAC/C8I,EAAA1I,EAAAC,cAAC4O,EAAA,EAAD,CACEC,KAAM5D,EAAA,EAAIpJ,EAAA,iBACV3B,SAAS,kBACTC,MAAOqI,EAAA,EAAOmL,YCFLI,GAAoDpU,GAC/D8I,EAAA1I,EAAAC,cAAC4O,EAAA,EAAD,CACEC,KAAM5D,EAAA,EAAIpJ,EAAA,kBACV3B,SAAS,gBACTC,MAAOqI,EAAA,EAAOwL,SCcX,MAAMC,GAA8CtU,GACzD8I,EAAA1I,EAAAC,cAACkU,GAAA,EAAD,CAAYC,QAZL,CACL,CAAEC,EAAG,gBAAiBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC3C,CAAEJ,EAAG,cAAeC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACzC,CAAEJ,EAAG,YAAaC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACvC,CAAEJ,EAAG,aAAcC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACxC,CAAEJ,EAAG,eAAgBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC1C,CAAEJ,EAAG,YAAaC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACvC,CAAEJ,EAAG,mBAAoBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,KAM9C/L,EAAA1I,EAAAC,cAACmM,GAAA,EAAD,CACEvE,IAAI,gBACJwE,MAAM,0BACNC,UAAWmH,GACXnO,SAAS,kBAOXoD,EAAA1I,EAAAC,cAACmM,GAAA,EAAD,CACEvE,IAAI,aACJwE,MAAM,wBACNC,UAAWuH,GACXvO,SAAS,YAEXoD,EAAA1I,EAAAC,cAACmM,GAAA,EAAD,CACEvE,IAAI,eACJwE,MAAM,0BACNC,UAAWqH,GACXrO,SAAS,mBAEXoD,EAAA1I,EAAAC,cAACmM,GAAA,EAAD,CACEvE,IAAI,YACJwE,MAAM,uBACNC,UAAWwH,GACXxO,SAAS,eAEXoD,EAAA1I,EAAAC,cAACmM,GAAA,EAAD,CACEvE,IAAI,mBACJwE,MAAM,+BACNC,UAAWyH,GACX7Q,UAAU,0BAEZwF,EAAA1I,EAAAC,cAACmM,GAAA,EAAD,CACEvE,IAAI,YACJwE,MAAM,kBACNC,UAAW0H,GACX1O,SAAS,WCnEf9C,EAAAC,EAAAC,EAAA,mCAAAgS,KAcO,MAAMA,GAAkD,EAAGhF,WAChEhH,EAAA1I,EAAAC,cAAAyI,EAAA1I,EAAAmD,SAAA,KACEuF,EAAA1I,EAAAC,cAAC0U,EAAA,EAAUC,MAAX,CAAiB9E,KAAMJ,EAAMI,KAAMnH,MAAOuC,EAAA,EAAIpJ,EAAA,cAC9C4G,EAAA1I,EAAAC,cAAC0P,EAAA,EAAD,KACEjH,EAAA1I,EAAAC,cAAC2P,EAAA,EAAD,CAAaC,OAAO,EAAMC,KAAMJ,EAAMI,KAAMxD,UAAW4H,KACvDxL,EAAA1I,EAAAC,cAAC4U,EAAA,EAAD,CACE/E,QAASJ,EAAMI,YACfxD,UAAW5D,EAAA1I,EAAM8U,KAAK,IACpBC,QAAAC,IAAA,CAAAxS,EAAA4K,EAAA,IAAA5K,EAAA4K,EAAA,IAAA5K,EAAA4K,EAAA,MAAA6H,KAAAzS,EAAA0S,KAAA,eAGJxM,EAAA1I,EAAAC,cAAC4U,EAAA,EAAD,CACE/E,QAASJ,EAAMI,aACfxD,UAAW5D,EAAA1I,EAAM8U,KAAK,IACpBC,QAAAC,IAAA,CAAAxS,EAAA4K,EAAA,IAAA5K,EAAA4K,EAAA,IAAA5K,EAAA4K,EAAA,MAAA6H,KAAAzS,EAAA0S,KAAA,eAGJxM,EAAA1I,EAAAC,cAAC0P,EAAA,EAAD,CACEG,QAASJ,EAAMI,qBACfxD,UAAWkH,KAEb9K,EAAA1I,EAAAC,cAAC0P,EAAA,EAAD,CACEG,QAASJ,EAAMI,mBACfxD,UAAWmD,IAEb/G,EAAA1I,EAAAC,cAAC0P,EAAA,EAAD,CAAOrD,UAAWyD,EAAA,MAKTrN,EAAA","file":"static/js/51.21c00e2c.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 1 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 0 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.SFC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport styled, { css } from 'styled-components'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { Spacing } from '../styling'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  inputWidth?: number\n  inputWidthUnit?: string\n  isRequired?: boolean\n  validatioName?: string\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nconst inputStyle = css`\n  outline: none;\n  margin: ${Spacing.MarginAroundFormComponents};\n`\n\nconst invalidInputStyle = css`\n  border: '1px red solid';\n`\n\nexport const FormInputStyled = styled.input`\n  ${inputStyle};\n  ${({ invalid }: { invalid?: boolean }) => invalid && invalidInputStyle};\n`\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputWidth = Spacing.DefaultInputWidth,\n      inputWidthUnit = Spacing.DefaultSizeUnit,\n      isRequired,\n      validatioName,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          width={`${inputWidth}${inputWidthUnit}`}\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            fieldApi.setTouched(true)\n            fieldApi.setValue(ev.target.value)\n          }}\n          // @ts-ignore\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.SFC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return user.canMutate(mutationName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType = {}>\n  extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nconst composeStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport class SelectControl<OptionType> extends React.Component<\n  ISelectControlProps<OptionType>\n> {\n  render() {\n    return <Select {...this.props} styles={composeStyles(this.props.styles)} />\n  }\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.SFC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.SFC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return user.canQuery(queryName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { TSettingsModel } from '../models/SettingsModel'\n\ninterface IProps {\n  render(settings: TSettingsModel): ReactNode\n  observe?: boolean\n}\n\nexport const WithSettings: React.SFC<IProps> = ({ observe, render }) => (\n  <WithRoot observe={observe} render={({ settings }) => render(settings)} />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem != null\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { GCompanyBranch } from '../graph/types'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.SFC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<GCompanyBranch.Fragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { WithRoot } from '../atoms/WithRoot'\nimport { GCompanyBranch } from '../graph/types'\n\ninterface IUserCompanyBranchesProps {\n  render(branches: GCompanyBranch.Fragment[], isLoading: boolean): ReactNode\n}\n\nexport const UserCompanyBranches: React.SFC<IUserCompanyBranchesProps> = ({\n  render,\n}) => (\n  <WithRoot\n    render={({ user }) =>\n      user.branches ? render(user.branches, false) : render([], true)\n    }\n  />\n)\n","import React from 'react'\n\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport { CompanyBranchDropdown } from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\nimport { UserCompanyBranches } from '../organisms/UserCompanyBranches'\n\ntype TBranch = GCompanyBranch.Fragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: TBranch[]\n  isMulti?: boolean\n  isClearable?: boolean\n  isLoading?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.SFC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n}) => (\n  <UserCompanyBranches\n    render={(branches, isLoading) => {\n      const isSelected = branch => selectedBranches.includes(branch.id)\n      const props: ICompanyBranchPickerImpl = {\n        textColor,\n        isClearable,\n        isMulti,\n        isLoading,\n        branches,\n        selectedBranch: isLoading ? null : branches.find(isSelected),\n        selectedBranches: isLoading ? [] : branches.filter(isSelected),\n        onSingleSelection(selected: TBranch) {\n          if (selected === null && onSelectionClear) {\n            onSelectionClear()\n          } else if (selected !== null && onSelectionChange) {\n            onSelectionChange([selected.id], [selected])\n          }\n        },\n        onMultiSelection(selected: TBranch[]) {\n          if (selected.length === 0 && onSelectionClear) {\n            onSelectionClear()\n          } else if (selected.length && onSelectionChange) {\n            onSelectionChange(selected.map(RM.prop('id')), selected)\n          }\n        },\n      }\n      const Component =\n        branches.length > breakpoint\n          ? CompanyBranchDropdown\n          : CompanyBranchFlatSelect\n      return <Component {...props} />\n    }}\n  />\n)\n","import React from 'react'\n\nimport { Colors, Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps extends Omit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.SFC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => (\n  <TouchButton\n    iconName=\"delete\"\n    color={Colors.greyMiddle}\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    onClick={ev => {\n      ev.preventDefault()\n      if (!confirmText || window.confirm(confirmText)) {\n        onDelete()\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { WithSettings } from '../atoms/WithSettings'\n\nexport const SettingsCompanyBranchPicker: React.SFC = () => (\n  <WithSettings\n    render={settings => (\n      <IconLine icon=\"store_mall_directory\">\n        <CompanyBranchPicker\n          selectedBranches={settings.branchId ? [settings.branchId] : undefined}\n          onSelectionChange={([branch]) => settings.selectBranch(branch)}\n          isClearable={false}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { GCompanyBranch } from '../graph/types'\n\ninterface ICompanyBranchProps {\n  branch: GCompanyBranch.Fragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.SFC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { SelectControl } from '../atoms/SelectControl'\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<GCompanyBranch.Fragment> {}\n\nexport const CompanyBranchDropdown: React.SFC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<GCompanyBranch.Fragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={i18n.t`Filter branches...`}\n    options={branches}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.SFC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import React from 'react'\nimport { IFormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  form: IFormState & IFormApi\n}\n\nexport const FormSubmit: React.SFC<IProps> = ({ children, form, ...props }) => (\n  <TouchButton\n    color={Colors.green}\n    disabled={!isFormValid(form) || form.submitting}\n    onClick={e => {\n      e.preventDefault()\n      form.submitForm(e)\n    }}\n    {...props}\n  >\n    {children}\n  </TouchButton>\n)\n","import React from 'react'\nimport { Checkbox, FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { Colors, Radiuses, Spacing } from '../styling'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  label?: string\n}\n\nconst CheckboxStyled = styled(Checkbox)`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-color: ${Colors.white};\n  border: 1px solid ${Colors.greyMiddle};\n  padding: 1rem;\n  border-radius: ${Radiuses.TextComponent};\n  display: inline-block;\n  position: relative;\n  margin: ${Spacing.MarginAroundFormComponents};\n  outline: none;\n  &:checked {\n    background-color: ${Colors.white};\n    border: 1px solid ${Colors.greyMiddle};\n  }\n  &:checked:after {\n    content: '\\\\2714';\n    font-size: 2rem;\n    position: absolute;\n    top: -0.5rem;\n    left: 0.1rem;\n    color: ${Colors.greyDark};\n    overflow: hidden;\n  }\n`\n\nconst LabelStyled = styled.div`\n  display: inline-block;\n  margin: 0.4rem 0 0 0.5rem;\n  vertical-align: top;\n`\n\nexport const FormInputCheckbox: React.SFC<IProps> = ({\n  field,\n  label,\n  defaultValue,\n  children,\n  ...inputProps\n}) => (\n  <>\n    <CheckboxStyled\n      field={field}\n      checked={Boolean(defaultValue)}\n      {...inputProps}\n    />\n    {label && <LabelStyled>{label}</LabelStyled>}\n  </>\n)\n","import moment from 'moment'\n\nconst cs = require('moment/locale/cs')\n\nmoment.updateLocale('cs', cs)\n\nexport default moment\n","import 'react-datepicker/dist/react-datepicker.css'\n\nimport React from 'react'\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Field, FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport moment from '../helpers/moment'\n\ninterface IProps\n  extends Omit<ReactDatePickerProps, 'onChange' | 'selected' | 'minDate'> {\n  field: FieldType\n  defaultValue?: Date\n  inputWidth?: string\n  minDate?: Date\n}\n\nconst FormInputDateContainer = styled.div`\n  & .react-datepicker-wrapper,\n  .react-datepicker__input-container,\n  .react-datepicker__input-container input {\n    width: ${({ width = '6rem' }: { width?: string }) => width};\n  }\n`\nFormInputDateContainer.displayName = 'FormInputDateContainer'\n\nexport const FormInputDate: React.SFC<IProps> = ({\n  field,\n  defaultValue,\n  inputWidth,\n  minDate,\n  ...props\n}) => (\n  <FormInputDateContainer width={inputWidth}>\n    <Field\n      field={field}\n      defaultValue={defaultValue}\n      render={fieldApi => (\n        <DatePicker\n          selected={moment(fieldApi.value || new Date())}\n          onChange={date => fieldApi.setValue(date)}\n          minDate={minDate === undefined ? undefined : moment(minDate)}\n          {...props}\n        />\n      )}\n    />\n  </FormInputDateContainer>\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const SaveInvoicePreferencesButton: React.SFC = props => (\n  <TouchButton text={i18n.t`Save invoice preferences`} color={Colors.green} />\n)\n","import React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { SaveInvoicePreferencesButton } from './SaveInvoicePreferencesButton'\n\ninterface IInvoicePreferencesFormProps {}\n\nconst SaveButtonContainer = styled.div`\n  margin-top: 1rem;\n  width: 15rem;\n`\n\nexport const InvoicePreferencesForm: React.SFC<\n  IInvoicePreferencesFormProps\n> = props => (\n  <Form>\n    <FormInputTextBox field=\"account\" placeholder=\"Název firmy\" />\n    <br />\n    <FormInputTextBox field=\"number\" placeholder=\"IČ\" />\n    <FormInputTextBox field=\"vatIdent\" placeholder=\"DIČ\" />\n\n    <SaveButtonContainer>\n      <SaveInvoicePreferencesButton />\n    </SaveButtonContainer>\n  </Form>\n)\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { i18n } from '../../../i18n'\n\ninterface IStoppageFormProps {}\n\nexport const StoppageForm: React.SFC<IStoppageFormProps> = props => (\n  <Form>\n    <FormInputCheckbox\n      field=\"onlyPersonalPickup\"\n      label={i18n.t`We are not delivering, only take away.`}\n    />\n    <br />\n    <FormInputCheckbox\n      field=\"stoppage\"\n      label={i18n.t`Completely stop all orders.`}\n    />\n  </Form>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { InvoicePreferencesForm } from '../organism/InvoicePreferencesForm'\nimport { StoppageForm } from '../organism/StoppageForm'\n\ninterface IPreferencesPageProps {}\n\nexport const BranchPreferencesPage: React.SFC<\n  IPreferencesPageProps\n> = props => (\n  <FullPageLayout pageTitle={i18n.t`Branch preferences`}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <Headline>\n        <Trans id=\"branch.preferences.stoppage\">Stoppage</Trans>\n      </Headline>\n      <StoppageForm />\n\n      <Headline>\n        <Trans>Change of invoice preferences</Trans>\n      </Headline>\n      <InvoicePreferencesForm />\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesPage } from '../pages/BranchPreferencesPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BranchPreferencesRoutes: React.SFC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      component={BranchPreferencesPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import 'react-datepicker/dist/react-datepicker.css'\n\nimport React from 'react'\nimport DatePicker from 'react-datepicker'\nimport { Field, FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport moment from '../helpers/moment'\n\ninterface IFormInputTimeProps {\n  field: FieldType\n  timeIntervals?: number\n  timeFormat?: string\n}\n\nconst FormInputTypeContainer = styled.div`\n  display: inline-block;\n  & .react-datepicker__input-container,\n  .react-datepicker__input-container input {\n    width: inherit;\n  }\n  & .react-datepicker-wrapper {\n    width: 3rem;\n  }\n  &\n    .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list {\n    padding-left: unset;\n    padding-right: unset;\n    width: 100px;\n  }\n`\nFormInputTypeContainer.displayName = 'FormInputTypeContainer'\n\nexport const FormInputTime: React.SFC<IFormInputTimeProps> = ({\n  field,\n  timeIntervals = 30,\n  timeFormat = 'LT',\n}) => (\n  <FormInputTypeContainer>\n    <Field\n      field={field}\n      render={fieldApi => (\n        <DatePicker\n          selected={moment(fieldApi.value || new Date())}\n          onChange={time => fieldApi.setValue(time)}\n          showTimeSelect={true}\n          showTimeSelectOnly={true}\n          timeIntervals={timeIntervals}\n          dateFormat={timeFormat}\n          timeFormat={timeFormat}\n        />\n      )}\n    />\n  </FormInputTypeContainer>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTime } from './FormInputTime'\n\ninterface IFormInputTimeSpanProps {\n  fieldFrom?: FieldType\n  fieldTo?: FieldType\n}\n\nconst LabelStyled = styled.div`\n  margin: 0.5rem;\n  display: inline-block;\n`\n\nconst LabelToStyled = styled(LabelStyled)`\n  margin-left: 2rem;\n`\n\nexport const FormInputTimeSpan: React.SFC<IFormInputTimeSpanProps> = ({\n  fieldFrom,\n  fieldTo,\n}) => (\n  <>\n    {fieldFrom && (\n      <>\n        <LabelStyled>\n          <Trans id=\"input.timespan.from\">from</Trans>\n        </LabelStyled>\n        <FormInputTime field={fieldFrom} />\n      </>\n    )}\n    {fieldTo && (\n      <>\n        <LabelToStyled>\n          <Trans id=\"input.timespan.to\">to</Trans>\n        </LabelToStyled>\n        <FormInputTime field={fieldTo} />\n      </>\n    )}\n  </>\n)\n","import { i18nMark } from '@lingui/react'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { ESpecificHourMode } from '../models/BusinessHoursModel'\n\nconst labels = {\n  [ESpecificHourMode.TIMESPAN]: i18nMark('Open between'),\n  [ESpecificHourMode.FULLDAY]: i18nMark('Closed'),\n}\n\nexport const SpecificModeSelector: React.SFC = () => (\n  <WithSettings\n    observe={true}\n    render={({ businessHours }) => (\n      <SelectControlFlat<ESpecificHourMode>\n        items={[ESpecificHourMode.TIMESPAN, ESpecificHourMode.FULLDAY]}\n        selectedItem={businessHours.specificMode as ESpecificHourMode}\n        formatItem={mode => i18n._(labels[mode])}\n        onSingleSelection={(mode: ESpecificHourMode) =>\n          businessHours.changeSpecificMode(mode)\n        }\n      />\n    )}\n  />\n)\n","import { setHours, setMinutes } from 'date-fns'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { FormInputTimeSpan } from '../../../atoms/FormInputTimeSpan'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { fullDateFormat } from '../../../helpers/formats'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport {\n  ESpecificHourMode,\n  ISpecificFormData,\n} from '../models/BusinessHoursModel'\nimport { SpecificModeSelector } from '../molecules/SpecificModeSelector'\n\nconst DateContainer = styled.div`\n  display: inline-block;\n  width: 13rem;\n  margin-left: 1rem;\n`\n\nconst FormContainer = styled.div`\n  display: inline-block;\n  width: 16rem;\n  min-height: 6rem;\n  margin: 0rem 0 0 1rem;\n  vertical-align: top;\n`\n\nexport const SpecificBusinessHourForm: React.SFC = props => (\n  <WithRoot\n    observe={false}\n    render={({ settings: { businessHours } }) => (\n      <Form\n        onSubmit={businessHours.submitSpecificHour}\n        defaultValues={getDefaultValues()}\n        render={form => (\n          <>\n            <DateContainer>\n              <FormInputDate\n                field=\"date\"\n                dateFormat={fullDateFormat}\n                minDate={new Date()}\n                inputWidth=\"12rem\"\n              />\n            </DateContainer>\n\n            <FormContainer>\n              <SpecificModeSelector />\n              <br />\n              <Observer>\n                {() =>\n                  businessHours.specificMode === ESpecificHourMode.TIMESPAN ? (\n                    <FormInputTimeSpan fieldFrom=\"openAt\" fieldTo=\"closeAt\" />\n                  ) : (\n                    <FormInputTextBox\n                      field=\"note\"\n                      placeholder={i18n.t`Closing reason`}\n                      inputWidth={13}\n                    />\n                  )\n                }\n              </Observer>\n            </FormContainer>\n\n            <FormSubmit form={form} width=\"9rem\">\n              {i18n.t`Add`}\n            </FormSubmit>\n          </>\n        )}\n      />\n    )}\n  />\n)\n\nfunction getDefaultValues(): Partial<ISpecificFormData> {\n  const now = new Date()\n  return {\n    date: now,\n    openAt: setHours(setMinutes(now, 0), 9),\n    closeAt: setHours(setMinutes(now, 0), 20),\n  }\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface ISpecificBusinessHourLineProps {\n  bsHour: GSpecificBusinessHour.Fragment\n  onDelete(): void\n}\n\nexport const SpecificBusinessHourLine: React.SFC<\n  ISpecificBusinessHourLineProps\n> = ({ bsHour, onDelete }) => (\n  <FlexRow>\n    <FlexColumn fixedWidth={true}>\n      <CanMutate mutationName=\"destroyBusinessHour\">\n        <TouchButtonDelete\n          onDelete={onDelete}\n          confirmText={`${i18n.t`Really remove specific business hour ${\n            bsHour.specificDateLocalized\n          }?`}`}\n        />\n      </CanMutate>\n    </FlexColumn>\n    <FlexColumn fixedWidth={true} width=\"14rem\">\n      {bsHour.specificDateLocalized}\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={1}>{formatLineTime(bsHour)}</FlexColumn>\n  </FlexRow>\n)\n\nfunction formatLineTime(bsHour: GSpecificBusinessHour.Fragment) {\n  if (bsHour.closed) {\n    return bsHour.closedNote\n  }\n  return `${bsHour.openAt} - ${bsHour.closeAt}`\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { SpecificBusinessHourLine } from '../molecules/SpecificBusinessHourLine'\nimport { QuerySpecificBusinessHours } from './SpecificBusinessHours.graphql'\n\nconst sortByDate = RM.sort<GSpecificBusinessHour.Fragment>(\n  RM.ascend(RM.or(RM.prop('specificDate'), RM.not)),\n)\n\nexport const SpecificBusinessHours: React.SFC = props => (\n  <WithRoot\n    render={({ settings }) => (\n      <QuerySpecificBusinessHours\n        {...settings.queryProps}\n        fetchPolicy=\"cache-and-network\"\n        renderFragment={({ businessHours }) =>\n          sortByDate(businessHours).map(bsHour => (\n            <SpecificBusinessHourLine\n              key={bsHour.id}\n              bsHour={bsHour}\n              onDelete={() =>\n                settings.businessHours.deleteSpecificHour(bsHour.id)\n              }\n            />\n          ))\n        }\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../../segments/settings/organisms/SettingsCompanyBranchPicker'\nimport { SpecificBusinessHourForm } from '../organisms/SpecificBusinessHourForm'\nimport { SpecificBusinessHours } from '../organisms/SpecificBusinessHours'\n\nexport const BusinessHoursPage: React.SFC = () => (\n  <FullPageLayout pageTitle={i18n.t`Business hours`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      {/* <Headline>Pravidelné otevírací hodiny</Headline>\n      <RegularOpeningHours /> */}\n\n      <Headline>\n        <Trans>Specific business hours</Trans>\n      </Headline>\n      <SpecificBusinessHours />\n\n      <CanMutate mutationName=\"addSpecialBusinessHour\">\n        <Headline>\n          <Trans>Add specific business hour</Trans>\n        </Headline>\n        <SpecificBusinessHourForm />\n      </CanMutate>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BusinessHoursPage } from '../pages/BusinessHoursPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BusinessHoursRoutes: React.SFC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute exact={true} path={match.path} component={BusinessHoursPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const BusinessHoursButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Business hours`}\n    iconName=\"av_timer\"\n    color={Colors.red}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuCategoryButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Categories`}\n    iconName=\"folder\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuRecipeButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Recipes`}\n    iconName=\"insert_drive_file\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Stock overview`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockDepositButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Stock deposit`}\n    iconName=\"open_in_browser\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IZonesMenuButtonProps {}\n\nexport const ZonesMenuButton: React.SFC<IZonesMenuButtonProps> = props => (\n  <TouchButton\n    text={i18n.t`Delivery zones`}\n    iconName=\"edit_location\"\n    color={Colors.violet}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\n\nimport { BusinessHoursButton } from '../organisms/BusinessHoursButton'\nimport { MenuCategoryButton } from '../organisms/MenuCategoryButton'\nimport { MenuRecipeButton } from '../organisms/MenuRecipeButton'\nimport { MenuStockButton } from '../organisms/MenuStockButton'\nimport { MenuStockDepositButton } from '../organisms/MenuStockDepositButton'\nimport { ZonesMenuButton } from '../organisms/ZonesMenuButton'\n\ninterface ISettingsPageProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'BusinessHours', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'Preferences', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'ZonesMenu', x: 4, y: 1, w: 2, h: 2 },\n    { i: 'MenuRecipe', x: 0, y: 3, w: 2, h: 2 },\n    { i: 'MenuCategory', x: 2, y: 3, w: 2, h: 2 },\n    { i: 'MenuStock', x: 4, y: 3, w: 2, h: 2 },\n    { i: 'MenuStockDeposit', x: 6, y: 3, w: 2, h: 2 },\n  ]\n}\n\nexport const SettingsPage: React.SFC<ISettingsPageProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"BusinessHours\"\n      route=\"/settings/businesshours\"\n      component={BusinessHoursButton}\n      canQuery=\"businessHours\"\n    />\n    {/* <PageLayoutItem\n      key=\"Preferences\"\n      route=\"/settings/preferences\"\n      component={PreferencesButton}\n    /> */}\n    <PageLayoutItem\n      key=\"MenuRecipe\"\n      route=\"/settings/menu/recipe\"\n      component={MenuRecipeButton}\n      canQuery=\"recipes\"\n    />\n    <PageLayoutItem\n      key=\"MenuCategory\"\n      route=\"/settings/menu/category\"\n      component={MenuCategoryButton}\n      canQuery=\"wareCategories\"\n    />\n    <PageLayoutItem\n      key=\"MenuStock\"\n      route=\"/settings/menu/stock\"\n      component={MenuStockButton}\n      canQuery=\"stockItems\"\n    />\n    <PageLayoutItem\n      key=\"MenuStockDeposit\"\n      route=\"/settings/menu/stock/deposit\"\n      component={MenuStockDepositButton}\n      canMutate=\"changeAmountStockItem\"\n    />\n    <PageLayoutItem\n      key=\"ZonesMenu\"\n      route=\"/settings/zones\"\n      component={ZonesMenuButton}\n      canQuery=\"zones\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { LazyRoute } from '../../../routes/LazyRoute'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesRoutes } from '../../branchpreferences/routes/BranchPreferencesRoutes'\nimport { BusinessHoursRoutes } from '../../businesshours/routes/BusinessHoursRoutes'\nimport { SettingsPage } from '../pages/SettingsPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const SettingsRoutes: React.SFC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle.Route path={match.path} title={i18n.t`Settings`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={SettingsPage} />\n      <LazyRoute\n        path={`${match.path}/menu`}\n        component={React.lazy(() =>\n          import('../../../segments/menu/routes/MenuRoutes'),\n        )}\n      />\n      <LazyRoute\n        path={`${match.path}/zones`}\n        component={React.lazy(() =>\n          import('../../../segments/zones/routes/ZoneMenuRoutes'),\n        )}\n      />\n      <Route\n        path={`${match.path}/businesshours`}\n        component={BusinessHoursRoutes}\n      />\n      <Route\n        path={`${match.path}/preferences`}\n        component={BranchPreferencesRoutes}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default SettingsRoutes\n"],"sourceRoot":""}