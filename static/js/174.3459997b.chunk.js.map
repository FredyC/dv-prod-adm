{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/ShowFeedbackButton.tsx","hooks/useMutationGuard.ts","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/CanQuery.tsx","atoms/HorizontalSeparator.tsx","atoms/Price.tsx","atoms/SelectControlFlat.tsx","atoms/ScrollArea.tsx","../node_modules/apollo-client/errors/ApolloError.js","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","hooks/useGuardedMutation.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","hooks/useOnConnectionRestored.ts","segments/order/organisms/OrderListBranchFilter.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenOrderWareLine.tsx","segments/kitchen/organisms/KitchenOrderWareList.tsx","segments/kitchen/molecules/KitchenAcceptButton.tsx","segments/kitchen/molecules/KitchenOrderDetail.tsx","segments/kitchen/molecules/KitchenOrderBox.tsx","segments/kitchen/organisms/KitchenOrderListLoader.tsx","segments/kitchen/organisms/KitchenOrderList.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/routes/KitchenRoutes.tsx"],"names":["IconLineWrap","styled","div","withConfig","displayName","componentId","DescriptionContainer","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","ShowFeedbackButton","react_default","TouchButton","onClick","Raven","showReportDialog","_lingui_react","id","useMutationGuard","mutate","options","defaultMessage","i18n","_","_useSnackBar","useSnackBar","enqueueSnackbar","enqueueError","enqueueWarning","handleUserErrors","userErrors","forEach","handleGraphQLErrors","errors","filter","RM","pathEq","map","prop","handleError","err","isApolloError","networkError","graphQLErrors","reportError","action","key","asyncToGenerator","regenerator_default","mark","_callee","variables","mutateOptions","result","_args","wrap","_context","prev","next","sent","abrupt","data","getUserErrors","t0","stop","this","_x","apply","NoAccess","PageLayoutFullHeightItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","CanQuery","queryName","canQuery","HorizontalSeparator","_styling__WEBPACK_IMPORTED_MODULE_2__","HorizontalSeparatorStyled","greyLight","_ref$visible","visible","Price","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","className","formatPrice","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_6___default","hasSelection","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","idx","Component","defaultProps","getItemValue","ScrollArea","defineProperty","exports","tslib_1","hasOwnProperty","generateErrorMessage","message","graphQLError","errorMessage","replace","ApolloError","_super","_a","extraInfo","call","__proto__","prototype","__extends","Error","CardDock","styled_components__WEBPACK_IMPORTED_MODULE_0__","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","padding","react","placeholder","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","cancelIconPadding","_templateObject","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","red","orange","green","bigNumberStyle","dashStyle","_templateObject2","clickable","_templateObject3","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","useGuardedMutation","_speedlo_graphql__WEBPACK_IMPORTED_MODULE_0__","_useMutationGuard__WEBPACK_IMPORTED_MODULE_1__","mutation","useMutation","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","react__WEBPACK_IMPORTED_MODULE_2___default","companyBranch","_atoms_DeliveryTimeBadge__WEBPACK_IMPORTED_MODULE_10__","Date","orderStateCategory","OrderStateCategoryEnum","Cancel","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","formatAddress","address","_atoms_CustomerIdentity__WEBPACK_IMPORTED_MODULE_9__","_atoms_Price__WEBPACK_IMPORTED_MODULE_5__","totalSum","currency","code","isPaidWithCard","NoteLine","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_2__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_i18n__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","CurrentNoteStyled","span","PreviousNoteStyled","note","previousNote","useOnConnectionRestored","_helpers_offline__WEBPACK_IMPORTED_MODULE_1__","cb","useDisposable","whenGoingOnline","OrderListBranchFilter","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_3__","_styling__WEBPACK_IMPORTED_MODULE_4__","from","list","setBranchFilter","clearBranchFilter","Label","DeliveryTime","DeliverLabel","deliverType","KitchenOrderAtSummary","deliverTime","AccessTime","KitchenOrderAtSummary_DeliverLabel","formatTimeWithoutTodayDate","Circle","Small","CheckedInner","TouchCheckButton","isChecked","OrderWareLineWrap","IsDoneContainerStyled","CodeContainerStyled","FontSizes","CompactCardBig","NameContainerStyled","KitchenOrderWareLine","recipeId","isDone","isCheckable","updateOrderRecipeState","useMKitchenRecipeState","TouchCheckButton_TouchCheckButton","OrderRecipeStateEnum","Preparing","Cooked","KitchenOrderWareList","orderWares","orderWare","KitchenOrderWareLine_KitchenOrderWareLine","recipe","nameLabel","orderRecipeState","sidedishes","sidedish","KitchenAcceptButton","orderId","acceptOrder","UpdateOrderStateMutation","ButtonHeight","OrderStateEnum","InProduce","OrderDetailContainerStyled","KitchenOrderDetail","KitchenOrderWareList_KitchenOrderWareList","ReadyToDeliver","KitchenOrderAtSummary_KitchenOrderAtSummary","NewOrders","KitchenAcceptButton_KitchenAcceptButton","OrderBoxStyled","CompactCard","greyDarkest","Middle","KitchenOrderBox","href","KitchenOrderDetail_KitchenOrderDetail","requiredCategories","loaderContext","createContext","loading","noFilter","orders","KitchenOrderListLoader","observer","orderModel","hasBranchFilter","_useQKitchenOrderList","useQKitchenOrderList","branchesFilter","categories","skip","updateQuery","refetch","useSKitchenOrderList","onSubscriptionData","dataUpdate","subscriptionData","update","updatedOrder","o","orderExists","unshift","handleSubscriptionUpdate","Provider","InfoMessage","KitchenOrderList","category","_useKitchenOrderList","useContext","categoryOrders","propEq","KitchenOrderBox_KitchenOrderBox","CategorySeparator","KitchenOverviewPage","PageLayout","pageTitle","useBackButton","layouts","i","x","y","w","h","KitchenRoutes_KitchenRoutes","KitchenRoutes","match","react_router","SecureRoute","exact","path"],"mappings":"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","file":"static/js/174.3459997b.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Raven from 'raven-js'\nimport React from 'react'\n\nimport { TouchButton } from '../molecules/TouchButton'\n\nexport function ShowFeedbackButton() {\n  return (\n    <TouchButton onClick={() => Raven.showReportDialog()}>\n      <Trans> Submit feedback </Trans>\n    </TouchButton>\n  )\n}\n","import { MutationFn, MutationHookOptions } from '@speedlo/graphql'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { GraphQLError } from 'graphql'\nimport React from 'react'\n\nimport { ShowFeedbackButton } from '../atoms/ShowFeedbackButton'\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\nimport { useSnackBar } from './useSnackBar'\n\ninterface IMutationGuardOptions<TData> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useMutationGuard<TData, TVariables>(\n  mutate: MutationFn<TData, TVariables>,\n  options: IMutationGuardOptions<TData> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const { enqueueSnackbar, enqueueError, enqueueWarning } = useSnackBar()\n\n  const handleUserErrors = (userErrors: ReadonlyArray<string>) => {\n    userErrors.forEach(enqueueWarning)\n  }\n\n  const handleGraphQLErrors = (errors: ReadonlyArray<GraphQLError>) => {\n    const userErrors = errors.filter(\n      RM.pathEq(['extensions', 'showToUser'], true),\n    )\n    if (userErrors.length === 0) {\n      enqueueError(defaultMessage)\n    } else {\n      handleUserErrors(userErrors.map(RM.prop('message')))\n    }\n  }\n\n  const handleError = (err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        enqueueError(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n    enqueueSnackbar(defaultMessage, {\n      action: [React.createElement(ShowFeedbackButton, { key: 'feedback' })],\n    })\n  }\n\n  return async (\n    variables: TVariables,\n    mutateOptions: MutationHookOptions<TData, TVariables> = {},\n  ) => {\n    try {\n      const result = await mutate(variables, mutateOptions)\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      if (options.getUserErrors) {\n        const userErrors = options.getUserErrors(result.data)\n        if (userErrors !== null) {\n          handleUserErrors(userErrors)\n        }\n      }\n      return result.data\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nfunction isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\nexports.isApolloError = isApolloError;\n\nvar generateErrorMessage = function generateErrorMessage(err) {\n  var message = '';\n\n  if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += \"GraphQL error: \" + errorMessage + \"\\n\";\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nvar ApolloError = function (_super) {\n  tslib_1.__extends(ApolloError, _super);\n\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        networkError = _a.networkError,\n        errorMessage = _a.errorMessage,\n        extraInfo = _a.extraInfo;\n\n    var _this = _super.call(this, errorMessage) || this;\n\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      _this.message = generateErrorMessage(_this);\n    } else {\n      _this.message = errorMessage;\n    }\n\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n\n  return ApolloError;\n}(Error);\n\nexports.ApolloError = ApolloError;","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { MutationHookOptions, useMutation } from '@speedlo/graphql'\nimport { DocumentNode } from 'graphql'\n\nimport { useMutationGuard } from './useMutationGuard'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  return useMutationGuard<TData, TVariables>(useMutation(mutation, options), {\n    getUserErrors: options.getUserErrors,\n  })\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { GOrderListTicker, GOrderStateCategory } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={\n              order.orderStateCategory === OrderStateCategoryEnum.Cancel\n            }\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          <Price\n            price={order.totalSum.value}\n            currencyCode={order.totalSum.currency.code}\n          />\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { Colors } from '../../../styling'\n\ninterface IOrderListBranchFilterProps {}\n\nexport const OrderListBranchFilter: React.FC<\n  IOrderListBranchFilterProps\n> = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(order.list.branches)}\n      onSelectionChange={branches => {\n        order.list.setBranchFilter(branches)\n      }}\n      onSelectionClear={order.list.clearBranchFilter}\n      textColor={Colors.turquoise}\n      isMulti={true}\n      isClearable={false}\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  deliverTime: string | null\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<IProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<IProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport {\n  OrderRecipeStateEnum,\n  useMKitchenRecipeState,\n} from '../../../graph/generated'\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\n\ninterface IProps {\n  recipeId?: ID\n  code?: string\n  label: string\n  isDone: boolean\n  isCheckable: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst IsDoneContainerStyled = styled.div`\n  flex: 0 0 2.4rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 4.1rem;\n  font-size: ${FontSizes.CompactCardBig};\n  color: ${Colors.black};\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\n\nexport const KitchenOrderWareLine: React.FC<IProps> = ({\n  recipeId,\n  code,\n  label,\n  isDone,\n  isCheckable,\n}) => {\n  const updateOrderRecipeState = useMKitchenRecipeState()\n\n  return (\n    <OrderWareLineWrap>\n      <IsDoneContainerStyled>\n        {isCheckable && (\n          <TouchCheckButton\n            isChecked={isDone}\n            onClick={() => {\n              if (recipeId) {\n                updateOrderRecipeState({\n                  recipeId,\n                  state: isDone\n                    ? OrderRecipeStateEnum.Preparing\n                    : OrderRecipeStateEnum.Cooked,\n                })\n              }\n            }}\n          />\n        )}\n      </IsDoneContainerStyled>\n      <CodeContainerStyled>{code}</CodeContainerStyled>\n      <NameContainerStyled>{label}</NameContainerStyled>\n    </OrderWareLineWrap>\n  )\n}\n","import React, { Fragment } from 'react'\n\nimport { OrderRecipeStateEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { KitchenOrderWareLine } from '../molecules/KitchenOrderWareLine'\n\ninterface IProps {\n  orderWares: ReadonlyArray<FKitchenOrder.Items>\n  isCheckable: boolean\n}\n\nexport const KitchenOrderWareList: React.FC<IProps> = ({\n  orderWares,\n  isCheckable,\n}) => {\n  const renderWare = (orderWare: FKitchenOrder.Items) => (\n    <Fragment key={orderWare.id}>\n      <KitchenOrderWareLine\n        recipeId={orderWare.id}\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        isDone={orderWare.orderRecipeState.enum === OrderRecipeStateEnum.Cooked}\n        isCheckable={isCheckable}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <KitchenOrderWareLine\n            key={`${orderWare.id}-${sidedish.id}`}\n            recipeId={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            isDone={false}\n            isCheckable={false}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import React from 'react'\n\nimport { OrderStateEnum } from '../../../graph/generated'\nimport { GUpdateOrderState } from '../../../graph/types'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { UpdateOrderStateMutation } from '../../order/models/OrderStateModel.graphql'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const KitchenAcceptButton: React.FC<IProps> = ({ orderId }) => {\n  const acceptOrder = useGuardedMutation<\n    GUpdateOrderState.Mutation,\n    GUpdateOrderState.Variables\n  >(UpdateOrderStateMutation)\n\n  return (\n    <TouchButton\n      iconName=\"keyboard_arrow_right\"\n      width={Spacing.ButtonHeight}\n      color={Colors.green}\n      onClick={() => {\n        acceptOrder({ orderId, state: OrderStateEnum.InProduce })\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { KitchenOrderWareList } from '../organisms/KitchenOrderWareList'\nimport { KitchenAcceptButton } from './KitchenAcceptButton'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.2rem 0.1rem 0.2rem;\n`\n\nexport const KitchenOrderDetail: React.FC<IProps> = ({ order }) => (\n  <OrderDetailContainerStyled>\n    <HorizontalSeparator />\n    <KitchenOrderWareList\n      orderWares={order.items}\n      isCheckable={\n        order.orderStateCategory === OrderStateCategoryEnum.Preparing ||\n        order.orderStateCategory === OrderStateCategoryEnum.ReadyToDeliver\n      }\n    />\n    <HorizontalSeparator />\n    <KitchenOrderAtSummary\n      deliverTime={order.deliverAt}\n      deliverType={\n        order.deliveryType &&\n        order.deliveryType.enum === DeliveryTypeEnum.Pickup\n          ? 'PERSONAL'\n          : 'DELIVER_UNTIL'\n      }\n    />\n    <NoteLine note={order.note} previousNote={order.previousNote} />\n    {order.orderStateCategory === OrderStateCategoryEnum.NewOrders && (\n      <CardDock position=\"BottomRight\">\n        <KitchenAcceptButton orderId={order.id} />\n      </CardDock>\n    )}\n  </OrderDetailContainerStyled>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenOrderDetail } from './KitchenOrderDetail'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n  showBranch: boolean\n}\nexport const OrderBoxStyled = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n`\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.2rem;\n  color: ${Colors.greyMiddle};\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 1.8rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n`\n\nexport const KitchenOrderBox: React.FC<IProps> = ({ order, showBranch }) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderBoxStyled>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n          <br />\n          {order.customer && order.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${order.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {order.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </CustomerIdentityContainerStyled>\n      </OrderTickerMainContentStyled>\n\n      <KitchenOrderDetail order={order} />\n    </OrderBoxStyled>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderStateCategoryEnum,\n  QKitchenOrderListOrders,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\ntype TOrder = QKitchenOrderListOrders\n\ninterface ILoaderContext {\n  loading: boolean\n  noFilter: boolean\n  orders: ReadonlyArray<TOrder>\n}\n\nconst loaderContext = React.createContext<ILoaderContext>({\n  loading: true,\n  noFilter: true,\n  orders: [],\n})\n\nexport const KitchenOrderListLoader: React.FC = observer(props => {\n  const { order: orderModel } = useRoot()\n  const noFilter = !orderModel.list.hasBranchFilter\n  const { data, loading, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    { skip: noFilter },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    {\n      skip: noFilter,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return (\n    <loaderContext.Provider\n      value={{\n        loading,\n        noFilter,\n        orders: loading ? [] : data.orders,\n      }}\n    >\n      {props.children}\n    </loaderContext.Provider>\n  )\n})\n\nexport function useKitchenOrderList() {\n  return React.useContext(loaderContext)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { KitchenOrderBox } from '../molecules/KitchenOrderBox'\nimport { useKitchenOrderList } from './KitchenOrderListLoader'\n\ninterface IProps {\n  category: OrderStateCategoryEnum\n}\n\nconst InfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n\nexport const KitchenOrderList = observer<IProps>(({ category }) => {\n  const { order: orderModel } = useRoot()\n  const { loading, noFilter, orders } = useKitchenOrderList()\n\n  if (noFilter) {\n    return (\n      <InfoMessage>\n        <Trans>Select a branch</Trans>\n      </InfoMessage>\n    )\n  }\n\n  if (loading) {\n    return (\n      <InfoMessage>\n        <Trans>Loading</Trans>\n      </InfoMessage>\n    )\n  }\n\n  const categoryOrders = orders.filter(\n    RM.propEq('orderStateCategory', category),\n  )\n\n  if (categoryOrders.length === 0) {\n    switch (category) {\n      case OrderStateCategoryEnum.NewOrders:\n        return (\n          <InfoMessage>\n            <Trans>No new orders</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.Preparing:\n        return (\n          <InfoMessage>\n            <Trans>No orders to prepare</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.ReadyToDeliver:\n        return (\n          <InfoMessage>\n            <Trans>No orders to deliver</Trans>\n          </InfoMessage>\n        )\n      default:\n        return (\n          <InfoMessage>\n            <Trans>No orders</Trans>\n          </InfoMessage>\n        )\n    }\n  }\n\n  return (\n    <>\n      {categoryOrders.map(order => (\n        <KitchenOrderBox\n          key={order.id}\n          order={order}\n          showBranch={orderModel.list.branchesFilter.length > 1}\n        />\n      ))}\n    </>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { Colors } from '../../../styling'\nimport { OrderListBranchFilter } from '../../order/organisms/OrderListBranchFilter'\nimport { KitchenOrderList } from '../organisms/KitchenOrderList'\nimport { KitchenOrderListLoader } from '../organisms/KitchenOrderListLoader'\n\nfunction getLayout() {\n  return [{ i: 'filter', x: 4, y: 0, w: 10, h: 1 }]\n}\n\nconst CategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: -0.3rem;\n`\n\nexport const KitchenOverviewPage: React.FC = () => (\n  <KitchenOrderListLoader>\n    <PageLayoutFullHeightItem withScrollArea={true} row={1} widthInColumns={5}>\n      <KitchenOrderList category={OrderStateCategoryEnum.NewOrders} />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={5}\n      widthInColumns={6}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.Preparing} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={11}\n      widthInColumns={5}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.ReadyToDeliver} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      layouts={getLayout()}\n    >\n      <PageLayoutItem\n        key=\"filter\"\n        component={() => <OrderListBranchFilter />}\n      />\n    </PageLayout>\n  </KitchenOrderListLoader>\n)\n","import React from 'react'\nimport { RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const KitchenRoutes: React.FC<IProps> = ({ match }) => {\n  return (\n    <>\n      <Switch>\n        <SecureRoute\n          exact={true}\n          path={match.path}\n          component={KitchenOverviewPage}\n        />\n      </Switch>\n    </>\n  )\n}\n\nexport default KitchenRoutes\n"],"sourceRoot":""}