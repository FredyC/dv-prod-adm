{"version":3,"sources":["atoms/CanMutate.tsx","atoms/IconLine.tsx","atoms/SelectControl.tsx","atoms/FormInputTextBox.tsx","atoms/FormInputStyled.tsx","atoms/Headline.tsx","atoms/CanQuery.tsx","atoms/NoAccess.tsx","atoms/SelectControlFlat.tsx","atoms/FlexColumn.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","molecules/PageLayoutItem.tsx","molecules/TouchButtonDelete.tsx","segments/settings/organisms/SettingsCompanyBranchPicker.tsx","atoms/FormInputCheckbox.tsx","atoms/FlexRow.tsx","atoms/InputDate.tsx","atoms/FormInputDate.tsx","atoms/StyledCheckbox.tsx","segments/branchpreferences/organism/SaveInvoicePreferencesButton.tsx","segments/branchpreferences/organism/InvoicePreferencesForm.tsx","segments/branchpreferences/organism/StoppageForm.tsx","segments/branchpreferences/pages/BranchPreferencesPage.tsx","segments/branchpreferences/routes/BranchPreferencesRoutes.tsx","atoms/InputTime.tsx","segments/businesshours/atoms/BusinessHoursTimeRange.tsx","segments/businesshours/molecules/BusinessHoursWeekday.tsx","segments/businesshours/organisms/BusinessHoursForm.tsx","atoms/FormInputTime.tsx","atoms/FormInputTimeSpan.tsx","segments/businesshours/molecules/SpecificModeSelector.tsx","hooks/useSettings.ts","segments/businesshours/organisms/SpecificBusinessHourForm.tsx","segments/businesshours/molecules/SpecificBusinessHourLine.tsx","segments/businesshours/organisms/SpecificBusinessHours.tsx","segments/businesshours/pages/BusinessHoursPage.tsx","segments/businesshours/routes/BusinessHoursRoutes.tsx","segments/settings/organisms/BusinessHoursButton.tsx","segments/settings/organisms/MenuCategoryButton.tsx","segments/settings/organisms/MenuRecipeButton.tsx","segments/settings/organisms/MenuStockButton.tsx","segments/settings/organisms/MenuStockDepositButton.tsx","segments/settings/organisms/UserMenuButton.tsx","segments/settings/organisms/ZonesMenuButton.tsx","segments/settings/pages/SettingsPage.tsx","segments/settings/routes/SettingsRoutes.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","_ref","mutationName","children","user","useRoot","useObserver","canMutate","a","createElement","Fragment","concat","IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","props","Object","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","FormInputTextBox","forwardRef","inputRef","field","_ref$inputFullWidth","inputFullWidth","isRequired","validatioName","validationMessage","validate","react_form__WEBPACK_IMPORTED_MODULE_2__","value","isEmpty","_i18n__WEBPACK_IMPORTED_MODULE_4__","_","fieldApi","_FormInputStyled__WEBPACK_IMPORTED_MODULE_5__","onChange","ev","target","validity","valid","setTouched","setValue","invalid","Boolean","error","ref","invalidInputStyle","css","fullWidthStyle","FormInputStyled","input","Headline","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","CanQuery","queryName","canQuery","NoAccess","ItemStyled","textColor","isSelected","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","RM","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_7___default","hasSelection","onClick","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","id","map","idx","Component","defaultProps","prop","getItemValue","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","restInnerProps","style","react","placeholder","i18n","ButtonHeight","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","selection","head","FormSubmit","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","utils","MomentUtils","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","TouchButtonDelete","onDelete","confirmText","_atoms_SizerButton__WEBPACK_IMPORTED_MODULE_2__","_TouchButton__WEBPACK_IMPORTED_MODULE_4__","window","confirm","SettingsCompanyBranchPicker","settings","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_5__","branchId","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","selectBranch","FormInputCheckbox","defaultValue","inputProps","_StyledCheckbox__WEBPACK_IMPORTED_MODULE_3__","checked","FlexRow","InputDate","material_ui_pickers_esm","format","maxDateMessage","core","minDateMessage","FormInputDate","pickerProps","es","render","InputDate_InputDate","onOpen","StyledCheckbox","span","white","Radiuses","TextComponent","SaveInvoicePreferencesButton","TouchButton","text","SaveButtonContainer","InvoicePreferencesForm","SaveInvoicePreferencesButton_SaveInvoicePreferencesButton","StoppageForm","BranchPreferencesPage","FullPageLayout","pageTitle","Card","_lingui_react","StoppageForm_StoppageForm","InvoicePreferencesForm_InvoicePreferencesForm","BranchPreferencesRoutes","match","react_router","SecureRoute","exact","path","NotFoundPage","InputTime","StyledBussinessHoursTimeRange","BusinessHoursTimeRange_templateObject","BusinessHoursTimeRange","memo","hour","InputTime_InputTime","openAt","fullWidth","closeAt","StyledBusinessHoursWeekday","article","BusinessHoursWeekday_templateObject","Button","BusinessHoursWeekday","weekday","hours","onAdd","onRemove","renderHour","data-testid","className","SizerButton","role","index_es","code","getTodayTime","DFP","parse","Date","BusinessHoursForm","_useQRegularBusinessH","useQRegularBusinessHours","loading","businessHours","useRef","observable","Map","_useMBusinessHoursSub","useMBusinessHoursSubmit","submitBusinessHours","slicedToArray","useEffect","current","weekDays","forEach","set","enum","array","weekDay","get","push","weekDayHours","clear","hourIdCounter","hourId","findIndex","propEq","splice","enqueueSuccess","useSnackBar","onSubmit","useCallback","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","toConsumableArray","formatTime","sent","stop","Loading","startOfDay","endOfDay","Sizer","MarginBox","FormInputTime","InlineWrap","FormInputTimeSpan_templateObject","FormInputTimeSpan","fieldFrom","fieldTo","FormInputTime_FormInputTime","labels","_labels","defineProperty","ESpecificHourMode","TIMESPAN","i18nMark","FULLDAY","SpecificModeSelector","specificMode","mode","changeSpecificMode","DateContainer","SpecificBusinessHourForm_templateObject","FormContainer","SpecificBusinessHourForm","submitSpecificHour","defaultValues","getDefaultValues","fullDateFormat","minDate","index_module","FormInputTimeSpan_FormInputTimeSpan","now","date","setHours","setMinutes","SpecificBusinessHourLine","bsHour","0","specificDateLocalized","closed","closedNote","formatLineTime","sortByDate","sort","ascend","or","not","SpecificBusinessHours","SpecificBusinessHours_graphql","variables","fetchPolicy","renderFragment","SpecificBusinessHourLine_SpecificBusinessHourLine","deleteSpecificHour","BusinessHoursPage","useBackButton","BusinessHoursForm_BusinessHoursForm","SpecificBusinessHours_SpecificBusinessHours","SpecificBusinessHourForm_SpecificBusinessHourForm","BusinessHoursRoutes","BusinessHoursButton","red","MenuCategoryButton","turquoise","MenuRecipeButton","MenuStockButton","MenuStockDepositButton","UserMenuButton","ZonesMenuButton","violet","SettingsPage","PageLayout","layouts","i","x","y","w","h","SettingsRoutes_SettingsRoutes","ZoneMenuRoutes","lazy","Promise","all","then","bind","MenuRoutes","UserMenuPage","SettingsRoutes","PageTitle","Route","LazyRoute"],"mappings":"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","file":"static/js/178.a5ffb4fb.chunk.js","sourcesContent":["import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { FormInputStyled } from './FormInputStyled'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  isRequired?: boolean\n  validatioName?: string\n  validationMessage?: string\n  inputFullWidth?: boolean\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputFullWidth = false,\n      isRequired,\n      validatioName,\n      validationMessage,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            if (validationMessage) {\n              return validationMessage\n            }\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              fieldApi.setTouched(true)\n              fieldApi.setValue(ev.target.value)\n            }\n          }}\n          inputFullWidth={inputFullWidth}\n          invalid={Boolean(fieldApi.error)}\n          // @ts-ignore\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import styled, { css } from 'styled-components'\n\nimport { Spacing } from '../styling'\n\ninterface IFormInputStyled {\n  invalid?: boolean\n  inputFullWidth?: boolean\n}\n\nexport const invalidInputStyle = css`\n  border: 1px red solid;\n`\n\nexport const fullWidthStyle = css`\n  width: 100%;\n`\n\nexport const FormInputStyled = styled.input`\n  margin: ${Spacing.MarginAroundFormComponents};\n  ${({ inputFullWidth }: IFormInputStyled) => inputFullWidth && fullWidthStyle};\n  ${({ invalid }: IFormInputStyled) => invalid && invalidInputStyle};\n`\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps extends Omit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.FC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      iconName=\"delete\"\n      color={Colors.greyMiddle}\n      onClick={ev => {\n        ev.preventDefault()\n        if (!confirmText || window.confirm(confirmText)) {\n          onDelete()\n        }\n      }}\n      {...props}\n    />\n  </SizerButton>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {\n  isMulti?: boolean\n  width?: number\n}\n\nexport const SettingsCompanyBranchPicker: React.FC<IProps> = ({\n  isMulti,\n  width,\n}) => {\n  const { settings } = useRoot()\n  return useObserver(() => (\n    <IconLine icon=\"store_mall_directory\">\n      <CompanyBranchPicker\n        selectedBranches={settings.branchId ? [settings.branchId] : undefined}\n        onSelectionChange={([branch]) => settings.selectBranch(branch)}\n        isMulti={isMulti}\n        isClearable={false}\n        getDropdownProps={() => ({ width })}\n      />\n    </IconLine>\n  ))\n}\n","import React from 'react'\nimport { Checkbox, FieldType } from 'react-form'\n\nimport { StyledCheckbox } from './StyledCheckbox'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  label?: string\n}\n\nexport const FormInputCheckbox: React.FC<IProps> = ({\n  field,\n  label,\n  defaultValue,\n  children,\n  ...inputProps\n}) => (\n  <StyledCheckbox>\n    <Checkbox field={field} checked={Boolean(defaultValue)} {...inputProps} />\n    {label && <label>{label}</label>}\n  </StyledCheckbox>\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { i18n } from '@lingui/core'\nimport { DatePickerInlineProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends DatePickerInlineProps {}\n\nexport const InputDate: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <InlineDatePicker\n        format=\"ll\"\n        maxDateMessage={i18n.t`Date is too much in the future`}\n        minDateMessage={i18n.t`Date is too much in the past`}\n        {...props}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { DatePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { InputDate } from './InputDate'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <Field\n      field={field}\n      render={fieldApi => (\n        <InputDate\n          value={fieldApi.value}\n          onChange={value => fieldApi.setValue(value)}\n          onOpen={() => fieldApi.setTouched(true)}\n          {...pickerProps}\n        />\n      )}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses, Spacing } from '../styling'\n\nexport const StyledCheckbox = styled.span`\n  input {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-color: ${Colors.white};\n    border: 1px solid ${Colors.greyMiddle};\n    padding: 1rem;\n    border-radius: ${Radiuses.TextComponent};\n    display: inline-block;\n    position: relative;\n    margin: ${Spacing.MarginAroundFormComponents};\n    outline: none;\n    &:checked {\n      background-color: ${Colors.white};\n      border: 1px solid ${Colors.greyMiddle};\n    }\n    &:checked:after {\n      content: '\\\\2714';\n      font-size: 2rem;\n      position: absolute;\n      top: -0.5rem;\n      left: 0.1rem;\n      color: ${Colors.greyDark};\n      overflow: hidden;\n    }\n    &:disabled {\n      background-color: ${Colors.greyLight};\n    }\n    &:disabled:after {\n      color: ${Colors.greyMiddle};\n    }\n  }\n  label {\n    display: inline-block;\n    margin: 0.4rem 0 0 0.5rem;\n    vertical-align: top;\n  }\n`\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const SaveInvoicePreferencesButton: React.FC = props => (\n  <TouchButton text={i18n.t`Save invoice preferences`} color={Colors.green} />\n)\n","import React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { SaveInvoicePreferencesButton } from './SaveInvoicePreferencesButton'\n\ninterface IInvoicePreferencesFormProps {}\n\nconst SaveButtonContainer = styled.div`\n  margin-top: 1rem;\n  width: 15rem;\n`\n\nexport const InvoicePreferencesForm: React.FC<\n  IInvoicePreferencesFormProps\n> = props => (\n  <Form>\n    <FormInputTextBox field=\"account\" placeholder=\"Název firmy\" />\n    <br />\n    <FormInputTextBox field=\"number\" placeholder=\"IČ\" />\n    <FormInputTextBox field=\"vatIdent\" placeholder=\"DIČ\" />\n\n    <SaveButtonContainer>\n      <SaveInvoicePreferencesButton />\n    </SaveButtonContainer>\n  </Form>\n)\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { i18n } from '../../../i18n'\n\ninterface IStoppageFormProps {}\n\nexport const StoppageForm: React.FC<IStoppageFormProps> = props => (\n  <Form>\n    <FormInputCheckbox\n      field=\"onlyPersonalPickup\"\n      label={i18n.t`We are not delivering, only take away.`}\n    />\n    <br />\n    <FormInputCheckbox\n      field=\"stoppage\"\n      label={i18n.t`Completely stop all orders.`}\n    />\n  </Form>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { InvoicePreferencesForm } from '../organism/InvoicePreferencesForm'\nimport { StoppageForm } from '../organism/StoppageForm'\n\ninterface IPreferencesPageProps {}\n\nexport const BranchPreferencesPage: React.FC<IPreferencesPageProps> = props => (\n  <FullPageLayout pageTitle={i18n.t`Branch preferences`}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <Headline>\n        <Trans id=\"branch.preferences.stoppage\">Stoppage</Trans>\n      </Headline>\n      <StoppageForm />\n\n      <Headline>\n        <Trans>Change of invoice preferences</Trans>\n      </Headline>\n      <InvoicePreferencesForm />\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesPage } from '../pages/BranchPreferencesPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BranchPreferencesRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      component={BranchPreferencesPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import { InlineTimePicker, TimePickerInlineProps } from 'material-ui-pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends TimePickerInlineProps {}\n\nexport const InputTime: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <InlineTimePicker format=\"LT\" {...props} />\n    </DateTimeFormatProvider>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { InputTime } from '../../../atoms/InputTime'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  hour: TBusinessHour\n}\n\nconst StyledBussinessHoursTimeRange = styled.div`\n  & input {\n    width: 5rem;\n  }\n`\n\nexport const BusinessHoursTimeRange = React.memo<IProps>(({ hour }) => {\n  return useObserver(() => (\n    <StyledBussinessHoursTimeRange>\n      <InputTime\n        value={hour.openAt}\n        onChange={value => (hour.openAt = value)}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n      <InputTime\n        value={hour.closeAt}\n        onChange={value => (hour.closeAt = value)}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </StyledBussinessHoursTimeRange>\n  ))\n})\n","import { Trans } from '@lingui/macro'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { FWeekdayFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Radiuses } from '../../../styling'\nimport { BusinessHoursTimeRange } from '../atoms/BusinessHoursTimeRange'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  weekday: FWeekdayFragment\n  hours: ReadonlyArray<TBusinessHour>\n  onAdd(): void\n  onRemove(hourId: ID): void\n}\n\nconst StyledBusinessHoursWeekday = styled.article`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 0.3rem 0;\n  h5 {\n    width: 5rem;\n  }\n  & .range {\n    display: flex;\n    margin: 0 2rem 0 0;\n    padding-right: 1rem;\n    background: ${Colors.white};\n    border-radius: ${Radiuses.Button};\n  }\n  .remove-btn {\n    margin-right: 1rem;\n  }\n`\n\nexport const BusinessHoursWeekday = React.memo<IProps>(\n  ({ weekday, hours, onAdd, onRemove }) => {\n    const renderHour = (hour: TBusinessHour) => {\n      return (\n        <div key={hour.id} data-testid=\"bh-range\" className=\"range\">\n          <SizerButton className=\"remove-btn\">\n            <TouchButton\n              title={i18n.t`Remove business hour`}\n              role=\"button\"\n              onClick={() => onRemove(hour.id)}\n            >\n              <Delete />\n            </TouchButton>\n          </SizerButton>\n          <BusinessHoursTimeRange hour={hour} />\n        </div>\n      )\n    }\n\n    const renderHours = () => {\n      if (hours.length === 0) {\n        return (\n          <em>\n            <Trans>Closed</Trans>\n          </em>\n        )\n      }\n      return hours.map(renderHour)\n    }\n\n    return useObserver(() => (\n      <StyledBusinessHoursWeekday>\n        <h5>{weekday.code}</h5>\n        {renderHours()}\n        <SizerButton>\n          <TouchButton\n            title={i18n.t`Add business hour`}\n            role=\"button\"\n            onClick={onAdd}\n          >\n            <AddCircle />\n          </TouchButton>\n        </SizerButton>\n      </StyledBusinessHoursWeekday>\n    ))\n  },\n)\n","import { DFP, RM } from '@speedlo/tools'\nimport { IObservableArray, observable } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  InputBusinessHourCreate,\n  useMBusinessHoursSubmit,\n  useQRegularBusinessHours,\n  WeekDayEnum,\n} from '../../../graph/generated'\nimport { formatTime } from '../../../helpers/formats'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { TBusinessHour } from '../businesshours.types'\nimport { BusinessHoursWeekday } from '../molecules/BusinessHoursWeekday'\n\nconst getTodayTime = DFP.parse(new Date(), 'H:mm')\n\nexport const BusinessHoursForm: React.FC = () =>\n  useObserver(() => {\n    const { settings } = useRoot()\n    const { data, loading } = useQRegularBusinessHours({\n      branchId: settings.branchId,\n    })\n\n    const businessHours = React.useRef(\n      observable(new Map<WeekDayEnum, IObservableArray<TBusinessHour>>()),\n    )\n\n    const [submitBusinessHours] = useMBusinessHoursSubmit()\n\n    React.useEffect(\n      () => {\n        if (loading) {\n          return\n        }\n        if (businessHours.current.size === 0) {\n          data.weekDays.forEach(weekday => {\n            businessHours.current.set(weekday.enum, observable.array([]))\n          })\n        }\n        data.businessHours.forEach(({ id, openAt, closeAt, weekDay }) => {\n          if (weekDay) {\n            businessHours.current.get(weekDay.enum)!.push({\n              id,\n              openAt: getTodayTime(openAt),\n              closeAt: getTodayTime(closeAt),\n              weekDay: weekDay.enum,\n            })\n          }\n        })\n        return () => {\n          businessHours.current.forEach(weekDayHours => {\n            weekDayHours.clear()\n          })\n        }\n      },\n      [loading, settings.branchId],\n    )\n\n    const hourIdCounter = React.useRef(0)\n\n    const onAdd = (weekDay: WeekDayEnum) => () => {\n      businessHours.current.get(weekDay)!.push({\n        weekDay,\n        id: `L${hourIdCounter.current++}`,\n        openAt: DFP.startOfDay(new Date()),\n        closeAt: DFP.endOfDay(new Date()),\n      })\n    }\n\n    const onRemove = (weekDay: WeekDayEnum) => (hourId: ID) => {\n      const hours = businessHours.current.get(weekDay)!\n      const idx = hours.findIndex(RM.propEq('id', hourId))\n      if (idx >= 0) {\n        hours.splice(idx, 1)\n      }\n    }\n\n    const { enqueueSuccess } = useSnackBar()\n\n    const onSubmit = React.useCallback(async () => {\n      const hours: InputBusinessHourCreate[] = []\n      businessHours.current.forEach((weekDayHours, weekDay) => {\n        hours.push(\n          ...weekDayHours.map(hour => ({\n            openAt: formatTime(hour.openAt),\n            closeAt: formatTime(hour.closeAt),\n            weekDay,\n          })),\n        )\n      })\n      const result = await submitBusinessHours({\n        branchId: settings.branchId,\n        hours,\n      })\n      if (result) {\n        enqueueSuccess(i18n.t`Regular business hours has been updated`)\n      }\n    }, [])\n\n    if (loading || businessHours.current.size === 0) {\n      return <Loading />\n    }\n\n    return (\n      <div>\n        {data.weekDays.map(weekday => (\n          <BusinessHoursWeekday\n            key={weekday.enum}\n            weekday={weekday}\n            hours={businessHours.current.get(weekday.enum)!}\n            onAdd={onAdd(weekday.enum)}\n            onRemove={onRemove(weekday.enum)}\n          />\n        ))}\n        <Sizer width={20}>\n          <MarginBox margin=\"1rem\">\n            <TouchButton\n              text={i18n.t`Save regular hours`}\n              color={Colors.green}\n              onClick={onSubmit}\n            />\n          </MarginBox>\n        </Sizer>\n      </div>\n    )\n  })\n","import { TimePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { InputTime } from './InputTime'\n\ninterface IProps extends Omit<TimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputTime: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <Field\n      field={field}\n      render={fieldApi => (\n        <InputTime\n          value={fieldApi.value}\n          onChange={value => fieldApi.setValue(value)}\n          onOpen={() => fieldApi.setTouched(true)}\n          {...pickerProps}\n        />\n      )}\n    />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTime } from './FormInputTime'\n\ninterface IFormInputTimeSpanProps {\n  fieldFrom: FieldType\n  fieldTo: FieldType\n}\n\nconst InlineWrap = styled.div`\n  width: 5rem;\n  display: inline-block;\n`\n\nexport const FormInputTimeSpan: React.FC<IFormInputTimeSpanProps> = ({\n  fieldFrom,\n  fieldTo,\n}) => (\n  <>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldFrom}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldTo}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n  </>\n)\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { useSettings } from '../../../hooks/useSettings'\nimport { i18n } from '../../../i18n'\nimport { ESpecificHourMode } from '../models/BusinessHoursModel'\n\nconst labels = {\n  [ESpecificHourMode.TIMESPAN]: i18nMark('Open between'),\n  [ESpecificHourMode.FULLDAY]: i18nMark('Closed'),\n}\n\nexport const SpecificModeSelector = React.memo(() => {\n  const { businessHours } = useSettings()\n  return (\n    <SelectControlFlat<ESpecificHourMode>\n      items={[ESpecificHourMode.TIMESPAN, ESpecificHourMode.FULLDAY]}\n      selectedItem={businessHours.specificMode as ESpecificHourMode}\n      formatItem={mode => i18n._(labels[mode])}\n      onSingleSelection={(mode: ESpecificHourMode) =>\n        businessHours.changeSpecificMode(mode)\n      }\n    />\n  )\n})\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useSettings() {\n  const { settings } = useRoot()\n  return settings\n}\n","import { Trans } from '@lingui/macro'\nimport { setHours, setMinutes } from 'date-fns'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { FormInputTimeSpan } from '../../../atoms/FormInputTimeSpan'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { fullDateFormat } from '../../../helpers/formats'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport {\n  ESpecificHourMode,\n  ISpecificFormData,\n} from '../models/BusinessHoursModel'\nimport { SpecificModeSelector } from '../molecules/SpecificModeSelector'\n\nconst DateContainer = styled.div`\n  display: inline-block;\n  width: 13rem;\n  margin-left: 1rem;\n  margin-top: 2rem;\n`\n\nconst FormContainer = styled.div`\n  display: inline-block;\n  width: 16rem;\n  min-height: 6rem;\n  margin: 0rem 0 0 1rem;\n  vertical-align: top;\n`\n\nexport const SpecificBusinessHourForm: React.FC = props => {\n  const {\n    settings: { businessHours },\n  } = useRoot()\n  return (\n    <Form\n      onSubmit={businessHours.submitSpecificHour}\n      defaultValues={getDefaultValues()}\n    >\n      <DateContainer>\n        <FormInputDate\n          field=\"date\"\n          format={fullDateFormat}\n          minDate={new Date()}\n          fullWidth={true}\n          label={<Trans>Date</Trans>}\n        />\n      </DateContainer>\n\n      <FormContainer>\n        <SpecificModeSelector />\n        <Observer>\n          {() =>\n            businessHours.specificMode === ESpecificHourMode.TIMESPAN ? (\n              <FormInputTimeSpan fieldFrom=\"openAt\" fieldTo=\"closeAt\" />\n            ) : (\n              <Sizer width={13}>\n                <FormInputTextBox\n                  field=\"note\"\n                  inputFullWidth={true}\n                  placeholder={i18n.t`Closing reason`}\n                />\n              </Sizer>\n            )\n          }\n        </Observer>\n      </FormContainer>\n\n      <FormSubmit width=\"9rem\">{i18n.t`Add`}</FormSubmit>\n    </Form>\n  )\n}\n\nfunction getDefaultValues(): Partial<ISpecificFormData> {\n  const now = new Date()\n  return {\n    date: now,\n    openAt: setHours(setMinutes(now, 0), 9),\n    closeAt: setHours(setMinutes(now, 0), 20),\n  }\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface ISpecificBusinessHourLineProps {\n  bsHour: GSpecificBusinessHour.Fragment\n  onDelete(): void\n}\n\nexport const SpecificBusinessHourLine: React.FC<\n  ISpecificBusinessHourLineProps\n> = ({ bsHour, onDelete }) => (\n  <FlexRow>\n    <FlexColumn fixedWidth={true}>\n      <CanMutate mutationName=\"destroyBusinessHour\">\n        <TouchButtonDelete\n          onDelete={onDelete}\n          confirmText={`${i18n.t`Really remove specific business hour ${\n            bsHour.specificDateLocalized\n          }?`}`}\n        />\n      </CanMutate>\n    </FlexColumn>\n    <FlexColumn fixedWidth={true} width=\"14rem\">\n      {bsHour.specificDateLocalized}\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={1}>{formatLineTime(bsHour)}</FlexColumn>\n  </FlexRow>\n)\n\nfunction formatLineTime(bsHour: GSpecificBusinessHour.Fragment) {\n  if (bsHour.closed) {\n    return bsHour.closedNote\n  }\n  return `${bsHour.openAt} - ${bsHour.closeAt}`\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { SpecificBusinessHourLine } from '../molecules/SpecificBusinessHourLine'\nimport { QuerySpecificBusinessHours } from './SpecificBusinessHours.graphql'\n\nconst sortByDate = RM.sort<GSpecificBusinessHour.Fragment>(\n  // @ts-ignore Fix typing\n  RM.ascend(RM.or(RM.prop('specificDate'), RM.not)),\n)\n\nexport const SpecificBusinessHours: React.FC = () => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QuerySpecificBusinessHours\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderFragment={({ businessHours }) =>\n        sortByDate(businessHours).map(bsHour => (\n          <SpecificBusinessHourLine\n            key={bsHour.id}\n            bsHour={bsHour}\n            onDelete={() =>\n              settings.businessHours.deleteSpecificHour(bsHour.id)\n            }\n          />\n        ))\n      }\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../../segments/settings/organisms/SettingsCompanyBranchPicker'\nimport { BusinessHoursForm } from '../organisms/BusinessHoursForm'\nimport { SpecificBusinessHourForm } from '../organisms/SpecificBusinessHourForm'\nimport { SpecificBusinessHours } from '../organisms/SpecificBusinessHours'\n\nexport const BusinessHoursPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Business hours`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <CanQuery queryName=\"businessHours\">\n        <Headline>\n          <Trans>Regular business hours</Trans>\n        </Headline>\n        <BusinessHoursForm />\n      </CanQuery>\n\n      <Headline>\n        <Trans>Specific business hours</Trans>\n      </Headline>\n      <SpecificBusinessHours />\n\n      <CanMutate mutationName=\"addSpecialBusinessHour\">\n        <Headline>\n          <Trans>Add specific business hour</Trans>\n        </Headline>\n        <SpecificBusinessHourForm />\n      </CanMutate>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BusinessHoursPage } from '../pages/BusinessHoursPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BusinessHoursRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute exact={true} path={match.path} component={BusinessHoursPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const BusinessHoursButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Business hours`}\n    iconName=\"av_timer\"\n    color={Colors.red}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuCategoryButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Categories`}\n    iconName=\"folder\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuRecipeButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Recipes`}\n    iconName=\"insert_drive_file\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Stock overview`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockDepositButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Stock deposit`}\n    iconName=\"open_in_browser\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const UserMenuButton: React.FC = () => (\n  <TouchButton\n    text={i18n.t`User`}\n    iconName=\"person\"\n    color={Colors.greyMiddle}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IZonesMenuButtonProps {}\n\nexport const ZonesMenuButton: React.FC<IZonesMenuButtonProps> = props => (\n  <TouchButton\n    text={i18n.t`Delivery zones`}\n    iconName=\"edit_location\"\n    color={Colors.violet}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { BusinessHoursButton } from '../organisms/BusinessHoursButton'\nimport { MenuCategoryButton } from '../organisms/MenuCategoryButton'\nimport { MenuRecipeButton } from '../organisms/MenuRecipeButton'\nimport { MenuStockButton } from '../organisms/MenuStockButton'\nimport { MenuStockDepositButton } from '../organisms/MenuStockDepositButton'\nimport { UserMenuButton } from '../organisms/UserMenuButton'\nimport { ZonesMenuButton } from '../organisms/ZonesMenuButton'\n\ninterface ISettingsPageProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'BusinessHours', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'Preferences', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'ZonesMenu', x: 4, y: 1, w: 2, h: 2 },\n    { i: 'UserMenu', x: 6, y: 1, w: 2, h: 2 },\n    { i: 'MenuRecipe', x: 0, y: 3, w: 2, h: 2 },\n    { i: 'MenuCategory', x: 2, y: 3, w: 2, h: 2 },\n    { i: 'MenuStock', x: 4, y: 3, w: 2, h: 2 },\n    { i: 'MenuStockDeposit', x: 6, y: 3, w: 2, h: 2 },\n  ]\n}\n\nexport const SettingsPage: React.FC<ISettingsPageProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"BusinessHours\"\n      route=\"/settings/businesshours\"\n      component={BusinessHoursButton}\n      canQuery=\"businessHours\"\n    />\n    {/* <PageLayoutItem\n      key=\"Preferences\"\n      route=\"/settings/preferences\"\n      component={PreferencesButton}\n    /> */}\n    <PageLayoutItem\n      key=\"MenuRecipe\"\n      route=\"/settings/menu/recipe\"\n      component={MenuRecipeButton}\n      canQuery=\"recipes\"\n    />\n    <PageLayoutItem\n      key=\"MenuCategory\"\n      route=\"/settings/menu/category\"\n      component={MenuCategoryButton}\n      canQuery=\"wareCategories\"\n    />\n    <PageLayoutItem\n      key=\"MenuStock\"\n      route=\"/settings/menu/stock\"\n      component={MenuStockButton}\n      canQuery=\"stockItems\"\n    />\n    <PageLayoutItem\n      key=\"MenuStockDeposit\"\n      route=\"/settings/menu/stock/deposit\"\n      component={MenuStockDepositButton}\n      canMutate=\"changeAmountStockItem\"\n    />\n    <PageLayoutItem\n      key=\"ZonesMenu\"\n      route=\"/settings/zones\"\n      component={ZonesMenuButton}\n      canQuery=\"zones\"\n    />\n    <PageLayoutItem\n      key=\"UserMenu\"\n      route=\"/settings/user\"\n      component={UserMenuButton}\n      canQuery=\"user\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { LazyRoute } from '../../../routes/LazyRoute'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesRoutes } from '../../branchpreferences/routes/BranchPreferencesRoutes'\nimport { BusinessHoursRoutes } from '../../businesshours/routes/BusinessHoursRoutes'\nimport { SettingsPage } from '../pages/SettingsPage'\n\nconst ZoneMenuRoutes = React.lazy(() =>\n  import('../../../segments/zones/routes/ZoneMenuRoutes'),\n)\n\nconst MenuRoutes = React.lazy(() =>\n  import('../../../segments/menu/routes/MenuRoutes'),\n)\n\nconst UserMenuPage = React.lazy(() => import('../pages/UserMenuPage'))\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const SettingsRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => {\n  return (\n    <>\n      <PageTitle.Route path={match.path} title={i18n.t`Settings`} />\n      <Switch>\n        <SecureRoute exact={true} path={match.path} component={SettingsPage} />\n        <LazyRoute path={`${match.path}/menu`} component={MenuRoutes} />\n        <LazyRoute path={`${match.path}/zones`} component={ZoneMenuRoutes} />\n        <LazyRoute path={`${match.path}/user`} component={UserMenuPage} />\n        <Route\n          path={`${match.path}/businesshours`}\n          component={BusinessHoursRoutes}\n        />\n        <Route\n          path={`${match.path}/preferences`}\n          component={BranchPreferencesRoutes}\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </>\n  )\n}\n\nexport default SettingsRoutes\n"],"sourceRoot":""}