{"version":3,"sources":["molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","helpers/filter.ts","atoms/RelativeLink.tsx","atoms/FormInputFlatSelect.tsx","atoms/DragHandle.tsx","atoms/FormInputSelect.tsx","../node_modules/@speedlo/assets/index.js","../node_modules/@speedlo/assets/Flaticon.js","../node_modules/apollo-client/errors/ApolloError.js","molecules/TouchButtonEdit.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/extends.js","molecules/TouchButtonRemove.tsx","molecules/TouchButtonVisibility.tsx","atoms/NoteText.tsx","atoms/DataTable.tsx","molecules/SortableDataTable.tsx","segments/menu/molecules/CategoryListTable.tsx","segments/menu/molecules/CreateButton.tsx","segments/menu/organisms/CategoryList.tsx","segments/menu/organisms/MenuGuideDownload.tsx","segments/menu/pages/MenuCategoryListPage.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/labels.ts","segments/menu/molecules/SubmitButton.tsx","atoms/FormContainer.tsx","atoms/PictogramDisplay.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/organisms/CategoryFormBasic.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","segments/menu/organisms/CategoryFormLoader.tsx","atoms/DataList.tsx","atoms/FormDisplayField.tsx","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormPricingField.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/pages/MenuCategoryPage.tsx","atoms/DataTableContainer.tsx","segments/menu/molecules/MenuCategoryFilter.tsx","segments/menu/molecules/MenuFilterInput.tsx","atoms/RelativeRedirect.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipeListPage.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeCategoryView.tsx","segments/menu/molecules/FormInputCode.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormLoader.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","segments/menu/molecules/FormInputPlu.tsx","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/organisms/StockFormMain.tsx","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/routes/MenuRoutes.tsx"],"names":["__webpack_require__","d","__webpack_exports__","PageLayoutFullHeightItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","styled","div","withConfig","displayName","componentId","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref","children","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","a","createElement","id","FlexRowSingle","_ref$justify","justify","VerticalGap","_ref$size","size","_ref$sizeUnit","sizeUnit","concat","ScrollArea","CardDock","styled_components__WEBPACK_IMPORTED_MODULE_0__","_ref2","_ref2$position","position","_ref$position","isPartialMatch","searchValue","search","toLocaleLowerCase","propValue","includes","RelativeLink","to","from","linkProps","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","assign","resolveLocation","pathname","resolvePathname","resolved","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","FormInputFlatSelect","_React$Component","_getPrototypeOf2","_this","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","length","args","Array","_key","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","validate","value","_this$props","isRequired","isMulti","validationName","isArray","_i18n__WEBPACK_IMPORTED_MODULE_9__","_","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","fieldApi","_this$props2","items","defaultSelection","getItemId","selection","selectedItems","filter","item","onMultiSelection","setValue","map","setTouched","selectedItem","find","onSingleSelection","_this2","_this$props3","field","_this$props3$fieldIsP","fieldIsPure","_this$props3$isRequir","_this$props3$isCleara","isClearable","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","react_form__WEBPACK_IMPORTED_MODULE_7__","pure","_SelectControlFlat__WEBPACK_IMPORTED_MODULE_10__","getControlProps","isInvalid","Boolean","error","React","Component","defaultProps","RM","prop","DragHandle","react_sortable_hoc__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_Icon__WEBPACK_IMPORTED_MODULE_3__","DragHandleContainerStyled","SortableHandle","iconName","FormInputSelect","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_i18n__WEBPACK_IMPORTED_MODULE_10__","0","validatioName","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","options","getOptionValue","defaultValue","isSelected","F","onChange","selectedOptions","option","_this$props2$fieldIsP","react__WEBPACK_IMPORTED_MODULE_7___default","react_form__WEBPACK_IMPORTED_MODULE_8__","_SelectControl__WEBPACK_IMPORTED_MODULE_11__","onFocus","styles","control","base","borderColor","exports","pictograms","module","defineProperty","tslib_1","isApolloError","err","hasOwnProperty","generateErrorMessage","message","graphQLErrors","forEach","graphQLError","errorMessage","networkError","replace","ApolloError","_super","_a","extraInfo","__proto__","prototype","__extends","Error","TouchButtonEdit","target","_ref$Link","Link","objectWithoutProperties","react_default","SizerButton","TouchButton","_extends","i","source","TouchButtonRemove","TouchButtonVisibility","isVisible","iconColor","Colors","white","greyMiddle","color","NoteText","DataTable","_props$heightStretch","heightStretch","_props$fullHeight","fullHeight","_props$rowHeight","rowHeight","_props$isLoading","isLoading","tableProps","rowGetter","useCallback","index","noRowsRenderer","Pacman","renderTable","width","height","es","autoHeight","headerHeight","rowCount","style","outline","disableHeight","_ref3","scrollElement","window","_ref4","_ref5","checkColumnAccess","_ref6","renderer","canQuery","canMutate","cellProps","result","CanQuery","queryName","CanMutate","mutationName","ColumnRendererEdit","_ref7","cellData","TouchButtonEdit_TouchButtonEdit","ColumnRendererRemove","_ref8","columnData","TouchButtonRemove_TouchButtonRemove","onClick","onRemove","ColumnRendererVisibility","_ref9","rowData","TouchButtonVisibility_TouchButtonVisibility","onToggle","ColumnRendererWithNote","_ref10","Fragment","noteKey","DataTableEmptyText","_ref11","_ref11$text","text","i18n","SortableTableRowRenderer","SortableElement","columns","className","SortableDataTableContainer","SortableContainer","SortableDataTable","_React$PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","sortedItems","rowRenderer","rowProps","onHandleSorting","asyncToGenerator","regenerator_default","mark","_callee","newIndex","oldIndex","currentItems","sortSuccess","wrap","_context","prev","next","abrupt","toConsumableArray","arrayMove","setState","onSort","offset","t0","sent","stop","_x","inherits","createClass","lockAxis","useDragHandle","onSortEnd","PureComponent","getDerivedStateFromProps","nextProps","CategoryListTable","categories","_ref$showEditColumn","showEditColumn","_ref$showRemoveColumn","showRemoveColumn","_ref$showVisibilityCo","showVisibilityColumn","_ref$showHeader","showHeader","_ref$isSortable","isSortable","_ref$isLoading","_ref$heightStretch","_ref$fullHeight","_ref$noRowsDisplay","noRowsDisplay","disableHeader","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","cellDataGetter","getCategoryRoute","categoryType","enum","label","objectSpread","CreateButtonContainer","CreateButton","_ref$routeTo","routeTo","green","observer","headline","_ref$subHeadline","subHeadline","settings","useRoot","_useQMenuCategoryList","useQMenuCategoryList","branchId","data","loading","updateQuery","refetch","_useMMenuCategoryVisi","useMMenuCategoryVisibility","changeVisibility","slicedToArray","FlexColumn","widthGrowIndex","Headline","fixedWidth","CreateButton_CreateButton","CategoryListTable_CategoryListTable","categoryId","visible","optimisticResponse","updateWareCategory","__typename","menu","category","sortCategory","MenuGuideDownloadButton","black","MenuGuideDownload","_useQMenuGuideDownloa","useQMenuGuideDownload","companyBranch","foodMenuUrl","href","_lingui_react","PartialDataTableContainer","MenuCategoryListPage","FullPageLayout","pageTitle","useBackButton","Card","stretchToParent","SettingsCompanyBranchPicker","organisms_CategoryList","WareCategoryTypeEnum","Main","SideDish","Cover","TopRightButtonContainer","Radiuses","Button","_categories","i18nMark","recipes","_recipes","getCategoryTypeLabel","getRecipeTypeLabel","recipeType","SubmitButton","_ref$isCreate","isCreate","react_form_es","render","form","FormSubmit","isFormValid","getButtonText","FormContainer","FormColumn","PictogramDisplayStyled","_ref2$fontSize","fontSize","_ref2$fontSizeUnit","fontSizeUnit","PictogramDisplay","pictogramId","_ref$fontSize","_ref$fontSizeUnit","getClassName","MenuCategoryPictogramSelect","SelectControl","pictogram","availablePictograms","formatOptionLabel","PictogramDisplay_PictogramDisplay","components","SingleValue","container","menuList","maxHeight","isSearchable","FormDeleteButton","confirmText","onDelete","react_router","history","TouchButtonDelete","goBack","FormInputInternalNote","_ref$field","_ref$label","icon","IconLine","labelWidth","FormInputTextBox","inputFullWidth","FormInputName","_ref$icon","CategoryBasicForm","Sizer","FormInputName_FormInputName","placeholder","FormInputInternalNote_FormInputInternalNote","FormInputCheckbox","MenuCategoryPictogramSelect_MenuCategoryPictogramSelect","WithSettings","FormDeleteButton_FormDeleteButton","deleteCategory","FormLoader","shouldLoad","loader","_useState","useState","_useState2","values","setValues","useEffect","then","NavigateBack","ErrorPop","MenuBaseFormLoader","submitError","validationErrors","_this$state","renderSubmitError","renderValidationErrors","messages","propEq","userErrors","renderPopover","errors","index_es","open","anchorEl","document","getElementById","onClose","anchorOrigin","vertical","horizontal","idx","_this3","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack_NavigateBack","defaultValues","defaults","loadedDefaults","formApi","logForm","onSubmit","_callee2","_context2","onSubmitFailure","keys","logError","renderErrors","useMenu","CategoryFormLoader","MenuBaseFormLoader_MenuBaseFormLoader","createCategory","updateCategory","internalNoteLabel","nameLabel","getDefaults","client","query","MenuCategoryFormQuery","variables","fetchPolicy","wareCategory","DataList","renderItem","listProps","renderList","formInputPriceValidate","isEmpty","validateNumber","FormInputPrice","VatsQuery","gql","_templateObject","QueryVat","buildQuery","css","FormInputVatSelect","useObserver","renderLoading","vats","formatItem","vat","FormPricingCurrencyCode","FormPricingField","priceType","FormInputPrice_FormInputPrice","FormInputVatSelect_FormInputVatSelect","MenuSuggestionPanel","onAdd","_props$addLabel","addLabel","_props$addButtonText","addButtonText","selectProps","_useStateRef","useStateRef","_useStateRef2","getSelected","setSelected","onConfirm","selected","onKeyDown","ev","onSelect","margin","getOptionLabel","disabled","RecipeAssocListTable","DataTable_DataTable","RecipeAssociatedView","recipeId","priceTypeRecipes","rejectSuggestions","reject","recipe","some","onAddRecipe","addedRecipe","warePriceType","associatedRecipe","formattedPrice","RecipeAssocListTable_RecipeAssocListTable","RecipeForm_graphql","priceTypes","WarePriceTypeEnum","Delivery","Inhouse","RecipeFormPricing","react","FormPricingField_FormPricingField","TRecipeType","RecipeAssociatedView_RecipeAssociatedView","RecipeSuggestionPanel","filterRecipes","_useQMenuRecipeList","useQMenuRecipeList","Container","FormFixedRow","FormStretchedRow","SortableRecipes","RecipeRow","MoveCell","SortableRecipe","prices","foundPrice","pathEq","price","formattedValue","code","internalNote","CategoryRecipesView","without","lockToContainerEdges","MenuCategoryPage","CategoryFormLoader_CategoryFormLoader","hideLogoutWidget","MenuCategoryPage_FormContainer","MenuCategoryPage_FormFixedRow","CategoryFormBasic_CategoryBasicForm","MenuCategoryPage_FormStretchedRow","CategoryRecipesView_CategoryRecipesView","SubmitButton_SubmitButton","DataTableContainer","MenuCategoryFilter","_useQMenuCategoryFilt","useQMenuCategoryFilter","setCategoryFilter","grouped","groupBy","cat","toString","typeString","getOptions","MenuFilterInput","modelType","model","useDebounceCallback","setFilterInput","Search","FormInputStyled","filterInput","RelativeRedirect","RecipeTypeSelection","_Component","isOpen","onOpen","RelativeRedirect_RelativeRedirect","getRecipeRoute","push","preventDefault","RecipeListTable","_ref$showTypeColumn","showTypeColumn","react_content_loader_es","ColumnRendererCode","flexGrow","ColumnRendererPrice","TPriceType","type","RecipeListLoader","categoryFilterId","filteredRecipes","useComputed","partialMatch","cond","propSatisfies","T","RecipeListTable_RecipeListTable","MenuRecipeListPage","MenuFilterInput_MenuFilterInput","RecipeTypeSelection_RecipeTypeSelection","IsCategoryType","isMain","isSideDish","isCover","currentCategories","RecipeCategoryView","noRowsText","organisms_CategorySuggestionPanel","addedCategory","FormInputCode","FormInputDescription","AllergensQuery","FormInputAllergens_graphql_templateObject","FMenuAllergenFragmentDoc","QueryAllergens","AllergenBox","MarginAroundFormComponents","active","yellow","MenuAllergenIndicator","allergens","allergen","title","extractAllergens","pipe","flatten","uniq","RecipeAllergenDisplay","AllergenIndicator_MenuAllergenIndicator","RecipeFormBasic","FormInputCode_FormInputCode","FormInputDescription_FormInputDescription","IsCategoryType_IsCategoryType","RecipeAllergenDisplay_RecipeAllergenDisplay","deleteRecipe","RecipeFormLoader","createRecipe","updateRecipe","currencyCode","queryDefaults","getPriceMap","vatId","MenuRecipeFormQuery","normalizeValues","acc","reduce","descriptionLabel","image","sourcePrices","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","recipeSource","quantity","_ref7$stockItem","stockItem","unitLabel","wareUnit","sourcePrice","currency","RecipeIngredientsTable","rowIndex","validateQuantity","fieldName","validator","isFloat","min","unselectedStockOnly","differenceWith","RecipeIngredientsControl","_useQMenuStockList","useQMenuStockList","RecipeIngredientsTable_RecipeIngredientsTable","stockItems","_onAdd","addedStockItem","RecipeIngredientsView","ingredient","stockItemId","MenuRecipePage","RecipeFormLoader_RecipeFormLoader","MenuRecipePage_FormContainer","RecipeFormBasic_RecipeFormBasic","RecipeFormPricing_RecipeFormPricing","RecipeIngredientsView_RecipeIngredientsView","RecipeCategoryView_RecipeCategoryView","StockDepositConfirmButton","numeral","format","priceFormat","1","StockDepositFilterInput","forwardRef","ref","onFilter","autoFocus","onKeyPressCapture","StockDepositQuantityInput","enabled","_onChange","StockDepositResultTable","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","indexOf","begin","substring","match","end","StockDepositControl","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","trim","head","onConfirmFilter","current","focus","onQuantity","onSelectStockItem","onDeposit","prevProps","_this$state2","hasSearchValue","isNoneFind","isMultiFind","StockDepositConfirmButton_StockDepositConfirmButton","cardName","StockDepositResultTable_StockDepositResultTable","StockDepositLoader","_useQMenuStockDeposit","useQMenuStockDeposit","_useMMenuStockQuantit","useMMenuStockQuantity","changeQuantity","quantityChange","MenuStockDepositPage","StockDepositControl_StockDepositControl","StockListTable","Loading","stockAllowNegative","StockListLoader","filteredItems","stock","StockListTable_StockListTable","MenuStockListPage","MenuStockFormQuery","StockForm_graphql_templateObject","FMenuWareUnitFragmentDoc","MenuStockDefaultsQuery","_templateObject2","StockFormLoader","stockId","createItem","updateItem","allowNegativeDefault","getAllowNegativeDefault","allowNegative","note","plu","FieldStateEnum","Default","isEnabled","Disabled","FormInputAllergens","Enabled","FormInputAllowNegative","obj","TypeError","_objectDestructuringEmpty","labelForDefault","useMemo","FormInputPlu","WareUnitsQuery","FormInputWareUnit_graphql_templateObject","QueryWareUnits","FormInputWareUnit","wareUnits","StockFormMain","FormInputWareUnit_FormInputWareUnit","FormInputPlu_FormInputPlu","FormInputAllergens_FormInputAllergens","FormInputAllowNegative_FormInputAllowNegative","deleteItem","StockRecipesView","_useQStockRecipes","useQStockRecipes","MenuStockPage","StockFormLoader_StockFormLoader","StockFormMain_StockFormMain","StockRecipesVIew_StockRecipesView","MenuRoutes_MenuRoutes","MenuRoutes","SecureRoute","exact","path","component","params","MenuCategoryPage_MenuCategoryPage","MenuRecipePage_MenuRecipePage","MenuStockPage_MenuStockPage","NotFoundPage"],"mappings":"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","file":"static/js/176.c1bbc8e0.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends Omit<\n      ISelectControlFlatProps<ItemType>,\n      | 'selectedItems'\n      | 'onMultiSelection'\n      | 'selectedItem'\n      | 'onSingleSelection'\n    > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n  defaultSelection?: ReadonlyArray<ItemType> | ItemType\n}\n\nexport class FormInputFlatSelect<ItemType> extends React.Component<\n  IFormInputSelectProps<ItemType>\n> {\n  static defaultProps = {\n    validationName: i18n.t`Value`,\n    getItemId: RM.prop('id'),\n  }\n  validate = value => {\n    const { isRequired, isMulti, validationName } = this.props\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && (value === null || value === undefined)) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n  getControlProps(\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> {\n    const { isMulti, items, defaultSelection, getItemId } = this.props\n\n    const selection = fieldApi.value || defaultSelection\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) =>\n        selection.includes(getItemId!(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId!))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId!(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId!(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      isClearable = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} pure={fieldIsPure} validate={this.validate}>\n        {fieldApi => (\n          <SelectControlFlat<ItemType>\n            {...this.getControlProps(fieldApi)}\n            isInvalid={Boolean(fieldApi.error)}\n            isClearable={isClearable && !isRequired}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      defaultValue,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","exports.pictograms = require('./Flaticon');","module.exports = ['pizza', 'beans', 'cheese', 'hot-pepper', 'smoking-barbecue', 'meat-pie', 'sausage', 'hot-dog', 'fruit', 'fruit-1', 'fruit-2', 'strawberry', 'soup', 'noodles', 'ramen', 'rice', 'spaghetti', 'food', 'piece-of-cake', 'beer', 'marshmallow', 'cake', 'banana-split', 'ice-cream', 'cookie', 'doughnut', 'cupcake', 'kebab', 'steak', 'fish', 'fondue', 'shrimp', 'berry', 'food', 'food-1', 'food-2', 'food-3', 'food-4', 'food-5', 'food-6', 'food-7', 'food-8', 'food-9', 'food-10', 'food-11', 'food-12', 'food-13', 'food-14', 'food-15', 'food-16', 'food-17', 'food-18', 'food-19', 'food-20', 'food-21', 'food-22', 'food-23', 'food-24', 'food-25', 'food-26', 'food-27', 'food-28', 'food-29', 'food-30', 'drink', 'drink-1', 'drink-2', 'drink-3', 'drink-4', 'drink-5', 'cup', 'cup-1', 'cup-2', 'whisky'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nfunction isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\nexports.isApolloError = isApolloError;\n\nvar generateErrorMessage = function generateErrorMessage(err) {\n  var message = '';\n\n  if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += \"GraphQL error: \" + errorMessage + \"\\n\";\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nvar ApolloError = function (_super) {\n  tslib_1.__extends(ApolloError, _super);\n\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        networkError = _a.networkError,\n        errorMessage = _a.errorMessage,\n        extraInfo = _a.extraInfo;\n\n    var _this = _super.call(this, errorMessage) || this;\n\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      _this.message = generateErrorMessage(_this);\n    } else {\n      _this.message = errorMessage;\n    }\n\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n\n  return ApolloError;\n}(Error);\n\nexports.ApolloError = ApolloError;","import { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends Omit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.FC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <SizerButton>\n      <TouchButton iconName=\"mode_edit\" {...props} />\n    </SizerButton>\n  </Link>\n)\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.FC<IProps> = ({ ...props }) => (\n  <SizerButton>\n    <TouchButton iconName=\"remove_circle_outline\" {...props} />\n  </SizerButton>\n)\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.FC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      iconName=\"remove_red_eye\"\n      iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n      color={Colors.greyMiddle}\n      {...props}\n    />\n  </SizerButton>\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Index,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport { NoteText } from './NoteText'\nimport Pacman from './Pacman'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  rowHeight?: number\n  isLoading?: boolean\n  heightStretch?: boolean\n  fullHeight?: boolean\n}\n\nexport const DataTable = <T extends {}>(props: IDataTableProps<T>) => {\n  const {\n    items,\n    heightStretch = false,\n    fullHeight = false,\n    rowHeight = 60,\n    isLoading = false,\n    children,\n    ...tableProps\n  } = props\n\n  const rowGetter = React.useCallback(({ index }: Index) => items[index], [\n    items,\n  ])\n\n  const noRowsRenderer = React.useCallback(\n    () => (isLoading ? <Pacman /> : null),\n    [isLoading],\n  )\n\n  const renderTable = (width: number, height: number) => {\n    return (\n      <Table\n        autoHeight={!heightStretch && !fullHeight}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowCount={items ? items.length : 0}\n        rowHeight={rowHeight}\n        rowGetter={rowGetter}\n        noRowsRenderer={noRowsRenderer}\n        style={{ outline: 'none' }}\n        {...tableProps}\n      >\n        {children}\n      </Table>\n    )\n  }\n\n  if (fullHeight) {\n    return (\n      <AutoSizer disableHeight={true}>\n        {({ width }) => renderTable(width, items.length * rowHeight)}\n      </AutoSizer>\n    )\n  }\n\n  if (heightStretch) {\n    return (\n      <AutoSizer>{({ width, height }) => renderTable(width, height)}</AutoSizer>\n    )\n  }\n\n  return (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderTable(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.PureComponent<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  rowRenderer = rowProps => {\n    return <SortableTableRowRenderer {...rowProps} />\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        lockAxis=\"y\"\n        useDragHandle={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={this.rowRenderer}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FMenuCategoryListItemFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\n\ntype TCategory = FMenuCategoryListItemFragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  fullHeight?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.FC<IProps> = ({\n  categories,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  fullHeight = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    heightStretch,\n    fullHeight,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  const columns = [\n    showEditColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canQuery: 'wareCategory' },\n          ColumnRendererEdit,\n        )}\n        cellDataGetter={({ rowData }) =>\n          getCategoryRoute(rowData.id, rowData.categoryType.enum)\n        }\n      />\n    ),\n    showRemoveColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererRemove}\n        columnData={{ onRemove }}\n      />\n    ),\n    showVisibilityColumn && (\n      <Column\n        dataKey=\"visible\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canMutate: 'updateWareCategory' },\n          ColumnRendererVisibility,\n        )}\n        columnData={{ onToggle }}\n      />\n    ),\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNoteLabel' }}\n    />,\n    <Column\n      dataKey=\"countRecipes\"\n      label={i18n.t`Recipe count`}\n      width={100}\n      cellRenderer={({ cellData }) =>\n        `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n      }\n    />,\n    isSortable && (\n      <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n    ),\n  ]\n\n  if (isSortable) {\n    return React.createElement(\n      SortableDataTable,\n      {\n        onSort: onSort as any,\n        ...props,\n      },\n      ...columns,\n    )\n  }\n\n  return React.createElement(DataTable, props, ...columns)\n}\n","import { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLAnchorElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.FC<IProps> = ({\n  routeTo = 'create',\n  onClick,\n}) => (\n  <CreateButtonContainer>\n    <RelativeLink to={routeTo} onClick={onClick}>\n      <SizerButton>\n        <TouchButton iconName=\"add_circle\" color={Colors.green} />\n      </SizerButton>\n    </RelativeLink>\n  </CreateButtonContainer>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useMMenuCategoryVisibility,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery, refetch } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const [changeVisibility] = useMMenuCategoryVisibility()\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <CreateButton routeTo={getCategoryRoute('create', categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories}\n        onToggle={(categoryId: ID, visible: boolean) => {\n          changeVisibility(\n            { categoryId, visible },\n            {\n              optimisticResponse: {\n                updateWareCategory: {\n                  __typename: 'WareCategory',\n                  id: categoryId,\n                  visible,\n                },\n              },\n            },\n          )\n        }}\n        isSortable={true}\n        showHeader={false}\n        fullHeight={true}\n        showVisibilityColumn={true}\n        onSort={async ({ item, items, offset }) => {\n          updateQuery(() => ({\n            categories: items,\n          }))\n          const result = await settings.menu.category.sortCategory(\n            item.id,\n            offset,\n          )\n          if (result) {\n            await refetch()\n          }\n          return result\n        }}\n      />\n    </>\n  )\n}\n\nexport default observer(CategoryList)\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuGuideDownload } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nconst MenuGuideDownloadButton = styled(TouchButton)`\n  white-space: nowrap;\n  margin-left: 2rem;\n  & a {\n    text-decoration: none;\n    color: ${Colors.black};\n    padding: 1rem;\n  }\n`\n\nexport const MenuGuideDownload = observer(() => {\n  const { settings } = useRoot()\n  const { loading, data } = useQMenuGuideDownload({\n    branchId: settings.branchId,\n  })\n  if (\n    loading ||\n    !(data && data.companyBranch && data.companyBranch.foodMenuUrl)\n  ) {\n    return null\n  }\n  return (\n    <MenuGuideDownloadButton color={Colors.greyMiddle}>\n      <a href={data.companyBranch.foodMenuUrl} target=\"_blank\">\n        <Trans>Menu codes manual</Trans>\n      </a>\n    </MenuGuideDownloadButton>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport CategoryList from '../organisms/CategoryList'\nimport { MenuGuideDownload } from '../organisms/MenuGuideDownload'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.FC = () => (\n  <>\n    <FullPageLayout\n      pageTitle={i18n.t`Category overview`}\n      useBackButton={true}\n    />\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuGuideDownload />\n          </FlexColumn>\n        </FlexRowSingle>\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0;\n  top: 0rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menutypes'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport function getCategoryTypeLabel(categoryType: TCategoryType) {\n  return i18n._(categories[categoryType])\n}\n\nexport function getRecipeTypeLabel(recipeType: TRecipeType) {\n  return i18n._(recipes[recipeType])\n}\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.FC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst PictogramDisplayStyled = styled.div`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport const PictogramDisplay: React.FC<IProps> = ({\n  pictogramId,\n  fontSize = 2,\n  fontSizeUnit = 'rem',\n}) => (\n  <PictogramDisplayStyled\n    className={getClassName(pictogramId)}\n    fontSize={fontSize}\n    fontSizeUnit={fontSizeUnit}\n  />\n)\n\nfunction getFontSize({ fontSize = 2, fontSizeUnit = 'rem' }: Partial<IProps>) {\n  return `${fontSize}${fontSizeUnit}`\n}\n\nfunction getClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.FC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value && !Array.isArray(value)) {\n            fieldApi.setValue(value.pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router-dom'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.FC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.FC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputName: React.FC<IProps> = ({\n  field = 'nameLabel',\n  icon = 'label',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputFullWidth={true}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.FC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <Sizer width={22}>\n        <FormInputName\n          placeholder={i18n.t`Category name`}\n          inputFullWidth={true}\n        />\n      </Sizer>\n      <Sizer width={22}>\n        <FormInputInternalNote placeholder={i18n.t`Category internal note`} />\n      </Sizer>\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <CardDock position=\"BottomRight\">\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </CardDock>\n  </FormContainer>\n)\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(\n    () => {\n      if (!shouldLoad) {\n        return\n      }\n      loader().then(setValues)\n    },\n    [shouldLoad],\n  )\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.FC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              const defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuCategoryForm } from '../../../graph/types'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuCategoryFormQuery } from './CategoryForm.graphql'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport type TCategoryFormValues = GMenuCategoryForm.WareCategory\n\nexport const CategoryFormLoader: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={categoryId === null}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuCategoryForm.Query>({\n          query: MenuCategoryFormQuery,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return data.wareCategory\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    categoryType: { enum: categoryType },\n    recipes: [],\n  }\n}\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  List,\n  ListProps,\n  ListRowRenderer,\n  WindowScroller,\n} from 'react-virtualized'\n\ninterface IColumn {\n  size: string\n}\n\ninterface IDataListProps<T> extends Partial<ListProps> {\n  items: ReadonlyArray<T>\n  columns?: IColumn[]\n  renderItem(item: T, index: number): ReactNode\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport function DataList<T>(props: IDataListProps<T>) {\n  const {\n    items,\n    renderItem,\n    isLoading = false,\n    heightStretch = false,\n    rowHeight = 60,\n    ...listProps\n  } = props\n\n  const rowRenderer: ListRowRenderer = React.useCallback(\n    ({ key, style, index }) => (\n      <div key={key} style={style}>\n        {renderItem(items[index], index)}\n      </div>\n    ),\n    [renderItem, items],\n  )\n\n  const renderList = (width: number, height: number) => (\n    <List\n      width={width}\n      height={height}\n      headerHeight={50}\n      rowHeight={rowHeight}\n      rowCount={items ? items.length : 0}\n      rowRenderer={rowRenderer}\n      style={{ outline: 'none' }}\n      {...listProps}\n    />\n  )\n\n  return heightStretch ? (\n    <AutoSizer>{({ width, height }) => renderList(width, height)}</AutoSizer>\n  ) : (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderList(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\ninterface IProps {\n  field: FieldType\n  className?: string\n  children?: never\n}\n\nexport const FormDisplayField: React.FC<IProps> = ({ field, className }) => {\n  return (\n    <Field field={field}>\n      {fieldApi => <span className={className}>{fieldApi.value}</span>}\n    </Field>\n  )\n}\n","import React from 'react'\nimport { isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { validateNumber } from '../../../locale/numeral'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nconst formInputPriceValidate = (value: string) => {\n  if (\n    value === undefined ||\n    isEmpty(value + '') ||\n    !validateNumber(value + '')\n  ) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.FC<IProps> = ({\n  field = 'price.value',\n  icon = 'toll',\n  ...props\n}) => (\n  <IconLine icon={icon}>\n    <Sizer width={5}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        validate={formInputPriceValidate}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import { css } from 'emotion'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.FC<IProps> = ({\n  field = 'price.vat',\n}) => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QueryVat\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderLoading={false}\n      render={({ vats }) => (\n        <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n          {vats && (\n            <FormInputFlatSelect\n              field={field}\n              items={vats}\n              formatItem={({ vat }) => `${vat}%`}\n              isRequired={true}\n              validationName={i18n.t`VAT`}\n            />\n          )}\n        </IconLine>\n      )}\n    />\n  ))\n}\n","import React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormDisplayField } from '../../../atoms/FormDisplayField'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nconst FormPricingCurrencyCode = styled(FormDisplayField)`\n  padding: 0.5rem;\n`\n\nexport const FormPricingField: React.FC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormPricingCurrencyCode field=\"currencyCode\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import { useStateRef } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: string }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(\n    () => {\n      const selected = getSelected()\n      if (selected !== null) {\n        onAdd(selected)\n        setSelected(null)\n      }\n    },\n    [onAdd],\n  )\n\n  const onKeyDown = useCallback((ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === 'Enter') {\n      onConfirm()\n    }\n  }, [])\n\n  const onSelect = useCallback(option => {\n    setSelected(option || null)\n  }, [])\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.prop('nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.FC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.FC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                variables={{\n                  branchId: settings.branchId,\n                }}\n                fetchPolicy=\"cache-and-network\"\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.FC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useQMenuRecipeList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel = observer<IProps>(\n  ({ categoryType, filterRecipes, onAdd }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuRecipeList({\n      branchId: settings.branchId,\n      categoryType,\n    })\n    return (\n      <MenuSuggestionPanel<TRecipe>\n        isLoading={loading}\n        options={loading ? [] : filterRecipes(data.recipes)}\n        onAdd={onAdd}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { DataList } from '../../../atoms/DataList'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { priceTypes } from './RecipeFormPricing'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n`\n\nconst FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\n\nconst FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  margin: 1rem 0 0 1rem;\n`\n\nconst SortableRecipes = SortableContainer(FormStretchedRow)\n\nconst RecipeRow = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: ${Spacing.ButtonColumnWidthPx}px 100px 3fr 1fr 1fr 50px;\n`\n\nconst MoveCell = styled.div`\n  cursor: move;\n`\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IRecipeRow {\n  recipe: TRecipe\n  onRemove(): void\n}\n\nconst SortableRecipe = SortableElement<IRecipeRow>(({ recipe, onRemove }) => {\n  const prices = priceTypes.map(({ priceType, label }) => {\n    const foundPrice = recipe.prices.find(\n      RM.pathEq(['priceType', 'enum'], priceType),\n    )\n    return (\n      <MoveCell key={priceType}>\n        <NoteText>{i18n._(label)}</NoteText>\n        {foundPrice ? (\n          foundPrice.price.formattedValue\n        ) : (\n          <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n        )}\n      </MoveCell>\n    )\n  })\n\n  return (\n    <RecipeRow>\n      <div>\n        <TouchButtonRemove onClick={onRemove} />\n      </div>\n      <MoveCell>{recipe.code}</MoveCell>\n      <MoveCell>\n        {recipe.nameLabel}\n        <NoteText>{recipe.internalNote}</NoteText>\n      </MoveCell>\n      {prices}\n      <DragHandle />\n    </RecipeRow>\n  )\n})\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<TRecipe>>) => {\n        const recipes = fieldApi.value\n        const onHandleSorting: SortEndHandler = async ({\n          newIndex,\n          oldIndex,\n        }) => {\n          if (newIndex === oldIndex) {\n            return\n          }\n          const sortedItems = arrayMove(\n            recipes as TRecipe[],\n            oldIndex,\n            newIndex,\n          )\n\n          fieldApi.setValue(sortedItems)\n        }\n        return (\n          <Container>\n            <FormFixedRow>\n              <RecipeSuggestionPanel\n                categoryType={categoryType}\n                filterRecipes={RM.without(fieldApi.value)}\n                onAdd={addedRecipe =>\n                  fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n                }\n              />\n            </FormFixedRow>\n            <SortableRecipes\n              lockAxis=\"y\"\n              lockToContainerEdges={true}\n              onSortEnd={onHandleSorting}\n            >\n              <DataList\n                items={fieldApi.value}\n                heightStretch={true}\n                rowHeight={60}\n                renderItem={(recipe, index) => (\n                  <SortableRecipe\n                    recipe={recipe}\n                    onRemove={() => {\n                      fieldApi.setValue(\n                        RM.reject(RM.propEq('id', recipe.id), fieldApi.value),\n                      )\n                    }}\n                    index={index}\n                  />\n                )}\n                rowCount={fieldApi.value.length}\n              />\n            </SortableRecipes>\n          </Container>\n        )\n      }}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { getCategoryTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n}) => (\n  <CategoryFormLoader categoryId={categoryId} categoryType={categoryType}>\n    <>\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      />\n\n      <PageLayoutFullHeightItem>\n        <FormContainer>\n          <FormFixedRow>\n            <Card>\n              <CategoryBasicForm categoryType={categoryType} />\n            </Card>\n          </FormFixedRow>\n          <FormStretchedRow>\n            <Card stretchToParent={true}>\n              <Headline>\n                <Trans>Recipes assigned to this category</Trans>\n              </Headline>\n              <CategoryRecipesView categoryType={categoryType} />\n            </Card>\n          </FormStretchedRow>\n        </FormContainer>\n      </PageLayoutFullHeightItem>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={\n            categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n          }\n        >\n          <SubmitButton isCreate={categoryId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </>\n  </CategoryFormLoader>\n)\n","import styled from 'styled-components'\n\nexport const DataTableContainer = styled.div`\n  height: calc(100% - 4.5rem);\n  padding-top: 2rem;\n`\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  QMenuCategoryFilterCategories,\n  useQMenuCategoryFilter,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { getCategoryTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\n\ntype TCategory = QMenuCategoryFilterCategories\n\nexport const MenuCategoryFilter = observer(() => {\n  const {\n    settings: {\n      menu: { recipe },\n    },\n  } = useRoot()\n\n  const { data, loading } = useQMenuCategoryFilter({\n    branchId: recipe.branchId,\n  })\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return []\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TRecipeType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        key={recipe.branchId}\n        onChange={value => {\n          recipe.setCategoryFilter(value ? (value as TCategory).id : null)\n        }}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={true}\n        isSearchable={true}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.prop('nameLabel')}\n      />\n    </Sizer>\n  )\n})\n","import { Search } from '@material-ui/icons'\nimport { useDebounceCallback } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <Sizer width={17}>\n        <FormInputStyled\n          defaultValue={model.filterInput}\n          inputFullWidth={true}\n          onChange={ev => onChange(ev.target.value)}\n          placeholder={i18n.t`Filter by name or code`}\n        />\n      </Sizer>\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport { Redirect, RedirectProps } from 'react-router-dom'\n\nimport { resolveLocation } from './RelativeLink'\n\ninterface IProps extends RedirectProps {}\n\nexport const RelativeRedirect: React.FC<IProps> = ({ to, from, ...props }) => (\n  <Redirect\n    to={resolveLocation(to, from || `${location.pathname}/`)}\n    from={from}\n    {...props}\n  />\n)\n","import { Trans } from '@lingui/macro'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport React, { Component } from 'react'\n\nimport { RelativeRedirect } from '../../../atoms/RelativeRedirect'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\nimport { CreateButton } from './CreateButton'\n\ninterface IProps {}\n\ninterface IState {\n  isOpen: boolean\n  recipeType: Maybe<WareCategoryTypeEnum>\n}\n\nexport class RecipeTypeSelection extends Component<IProps, IState> {\n  state = { isOpen: false, recipeType: null }\n  onClose = () => {\n    this.setState({ isOpen: false })\n  }\n  onOpen = () => {\n    this.setState({ isOpen: true })\n  }\n  onSelect = (recipeType: WareCategoryTypeEnum) => () => {\n    this.setState({ isOpen: true, recipeType })\n  }\n  render() {\n    const { isOpen, recipeType } = this.state\n    return (\n      <>\n        {recipeType !== null && (\n          <RelativeRedirect\n            to={getRecipeRoute('create', recipeType)}\n            push={true}\n          />\n        )}\n        <CreateButton\n          onClick={ev => {\n            ev.preventDefault()\n            this.onOpen()\n          }}\n        />\n        <Dialog open={isOpen} onClose={this.onClose}>\n          <DialogTitle>Select item type</DialogTitle>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Main)}>\n            <Trans>Ware</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.SideDish)}>\n            <Trans>Sidedish</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Cover)}>\n            <Trans>Cover</Trans>\n          </TouchButton>\n        </Dialog>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport {\n  QMenuRecipeListRecipes,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TPriceType } from '../menutypes'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\n\ntype TRecipe = QMenuRecipeListRecipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.FC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  return (\n    <DataTable {...props}>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n    </DataTable>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuRecipeList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuRecipeList({\n    branchId: settings.branchId,\n    categoryId: settings.menu.recipe.categoryFilterId,\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data || !data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuCategoryFilter } from '../molecules/MenuCategoryFilter'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const MenuRecipeListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"recipe\" />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuCategoryFilter />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createRecipe\">\n          <RecipeTypeSelection />\n        </CanMutate>\n        <DataTableContainer>\n          <RecipeListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.FC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FMenuCategoryListItemFragment,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nconst CategorySuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <MenuSuggestionPanel<TCategory>\n      isLoading={loading}\n      options={RM.without(currentCategories, categories)}\n      addButtonText={addButtonText}\n      onAdd={onAdd}\n    />\n  )\n}\n\nexport default observer(CategorySuggestionPanel)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport {\n  FMenuCategoryListItemFragment,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport CategorySuggestionPanel from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nexport const RecipeCategoryView: React.FC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<TCategory[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.FC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        isRequired={true}\n        validatioName={i18n.t`Code`}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.FC<IProps> = ({\n  field = 'descriptionLabel',\n  icon = 'label_outline',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { FMenuAllergenFragmentDoc } from '../../../graph/generated'\nimport { GAllergens } from '../../../graph/types'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...FMenuAllergen\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/generated'\nimport { Colors, Spacing } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.FC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nconst extractAllergens = RM.pipe(\n  RM.map(RM.prop('allergens')),\n  // @ts-ignore Something wrong with Ramda typings\n  RM.flatten,\n  RM.uniq,\n)\n\nexport const RecipeAllergenDisplay: React.FC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = extractAllergens(value)\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.FC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon=\"error_outline\">\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <CardDock position=\"BottomRight\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </CardDock>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.FC<IProps> = ({\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={recipeId === null}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const { vats, currencyCode } = await menu.recipe.queryDefaults()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: vats[priceType],\n          currencyCode,\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.FC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInputTextBox\n            field={['ingredients', rowIndex, 'quantity']}\n            validate={validateQuantity}\n            inputFullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onAdd(ingredient: TIngredient): void\n  onRemove(stockItemId: ID): void\n}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsControl = observer<IProps>(\n  ({ ingredients, onAdd, onRemove }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuStockList({\n      branchId: settings.branchId,\n    })\n\n    return (\n      <>\n        <RecipeIngredientsTable ingredients={ingredients} onRemove={onRemove} />\n        <MenuSuggestionPanel<GMenuStockItem.Fragment>\n          isLoading={loading}\n          addButtonText={i18n.t`Add ingredient`}\n          options={\n            loading ? [] : unselectedStockOnly(data.stockItems, ingredients)\n          }\n          onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n            onAdd({\n              stockItem: addedStockItem.id,\n              label: addedStockItem.nameLabel,\n              quantity: 1,\n              unitLabel: addedStockItem.wareUnit.code,\n              allergens: addedStockItem.allergens.map(RM.prop('enum')),\n            })\n          }}\n        />\n      </>\n    )\n  },\n)\n\nexport const RecipeIngredientsView = () => {\n  return (\n    <Field field=\"ingredients\">\n      {(fieldApi: IFieldApi<TIngredient[]>) => (\n        <RecipeIngredientsControl\n          ingredients={fieldApi.value}\n          onAdd={ingredient => {\n            fieldApi.setValue([...fieldApi.value, ingredient])\n          }}\n          onRemove={stockItemId => {\n            fieldApi.setValue(\n              RM.reject(RM.propEq('stockItem', stockItemId), fieldApi.value),\n            )\n          }}\n        />\n      )}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getRecipeTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: WareCategoryTypeEnum\n}\n\nconst FormContainer = styled('div')`\n  margin: 0 1.25rem 0 0;\n`\n\nexport const MenuRecipePage: React.FC<IProps> = ({ recipeId, recipeType }) => (\n  <RecipeFormLoader recipeId={recipeId} recipeType={recipeType}>\n    <FormContainer>\n      <FullPageLayout\n        width={16}\n        pageTitle={getRecipeTypeLabel(recipeType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <Card>\n          <RecipeFormBasic recipeType={recipeType} />\n        </Card>\n        <Card>\n          <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n        </Card>\n        <Card>\n          <Headline>\n            <Trans>Recipe ingredients</Trans>\n          </Headline>\n          <VerticalGap />\n          <RecipeIngredientsView />\n        </Card>\n        <IsCategoryType type={recipeType} isMain={true}>\n          <Card>\n            <Headline>\n              <Trans>Sidedish categories</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>These sidedish are presented with recipe</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.SideDish}\n              field=\"sideDishes\"\n              addButtonText={i18n.t`Attach sidedish category`}\n              noRowsText={i18n.t`Recipe has no sidedish category attached`}\n            />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Category assignments</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>Recipe is in these categories</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.Main}\n              field=\"categories\"\n              addButtonText={i18n.t`Add to category`}\n              noRowsText={i18n.t`Recipe is not in any category`}\n            />\n          </Card>\n        </IsCategoryType>\n      </FullPageLayout>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n        >\n          <SubmitButton isCreate={recipeId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </FormContainer>\n  </RecipeFormLoader>\n)\n","import { Trans } from '@lingui/macro'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { FMenuWareUnitFragment } from '../../../graph/generated'\nimport { priceFormat } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<FMenuWareUnitFragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.FC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format(priceFormat)} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { QMenuStockDepositStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: QMenuStockDepositStockItems[]\n  onSelect(stockItem: QMenuStockDepositStockItems): void\n}\n\nexport const StockDepositResultTable: React.FC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTableContainer>\n    <DataTable items={stockItems} heightStretch={false}>\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererSelect}\n        columnData={{ onSelect }}\n      />\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n      <Column\n        dataKey=\"code\"\n        width={100}\n        label={i18n.t`Card code`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Card name`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n    </DataTable>\n  </DataTableContainer>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <SizerButton>\n      <TouchButton iconName=\"done\" onClick={() => onSelect(rowData)} />\n    </SizerButton>\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  componentDidUpdate(prevProps: IProps) {\n    if (prevProps.stockItems !== this.props.stockItems) {\n      this.onFilter(this.state.searchValue)\n    }\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { observer } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QMenuStockDepositStockItems,\n  useMMenuStockQuantity,\n  useQMenuStockDeposit,\n} from '../../../graph/generated'\n\nexport type TStockItem = QMenuStockDepositStockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader = observer<IProps>(({ children }) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockDeposit({\n    branchId: settings.branchId,\n  })\n  const [changeQuantity] = useMMenuStockQuantity()\n  const onDeposit: TDepositFn = (stockItem, quantity) => {\n    changeQuantity({\n      stockItem: stockItem.id,\n      quantityChange: quantity,\n    })\n  }\n  return children(loading ? [] : data.stockItems, onDeposit)\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.FC<IProps> = props => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock deposit`}\n    useBackButton={true}\n  >\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { QMenuStockListStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\n\ntype TStockItem = QMenuStockListStockItems\n\ninterface IProps {\n  stockItems: TStockItem[]\n  isLoading: boolean\n}\n\nexport const StockListTable: React.FC<IProps> = ({ stockItems, isLoading }) => (\n  <DataTable\n    items={stockItems}\n    heightStretch={true}\n    noRowsRenderer={() =>\n      isLoading ? (\n        <Loading />\n      ) : (\n        <h3>\n          <Trans>Selected branch has no stock cards</Trans>\n        </h3>\n      )\n    }\n  >\n    <Column\n      dataKey=\"id\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={checkColumnAccess(\n        { canQuery: 'stockItem' },\n        ColumnRendererEdit,\n      )}\n    />\n    <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      minWidth={30}\n      flexGrow={2}\n      label={i18n.t`Card name`}\n    />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"allowNegative\"\n      width={300}\n      label={i18n.t`Negative stock`}\n      cellRenderer={stockAllowNegative}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockListTable } from './StockListTable'\n\nexport const StockListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockList({\n    branchId: settings.branchId,\n  })\n\n  const filteredItems = useComputed(\n    () => {\n      if (!data || !data.stockItems || data.stockItems.length === 0) {\n        return []\n      }\n      const searchValue = settings.menu.stock.filterInput\n      const partialMatch = isPartialMatch(searchValue)\n      return data.stockItems.filter(\n        RM.cond([\n          [RM.propEq('plu', searchValue), RM.T],\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.stockItems],\n  )\n\n  return <StockListTable stockItems={filteredItems} isLoading={loading} />\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\n\nexport const MenuStockListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"stock\" />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createStockItem\">\n          <CreateButton routeTo=\"create\" />\n        </CanMutate>\n        <DataTableContainer>\n          <StockListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FMenuAllergenFragmentDoc,\n  FMenuWareUnitFragmentDoc,\n} from '../../../graph/generated'\nimport { GMenuStockForm } from '../../../graph/types'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...FMenuWareUnit\n      }\n      allergens {\n        ...FMenuAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n  ${FMenuWareUnitFragmentDoc}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  WareUnitEnum,\n} from '../../../graph/generated'\nimport { GMenuStockDefaults, GMenuStockForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.FC<IProps> = ({ stockId, children }) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={stockId === null}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId: stockId! },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n  icon?: string\n}\n\nexport const FormInputAllergens: React.FC<IProps> = ({\n  field = 'allergens',\n  icon = 'error_outline',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={icon} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.FC<IProps> = ({}) => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputPlu: React.FC<IProps> = ({\n  field = 'plu',\n  icon = 'fingerprint',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {\n  icon?: string\n}\n\nexport const FormInputWareUnit: React.FC<IProps> = ({\n  field = 'wareUnit',\n  icon = 'select_all',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={icon} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.FC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <CardDock position=\"BottomRight\">\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </CardDock>\n  </FormContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Column, ColumnRendererEdit, DataTable } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport Pacman from '../../../atoms/Pacman'\nimport { useQStockRecipes } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  stockId: ID\n}\n\nexport const StockRecipesView: React.FC<IProps> = ({ stockId }) => {\n  const { data, loading } = useQStockRecipes({\n    stockId,\n  })\n\n  if (loading) {\n    return <Pacman />\n  }\n\n  const {\n    stockItem: { ingredients },\n  } = data\n  if (ingredients.length === 0) {\n    return (\n      <Headline>\n        <Trans>No recipes are using stock card</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      <Headline>\n        <Trans>Recipes using this card</Trans>\n      </Headline>\n\n      <DataTable\n        items={[...ingredients]}\n        disableHeader={true}\n        fullHeight={true}\n      >\n        <Column\n          dataKey=\"\"\n          cellDataGetter={({ rowData }) => ({\n            pathname: `/settings/menu/recipe/${rowData.recipe.id}`,\n            state: { recipeType: rowData.recipe.recipeType.enum },\n          })}\n          cellRenderer={ColumnRendererEdit}\n          width={100}\n        />\n        <Column\n          dataKey=\"recipe\"\n          width={300}\n          label={i18n.t`Name`}\n          cellRenderer={({ rowData }) => (\n            <>\n              {rowData.recipe.nameLabel}\n              <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n            </>\n          )}\n        />\n      </DataTable>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const MenuStockPage: React.FC<IProps> = ({ stockId }) => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock card`}\n    hideLogoutWidget={true}\n    useBackButton={true}\n  >\n    <StockFormLoader stockId={stockId}>\n      <>\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              stockId === null ? 'createStockItem' : 'updateStockItem'\n            }\n          >\n            <SubmitButton isCreate={stockId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n        <Card>\n          <StockFormMain />\n          {stockId && (\n            <CanQuery queryName=\"recipes\">\n              <StockRecipesView stockId={stockId} />\n            </CanQuery>\n          )}\n        </Card>\n      </>\n    </StockFormLoader>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MenuRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      render={() => <Redirect to={`${match.path}/category`} />}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/category`}\n      component={MenuCategoryListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/category/:categoryId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuCategoryPage\n          categoryId={params.categoryId === 'create' ? null : params.categoryId}\n          categoryType={state.categoryType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/recipe`}\n      component={MenuRecipeListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/recipe/:recipeId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuRecipePage\n          recipeId={params.recipeId === 'create' ? null : params.recipeId}\n          recipeType={state.recipeType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/stock`}\n      component={MenuStockListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/deposit`}\n      component={MenuStockDepositPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/:stockId`}\n      render={({ match: { params } }) => (\n        <MenuStockPage\n          stockId={params.stockId === 'create' ? null : params.stockId}\n        />\n      )}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default MenuRoutes\n"],"sourceRoot":""}