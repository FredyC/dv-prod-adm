{"version":3,"sources":["../node_modules/babel-runtime/helpers/defineProperty.js","molecules/PageLayoutFullHeightItem.tsx","atoms/VerticalGap.tsx","atoms/FlexRowSingle.tsx","hooks/useRouterContext.ts","atoms/ScrollArea.tsx","atoms/CardListTitle.tsx","atoms/DragHandle.tsx","atoms/BaseMap.tsx","../node_modules/react-content-loader/dist/react-content-loader.es.js","atoms/FormInputSelect.tsx","atoms/ConfirmDialog.tsx","segments/zones/hooks/useZoneId.ts","segments/zones/hooks/useZoneRouteControl.tsx","segments/zones/atoms/ZonePriceInput.tsx","segments/zones/molecules/ZoneColorSelector.tsx","segments/zones/atoms/ZonePlaceholderInput.tsx","segments/zones/molecules/ZoneFormPriceRange.tsx","segments/zones/molecules/ZoneFormContent.tsx","segments/zones/molecules/ZoneFormControls.tsx","segments/zones/organisms/ZoneListLoader.graphql.ts","segments/zones/organisms/ZoneListLoader.tsx","segments/zones/organisms/ZoneFormPanel.tsx","molecules/MapCompanyBranchMarker.tsx","segments/zones/atoms/ZoneMapArea.tsx","segments/zones/atoms/ZoneMapEditableArea.tsx","segments/zones/hooks/useZoneModel.ts","segments/zones/organisms/ZoneMapControl.tsx","segments/zones/molecules/CreateZoneButton.tsx","segments/zones/atoms/ZoneListCard.tsx","segments/zones/molecules/ZoneList.tsx","segments/zones/organisms/ZoneListControl.tsx","segments/zones/molecules/ZoneFIlterBranch.tsx","segments/zones/molecules/ZoneFilterBrand.tsx","segments/zones/organisms/ZoneFilter.tsx","segments/zones/organisms/ZoneMenuPanel.tsx","segments/zones/pages/ZonePageLayout.tsx","segments/zones/routes/ZoneMenuRoutes.tsx"],"names":["exports","__esModule","obj","_defineProperty","__webpack_require__","_defineProperty2","default","key","value","enumerable","configurable","writable","d","__webpack_exports__","PageLayoutFullHeightItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","div","withConfig","displayName","props","undefined","widthInColumns","LayoutGridCellMargin","widthComputed","column","leftPos","row","topPos","FullHeightDivStyled","children","withScrollArea","scrollAreaId","a","createElement","id","VerticalGap","size","sizeUnit","FlexRowSingle","justify","useRouterContext","react_router__WEBPACK_IMPORTED_MODULE_1__","Object","ScrollArea","CardListTitle","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","h2","greyLight","DragHandle","react_sortable_hoc__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_Icon__WEBPACK_IMPORTED_MODULE_3__","DragHandleContainerStyled","iconName","BaseMap","mobx_react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","react_google_maps__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_styling__WEBPACK_IMPORTED_MODULE_4__","MapContainerStyled","Card","BaseMapContainer","Fragment","[object Object]","this","getOptions","streetViewControl","mapTypeControl","fullscreenControl","model","containerElement","mapElement","style","height","ref","setMapRef","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","options","render","BulletListStyle","uid","Math","random","toString","substring","Wrap","idClip","uniquekey","idGradient","animationValues","rtl","viewBox","width","preserveAspectRatio","className","fill","clipPath","x","y","offset","stopColor","primaryColor","stopOpacity","primaryOpacity","animate","attributeName","values","dur","speed","repeatCount","secondaryColor","secondaryOpacity","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","ContentLoader","cx","cy","r","rx","ry","defaultProps","InitialComponent","mergedProps","FormInputSelect","Component","validate","isRequired","_i18n__WEBPACK_IMPORTED_MODULE_3__","_","0","validatioName","fieldApi","isMulti","getOptionValue","defaultValue","selection","isSelected","Array","isArray","item","includes","_helpers_ramda__WEBPACK_IMPORTED_MODULE_2__","F","filter","onChange","selectedOptions","setValue","map","find","option","_a","field","fieldIsPure","__rest","react_form__WEBPACK_IMPORTED_MODULE_1__","pure","_SelectControl__WEBPACK_IMPORTED_MODULE_4__","getControlProps","onFocus","setTouched","styles","control","base","Boolean","error","borderColor","getItemId","prop","ConfirmDialog","react","isShow","window","confirm","confirmText","onConfirm","onCancel","useZoneId","match","zoneId","params","useZoneRouteControl","user","zone","zoneModel","RootProvider","history","getRouteToZone","editZoneId","panToZone","canQuery","push","LabelStyled","styled_components_browser_esm","FormInputTextBoxStyled","FormInputTextBox","FormInputTextBoxDeliveryStyled","styling","blue","DeliveryContainer","PriceRangeContainer","VerticalLine","validatePrice","trim","Number","isNaN","parseFloat","i18n","ZonePriceInput","react_default","forwardRef","label","isDeliveryPrice","autoFocus","ColorOption","color","white","QueryZoneColors","buildQuery","Zones_graphql","ZoneColorSelector","zoneColors","padding","margin","menu","maxWidth","makeStyles","ramda","head","formatOptionLabel","zoneColor","code","ZonePlaceholderInput_LabelStyled","FormInputForPlaceholderStyled","Container","ZonePlaceholderInput","display","disabled","placeholder","AddButtonContainer","RemoveButtonContainer","ZoneFormPriceRange","idx","TouchButtonDelete","onDelete","removeValue","es","formApi","TouchButton","submitting","ButtonHeight","onClick","addValue","price","toPrice","ZoneFormContentStyled","Middle","black","DescriptionUnderHeadline","greyDark","ZoneFormContent","IconLine","icon","helpers_form","FormInputCheckbox","name","toLocaleLowerCase","_lingui_react","components","Headline","component","ZoneFormControls","isSubmitting","isModified","onGoBack","onSave","FlexColumn","widthGrowIndex","greyMiddle","text","CanMutate","mutationName","green","ZonesQuery","QueryZones","ZoneListContext","createContext","ZoneListLoader","mobx_react_index_module","branches","branchFilterPredicate","Provider","variables","branchesId","renderLoading","zones","loading","useZoneList","DeleteButtonContainer","ZoneFormPanel","zoneList","routeToZoneList","setModified","formApiRef","__awaiter","current","submitForm","destroyZone","index_module","mobx_module","currentZonePoints","propEq","defaultValues","formState","logger","onSubmit","saveZone","index_es","when","handleOk","handleCancel","Loading","BranchNameStyled","isActive","MapCompanyBranchMarker","branch","lib","getPixelPositionOffset","mapPaneName","MARKER_LAYER","position","gps","ZoneMapArea","onAreaFocus","e","stop","points","priority","defaultPath","fillColor","fillOpacity","strokeWeight","zIndex","editable","draggable","onDblClick","ZoneMapEditableArea","polygonRef","onAreaChange","path","getPath","getArray","listeners","addListener","onClear","forEach","lis","remove","onDragEnd","useZoneModel","ZoneMapControl","routeToZoneEdit","companyBranchId","hasBranchFilter","branchFilterId","renderZoneArea","areaProps","geoPolygon","companyBranch","enabled","updateZonePoints","clearZonePoints","renderBranchLabel","CreateZoneButton","createZone","turquoise","textNextToIcon","ZoneNameStyled","ZoneDescriptionStyled","ZoneFlexRowStyled","ZoneListCard","commonjs","onEdit","fixedWidth","ZoneListContainerStyled","sortZones","ramda_es","groupByBranch","ZoneList","onZoneEdit","renderZone","index","collection","output","onSortEnd","sorted","oldIndex","newIndex","changeZonePriority","grouped","branchZones","renderBranch","useDragHandle","lockAxis","ZoneListControl","react_content_loader_es","brand","zoneFilterPredicate","root","filterBranches","ZoneFilterBranch","selectedBranch","onSelection","CompanyBranchDropdown","onSingleSelection","isClearable","ZoneFilterBrand","brands","selectedBrand","SelectControl","getOptionLabel","isSearchable","ZoneFilter","WithRoot","setBranchFilter","getBrandBranches","pathEq","singleBrand","setBrandFilter","clearBrandFilter","clearBranchFilter","ZoneMenuContainer","FixedHeaderContainer","ScrollAreaContainer","ZoneMenuPanel","ZonePageLayout","isEditing","PageLayout","pageTitle","useBackButton","backRoute","ZoneMenuRoutes","react_router","NotFoundPage"],"mappings":"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","file":"static/js/54.971d54f7.chunk.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.SFC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import { useContext } from 'react'\nimport * as Router from 'react-router'\n\nexport default function useRouterContext<\n  Params extends { [K in keyof Params]?: string } = {}\n>(): Router.RouteComponentProps<Params> {\n  // @ts-ignore\n  return useContext(Router.__RouterContext)\n}\n\n// export default function useRouter<\n// Params extends { [K in keyof Params]?: string } = {}\n// >(): Router.RouteComponentProps<Params> {\n//   // @ts-ignore\n//   let context = useContext(Router.__RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n\n// }\n\n// export default function useRouter(options = {}) {\n//   invariant(\n//     typeof useContext === \"function\",\n//     \"The useRouter hook requires React 16.7 or greater\"\n//   );\n\n//   let context = useContext(RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n// }\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n`\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","import { Observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { GoogleMap, GoogleMapProps, withGoogleMap } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { TMapModel } from '../models/MapModel'\nimport { Radiuses } from '../styling'\n\ninterface IBaseMapProps extends GoogleMapProps {\n  model: TMapModel\n  render(control: IMapControl): ReactNode | ReactNode[]\n}\n\ninterface IMapControl {}\n\nconst MapContainerStyled = styled.div`\n  border-radius: ${Radiuses.Card};\n  overflow: hidden;\n  height: 100%;\n`\n\nconst BaseMapContainer = withGoogleMap(({ children }) => <>{children}</>)\n\nexport class BaseMap extends Component<IBaseMapProps> {\n  getOptions = () => {\n    return {\n      streetViewControl: false,\n      mapTypeControl: false,\n      fullscreenControl: false,\n    }\n  }\n  render() {\n    const { model } = this.props\n    return (\n      <BaseMapContainer\n        containerElement={<MapContainerStyled />}\n        mapElement={<div style={{ height: `100%` }} />}\n      >\n        <Observer>\n          {() => (\n            <GoogleMap\n              ref={model.setMapRef}\n              zoom={model.zoom}\n              center={model.center}\n              onCenterChanged={model.updatePosition}\n              onZoomChanged={model.updateZoom}\n              options={this.getOptions()}\n            >\n              {this.props.render({})}\n            </GoogleMap>\n          )}\n        </Observer>\n      </BaseMapContainer>\n    )\n  }\n}\n","import { createElement } from 'react';\n\nvar uid = function uid() {\n  return Math.random().toString(36).substring(2);\n};\n\nvar Wrap = function Wrap(props) {\n  var idClip = props.uniquekey ? props.uniquekey + \"-idClip\" : uid();\n  var idGradient = props.uniquekey ? props.uniquekey + \"-idGradient\" : uid();\n  var defautlAnimation = [\"-3; 1\", \"-2; 2\", \"-1; 3\"];\n  var rtlAnimation = [\"1; -3\", \"2; -2\", \"3; -1\"];\n  var animationValues = props.rtl ? rtlAnimation : defautlAnimation;\n  return createElement(\"svg\", {\n    viewBox: \"0 0 \" + props.width + \" \" + props.height,\n    style: props.style,\n    preserveAspectRatio: props.preserveAspectRatio,\n    className: props.className\n  }, createElement(\"rect\", {\n    style: {\n      fill: \"url(#\" + idGradient + \")\"\n    },\n    clipPath: \"url(#\" + idClip + \")\",\n    x: \"0\",\n    y: \"0\",\n    width: props.width,\n    height: props.height\n  }), createElement(\"defs\", null, createElement(\"clipPath\", {\n    id: idClip\n  }, props.children), createElement(\"linearGradient\", {\n    id: idGradient\n  }, createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: props.primaryColor,\n    stopOpacity: props.primaryOpacity\n  }, props.animate && createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: animationValues[0],\n    dur: props.speed + \"s\",\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: \"50%\",\n    stopColor: props.secondaryColor,\n    stopOpacity: props.secondaryOpacity\n  }, props.animate && createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: animationValues[1],\n    dur: props.speed + \"s\",\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: props.primaryColor,\n    stopOpacity: props.primaryOpacity\n  }, props.animate && createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: animationValues[2],\n    dur: props.speed + \"s\",\n    repeatCount: \"indefinite\"\n  })))));\n};\n\nvar FacebookStyle = function FacebookStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"rect\", {\n    x: \"70\",\n    y: \"15\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"117\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"70\",\n    y: \"35\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"85\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"80\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"350\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"100\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"380\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"120\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"201\",\n    height: \"6.4\"\n  }), createElement(\"circle\", {\n    cx: \"30\",\n    cy: \"30\",\n    r: \"30\"\n  }));\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar InstagramStyle = function InstagramStyle(props) {\n  return createElement(ContentLoader, _extends({}, props, {\n    height: 480\n  }), createElement(\"circle\", {\n    cx: \"30\",\n    cy: \"30\",\n    r: \"30\"\n  }), createElement(\"rect\", {\n    x: \"75\",\n    y: \"13\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"100\",\n    height: \"13\"\n  }), createElement(\"rect\", {\n    x: \"75\",\n    y: \"37\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"50\",\n    height: \"8\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"70\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"400\",\n    height: \"400\"\n  }));\n};\n\nvar CodeStyle = function CodeStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"70\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"80\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"100\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"190\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"10\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"15\",\n    y: \"20\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"130\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"155\",\n    y: \"20\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"130\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"15\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"90\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"115\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"60\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"185\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"60\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"60\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"30\",\n    height: \"10\"\n  }));\n};\n\nvar ListStyle = function ListStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"250\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"20\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"170\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"60\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"250\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"80\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"200\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"100\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"80\",\n    height: \"10\"\n  }));\n};\n\nvar BulletListStyle = function BulletListStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"20\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"15\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"50\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"45\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"80\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"75\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"110\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"105\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }));\n};\n\nvar defaultProps = {\n  animate: true,\n  height: 130,\n  preserveAspectRatio: \"xMidYMid meet\",\n  primaryColor: \"#f0f0f0\",\n  primaryOpacity: 1,\n  rtl: false,\n  secondaryColor: \"#e0e0e0\",\n  secondaryOpacity: 1,\n  speed: 2,\n  width: 400\n};\n\nvar InitialComponent = function InitialComponent(props) {\n  return createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"5\",\n    ry: \"5\",\n    width: props.width,\n    height: props.height\n  });\n};\n\nvar ContentLoader = function ContentLoader(props) {\n  var mergedProps = _extends({}, defaultProps, props);\n\n  var children = props.children ? props.children : createElement(InitialComponent, mergedProps);\n  return createElement(Wrap, mergedProps, children);\n};\n\nexport { defaultProps, FacebookStyle as Facebook, InstagramStyle as Instagram, CodeStyle as Code, ListStyle as List, BulletListStyle as BulletList };\nexport default ContentLoader;","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      defaultValue = undefined,\n      isRequired = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import React, { useEffect } from 'react'\n\ninterface IProps {\n  isShow: boolean\n  confirmText: string\n  onConfirm(): void\n  onCancel(): void\n}\n\nexport const ConfirmDialog: React.SFC<IProps> = props => {\n  useEffect(\n    () => {\n      if (props.isShow) {\n        if (window.confirm(props.confirmText)) {\n          props.onConfirm()\n        } else {\n          props.onCancel()\n        }\n      }\n    },\n    [props.isShow],\n  )\n  return null\n}\n","import useRouterContext from '../../../hooks/useRouterContext'\n\ninterface IZoneRouteParams {\n  zoneId?: ID\n}\n\nexport function useZoneId() {\n  const { match } = useRouterContext<IZoneRouteParams>()\n  const { zoneId } = match.params\n  return zoneId\n}\n","import { useRoot } from '../../../atoms/RootProvider'\nimport useRouterContext from '../../../hooks/useRouterContext'\n\nexport function useZoneRouteControl() {\n  const { user, zone: zoneModel } = useRoot()\n  const { history } = useRouterContext()\n  const baseRoute = '/settings/zones'\n  const getRouteToZone = (zoneId: ID) => {\n    return `${baseRoute}/${zoneId}`\n  }\n  return {\n    getRouteToZone,\n    routeToZoneEdit(editZoneId: ID) {\n      zoneModel.map.panToZone(editZoneId)\n      if (user.canQuery('zone')) {\n        history.push(getRouteToZone(editZoneId))\n      }\n    },\n    routeToZoneList() {\n      history.push(baseRoute)\n    },\n  }\n}\n","import React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface IZoneInputProps {\n  field: FieldType\n  label?: string\n  autoFocus?: boolean\n  isDeliveryPrice?: boolean\n}\n\nconst LabelStyled = styled.div`\n  min-width: 2rem;\n  display: inline-block;\n`\n\nconst FormInputTextBoxStyled = styled(FormInputTextBox)`\n  width: 3rem;\n  position: relative;\n  z-index: 4;\n`\nconst FormInputTextBoxDeliveryStyled = styled(FormInputTextBoxStyled)`\n  color: ${Colors.blue};\n`\n\nconst DeliveryContainer = styled.div`\n  position: relative;\n  left: 8rem;\n  top: 0rem;\n`\n\nconst PriceRangeContainer = styled.div`\n  position: relative;\n  left: 4rem;\n  top: -0.3rem;\n  width: 3rem;\n`\n\nconst VerticalLine = styled.div`\n  border-left: 3px solid #707070;\n  width: 3px;\n  position: relative;\n  left: -2rem;\n  height: 4rem;\n  float: left;\n  margin: -0.5rem 0 0 0;\n`\n\nconst validatePrice = (value: string) => {\n  if (typeof value === 'number') {\n    return null\n  }\n  const trim = value.trim()\n  return trim.length && Number.isNaN(Number.parseFloat(trim))\n    ? i18n.t`Must be number`\n    : null\n}\n\nexport const ZonePriceInput = React.forwardRef<\n  HTMLInputElement,\n  IZoneInputProps\n>(\n  ({ field, label, isDeliveryPrice, autoFocus = false }, ref) =>\n    isDeliveryPrice ? (\n      <DeliveryContainer>\n        <VerticalLine />\n        <LabelStyled>{label}</LabelStyled>\n        <FormInputTextBoxDeliveryStyled\n          field={field}\n          validate={validatePrice}\n          // @ts-ignore\n          ref={ref}\n        />\n      </DeliveryContainer>\n    ) : (\n      <PriceRangeContainer>\n        <FormInputTextBoxStyled\n          field={field}\n          validate={validatePrice}\n          autoFocus={autoFocus}\n        />\n      </PriceRangeContainer>\n    ),\n)\n","import React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputSelect } from '../../../atoms/FormInputSelect'\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GZoneColors } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { Colors } from '../../../styling'\nimport { ZoneColorsQuery } from '../Zones.graphql'\n\ninterface IZoneColorSelectorProps {\n  field?: FieldType\n}\n\nconst ColorOption = styled.div`\n  background-color: ${({ color }: { color: string }) => color};\n  color: ${Colors.white};\n  width: 6rem;\n  padding: 0.4rem 1rem;\n  margin: 0;\n  height: 100%;\n`\n\nconst QueryZoneColors = buildQuery<GZoneColors.Query, GZoneColors.Variables>(\n  ZoneColorsQuery,\n)\n\nconst makeStyles = () => ({\n  option: base => ({\n    ...base,\n    padding: 0,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    width: '8rem',\n    maxWidth: '8rem',\n  }),\n})\n\nexport const ZoneColorSelector: React.SFC<IZoneColorSelectorProps> = ({\n  field = 'zoneColor.id',\n}) => (\n  <QueryZoneColors\n    render={({ zoneColors }) => (\n      <FormInputSelect<GZoneColors.ZoneColors>\n        field={field}\n        fieldIsPure={true}\n        options={zoneColors}\n        width={8}\n        styles={makeStyles()}\n        defaultValue={RM.head(zoneColors)}\n        getOptionValue={RM.prop('id')}\n        formatOptionLabel={zoneColor => (\n          <ColorOption color={zoneColor.color}>{zoneColor.code}</ColorOption>\n        )}\n      />\n    )}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputStyled } from '../../../atoms/FormInputTextBox'\n\ninterface IZonePlaceholderInputProps {\n  label: string\n  display: string\n}\n\nconst LabelStyled = styled.div`\n  width: 3rem;\n  display: inline-block;\n`\n\nconst FormInputForPlaceholderStyled = styled(FormInputStyled)`\n  width: 3rem;\n  position: relative;\n  z-index: 4;\n`\n\nconst Container = styled.div`\n  margin: 0 0 0 1rem;\n`\n\nexport const ZonePlaceholderInput: React.SFC<IZonePlaceholderInputProps> = ({\n  label,\n  display,\n}) => (\n  <Container>\n    <LabelStyled>{label}</LabelStyled>\n    <FormInputForPlaceholderStyled disabled={true} placeholder={display} />\n  </Container>\n)\n","import React, { Fragment } from 'react'\nimport { FormApi, NestedFieldComponentProps } from 'react-form'\nimport styled from 'styled-components'\n\nimport { GZonePriceRange } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\nimport { Spacing } from '../../../styling'\nimport { ZonePlaceholderInput } from '../atoms/ZonePlaceholderInput'\nimport { ZonePriceInput } from '../atoms/ZonePriceInput'\n\ninterface IProps\n  extends NestedFieldComponentProps<GZonePriceRange.Fragment[]> {}\n\nconst AddButtonContainer = styled.div`\n  position: relative;\n  top: -6rem;\n`\n\nconst RemoveButtonContainer = styled.div`\n  position: relative;\n  top: -7rem;\n  left: 16rem;\n`\n\nexport const ZoneFormPriceRange: React.SFC<IProps> = ({ fieldApi }) => {\n  return (\n    <>\n      {fieldApi.values.map((value, idx, values) => (\n        <Fragment key={idx}>\n          <ZonePriceInput\n            label=\"za\"\n            isDeliveryPrice={true}\n            field={[idx, 'price', 'value']}\n          />\n\n          {idx === values.length - 1 ? (\n            <ZonePlaceholderInput display=\"&infin;\" label=\"do\" />\n          ) : (\n            <ZonePriceInput\n              field={[idx, 'toPrice', 'value']}\n              autoFocus={true}\n            />\n          )}\n\n          {values.length > 1 && (\n            <RemoveButtonContainer>\n              <TouchButtonDelete\n                onDelete={() => fieldApi.removeValue('', idx)}\n              />\n            </RemoveButtonContainer>\n          )}\n        </Fragment>\n      ))}\n      <FormApi\n        render={formApi => (\n          <AddButtonContainer>\n            <TouchButton\n              disabled={formApi.submitting}\n              width={Spacing.ButtonHeight}\n              iconName=\"add_circle\"\n              onClick={() =>\n                fieldApi.addValue('', {\n                  price: { value: 0 },\n                  toPrice: { value: 0 },\n                })\n              }\n            />\n          </AddButtonContainer>\n        )}\n      />\n    </>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Headline } from '../../../atoms/Headline'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { validateIsRequired } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { Colors, Spacing } from '../../../styling'\nimport { ZonePriceInput } from '../atoms/ZonePriceInput'\nimport { ZoneColorSelector } from '../molecules/ZoneColorSelector'\nimport { ZoneFormPriceRange } from '../molecules/ZoneFormPriceRange'\n\ninterface IZoneFormContentProps {}\n\nconst ZoneFormContentStyled = styled.div`\n  margin: ${Spacing.Middle};\n  color: ${Colors.black};\n`\n\nconst DescriptionUnderHeadline = styled.div`\n  color: ${Colors.greyDark};\n  padding-bottom: 0.2rem;\n`\n\nexport const ZoneFormContent: React.SFC<IZoneFormContentProps> = props => (\n  <ZoneFormContentStyled>\n    <IconLine icon=\"label\">\n      <FormInputTextBox\n        field=\"name\"\n        validate={validateIsRequired(i18n.t`Zone name`)}\n      />\n    </IconLine>\n\n    <IconLine icon=\"color_lens\">\n      <ZoneColorSelector />\n    </IconLine>\n\n    <FormInputCheckbox\n      field=\"enabled\"\n      name=\"enabled\"\n      label={i18n.t`Is active`.toLocaleLowerCase()}\n    />\n\n    <Trans>\n      <Headline margin=\"0.5rem 0 0 0\">Delivery cost</Headline>\n      <DescriptionUnderHeadline>\n        according order total cost\n      </DescriptionUnderHeadline>\n    </Trans>\n    <ZonePriceInput field=\"minimalOrderPrice.value\" />\n    <NestedField field=\"priceRangeRules\" component={ZoneFormPriceRange} />\n  </ZoneFormContentStyled>\n)\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  isSubmitting: boolean\n  isModified: boolean\n  onSave(e: MouseEvent<HTMLButtonElement>): void\n  onGoBack(): void\n}\n\nexport const ZoneFormControls: React.SFC<IProps> = ({\n  isSubmitting,\n  isModified,\n  onGoBack,\n  onSave,\n}) => (\n  <FlexRowSingle>\n    <FlexColumn widthGrowIndex={0.4} padding=\"0\">\n      <TouchButton\n        color={Colors.greyMiddle}\n        onClick={onGoBack}\n        text={i18n.t`Back`}\n        disabled={isSubmitting}\n      />\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={0.4} padding=\"0\">\n      <CanMutate mutationName=\"updateZone\">\n        <TouchButton\n          color={Colors.green}\n          text={i18n.t`Save zone`}\n          onClick={onSave}\n          disabled={isSubmitting || !isModified}\n        />\n      </CanMutate>\n    </FlexColumn>\n  </FlexRowSingle>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GZones } from '../../../graph/types'\nimport { ZoneFragment } from '../Zones.graphql'\n\nexport const ZonesQuery = gql`\n  query GZones($branchesId: [ID!]!) {\n    zones(companyBranches: $branchesId) {\n      ...GZone\n    }\n  }\n  ${ZoneFragment}\n`\n\nexport const QueryZones = buildQuery<GZones.Query, GZones.Variables>(ZonesQuery)\n","import { observer } from 'mobx-react'\nimport React, { useContext } from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GZone } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { QueryZones } from './ZoneListLoader.graphql'\n\ninterface IProps {}\n\nexport type TZone = GZone.Fragment\n\nconst ZoneListContext = React.createContext<Maybe<TZone[]>>(null)\n\nexport const ZoneListLoader: React.SFC<IProps> = observer(({ children }) => {\n  const { zone } = useRoot()\n  const branches = zone.branches.filter(zone.branchFilterPredicate)\n  if (branches.length === 0) {\n    return (\n      <ZoneListContext.Provider value={[]}>{children}</ZoneListContext.Provider>\n    )\n  }\n  return (\n    <QueryZones\n      variables={{ branchesId: branches.map(RM.prop('id')) }}\n      renderLoading={false}\n      render={({ zones }, { loading }) => (\n        <ZoneListContext.Provider value={loading ? null : zones}>\n          {children}\n        </ZoneListContext.Provider>\n      )}\n    />\n  )\n})\n\nexport const useZoneList = () => {\n  return useContext(ZoneListContext)\n}\n","import { reaction } from 'mobx'\nimport { useObservableEffect } from 'mobx-react-lite'\nimport React, { useCallback, useRef, useState } from 'react'\nimport { Form, IFormApi } from 'react-form'\nimport Goodbye from 'react-goodbye'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { ConfirmDialog } from '../../../atoms/ConfirmDialog'\nimport { Loading } from '../../../atoms/Loading'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { logDebug } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\nimport { Spacing } from '../../../styling'\nimport { useZoneId } from '../hooks/useZoneId'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\nimport { ZoneFormContent } from '../molecules/ZoneFormContent'\nimport { ZoneFormControls } from '../molecules/ZoneFormControls'\nimport { useZoneList } from './ZoneListLoader'\n\nconst DeleteButtonContainer = styled.div`\n  width: ${Spacing.ButtonHeight};\n  margin-top: ${Spacing.Middle};\n`\n\nexport const ZoneFormPanel: React.SFC = () => {\n  const zoneId = useZoneId()\n  const zoneList = useZoneList()\n  const { zone: zoneModel } = useRoot()\n  const { routeToZoneList } = useZoneRouteControl()\n  const [isModified, setModified] = useState(false)\n  const formApiRef = useRef<IFormApi | null>(null)\n\n  const onSave = useCallback(async () => {\n    if (formApiRef.current) {\n      await formApiRef.current.submitForm()\n      setModified(false)\n      routeToZoneList()\n    }\n  }, [])\n\n  const onDelete = useCallback(\n    async () => {\n      if (zoneId) {\n        await zoneModel.destroyZone(zoneId)\n      }\n      routeToZoneList()\n    },\n    [zoneId],\n  )\n\n  useObservableEffect(() =>\n    reaction(() => zoneModel.map.currentZonePoints !== null, setModified),\n  )\n\n  const zone =\n    zoneId && zoneList ? zoneList.find(RM.propEq('id', zoneId)) || null : null\n\n  if (!zone) {\n    return <Loading text={i18n.t`Loading form...`} />\n  }\n\n  return (\n    <Form\n      defaultValues={zone}\n      onChange={formState => {\n        logDebug('zone form change', formState.values)\n        setModified(true)\n      }}\n      onSubmit={values => zoneModel.saveZone(zoneId!, values)}\n      render={formApi => {\n        formApiRef.current = formApi\n        return (\n          <Card padding={0}>\n            <ZoneFormControls\n              isSubmitting={formApi.submitting}\n              isModified={isModified}\n              onSave={onSave}\n              onGoBack={routeToZoneList}\n            />\n            <ZoneFormContent />\n\n            <CanMutate mutationName=\"destroyZone\">\n              <DeleteButtonContainer>\n                <TouchButtonDelete\n                  disabled={formApi.submitting}\n                  confirmText={i18n.t`Remove zone ${zone.name}?`}\n                  onDelete={onDelete}\n                />\n              </DeleteButtonContainer>\n            </CanMutate>\n\n            <Goodbye when={isModified}>\n              {({ isShow, handleOk, handleCancel }) => (\n                <ConfirmDialog\n                  isShow={isShow}\n                  confirmText={i18n.t`Do you want to cancel changes for the zone?`}\n                  onConfirm={handleOk}\n                  onCancel={handleCancel}\n                />\n              )}\n            </Goodbye>\n          </Card>\n        )\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { OverlayView } from 'react-google-maps'\nimport styled, { css } from 'styled-components'\n\nimport { GCompanyBranch } from '../graph/types'\nimport { gpsToLatLng } from '../helpers/gps'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  branch: GCompanyBranch.Fragment\n  isActive?: boolean\n}\n\nconst BranchNameStyled = styled.div`\n  ${getColors} font-size: 1.3rem;\n  white-space: nowrap;\n  padding: 0.2rem 0.5rem;\n`\n\nexport const MapCompanyBranchMarker: React.SFC<IProps> = ({\n  branch,\n  isActive = true,\n}) => (\n  <OverlayView\n    getPixelPositionOffset={(width, height) => ({\n      x: -(width / 2),\n      y: -(height / 2),\n    })}\n    mapPaneName={OverlayView.MARKER_LAYER}\n    position={gpsToLatLng(branch.gps)}\n  >\n    <BranchNameStyled isActive={isActive}>{branch.name}</BranchNameStyled>\n  </OverlayView>\n)\n\nfunction getColors({ isActive }: { isActive: boolean }) {\n  return css`\n    background-color: ${isActive ? Colors.green : Colors.greyLight};\n    color: ${isActive ? Colors.white : Colors.greyDark};\n  `\n}\n","import React, { useCallback } from 'react'\nimport { Polygon } from 'react-google-maps'\n\nimport { gpsToLatLng } from '../../../helpers/gps'\n\ninterface IZoneMapAreaProps {\n  points: GeoPoint[]\n  color: string\n  priority: number\n  onFocus?(): void\n}\n\nexport const ZoneMapArea: React.FC<IZoneMapAreaProps> = props => {\n  const onAreaFocus = useCallback(\n    (e: google.maps.PolyMouseEvent) => {\n      if (props.onFocus) {\n        e.stop()\n        props.onFocus()\n      }\n    },\n    [props.onFocus],\n  )\n\n  const { points, color, priority } = props\n  return (\n    <Polygon\n      defaultPath={points.map(gpsToLatLng)}\n      options={{\n        fillColor: color,\n        fillOpacity: 0.3,\n        strokeWeight: 0,\n        zIndex: 5000 - priority,\n      }}\n      editable={false}\n      draggable={false}\n      onDblClick={onAreaFocus}\n    />\n  )\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { Polygon } from 'react-google-maps'\n\nimport { gpsToLatLng, latLngToGps } from '../../../helpers/gps'\n\ninterface IZoneMapAreaProps {\n  points: GeoPoint[]\n  color: string\n  priority: number\n  onChange(points: GeoPoint[]): void\n  onClear(): void\n}\n\nexport const ZoneMapEditableArea: React.FC<IZoneMapAreaProps> = props => {\n  const polygonRef = useRef<Polygon | null>(null)\n\n  const onAreaChange = useCallback(\n    () => {\n      if (polygonRef.current) {\n        const path = polygonRef.current.getPath()\n        props.onChange(path.getArray().map(latLngToGps))\n      }\n    },\n    [props.onChange],\n  )\n\n  useEffect(() => {\n    let listeners\n    if (polygonRef.current && props.onChange) {\n      const path = polygonRef.current.getPath()\n      listeners = [\n        path.addListener('set_at', onAreaChange),\n        path.addListener('insert_at', onAreaChange),\n        path.addListener('remove_at', onAreaChange),\n      ]\n    }\n    return () => {\n      props.onClear()\n      if (listeners) {\n        listeners.forEach(lis => lis.remove())\n      }\n    }\n  }, [])\n\n  const { points, color } = props\n  return (\n    <Polygon\n      defaultPath={points.map(gpsToLatLng)}\n      options={{\n        fillColor: color,\n        fillOpacity: 0.6,\n        strokeWeight: 2,\n        zIndex: 10000,\n      }}\n      editable={true}\n      draggable={true}\n      ref={polygonRef}\n      onDragEnd={onAreaChange}\n    />\n  )\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useZoneModel() {\n  const { zone: zoneModel } = useRoot()\n  return zoneModel\n}\n","import React, { useCallback, useMemo } from 'react'\n\nimport { BaseMap } from '../../../atoms/BaseMap'\nimport { GCompanyBranch } from '../../../graph/types'\nimport { MapCompanyBranchMarker } from '../../../molecules/MapCompanyBranchMarker'\nimport { Colors } from '../../../styling'\nimport { ZoneMapArea } from '../atoms/ZoneMapArea'\nimport { ZoneMapEditableArea } from '../atoms/ZoneMapEditableArea'\nimport { useZoneId } from '../hooks/useZoneId'\nimport { useZoneModel } from '../hooks/useZoneModel'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\nimport { TZone, useZoneList } from '../organisms/ZoneListLoader'\n\nexport const ZoneMapControl: React.FC = () => {\n  const zoneModel = useZoneModel()\n  const editZoneId = useZoneId()\n  const zoneList = useZoneList()\n  const { routeToZoneEdit } = useZoneRouteControl()\n\n  const branches = useMemo(\n    () => zoneModel.branches.filter(zoneModel.branchFilterPredicate),\n    [zoneModel.branches],\n  )\n\n  const isActive = (companyBranchId: ID) =>\n    !zoneModel.hasBranchFilter || companyBranchId === zoneModel.branchFilterId\n\n  const renderZoneArea = (zone: TZone) => {\n    const areaProps = {\n      key: `zone${zone.id}`,\n      points: zone.geoPolygon,\n      priority: zone.priority,\n      color:\n        isActive(zone.companyBranch.id) && zone.enabled\n          ? zone.zoneColor.color\n          : Colors.greyMiddle,\n    }\n\n    if (zone.id === editZoneId) {\n      return (\n        <ZoneMapEditableArea\n          {...areaProps}\n          onChange={zoneModel.map.updateZonePoints}\n          onClear={zoneModel.map.clearZonePoints}\n        />\n      )\n    }\n\n    return (\n      <ZoneMapArea\n        {...areaProps}\n        onFocus={() => {\n          if (isActive(zone.companyBranch.id)) {\n            routeToZoneEdit(zone.id)\n          }\n        }}\n      />\n    )\n  }\n\n  const renderBranchLabel = useCallback(\n    (branch: GCompanyBranch.Fragment) => (\n      <MapCompanyBranchMarker\n        key={`branch${branch.id}`}\n        branch={branch}\n        isActive={isActive(branch.id)}\n      />\n    ),\n    [],\n  )\n\n  return (\n    <BaseMap\n      model={zoneModel.map}\n      render={() => (\n        <>\n          {zoneList && zoneList.map(renderZoneArea)}\n          {branches && branches.map(renderBranchLabel)}\n        </>\n      )}\n    />\n  )\n}\n","import { observer } from 'mobx-react'\nimport React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { useZoneModel } from '../hooks/useZoneModel'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\n\nexport const CreateZoneButton: React.SFC = observer(() => {\n  const zoneModel = useZoneModel()\n  const { routeToZoneEdit } = useZoneRouteControl()\n  return (\n    <TouchButton\n      text={\n        zoneModel.hasBranchFilter\n          ? i18n.t`Create zone for branch`\n          : i18n.t`Select branch to create zone`\n      }\n      onClick={() => zoneModel.createZone(routeToZoneEdit)}\n      disabled={!zoneModel.hasBranchFilter}\n      color={Colors.turquoise}\n      textNextToIcon={true}\n      height={Spacing.ButtonHeight}\n      iconName=\"add_circle\"\n    />\n  )\n})\n","import React from 'react'\nimport { SortableElement } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { GCompanyBranch, GZone } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IZoneListCardProps {\n  zone: GZone.Fragment\n  branch: GCompanyBranch.Fragment\n  onEdit(): void\n}\n\nconst ZoneNameStyled = styled.div`\n  font-size: 1.125rem;\n  margin-top: 0.2rem;\n`\n\nconst ZoneDescriptionStyled = styled.div`\n  font-size: 0.875rem;\n`\nconst ZoneFlexRowStyled = styled(FlexRowSingle)`\n  height: ${Spacing.ButtonHeight};\n`\n\nexport const ZoneListCard = SortableElement<IZoneListCardProps>(\n  ({ zone, branch, onEdit }) => (\n    <Card\n      key={zone.id}\n      padding={0}\n      color={zone.enabled ? zone.zoneColor.color : Colors.greyMiddle}\n      onClick={onEdit}\n    >\n      <ZoneFlexRowStyled>\n        <FlexColumn fixedWidth={true} padding=\"0 0.5rem 0 0\">\n          <TouchButton\n            width={Spacing.ButtonHeight}\n            height={Spacing.ButtonHeight}\n            iconName=\"mode_edit\"\n          />\n        </FlexColumn>\n        <FlexColumn widthGrowIndex={1}>\n          <ZoneNameStyled>\n            {zone.name}\n            {` [P${zone.priority}]`}\n          </ZoneNameStyled>\n          <ZoneDescriptionStyled>{branch.name}</ZoneDescriptionStyled>\n        </FlexColumn>\n        <FlexColumn padding=\"0\">\n          <DragHandle />\n        </FlexColumn>\n      </ZoneFlexRowStyled>\n    </Card>\n  ),\n)\n","import * as R from 'ramda'\nimport React, { Fragment } from 'react'\nimport { SortableContainer, SortEndHandler } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { GCompanyBranch, GZone } from '../../../graph/types'\nimport { TZoneModel } from '../../../segments/zones/models/ZoneModel'\nimport { ZoneListCard } from '../atoms/ZoneListCard'\n\ninterface IZoneListProps {\n  branches: GCompanyBranch.Fragment[]\n  zones: GZone.Fragment[]\n  zoneModel: TZoneModel\n  onZoneEdit(zoneID: ID): void\n}\n\nconst ZoneListContainerStyled = SortableContainer(styled.div`\n  margin-top: 0.5rem;\n  cursor: arrow;\n`)\n\nconst sortZones = R.sortWith<GZone.Fragment>([\n  R.ascend(R.path(['companyBranch', 'name'])),\n  R.descend(R.prop('priority')),\n])\n\nconst groupByBranch = R.groupBy((zone: GZone.Fragment) => zone.companyBranch.id)\n\nexport const ZoneList: React.SFC<IZoneListProps> = ({\n  branches,\n  zones,\n  zoneModel,\n  onZoneEdit,\n}) => {\n  const renderZone = (zone: GZone.Fragment, idx: number) => (\n    <ZoneListCard\n      key={zone.id}\n      zone={zone}\n      branch={branches.find(R.propEq('id', zone.companyBranch.id))!}\n      index={idx}\n      collection={zone.companyBranch.id}\n      onEdit={() => onZoneEdit(zone.id)}\n    />\n  )\n  const renderBranch = (\n    branch: GCompanyBranch.Fragment,\n    branchZones: GZone.Fragment[],\n  ) => (\n    <Fragment key={branch.id}>\n      <CardListTitle>{branch.name}</CardListTitle>\n      {branchZones.map(renderZone)}\n    </Fragment>\n  )\n\n  let output\n  let onSortEnd: SortEndHandler\n\n  if (branches.length === 1) {\n    const sorted = sortZones(zones)\n    output = sorted.map(renderZone)\n    onSortEnd = ({ oldIndex, newIndex }) => {\n      const zone = sorted[oldIndex]\n      zoneModel.changeZonePriority(zone, oldIndex, newIndex)\n    }\n  } else {\n    const grouped = R.mapObjIndexed(sortZones, groupByBranch(zones))\n    output = branches.map(branch => {\n      const branchZones = grouped[branch.id]\n      return branchZones ? renderBranch(branch, branchZones) : null\n    })\n    onSortEnd = ({ oldIndex, newIndex, collection }) => {\n      const group = grouped[collection]\n      const zone = group[oldIndex]\n      zoneModel.changeZonePriority(zone, oldIndex, newIndex)\n    }\n  }\n\n  return (\n    <ZoneListContainerStyled\n      useDragHandle={true}\n      lockAxis=\"y\"\n      onSortEnd={onSortEnd}\n    >\n      {output}\n    </ZoneListContainerStyled>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { BulletList } from 'react-content-loader'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useZoneModel } from '../hooks/useZoneModel'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\nimport { ZoneList } from '../molecules/ZoneList'\nimport { useZoneList } from './ZoneListLoader'\n\nexport const ZoneListControl: React.SFC = () => {\n  const zoneList = useZoneList()\n  if (zoneList === null) {\n    return <BulletList primaryOpacity={0.2} secondaryOpacity={0.2} />\n  }\n  const zoneModel = useZoneModel()\n  const { routeToZoneEdit } = useZoneRouteControl()\n  if (zoneModel.brand === null) {\n    return (\n      <CardListTitle>\n        <Trans>Select brand to see its zones</Trans>\n      </CardListTitle>\n    )\n  }\n  return (\n    <ZoneList\n      zoneModel={zoneModel}\n      zones={zoneList.filter(zoneModel.zoneFilterPredicate)}\n      branches={zoneModel.root.user.filterBranches(\n        zoneModel.branchFilterPredicate,\n      )}\n      onZoneEdit={routeToZoneEdit}\n    />\n  )\n}\n","import React from 'react'\n\nimport { GCompanyBranch } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { CompanyBranchDropdown } from '../../../molecules/CompanyBranchDropdown'\n\ntype TBranch = GCompanyBranch.Fragment\n\ninterface IProps {\n  branches: TBranch[]\n  selectedBranch: Maybe<TBranch>\n  onSelection(branch: Maybe<TBranch>): void\n  autoFocus: boolean\n}\n\nexport const ZoneFilterBranch: React.SFC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSelection,\n  autoFocus,\n}) => (\n  <CompanyBranchDropdown\n    placeholder={i18n.t`Select branch`}\n    branches={branches}\n    selectedBranch={selectedBranch}\n    onSingleSelection={onSelection}\n    formatOptionLabel={RM.prop('name')}\n    isClearable={true}\n    autoFocus={autoFocus}\n  />\n)\n","import React from 'react'\n\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { GCompanyBranch } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ntype TBrand = GCompanyBranch.Brand\n\ninterface IProps {\n  brands: TBrand[]\n  selectedBrand: Maybe<TBrand>\n  onSelection(brand: Maybe<TBrand>): void\n}\n\nexport const ZoneFilterBrand: React.SFC<IProps> = ({\n  brands,\n  selectedBrand,\n  onSelection,\n}) => (\n  <SelectControl<TBrand>\n    placeholder={i18n.t`Select brand`}\n    options={brands}\n    value={selectedBrand}\n    formatOptionLabel={RM.prop('name')}\n    getOptionValue={RM.prop('id')}\n    getOptionLabel={RM.prop('name')}\n    isClearable={true}\n    isSearchable={true}\n    onChange={value => onSelection(value as Maybe<TBrand>)}\n    autoFocus={true}\n  />\n)\n","import React from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { GCompanyBranch } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { ZoneFilterBranch } from '../molecules/ZoneFIlterBranch'\nimport { ZoneFilterBrand } from '../molecules/ZoneFilterBrand'\n\nexport const ZoneFilter: React.SFC = () => (\n  <WithRoot\n    render={({ user, zone }) => {\n      const branches = user.branches!\n      if (branches.length === 0) {\n        return null\n      }\n\n      if (branches.length === 1) {\n        zone.setBranchFilter(RM.head(branches)!)\n        return null\n      }\n\n      const brands = user.brands!\n\n      const getBrandBranches = (brand: Maybe<GCompanyBranch.Brand>) =>\n        brand === null\n          ? []\n          : branches.filter(RM.pathEq(['brand', 'id'], brand.id))\n\n      const singleBrand = brands.length === 1 ? RM.head(brands)! : null\n      if (singleBrand) {\n        zone.setBrandFilter(singleBrand, getBrandBranches(zone.brand))\n      }\n\n      return (\n        <>\n          {!singleBrand && (\n            <ZoneFilterBrand\n              brands={brands}\n              selectedBrand={zone.brand}\n              onSelection={brand => {\n                if (brand === null) {\n                  zone.clearBrandFilter()\n                } else {\n                  zone.setBrandFilter(brand, getBrandBranches(brand))\n                }\n              }}\n            />\n          )}\n          {!singleBrand && <VerticalGap />}\n          <ZoneFilterBranch\n            branches={getBrandBranches(zone.brand)}\n            selectedBranch={zone.branch}\n            autoFocus={Boolean(singleBrand)}\n            onSelection={branch => {\n              if (branch === null) {\n                zone.clearBranchFilter()\n              } else {\n                zone.setBranchFilter(branch)\n              }\n            }}\n          />\n        </>\n      )\n    }}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { ScrollArea } from '../../../atoms/ScrollArea'\nimport { CreateZoneButton } from '../molecules/CreateZoneButton'\nimport { ZoneListControl } from '../organisms/ZoneListControl'\nimport { ZoneFilter } from './ZoneFilter'\n\nconst ZoneMenuContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nconst FixedHeaderContainer = styled.div`\n  flex: 0 0 auto;\n`\nconst ScrollAreaContainer = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n`\nexport const ZoneMenuPanel: React.SFC = () => (\n  <ZoneMenuContainer>\n    <FixedHeaderContainer>\n      <Card>\n        <ZoneFilter />\n      </Card>\n      <CanMutate mutationName=\"createZone\">\n        <CreateZoneButton />\n      </CanMutate>\n    </FixedHeaderContainer>\n\n    <ScrollAreaContainer>\n      <ScrollArea>\n        <ZoneListControl />\n      </ScrollArea>\n    </ScrollAreaContainer>\n  </ZoneMenuContainer>\n)\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { ZoneFormPanel } from '../organisms/ZoneFormPanel'\nimport { ZoneListLoader } from '../organisms/ZoneListLoader'\nimport { ZoneMapControl } from '../organisms/ZoneMapControl'\nimport { ZoneMenuPanel } from '../organisms/ZoneMenuPanel'\n\ninterface IProps extends RouteComponentProps<{ zoneId?: ID }> {}\n\nexport const ZonePageLayout: React.SFC<IProps> = ({ match }) => {\n  const isEditing = Boolean(match.params.zoneId)\n  return (\n    <ZoneListLoader>\n      <PageLayout\n        pageTitle={i18n.t`Delivery zones`}\n        useBackButton={true}\n        backRoute=\"/settings\"\n      />\n      <PageLayoutFullHeightItem\n        widthInColumns={6}\n        column={10}\n        withScrollArea={isEditing}\n      >\n        {isEditing ? <ZoneFormPanel /> : <ZoneMenuPanel />}\n      </PageLayoutFullHeightItem>\n      <PageLayoutFullHeightItem widthInColumns={10}>\n        <ZoneMapControl />\n      </PageLayoutFullHeightItem>\n    </ZoneListLoader>\n  )\n}\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { ZonePageLayout } from '../../../segments/zones/pages/ZonePageLayout'\nimport { useZoneRouteControl } from '../hooks/useZoneRouteControl'\n\ninterface IZoneMenuRoutesProps extends RouteComponentProps<{}> {}\n\nexport const ZoneMenuRoutes: React.SFC<IZoneMenuRoutesProps> = () => {\n  const { getRouteToZone } = useZoneRouteControl()\n  return (\n    <Switch>\n      <Route path={getRouteToZone(':zoneId?')} component={ZonePageLayout} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default ZoneMenuRoutes\n"],"sourceRoot":""}