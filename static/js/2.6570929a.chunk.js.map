{"version":3,"sources":["../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/CellMeasurer/index.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/react-virtualized/dist/es/index.js","../node_modules/core-js/library/modules/_new-promise-capability.js","../node_modules/dom-helpers/util/scrollbarSize.js","../node_modules/core-js/library/modules/_species-constructor.js","../node_modules/core-js/library/modules/_task.js","../node_modules/core-js/library/modules/_perform.js","../node_modules/core-js/library/modules/_promise-resolve.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@material-ui/icons/esm/Edit.js","../node_modules/linear-layout-vector/index.js","../node_modules/dom-helpers/util/inDOM.js","../node_modules/babel-runtime/core-js/promise.js","../node_modules/core-js/library/fn/promise.js","../node_modules/core-js/library/modules/es6.promise.js","../node_modules/core-js/library/modules/_an-instance.js","../node_modules/core-js/library/modules/_for-of.js","../node_modules/core-js/library/modules/_invoke.js","../node_modules/core-js/library/modules/_microtask.js","../node_modules/core-js/library/modules/_user-agent.js","../node_modules/core-js/library/modules/_redefine-all.js","../node_modules/core-js/library/modules/_set-species.js","../node_modules/core-js/library/modules/es7.promise.finally.js","../node_modules/core-js/library/modules/es7.promise.try.js","../node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js","../node_modules/core-js/library/fn/object/get-own-property-descriptor.js","../node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","../node_modules/babel-runtime/helpers/defineProperty.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js"],"names":["componentWillMount","state","this","constructor","getDerivedStateFromProps","props","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_lastMeasuredIndex","_cellSizeGetter","_cellCount","_estimatedCellSize","_layoutVector","LinearLayoutVector","setLength","setDefaultSize","_createClass","key","value","_ref2","index","vector","token","i","_size","setItemSize","Math","min","offset","start","size","getItemSize","lastIndex","end","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","datum","getSizeAndPositionOfCell","maxOffset","minOffset","idealOffset","max","totalSize","getTotalSize","params","_findNearestCell","stop","isNaN","targetOffset","nearestCellIndex","indexOf","getMaxElementSize","window","chrome","webstore","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","getSizeAndPositionOfLastMeasuredCell","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","_Object$keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","SCROLL_DIRECTION_FORWARD","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","_Promise","resolve","then","Date","now","timeout","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","__proto__","_Object$getPrototypeOf","_onGridRenderedMemoizer","_onScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","_renderedColumnStartIndex","_renderedColumnStopIndex","_renderedRowStartIndex","_renderedRowStopIndex","_styleCache","_cellCache","_debounceScrollEndedCallback","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","_invokeOnGridRenderedHelper","onSectionRendered","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","columnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","rowStopIndex","_setScrollingContainerRef","ref","_scrollingContainer","_onScroll","event","target","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","prevScrollLeft","scrollLeft","prevScrollTop","scrollTop","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_extends","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_props","autoHeight","autoWidth","height","width","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_props2","_ref4$columnIndex","_ref4$rowIndex","_props3","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_maybeCallOnScrollbarPresenceChange","_this2","_props5","_state","columnOrRowCountJustIncreasedFromZero","_props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","style","tabIndex","_state2","_isScrolling","gridStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","clsx","onScroll","maxWidth","maxHeight","overflow","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","recomputeGridSize","_this3","_props7","clientHeight","clientWidth","scrollHeight","scrollWidth","Object","hasOwnProperty","Boolean","_onScrollbarPresenceChange","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","_Object$assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","defaultProps","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","top","cellRendererParams","renderedCell","push","propTypes","defaultOverscanIndicesGetter","ArrowKeyStepper","_temp","_ret","_len","args","_key","apply","concat","_onKeyDown","_this$props","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_onSectionRendered","children","_getScrollState2","onKeyDown","isControlled","onScrollToChange","AutoSizer","defaultHeight","defaultWidth","_onResize","disableHeight","disableWidth","onResize","_parentNode","_height","offsetHeight","_width","offsetWidth","_style","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","_setRef","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","createDetectElementResize","addResizeListener","removeResizeListener","outerStyle","childParams","CellMeasurer","_measure","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","_maybeMeasureCell","measure","node","findDOMNode","styleWidth","styleHeight","ceil","_props$columnIndex","_props$rowIndex","_getCellMeasurements2","invalidateCellSizeAfterRender","__internalCellMeasurerFlag","DEFAULT_HEIGHT","DEFAULT_WIDTH","CellMeasurerCache","_cellHeightCache","_cellWidthCache","_columnWidthCache","_rowHeightCache","_columnCount","_rowCount","_keyMapper","_defaultWidth","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_updateCachedColumnAndRowSizes","_key2","columnKey","_i","rowKey","get","OBSERVED","REQUESTED","CollectionView","_calculateSizeAndPositionDataOnNextUpdate","_onSectionRenderedMemoizer","_invokeOnSectionRenderedHelper","cellLayoutManager","getLastRenderedIndices","_updateScrollPositionForScrollToCell","_this$props2","scrollToCell","_this$state","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","_this$props3","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","Section","_indexMap","_indices","SECTION_SIZE","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","forEach","section","getCellIndices","map","sectionXStart","floor","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","cellGroupRenderer","getCellMetadata","cellRendererProps","filter","ColumnSizer","_registerChild","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","registerChild","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","_cellRenderer","rowRenderer","_Object$getOwnPropertyDescriptor","writable","getOffsetForCell","measureAllCells","_ref7$columnIndex","_ref7$rowIndex","scrollToPosition","noRowsRenderer","classNames","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","NOT_FOUND","SUCCESS","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","interval","rebuildWithoutInterval","idx","splice","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","defineProperty","PositionCache","_columnSizeMap","_intervalTree","_leftMap","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_slicedToArray","columnSizeMap","columnHeight","Masonry","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_positionCache","_startIndex","_startIndexMemoized","_stopIndex","_stopIndexMemoized","_debounceResetIsScrollingCallback","eventScrollTop","_getEstimatedTotalHeight","_debounceResetIsScrolling","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_defineProperty","batchSize","estimatedColumnCount","_onScrollMemoized","_onCellsRendered","onCellsRendered","cellPositioner","_cellPositioner","_left","_top","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","_initialiseProps","fixedColumnCount","fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_bottomLeftGrid","_bottomRightGrid","_topLeftGrid","_topRightGrid","_ref2$columnIndex","_ref2$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","rest","_prepareForRender","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","showVerticalScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","showHorizontalScrollbar","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","_props8","_state3","scrollInfo","_state4","_props9","_state5","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","_React$Component","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","_Grid","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","document","body","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","currentTarget","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","element","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","_window","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","_isMounted","_positionFromTop","_positionFromLeft","Element","console","warn","_child","updatePosition","_onChildScroll","scrollTo","_registerResizeListener","_unregisterResizeListener","_scrollLeft","_scrollTop","thisNode","ReactDOM","dimensions","prevScrollElement","onChildScroll","aFunction","require","PromiseCapability","C","reject","$$resolve","$$reject","TypeError","module","exports","f","_interopRequireDefault","__esModule","default","recalc","_inDOM","scrollDiv","createElement","appendChild","removeChild","anObject","SPECIES","O","D","S","defer","channel","port","ctx","invoke","html","cel","global","process","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","run","fn","listener","Function","nextTick","port2","port1","onmessage","postMessage","importScripts","exec","e","v","isObject","newPromiseCapability","promiseCapability","attachEvent","requestFrame","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","innerHTML","__animationListener__","detachEvent","createSvgIcon","block_size","pow","log","mask","block_shift","block_mask","block_table","_defaultSize","_axisOffset","_gap","removes","inserts","_length","_pendingLength","isIntervalClear","block","sizes","inBlockCopy","dstBlock","dstIndexStart","srcBlock","srcIndexStart","ascending","srcIndex","dstIndex","increment","dstSizes","srcSizes","dstValue","NaN","srcValue","sizesSumDelta","defaultCountDelta","sizesSum","defaultCount","copyInterval","dstBlockIndex","dstSizesIndex","srcBlockIndex","srcSizesIndex","copyCount","dstStartIndex","srcStartIndex","Block","clearInterval","blockIndex","sizesIndex","clearCount","removeIntervals","intervalsCount","reverse","getLength","srcStart","dstStart","intervalEnd","nextIntervalStart","insertIntervals","newLength","oldLength","srcEnd","dstEnd","intervalStart","flushPendingChanges","indexOfInternal","distance","curDistance","getAxisOffset","blockSize","defaultSize","gap","getGap","blockGap","blockTable","blockTableLength","blockDistance","Number","endIndex","partialBlock","getDefaultSize","setAxisOffset","setGap","oldValue","lastBlock","lastBlockOffset","lastBlockLength","_default","Promise","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","classof","$export","anInstance","forOf","speciesConstructor","task","microtask","newPromiseCapabilityModule","perform","userAgent","promiseResolve","versions","v8","$Promise","isNode","empty","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","it","notify","isReject","_n","chain","_c","_v","ok","_s","reaction","exited","handler","fail","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","reason","error","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","err","onFulfilled","onRejected","G","W","F","capability","iter","all","iterable","values","remaining","$index","alreadyCalled","race","Constructor","forbiddenField","isArrayIter","toLength","getIterFn","BREAK","RETURN","entries","that","ITERATOR","step","iterator","iterFn","next","done","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","last","flush","navigator","standalone","toggle","observe","characterData","hide","src","safe","core","dP","DESCRIPTORS","KEY","configurable","P","R","onFinally","isFunction","callbackfn","$Object","getOwnPropertyDescriptor","toIObject","$getOwnPropertyDescriptor","obj","_defineProperty2","enumerable","DialogTitle","forwardRef","classes","_props$disableTypogra","disableTypography","other","Typography","variant","withStyles","margin","padding"],"mappings":"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","file":"static/js/2.6570929a.chunk.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\n\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps);\n\n    // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport LinearLayoutVector from 'linear-layout-vector';\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\n\nvar CellSizeAndPositionManager = function () {\n\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    this._lastMeasuredIndex = -1;\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n    this._layoutVector = new LinearLayoutVector();\n    this._layoutVector.setLength(cellCount);\n    this._layoutVector.setDefaultSize(estimatedCellSize);\n  }\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n      this._layoutVector.setLength(cellCount);\n      this._layoutVector.setDefaultSize(estimatedCellSize);\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error('Requested index ' + index + ' is outside of range 0..' + this._cellCount);\n      }\n      var vector = this._layoutVector;\n      if (index > this._lastMeasuredIndex) {\n        var token = { index: this._lastMeasuredIndex + 1 };\n\n        for (var i = token.index; i <= index; token.index = ++i) {\n          var _size = this._cellSizeGetter(token);\n          // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n          if (_size === undefined || _size !== _size) {\n            throw Error('Invalid size returned for cell ' + i + ' of value ' + _size);\n          } else if (_size !== null) {\n            vector.setItemSize(i, _size);\n          }\n        }\n        this._lastMeasuredIndex = Math.min(index, this._cellCount - 1);\n      }\n\n      return {\n        offset: vector.start(index),\n        size: vector.getItemSize(index)\n      };\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      var index = this._lastMeasuredIndex;\n      if (index <= 0) {\n        return {\n          offset: 0,\n          size: 0\n        };\n      }\n      var vector = this._layoutVector;\n      return {\n        offset: vector.start(index),\n        size: vector.getItemSize(index)\n      };\n    }\n\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      var lastIndex = this._cellCount - 1;\n      return lastIndex >= 0 ? this._layoutVector.end(lastIndex) : 0;\n    }\n\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n\n      var idealOffset = void 0;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n        case 'end':\n          idealOffset = minOffset;\n          break;\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(params) {\n      if (this.getTotalSize() === 0) {\n        return {};\n      }\n\n      var containerSize = params.containerSize,\n          offset = params.offset;\n\n      var maxOffset = offset + containerSize - 1;\n      return {\n        start: this._findNearestCell(offset),\n        stop: this._findNearestCell(maxOffset)\n      };\n    }\n\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: '_findNearestCell',\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error('Invalid offset ' + offset + ' specified');\n      }\n\n      var vector = this._layoutVector;\n      var lastIndex = this._cellCount - 1;\n      // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n      var targetOffset = Math.max(0, Math.min(offset, vector.start(lastIndex)));\n      // First interrogate the constant-time lookup table\n      var nearestCellIndex = vector.indexOf(targetOffset);\n\n      // If we haven't yet measured this high, compute sizes for each cell up to the desired offset.\n      while (nearestCellIndex > this._lastMeasuredIndex) {\n        // Measure all the cells up to the one we want to find presently.\n        // Do this before the last-index check to ensure the sparse array\n        // is fully populated.\n        this.getSizeAndPositionOfCell(nearestCellIndex);\n        // No need to search and compare again if we're at the end.\n        if (nearestCellIndex === lastIndex) {\n          return nearestCellIndex;\n        }\n        nearestCellIndex = vector.indexOf(targetOffset);\n        // Guard in case `getSizeAndPositionOfCell` didn't fully measure to\n        // the nearestCellIndex. This might happen scrolling quickly down\n        // and back up on large lists -- possible race with React or DOM?\n        if (nearestCellIndex === -1) {\n          nearestCellIndex = this._lastMeasuredIndex;\n          this._lastMeasuredIndex = nearestCellIndex - 1;\n          targetOffset = Math.max(0, Math.min(offset, vector.start(lastIndex)));\n        }\n      }\n\n      return nearestCellIndex;\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport default CellSizeAndPositionManager;\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSizeGetter } from '../types';\nimport { bpfrpt_proptype_VisibleCellRange } from '../types';","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome && !!window.chrome.webstore;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n\n\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\n\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Browsers have scroll offset limitations (eg Chrome stops scrolling at ~33.5M pixels where as Edge tops out at ~1.5M pixels).\n * After a certain position, the browser won't allow the user to scroll further (even via JavaScript scroll offset adjustments).\n * This util picks a lower ceiling for max size and artificially adjusts positions within to make it transparent for users.\n */\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager = function () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === undefined ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, ['maxScrollSize']);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: '_getOffsetPercentage',\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: '_offsetToSafeOffset',\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: '_safeOffsetToOffset',\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport default ScalingCellSizeAndPositionManager;\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSizeGetter } from '../types';\nimport { bpfrpt_proptype_VisibleCellRange } from '../types';","import _Object$keys from 'babel-runtime/core-js/object/keys';\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var cachedIndices = {};\n\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n\n    var keys = _Object$keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== _Object$keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\n\nexport var SCROLL_DIRECTION_BACKWARD = -1;\n\nexport var SCROLL_DIRECTION_FORWARD = 1;\n\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from './types';\nimport { bpfrpt_proptype_OverscanIndices } from './types';","\n\nimport ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize;\n\n  // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex);\n\n    // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSize } from '../types';","\n\n// Properly handle server-side rendering.\nvar win = void 0;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n}\n\n// requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _Promise from 'babel-runtime/core-js/promise';\nimport { caf, raf } from './animationFrame';\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  id: PropTypes.number.isRequired\n};\n\n\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start = void 0;\n  // wait for end of processing current event handler, because event handler may be long\n  _Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n\n  return frame;\n};\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_AnimationTimeoutId };","import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/util/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = function (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    _classCallCheck(this, Grid);\n\n    var _this = _possibleConstructorReturn(this, (Grid.__proto__ || _Object$getPrototypeOf(Grid)).call(this, props));\n\n    _this._onGridRenderedMemoizer = createCallbackMemoizer();\n    _this._onScrollMemoizer = createCallbackMemoizer(false);\n    _this._deferredInvalidateColumnIndex = null;\n    _this._deferredInvalidateRowIndex = null;\n    _this._recomputeScrollLeftFlag = false;\n    _this._recomputeScrollTopFlag = false;\n    _this._horizontalScrollBarSize = 0;\n    _this._verticalScrollBarSize = 0;\n    _this._scrollbarPresenceChanged = false;\n    _this._renderedColumnStartIndex = 0;\n    _this._renderedColumnStopIndex = 0;\n    _this._renderedRowStartIndex = 0;\n    _this._renderedRowStopIndex = 0;\n    _this._styleCache = {};\n    _this._cellCache = {};\n\n    _this._debounceScrollEndedCallback = function () {\n      _this._disablePointerEventsTimeoutId = null;\n      // isScrolling is used to determine if we reset styleCache\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    };\n\n    _this._invokeOnGridRenderedHelper = function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    };\n\n    _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    };\n\n    _this._onScroll = function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    };\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        prevScrollLeft: props.scrollLeft,\n        prevScrollTop: props.scrollTop,\n\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: props.scrollLeft || 0,\n      scrollTop: props.scrollTop || 0,\n      scrollPositionChangeReason: null,\n\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n    return _this;\n  }\n\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: 'getOffsetForCell',\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === undefined ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _extends({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: 'getTotalRowsHeight',\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: 'getTotalColumnsWidth',\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: 'handleScrollEvent',\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === undefined ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === undefined ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      this._debounceScrollEnded();\n\n      var _props = this.props,\n          autoHeight = _props.autoHeight,\n          autoWidth = _props.autoWidth,\n          height = _props.height,\n          width = _props.width;\n      var instanceProps = this.state.instanceProps;\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam);\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var _scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var _scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: _scrollDirectionHorizontal,\n          scrollDirectionVertical: _scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      var _props2 = this.props,\n          columnCount = _props2.columnCount,\n          rowCount = _props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === undefined ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === undefined ? 0 : _ref4$rowIndex;\n\n      var _props3 = this.props,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollToRow = _props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n\n\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex);\n\n      // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow);\n\n      // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n      this._styleCache = {};\n      this._cellCache = {};\n\n      this.forceUpdate();\n    }\n\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: 'scrollToCell',\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n\n\n      var props = this.props;\n\n      // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_extends({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_extends({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props4 = this.props,\n          getScrollbarSize = _props4.getScrollbarSize,\n          height = _props4.height,\n          scrollLeft = _props4.scrollLeft,\n          scrollToColumn = _props4.scrollToColumn,\n          scrollTop = _props4.scrollTop,\n          scrollToRow = _props4.scrollToRow,\n          width = _props4.width;\n      var instanceProps = this.state.instanceProps;\n\n      // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0;\n\n      // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n      this._handleInvalidatedGridSize();\n\n      // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _extends({}, prevState, { needToResetStyleCache: false });\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      }\n\n      // refs don't work in `react-test-renderer`\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      }\n\n      // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      }\n\n      // Update onRowsRendered callback\n      this._invokeOnGridRenderedHelper();\n\n      // Initialize onScroll callback\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _props5 = this.props,\n          autoHeight = _props5.autoHeight,\n          autoWidth = _props5.autoWidth,\n          columnCount = _props5.columnCount,\n          height = _props5.height,\n          rowCount = _props5.rowCount,\n          scrollToAlignment = _props5.scrollToAlignment,\n          scrollToColumn = _props5.scrollToColumn,\n          scrollToRow = _props5.scrollToRow,\n          width = _props5.width;\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollPositionChangeReason = _state.scrollPositionChangeReason,\n          scrollTop = _state.scrollTop,\n          instanceProps = _state.instanceProps;\n      // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize();\n\n      // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0;\n\n      // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      }\n\n      // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0;\n\n      // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      }\n\n      // Update onRowsRendered callback if start/stop indices have changed\n      this._invokeOnGridRenderedHelper();\n\n      // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props6 = this.props,\n          autoContainerWidth = _props6.autoContainerWidth,\n          autoHeight = _props6.autoHeight,\n          autoWidth = _props6.autoWidth,\n          className = _props6.className,\n          containerProps = _props6.containerProps,\n          containerRole = _props6.containerRole,\n          containerStyle = _props6.containerStyle,\n          height = _props6.height,\n          id = _props6.id,\n          noContentRenderer = _props6.noContentRenderer,\n          role = _props6.role,\n          style = _props6.style,\n          tabIndex = _props6.tabIndex,\n          width = _props6.width;\n      var _state2 = this.state,\n          instanceProps = _state2.instanceProps,\n          needToResetStyleCache = _state2.needToResetStyleCache;\n\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      }\n\n      // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      }\n\n      // calculate children to render here\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n\n      // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      }\n\n      // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n\n      var childrenToDisplay = this._childrenToDisplay;\n\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n\n      return React.createElement(\n        'div',\n        _extends({\n          ref: this._setScrollingContainerRef\n        }, containerProps, {\n          'aria-label': this.props['aria-label'],\n          'aria-readonly': this.props['aria-readonly'],\n          className: clsx('ReactVirtualized__Grid', className),\n          id: id,\n          onScroll: this._onScroll,\n          role: role,\n          style: _extends({}, gridStyle, style),\n          tabIndex: tabIndex }),\n        childrenToDisplay.length > 0 && React.createElement(\n          'div',\n          {\n            className: 'ReactVirtualized__Grid__innerScrollContainer',\n            role: containerRole,\n            style: _extends({\n              width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n              height: totalRowsHeight,\n              maxWidth: totalColumnsWidth,\n              maxHeight: totalRowsHeight,\n              overflow: 'hidden',\n              pointerEvents: isScrolling ? 'none' : '',\n              position: 'relative'\n            }, containerStyle) },\n          childrenToDisplay\n        ),\n        showNoContentRenderer && noContentRenderer()\n      );\n    }\n\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: '_calculateChildrenToRender',\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n\n\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = [];\n\n      // Render only enough columns and rows to cover the visible area of the grid.\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        });\n\n        // Store for _invokeOnGridRenderedHelper()\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        });\n\n        // Store for _invokeOnGridRenderedHelper()\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex;\n\n        // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          }\n\n          // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        });\n\n        // update the indices\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: '_debounceScrollEnded',\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n\n        this.recomputeGridSize({ columnIndex: columnIndex, rowIndex: rowIndex });\n      }\n    }\n  }, {\n    key: '_invokeOnScrollMemoizer',\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _props7 = _this3.props,\n              height = _props7.height,\n              onScroll = _props7.onScroll,\n              width = _props7.width;\n\n\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: '_isScrolling',\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: '_maybeCallOnScrollbarPresenceChange',\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var _onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n\n\n        this._scrollbarPresenceChanged = false;\n\n        _onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: 'scrollToPosition',\n\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: '_getCalculatedScrollLeft',\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: '_updateScrollLeftForScrollToColumn',\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: '_getCalculatedScrollTop',\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: '_resetStyleCache',\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut;\n\n      // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {};\n\n      // Copy over the visible cell styles so avoid unnecessary re-render.\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = rowIndex + '-' + columnIndex;\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: '_updateScrollTopForScrollToRow',\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n      var instanceProps = prevState.instanceProps;\n\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0;\n\n        // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== instanceProps.prevScrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== instanceProps.prevScrollTop && nextProps.scrollToRow < 0) {\n        _Object$assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      // Initially we should not clearStyleCache\n      newState.needToResetStyleCache = false;\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      }\n\n      // If scrolling is controlled outside this component, clear cache when scrolling stops\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        _Object$assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA = void 0;\n      var maybeStateB = void 0;\n\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow;\n      instanceProps.prevScrollLeft = nextProps.scrollLeft;\n      instanceProps.prevScrollTop = nextProps.scrollTop;\n\n      // getting scrollBarSize (moved from componentWillMount)\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n\n      return _extends({}, newState, maybeStateA, maybeStateB);\n    }\n  }, {\n    key: '_getEstimatedColumnSize',\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: '_getEstimatedRowSize',\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: '_getScrollToPositionStateUpdate',\n\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n      return null;\n    }\n  }, {\n    key: '_wrapSizeGetter',\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: '_getCalculatedScrollLeft',\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n      return 0;\n    }\n  }, {\n    key: '_getScrollLeftForScrollToColumnStateUpdate',\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n      return null;\n    }\n  }, {\n    key: '_getCalculatedScrollTop',\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n      return 0;\n    }\n  }, {\n    key: '_getScrollTopForScrollToRowStateUpdate',\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n      return null;\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent);\n\nGrid.defaultProps = {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n};\nGrid.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  autoContainerWidth: PropTypes.bool.isRequired,\n\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool.isRequired,\n\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  autoWidth: PropTypes.bool.isRequired,\n\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  cellRenderer: function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === 'function' ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  cellRangeRenderer: function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === 'function' ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  className: PropTypes.string,\n\n\n  /** Number of columns in grid.  */\n  columnCount: PropTypes.number.isRequired,\n\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  columnWidth: function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n\n  /** Unfiltered props for the Grid container. */\n  containerProps: PropTypes.object,\n\n\n  /** ARIA role for the cell-container.  */\n  containerRole: PropTypes.string.isRequired,\n\n\n  /** Optional inline style applied to inner cell-container */\n  containerStyle: PropTypes.object.isRequired,\n\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  deferredMeasurementCache: PropTypes.object,\n\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  estimatedColumnSize: PropTypes.number.isRequired,\n\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n\n  /** Exposed for testing purposes only.  */\n  getScrollbarSize: PropTypes.func.isRequired,\n\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  height: PropTypes.number.isRequired,\n\n\n  /** Optional custom id to attach to root Grid element.  */\n  id: PropTypes.string,\n\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  isScrolling: PropTypes.bool,\n\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  isScrollingOptOut: PropTypes.bool.isRequired,\n\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  noContentRenderer: function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === 'function' ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  onScroll: PropTypes.func.isRequired,\n\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  onScrollbarPresenceChange: PropTypes.func.isRequired,\n\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  onSectionRendered: PropTypes.func.isRequired,\n\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  overscanColumnCount: PropTypes.number.isRequired,\n\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  overscanIndicesGetter: function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === 'function' ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n\n  /** ARIA role for the grid element.  */\n  role: PropTypes.string.isRequired,\n\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  rowHeight: function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n\n  /** Number of rows in grid.  */\n  rowCount: PropTypes.number.isRequired,\n\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n\n\n  /** Horizontal offset. */\n  scrollLeft: PropTypes.number,\n\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === 'function' ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToColumn: PropTypes.number.isRequired,\n\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToRow: PropTypes.number.isRequired,\n\n\n  /** Optional inline style */\n  style: PropTypes.object.isRequired,\n\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  width: PropTypes.number.isRequired\n};\n\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from './types';\nimport { bpfrpt_proptype_CellRangeRenderer } from './types';\nimport { bpfrpt_proptype_CellPosition } from './types';\nimport { bpfrpt_proptype_CellSize } from './types';\nimport { bpfrpt_proptype_CellSizeGetter } from './types';\nimport { bpfrpt_proptype_NoContentRenderer } from './types';\nimport { bpfrpt_proptype_Scroll } from './types';\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from './types';\nimport { bpfrpt_proptype_RenderedSection } from './types';\nimport { bpfrpt_proptype_OverscanIndicesGetter } from './types';\nimport { bpfrpt_proptype_Alignment } from './types';\nimport { bpfrpt_proptype_CellCache } from './types';\nimport { bpfrpt_proptype_StyleCache } from './types';\nimport { bpfrpt_proptype_AnimationTimeoutId } from '../utils/requestAnimationTimeout';\nimport PropTypes from 'prop-types';","\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\n\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n\n  var renderedCells = [];\n\n  // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = rowIndex + '-' + columnIndex;\n      var style = void 0;\n\n      // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n\n      var renderedCell = void 0;\n\n      // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key];\n\n        // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\nimport { bpfrpt_proptype_CellRangeRendererParams } from './types';","\n\nexport var SCROLL_DIRECTION_BACKWARD = -1;\n\nexport var SCROLL_DIRECTION_FORWARD = 1;\n\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from './types';\nimport { bpfrpt_proptype_OverscanIndices } from './types';","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  scrollToColumn: PropTypes.number.isRequired,\n  scrollToRow: PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = function (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ArrowKeyStepper.__proto__ || _Object$getPrototypeOf(ArrowKeyStepper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      scrollToColumn: 0,\n      scrollToRow: 0\n    }, _this._columnStartIndex = 0, _this._columnStopIndex = 0, _this._rowStartIndex = 0, _this._rowStopIndex = 0, _this._onKeyDown = function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow;\n\n      // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({ scrollToColumn: scrollToColumn, scrollToRow: scrollToRow });\n      }\n    }, _this._onSectionRendered = function (_ref2) {\n      var columnStartIndex = _ref2.columnStartIndex,\n          columnStopIndex = _ref2.columnStopIndex,\n          rowStartIndex = _ref2.rowStartIndex,\n          rowStopIndex = _ref2.rowStopIndex;\n\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: 'setScrollIndexes',\n    value: function setScrollIndexes(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          children = _props.children;\n\n      var _getScrollState2 = this._getScrollState(),\n          scrollToColumn = _getScrollState2.scrollToColumn,\n          scrollToRow = _getScrollState2.scrollToRow;\n\n      return React.createElement(\n        'div',\n        { className: className, onKeyDown: this._onKeyDown },\n        children({\n          onSectionRendered: this._onSectionRendered,\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        })\n      );\n    }\n  }, {\n    key: '_getScrollState',\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: '_updateScrollState',\n    value: function _updateScrollState(_ref4) {\n      var scrollToColumn = _ref4.scrollToColumn,\n          scrollToRow = _ref4.scrollToRow;\n      var _props2 = this.props,\n          isControlled = _props2.isControlled,\n          onScrollToChange = _props2.onScrollToChange;\n\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({ scrollToColumn: scrollToColumn, scrollToRow: scrollToRow });\n      }\n\n      if (!isControlled) {\n        this.setState({ scrollToColumn: scrollToColumn, scrollToRow: scrollToRow });\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return null;\n      }\n\n      if (nextProps.scrollToColumn !== prevState.scrollToColumn || nextProps.scrollToRow !== prevState.scrollToRow) {\n        return {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent);\n\nArrowKeyStepper.defaultProps = {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n};\nArrowKeyStepper.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  children: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  columnCount: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  isControlled: PropTypes.bool.isRequired,\n  mode: PropTypes.oneOf(['cells', 'edges']).isRequired,\n  onScrollToChange: PropTypes.func,\n  rowCount: PropTypes.number.isRequired,\n  scrollToColumn: PropTypes.number.isRequired,\n  scrollToRow: PropTypes.number.isRequired\n};\n\n\npolyfill(ArrowKeyStepper);\n\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from '../Grid';\nimport { bpfrpt_proptype_ScrollIndices } from './types';\nimport PropTypes from 'prop-types';","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\nvar AutoSizer = function (_React$PureComponent) {\n  _inherits(AutoSizer, _React$PureComponent);\n\n  function AutoSizer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AutoSizer.__proto__ || _Object$getPrototypeOf(AutoSizer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    }, _this._onResize = function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n\n        var _height = _this._parentNode.offsetHeight || 0;\n        var _width = _this._parentNode.offsetWidth || 0;\n\n        var _style = window.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(_style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(_style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(_style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(_style.paddingBottom, 10) || 0;\n\n        var newHeight = _height - paddingTop - paddingBottom;\n        var newWidth = _width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: _height - paddingTop - paddingBottom,\n            width: _width - paddingLeft - paddingRight\n          });\n\n          onResize({ height: _height, width: _width });\n        }\n      }\n    }, _this._setRef = function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(AutoSizer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n\n        // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n        this._detectElementResize = createDetectElementResize(nonce);\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeight = _props.disableHeight,\n          disableWidth = _props.disableWidth,\n          style = _props.style;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n\n      // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = { overflow: 'visible' };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n      return React.createElement(\n        'div',\n        {\n          className: className,\n          ref: this._setRef,\n          style: _extends({}, outerStyle, style) },\n        children(childParams)\n      );\n    }\n  }]);\n\n  return AutoSizer;\n}(React.PureComponent);\n\nAutoSizer.defaultProps = {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n};\nAutoSizer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  children: PropTypes.func.isRequired,\n\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  className: PropTypes.string,\n\n\n  /** Default height to use for initial render; useful for SSR */\n  defaultHeight: PropTypes.number,\n\n\n  /** Default width to use for initial render; useful for SSR */\n  defaultWidth: PropTypes.number,\n\n\n  /** Disable dynamic :height property */\n  disableHeight: PropTypes.bool.isRequired,\n\n\n  /** Disable dynamic :width property */\n  disableWidth: PropTypes.bool.isRequired,\n\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  nonce: PropTypes.string,\n\n\n  /** Callback to be invoked on-resize */\n  onResize: PropTypes.func.isRequired,\n\n\n  /** Optional inline style */\n  style: PropTypes.object\n};\nexport default AutoSizer;\nimport PropTypes from 'prop-types';","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = function (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CellMeasurer.__proto__ || _Object$getPrototypeOf(CellMeasurer)).call.apply(_ref, [this].concat(args))), _this), _this._measure = function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === undefined ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === undefined ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(CellMeasurer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return typeof children === 'function' ? children({ measure: this._measure }) : children;\n    }\n  }, {\n    key: '_getCellMeasurements',\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n\n\n      var node = findDOMNode(this);\n\n      // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height;\n\n        // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth);\n\n        // Reset after measuring to avoid breaking styles; see #660\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return { height: height, width: width };\n      } else {\n        return { height: 0, width: 0 };\n      }\n    }\n  }, {\n    key: '_maybeMeasureCell',\n    value: function _maybeMeasureCell() {\n      var _props = this.props,\n          cache = _props.cache,\n          _props$columnIndex = _props.columnIndex,\n          columnIndex = _props$columnIndex === undefined ? 0 : _props$columnIndex,\n          parent = _props.parent,\n          _props$rowIndex = _props.rowIndex,\n          rowIndex = _props$rowIndex === undefined ? this.props.index || 0 : _props$rowIndex;\n\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _getCellMeasurements2 = this._getCellMeasurements(),\n            height = _getCellMeasurements2.height,\n            width = _getCellMeasurements2.width;\n\n        cache.set(rowIndex, columnIndex, width, height);\n\n        // If size has changed, let Grid know to re-render.\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent);\n\n// Used for DEV mode warning check\n\n\nCellMeasurer.__internalCellMeasurerFlag = false;\nCellMeasurer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  cache: function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === 'function' ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  columnIndex: PropTypes.number,\n  index: PropTypes.number,\n  parent: PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  rowIndex: PropTypes.number\n};\nexport default CellMeasurer;\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\nimport { bpfrpt_proptype_CellMeasureCache } from './types';\nimport PropTypes from 'prop-types';","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n\n\nexport var DEFAULT_HEIGHT = 30;\n\nexport var DEFAULT_WIDTH = 100;\n\n// Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache = function () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    this._cellHeightCache = {};\n    this._cellWidthCache = {};\n    this._columnWidthCache = {};\n    this._rowHeightCache = {};\n    this._columnCount = 0;\n    this._rowCount = 0;\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache.hasOwnProperty(key) ? _this._columnWidthCache[key] : _this._defaultWidth;\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache.hasOwnProperty(key) ? _this._rowHeightCache[key] : _this._defaultHeight;\n    };\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n\n\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: 'clear',\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache.hasOwnProperty(_key) ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache.hasOwnProperty(_key2) ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache.hasOwnProperty(key);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      }\n\n      // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: '_updateCachedColumnAndRowSizes',\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n        var columnKey = this._keyMapper(0, columnIndex);\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n        var rowKey = this._keyMapper(rowIndex, 0);\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport default CellMeasurerCache;\n\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return rowIndex + '-' + columnIndex;\n}\nimport { bpfrpt_proptype_CellMeasureCache } from './types';","import CellMeasurer from './CellMeasurer';\nimport CellMeasurerCache from './CellMeasurerCache';\n\nexport default CellMeasurer;\nexport { CellMeasurer, CellMeasurerCache };","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/util/scrollbarSize';\n\n// @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar IS_SCROLLING_TIMEOUT = 150;\n\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView = function (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _ref;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n    var _this = _possibleConstructorReturn(this, (_ref = CollectionView.__proto__ || _Object$getPrototypeOf(CollectionView)).call.apply(_ref, [this].concat(args)));\n\n    _this.state = {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    };\n    _this._calculateSizeAndPositionDataOnNextUpdate = false;\n    _this._onSectionRenderedMemoizer = createCallbackMemoizer();\n    _this._onScrollMemoizer = createCallbackMemoizer(false);\n\n    _this._invokeOnSectionRenderedHelper = function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    };\n\n    _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    };\n\n    _this._updateScrollPositionForScrollToCell = function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    };\n\n    _this._onScroll = function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      _this._enablePointerEventsAfterDelay();\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop));\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED;\n\n        // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    };\n\n    _this._scrollbarSize = getScrollbarSize();\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          cellLayoutManager = _props.cellLayoutManager,\n          scrollLeft = _props.scrollLeft,\n          scrollToCell = _props.scrollToCell,\n          scrollTop = _props.scrollTop;\n\n      // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({ scrollLeft: scrollLeft, scrollTop: scrollTop });\n      }\n\n      // Update onSectionRendered callback.\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width;\n\n      // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _props2 = this.props,\n          height = _props2.height,\n          scrollToAlignment = _props2.scrollToAlignment,\n          scrollToCell = _props2.scrollToCell,\n          width = _props2.width;\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollPositionChangeReason = _state.scrollPositionChangeReason,\n          scrollTop = _state.scrollTop;\n\n      // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      }\n\n      // Update scroll offsets if the current :scrollToCell values requires it\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      }\n\n      // Update onRowsRendered callback if start/stop indices have changed\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          autoHeight = _props3.autoHeight,\n          cellCount = _props3.cellCount,\n          cellLayoutManager = _props3.cellLayoutManager,\n          className = _props3.className,\n          height = _props3.height,\n          horizontalOverscanSize = _props3.horizontalOverscanSize,\n          id = _props3.id,\n          noContentRenderer = _props3.noContentRenderer,\n          style = _props3.style,\n          verticalOverscanSize = _props3.verticalOverscanSize,\n          width = _props3.width;\n      var _state2 = this.state,\n          isScrolling = _state2.isScrolling,\n          scrollLeft = _state2.scrollLeft,\n          scrollTop = _state2.scrollTop;\n\n      // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width;\n\n      // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      };\n\n      // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0;\n\n      // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n\n      return React.createElement(\n        'div',\n        {\n          ref: this._setScrollingContainerRef,\n          'aria-label': this.props['aria-label'],\n          className: clsx('ReactVirtualized__Collection', className),\n          id: id,\n          onScroll: this._onScroll,\n          role: 'grid',\n          style: _extends({}, collectionStyle, style),\n          tabIndex: 0 },\n        cellCount > 0 && React.createElement(\n          'div',\n          {\n            className: 'ReactVirtualized__Collection__innerScrollContainer',\n            style: {\n              height: totalHeight,\n              maxHeight: totalHeight,\n              maxWidth: totalWidth,\n              overflow: 'hidden',\n              pointerEvents: isScrolling ? 'none' : '',\n              width: totalWidth\n            } },\n          childrenToDisplay\n        ),\n        cellCount === 0 && noContentRenderer()\n      );\n    }\n\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: '_enablePointerEventsAfterDelay',\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n\n\n        isScrollingChange(false);\n\n        _this2._disablePointerEventsTimeoutId = null;\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: '_invokeOnScrollMemoizer',\n    value: function _invokeOnScrollMemoizer(_ref2) {\n      var _this3 = this;\n\n      var scrollLeft = _ref2.scrollLeft,\n          scrollTop = _ref2.scrollTop,\n          totalHeight = _ref2.totalHeight,\n          totalWidth = _ref2.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref3) {\n          var scrollLeft = _ref3.scrollLeft,\n              scrollTop = _ref3.scrollTop;\n          var _props4 = _this3.props,\n              height = _props4.height,\n              onScroll = _props4.onScroll,\n              width = _props4.width;\n\n\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: '_setScrollPosition',\n    value: function _setScrollPosition(_ref4) {\n      var scrollLeft = _ref4.scrollLeft,\n          scrollTop = _ref4.scrollTop;\n\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\nCollectionView.defaultProps = {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n};\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\n\n\npolyfill(CollectionView);\n\nexport default CollectionView;","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section = function () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n\n    this._indexMap = {};\n    this._indices = [];\n  }\n\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: 'addCellIndex',\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n        this._indices.push(index);\n      }\n    }\n\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: 'getCellIndices',\n    value: function getCellIndices() {\n      return this._indices;\n    }\n\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.x + ',' + this.y + ' ' + this.width + 'x' + this.height;\n    }\n  }]);\n\n  return Section;\n}();\n\nexport default Section;\nimport { bpfrpt_proptype_Index } from './types';\nimport { bpfrpt_proptype_SizeAndPositionInfo } from './types';","import _Object$keys from 'babel-runtime/core-js/object/keys';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\n\n\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager = function () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: 'getCellIndices',\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n\n      var indices = {};\n\n      this.getSections({ height: height, width: width, x: x, y: y }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      });\n\n      // Object keys are strings; this function returns numbers\n      return _Object$keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: 'getCellMetadata',\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n\n      return this._cellMetadata[index];\n    }\n\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: 'getSections',\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = sectionX + '.' + sectionY;\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: 'getTotalSectionCount',\n    value: function getTotalSectionCount() {\n      return _Object$keys(this._sections).length;\n    }\n\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var _this = this;\n\n      return _Object$keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: 'registerCell',\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n\n      this._cellMetadata[index] = cellMetadatum;\n\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({ index: index });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport default SectionManager;\nimport { bpfrpt_proptype_Index } from './types';\nimport { bpfrpt_proptype_SizeAndPositionInfo } from './types';","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === undefined ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n    case 'end':\n      return minOffset;\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection = function (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    _classCallCheck(this, Collection);\n\n    var _this = _possibleConstructorReturn(this, (Collection.__proto__ || _Object$getPrototypeOf(Collection)).call(this, props, context));\n\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = [];\n\n    // Cell cache during scroll (for perforamnce)\n    _this._cellCache = [];\n\n    _this._isScrollingChange = _this._isScrollingChange.bind(_this);\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: 'forceUpdate',\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n\n    /** React lifecycle methods */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = _objectWithoutProperties(this.props, []);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n\n    /** CellLayoutManager interface */\n\n  }, {\n    key: 'calculateSizeAndPositionData',\n    value: function calculateSizeAndPositionData() {\n      var _props = this.props,\n          cellCount = _props.cellCount,\n          cellSizeAndPositionGetter = _props.cellSizeAndPositionGetter,\n          sectionSize = _props.sectionSize;\n\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: 'getLastRenderedIndices',\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: 'getScrollPositionForCell',\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: 'cellRenderers',\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _props2 = this.props,\n          cellGroupRenderer = _props2.cellGroupRenderer,\n          cellRenderer = _props2.cellRenderer;\n\n      // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({ index: index });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: '_isScrollingChange',\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: '_setCollectionViewRef',\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\nCollection.defaultProps = {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n};\nexport default Collection;\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({ index: index });\n\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    };\n\n    // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\nimport { bpfrpt_proptype_ScrollPosition } from './types';\nimport { bpfrpt_proptype_SizeInfo } from './types';","import SectionManager from '../SectionManager';\n\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({ index: index });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error('Invalid metadata returned for cell ' + index + ':\\n        x:' + cellMetadatum.x + ', y:' + cellMetadatum.y + ', width:' + cellMetadatum.width + ', height:' + cellMetadatum.height);\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\n\nexport default Collection;\nexport { Collection };","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer = function (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    _classCallCheck(this, ColumnSizer);\n\n    var _this = _possibleConstructorReturn(this, (ColumnSizer.__proto__ || _Object$getPrototypeOf(ColumnSizer)).call(this, props, context));\n\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _props = this.props,\n          columnMaxWidth = _props.columnMaxWidth,\n          columnMinWidth = _props.columnMinWidth,\n          columnCount = _props.columnCount,\n          width = _props.width;\n\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          children = _props2.children,\n          columnMaxWidth = _props2.columnMaxWidth,\n          columnMinWidth = _props2.columnMinWidth,\n          columnCount = _props2.columnCount,\n          width = _props2.width;\n\n\n      var safeColumnMinWidth = columnMinWidth || 1;\n\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: '_registerChild',\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport default ColumnSizer;\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\n\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader = function (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    _classCallCheck(this, InfiniteLoader);\n\n    var _this = _possibleConstructorReturn(this, (InfiniteLoader.__proto__ || _Object$getPrototypeOf(InfiniteLoader)).call(this, props, context));\n\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n    _this._onRowsRendered = _this._onRowsRendered.bind(_this);\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: 'resetLoadMoreRowsCache',\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: '_loadUnloadedRanges',\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n\n\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: '_onRowsRendered',\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: '_doStuff',\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _props = this.props,\n          isRowLoaded = _props.isRowLoaded,\n          minimumBatchSize = _props.minimumBatchSize,\n          rowCount = _props.rowCount,\n          threshold = _props.threshold;\n\n\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      });\n\n      // For memoize comparison\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: { squashedUnloadedRanges: squashedUnloadedRanges }\n      });\n    }\n  }, {\n    key: '_registerChild',\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\nInfiniteLoader.defaultProps = {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n};\nexport default InfiniteLoader;\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n\n  var unloadedRanges = [];\n\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({ index: index });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  }\n\n  // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({ index: _index })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  }\n\n  // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({ index: _index2 })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\n\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getOwnPropertyDescriptor from 'babel-runtime/core-js/object/get-own-property-descriptor';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = function (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = List.__proto__ || _Object$getPrototypeOf(List)).call.apply(_ref, [this].concat(args))), _this), _this._cellRenderer = function (_ref2) {\n      var parent = _ref2.parent,\n          rowIndex = _ref2.rowIndex,\n          style = _ref2.style,\n          isScrolling = _ref2.isScrolling,\n          isVisible = _ref2.isVisible,\n          key = _ref2.key;\n      var rowRenderer = _this.props.rowRenderer;\n\n      // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var _Object$getOwnPropert = _Object$getOwnPropertyDescriptor(style, 'width'),\n          writable = _Object$getOwnPropert.writable;\n\n      if (writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    }, _this._setRef = function (ref) {\n      _this.Grid = ref;\n    }, _this._onScroll = function (_ref3) {\n      var clientHeight = _ref3.clientHeight,\n          scrollHeight = _ref3.scrollHeight,\n          scrollTop = _ref3.scrollTop;\n      var onScroll = _this.props.onScroll;\n\n\n      onScroll({ clientHeight: clientHeight, scrollHeight: scrollHeight, scrollTop: scrollTop });\n    }, _this._onSectionRendered = function (_ref4) {\n      var rowOverscanStartIndex = _ref4.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref4.rowOverscanStopIndex,\n          rowStartIndex = _ref4.rowStartIndex,\n          rowStopIndex = _ref4.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n\n\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(List, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref5) {\n      var alignment = _ref5.alignment,\n          index = _ref5.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            _scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return _scrollTop;\n      }\n      return 0;\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === undefined ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === undefined ? 0 : _ref7$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({ scrollTop: scrollTop });\n      }\n    }\n\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          noRowsRenderer = _props.noRowsRenderer,\n          scrollToIndex = _props.scrollToIndex,\n          width = _props.width;\n\n\n      var classNames = clsx('ReactVirtualized__List', className);\n\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent);\n\nList.defaultProps = {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nList.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool.isRequired,\n\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  height: PropTypes.number.isRequired,\n\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  noRowsRenderer: function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === 'function' ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n\n  onRowsRendered: PropTypes.func.isRequired,\n\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  onScroll: PropTypes.func.isRequired,\n\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === 'function' ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  rowHeight: function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  rowRenderer: function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === 'function' ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /** Number of rows in list. */\n  rowCount: PropTypes.number.isRequired,\n\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === 'function' ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n\n  /** Optional inline style */\n  style: PropTypes.object.isRequired,\n\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n};\nexport default List;\nimport { bpfrpt_proptype_NoContentRenderer } from '../Grid';\nimport { bpfrpt_proptype_Alignment } from '../Grid';\nimport { bpfrpt_proptype_CellSize } from '../Grid';\nimport { bpfrpt_proptype_CellPosition } from '../Grid';\nimport { bpfrpt_proptype_OverscanIndicesGetter } from '../Grid';\nimport { bpfrpt_proptype_RenderedSection } from '../Grid';\nimport { bpfrpt_proptype_CellRendererParams } from '../Grid';\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from '../Grid';\nimport { bpfrpt_proptype_RowRenderer } from './types';\nimport { bpfrpt_proptype_RenderedRows } from './types';\nimport { bpfrpt_proptype_Scroll } from './types';\nimport PropTypes from 'prop-types';","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return -1;\n}\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return -1;\n}\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\nimport bounds from './binarySearchBounds';\n\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n  if (this.left) {\n    this.left.intervals(result);\n  }\n  if (this.right) {\n    this.right.intervals(result);\n  }\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n    var rw = this.right ? this.right.count : 0;\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n    var r = this.left.remove(interval);\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n    var lw = this.left ? this.left.count : 0;\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n    var r = this.right.remove(interval);\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n      return SUCCESS;\n    }\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n      if (r) {\n        return r;\n      }\n    }\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n      if (r) {\n        return r;\n      }\n    }\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n    if (r) {\n      return r;\n    }\n  }\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n    if (r) {\n      return r;\n    }\n  }\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n  if (d) {\n    return d;\n  }\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n  if (d) {\n    return d;\n  }\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n  var pts = [];\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n  pts.sort(compareNumbers);\n\n  var mid = pts[pts.length >> 1];\n\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  }\n\n  //Split center intervals\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n}\n\n//User friendly wrapper that makes it possible to support empty trees\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n    if (r === EMPTY) {\n      this.root = null;\n    }\n    return r !== NOT_FOUND;\n  }\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n    return 0;\n  }\n});\n\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n    return [];\n  }\n});\n\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache = function () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    this._columnSizeMap = {};\n    this._intervalTree = createIntervalTree();\n    this._leftMap = {};\n  }\n  // Tracks the height of each column\n\n\n  // Store tops and bottoms of each cell for fast intersection lookup.\n\n\n  // Maps cell index to x coordinates for quick lookup.\n\n\n  _createClass(PositionCache, [{\n    key: 'estimateTotalHeight',\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    }\n\n    // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: 'range',\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n      this._leftMap[index] = left;\n\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: 'count',\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: 'shortestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: 'tallestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport default PositionCache;","import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n\nvar emptyObject = {};\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = function (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Masonry.__proto__ || _Object$getPrototypeOf(Masonry)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isScrolling: false,\n      scrollTop: 0\n    }, _this._invalidateOnUpdateStartIndex = null, _this._invalidateOnUpdateStopIndex = null, _this._positionCache = new PositionCache(), _this._startIndex = null, _this._startIndexMemoized = null, _this._stopIndex = null, _this._stopIndexMemoized = null, _this._debounceResetIsScrollingCallback = function () {\n      _this.setState({\n        isScrolling: false\n      });\n    }, _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    }, _this._onScroll = function (event) {\n      var height = _this.props.height;\n\n\n      var eventScrollTop = event.target.scrollTop;\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop);\n\n      // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n      if (eventScrollTop !== scrollTop) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      _this._debounceResetIsScrolling();\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Masonry, [{\n    key: 'clearCellPositions',\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    }\n\n    // HACK This method signature was intended for Grid\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var index = _ref2.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: 'recomputeCellPositions',\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n\n      this._positionCache = new PositionCache();\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          autoHeight = _props.autoHeight,\n          cellCount = _props.cellCount,\n          cellMeasurerCache = _props.cellMeasurerCache,\n          cellRenderer = _props.cellRenderer,\n          className = _props.className,\n          height = _props.height,\n          id = _props.id,\n          keyMapper = _props.keyMapper,\n          overscanByPixels = _props.overscanByPixels,\n          role = _props.role,\n          style = _props.style,\n          tabIndex = _props.tabIndex,\n          width = _props.width,\n          rowDirection = _props.rowDirection;\n      var _state = this.state,\n          isScrolling = _state.isScrolling,\n          scrollTop = _state.scrollTop;\n\n\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n\n      var startIndex = 0;\n      var stopIndex = void 0;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, 'position', 'absolute'), _defineProperty(_style, 'top', top), _defineProperty(_style, 'width', cellMeasurerCache.getWidth(index)), _style)\n        }));\n      });\n\n      // We need to measure additional cells for this layout\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n\n      return React.createElement(\n        'div',\n        {\n          ref: this._setScrollingContainerRef,\n          'aria-label': this.props['aria-label'],\n          className: clsx('ReactVirtualized__Masonry', className),\n          id: id,\n          onScroll: this._onScroll,\n          role: role,\n          style: _extends({\n            boxSizing: 'border-box',\n            direction: 'ltr',\n            height: autoHeight ? 'auto' : height,\n            overflowX: 'hidden',\n            overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n            position: 'relative',\n            width: width,\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform'\n          }, style),\n          tabIndex: tabIndex },\n        React.createElement(\n          'div',\n          {\n            className: 'ReactVirtualized__Masonry__innerScrollContainer',\n            style: {\n              width: '100%',\n              height: estimateTotalHeight,\n              maxWidth: '100%',\n              maxHeight: estimateTotalHeight,\n              overflow: 'hidden',\n              pointerEvents: isScrolling ? 'none' : '',\n              position: 'relative'\n            } },\n          children\n        )\n      );\n    }\n  }, {\n    key: '_checkInvalidateOnUpdate',\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var _startIndex = this._invalidateOnUpdateStartIndex;\n        var _stopIndex = this._invalidateOnUpdateStopIndex;\n\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null;\n\n        // Query external layout logic for position of newly-measured cells\n        this._populatePositionCache(_startIndex, _stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: '_debounceResetIsScrolling',\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: '_getEstimatedTotalHeight',\n    value: function _getEstimatedTotalHeight() {\n      var _props2 = this.props,\n          cellCount = _props2.cellCount,\n          cellMeasurerCache = _props2.cellMeasurerCache,\n          width = _props2.width;\n\n\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: '_invokeOnScrollCallback',\n    value: function _invokeOnScrollCallback() {\n      var _props3 = this.props,\n          height = _props3.height,\n          onScroll = _props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: '_invokeOnCellsRenderedCallback',\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var _onCellsRendered = this.props.onCellsRendered;\n\n\n        _onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: '_populatePositionCache',\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _props4 = this.props,\n          cellMeasurerCache = _props4.cellMeasurerCache,\n          cellPositioner = _props4.cellPositioner;\n\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            _left = _cellPositioner.left,\n            _top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, _left, _top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent);\n\nMasonry.defaultProps = {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n};\nMasonry.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  autoHeight: PropTypes.bool.isRequired,\n  cellCount: PropTypes.number.isRequired,\n  cellMeasurerCache: function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === 'function' ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  cellPositioner: function cellPositioner() {\n    return (typeof Positioner === 'function' ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  cellRenderer: function cellRenderer() {\n    return (typeof CellRenderer === 'function' ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  className: PropTypes.string,\n  height: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  keyMapper: function keyMapper() {\n    return (typeof KeyMapper === 'function' ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  onCellsRendered: function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === 'function' ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  onScroll: function onScroll() {\n    return (typeof OnScrollCallback === 'function' ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  overscanByPixels: PropTypes.number.isRequired,\n  role: PropTypes.string.isRequired,\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n  style: function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  },\n  tabIndex: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  rowDirection: PropTypes.string.isRequired\n};\n\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  defaultHeight: PropTypes.number.isRequired,\n  defaultWidth: PropTypes.number.isRequired,\n  getHeight: PropTypes.func.isRequired,\n  getWidth: PropTypes.func.isRequired\n};\n\n\npolyfill(Masonry);\n\nexport default Masonry;\n\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from '../utils/requestAnimationTimeout';\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\n\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator = function () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    };\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === undefined ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === undefined ? 0 : _params$rowIndexOffse;\n\n\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: 'clear',\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport default CellMeasurerCacheDecorator;","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\n\nvar SCROLLBAR_SIZE_BUFFER = 20;\n\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid = function (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    _classCallCheck(this, MultiGrid);\n\n    var _this = _possibleConstructorReturn(this, (MultiGrid.__proto__ || _Object$getPrototypeOf(MultiGrid)).call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n\n      _this._deferredMeasurementCacheBottomRightGrid = fixedColumnCount > 0 || fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n\n      _this._deferredMeasurementCacheTopRightGrid = fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: 'forceUpdateGrids',\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? 0 : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? 0 : _ref$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$columnIndex = _ref2.columnIndex,\n          columnIndex = _ref2$columnIndex === undefined ? 0 : _ref2$columnIndex,\n          _ref2$rowIndex = _ref2.rowIndex,\n          rowIndex = _ref2$rowIndex === undefined ? 0 : _ref2$rowIndex;\n\n      var _props = this.props,\n          fixedColumnCount = _props.fixedColumnCount,\n          fixedRowCount = _props.fixedRowCount;\n\n\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          scrollLeft = _props2.scrollLeft,\n          scrollTop = _props2.scrollTop;\n\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          onScroll = _props3.onScroll,\n          onSectionRendered = _props3.onSectionRendered,\n          onScrollbarPresenceChange = _props3.onScrollbarPresenceChange,\n          scrollLeftProp = _props3.scrollLeft,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollTopProp = _props3.scrollTop,\n          scrollToRow = _props3.scrollToRow,\n          rest = _objectWithoutProperties(_props3, ['onScroll', 'onSectionRendered', 'onScrollbarPresenceChange', 'scrollLeft', 'scrollToColumn', 'scrollTop', 'scrollToRow']);\n\n      this._prepareForRender();\n\n      // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      }\n\n      // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop;\n\n\n      return React.createElement(\n        'div',\n        { style: this._containerOuterStyle },\n        React.createElement(\n          'div',\n          { style: this._containerTopStyle },\n          this._renderTopLeftGrid(rest),\n          this._renderTopRightGrid(_extends({}, rest, {\n            onScroll: onScroll,\n            scrollLeft: scrollLeft\n          }))\n        ),\n        React.createElement(\n          'div',\n          { style: this._containerBottomStyle },\n          this._renderBottomLeftGrid(_extends({}, rest, {\n            onScroll: onScroll,\n            scrollTop: scrollTop\n          })),\n          this._renderBottomRightGrid(_extends({}, rest, {\n            onScroll: onScroll,\n            onSectionRendered: onSectionRendered,\n            scrollLeft: scrollLeft,\n            scrollToColumn: scrollToColumn,\n            scrollToRow: scrollToRow,\n            scrollTop: scrollTop\n          }))\n        )\n      );\n    }\n  }, {\n    key: '_getBottomGridHeight',\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: '_getLeftGridWidth',\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({ index: index });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: '_getRightGridWidth',\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: '_getTopGridHeight',\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({ index: index });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: '_maybeCalculateCachedStyles',\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _props4 = this.props,\n          columnWidth = _props4.columnWidth,\n          enableFixedColumnScroll = _props4.enableFixedColumnScroll,\n          enableFixedRowScroll = _props4.enableFixedRowScroll,\n          height = _props4.height,\n          fixedColumnCount = _props4.fixedColumnCount,\n          fixedRowCount = _props4.fixedRowCount,\n          rowHeight = _props4.rowHeight,\n          style = _props4.style,\n          styleBottomLeftGrid = _props4.styleBottomLeftGrid,\n          styleBottomRightGrid = _props4.styleBottomRightGrid,\n          styleTopLeftGrid = _props4.styleTopLeftGrid,\n          styleTopRightGrid = _props4.styleTopRightGrid,\n          width = _props4.width;\n\n\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _extends({\n          height: height,\n          overflow: 'visible', // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible', // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: '_prepareForRender',\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: '_renderBottomLeftGrid',\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\n          'div',\n          {\n            className: 'BottomLeftGrid_ScrollWrapper',\n            style: _extends({}, this._bottomLeftGridStyle, {\n              height: height,\n              width: width,\n              overflowY: 'hidden'\n            }) },\n          bottomLeftGrid\n        );\n      }\n      return bottomLeftGrid;\n    }\n  }, {\n    key: '_renderBottomRightGrid',\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n\n\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopLeftGrid',\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopRightGrid',\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _state2 = this.state,\n          showHorizontalScrollbar = _state2.showHorizontalScrollbar,\n          scrollbarSize = _state2.scrollbarSize;\n\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _extends({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\n          'div',\n          {\n            className: 'TopRightGrid_ScrollWrapper',\n            style: _extends({}, this._topRightGridStyle, {\n              height: height,\n              width: width,\n              overflowX: 'hidden'\n            }) },\n          topRightGrid\n        );\n      }\n      return topRightGrid;\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\nMultiGrid.defaultProps = {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = {\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollbarSize: 0,\n    showHorizontalScrollbar: false,\n    showVerticalScrollbar: false\n  };\n  this._deferredInvalidateColumnIndex = null;\n  this._deferredInvalidateRowIndex = null;\n\n  this._bottomLeftGridRef = function (ref) {\n    _this2._bottomLeftGrid = ref;\n  };\n\n  this._bottomRightGridRef = function (ref) {\n    _this2._bottomRightGrid = ref;\n  };\n\n  this._cellRendererBottomLeftGrid = function (_ref3) {\n    var rowIndex = _ref3.rowIndex,\n        rest = _objectWithoutProperties(_ref3, ['rowIndex']);\n\n    var _props5 = _this2.props,\n        cellRenderer = _props5.cellRenderer,\n        fixedRowCount = _props5.fixedRowCount,\n        rowCount = _props5.rowCount;\n\n\n    if (rowIndex === rowCount - fixedRowCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          height: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        parent: _this2,\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    }\n  };\n\n  this._cellRendererBottomRightGrid = function (_ref4) {\n    var columnIndex = _ref4.columnIndex,\n        rowIndex = _ref4.rowIndex,\n        rest = _objectWithoutProperties(_ref4, ['columnIndex', 'rowIndex']);\n\n    var _props6 = _this2.props,\n        cellRenderer = _props6.cellRenderer,\n        fixedColumnCount = _props6.fixedColumnCount,\n        fixedRowCount = _props6.fixedRowCount;\n\n\n    return cellRenderer(_extends({}, rest, {\n      columnIndex: columnIndex + fixedColumnCount,\n      parent: _this2,\n      rowIndex: rowIndex + fixedRowCount\n    }));\n  };\n\n  this._cellRendererTopRightGrid = function (_ref5) {\n    var columnIndex = _ref5.columnIndex,\n        rest = _objectWithoutProperties(_ref5, ['columnIndex']);\n\n    var _props7 = _this2.props,\n        cellRenderer = _props7.cellRenderer,\n        columnCount = _props7.columnCount,\n        fixedColumnCount = _props7.fixedColumnCount;\n\n\n    if (columnIndex === columnCount - fixedColumnCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          width: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _this2\n      }));\n    }\n  };\n\n  this._columnWidthRightGrid = function (_ref6) {\n    var index = _ref6.index;\n    var _props8 = _this2.props,\n        columnCount = _props8.columnCount,\n        fixedColumnCount = _props8.fixedColumnCount,\n        columnWidth = _props8.columnWidth;\n    var _state3 = _this2.state,\n        scrollbarSize = _state3.scrollbarSize,\n        showHorizontalScrollbar = _state3.showHorizontalScrollbar;\n\n    // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n      return scrollbarSize;\n    }\n\n    return typeof columnWidth === 'function' ? columnWidth({ index: index + fixedColumnCount }) : columnWidth;\n  };\n\n  this._onScroll = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n\n    _this2.setState({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n    var onScroll = _this2.props.onScroll;\n    if (onScroll) {\n      onScroll(scrollInfo);\n    }\n  };\n\n  this._onScrollbarPresenceChange = function (_ref7) {\n    var horizontal = _ref7.horizontal,\n        size = _ref7.size,\n        vertical = _ref7.vertical;\n    var _state4 = _this2.state,\n        showHorizontalScrollbar = _state4.showHorizontalScrollbar,\n        showVerticalScrollbar = _state4.showVerticalScrollbar;\n\n\n    if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n      _this2.setState({\n        scrollbarSize: size,\n        showHorizontalScrollbar: horizontal,\n        showVerticalScrollbar: vertical\n      });\n\n      var onScrollbarPresenceChange = _this2.props.onScrollbarPresenceChange;\n\n      if (typeof onScrollbarPresenceChange === 'function') {\n        onScrollbarPresenceChange({\n          horizontal: horizontal,\n          size: size,\n          vertical: vertical\n        });\n      }\n    }\n  };\n\n  this._onScrollLeft = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft;\n\n    _this2._onScroll({\n      scrollLeft: scrollLeft,\n      scrollTop: _this2.state.scrollTop\n    });\n  };\n\n  this._onScrollTop = function (scrollInfo) {\n    var scrollTop = scrollInfo.scrollTop;\n\n    _this2._onScroll({\n      scrollTop: scrollTop,\n      scrollLeft: _this2.state.scrollLeft\n    });\n  };\n\n  this._rowHeightBottomGrid = function (_ref8) {\n    var index = _ref8.index;\n    var _props9 = _this2.props,\n        fixedRowCount = _props9.fixedRowCount,\n        rowCount = _props9.rowCount,\n        rowHeight = _props9.rowHeight;\n    var _state5 = _this2.state,\n        scrollbarSize = _state5.scrollbarSize,\n        showVerticalScrollbar = _state5.showVerticalScrollbar;\n\n    // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n      return scrollbarSize;\n    }\n\n    return typeof rowHeight === 'function' ? rowHeight({ index: index + fixedRowCount }) : rowHeight;\n  };\n\n  this._topLeftGridRef = function (ref) {\n    _this2._topLeftGrid = ref;\n  };\n\n  this._topRightGridRef = function (ref) {\n    _this2._topRightGrid = ref;\n  };\n};\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\n\n\npolyfill(MultiGrid);\n\nexport default MultiGrid;","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync = function (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    _classCallCheck(this, ScrollSync);\n\n    var _this = _possibleConstructorReturn(this, (ScrollSync.__proto__ || _Object$getPrototypeOf(ScrollSync)).call(this, props, context));\n\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n\n    _this._onScroll = _this._onScroll.bind(_this);\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      var _state = this.state,\n          clientHeight = _state.clientHeight,\n          clientWidth = _state.clientWidth,\n          scrollHeight = _state.scrollHeight,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop,\n          scrollWidth = _state.scrollWidth;\n\n\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport default ScrollSync;\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\n\n\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n\n  return React.createElement(\n    'div',\n    { className: className, role: 'row', style: style },\n    columns\n  );\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from './types';\nimport PropTypes from 'prop-types';","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\n\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n\n  return React.createElement(\n    'svg',\n    { className: classNames, width: 18, height: 18, viewBox: '0 0 24 24' },\n    sortDirection === SortDirection.ASC ? React.createElement('path', { d: 'M7 14l5-5 5 5z' }) : React.createElement('path', { d: 'M7 10l5 5 5-5z' }),\n    React.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' })\n  );\n}\n\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\n    'span',\n    {\n      className: 'ReactVirtualized__Table__headerTruncatedText',\n      key: 'label',\n      title: typeof label === 'string' ? label : null },\n    label\n  )];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, { key: 'SortIndicator', sortDirection: sortDirection }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from './types';\nimport PropTypes from 'prop-types';","import _extends from 'babel-runtime/helpers/extends';\nimport * as React from 'react';\n\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n\n  var a11yProps = { 'aria-rowindex': index + 1 };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({ event: event, index: index, rowData: rowData });\n      };\n    }\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({ event: event, index: index, rowData: rowData });\n      };\n    }\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({ event: event, index: index, rowData: rowData });\n      };\n    }\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({ event: event, index: index, rowData: rowData });\n      };\n    }\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({ event: event, index: index, rowData: rowData });\n      };\n    }\n  }\n\n  return React.createElement(\n    'div',\n    _extends({}, a11yProps, {\n      className: className,\n      key: key,\n      role: 'row',\n      style: style }),\n    columns\n  );\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from './types';\nimport PropTypes from 'prop-types';","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column = function (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, (Column.__proto__ || _Object$getPrototypeOf(Column)).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\nColumn.defaultProps = {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n};\nexport default Column;\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","\n\n/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from './types';","\n\n/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from './types';","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\n\nimport clsx from 'clsx';\n\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\n\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table = function (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    _classCallCheck(this, Table);\n\n    var _this = _possibleConstructorReturn(this, (Table.__proto__ || _Object$getPrototypeOf(Table)).call(this, props));\n\n    _this.state = {\n      scrollbarWidth: 0\n    };\n\n    _this._createColumn = _this._createColumn.bind(_this);\n    _this._createRow = _this._createRow.bind(_this);\n    _this._onScroll = _this._onScroll.bind(_this);\n    _this._onSectionRendered = _this._onSectionRendered.bind(_this);\n    _this._setRef = _this._setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return scrollTop;\n      }\n      return 0;\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === undefined ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === undefined ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({ scrollTop: scrollTop });\n      }\n    }\n\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeader = _props.disableHeader,\n          gridClassName = _props.gridClassName,\n          gridStyle = _props.gridStyle,\n          headerHeight = _props.headerHeight,\n          headerRowRenderer = _props.headerRowRenderer,\n          height = _props.height,\n          id = _props.id,\n          noRowsRenderer = _props.noRowsRenderer,\n          rowClassName = _props.rowClassName,\n          rowStyle = _props.rowStyle,\n          scrollToIndex = _props.scrollToIndex,\n          style = _props.style,\n          width = _props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n\n\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({ index: -1 }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({ index: -1 }) : rowStyle;\n\n      // Precompute and cache column styles before rendering rows and columns to speed things up\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _extends({}, flexStyles, {\n          overflow: 'hidden'\n        });\n      });\n\n      // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n      return React.createElement(\n        'div',\n        {\n          'aria-label': this.props['aria-label'],\n          'aria-labelledby': this.props['aria-labelledby'],\n          'aria-colcount': React.Children.toArray(children).length,\n          'aria-rowcount': this.props.rowCount,\n          className: clsx('ReactVirtualized__Table', className),\n          id: id,\n          role: 'grid',\n          style: style },\n        !disableHeader && headerRowRenderer({\n          className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n          columns: this._getHeaderColumns(),\n          style: _extends({\n            height: headerHeight,\n            overflow: 'hidden',\n            paddingRight: scrollbarWidth,\n            width: width\n          }, rowStyleObject)\n        }),\n        React.createElement(Grid, _extends({}, this.props, {\n          autoContainerWidth: true,\n          className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n          cellRenderer: this._createRow,\n          columnWidth: width,\n          columnCount: 1,\n          height: availableRowsHeight,\n          id: undefined,\n          noContentRenderer: noRowsRenderer,\n          onScroll: this._onScroll,\n          onSectionRendered: this._onSectionRendered,\n          ref: this._setRef,\n          role: 'rowgroup',\n          scrollbarWidth: scrollbarWidth,\n          scrollToRow: scrollToIndex,\n          style: _extends({}, gridStyle, {\n            overflowX: 'hidden'\n          })\n        }))\n      );\n    }\n  }, {\n    key: '_createColumn',\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n\n\n      var cellData = cellDataGetter({ columnData: columnData, dataKey: dataKey, rowData: rowData });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({ columnData: columnData, dataKey: dataKey, event: event });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n\n      var title = typeof renderedCell === 'string' ? renderedCell : null;\n\n      // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n      return React.createElement(\n        'div',\n        {\n          'aria-colindex': columnIndex + 1,\n          'aria-describedby': id,\n          className: clsx('ReactVirtualized__Table__rowColumn', className),\n          key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n          onClick: onClick,\n          role: 'gridcell',\n          style: style,\n          title: title },\n        renderedCell\n      );\n    }\n  }, {\n    key: '_createHeader',\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _props2 = this.props,\n          headerClassName = _props2.headerClassName,\n          headerStyle = _props2.headerStyle,\n          onHeaderClick = _props2.onHeaderClick,\n          sort = _props2.sort,\n          sortBy = _props2.sortBy,\n          sortDirection = _props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n\n      var sortEnabled = !disableSort && sort;\n\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n      var style = this._getFlexStyleForColumn(column, _extends({}, headerStyle, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n\n      var headerOnClick = void 0,\n          headerOnKeyDown = void 0,\n          headerTabIndex = void 0,\n          headerAriaSort = void 0,\n          headerAriaLabel = void 0;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey;\n\n        // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({ columnData: columnData, dataKey: dataKey, event: event });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      }\n\n      // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n      return React.createElement(\n        'div',\n        {\n          'aria-label': headerAriaLabel,\n          'aria-sort': headerAriaSort,\n          className: classNames,\n          id: id,\n          key: 'Header-Col' + index,\n          onClick: headerOnClick,\n          onKeyDown: headerOnKeyDown,\n          role: 'columnheader',\n          style: style,\n          tabIndex: headerTabIndex },\n        renderedHeader\n      );\n    }\n  }, {\n    key: '_createRow',\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _props3 = this.props,\n          children = _props3.children,\n          onRowClick = _props3.onRowClick,\n          onRowDoubleClick = _props3.onRowDoubleClick,\n          onRowRightClick = _props3.onRowRightClick,\n          onRowMouseOver = _props3.onRowMouseOver,\n          onRowMouseOut = _props3.onRowMouseOut,\n          rowClassName = _props3.rowClassName,\n          rowGetter = _props3.rowGetter,\n          rowRenderer = _props3.rowRenderer,\n          rowStyle = _props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n\n\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({ index: index }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({ index: index }) : rowStyle;\n      var rowData = rowGetter({ index: index });\n\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n      var flattenedStyle = _extends({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: '_getFlexStyleForColumn',\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var flexValue = column.props.flexGrow + ' ' + column.props.flexShrink + ' ' + column.props.width + 'px';\n\n      var style = _extends({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: '_getHeaderColumns',\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _props4 = this.props,\n          children = _props4.children,\n          disableHeader = _props4.disableHeader;\n\n      var items = disableHeader ? [] : React.Children.toArray(children);\n\n      return items.map(function (column, index) {\n        return _this4._createHeader({ column: column, index: index });\n      });\n    }\n  }, {\n    key: '_getRowHeight',\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n\n\n      return typeof rowHeight === 'function' ? rowHeight({ index: rowIndex }) : rowHeight;\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n\n\n      onScroll({ clientHeight: clientHeight, scrollHeight: scrollHeight, scrollTop: scrollTop });\n    }\n  }, {\n    key: '_onSectionRendered',\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n\n\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: '_setRef',\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: '_setScrollbarWidth',\n    value: function _setScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        var scrollbarWidth = offsetWidth - clientWidth;\n\n        this.setState({ scrollbarWidth: scrollbarWidth });\n      }\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\nTable.defaultProps = {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nexport default Table;\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from '../Grid';","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\n\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\n\n\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n\n    document.body.style.pointerEvents = 'none';\n  }\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n  mountedInstances.push(component);\n}\n\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from '../WindowScroller.js';","\n\n/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\n// TODO Move this into WindowScroller and import from there\n\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n    var _elementRect = getBoundingBox(element);\n    var _containerRect = getBoundingBox(container);\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = function (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WindowScroller.__proto__ || _Object$getPrototypeOf(WindowScroller)).call.apply(_ref, [this].concat(args))), _this), _this._window = getWindow(), _this._isMounted = false, _this._positionFromTop = 0, _this._positionFromLeft = 0, _this.state = _extends({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }), _this._registerChild = function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n      _this._child = element;\n      _this.updatePosition();\n    }, _this._onChildScroll = function (_ref2) {\n      var scrollTop = _ref2.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    }, _this._registerResizeListener = function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    }, _this._unregisterResizeListener = function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    }, _this._onResize = function () {\n      _this.updatePosition();\n    }, _this.__handleWindowScrollEvent = function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n\n\n      var scrollElement = _this.props.scrollElement;\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var _scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var _scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: _scrollLeft,\n          scrollTop: _scrollTop\n        });\n\n        onScroll({\n          scrollLeft: _scrollLeft,\n          scrollTop: _scrollTop\n        });\n      }\n    }, _this.__resetIsScrolling = function () {\n      _this.setState({\n        isScrolling: false\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(WindowScroller, [{\n    key: 'updatePosition',\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n\n\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n\n      this._detectElementResize = createDetectElementResize();\n\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      var _state2 = this.state,\n          isScrolling = _state2.isScrolling,\n          scrollTop = _state2.scrollTop,\n          scrollLeft = _state2.scrollLeft,\n          height = _state2.height,\n          width = _state2.width;\n\n\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n\n    // Referenced by utils/onScroll\n\n\n    // Referenced by utils/onScroll\n\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent);\n\nWindowScroller.defaultProps = {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n};\nWindowScroller.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired,\n\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  onResize: PropTypes.func.isRequired,\n\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  onScroll: PropTypes.func.isRequired,\n\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  scrollElement: PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === 'function' ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n\n\n  /** Height used for server-side rendering */\n  serverHeight: PropTypes.number.isRequired,\n\n\n  /** Width used for server-side rendering */\n  serverWidth: PropTypes.number.isRequired\n};\nexport default WindowScroller;\nimport PropTypes from 'prop-types';","export { ArrowKeyStepper } from './ArrowKeyStepper';\nexport { AutoSizer } from './AutoSizer';\nexport { CellMeasurer, CellMeasurerCache } from './CellMeasurer';\nexport { Collection } from './Collection';\nexport { ColumnSizer } from './ColumnSizer';\nexport { accessibilityOverscanIndicesGetter, defaultCellRangeRenderer, defaultOverscanIndicesGetter, Grid } from './Grid';\nexport { InfiniteLoader } from './InfiniteLoader';\nexport { List } from './List';\nexport { createCellPositioner as createMasonryCellPositioner, Masonry } from './Masonry';\nexport { MultiGrid } from './MultiGrid';\nexport { ScrollSync } from './ScrollSync';\nexport { createMultiSort as createTableMultiSort, defaultCellDataGetter as defaultTableCellDataGetter, defaultCellRenderer as defaultTableCellRenderer, defaultHeaderRenderer as defaultTableHeaderRenderer, defaultHeaderRowRenderer as defaultTableHeaderRowRenderer, defaultRowRenderer as defaultTableRowRenderer, Table, Column, SortDirection, SortIndicator } from './Table';\nexport { WindowScroller } from './WindowScroller';","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = scrollbarSize;\n\nvar _inDOM = _interopRequireDefault(require(\"./inDOM\"));\n\nvar size;\n\nfunction scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (_inDOM.default) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}\n\nmodule.exports = exports[\"default\"];","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n **/\n\nexport default function createDetectElementResize(nonce) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n  if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof document !== 'undefined' && document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n\n    /* Detect CSS Animations support to detect element display/re-attach */\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = document.createElement('fakeelement');\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n        var elementStyle = _window.getComputedStyle(element);\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n\n        /* Listen for a css animation to detect element display/re-attach */\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {\n          // Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","module.exports = LinearLayoutVector;\n\nLinearLayoutVector.prototype.getLength = getLength;\nLinearLayoutVector.prototype.setLength = setLength;\nLinearLayoutVector.prototype.getDefaultSize = getDefaultSize;\nLinearLayoutVector.prototype.setDefaultSize = setDefaultSize;\nLinearLayoutVector.prototype.getAxisOffset = getAxisOffset;\nLinearLayoutVector.prototype.setAxisOffset = setAxisOffset;\nLinearLayoutVector.prototype.getGap = getGap;\nLinearLayoutVector.prototype.setGap = setGap;\nLinearLayoutVector.prototype.getItemSize = getItemSize;\nLinearLayoutVector.prototype.setItemSize = setItemSize;\nLinearLayoutVector.prototype.insert = insert;\nLinearLayoutVector.prototype.remove = remove;\nLinearLayoutVector.prototype.start = start;\nLinearLayoutVector.prototype.end = end;\nLinearLayoutVector.prototype.indexOf = indexOf;\nLinearLayoutVector.prototype.clear = clear;\nLinearLayoutVector.prototype.toString = toString;\n\n/**\n * A sparse array of sizes that represent items in a dimension.\n *\n * Provides efficient support for finding the cumulative distance to\n * the start/end of an item along the axis, and similarly for finding the\n * index of the item at a particular distance.\n *\n * Default size is used for items whose size hasn't been specified.\n */\nfunction LinearLayoutVector(block_size) {\n\n    if(block_size === undefined) {\n        block_size = 128;\n    }\n\n    // Assumption: vector elements (sizes) will typically be set in\n    // small ranges that reflect localized scrolling.  Allocate vector\n    // elements in blocks of block_size, which must be a power of 2.\n    // block_shift is the power of 2 and block_mask masks off as many\n    // low order bits.  The block_table contains all of the allocated\n    // blocks and has length/block_size elements which are allocated lazily.\n    var pow = (Math.log(block_size) / Math.log(2)) | 0,\n        size = Math.pow(2, pow),\n        mask = size - 1;\n\n    this.block_size  = size;\n    this.block_shift = pow;\n    this.block_mask  = mask;\n    this.block_table = [];\n\n    this._defaultSize = 0;\n    this._axisOffset = 0;\n    this._gap = 0;\n\n    // Sorted Vector of intervals for the pending removes, in descending order,\n    // for example [7, 5, 3, 1] for the removes at 7, 6, 5, 3, 2, 1\n    this.removes = null;\n    // Sorted Vector of intervals for the pending inserts, in ascending order,\n    // for example [1, 3, 5, 7] for the inserts at 1, 2, 3, 5, 6, 7\n    this.inserts = null;\n\n    this._length = 0;\n    // What the length will be after any pending changes are flushed.\n    this._pendingLength = -1;\n}\n\n/**\n * The number of item size valued elements.\n *\n * @default 0\n */\nfunction getLength() {\n    return this._pendingLength === -1 ? this._length : this._pendingLength;\n}\n\n/**\n * @private\n * Grows or truncates the vector to be the specified newLength.\n * When truncating, releases empty blocks and sets to NaN any values\n * in the last block beyond the newLength.\n */\nfunction setLength(newLength) {\n    flushPendingChanges.call(this);\n\n    if(newLength < this._length) {\n        // Clear any remaining non-NaN values in the last block\n        var blockIndex = newLength >> this.block_shift;\n        var endIndex = Math.min(blockIndex * this.block_size + this.block_size, this._length) - 1;\n        clearInterval.call(this, newLength, endIndex);\n    }\n\n    this._length = newLength;\n\n    // update the table\n    var partialBlock = ((this._length & this.block_mask) === 0) ? 0 : 1;\n    this.block_table.length = (this._length >> this.block_shift) + partialBlock;\n}\n\n//----------------------------------\n//  defaultSize\n//----------------------------------\n\n/**\n * The size of items whose size was not specified with setItemSize.\n *\n * @default 0\n */\nfunction getDefaultSize() {\n    return this._defaultSize;\n}\n\n/**\n * @private\n */\nfunction setDefaultSize(value) {\n    this._defaultSize = value;\n}\n\n//----------------------------------\n//  axisOffset\n//----------------------------------\n\n/**\n * The offset of the first item from the origin in the majorAxis\n * direction. This is useful when implementing padding,\n * in addition to gaps, for virtual layouts.\n *\n * @see #gap\n */\nfunction getAxisOffset() {\n    return this._axisOffset;\n}\n\n/**\n * @private\n */\nfunction setAxisOffset(value) {\n    this._axisOffset = value;\n}\n\n//----------------------------------\n//  gap\n//----------------------------------\n\n/**\n * The distance between items.\n *\n * @default 0\n */\nfunction getGap() {\n    return this._gap;\n}\n\n/**\n * @private\n */\nfunction setGap(value) {\n    this._gap = value;\n}\n\n//--------------------------------------------------------------------------\n//\n//  Methods\n//\n//--------------------------------------------------------------------------\n\n/**\n * Return the size of the item at index.  If no size was ever\n * specified then then the defaultSize is returned.\n *\n * @param index The item's index.\n * @see defaultSize\n */\nfunction getItemSize(index) {\n    flushPendingChanges.call(this);\n\n    var block = this.block_table[index >> this.block_shift];\n    if(block) {\n        var value = block.sizes[index & this.block_mask];\n        return (value !== value) ? this._defaultSize : value;\n    } else {\n        return this._defaultSize;\n    }\n}\n\n/**\n * Set the size of the item at index. If an index is\n * set to <code>NaN</code> then subsequent calls to get\n * will return the defaultSize.\n *\n * @param index The item's index.\n * @param value The item's size.\n * @see defaultSize\n */\nfunction setItemSize(index, value) {\n    flushPendingChanges.call(this);\n\n    if(index >= this.getLength()) {\n        throw new Error(\"Invalid index and all that.\");\n    }\n\n    var blockIndex = index >> this.block_shift;\n    var block = this.block_table[blockIndex];\n    if(!block) {\n        block = this.block_table[blockIndex] = new Block(this.block_size);\n    }\n\n    var sizesIndex = index & this.block_mask;\n    var sizes = block.sizes;\n    var oldValue = sizes[sizesIndex];\n    if(oldValue === value) {\n        return;\n    }\n\n    if(oldValue !== oldValue) {\n        block.defaultCount -= 1;\n        block.sizesSum += value;\n    } else if(value !== value) {\n        block.defaultCount += 1;\n        block.sizesSum -= oldValue;\n    } else {\n        block.sizesSum += value - oldValue;\n    }\n\n    sizes[sizesIndex] = value;\n}\n\n/**\n * Make room for a new item at index by shifting all of the sizes\n * one position to the right, beginning with startIndex.\n *\n * The value at index will be NaN.\n *\n * This is similar to array.splice(index, 0, NaN).\n *\n * @param index The position of the new NaN size item.\n */\nfunction insert(index) {\n    // We don't support interleaved pending inserts and removes\n    if(this.removes) {\n        flushPendingChanges.call(this);\n    }\n\n    if(this.inserts) {\n        // Update the last interval or add a new one?\n        var lastIndex = this.inserts.length - 1;\n        var intervalEnd = this.inserts[lastIndex];\n\n        if(index === intervalEnd + 1) {\n            // Extend the end of the interval\n            this.inserts[lastIndex] = index;\n        } else if(index > intervalEnd) {\n            // New interval\n            this.inserts.push(index);\n            this.inserts.push(index);\n        } else {\n            // We can't support pending inserts that are not ascending\n            flushPendingChanges.call(this);\n        }\n    }\n\n    this._pendingLength = Math.max(this._length, index + 1);\n\n    if(!this.inserts) {\n        this.inserts = [];\n        this.inserts.push(index);\n        this.inserts.push(index);\n    }\n}\n\n/**\n * Remove index by shifting all of the sizes one position to the left,\n * begining with index+1.\n *\n * This is similar to array.splice(index, 1).\n *\n * @param index The position to be removed.\n */\nfunction remove(index) {\n    // We don't support interleaved pending inserts and removes\n    if(this.inserts) {\n        flushPendingChanges.call(this);\n    }\n\n    // length getter takes into account pending inserts/removes but doesn't flush\n    if(index >= this.getLength()) {\n        throw new Error(\"Invalid index and all that.\");\n    }\n\n    if(this.removes) {\n        // Update the last interval or add a new one?\n        var lastIndex = this.removes.length - 1;\n        var intervalStart = this.removes[lastIndex];\n\n        if(index === intervalStart - 1) {\n            // Extend the start of the interval\n            this.removes[lastIndex] = index;\n        } else if(index < intervalStart) {\n            // New interval\n            this.removes.push(index);\n            this.removes.push(index);\n        } else {\n            // We can't support pending removes that are not descending\n            flushPendingChanges.call(this);\n        }\n    }\n\n    this._pendingLength = (this._pendingLength === -1) ? length - 1 : this._pendingLength - 1;\n\n    if(!this.removes) {\n        this.removes = [];\n        this.removes.push(index);\n        this.removes.push(index);\n    }\n}\n\n/**\n * @private\n * Returns true when all sizes in the specified interval for the block are NaN\n */\nfunction isIntervalClear(block, index, count) {\n    var sizes = block.sizes, size;\n    for(count += index; index < count; ++index) {\n        if((size = sizes[index]) === size) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @private\n * Copies elements between blocks. Indices relative to the blocks.\n * If srcBlock is null, then it fills the destination with NaNs.\n * The case of srcBlock === dstBlock is also supported.\n * The caller must ensure that count is within range.\n */\nfunction inBlockCopy(dstBlock, dstIndexStart, srcBlock, srcIndexStart, count) {\n    var ascending = dstIndexStart < srcIndexStart;\n\n    var srcIndex = ascending ? srcIndexStart : srcIndexStart + count - 1;\n    var dstIndex = ascending ? dstIndexStart : dstIndexStart + count - 1;\n    var increment = ascending ? +1 : -1;\n\n    var dstSizes = dstBlock.sizes;\n    var srcSizes = srcBlock ? srcBlock.sizes : null;\n    var dstValue = NaN;\n    var srcValue = NaN;\n    var sizesSumDelta = 0; // How much the destination sizesSum will change\n    var defaultCountDelta = 0; // How much the destination defaultCount will change\n\n    while(count > 0) {\n        if(srcSizes) {\n            srcValue = srcSizes[srcIndex];\n        }\n\n        dstValue = dstSizes[dstIndex];\n\n        // Are the values different?\n        if(srcValue !== dstValue) { // Triple '=' to handle NaN comparison\n\n            // Are we removing a default size or a chached size?\n            if(dstValue !== dstValue) {\n                defaultCountDelta--;\n            } else {\n                sizesSumDelta -= dstValue;\n            }\n\n            // Are we adding a default size or a cached size?\n            if(srcValue !== srcValue) {\n                defaultCountDelta++;\n            } else {\n                sizesSumDelta += srcValue;\n            }\n\n            dstSizes[dstIndex] = srcValue;\n        }\n\n        srcIndex += increment;\n        dstIndex += increment;\n        count--;\n    }\n\n    dstBlock.sizesSum += sizesSumDelta;\n    dstBlock.defaultCount += defaultCountDelta;\n}\n\n/**\n * @private\n * Copies 'count' elements from dstIndex to srcIndex.\n * Safe for overlapping source and destination intervals.\n * If any blocks are left full of NaNs, they will be deallcated.\n */\nfunction copyInterval(dstIndex, srcIndex, count) {\n    var ascending = dstIndex < srcIndex;\n    if(!ascending) {\n        dstIndex += count - 1;\n        srcIndex += count - 1;\n    }\n\n    while(count > 0) {\n        // Figure out destination block\n        var dstBlockIndex = dstIndex >> this.block_shift;\n        var dstSizesIndex = dstIndex & this.block_mask;\n        var dstBlock = this.block_table[dstBlockIndex];\n\n        // Figure out source block\n        var srcBlockIndex = srcIndex >> this.block_shift;\n        var srcSizesIndex = srcIndex & this.block_mask;\n        var srcBlock = this.block_table[srcBlockIndex];\n\n        // Figure out number of elements to copy\n        var copyCount = ascending ?\n            Math.min(this.block_size - dstSizesIndex, this.block_size - srcSizesIndex) :\n            1 + Math.min(dstSizesIndex, srcSizesIndex);\n\n        copyCount = Math.min(copyCount, count);\n\n        // Figure out the start index for each block\n        var dstStartIndex = ascending ? dstSizesIndex : dstSizesIndex - copyCount + 1;\n        var srcStartIndex = ascending ? srcSizesIndex : srcSizesIndex - copyCount + 1;\n\n        // Check whether a destination block needs to be allocated.\n        // Allocate only if there are non-default values to be copied from the source.\n        if(srcBlock && !dstBlock && isIntervalClear(srcBlock, srcStartIndex, copyCount)) {\n            dstBlock = new Block(this.block_size);\n            this.block_table[dstBlockIndex] = dstBlock;\n        }\n\n        // Copy to non-null dstBlock, srcBlock can be null\n        if(dstBlock) {\n            inBlockCopy(dstBlock, dstStartIndex, srcBlock, srcStartIndex, copyCount);\n\n            // If this is the last time we're visiting this block, and it contains\n            // only NaNs, then remove it\n            if(dstBlock.defaultCount === this.block_size) {\n                var blockEndReached = ascending ?\n                    (dstStartIndex + copyCount === this.block_size) :\n                    (dstStartIndex === 0);\n                if(blockEndReached || count === copyCount)\n                    this.block_table[dstBlockIndex] = null;\n            }\n        }\n\n        dstIndex += ascending ? copyCount : -copyCount;\n        srcIndex += ascending ? copyCount : -copyCount;\n        count -= copyCount;\n    }\n}\n\n/**\n * @private\n * Sets all elements within the specified interval to NaN (both ends inclusive).\n * Releases empty blocks.\n */\nfunction clearInterval(start, end) {\n    while(start <= end) {\n        // Figure our destination block\n        var blockIndex = start >> this.block_shift;\n        var sizesIndex = start & this.block_mask;\n        var block = this.block_table[blockIndex];\n\n        // Figure out number of elements to clear in this iteration\n        // Make sure we don't clear more items than requested\n        var clearCount = this.block_size - sizesIndex;\n        clearCount = Math.min(clearCount, end - start + 1);\n\n        if(block) {\n            if(clearCount === this.block_size) {\n                this.block_table[blockIndex] = null;\n            } else {\n                // Copying from null source block is equivalent of clearing the destination block\n                inBlockCopy(block, sizesIndex, null /*srcBlock*/, 0, clearCount);\n\n                // If the blockDst contains only default sizes, then remove the block\n                if(block.defaultCount === this.block_size) {\n                    this.block_table[blockIndex] = null;\n                }\n            }\n        }\n\n        start += clearCount;\n    }\n}\n\n/**\n * @private\n * Removes the elements designated by the intervals and truncates\n * the LinearLayoutVector to the new length.\n * 'intervals' is a Vector of descending intervals [7, 5, 3, 1]\n */\nfunction removeIntervals(intervals) {\n    var intervalsCount = intervals.length;\n    if(intervalsCount === 0) {\n        return;\n    }\n\n    // Adding final nextIntervalStart value (see below).\n    intervals.reverse(); // turn into ascending, for example [7, 5, 3, 1] --> [1, 3, 5, 7]\n    intervals.push(this.getLength());\n\n    // Move the elements\n    var dstStart = intervals[0];\n    var srcStart;\n    var count;\n    var i = 0;\n    do {\n        var intervalEnd = intervals[i + 1];\n        var nextIntervalStart = intervals[i + 2]\n        i += 2;\n\n        // Start copy from after the end of current interval\n        srcStart = intervalEnd + 1;\n\n        // copy all elements up to the start of the next interval.\n        count = nextIntervalStart - srcStart;\n\n        copyInterval.call(this, dstStart, srcStart, count);\n        dstStart += count;\n    } while(i < intervalsCount)\n\n    // Truncate the excess elements.\n    this.setLength(dstStart);\n}\n\n/**\n * @private\n * Increases the length and inserts NaN values for the elements designated by the intervals.\n * 'intervals' is a Vector of ascending intervals [1, 3, 5, 7]\n */\nfunction insertIntervals(intervals, newLength) {\n    var intervalsCount = intervals.length;\n    if(intervalsCount === 0) {\n        return;\n    }\n\n    // Allocate enough space for the insertions, all the elements\n    // allocated are NaN by default.\n    var oldLength = this.getLength();\n    this.setLength(newLength);\n\n    var srcEnd = oldLength - 1;\n    var dstEnd = newLength - 1;\n    var i = intervalsCount - 2;\n    while(i >= 0) {\n        // Find current interval\n        var intervalStart = intervals[i];\n        var intervalEnd = intervals[i + 1];\n        i -= 2;\n\n        // Start after the current interval\n        var dstStart = intervalEnd + 1;\n        var copyCount = dstEnd - dstStart + 1;\n        var srcStart = srcEnd - copyCount + 1;\n\n        copyInterval.call(this, dstStart, srcStart, copyCount);\n        dstStart -= copyCount;\n        dstEnd = intervalStart - 1;\n\n        // Fill in with default NaN values after the copy\n        clearInterval.call(this, intervalStart, intervalEnd);\n    }\n}\n\n/**\n * @private\n * Processes any pending removes or pending inserts.\n */\nfunction flushPendingChanges() {\n    var intervals;\n    if(this.removes) {\n        intervals = this.removes;\n        this.removes = null;\n        this._pendingLength = -1;\n        removeIntervals.call(this, intervals);\n    } else if(this.inserts) {\n        intervals = this.inserts;\n        var newLength = this._pendingLength;\n        this.inserts = null;\n        this._pendingLength = -1;\n        insertIntervals.call(this, intervals, newLength);\n    }\n}\n\n/**\n * The cumulative distance to the start of the item at index, including\n * the gaps between items and the axisOffset.\n *\n * The value of start(0) is axisOffset.\n *\n * Equivalent to:\n * <pre>\n * var distance = this.getAxisOffset();\n * for (var i = 0; i &lt; index; i++)\n *     distance += get(i);\n * return distance + (gap * index);\n * </pre>\n *\n * The actual implementation is relatively efficient.\n *\n * @param index The item's index.\n * @see #end\n */\nfunction start(index) {\n\n    flushPendingChanges.call(this);\n\n    if((this._length === 0) || (index === 0)) {\n        return this.getAxisOffset();\n    }\n\n    if(index >= this._length) {\n        throw new Error(\"Invalid index and all that.\");\n    }\n\n    var distance = this.getAxisOffset();\n    var blockIndex = index >> this.block_shift;\n    for(var i = 0; i < blockIndex; i++)\n    {\n        var block = this.block_table[i];\n        distance += block ?\n            block.sizesSum + (block.defaultCount * this._defaultSize) :\n            this.block_size * this._defaultSize;\n    }\n    var lastBlock = this.block_table[blockIndex];\n    var lastBlockOffset = index & ~this.block_mask;\n    var lastBlockLength = index - lastBlockOffset;\n    if(lastBlock) {\n        var sizes = lastBlock.sizes;\n        for(i = 0; i < lastBlockLength; i++) {\n            var size = sizes[i];\n            distance += (size !== size) ? this._defaultSize : size;\n        }\n    } else {\n        distance += this._defaultSize * lastBlockLength;\n    }\n    distance += index * this.getGap();\n    return distance;\n}\n\n/**\n * The cumulative distance to the end of the item at index, including\n * the gaps between items.\n *\n * If <code>index &lt;(length-1)</code> then the value of this\n * function is defined as:\n * <code>start(index) + get(index)</code>.\n *\n * @param index The item's index.\n * @see #start\n */\nfunction end(index) {\n    flushPendingChanges.call(this);\n    return this.start(index) + this.getItemSize(index);\n}\n\n/**\n * Returns the index of the item that overlaps the specified distance.\n *\n * The item at index <code>i</code> overlaps a distance value\n * if <code>start(i) &lt;= distance &lt; end(i)</code>.\n *\n * If no such item exists, -1 is returned.\n */\nfunction indexOf(distance) {\n    flushPendingChanges.call(this);\n    var index = indexOfInternal.call(this, distance);\n    return (index >= this._length) ? -1 : index;\n}\n\nfunction indexOfInternal(distance) {\n\n    if((this._length === 0) || (distance < 0)) {\n        return -1;\n    }\n\n    // The area of the first item includes the axisOffset\n    var curDistance = this.getAxisOffset();\n\n    if(distance < curDistance) {\n        return 0;\n    }\n\n    var index = -1,\n        block = null,\n        blockSize = this.block_size,\n        defaultSize = this._defaultSize,\n        gap = this.getGap(),\n        blockGap = gap * blockSize;\n\n    // Find the block that contains distance and the index of its\n    // first element\n    var blockIndex = -1,\n        blockTable = this.block_table,\n        blockTableLength = blockTable.length;\n\n    for(; ++blockIndex < blockTableLength;) {\n        block = blockTable[blockIndex];\n        var blockDistance = blockGap + (\n            block ?\n                block.sizesSum + (block.defaultCount * defaultSize) :\n                blockSize * defaultSize\n        );\n\n        if((distance === curDistance) || ((distance >= curDistance) && (distance < (curDistance + blockDistance)))) {\n            index = blockIndex << this.block_shift;\n            break;\n        }\n        curDistance += blockDistance;\n    }\n\n    if((index === -1) || (distance === curDistance)) {\n        return index;\n    }\n\n    // At this point index corresponds to the first item in this block\n    if(block) {\n        // Find the item that contains distance and return its index\n        var sizes = block.sizes,\n            n = this.block_size - 1;\n        for(var i = 0; i < n; i++) {\n            var size = sizes[i];\n            curDistance += gap + (size !== size ? this._defaultSize : size);\n            if(curDistance > distance) {\n                return index + i;\n            }\n        }\n        // TBD special-case for the very last index\n        return index + this.block_size - 1;\n    } else {\n        return index + Math.floor(Number(distance - curDistance) / Number(this._defaultSize + gap));\n    }\n}\n\n/**\n * Clear all cached state, reset length to zero.\n */\nfunction clear() {\n    // Discard any pending changes, before setting the length\n    // otherwise the length setter will commit the changes.\n    this.removes = null;\n    this.inserts = null;\n    this._pendingLength = -1;\n\n    this.setLength(0); // clears the this.block_table as well\n}\n\nfunction toString() {\n    return \"LinearLayoutVector { \" +\n        \"length: \" + this._length + \", \" +\n        \"size: \" + this.end(this.getLength() -1) + \", \" +\n        \"[blocks: \" + this.block_table.length + \"]\" + \", \" +\n        \"gap: \" + this._gap + \", \" +\n        \"defaultSize: \" + this._defaultSize + \", \" +\n        \"pendingRemoves: \" + (this.removes ? this.removes.length : 0) + \", \" +\n        \"pendingInserts: \" + (this.inserts ? this.inserts.length : 0) +\n        \" }\";\n}\n\n/**\n * @private\n * A LinearLayoutVector block of layout element heights or widths.\n *\n * Total \"distance\" for a Block is: sizesSum + (defaultCount * distanceVector.default).\n */\nfunction Block(block_size) {\n\n    this.sizes = new Array(block_size);\n    this.sizesSum = 0;\n    this.defaultCount = block_size;\n\n    for(var i = -1; ++i < block_size;) {\n        this.sizes[i] = NaN;\n    }\n}\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-descriptor\"), __esModule: true };","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);"],"sourceRoot":""}