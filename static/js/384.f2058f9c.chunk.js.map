{"version":3,"sources":["helpers/form.ts","hooks/useAccessGuard.ts","atoms/SelectControl.tsx","components/filters/BranchesFilter.tsx","atoms/ScrollArea.tsx","molecules/PageLayoutFullHeightItem.tsx","hooks/useUserModel.ts","hooks/useDropdownFilter.ts","atoms/Printer.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","hooks/useOnConnectionRestored.ts","components/forms/FormSubmitButton.tsx","hooks/useDropdownMulti.ts","components/filters/SectorsFilter.tsx","../node_modules/@material-ui/icons/esm/ErrorOutline.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","segments/customerscreen/hooks/useCustomerScreenDeck.ts","segments/customerscreen/organisms/CustomerScreenLoader.tsx","segments/customerscreen/molecules/CustomerNumber.tsx","segments/customerscreen/molecules/CustomerNumbers.tsx","segments/customerscreen/molecules/MarqueeNumberStack.tsx","segments/customerscreen/molecules/StyledCustomerShelfHeadline.tsx","segments/customerscreen/organisms/CustomerScreenShelf.tsx","segments/customerscreen/hooks/useCustomerScreenOrders.ts","segments/customerscreen/pages/CustomerScreenPage.tsx","../node_modules/@material-ui/system/esm/merge.js","../node_modules/@material-ui/system/esm/css.js","../node_modules/@material-ui/system/esm/compose.js","../node_modules/@material-ui/system/esm/breakpoints.js","../node_modules/@material-ui/system/esm/style.js","../node_modules/@material-ui/system/esm/borders.js","../node_modules/@material-ui/system/esm/display.js","../node_modules/@material-ui/system/esm/flexbox.js","../node_modules/@material-ui/system/esm/positions.js","../node_modules/@material-ui/system/esm/palette.js","../node_modules/@material-ui/system/esm/shadows.js","../node_modules/@material-ui/system/esm/sizing.js","../node_modules/@material-ui/system/esm/spacing.js","../node_modules/@material-ui/system/esm/memoize.js","../node_modules/@material-ui/system/esm/typography.js","../node_modules/@material-ui/core/esm/Box/Box.js","segments/customerscreen/organisms/CustomerScreenSetupForm.tsx","segments/customerscreen/pages/CustomerScreenSetupPage.tsx","segments/customerscreen/routes/CustomerScreenRouting.tsx"],"names":["isFormValid","formState","errors","Object","keys","length","fieldIsRequiredMsg","fieldDescription","fieldIsPositiveNumberMsg","validateAsNumberField","yup","number","default","transform","_","origValue","parseNumber","test","fieldIsNumberMsg","value","isNaN","ARRAY_EMPTY","useAccessGuard","queries","mutations","user","useRoot","every","canQuery","canMutate","useCanQuery","useCanMutate","getControlStyles","width","minWidth","colors","invalid","border","Colors","red","backgroundColor","errorBackground","greyMiddle","margin","Spacing","MarginAroundFormComponents","undefined","composeSelectControlStyles","outerStyles","control","base","state","controlStyles","selectProps","menu","menuStyles","zIndex","color","black","valueContainer","maxHeight","valueContainerStyles","overflowY","clearIndicator","cursor","SelectControl","hideOnSingleOption","clearLabel","props","options","toPrint","formatWith","getOptionLabel","formatOptionLabel","valueText","Array","isArray","map","placeholder","getPrintContent","components","ClearIndicator","buildClearIndicator","styles","getStyles","innerProps","ref","restInnerProps","style","padding","useBranchesFilterEditable","createStatePersistence","BranchesFilter","React","memo","userModel","useUserModel","branches","setBranches","formatBranchName","getOptionValue","idProp","dropdownProps","useDropdownMulti","onSelectionChange","selected","filterProps","useDropdownFilter","getOptionFilter","useBranchesFilter","withUserBranchesWhenEmpty","persistedBranches","setPersistedBranches","persistenceKey","join","selectedBranches","useMemo","RM","intersection","branchesId","hasPersistedBranches","hasAccessToAllPersistedBranches","useEffect","noBranchSelected","key","ScrollArea","styled","div","StyledPageLayoutFullHeightItem","mediaDesktop","widthInColumns","LayoutGridCellMargin","column","row","mediaMobile","rowInMobile","forcePercentHeightInMobile","PageHeaderHeight","DefaultSizeUnit","PageLayoutFullHeightItem","children","withScrollArea","scrollAreaId","forceHeightInMobile","isMobile","useResponsive","id","Sizer","height","heightUnit","isSearchable","filterOption","useCallback","option","rawInput","data","toLocaleLowerCase","includes","StyledPrinter","Printer","className","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports","useOnConnectionRestored","cb","useDisposable","whenGoingOnline","FormSubmitButton","useXFormState","useObserver","type","green","disabled","isSubmitting","icon","isValid","ErrorOutline","iconSize","iconColor","cn","heartBeat","filter","onChange","isMulti","DropdownTreeSelectMemo","texts","SectorsFilter","markAsAvailable","hasSingleBranch","sectors","getStash","useQFilterSectors","hasAnySectors","treeData","getTreeFromFlatData","flatData","mapper","node","label","name","getParentKey","parent","getKey","buildForSingleBranch","sectorsPerBranch","groupBy","sector","companyBranch","branch","isSector","branchKey","buildWithBranches","field","useXField","currentNode","selectedNodes","selectedSectorsId","reduce","acc","startsWith","isBranchNode","branchNode","find","idPropEq","push","setValue","noMatches","branchId","childrenToParents","forEach","child","parentKey","trav","Reflect","has","createSvgIcon","createElement","d","_arrayWithHoles","arr","_nonIterableRest","TypeError","_slicedToArray","i","arrayWithHoles","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","_s","_i","next","done","err","nonIterableRest","PREPARING_STATES","OrderStateCategoryEnum","NewOrders","Preparing","READY_STATES","ReadyToDeliver","REQUIRED_STATES","useCustomerScreenDeck","skip","variables","useQCustomerScreenOrderList","categories","updateQuery","refetch","useSCustomerScreenOrderList","concat","Finished","onSubscriptionData","dataUpdate","subscriptionData","prev","update","order","updatedOrder","orders","orderStateCategory","orderExists","prevOrder","unshift","handleSubscriptionUpdate","loaderContext","createContext","CustomerScreenLoader","observer","useRouterContext","history","location","filters","filtersPassed","branchesSelected","deck","replace","ROUTE_CUSTOMER_SCREEN_SETUP","Provider","readyInit","keyframes","StyledCustomerNumber","white","CustomerNumber","customerNumber","orderState","StyledCustomerNumbers","CustomerNumbers","customerNumbers","marquee","StyledMarqueeNumberStack","MarqueeNumberStack","hasSomeNumbers","Fragment","StyledCustomerShelfHeadline","h1","textColor","StyledCustomerScreenShelf","section","CustomerScreenShelf","sortByChange","maxRecent","Infinity","headline","headlineColor","useContext","byChange","ascend","descend","sortOrders","sortWith","prop","latestChange","orderNumber","orderToCustomerNumber","recentNumbers","slice","olderNumbers","showMarquee","orderToCustomerStateMapping","orderTiming","max","CustomerScreenPage","PageLayoutGrid","isForIconDashboard","i18n","merge","item","deepmerge","clone","css","styleFunction","newStyleFunction","output","_extends","theme","input","fields","indexOf","omit","propTypes","_toConsumableArray","compose","_len","arguments","_key","fn","values","xs","sm","md","lg","xl","defaultBreakpoints","up","handleBreakpoints","propValue","styleFromPropValue","themeBreakpoints","breakpoints","index","_typeof","_themeBreakpoints","breakpoint","getPath","obj","path","split","_options$cssProperty","cssProperty","themeKey","themeMapping","propValueFinal","_defineProperty","getBorder","borders","display","flexbox","palette","boxShadow","maxWidth","minHeight","sizing","properties","m","p","directions","t","r","b","l","x","y","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","cache","arg","memoize","_prop$split","_prop$split2","a","property","direction","dir","spacingKeys","getStyleFromPropValue","cssProperties","transformer","transformed","Math","abs","getValue","spacing","themeSpacing","getTransformer","typography","positions","shadows","Box","CustomerScreenSetupForm","onFilterSubmit","toJS","ROUTE_CUSTOMER_SCREEN","initialValues","onSubmit","CustomerScreenSetupPage","PageLayoutResponsive","pageTitle","PageLayoutGridItem","gridColumn","gridRow","Card","CustomerScreenRouting","SecureRoute","exact","component","NotFoundPage"],"mappings":"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","file":"static/js/384.f2058f9c.chunk.js","sourcesContent":["import { yup } from '@speedlo/xform'\nimport { IFormState } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { parseNumber } from './numeral'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function fieldIsRequiredMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} cannot be empty`\n}\n\nexport function fieldIsNumberMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} must be a number`\n}\n\nexport function fieldIsPositiveNumberMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} must be a positive number`\n}\n\nexport const validateAsNumberField = (fieldDescription: string) =>\n  yup\n    .number()\n    .default(0)\n    .transform((_, origValue) => parseNumber(origValue))\n    .test(\n      'number-field',\n      fieldIsNumberMsg(fieldDescription),\n      value => !isNaN(value),\n    )\n\nexport const ARRAY_EMPTY: RoA<any> = []\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import React from 'react'\nimport Select, { IndicatorProps } from 'react-select'\nimport { Props } from 'react-select/src/Select'\nimport { StylesConfig } from 'react-select/src/styles'\n\nimport { i18n } from '../i18n'\nimport { Colors, Spacing } from '../styling'\nimport { Printer } from './Printer'\n\nexport type TSelectControlProps<OptionType> = NoChildren &\n  Props<OptionType> & {\n    width?: number\n    minWidth?: number\n    maxHeight?: number\n    invalid?: boolean\n    hideOnSingleOption?: boolean\n    clearLabel?: string\n  }\n\ntype TStyledProps = TSelectControlProps<unknown> & {\n  printing: boolean\n}\n\nfunction getControlStyles({ width, minWidth, invalid }: TStyledProps) {\n  const colors =\n    invalid === true\n      ? {\n          border: `1px solid ${Colors.red}`,\n          backgroundColor: Colors.errorBackground,\n        }\n      : {\n          border: `1px solid ${Colors.greyMiddle}`,\n        }\n  return {\n    ...colors,\n    margin: Spacing.MarginAroundFormComponents,\n    width: width !== undefined ? `${width}rem` : '100%',\n    minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n  }\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const controlStyles = { ...base, ...getControlStyles(state.selectProps) }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n  clearIndicator: base => ({\n    ...base,\n    cursor: 'pointer',\n  }),\n})\n\nexport function SelectControl<OptionType>({\n  hideOnSingleOption = false,\n  clearLabel,\n  ...props\n}: TSelectControlProps<OptionType>) {\n  const getPrintContent = () => {\n    if (!props.value) {\n      return null\n    }\n    const formatWith: any = props.getOptionLabel || props.formatOptionLabel\n    if (!formatWith) {\n      return null\n    }\n    const valueText = Array.isArray(props.value)\n      ? props.value.map(formatWith)\n      : formatWith(props.value as OptionType)\n    return valueText.length === 0 ? null : (\n      <div>{`${props.placeholder}: ${valueText}`}</div>\n    )\n  }\n\n  if (hideOnSingleOption && props.options && props.options.length <= 1) {\n    return null\n  }\n\n  return (\n    <Printer toPrint={getPrintContent()}>\n      <Select<OptionType>\n        {...props}\n        components={{\n          ClearIndicator: buildClearIndicator(clearLabel),\n          ...props.components,\n        }}\n        styles={composeSelectControlStyles(props.styles)}\n      />\n    </Printer>\n  )\n}\n\nfunction buildClearIndicator(clearLabel = i18n.t`All`) {\n  return (props: IndicatorProps<any>) => {\n    const {\n      getStyles,\n      innerProps: { ref, ...restInnerProps },\n    } = props\n\n    return (\n      <div\n        {...restInnerProps}\n        ref={ref}\n        style={getStyles('clearIndicator', props)}\n      >\n        <div style={{ padding: '0px 5px' }}>{clearLabel}</div>\n      </div>\n    )\n  }\n}\n","import { createStatePersistence } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { SelectControl } from '../../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../../graph/generated'\nimport { formatBranchName } from '../../helpers/formats'\nimport { useDropdownFilter } from '../../hooks/useDropdownFilter'\nimport { useDropdownMulti } from '../../hooks/useDropdownMulti'\nimport { useUserModel } from '../../hooks/useUserModel'\nimport { i18n } from '../../i18n'\nimport { idProp, RM } from '../../tools/ramda'\n\nexport const useBranchesFilterEditable = createStatePersistence<RoA<ID>>(\n  'branches',\n  [],\n)\n\nexport const BranchesFilter = React.memo<NoChildren>(() => {\n  const userModel = useUserModel()\n  const [branches, setBranches] = useBranchesFilterEditable()\n\n  const selectProps = {\n    options: userModel.branches,\n    placeholder: i18n.t`Filter branches...`,\n    formatOptionLabel: formatBranchName,\n    getOptionValue: idProp,\n    hideOnSingleOption: true,\n  }\n\n  const dropdownProps = useDropdownMulti<FCompanyBranchFragment>({\n    ...selectProps,\n    onSelectionChange: setBranches,\n    selected: branches,\n  })\n\n  const filterProps = useDropdownFilter<FCompanyBranchFragment>({\n    getOptionFilter: formatBranchName,\n  })\n\n  return (\n    <SelectControl<FCompanyBranchFragment>\n      {...dropdownProps}\n      {...filterProps}\n      {...selectProps}\n    />\n  )\n})\n\n/**\n * Access to currently persisted list of branches for filtering purposes.\n *\n * By default it will use all user branches if none are currently set.\n * This behavior can be disabled with argument.\n *\n * @param withUserBranchesWhenEmpty\n */\nexport function useBranchesFilter(withUserBranchesWhenEmpty = true): ID[] {\n  const userModel = useUserModel()\n  const [persistedBranches, setPersistedBranches] = useBranchesFilterEditable()\n  const persistenceKey = persistedBranches.join('|')\n\n  let selectedBranches = React.useMemo(() => {\n    return RM.intersection(userModel.branchesId, persistedBranches)\n    // persistedBranches reference changes every time -> use persistenceKey to decide whether the persistence truly changed\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [persistenceKey, userModel.branchesId])\n\n  const hasPersistedBranches = persistedBranches.length > 0\n  const hasAccessToAllPersistedBranches =\n    persistedBranches.length === selectedBranches.length\n\n  React.useEffect(() => {\n    if (hasPersistedBranches && !hasAccessToAllPersistedBranches) {\n      setPersistedBranches(selectedBranches)\n    }\n  }, [\n    hasAccessToAllPersistedBranches,\n    hasPersistedBranches,\n    selectedBranches,\n    setPersistedBranches,\n  ])\n\n  const noBranchSelected = selectedBranches.length === 0\n  const userHasOnlyOneBranch = userModel.branchesId.length === 1\n\n  if (userHasOnlyOneBranch || (noBranchSelected && withUserBranchesWhenEmpty)) {\n    selectedBranches = userModel.branchesId\n  }\n\n  const key = selectedBranches.join('|')\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useMemo(() => selectedBranches, [key])\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile, useResponsive } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => {\n  const { isMobile } = useResponsive()\n\n  return (\n    <StyledPageLayoutFullHeightItem\n      column={column}\n      row={row}\n      rowInMobile={rowInMobile}\n      widthInColumns={widthInColumns}\n      withScrollArea={withScrollArea}\n      forcePercentHeightInMobile={forceHeightInMobile}\n    >\n      {withScrollArea && !isMobile ? (\n        <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n      ) : (\n        <Sizer height={100} heightUnit=\"%\">\n          {children}\n        </Sizer>\n      )}\n    </StyledPageLayoutFullHeightItem>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useUserModel() {\n  const { user } = useRoot()\n  return user\n}\n","import React from 'react'\n\ntype TOptions<TSelectOption> = {\n  getOptionFilter?(option: TSelectOption): string\n}\n\nexport function useDropdownFilter<TSelectOption>({\n  getOptionFilter,\n}: TOptions<TSelectOption>) {\n  const isSearchable = typeof getOptionFilter === 'function'\n\n  const filterOption = React.useCallback(\n    (option, rawInput) => {\n      if (!getOptionFilter || rawInput.length === 0) {\n        return true\n      }\n      return getOptionFilter(option.data)\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    },\n    [getOptionFilter],\n  )\n\n  return { filterOption, isSearchable }\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype TProps = SomeChildren & {\n  toPrint: ReactNodes\n}\n\nconst StyledPrinter = styled.div`\n  & .toPrint {\n    display: none;\n  }\n  @media print {\n    & .toPrint {\n      display: inline-block;\n    }\n    & .noPrint {\n      display: none;\n    }\n  }\n`\n\nexport const Printer: React.FC<TProps> = props => {\n  return (\n    <StyledPrinter>\n      <div className=\"toPrint\">{props.toPrint}</div>\n      <div className=\"noPrint\">{props.children}</div>\n    </StyledPrinter>\n  )\n}\n","var map = {\n\t\"./af.svg\": 1414,\n\t\"./cs.svg\": 1415,\n\t\"./de.svg\": 1416,\n\t\"./en.svg\": 1417,\n\t\"./es.svg\": 1418,\n\t\"./fr.svg\": 1419,\n\t\"./nl.svg\": 1420,\n\t\"./pl.svg\": 1421,\n\t\"./ru.svg\": 1422,\n\t\"./sk.svg\": 1423,\n\t\"./zu.svg\": 1424\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1413;","var map = {\n\t\"./logo-doveze.svg\": 1426,\n\t\"./logo-gopay.svg\": 1427,\n\t\"./logo-mastercard.svg\": 1428,\n\t\"./logo-visa.svg\": 1429\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1425;","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import { ErrorOutline } from '@material-ui/icons'\nimport { cn } from '@speedlo/ui'\nimport { useXFormState } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../../molecules/TouchButton'\nimport { Colors } from '../../styling'\n\ninterface IProps extends ITouchButtonProps {\n  children: ReactNode | ReactNode[] | string\n}\n\nexport const FormSubmitButton: React.FC<IProps> = ({\n  children,\n  id = 'form-submit',\n  ...props\n}) => {\n  const state = useXFormState()\n  return useObserver(() => (\n    <TouchButton\n      id={id}\n      type=\"submit\"\n      color={Colors.green}\n      disabled={state.isSubmitting}\n      icon={!state.isValid ? ErrorOutline : undefined}\n      iconSize={1.1}\n      iconColor={Colors.red}\n      {...props}\n      className={cn(props.className, 'animated', 'infinite', {\n        heartBeat: state.isSubmitting,\n      })}\n    >\n      <>{children}</>\n    </TouchButton>\n  ))\n}\n","import React from 'react'\n\nimport { ARRAY_EMPTY } from '../helpers/form'\n\ntype TOptions<TSelectOption> = {\n  options: RoA<TSelectOption> | null\n  selected: RoA<ID>\n  onSelectionChange: (selected: RoA<ID>) => void\n  getOptionValue(option: TSelectOption): string\n}\n\nexport function useDropdownMulti<TSelectOption>({\n  options,\n  selected,\n  onSelectionChange,\n  getOptionValue,\n}: TOptions<TSelectOption>) {\n  const value = React.useMemo(() => {\n    if (!Array.isArray(selected)) {\n      return null\n    }\n    return options === null\n      ? ARRAY_EMPTY\n      : options.filter(option => selected.includes(getOptionValue(option)))\n  }, [selected, options, getOptionValue])\n\n  const onChange = (option: unknown) => {\n    onSelectionChange(\n      option ? (option as TSelectOption[]).map(getOptionValue) : ARRAY_EMPTY,\n    )\n  }\n\n  return { value, onChange, isMulti: true }\n}\n","import './SectorsFilter.css'\n\nimport { useXField } from '@speedlo/xform'\nimport React from 'react'\nimport DropdownTreeSelect, {\n  DropdownTreeSelectProps,\n  TreeNode,\n} from 'react-dropdown-tree-select'\n\nimport {\n  FCompanyBranchFragment,\n  QFilterSectorsSectors,\n  useQFilterSectors,\n} from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/form'\nimport { useUserModel } from '../../hooks/useUserModel'\nimport { i18n } from '../../i18n'\nimport { idProp, idPropEq, RM } from '../../tools/ramda'\nimport { useBranchesFilter } from './BranchesFilter'\n\nconst DropdownTreeSelectMemo = React.memo<DropdownTreeSelectProps & NoChildren>(\n  ({ texts, data, onChange }) => {\n    // this wrapper is necessary because of the silly implementation of the component\n    // which basically resets the state on each render\n    return <DropdownTreeSelect texts={texts} data={data} onChange={onChange} />\n  },\n)\n\ntype TProps = NoChildren & {\n  markAsAvailable?(isAvailable: boolean): void\n}\n\ntype TSector = QFilterSectorsSectors\ntype TBranch = FCompanyBranchFragment\n\nexport const SectorsFilter = React.memo<TProps>(({ markAsAvailable }) => {\n  const userModel = useUserModel()\n  const branches = useBranchesFilter()\n  const hasSingleBranch = branches.length === 1\n\n  const { getStash } = useQFilterSectors({\n    branches,\n  })\n  const sectors = getStash(data => data.sectors)\n  const hasAnySectors = sectors !== null && sectors.length > 0\n\n  const treeData = React.useMemo(() => {\n    if (sectors === null) {\n      return null\n    }\n    if (hasSingleBranch) {\n      return buildForSingleBranch(sectors)\n    }\n    return buildWithBranches(\n      sectors,\n      userModel.branches.filter(branch => branches.includes(branch.id)),\n    )\n  }, [branches, hasSingleBranch, sectors, userModel])\n\n  const field = useXField<RoA<ID>>('sectors')\n\n  React.useEffect(() => {\n    if (markAsAvailable) {\n      markAsAvailable(hasAnySectors)\n    }\n  }, [hasAnySectors, markAsAvailable])\n\n  const onChange = React.useCallback(\n    (currentNode: TreeNode, selectedNodes: TreeNode[]) => {\n      const selectedSectorsId = selectedNodes.reduce(\n        (acc, node) => {\n          if (isBranchNode(node)) {\n            // with branch selected, its root sectors needs to be used\n            // in the filter instead\n            const branchNode = treeData!.find(idPropEq(node.value))\n            if (branchNode && branchNode.children) {\n              acc.push(...(branchNode.children as RoA<TSector>).map(idProp))\n            }\n          } else {\n            acc.push(node.value)\n          }\n          return acc\n        },\n        [] as ID[],\n      )\n      field.setValue(selectedSectorsId)\n    },\n    [field, treeData],\n  )\n\n  const texts = React.useMemo(\n    () => ({\n      placeholder: i18n.t`Filter by sectors`,\n      noMatches: i18n.t`No sectors`,\n    }),\n    [],\n  )\n\n  if (!hasAnySectors) {\n    return null\n  }\n\n  return (\n    <DropdownTreeSelectMemo\n      texts={texts}\n      data={treeData!}\n      onChange={onChange}\n    />\n  )\n})\n\nfunction buildForSingleBranch(sectors: RoA<TSector>) {\n  return getTreeFromFlatData({\n    flatData: sectors,\n    mapper: node => ({\n      label: node.name,\n      value: node.id,\n    }),\n    getParentKey(node) {\n      return node.parent ? node.parent.id : null\n    },\n    getKey(node) {\n      return node.id\n    },\n  })\n}\n\nconst branchKey = (branchId: ID) => `branch-${branchId}`\nfunction isBranchNode(node: TreeNode) {\n  return node.value.startsWith('branch')\n}\n\nfunction buildWithBranches(sectors: RoA<TSector>, branches: RoA<TBranch>) {\n  const sectorsPerBranch = RM.groupBy(\n    sector => sector.companyBranch.id,\n    sectors,\n  )\n\n  const flatData = [\n    ...sectors,\n    ...branches.filter(branch => {\n      return (\n        sectorsPerBranch[branch.id] && sectorsPerBranch[branch.id].length > 0\n      )\n    }),\n  ]\n\n  return getTreeFromFlatData({\n    flatData,\n    mapper: (node: TSector | TBranch) => ({\n      label: node.name,\n      id: isSector(node) ? node.id : branchKey(node.id),\n      value: isSector(node) ? node.id : branchKey(node.id),\n    }),\n    getParentKey(node) {\n      if (isSector(node)) {\n        if (node.parent) {\n          return node.parent.id\n        }\n        // sectors without parent gets the branch as parent\n        return branchKey(node.companyBranch.id)\n      }\n      return null // is branch, no parent\n    },\n    getKey(node) {\n      if (isSector(node)) {\n        return node.id\n      }\n      return branchKey(node.id)\n    },\n  })\n}\n\nfunction getTreeFromFlatData<T extends Record<string, any>, R>({\n  flatData,\n  mapper,\n  getKey,\n  getParentKey,\n}: {\n  flatData: RoA<T>\n  mapper(node: T): R\n  getKey(node: T): string\n  getParentKey(node: T): string | null\n}): Array<T & R & { children: T[] }> {\n  if (!flatData) {\n    return []\n  }\n\n  const rootKey = '@@'\n\n  const childrenToParents = { [rootKey]: [] as T[] }\n  flatData.forEach(child => {\n    const parentKey = getParentKey(child) || rootKey\n\n    if (parentKey in childrenToParents) {\n      childrenToParents[parentKey].push(child)\n    } else {\n      childrenToParents[parentKey] = [child]\n    }\n  })\n\n  if (!(rootKey in childrenToParents)) {\n    return []\n  }\n\n  const trav = (parent: T) => {\n    const parentKey = getKey(parent)\n    if (parentKey in childrenToParents) {\n      return {\n        ...parent,\n        ...mapper(parent),\n        children: childrenToParents[parentKey].map(child => trav(child)),\n      }\n    } else {\n      return {\n        ...parent,\n        ...mapper(parent),\n        children: ARRAY_EMPTY,\n      }\n    }\n  }\n\n  return childrenToParents[rootKey].map(child => trav(child))\n}\n\nfunction isSector(node: TSector | TBranch): node is TSector {\n  return Reflect.has(node, 'parent')\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import {\n  OrderStateCategoryEnum,\n  QCustomerScreenOrderListQuery,\n  SCustomerScreenOrderListSubscription,\n  useQCustomerScreenOrderList,\n  useSCustomerScreenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nexport const PREPARING_STATES = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n]\nexport const READY_STATES = [OrderStateCategoryEnum.ReadyToDeliver]\nconst REQUIRED_STATES = [...PREPARING_STATES, ...READY_STATES]\n\nexport const useCustomerScreenDeck = ({ branches, sectors }) => {\n  const skip = branches.length === 0\n  const variables = {\n    branches,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQCustomerScreenOrderList(\n    {\n      ...variables,\n      categories: REQUIRED_STATES,\n    },\n    { skip },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSCustomerScreenOrderList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: REQUIRED_STATES.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data => data.orders)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SCustomerScreenOrderListSubscription,\n  prev: QCustomerScreenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n\n  if (!order || !prev.orders) {\n    return prev\n  }\n\n  if (!REQUIRED_STATES.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n\n  let orderExists = false\n  const orders = prev.orders.map(prevOrder => {\n    if (prevOrder.id === order.id) {\n      orderExists = true\n      return order\n    }\n\n    return prevOrder\n  })\n\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n\n  return { orders }\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { QCustomerScreenOrderListOrders } from '../../../graph/generated'\nimport { ROUTE_CUSTOMER_SCREEN_SETUP } from '../customerscreen.routes'\nimport { TCustomerScreenFilter } from '../customerscreen.types'\nimport { useCustomerScreenDeck } from '../hooks/useCustomerScreenDeck'\n\ntype TOrder = QCustomerScreenOrderListOrders\ntype TProps = SomeChildren\n\nexport const loaderContext = React.createContext<RoA<TOrder> | null>(null)\n\nexport const CustomerScreenLoader = observer<TProps>(({ children }) => {\n  const { history, location } = useRouterContext()\n  const branches = useBranchesFilter(false)\n\n  const filters: TCustomerScreenFilter | undefined = location.state?.filters\n  const filtersPassed = filters !== undefined\n  const branchesSelected = branches.length > 0\n\n  const sectors = filters?.sectors ?? []\n  const deck = useCustomerScreenDeck({ branches, sectors })\n\n  React.useEffect(() => {\n    if (!filtersPassed || !branchesSelected) {\n      history.replace(ROUTE_CUSTOMER_SCREEN_SETUP)\n    }\n  }, [branchesSelected, filtersPassed, history])\n\n  if (!filtersPassed || !branchesSelected) {\n    return null\n  }\n\n  return (\n    <loaderContext.Provider value={deck}>{children}</loaderContext.Provider>\n  )\n})\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components/macro'\n\nimport { Colors } from '../../../styling'\nimport { TCustomerNumber } from '../customerscreen.types'\n\n// enum values here has to correspond with class names bellow\nexport type TCustomerOrderState = 'new' | 'preparing' | 'ready'\n\ntype TProps = NoChildren & TCustomerNumber\n\nconst readyInit = keyframes`\n  0% {\n    font-size: 0;\n    padding: calc(var(--base-font-size) / 2 + var(--padding));\n    transform: rotate(0deg);\n  }\n\n  10% {\n    transform: rotate(var(--rotate-angle));\n  }\n  20% {\n    transform: rotate(calc(-1 * var(--rotate-angle)));\n  }\n  30% {\n    transform: rotate(var(--rotate-angle));\n  }\n  40% {\n    transform: rotate(calc(-1 * var(--rotate-angle)));\n  }\n\n  50% {\n    transform: rotate(var(--rotate-angle));\n    font-size: calc(var(--base-font-size) + 2 * var(--padding));\n    padding: 0px;\n  }\n\n  60% {\n    transform: rotate(calc(-1 * var(--rotate-angle)));\n  }\n  70% {\n    transform: rotate(var(--rotate-angle));\n  }\n  80% {\n    transform: rotate(calc(-1 * var(--rotate-angle)));\n  }\n  90% {\n    transform: rotate(var(--rotate-angle));\n  }\n\n  100% {\n    transform: rotate(0deg);\n  }\n`\n\nconst StyledCustomerNumber = styled.div`\n  transition: all 0.3s;\n  width: fit-content;\n  text-align: right;\n  margin-right: 15%;\n  margin-left: auto;\n\n  /* class names here has to correspond with enum values above */\n  &.new {\n    --base-font-size: calc(1rem + 7vmin);\n    --animation-duration: 0.4s;\n\n    color: ${Colors.greyMiddle};\n    font-size: var(--base-font-size);\n    padding: 0;\n  }\n\n  &.preparing {\n    color: ${Colors.white};\n    font-size: calc(1rem + 10vmin);\n  }\n\n  &.ready {\n    --padding: 1vmin;\n    --base-font-size: calc(1rem + 15vmin);\n    --animation-duration: 1s;\n    --rotate-angle: 7deg;\n\n    color: ${Colors.green};\n    font-size: var(--base-font-size);\n    padding: var(--padding);\n\n    animation: ${readyInit} var(--animation-duration) linear;\n  }\n`\n\nexport const CustomerNumber = React.memo<TProps>(\n  ({ customerNumber, orderState }) => {\n    return (\n      <StyledCustomerNumber className={orderState}>\n        {customerNumber}\n      </StyledCustomerNumber>\n    )\n  },\n)\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { TCustomerNumber } from '../customerscreen.types'\nimport { CustomerNumber } from './CustomerNumber'\n\ntype TProps = NoChildren & {\n  customerNumbers: RoA<TCustomerNumber>\n}\n\nconst StyledCustomerNumbers = styled.div`\n  --min-col-width: calc(1rem + 15vmin + 10vmin);\n\n  columns: 2 var(--min-col-width);\n  column-fill: auto;\n  overflow: hidden;\n`\n\nexport const CustomerNumbers: React.FC<TProps> = ({ customerNumbers }) => (\n  <StyledCustomerNumbers>\n    {customerNumbers.map(number => (\n      <CustomerNumber\n        id={number.id}\n        key={number.id}\n        customerNumber={number.customerNumber}\n        orderState={number.orderState}\n      />\n    ))}\n  </StyledCustomerNumbers>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { keyframes } from 'styled-components/macro'\n\nimport { Colors } from '../../../styling'\nimport { TCustomerNumber } from '../customerscreen.types'\n\ntype TProps = NoChildren & {\n  customerNumbers: RoA<TCustomerNumber>\n}\n\nconst marquee = keyframes`\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(-100%, 0);\n  }\n`\n\nconst StyledMarqueeNumberStack = styled.div`\n  --font-size: calc(1rem + 7vmin);\n\n  display: grid;\n  grid-template-rows: var(--font-size);\n\n  > * {\n    grid-row: 1;\n    grid-column: 1 / -1;\n  }\n\n  > .number-line {\n    white-space: nowrap;\n    overflow: hidden;\n\n    > .inner {\n      display: inline-block;\n\n      font-size: var(--font-size);\n      color: ${Colors.green};\n\n      padding-left: 100%;\n\n      animation-name: ${marquee};\n      animation-duration: 20s;\n      animation-timing-function: linear;\n      animation-iteration-count: infinite;\n      animation-fill-mode: both;\n    }\n  }\n`\n\nexport const MarqueeNumberStack: React.FC<TProps> = ({ customerNumbers }) => {\n  const hasSomeNumbers = customerNumbers.length > 0\n\n  return (\n    <StyledMarqueeNumberStack>\n      {hasSomeNumbers && (\n        <div className=\"number-line\">\n          <span className=\"inner\">\n            <Trans>Previous:</Trans>\n            {'  '}\n            {customerNumbers.map(number => (\n              <React.Fragment key={number.id}>\n                {number.customerNumber}\n                {'  '}\n              </React.Fragment>\n            ))}\n          </span>\n        </div>\n      )}\n    </StyledMarqueeNumberStack>\n  )\n}\n","import styled from 'styled-components/macro'\n\ntype TStyledProps = { textColor: string }\n\nexport const StyledCustomerShelfHeadline = styled.h1<TStyledProps>`\n  color: ${({ textColor }) => textColor};\n  font-weight: 100;\n  font-size: calc(1rem + 5vmin);\n  text-align: center;\n\n  margin-top: 0;\n  margin-bottom: 0.7rem;\n  padding-bottom: 0.7rem;\n\n  border-bottom: 2px solid ${({ textColor }) => textColor};\n`\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport {\n  FCustomerScreenOrderFragment as TOrder,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../tools/ramda'\nimport { TCustomerNumber } from '../customerscreen.types'\nimport { useCustomerScreenOrders } from '../hooks/useCustomerScreenOrders'\nimport { TCustomerOrderState } from '../molecules/CustomerNumber'\nimport { CustomerNumbers } from '../molecules/CustomerNumbers'\nimport { MarqueeNumberStack } from '../molecules/MarqueeNumberStack'\nimport { StyledCustomerShelfHeadline } from '../molecules/StyledCustomerShelfHeadline'\n\ntype TProps = NoChildren & {\n  categories: RoA<OrderStateCategoryEnum>\n  sortByChange: 'ascend' | 'descend'\n  maxRecent?: number\n  headline: string\n  headlineColor: string\n}\n\nconst StyledCustomerScreenShelf = styled.section`\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  grid-template-columns: 1fr;\n\n  padding: 1rem;\n  height: 100%;\n`\n\nconst ARRAY_START = 0\n\nexport const CustomerScreenShelf = observer<TProps>(\n  ({\n    categories,\n    sortByChange,\n    maxRecent = Infinity,\n    headline,\n    headlineColor,\n  }) => {\n    const orders = useCustomerScreenOrders()\n\n    const byChange = sortByChange === 'ascend' ? RM.ascend : RM.descend\n    const sortOrders = RM.sortWith<TOrder>([\n      RM.descend(RM.prop('orderStateCategory')),\n      byChange(latestChange),\n    ])\n\n    if (orders === null) {\n      return null\n    }\n\n    const customerNumbers = sortOrders(orders)\n      .filter(order => categories.includes(order.orderStateCategory))\n      .filter(order => order.orderNumber !== null)\n      .map(orderToCustomerNumber)\n\n    const recentNumbers = customerNumbers.slice(ARRAY_START, maxRecent)\n    const olderNumbers = customerNumbers.slice(maxRecent)\n\n    const showMarquee = maxRecent !== Infinity\n\n    return (\n      <StyledCustomerScreenShelf>\n        <StyledCustomerShelfHeadline textColor={headlineColor}>\n          {headline}\n        </StyledCustomerShelfHeadline>\n        <CustomerNumbers customerNumbers={recentNumbers} />\n        {showMarquee && <MarqueeNumberStack customerNumbers={olderNumbers} />}\n      </StyledCustomerScreenShelf>\n    )\n  },\n)\n\ntype TOrderToCustomerState = Partial<\n  Record<OrderStateCategoryEnum, TCustomerOrderState>\n>\nconst orderToCustomerStateMapping: TOrderToCustomerState = {\n  [OrderStateCategoryEnum.NewOrders]: 'new',\n  [OrderStateCategoryEnum.Preparing]: 'preparing',\n  [OrderStateCategoryEnum.ReadyToDeliver]: 'ready',\n}\n\nfunction orderToCustomerNumber(order: TOrder): TCustomerNumber {\n  return {\n    id: order.id,\n    customerNumber: order.orderNumber!,\n    orderState: orderToCustomerStateMapping[order.orderStateCategory]!,\n  }\n}\n\nfunction latestChange(order: TOrder) {\n  return order.orderTiming.map(RM.prop('createdAt')).reduce(RM.max)\n}\n","import React from 'react'\n\nimport { loaderContext } from '../organisms/CustomerScreenLoader'\n\nexport const useCustomerScreenOrders = () => {\n  return React.useContext(loaderContext)\n}\n","import React from 'react'\n\nimport { PageLayoutGrid } from '../../../atoms/PageLayoutGrid'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { Colors } from '../../../styling'\nimport { PREPARING_STATES, READY_STATES } from '../hooks/useCustomerScreenDeck'\nimport { CustomerScreenLoader } from '../organisms/CustomerScreenLoader'\nimport { CustomerScreenShelf } from '../organisms/CustomerScreenShelf'\n\ntype TProps = NoChildren\n\nexport const CustomerScreenPage: React.FC<TProps> = () => {\n  return (\n    <CustomerScreenLoader>\n      <PageLayoutGrid isForIconDashboard={false}>\n        <PageLayoutFullHeightItem row={0} column={0} widthInColumns={8}>\n          <CustomerScreenShelf\n            categories={PREPARING_STATES}\n            headline={i18n.t`Preparing`}\n            headlineColor={Colors.white}\n            sortByChange=\"ascend\"\n          />\n        </PageLayoutFullHeightItem>\n        <PageLayoutFullHeightItem row={0} column={8} widthInColumns={8}>\n          <CustomerScreenShelf\n            categories={READY_STATES}\n            headline={i18n.t`Ready`}\n            headlineColor={Colors.green}\n            sortByChange=\"descend\"\n            maxRecent={6}\n          />\n        </PageLayoutFullHeightItem>\n      </PageLayoutGrid>\n    </CustomerScreenLoader>\n  )\n}\n\nexport default CustomerScreenPage\n","import { deepmerge } from '@material-ui/utils';\n\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n\n  return deepmerge(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n\n  });\n}\n\nexport default merge;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nfunction css(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), {}, omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default css;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport merge from './merge';\n\nfunction compose() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n\n  var fn = function fn(props) {\n    return styles.reduce(function (acc, style) {\n      var output = style(props);\n\n      if (output) {\n        return merge(acc, output);\n      }\n\n      return acc;\n    }, {});\n  }; // Alternative approach that doesn't yield any performance gain.\n  // const handlers = styles.reduce((acc, style) => {\n  //   style.filterProps.forEach(prop => {\n  //     acc[prop] = style;\n  //   });\n  //   return acc;\n  // }, {});\n  // const fn = props => {\n  //   return Object.keys(props).reduce((acc, prop) => {\n  //     if (handlers[prop]) {\n  //       return merge(acc, handlers[prop](props));\n  //     }\n  //     return acc;\n  //   }, {});\n  // };\n\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce(function (acc, style) {\n    return _extends(acc, style.propTypes);\n  }, {}) : {};\n  fn.filterProps = styles.reduce(function (acc, style) {\n    return acc.concat(style.filterProps);\n  }, []);\n  return fn;\n}\n\nexport default compose;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport PropTypes from 'prop-types';\nimport merge from './merge'; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nvar values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\nvar defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: function up(key) {\n    return \"@media (min-width:\".concat(values[key], \"px)\");\n  }\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!props.theme) {\n      console.error('@material-ui/system: you are calling a style function without a theme value.');\n    }\n  }\n\n  if (Array.isArray(propValue)) {\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce(function (acc, item, index) {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (_typeof(propValue) === 'object') {\n    var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n\n    return Object.keys(propValue).reduce(function (acc, breakpoint) {\n      acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  var output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var base = styleFunction(props);\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    var extended = themeBreakpoints.keys.reduce(function (acc, key) {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme: props.theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default breakpoints;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce(function (acc, item) {\n    return acc && acc[item] ? acc[item] : null;\n  }, obj);\n}\n\nfunction style(options) {\n  var prop = options.prop,\n      _options$cssProperty = options.cssProperty,\n      cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,\n      themeKey = options.themeKey,\n      transform = options.transform;\n\n  var fn = function fn(props) {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    var propValue = props[prop];\n    var theme = props.theme;\n    var themeMapping = getPath(theme, themeKey) || {};\n\n    var styleFromPropValue = function styleFromPropValue(propValueFinal) {\n      var value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal] || propValueFinal;\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return _defineProperty({}, cssProperty, value);\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? _defineProperty({}, prop, responsivePropType) : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","import style from './style';\nimport compose from './compose';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return \"\".concat(value, \"px solid\");\n}\n\nexport var border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport var borderRadius = style({\n  prop: 'borderRadius',\n  themeKey: 'shape'\n});\nvar borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;","import style from './style';\nimport compose from './compose';\nexport var displayPrint = style({\n  prop: 'displayPrint',\n  cssProperty: false,\n  transform: function transform(value) {\n    return {\n      '@media print': {\n        display: value\n      }\n    };\n  }\n});\nexport var displayRaw = style({\n  prop: 'display'\n});\nexport var overflow = style({\n  prop: 'overflow'\n});\nexport var textOverflow = style({\n  prop: 'textOverflow'\n});\nexport var visibility = style({\n  prop: 'visibility'\n});\nexport var whiteSpace = style({\n  prop: 'whiteSpace'\n});\nexport default compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);","import style from './style';\nimport compose from './compose';\nexport var flexBasis = style({\n  prop: 'flexBasis'\n});\nexport var flexDirection = style({\n  prop: 'flexDirection'\n});\nexport var flexWrap = style({\n  prop: 'flexWrap'\n});\nexport var justifyContent = style({\n  prop: 'justifyContent'\n});\nexport var alignItems = style({\n  prop: 'alignItems'\n});\nexport var alignContent = style({\n  prop: 'alignContent'\n});\nexport var order = style({\n  prop: 'order'\n});\nexport var flex = style({\n  prop: 'flex'\n});\nexport var flexGrow = style({\n  prop: 'flexGrow'\n});\nexport var flexShrink = style({\n  prop: 'flexShrink'\n});\nexport var alignSelf = style({\n  prop: 'alignSelf'\n});\nexport var justifyItems = style({\n  prop: 'justifyItems'\n});\nexport var justifySelf = style({\n  prop: 'justifySelf'\n});\nvar flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);\nexport default flexbox;","import style from './style';\nimport compose from './compose';\nexport var position = style({\n  prop: 'position'\n});\nexport var zIndex = style({\n  prop: 'zIndex',\n  themeKey: 'zIndex'\n});\nexport var top = style({\n  prop: 'top'\n});\nexport var right = style({\n  prop: 'right'\n});\nexport var bottom = style({\n  prop: 'bottom'\n});\nexport var left = style({\n  prop: 'left'\n});\nexport default compose(position, zIndex, top, right, bottom, left);","import style from './style';\nimport compose from './compose';\nexport var color = style({\n  prop: 'color',\n  themeKey: 'palette'\n});\nexport var bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette'\n});\nvar palette = compose(color, bgcolor);\nexport default palette;","import style from './style';\nvar boxShadow = style({\n  prop: 'boxShadow',\n  themeKey: 'shadows'\n});\nexport default boxShadow;","import style from './style';\nimport compose from './compose';\n\nfunction transform(value) {\n  return value <= 1 ? \"\".concat(value * 100, \"%\") : value;\n}\n\nexport var width = style({\n  prop: 'width',\n  transform: transform\n});\nexport var maxWidth = style({\n  prop: 'maxWidth',\n  transform: transform\n});\nexport var minWidth = style({\n  prop: 'minWidth',\n  transform: transform\n});\nexport var height = style({\n  prop: 'height',\n  transform: transform\n});\nexport var maxHeight = style({\n  prop: 'maxHeight',\n  transform: transform\n});\nexport var minHeight = style({\n  prop: 'minHeight',\n  transform: transform\n});\nexport var sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: transform\n});\nexport var sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: transform\n});\nvar sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight);\nexport default sizing;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport merge from './merge';\nimport memoize from './memoize';\nvar properties = {\n  m: 'margin',\n  p: 'padding'\n};\nvar directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nvar aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nvar getCssProperties = memoize(function (prop) {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  var _prop$split = prop.split(''),\n      _prop$split2 = _slicedToArray(_prop$split, 2),\n      a = _prop$split2[0],\n      b = _prop$split2[1];\n\n  var property = properties[a];\n  var direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(function (dir) {\n    return property + dir;\n  }) : [property + direction];\n});\nvar spacingKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\n\nfunction getTransformer(theme) {\n  var themeSpacing = theme.spacing || 8;\n\n  if (typeof themeSpacing === 'number') {\n    return function (abs) {\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return function (abs) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (abs > themeSpacing.length - 1) {\n          console.error([\"@material-ui/system: the value provided (\".concat(abs, \") overflows.\"), \"The supported values are: \".concat(JSON.stringify(themeSpacing), \".\"), \"\".concat(abs, \" > \").concat(themeSpacing.length - 1, \", you need to add the missing values.\")].join('\\n'));\n        }\n      }\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([\"@material-ui/system: the `theme.spacing` value (\".concat(themeSpacing, \") is invalid.\"), 'It should be a number, an array or a function.'].join('\\n'));\n  }\n\n  return function () {\n    return undefined;\n  };\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string') {\n    return propValue;\n  }\n\n  var abs = Math.abs(propValue);\n  var transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return \"-\".concat(transformed);\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return function (propValue) {\n    return cssProperties.reduce(function (acc, cssProperty) {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  };\n}\n\nfunction spacing(props) {\n  var theme = props.theme;\n  var transformer = getTransformer(theme);\n  return Object.keys(props).map(function (prop) {\n    // Using a hash computation over an array iteration could be faster, but with only 28 items,\n    // it's doesn't worth the bundle size.\n    if (spacingKeys.indexOf(prop) === -1) {\n      return null;\n    }\n\n    var cssProperties = getCssProperties(prop);\n    var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n    var propValue = props[prop];\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  }).reduce(merge, {});\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","export default function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n\n    return cache[arg];\n  };\n}","import style from './style';\nimport compose from './compose';\nexport var fontFamily = style({\n  prop: 'fontFamily',\n  themeKey: 'typography'\n});\nexport var fontSize = style({\n  prop: 'fontSize',\n  themeKey: 'typography'\n});\nexport var fontStyle = style({\n  prop: 'fontStyle',\n  themeKey: 'typography'\n});\nexport var fontWeight = style({\n  prop: 'fontWeight',\n  themeKey: 'typography'\n});\nexport var letterSpacing = style({\n  prop: 'letterSpacing'\n});\nexport var lineHeight = style({\n  prop: 'lineHeight'\n});\nexport var textAlign = style({\n  prop: 'textAlign'\n});\nvar typography = compose(fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);\nexport default typography;","import { borders, compose, display, flexbox, palette, positions, shadows, sizing, spacing, typography, css } from '@material-ui/system';\nimport styled from '../styles/styled';\nexport var styleFunction = css(compose(borders, display, flexbox, positions, palette, shadows, sizing, spacing, typography));\n/**\n * @ignore - do not document.\n */\n\nvar Box = styled('div')(styleFunction, {\n  name: 'MuiBox'\n});\nexport default Box;","import { useRouterContext } from '@speedlo/hooks'\nimport { XForm } from '@speedlo/xform'\nimport { toJS } from 'mobx'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { ARRAY_EMPTY } from '../../../helpers/form'\nimport { ROUTE_CUSTOMER_SCREEN } from '../customerscreen.routes'\nimport { TCustomerScreenFilter } from '../customerscreen.types'\n\ntype TProps = SomeChildren\n\nexport const CustomerScreenSetupForm = observer<TProps>(({ children }) => {\n  const { history } = useRouterContext()\n  const branches = useBranchesFilter(false)\n\n  const onFilterSubmit = React.useCallback(\n    (values: TCustomerScreenFilter) => {\n      const noBranchSelected = branches.length === 0\n\n      if (noBranchSelected) {\n        // the submit button is disabled by the same condition, this shouldn’t happen to casual user\n        return\n      }\n\n      const filters = toJS(values)\n      history.push(ROUTE_CUSTOMER_SCREEN, { filters })\n    },\n    [branches.length, history],\n  )\n\n  return (\n    <XForm initialValues={{ sectors: ARRAY_EMPTY }} onSubmit={onFilterSubmit}>\n      {children}\n    </XForm>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { Box } from '@material-ui/core'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport {\n  BranchesFilter,\n  useBranchesFilter,\n} from '../../../components/filters/BranchesFilter'\nimport { SectorsFilter } from '../../../components/filters/SectorsFilter'\nimport { FormSubmitButton } from '../../../components/forms/FormSubmitButton'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { Colors } from '../../../styling'\nimport { CustomerScreenSetupForm } from '../organisms/CustomerScreenSetupForm'\n\ntype TProps = NoChildren\n\nexport const CustomerScreenSetupPage: React.FC<TProps> = () => {\n  const branches = useBranchesFilter(false)\n  const noBranchSelected = branches.length === 0\n\n  return (\n    <CustomerScreenSetupForm>\n      <PageLayoutResponsive pageTitle={i18n.t`Customer screen`}>\n        <PageLayoutGridItem gridColumn=\"1 / span 9\" gridRow=\"1\">\n          <Card>\n            <BranchesFilter />\n            <Box color={Colors.black}>\n              <SectorsFilter />\n            </Box>\n            <FormSubmitButton color={Colors.green} disabled={noBranchSelected}>\n              <Trans>Show customer screen</Trans>\n            </FormSubmitButton>\n          </Card>\n        </PageLayoutGridItem>\n      </PageLayoutResponsive>\n    </CustomerScreenSetupForm>\n  )\n}\n\nexport default CustomerScreenSetupPage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { useCanQuery } from '../../../hooks/useAccessGuard'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport {\n  ROUTE_CUSTOMER_SCREEN,\n  ROUTE_CUSTOMER_SCREEN_SETUP,\n} from '../customerscreen.routes'\nimport CustomerScreenPage from '../pages/CustomerScreenPage'\nimport CustomerScreenSetupPage from '../pages/CustomerScreenSetupPage'\n\ntype TProps = NoChildren\n\nexport const CustomerScreenRouting: React.FC<TProps> = () => {\n  const hasPermissions = useCanQuery('orders')\n\n  if (!hasPermissions) {\n    return <Route component={NotFoundPage} />\n  }\n\n  return (\n    <Switch>\n      <SecureRoute\n        exact\n        path={ROUTE_CUSTOMER_SCREEN}\n        component={CustomerScreenPage}\n      />\n      <SecureRoute\n        exact\n        path={ROUTE_CUSTOMER_SCREEN_SETUP}\n        component={CustomerScreenSetupPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default CustomerScreenRouting\n"],"sourceRoot":""}