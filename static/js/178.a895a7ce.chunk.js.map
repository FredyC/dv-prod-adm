{"version":3,"sources":["atoms/FormInputTextBox.tsx","atoms/FormInputStyled.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/LoginPageBackground.tsx","assets/bg_login.jpg","assets/bg_login@2x.jpg","atoms/NotifyMessage.tsx","segments/login/molecules/PasswordLoginError.tsx","segments/login/molecules/PasswordResetLink.tsx","segments/login/organisms/PasswordLoginForm.tsx","segments/login/pages/PasswordLoginPage.tsx","segments/login/routes/PasswordLoginRoute.tsx"],"names":["FormInputTextBox","React","forwardRef","_ref","inputRef","field","_ref$inputFullWidth","inputFullWidth","isRequired","validatioName","validationMessage","validate","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_form__WEBPACK_IMPORTED_MODULE_2__","value","isEmpty","_i18n__WEBPACK_IMPORTED_MODULE_4__","_","fieldApi","_FormInputStyled__WEBPACK_IMPORTED_MODULE_5__","assign","onChange","ev","target","validity","valid","setTouched","setValue","invalid","Boolean","error","ref","__webpack_require__","d","__webpack_exports__","fullWidthStyle","FormInputStyled","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","invalidInputStyle","css","styled","input","withConfig","displayName","componentId","Spacing","MarginAroundFormComponents","_ref2","FormSubmit","children","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","color","Colors","green","disabled","isFormValid","submitting","onClick","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","length","fieldName","LoginPageBackground","_assets_bg_login_jpg__WEBPACK_IMPORTED_MODULE_1__","_assets_bg_login_jpg__WEBPACK_IMPORTED_MODULE_1___default","n","_assets_bg_login_2x_jpg__WEBPACK_IMPORTED_MODULE_2__","_assets_bg_login_2x_jpg__WEBPACK_IMPORTED_MODULE_2___default","div","backgroundImage","backgroundImage2x","module","exports","p","NotifyMessageContainerStyled","isError","red","NotifyMessageStyled","InfoMessageFontSize","NotifyMessage","isVisible","_ref$isError","objectWithoutProperties","react_default","data-testid","concat","PasswordLoginError","observer","model","hasFailed","NotifyMessage_NotifyMessage","errorMessage","PasswordResetLinkStyled","Link","PasswordResetLink","to","TouchButton","greyMiddle","_lingui_react","id","LoginContainerStyled","PasswordContainerStyled","SubmitButtonContainerStyled","PasswordLoginForm","es","onSubmit","username","password","requestToken","render","formApi","name","i18n","autoFocus","placeholder","type","PasswordLoginPage","PageTitle","title","GridLayout","layouts","i","x","y","w","h","key","Display","PasswordLoginForm_PasswordLoginForm","PasswordResetLink_PasswordResetLink","PasswordLoginRoute_PasswordLoginRoute","PasswordLoginRoute","auth","useRoot","isAuthenticatedUser","react_router","PasswordLoginPage_PasswordLoginPage","provider","passwordLogin"],"mappings":"+LAmBaA,EAAmBC,IAAMC,WACpC,SAAAC,EAUEC,GAVF,IAEIC,EAFJF,EAEIE,MAFJC,EAAAH,EAGII,sBAHJ,IAAAD,KAIIE,EAJJL,EAIIK,WACAC,EALJN,EAKIM,cACAC,EANJP,EAMIO,kBACAC,EAPJR,EAOIQ,SACGC,EARPC,OAAAC,EAAA,EAAAD,CAAAV,EAAA,+FAYEY,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEb,MAAOA,EACPM,SACEA,GACC,SAAAQ,GACC,OAAIX,GAAcY,kBAAQD,EAAQ,IAC5BT,GAGGW,EAAA,EAAIC,EAAA,+BAAKb,kBAEX,OAIV,SAAAc,GAAQ,OACPR,EAAAC,EAAAC,cAACO,EAAA,EAADX,OAAAY,OAAA,CACEN,MAAQI,EAASJ,OAA4B,IAAnBI,EAASJ,MAAmBI,EAASJ,MAAd,GACjDO,SAAU,SAAAC,GACJA,EAAGC,OAAOC,SAASC,QACrBP,EAASQ,YAAW,GACpBR,EAASS,SAASL,EAAGC,OAAOT,SAGhCZ,eAAgBA,EAChB0B,QAASC,QAAQX,EAASY,OAE1BC,IAAKhC,GACDQ,2CC5DdyB,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IASaO,EAAoBC,YAAH,2BAIjBL,EAAiBK,YAAH,iBAIdJ,EAAkBK,IAAOC,MAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,wBAChBK,IAAQC,2BAChB,SAAAjD,GAAA,OAAAA,EAAGI,gBAAyDiC,GAC5D,SAAAa,GAAA,OAAAA,EAAGpB,SAA2CW,wICXrCU,EAA+B,SAAAnD,GAAA,IAAGoD,EAAHpD,EAAGoD,SAAa3C,EAAhBC,OAAAC,EAAA,EAAAD,CAAAV,EAAA,qBAC1CY,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACG,SAAAsC,GAAI,OACHzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD5C,OAAAY,OAAA,CACEiC,MAAOC,IAAOC,MACdC,UAAWC,YAAYN,IAASA,EAAKO,WACrCC,QAAS,SAAAC,GACPA,EAAEC,iBACFV,EAAKW,WAAWF,KAEdrD,GAEH2C,yCCpBTlB,EAAAC,EAAAC,EAAA,sBAAAuB,IAAAzB,EAAAC,EAAAC,EAAA,sBAAA6B,IAAA,IAAAC,EAAAhC,EAAA,MAAAiC,EAAAjC,EAAA,IAIO,SAASyB,EAAYS,GAC1B,OAAQA,EAAUC,QAAmD,IAAzC3D,OAAO4D,KAAKF,EAAUC,QAAQE,OAGrD,SAASN,EAAmBO,GACjC,OAAO,SAACxD,GAAD,OACLC,kBAAQD,EAAQ,IAAMmD,EAAA,EAAIhD,EAAA,+BAAKqD,cAA8B,0CCXjEtC,EAAAC,EAAAC,EAAA,sBAAAqC,IAAA,IAAAlC,EAAAL,EAAA,IAAAwC,EAAAxC,EAAA,MAAAyC,EAAAzC,EAAA0C,EAAAF,GAAAG,EAAA3C,EAAA,MAAA4C,EAAA5C,EAAA0C,EAAAC,GAKaJ,EAAsB9B,IAAOoC,IAAVlC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,iZAGNqC,IAUEC,2BClB5BC,EAAAC,QAAiBjD,EAAAkD,EAAuB,2DCAxCF,EAAAC,QAAiBjD,EAAAkD,EAAuB,0LCclCC,EAA+B1C,IAAOoC,IAAVlC,WAAA,CAAAC,YAAA,8CAAAC,YAAA,YAAGJ,CAAH,8JAHP,SAAClC,GAAD,OACzBA,EAAM6E,QAAU9B,IAAO+B,IAAM/B,IAAOC,QAehC+B,EAAsB7C,IAAOoC,IAAVlC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,YAAGJ,CAAH,+EAIVK,IAAQyC,qBAGVC,EAA+C,SAAA1F,GAAA,IAC1DoD,EAD0DpD,EAC1DoD,SACAuC,EAF0D3F,EAE1D2F,UAF0DC,EAAA5F,EAG1DsF,eAH0D,IAAAM,KAI1D/B,EAJ0D7D,EAI1D6D,QACGpD,EALuDC,OAAAmF,EAAA,EAAAnF,CAAAV,EAAA,qDAO1D2F,EACEG,EAAAjF,EAAAC,cAACuE,EAAD3E,OAAAY,OAAA,CACEuC,QAASA,EACT8B,UAAWA,EACXL,QAASA,GACL7E,GAEJqF,EAAAjF,EAAAC,cAAC0E,EAAD,CAAqBO,cAAA,SAAAC,OAAsBV,EAAU,SAAW,KAC7DlC,IAGH,MC1CO6C,EAAqBC,mBAChC,SAAAlG,GAAA,IAAGmG,EAAHnG,EAAGmG,MAAH,OACEA,EAAMC,UACJN,EAAAjF,EAAAC,cAACuF,EAAD,CAAeV,WAAW,EAAML,SAAS,GACtCa,EAAMG,cAEP,gCCNFC,EAA0B5D,YAAO6D,KAAV3D,WAAA,CAAAC,YAAA,6CAAAC,YAAA,YAAGJ,CAAH,qDAMhB8D,EAAsC,SAAAhG,GACjD,OACEqF,EAAAjF,EAAAC,cAACyF,EAAD,CAAyBG,GAAG,UAC1BZ,EAAAjF,EAAAC,cAAC6F,EAAA,EAAD,CAAapD,MAAOC,IAAOoD,YACzBd,EAAAjF,EAAAC,cAAC+F,EAAA,MAAD,CAAAC,GAAA,wDCNFC,EAAuBpE,IAAOoC,IAAVlC,WAAA,CAAAC,YAAA,0CAAAC,YAAA,gBAAGJ,CAAH,yCAIpBqE,EAA0BrE,IAAOoC,IAAVlC,WAAA,CAAAC,YAAA,6CAAAC,YAAA,gBAAGJ,CAAH,oBAGvBsE,EAA8BtE,IAAOoC,IAAVlC,WAAA,CAAAC,YAAA,iDAAAC,YAAA,gBAAGJ,CAAH,qDAWpBuE,EAAuD,SAAAlH,GAAA,IAClEmG,EADkEnG,EAClEmG,MADkE,OAGlEL,EAAAjF,EAAAC,cAACqG,EAAA,KAAD,CACEC,SAAU,SAAAlE,GAAA,IAAGmE,EAAHnE,EAAGmE,SAAUC,EAAbpE,EAAaoE,SAAb,OACRnB,EAAMoB,aAAaF,EAAUC,IAE/BE,OAAQ,SAAAC,GAAO,OACb3B,EAAAjF,EAAAC,cAAA,QAAMsG,SAAUK,EAAQzD,YACtB8B,EAAAjF,EAAAC,cAACiG,EAAD,KACEjB,EAAAjF,EAAAC,cAACjB,EAAA,EAAD,CACEK,MAAM,WACNwH,KAAK,WACLrH,YAAY,EACZC,cAAeqH,EAAA,EAAIxG,EAAA,YACnByG,WAAW,EACXC,YAAaF,EAAA,EAAIxG,EAAA,eAIrB2E,EAAAjF,EAAAC,cAACkG,EAAD,KACElB,EAAAjF,EAAAC,cAACjB,EAAA,EAAD,CACEK,MAAM,WACNwH,KAAK,WACLrH,YAAY,EACZC,cAAeqH,EAAA,EAAIxG,EAAA,YACnB2G,KAAK,WACLD,YAAaF,EAAA,EAAIxG,EAAA,eAIrB2E,EAAAjF,EAAAC,cAACmG,EAAD,KACEnB,EAAAjF,EAAAC,cAACqC,EAAA,EAAD,KACE2C,EAAAjF,EAAAC,cAAC+F,EAAA,MAAD,CAAAC,GAAA,mBC3CL,IAAMiB,EAAuD,SAAA/H,GAAA,IAClEmG,EADkEnG,EAClEmG,MADkE,OAGlEL,EAAAjF,EAAAC,cAAC2D,EAAA,EAAD,KACEqB,EAAAjF,EAAAC,cAACkH,EAAA,EAAD,CAAWC,MAAON,EAAA,EAAIxG,EAAA,gBACtB2E,EAAAjF,EAAAC,cAACoH,EAAA,EAAD,CAAYC,QAXP,CACL,CAAEC,EAAG,QAASC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACnC,CAAEJ,EAAG,YAAaC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,KAUrC1C,EAAAjF,EAAAC,cAAA,OAAK2H,IAAI,SACP3C,EAAAjF,EAAAC,cAACkH,EAAA,EAAUU,QAAX,OAEF5C,EAAAjF,EAAAC,cAAA,OAAK2H,IAAI,aACP3C,EAAAjF,EAAAC,cAAC6H,EAAD,CAAmBxC,MAAOA,IAC1BL,EAAAjF,EAAAC,cAAC8H,EAAD,QAGJ9C,EAAAjF,EAAAC,cAACmF,EAAD,CAAoBE,MAAOA,MCpC/BjE,EAAAC,EAAAC,EAAA,uCAAAyG,IAMO,IAAMC,EAA+B,WAAM,IACxCC,EAASC,cAATD,KACR,OAAOA,EAAKE,oBACVnD,EAAAjF,EAAAC,cAACoI,EAAA,SAAD,CAAUxC,GAAG,MAEbZ,EAAAjF,EAAAC,cAACqI,EAAD,CAAmBhD,MAAO4C,EAAKK,SAASC,iBAI7BP","file":"static/js/178.a895a7ce.chunk.js","sourcesContent":["import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { FormInputStyled } from './FormInputStyled'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  isRequired?: boolean\n  validatioName?: string\n  validationMessage?: string\n  inputFullWidth?: boolean\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputFullWidth = false,\n      isRequired,\n      validatioName,\n      validationMessage,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            if (validationMessage) {\n              return validationMessage\n            }\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              fieldApi.setTouched(true)\n              fieldApi.setValue(ev.target.value)\n            }\n          }}\n          inputFullWidth={inputFullWidth}\n          invalid={Boolean(fieldApi.error)}\n          // @ts-ignore\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import styled, { css } from 'styled-components'\n\nimport { Spacing } from '../styling'\n\ninterface IFormInputStyled {\n  invalid?: boolean\n  inputFullWidth?: boolean\n}\n\nexport const invalidInputStyle = css`\n  border: 1px red solid;\n`\n\nexport const fullWidthStyle = css`\n  width: 100%;\n`\n\nexport const FormInputStyled = styled.input`\n  margin: ${Spacing.MarginAroundFormComponents};\n  ${({ inputFullWidth }: IFormInputStyled) => inputFullWidth && fullWidthStyle};\n  ${({ invalid }: IFormInputStyled) => invalid && invalidInputStyle};\n`\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import styled from 'styled-components'\n\nimport backgroundImage from '../assets/bg_login.jpg'\nimport backgroundImage2x from '../assets/bg_login@2x.jpg'\n\nexport const LoginPageBackground = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n\n  @media only screen and (-webkit-min-device-pixel-ratio: 1.3),\n    only screen and (min--moz-device-pixel-ratio: 1.3),\n    only screen and (-o-min-device-pixel-ratio: 2.6/2),\n    only screen and (min-device-pixel-ratio: 1.3),\n    only screen and (min-width: 1024px) {\n    background-image: url(${backgroundImage2x});\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/media/bg_login.382d98be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg_login@2x.35ab1818.jpg\";","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\n\ninterface INotifyMessageProps {\n  isError?: boolean\n  isVisible: boolean\n  onClick?(): void\n}\n\nconst backgroundProperty = (props: INotifyMessageProps) =>\n  props.isError ? Colors.red : Colors.green\n\nconst NotifyMessageContainerStyled = styled.div`\n  position: relative;\n  border-radius: 1rem;\n  width: 60%;\n  height: 3.9rem;\n  opacity: 0.85;\n  left: 20%;\n  background: ${backgroundProperty};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst NotifyMessageStyled = styled.div`\n  color: white;\n  text-align: center;\n  margin: 0 0.5rem 0.4rem 0.5rem;\n  font-size: ${Spacing.InfoMessageFontSize};\n`\n\nexport const NotifyMessage: React.FC<INotifyMessageProps> = ({\n  children,\n  isVisible,\n  isError = false,\n  onClick,\n  ...props\n}) =>\n  isVisible ? (\n    <NotifyMessageContainerStyled\n      onClick={onClick}\n      isVisible={isVisible}\n      isError={isError}\n      {...props}\n    >\n      <NotifyMessageStyled data-testid={`notify${isError ? '-error' : ''}`}>\n        {children}\n      </NotifyMessageStyled>\n    </NotifyMessageContainerStyled>\n  ) : null\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NotifyMessage } from '../../../atoms/NotifyMessage'\nimport { TPasswordLoginModel } from '../models/PasswordLoginModel'\n\ninterface IPasswordLoginErrorProps {\n  model: TPasswordLoginModel\n}\n\nexport const PasswordLoginError = observer<IPasswordLoginErrorProps>(\n  ({ model }) =>\n    model.hasFailed ? (\n      <NotifyMessage isVisible={true} isError={true}>\n        {model.errorMessage}\n      </NotifyMessage>\n    ) : null,\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nconst PasswordResetLinkStyled = styled(Link)`\n  display: inline-block;\n  width: 14rem;\n  margin: 0.5rem;\n`\n\nexport const PasswordResetLink: React.FC<IProps> = props => {\n  return (\n    <PasswordResetLinkStyled to=\"/reset\">\n      <TouchButton color={Colors.greyMiddle}>\n        <Trans>Forgotten password</Trans>\n      </TouchButton>\n    </PasswordResetLinkStyled>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport { TPasswordLoginModel } from '../models/PasswordLoginModel'\n\ninterface IPasswordLoginFormProps {\n  model: TPasswordLoginModel\n}\n\nconst LoginContainerStyled = styled.div`\n  display: inline-block;\n  margin: 0.5rem;\n`\nconst PasswordContainerStyled = styled.div`\n  margin: 0.5rem;\n`\nconst SubmitButtonContainerStyled = styled.div`\n  display: inline-block;\n  width: 14rem;\n  margin: 0.5rem;\n`\n\ninterface IFormValues {\n  username: string\n  password: string\n}\n\nexport const PasswordLoginForm: React.FC<IPasswordLoginFormProps> = ({\n  model,\n}) => (\n  <Form\n    onSubmit={({ username, password }: IFormValues) =>\n      model.requestToken(username, password)\n    }\n    render={formApi => (\n      <form onSubmit={formApi.submitForm}>\n        <LoginContainerStyled>\n          <FormInputTextBox\n            field=\"username\"\n            name=\"username\"\n            isRequired={true}\n            validatioName={i18n.t`username`}\n            autoFocus={true}\n            placeholder={i18n.t`username`}\n          />\n        </LoginContainerStyled>\n\n        <PasswordContainerStyled>\n          <FormInputTextBox\n            field=\"password\"\n            name=\"password\"\n            isRequired={true}\n            validatioName={i18n.t`password`}\n            type=\"password\"\n            placeholder={i18n.t`password`}\n          />\n        </PasswordContainerStyled>\n\n        <SubmitButtonContainerStyled>\n          <FormSubmit>\n            <Trans>Sign-in</Trans>\n          </FormSubmit>\n        </SubmitButtonContainerStyled>\n      </form>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { GridLayout } from '../../../atoms/GridLayout'\nimport { LoginPageBackground } from '../../../atoms/LoginPageBackground'\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { TPasswordLoginModel } from '../models/PasswordLoginModel'\nimport { PasswordLoginError } from '../molecules/PasswordLoginError'\nimport { PasswordResetLink } from '../molecules/PasswordResetLink'\nimport { PasswordLoginForm } from '../organisms/PasswordLoginForm'\n\ninterface IPasswordLoginPageProps {\n  model: TPasswordLoginModel\n}\n\nfunction getLayout() {\n  return [\n    { i: 'title', x: 6, y: 2, w: 8, h: 1 },\n    { i: 'loginform', x: 6, y: 3, w: 8, h: 4 },\n  ]\n}\n\nexport const PasswordLoginPage: React.FC<IPasswordLoginPageProps> = ({\n  model,\n}) => (\n  <LoginPageBackground>\n    <PageTitle title={i18n.t`Login page`} />\n    <GridLayout layouts={getLayout()}>\n      <div key=\"title\">\n        <PageTitle.Display />\n      </div>\n      <div key=\"loginform\">\n        <PasswordLoginForm model={model} />\n        <PasswordResetLink />\n      </div>\n    </GridLayout>\n    <PasswordLoginError model={model} />\n  </LoginPageBackground>\n)\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { PasswordLoginPage } from '../pages/PasswordLoginPage'\n\nexport const PasswordLoginRoute: React.FC = () => {\n  const { auth } = useRoot()\n  return auth.isAuthenticatedUser ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <PasswordLoginPage model={auth.provider.passwordLogin} />\n  )\n}\n\nexport default PasswordLoginRoute\n"],"sourceRoot":""}