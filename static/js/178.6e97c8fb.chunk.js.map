{"version":3,"sources":["molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","molecules/TouchButtonEdit.tsx","../node_modules/@material-ui/icons/esm/RemoveRedEye.js","molecules/TouchButtonVisibility.tsx","atoms/DataTable.tsx","atoms/CardDock.tsx","segments/menu/hooks/useMenuRouting.ts","atoms/ScrollArea.tsx","helpers/filter.ts","hooks/useAccessGuard.ts","atoms/BlockLoader.tsx","atoms/NoteText.tsx","segments/menu/labels.ts","segments/menu/molecules/MenuFilterInput.tsx","segments/menu/molecules/CreateButton.tsx","segments/menu/menutypes.ts","segments/menu/molecules/MenuCategoryFilter.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipeListPage.tsx","../node_modules/@material-ui/icons/esm/RemoveCircleOutline.js","molecules/TouchButtonRemove.tsx","atoms/FormInputFlatSelect.tsx","atoms/FormInputSelect.tsx","atoms/DragHandle.tsx","../node_modules/resolve-pathname/esm/resolve-pathname.js","atoms/RelativeLink.tsx","atoms/PictogramDisplay.tsx","atoms/DataList.tsx","../node_modules/@material-ui/icons/esm/Search.js","../node_modules/apollo-client/errors/ApolloError.js","../node_modules/apollo-client/util/arrays.js","molecules/SortableDataTable.tsx","segments/menu/molecules/CategoryListTable.tsx","segments/menu/organisms/CategoryList.tsx","segments/menu/organisms/MenuGuideDownload.tsx","segments/menu/pages/MenuCategoryListPage.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/molecules/SubmitButton.tsx","atoms/FormContainer.tsx","segments/settings/atoms/WithSettings.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/molecules/MenuCategoryOrigins.tsx","segments/menu/organisms/CategoryFormBasic.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","segments/menu/organisms/CategoryFormLoader.tsx","../node_modules/@material-ui/icons/esm/Toll.js","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormPricingField.tsx","atoms/FormDisplayField.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/molecules/CategoryRequirementControl.tsx","segments/menu/organisms/CategoryRequirementsForm.tsx","segments/menu/pages/MenuCategoryPage.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeCategoryView.tsx","../node_modules/@material-ui/icons/esm/ErrorOutline.js","segments/menu/molecules/FormInputCode.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","../node_modules/@material-ui/icons/esm/Done.js","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/atoms/ImportCheckbox.tsx","segments/menu/hooks/useTransferModel.ts","segments/menu/molecules/StockTransferAmountInput.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormLoader.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","../node_modules/@material-ui/icons/esm/Fingerprint.js","segments/menu/molecules/FormInputPlu.tsx","../node_modules/@material-ui/icons/esm/SelectAll.js","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/organisms/StockFormMain.tsx","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/molecules/ConfirmTransferButton.tsx","segments/menu/molecules/ImportModeToggle.tsx","segments/menu/molecules/TransferSourceBranchPicker.tsx","../node_modules/@material-ui/icons/esm/ArrowRightAlt.js","segments/menu/molecules/TransferTargetBranchPicker.tsx","segments/menu/pages/MenuStockTransferPage.tsx","segments/menu/routes/MenuRoutes.tsx"],"names":["StyledPageLayoutFullHeightItem","styled","div","withConfig","displayName","componentId","mediaDesktop","_templateObject","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","column","row","mediaMobile","_templateObject2","_ref","rowInMobile","_ref2","forcePercentHeightInMobile","concat","PageHeaderHeight","DefaultSizeUnit","PageLayoutFullHeightItem","_ref3","children","_ref3$row","_ref3$rowInMobile","_ref3$column","_ref3$widthInColumns","_ref3$withScrollArea","withScrollArea","scrollAreaId","forceHeightInMobile","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_4__","id","_atoms_Sizer__WEBPACK_IMPORTED_MODULE_5__","height","heightUnit","FlexRowSingle","_ref$flexWrap","flexWrap","_ref2$justify","justify","VerticalGap","_ref$size","size","_ref$sizeUnit","sizeUnit","TouchButtonEdit","target","_ref$Link","Link","RelativeLink","Object","objectWithoutProperties","react_default","to","SizerButton","TouchButton","assign","icon","Edit","RemoveRedEye","createSvgIcon","d","TouchButtonVisibility","isVisible","iconColor","Colors","white","greyMiddle","color","DataTable","items","_props$heightStretch","heightStretch","_props$fullHeight","fullHeight","_props$rowHeight","rowHeight","_props$isLoading","isLoading","tableProps","rowGetter","React","useCallback","index","noRowsRenderer","BlockLoader","renderTable","width","es","autoHeight","headerHeight","rowCount","length","style","outline","disableHeight","scrollElement","window","_ref4","_ref5","checkColumnAccess","_ref6","renderer","canQuery","canMutate","cellProps","result","CanQuery","queryName","CanMutate","mutationName","ColumnRendererEdit","_ref7","cellData","TouchButtonEdit_TouchButtonEdit","ColumnRendererRemove","_ref8","columnData","TouchButtonRemove","onClick","onRemove","ColumnRendererVisibility","_ref9","rowData","TouchButtonVisibility_TouchButtonVisibility","onToggle","ColumnRendererWithNote","_ref10","Fragment","NoteText","noteKey","DataTableEmptyText","_ref11","_ref11$text","text","i18n","_","CardDock","position","__webpack_require__","__webpack_exports__","MENU_ROUTE","useMenuRouting","_speedlo_hooks__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","RECIPE_ROUTE","CATEGORY_ROUTE","STOCK_ROUTE","location","useRouterContext","itemType","useMemo","URLSearchParams","search","get","getItemRoute","itemId","getRecipeListRoute","getRecipeCreateRoute","recipeType","getRecipeEditRoute","recipeId","getCategoryListRoute","getCategoryCreateRoute","categoryType","getCategoryEditRoute","categoryId","getStockListRoute","getStockDepositRoute","getStockTransferRoute","getStockCreateRoute","getStockEditRoute","ScrollArea","isPartialMatch","searchValue","toLocaleLowerCase","propValue","includes","useCanQuery","useCanMutate","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_0__","useAccessGuard","queries","mutations","user","useRoot","every","_len","arguments","Array","_key","_len2","_key2","ScaleOut","keyframes","ScaleOutWebkit","StyledBlockLoader","orange","className","categories","_categories","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","WareCategoryTypeEnum","Main","i18nMark","SideDish","Cover","recipes","_recipes","getCategoryTypeLabel","getRecipeTypeLabel","MenuFilterInput","_material_ui_icons__WEBPACK_IMPORTED_MODULE_0__","_speedlo_hooks__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","_atoms_FormInputStyled__WEBPACK_IMPORTED_MODULE_3__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_4__","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_5__","_atoms_Sizer__WEBPACK_IMPORTED_MODULE_6__","_i18n__WEBPACK_IMPORTED_MODULE_7__","modelType","model","settings","menu","onChange","useDebounceCallback","setFilterInput","Search","defaultValue","filterInput","inputFullWidth","ev","value","placeholder","CreateButtonContainer","CreateButton","routeTo","button","_atoms_SizerButton__WEBPACK_IMPORTED_MODULE_5__","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_6__","AddCircle","green","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","_graph_generated__WEBPACK_IMPORTED_MODULE_0__","MenuCategoryFilter","observer","recipe","_useQMenuCategoryFilt","useQMenuCategoryFilter","branchId","data","loading","Sizer","SelectControl","key","setCategoryFilter","options","grouped","RM","groupBy","cat","enum","toString","keys","map","typeString","label","getOptions","isMulti","isClearable","isSearchable","getOptionValue","prop","getOptionLabel","propOr","RecipeTypeSelection","_React$useState","useState","_React$useState2","slicedToArray","isOpen","setOpen","history","onSelect","push","preventDefault","Dialog","open","onClose","DialogTitle","_lingui_react","RecipeListTable","_ref$showEditColumn","showEditColumn","_ref$showRemoveColumn","showRemoveColumn","_ref$showVisibilityCo","showVisibilityColumn","_ref$showTypeColumn","showTypeColumn","_ref$isLoading","_ref$heightStretch","react_content_loader_es","Headline","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","cellDataGetter","ColumnRendererCode","flexGrow","ColumnRendererPrice","priceType","TPriceType","Delivery","Inhouse","defaults","prices","foundPrice","find","pathEq","price","formattedValue","type","RecipeListLoader","_useQMenuRecipeList","useQMenuRecipeList","categoryFilterId","filteredRecipes","useComputed","partialMatch","filter","cond","propSatisfies","T","RecipeListTable_RecipeListTable","changeVisibility","StyledFilterWithTableContainer","MenuRecipeListPage","FullPageLayout","pageTitle","useBackButton","Card","stretchToParent","FlexColumn","SettingsCompanyBranchPicker","RecipeTypeSelection_RecipeTypeSelection","RemoveCircleOutline","esm_extends","FormInputFlatSelect","_speedlo_tools__WEBPACK_IMPORTED_MODULE_0__","react_form__WEBPACK_IMPORTED_MODULE_2__","_i18n__WEBPACK_IMPORTED_MODULE_3__","_SelectControlFlat__WEBPACK_IMPORTED_MODULE_4__","field","_props$fieldIsPure","fieldIsPure","_props$isClearable","_props$isMulti","_props$isRequired","isRequired","_props$validationName","validationName","_props$getItemId","getItemId","idProp","pure","validate","isArray","fieldApi","selection","selectedItems","item","onMultiSelection","setValue","setTouched","selectedItem","onSingleSelection","getControlProps","isInvalid","Boolean","error","FormInputSelect","_React$Component","_getPrototypeOf2","_this","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","args","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","apply","_i18n__WEBPACK_IMPORTED_MODULE_10__","0","validatioName","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_this$props","isSelected","F","selectedOptions","option","_this2","_this$props2","_this$props2$fieldIsP","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7___default","react_form__WEBPACK_IMPORTED_MODULE_8__","_SelectControl__WEBPACK_IMPORTED_MODULE_11__","onFocus","styles","control","base","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","borderColor","Component","defaultProps","StyledDragHandle","DragHandle","SortableHandle","_Icon__WEBPACK_IMPORTED_MODULE_5__","Reorder","isAbsolute","pathname","charAt","spliceOne","list","i","k","pop","resolve_pathname","from","hasTrailingSlash","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","last","up","part","unshift","join","substr","linkProps","react_router","react_router_dom","resolveLocation","resolvePathname","resolved","objectSpread","PictogramDisplay","attrs","getPictogramClassName","pictogramId","_ref$fontSize","fontSize","_ref$fontSizeUnit","fontSizeUnit","DataList","renderItem","listProps","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","rowRenderer","renderList","react_virtualized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","defineProperty","exports","tslib_1","arrays_1","isApolloError","err","hasOwnProperty","generateErrorMessage","message","isNonEmptyArray","graphQLErrors","forEach","graphQLError","errorMessage","networkError","replace","ApolloError","_super","_a","extraInfo","__proto__","prototype","__extends","Error","SortableTableRowRenderer","SortableElement","columns","SortableDataTableContainer","SortableContainer","SortableDataTable","_React$PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","sortedItems","rowProps","onHandleSorting","asyncToGenerator","regenerator_default","mark","_callee","newIndex","oldIndex","currentItems","sortSuccess","wrap","_context","prev","next","abrupt","toConsumableArray","arrayMove","setState","onSort","offset","t0","sent","stop","_x","inherits","createClass","lockAxis","useDragHandle","onSortEnd","PureComponent","getDerivedStateFromProps","nextProps","CategoryListTable","_ref$showHeader","showHeader","_ref$isSortable","isSortable","_ref$fullHeight","_ref$noRowsDisplay","noRowsDisplay","disableHeader","StyledCategoryList","greyLight","headline","_ref$subHeadline","subHeadline","_useQMenuCategoryList","useQMenuCategoryList","updateQuery","refetch","dataOrigins","useQMenuCategoryOrigins","originsMap","origins","reduce","acc","origin","code","renderOrigins","sort","originEnum","_useMMenuCategoryVisi","useMMenuCategoryVisibility","widthGrowIndex","fixedWidth","CategoryListTable_CategoryListTable","visible","optimisticResponse","updateWareCategory","__typename","category","sortCategory","MenuGuideDownloadButton","MenuGuideDownload_templateObject","black","MenuGuideDownload","_useQMenuGuideDownloa","useQMenuGuideDownload","companyBranch","foodMenuUrl","href","rel","PartialDataTableContainer","MenuCategoryListPage_templateObject","MenuCategoryListPage","organisms_CategoryList","TopRightButtonContainer","TopRightButtonContainer_templateObject","Radiuses","Button","IsCategoryType","isMain","isSideDish","isCover","SubmitButton","_ref$isCreate","isCreate","render","form","FormSubmit","isFormValid","getButtonText","FormContainer","FormContainer_templateObject","FormColumn","WithSettings","observe","WithRoot","_render","MenuCategoryPictogramSelect","pictogram","availablePictograms","formatOptionLabel","components","SingleValue","container","menuList","maxHeight","FormDeleteButton","confirmText","onDelete","TouchButtonDelete","goBack","FormInputInternalNote","_ref$field","_ref$label","IconLine","labelWidth","FormInputTextBox","FormInputName","Label","MenuCategoryOrigins","_useQMenuCategoryOrig","CategoryBasicForm","FormInputName_FormInputName","FormInputInternalNote_FormInputInternalNote","MenuCategoryOrigins_MenuCategoryOrigins","FormInputCheckbox","MenuCategoryPictogramSelect_MenuCategoryPictogramSelect","WithSettings_WithSettings","FormDeleteButton_FormDeleteButton","deleteCategory","FormLoader","shouldLoad","loader","_useState","_useState2","values","setValues","useEffect","then","NavigateBack","ErrorPop","MenuBaseFormLoader_templateObject","MenuBaseFormLoader","submitError","validationErrors","_this$state","renderSubmitError","renderValidationErrors","messages","propEq","userErrors","renderPopover","errors","Popover","anchorEl","document","getElementById","anchorOrigin","vertical","horizontal","idx","_this3","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack_NavigateBack","defaultValues","loadedDefaults","formApi","logForm","onSubmit","_callee2","_context2","onSubmitFailure","logError","renderErrors","useMenu","CategoryFormLoader","MenuBaseFormLoader_MenuBaseFormLoader","createCategory","updateCategory","internalNoteLabel","nameLabel","minCount","maxCount","getDefaults","client","query","QMenuCategoryDocument","variables","fetchPolicy","Toll","fill","formInputPriceValidate","isEmpty","validateNumber","FormInputPrice","VatsQuery","gql","FormInputVatSelect_graphql_templateObject","QueryVat","buildQuery","css","FormInputVatSelect_templateObject","FormInputVatSelect","useObserver","renderLoading","vats","formatItem","vat","FormPricingCurrencyCode","FormPricingField_templateObject","FormPricingField","FormInputPrice_FormInputPrice","FormInputVatSelect_FormInputVatSelect","MenuSuggestionPanel","onAdd","_props$addLabel","addLabel","_props$addButtonText","addButtonText","selectProps","_useStateRef","useStateRef","_useStateRef2","getSelected","setSelected","onConfirm","selected","onKeyDown","margin","disabled","RecipeAssocListTable","RecipeAssociatedView","priceTypeRecipes","rejectSuggestions","reject","some","onAddRecipe","addedRecipe","warePriceType","associatedRecipe","formattedPrice","RecipeAssocListTable_RecipeAssocListTable","RecipeForm_graphql","priceTypes","WarePriceTypeEnum","RecipeFormPricing","react","FormPricingField_FormPricingField","TRecipeType","RecipeAssociatedView_RecipeAssociatedView","RecipeSuggestionPanel","filterRecipes","Container","CategoryRecipesView_templateObject","FormFixedRow","CategoryRecipesView_templateObject2","FormStretchedRow","_templateObject3","SortableRecipes","RecipeRow","_templateObject4","MoveCell","_templateObject5","SortableRecipe","internalNote","CategoryRecipesView","without","lockToContainerEdges","StyledCategoryRequirementControl","CategoryRequirementControl_templateObject","CategoryRequirementControl","count","enabled","countRef","useRef","htmlFor","FormInputStyled","_onChange","validity","valid","Number","parseInt","select","pattern","StyledCheckbox","checked","_onChange2","_x2","current","getRulesMap","noLimit","min","max","optional","required","onlyOne","custom","CategoryRequirementsForm","ruleMap","currentRule","setRule","getValue","found","findKey","setMinCount","setMaxCount","SelectControlFlat","req","selectedRule","rule","CategoryRequirementControl_CategoryRequirementControl","MenuCategoryPage","match","params","_useMenuRouting","CategoryFormLoader_CategoryFormLoader","hideLogoutWidget","MenuCategoryPage_FormContainer","MenuCategoryPage_FormFixedRow","CategoryFormBasic_CategoryBasicForm","IsCategoryType_IsCategoryType","component","MenuCategoryPage_FormStretchedRow","CategoryRecipesView_CategoryRecipesView","SubmitButton_SubmitButton","currentCategories","RecipeCategoryView","noRowsText","organisms_CategorySuggestionPanel","addedCategory","ErrorOutline","FormInputCode","FormInputDescription","AllergensQuery","FormInputAllergens_graphql_templateObject","FMenuAllergenFragmentDoc","QueryAllergens","AllergenBox","AllergenIndicator_templateObject","MarginAroundFormComponents","active","AllergenIndicator_templateObject2","yellow","MenuAllergenIndicator","allergens","allergen","title","RecipeAllergenDisplay","uniq","flatten","AllergenIndicator_MenuAllergenIndicator","RecipeFormBasic","FormInputCode_FormInputCode","FormInputDescription_FormInputDescription","RecipeAllergenDisplay_RecipeAllergenDisplay","deleteRecipe","RecipeFormLoader","createRecipe","updateRecipe","currencyCode","queryDefaults","getPriceMap","vatId","MenuRecipeFormQuery","normalizeValues","descriptionLabel","image","sourcePrices","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","recipeSource","quantity","_ref7$stockItem","stockItem","unitLabel","wareUnit","sourcePrice","currency","RecipeIngredientsTable","rowIndex","validateQuantity","fieldName","validator","isFloat","unselectedStockOnly","differenceWith","RecipeIngredientsControl","_useQMenuStockList","useQMenuStockList","RecipeIngredientsTable_RecipeIngredientsTable","stockItems","_onAdd","addedStockItem","RecipeIngredientsView","ingredient","stockItemId","MenuRecipePage","RecipeFormLoader_RecipeFormLoader","MarginBox","RecipeFormBasic_RecipeFormBasic","RecipeFormPricing_RecipeFormPricing","RecipeIngredientsView_RecipeIngredientsView","RecipeCategoryView_RecipeCategoryView","StockDepositConfirmButton","numeral","format","priceFormat","1","StockDepositFilterInput","forwardRef","ref","onFilter","autoFocus","onKeyPressCapture","StockDepositQuantityInput","Done","StockDepositResultTable","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","StockDepositResultTable_templateObject","indexOf","begin","substring","end","StockDepositControl","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","trim","head","onConfirmFilter","focus","onQuantity","onSelectStockItem","onDeposit","prevProps","_this$state2","hasSearchValue","isNoneFind","isMultiFind","StockDepositConfirmButton_StockDepositConfirmButton","cardName","StockDepositResultTable_StockDepositResultTable","StockDepositLoader","_useQMenuStockDeposit","useQMenuStockDeposit","_useMMenuStockQuantit","useMMenuStockQuantity","changeQuantity","quantityChange","MenuStockDepositPage","StockDepositControl_StockDepositControl","ImportCheckbox","sideText","useTransferModel","stock","transfer","StockTransferAmountInput","inputRef","setQuantity","getItemTransferQuantity","targetId","numberRx","source","invalid","hasInvalidAmount","StyledDataTable","StockListTable_templateObject","VerticallyCenteredFlexContainer","StockListTable_templateObject2","StockListTable","isTransferTable","unfilteredItems","allowNegative","MAX_SAFE_INTEGER","Math","getItemMaxLimit","initItems","filterItems","renderImportItemCheckbox","index_module","ImportCheckbox_ImportCheckbox","isImportingItem","toggleImportItem","renderImportAllHeader","isImportingAll","toggleImportAll","renderAmountInput","quantityColumn","Loading","isImportMode","headerRenderer","isTransferMode","stockAllowNegative","StockListLoader","_ref$isTransferring","isTransferring","MenuStockListPage","MenuStockFormQuery","StockForm_graphql_templateObject","FMenuWareUnitFragmentDoc","MenuStockDefaultsQuery","StockForm_graphql_templateObject2","StockFormLoader","stockId","createItem","updateItem","allowNegativeDefault","getAllowNegativeDefault","note","plu","FieldStateEnum","Default","isEnabled","Disabled","FormInputAllergens","Enabled","FormInputAllowNegative","labelForDefault","Fingerprint","FormInputPlu","SelectAll","WareUnitsQuery","FormInputWareUnit_graphql_templateObject","QueryWareUnits","FormInputWareUnit","wareUnits","StockFormMain","FormInputWareUnit_FormInputWareUnit","FormInputPlu_FormInputPlu","FormInputAllergens_FormInputAllergens","FormInputAllowNegative_FormInputAllowNegative","deleteItem","StockRecipesView","_useQStockRecipes","useQStockRecipes","MenuStockPage","StockFormLoader_StockFormLoader","StockFormMain_StockFormMain","StockRecipesVIew_StockRecipesView","StyledConfirmTransferButton","ConfirmTransferButton_templateObject","ConfirmTransferButton_templateObject2","Middle","ConfirmTransferButton_templateObject3","ConfirmTransferButton","enqueueSuccess","useSnackBar","_useMCreateTransfers","useMCreateTransfers","createTransfers","canTransferStockItems","targetBranch","noTargetSelected","transfers","transferVariables","itemsForTransfer","gt","clearTransferState","ImportModeToggle","toggleImportMode","TransferSourceBranchPicker","ArrowRightAlt","TransferTargetBranchPicker","branchesWithoutSourceBranch","idPropEq","sourceId","branches","CompanyBranchPicker","selectedBranches","onSelectionChange","branch","setTargetId","onSelectionClear","getDropdownProps","hideWhenSingleBranch","StyledTopContainer","MenuStockTransferPage_templateObject","VerticallyCenteredRow","MenuStockTransferPage_templateObject2","MenuStockTransferPage","canAccessPage","hasSingleBranch","topContent","TransferSourceBranchPicker_TransferSourceBranchPicker","MenuRoutes_MenuRoutes","MenuRoutes","routing","SecureRoute","path","NotFoundPage"],"mappings":"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","file":"static/js/178.6e97c8fb.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => (\n  <StyledPageLayoutFullHeightItem\n    column={column}\n    row={row}\n    rowInMobile={rowInMobile}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n    forcePercentHeightInMobile={forceHeightInMobile}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <Sizer height={100} heightUnit=\"%\">\n        {children}\n      </Sizer>\n    )}\n  </StyledPageLayoutFullHeightItem>\n)\n","import styled from 'styled-components'\n\ninterface IProps {\n  flexWrap?: string\n  justify?: string\n}\n\nexport const FlexRowSingle = styled.div<IProps>`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: ${({ flexWrap = 'unset' }: IProps) => flexWrap};\n  justify-content: ${({ justify = 'space-between' }: IProps) => justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import { Edit } from '@material-ui/icons'\nimport { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends LegacyOmit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.FC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <SizerButton>\n      <TouchButton icon={Edit} {...props} />\n    </SizerButton>\n  </Link>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');","import { RemoveRedEye } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.FC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      icon={RemoveRedEye}\n      iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n      color={Colors.greyMiddle}\n      {...props}\n    />\n  </SizerButton>\n)\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Index,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { BlockLoader } from './BlockLoader'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport { NoteText } from './NoteText'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  rowHeight?: number\n  isLoading?: boolean\n  heightStretch?: boolean\n  fullHeight?: boolean\n}\n\nexport const DataTable = <T extends {}>(props: IDataTableProps<T>) => {\n  const {\n    items,\n    heightStretch = false,\n    fullHeight = false,\n    rowHeight = 60,\n    isLoading = false,\n    children,\n    ...tableProps\n  } = props\n\n  const rowGetter = React.useCallback(({ index }: Index) => items[index], [\n    items,\n  ])\n\n  const noRowsRenderer = React.useCallback(\n    () => (isLoading ? <BlockLoader /> : null),\n    [isLoading],\n  )\n\n  const renderTable = (width: number, height: number) => {\n    return (\n      <Table\n        autoHeight={!heightStretch && !fullHeight}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowCount={items ? items.length : 0}\n        rowHeight={rowHeight}\n        rowGetter={rowGetter}\n        noRowsRenderer={noRowsRenderer}\n        style={{ outline: 'none' }}\n        {...tableProps}\n      >\n        {children}\n      </Table>\n    )\n  }\n\n  if (fullHeight) {\n    return (\n      <AutoSizer disableHeight={true}>\n        {({ width }) => renderTable(width, items.length * rowHeight)}\n      </AutoSizer>\n    )\n  }\n\n  if (heightStretch) {\n    return (\n      <AutoSizer>{({ width, height }) => renderTable(width, height)}</AutoSizer>\n    )\n  }\n\n  return (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderTable(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import styled from 'styled-components/macro'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nexport const CardDock = styled.div<IProps>`\n  position: absolute;\n  ${({ position }) =>\n    position === 'BottomRight' || position === 'BottomLeft'\n      ? 'bottom: 0'\n      : 'top: 0'};\n  ${({ position }) =>\n    position === 'BottomLeft' || position === 'TopLeft'\n      ? 'left: 0'\n      : 'right: 0'};\n`\n","import { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TCategoryType, TRecipeType } from '../menutypes'\n\nexport const MENU_ROUTE = '/settings/menu'\nconst RECIPE_ROUTE = `${MENU_ROUTE}/recipe`\nconst CATEGORY_ROUTE = `${MENU_ROUTE}/category`\nconst STOCK_ROUTE = `${MENU_ROUTE}/stock`\n\nexport function useMenuRouting() {\n  const { location } = useRouterContext()\n\n  const itemType = React.useMemo(\n    () =>\n      new URLSearchParams(location.search).get('type') as Maybe<\n        WareCategoryTypeEnum\n      >,\n    [location.search],\n  )\n\n  const getItemRoute = (itemId: ID, itemType?: WareCategoryTypeEnum) => {\n    return itemType ? `${itemId}?type=${itemType}` : itemId\n  }\n\n  const getRecipeListRoute = () => RECIPE_ROUTE\n  const getRecipeCreateRoute = (recipeType: TRecipeType) =>\n    getItemRoute(`${RECIPE_ROUTE}/create`, recipeType)\n  const getRecipeEditRoute = (recipeId: ID, recipeType?: TRecipeType) =>\n    getItemRoute(`${RECIPE_ROUTE}/${recipeId}`, recipeType)\n\n  const getCategoryListRoute = () => CATEGORY_ROUTE\n  const getCategoryCreateRoute = (categoryType: TCategoryType) =>\n    getItemRoute(`${CATEGORY_ROUTE}/create`, categoryType)\n  const getCategoryEditRoute = (categoryId: ID, categoryType?: TCategoryType) =>\n    getItemRoute(`${CATEGORY_ROUTE}/${categoryId}`, categoryType)\n\n  const getStockListRoute = () => STOCK_ROUTE\n  const getStockDepositRoute = () => `${STOCK_ROUTE}/deposit`\n  const getStockTransferRoute = () => `${STOCK_ROUTE}/transfer`\n  const getStockCreateRoute = () => getItemRoute(`${STOCK_ROUTE}/create`)\n  const getStockEditRoute = (categoryId: ID, categoryType?: TCategoryType) =>\n    getItemRoute(`${STOCK_ROUTE}/${categoryId}`, categoryType)\n\n  return {\n    itemType,\n    getItemRoute,\n    getRecipeListRoute,\n    getRecipeCreateRoute,\n    getRecipeEditRoute,\n    getCategoryListRoute,\n    getCategoryCreateRoute,\n    getCategoryEditRoute,\n    getStockListRoute,\n    getStockDepositRoute,\n    getStockTransferRoute,\n    getStockCreateRoute,\n    getStockEditRoute,\n  }\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nconst ScaleOut = keyframes`\n  0% {\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    opacity: 0;\n  }\n`\n\nconst ScaleOutWebkit = keyframes`\n  0% {\n    -webkit-transform: scale(0);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    opacity: 0;\n  }\n`\n\nconst StyledBlockLoader = styled.div`\n  width: 40px;\n  height: 40px;\n  margin: 100px auto;\n  background-color: ${Colors.orange};\n\n  border-radius: 100%;\n  -webkit-animation: ${ScaleOutWebkit} 1s infinite ease-in-out;\n  animation: ${ScaleOut} 1s infinite ease-in-out;\n`\n\nexport const BlockLoader: React.FC = props => {\n  return (\n    <StyledBlockLoader>\n      <div className=\"bounce1\" />\n      <div className=\"bounce2\" />\n      <div className=\"bounce3\" />\n    </StyledBlockLoader>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menutypes'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport function getCategoryTypeLabel(categoryType: TCategoryType) {\n  return i18n._(categories[categoryType])\n}\n\nexport function getRecipeTypeLabel(recipeType: TRecipeType) {\n  return i18n._(recipes[recipeType])\n}\n","import { Search } from '@material-ui/icons'\nimport { useDebounceCallback } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <Sizer width={17}>\n        <FormInputStyled\n          defaultValue={model.filterInput}\n          inputFullWidth={true}\n          onChange={ev => onChange(ev.target.value)}\n          placeholder={i18n.t`Filter by name or code`}\n        />\n      </Sizer>\n    </IconLine>\n  )\n}\n","import { AddCircle } from '@material-ui/icons'\nimport { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.FC<IProps> = ({ routeTo, onClick }) => {\n  const button = (\n    <SizerButton>\n      <TouchButton icon={AddCircle} color={Colors.green} onClick={onClick} />\n    </SizerButton>\n  )\n\n  return (\n    <CreateButtonContainer>\n      {routeTo ? <Link to={routeTo}>{button}</Link> : button}\n    </CreateButtonContainer>\n  )\n}\n","import { AllergenEnum, WarePriceTypeEnum } from '../../graph/generated'\nimport { GMenuRecipeForm, GMenuRecipePrice } from '../../graph/types'\n\nexport {\n  WareCategoryTypeEnum as TCategoryType,\n  WareCategoryTypeEnum as TRecipeType,\n  WarePriceTypeEnum as TPriceType,\n} from '../../graph/generated'\n\nexport type TAssocRecipe = {\n  warePriceType: WarePriceTypeEnum\n  associatedRecipe: ID\n  nameLabel?: string\n  formattedPrice?: string\n}\n\nexport type TIngredient = {\n  stockItem: ID\n  label: string\n  quantity: number | string\n  unitLabel: string\n  allergens: AllergenEnum[]\n}\n\nexport type TPricing = GMenuRecipePrice.Fragment\nexport type TRecipeFormValues = GMenuRecipeForm.Recipe & {\n  associatedRecipes: TAssocRecipe[]\n  ingredients: TIngredient[]\n  prices: {\n    [priceType in WarePriceTypeEnum]: {\n      value: number\n      vatId: MaybeID\n      currencyCode: string\n    }\n  }\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  QMenuCategoryFilterCategories,\n  useQMenuCategoryFilter,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { getCategoryTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\n\ntype TCategory = QMenuCategoryFilterCategories\n\nexport const MenuCategoryFilter = observer(() => {\n  const {\n    settings: {\n      menu: { recipe },\n    },\n  } = useRoot()\n\n  const { data, loading } = useQMenuCategoryFilter({\n    branchId: recipe.branchId,\n  })\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return []\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TRecipeType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        key={recipe.branchId}\n        onChange={value => {\n          recipe.setCategoryFilter(value ? (value as TCategory).id : null)\n        }}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={true}\n        isSearchable={true}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.propOr('', 'nameLabel')}\n      />\n    </Sizer>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { TRecipeType } from '../menutypes'\nimport { CreateButton } from './CreateButton'\n\nexport const RecipeTypeSelection: React.FC = () => {\n  const [isOpen, setOpen] = React.useState(false)\n  const { history } = useRouterContext()\n  const { getRecipeCreateRoute } = useMenuRouting()\n\n  const onSelect = (recipeType: TRecipeType) => () => {\n    history.push(getRecipeCreateRoute(recipeType))\n  }\n\n  return (\n    <>\n      <CreateButton\n        onClick={ev => {\n          ev.preventDefault()\n          setOpen(true)\n        }}\n      />\n      <Dialog open={isOpen} onClose={() => setOpen(false)}>\n        <DialogTitle>Select item type</DialogTitle>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Main)}>\n          <Trans>Ware</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.SideDish)}>\n          <Trans>Sidedish</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Cover)}>\n          <Trans>Cover</Trans>\n        </TouchButton>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport {\n  QMenuRecipeListRecipes,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { TPriceType } from '../menutypes'\n\ntype TRecipe = QMenuRecipeListRecipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.FC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  const { getRecipeEditRoute } = useMenuRouting()\n  return (\n    <DataTable {...props}>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeEditRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n    </DataTable>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuRecipeList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuRecipeList({\n    branchId: settings.branchId,\n    categoryId: settings.menu.recipe.categoryFilterId,\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data || !data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuCategoryFilter } from '../molecules/MenuCategoryFilter'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const StyledFilterWithTableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  & .filter {\n    flex: 0 0 auto;\n  }\n\n  & .table {\n    flex: 1 1 0;\n    min-height: 0;\n  }\n`\n\nexport const MenuRecipeListPage: React.FC = props => (\n  <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true}>\n    <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n      <Card stretchToParent={true}>\n        <StyledFilterWithTableContainer>\n          <div className=\"filter\">\n            <FlexRowSingle justify=\"start\" flexWrap=\"wrap\">\n              <FlexColumn>\n                <SettingsCompanyBranchPicker width={20} />\n              </FlexColumn>\n              <FlexColumn>\n                <MenuFilterInput modelType=\"recipe\" />\n              </FlexColumn>\n              <FlexColumn>\n                <MenuCategoryFilter />\n              </FlexColumn>\n            </FlexRowSingle>\n            <CanMutate mutationName=\"createRecipe\">\n              <RecipeTypeSelection />\n            </CanMutate>\n          </div>\n          <div className=\"table\">\n            <RecipeListLoader />\n          </div>\n        </StyledFilterWithTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </FullPageLayout>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'RemoveCircleOutline');","import { RemoveCircleOutline } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.FC<IProps> = ({ ...props }) => (\n  <SizerButton>\n    <TouchButton icon={RemoveCircleOutline} {...props} />\n  </SizerButton>\n)\n","import { idProp } from '@speedlo/tools'\nimport React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends LegacyOmit<\n    ISelectControlFlatProps<ItemType>,\n    'selectedItems' | 'onMultiSelection' | 'selectedItem' | 'onSingleSelection'\n  > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n}\n\nexport const FormInputFlatSelect = <ItemType extends Record<string, any>>(\n  props: IFormInputSelectProps<ItemType>,\n) => {\n  const {\n    items,\n    field,\n    fieldIsPure = false,\n    isClearable = false,\n    isMulti = false,\n    isRequired = false,\n    validationName = i18n.t`Value`,\n    getItemId = idProp as AnyFunction,\n  } = props\n\n  const validate = value => {\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && (value === null || value === undefined)) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n\n  const getControlProps = (\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> => {\n    const selection = fieldApi.value\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) => selection.includes(getItemId(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n\n  return (\n    <Field field={field} pure={fieldIsPure} validate={validate}>\n      {fieldApi => (\n        <SelectControlFlat<ItemType>\n          {...getControlProps(fieldApi)}\n          isInvalid={Boolean(fieldApi.error)}\n          isClearable={isClearable && !isRequired}\n          {...props}\n        />\n      )}\n    </Field>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const { field, fieldIsPure = false, defaultValue, ...props } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import { Reorder } from '@material-ui/icons'\nimport React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IProps {}\n\nconst StyledDragHandle = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IProps>(() => (\n  <StyledDragHandle>\n    <Icon icon={Reorder} />\n  </StyledDragHandle>\n))\n","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import '@speedlo/assets/Flaticon.css'\n\nimport styled from 'styled-components/macro'\n\nimport { Spacing } from '../styling'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst getFontSize = ({\n  fontSize = 2,\n  fontSizeUnit = Spacing.DefaultSizeUnit,\n}: IProps) => `${fontSize}${fontSizeUnit}`\n\nexport const PictogramDisplay = styled.div.attrs<IProps>(({ pictogramId }) => ({\n  className: getPictogramClassName(pictogramId),\n}))<IProps>`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport function getPictogramClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  List,\n  ListProps,\n  ListRowRenderer,\n  WindowScroller,\n} from 'react-virtualized'\n\ninterface IColumn {\n  size: string\n}\n\ninterface IDataListProps<T> extends Partial<ListProps> {\n  items: ReadonlyArray<T>\n  columns?: IColumn[]\n  renderItem(item: T, index: number): ReactNode\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport function DataList<T>(props: IDataListProps<T>) {\n  const {\n    items,\n    renderItem,\n    heightStretch = false,\n    rowHeight = 60,\n    ...listProps\n  } = props\n\n  const rowRenderer: ListRowRenderer = React.useCallback(\n    ({ key, style, index }) => (\n      <div key={key} style={style}>\n        {renderItem(items[index], index)}\n      </div>\n    ),\n    [renderItem, items],\n  )\n\n  const renderList = (width: number, height: number) => (\n    <List\n      width={width}\n      height={height}\n      headerHeight={50}\n      rowHeight={rowHeight}\n      rowCount={items ? items.length : 0}\n      rowRenderer={rowRenderer}\n      style={{ outline: 'none' }}\n      {...listProps}\n    />\n  )\n\n  return heightStretch ? (\n    <AutoSizer>{({ width, height }) => renderList(width, height)}</AutoSizer>\n  ) : (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderList(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar arrays_1 = require(\"../util/arrays\");\n\nfunction isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\nexports.isApolloError = isApolloError;\n\nvar generateErrorMessage = function generateErrorMessage(err) {\n  var message = '';\n\n  if (arrays_1.isNonEmptyArray(err.graphQLErrors)) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += \"GraphQL error: \" + errorMessage + \"\\n\";\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nvar ApolloError = function (_super) {\n  tslib_1.__extends(ApolloError, _super);\n\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        networkError = _a.networkError,\n        errorMessage = _a.errorMessage,\n        extraInfo = _a.extraInfo;\n\n    var _this = _super.call(this, errorMessage) || this;\n\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      _this.message = generateErrorMessage(_this);\n    } else {\n      _this.message = errorMessage;\n    }\n\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n\n  return ApolloError;\n}(Error);\n\nexports.ApolloError = ApolloError;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction isNonEmptyArray(value) {\n  return Array.isArray(value) && value.length > 0;\n}\n\nexports.isNonEmptyArray = isNonEmptyArray;","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.PureComponent<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  rowRenderer = rowProps => {\n    return <SortableTableRowRenderer {...rowProps} />\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        lockAxis=\"y\"\n        useDragHandle={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={this.rowRenderer}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FMenuCategoryListItemFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\n\ntype TCategory = FMenuCategoryListItemFragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  fullHeight?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.FC<IProps> = ({\n  categories,\n  children,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  fullHeight = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    heightStretch,\n    fullHeight,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  const { getCategoryEditRoute } = useMenuRouting()\n  const columns = [\n    showEditColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canQuery: 'wareCategory' },\n          ColumnRendererEdit,\n        )}\n        cellDataGetter={({ rowData }) =>\n          getCategoryEditRoute(rowData.id, rowData.categoryType.enum)\n        }\n      />\n    ),\n    showRemoveColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererRemove}\n        columnData={{ onRemove }}\n      />\n    ),\n    showVisibilityColumn && (\n      <Column\n        dataKey=\"visible\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canMutate: 'updateWareCategory' },\n          ColumnRendererVisibility,\n        )}\n        columnData={{ onToggle }}\n      />\n    ),\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNoteLabel' }}\n    />,\n    <Column\n      dataKey=\"countRecipes\"\n      label={i18n.t`Recipe count`}\n      width={100}\n      cellRenderer={({ cellData }) =>\n        `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n      }\n    />,\n    children,\n    isSortable && (\n      <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n    ),\n  ]\n\n  if (isSortable) {\n    return React.createElement(\n      SortableDataTable,\n      {\n        onSort: onSort as any,\n        ...props,\n      },\n      ...columns,\n    )\n  }\n\n  return React.createElement(DataTable, props, ...columns)\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Column } from '../../../atoms/DataTable'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderOriginCategoryEnum,\n  useMMenuCategoryVisibility,\n  useQMenuCategoryList,\n  useQMenuCategoryOrigins,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst StyledCategoryList = styled.div`\n  .origins span {\n    display: inline-block;\n    margin: 0.2rem;\n    padding: 0.2rem;\n    background-color: ${Colors.greyLight};\n  }\n`\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery, refetch } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const { data: dataOrigins } = useQMenuCategoryOrigins()\n\n  const originsMap = React.useMemo(() => {\n    if (dataOrigins && dataOrigins.origins) {\n      return dataOrigins.origins.reduce((acc, origin) => {\n        acc[origin.enum] = origin.code\n        return acc\n      }, {}) as Record<OrderOriginCategoryEnum, string>\n    }\n    return {} as Record<OrderOriginCategoryEnum, string>\n  }, [dataOrigins])\n\n  const renderOrigins = React.useCallback(\n    ({ cellData }) => {\n      cellData.sort()\n      return cellData.map(originEnum => (\n        <span key={originEnum}>{originsMap[originEnum]}</span>\n      ))\n    },\n    [originsMap],\n  )\n\n  const { getCategoryCreateRoute } = useMenuRouting()\n\n  const [changeVisibility] = useMMenuCategoryVisibility()\n\n  const categories = loading ? [] : data.categories\n\n  return (\n    <StyledCategoryList>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <CreateButton routeTo={getCategoryCreateRoute(categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories}\n        onToggle={(categoryId: ID, visible: boolean) => {\n          changeVisibility(\n            { categoryId, visible },\n            {\n              optimisticResponse: {\n                updateWareCategory: {\n                  __typename: 'WareCategory',\n                  id: categoryId,\n                  visible,\n                },\n              },\n            },\n          )\n        }}\n        isSortable={true}\n        showHeader={false}\n        fullHeight={true}\n        showVisibilityColumn={true}\n        onSort={async ({ item, items, offset }) => {\n          updateQuery(() => ({\n            categories: items,\n          }))\n          const result = await settings.menu.category.sortCategory(\n            item.id,\n            offset,\n          )\n          if (result) {\n            await refetch()\n          }\n          return result\n        }}\n      >\n        <Column\n          dataKey=\"origins\"\n          width={300}\n          className=\"origins\"\n          cellRenderer={renderOrigins}\n          style={{ fontSize: '0.8rem' }}\n        />\n      </CategoryListTable>\n    </StyledCategoryList>\n  )\n}\n\nexport default observer(CategoryList)\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuGuideDownload } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nconst MenuGuideDownloadButton = styled(TouchButton)`\n  white-space: nowrap;\n  margin-left: 2rem;\n  & a {\n    text-decoration: none;\n    color: ${Colors.black};\n    padding: 1rem;\n  }\n`\n\nexport const MenuGuideDownload = observer(() => {\n  const { settings } = useRoot()\n  const { loading, data } = useQMenuGuideDownload({\n    branchId: settings.branchId,\n  })\n  if (\n    loading ||\n    !(data && data.companyBranch && data.companyBranch.foodMenuUrl)\n  ) {\n    return null\n  }\n  return (\n    <MenuGuideDownloadButton color={Colors.greyMiddle}>\n      <a\n        href={data.companyBranch.foodMenuUrl}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Trans>Menu codes manual</Trans>\n      </a>\n    </MenuGuideDownloadButton>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport CategoryList from '../organisms/CategoryList'\nimport { MenuGuideDownload } from '../organisms/MenuGuideDownload'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Category overview`} useBackButton={true}>\n    <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuGuideDownload />\n          </FlexColumn>\n        </FlexRowSingle>\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </FullPageLayout>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0;\n  top: 0rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.FC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.FC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { TSettingsModel } from '../models/SettingsModel'\n\ninterface IProps {\n  render(settings: TSettingsModel): ReactNode\n  observe?: boolean\n}\n\nexport const WithSettings: React.FC<IProps> = ({ observe, render }) => (\n  <WithRoot observe={observe} render={({ settings }) => render(settings)} />\n)\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.FC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value) {\n            fieldApi.setValue((value as IFormValue).pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router-dom'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.FC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.FC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import { Label } from '@material-ui/icons'\nimport React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {}\n\nexport const FormInputName: React.FC<IProps> = ({\n  field = 'nameLabel',\n  ...props\n}) => (\n  <IconLine icon={Label} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputFullWidth={true}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import { RM } from '@speedlo/tools'\nimport React from 'react'\n\nimport { FormInputSelect } from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  QMenuCategoryOriginsOrigins,\n  useQMenuCategoryOrigins,\n} from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\nexport const MenuCategoryOrigins: React.FC = () => {\n  const { data, loading } = useQMenuCategoryOrigins()\n  return (\n    <IconLine label={i18n.t`cat. origins`} labelWidth={7}>\n      <FormInputSelect<QMenuCategoryOriginsOrigins>\n        field=\"origins\"\n        isMulti={true}\n        isLoading={loading}\n        isSearchable={true}\n        options={loading ? [] : (data.origins as any)}\n        getOptionLabel={RM.prop('code')}\n        getOptionValue={RM.prop('enum')}\n      />\n    </IconLine>\n  )\n}\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { MenuCategoryOrigins } from '../molecules/MenuCategoryOrigins'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.FC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <Sizer width={30}>\n        <FormInputName\n          placeholder={i18n.t`Category name`}\n          inputFullWidth={true}\n        />\n      </Sizer>\n      <Sizer width={30}>\n        <FormInputInternalNote placeholder={i18n.t`Category internal note`} />\n      </Sizer>\n      <Sizer width={30}>\n        <MenuCategoryOrigins />\n      </Sizer>\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <CardDock position=\"BottomRight\">\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </CardDock>\n  </FormContainer>\n)\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(() => {\n    if (!shouldLoad) {\n      return\n    }\n    loader().then(setValues)\n  }, [loader, shouldLoad])\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.FC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              const defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import React from 'react'\n\nimport {\n  OrderOriginCategoryEnum,\n  QMenuCategoryDocument,\n  QMenuCategoryQuery,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TCategoryFormValues } from '../models/MenuCategoryModel'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport const CategoryFormLoader: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={categoryId === null}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<QMenuCategoryQuery>({\n          query: QMenuCategoryDocument,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          ...data.category,\n          origins: data.category.origins as OrderOriginCategoryEnum[],\n        }\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    minCount: 0,\n    maxCount: 0,\n    categoryType: { enum: categoryType },\n    recipes: [],\n    origins: [],\n  }\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), React.createElement(\"path\", {\n  d: \"M3 12c0-2.61 1.67-4.83 4-5.65V4.26C3.55 5.15 1 8.27 1 12s2.55 6.85 6 7.74v-2.09c-2.33-.82-4-3.04-4-5.65z\"\n})), 'Toll');","import { Toll } from '@material-ui/icons'\nimport React from 'react'\nimport { isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { validateNumber } from '../../../locale/numeral'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {}\n\nconst formInputPriceValidate = (value: string) => {\n  if (\n    value === undefined ||\n    isEmpty(value + '') ||\n    !validateNumber(value + '')\n  ) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.FC<IProps> = ({\n  field = 'price.value',\n  ...props\n}) => (\n  <IconLine icon={Toll}>\n    <Sizer width={5}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        validate={formInputPriceValidate}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import { css } from 'emotion'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.FC<IProps> = ({\n  field = 'price.vat',\n}) => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QueryVat\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderLoading={false}\n      render={({ vats }) => (\n        <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n          {vats && (\n            <FormInputFlatSelect\n              field={field}\n              items={vats}\n              formatItem={({ vat }) => `${vat}%`}\n              isRequired={true}\n              validationName={i18n.t`VAT`}\n            />\n          )}\n        </IconLine>\n      )}\n    />\n  ))\n}\n","import React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormDisplayField } from '../../../atoms/FormDisplayField'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nconst FormPricingCurrencyCode = styled(FormDisplayField)`\n  padding: 0.5rem;\n`\n\nexport const FormPricingField: React.FC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormPricingCurrencyCode field=\"currencyCode\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\ninterface IProps {\n  field: FieldType\n  className?: string\n  children?: never\n}\n\nexport const FormDisplayField: React.FC<IProps> = ({ field, className }) => {\n  return (\n    <Field field={field}>\n      {fieldApi => <span className={className}>{fieldApi.value}</span>}\n    </Field>\n  )\n}\n","import { useStateRef } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: Maybe<string> }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(() => {\n    const selected = getSelected()\n    if (selected !== null) {\n      onAdd(selected)\n      setSelected(null)\n    }\n  }, [getSelected, onAdd, setSelected])\n\n  const onKeyDown = useCallback(\n    (ev: React.KeyboardEvent<HTMLElement>) => {\n      if (ev.key === 'Enter') {\n        onConfirm()\n      }\n    },\n    [onConfirm],\n  )\n\n  const onSelect = useCallback(\n    option => {\n      setSelected(option || null)\n    },\n    [setSelected],\n  )\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.propOr('', 'nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.FC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.FC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel!,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                variables={{\n                  branchId: settings.branchId,\n                }}\n                fetchPolicy=\"cache-and-network\"\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.FC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useQMenuRecipeList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel = observer<IProps>(\n  ({ categoryType, filterRecipes, onAdd }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuRecipeList({\n      branchId: settings.branchId,\n      categoryType,\n    })\n    return (\n      <MenuSuggestionPanel<TRecipe>\n        isLoading={loading}\n        options={loading ? [] : filterRecipes(data.recipes)}\n        onAdd={onAdd}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { DataList } from '../../../atoms/DataList'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { priceTypes } from './RecipeFormPricing'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n`\n\nconst FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\n\nconst FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  margin: 1rem 0 0 1rem;\n`\n\nconst SortableRecipes = SortableContainer(FormStretchedRow)\n\nconst RecipeRow = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: ${Spacing.ButtonColumnWidthPx}px 100px 3fr 1fr 1fr 50px;\n`\n\nconst MoveCell = styled.div`\n  cursor: move;\n`\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IRecipeRow {\n  recipe: TRecipe\n  onRemove(): void\n}\n\nconst SortableRecipe = SortableElement<IRecipeRow>(({ recipe, onRemove }) => {\n  const prices = priceTypes.map(({ priceType, label }) => {\n    const foundPrice = recipe.prices.find(\n      RM.pathEq(['priceType', 'enum'], priceType),\n    )\n    return (\n      <MoveCell key={priceType}>\n        <NoteText>{i18n._(label)}</NoteText>\n        {foundPrice ? (\n          foundPrice.price.formattedValue\n        ) : (\n          <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n        )}\n      </MoveCell>\n    )\n  })\n\n  return (\n    <RecipeRow>\n      <div>\n        <TouchButtonRemove onClick={onRemove} />\n      </div>\n      <MoveCell>{recipe.code}</MoveCell>\n      <MoveCell>\n        {recipe.nameLabel}\n        <NoteText>{recipe.internalNote}</NoteText>\n      </MoveCell>\n      {prices}\n      <DragHandle />\n    </RecipeRow>\n  )\n})\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<TRecipe>>) => {\n        const recipes = fieldApi.value\n        const onHandleSorting: SortEndHandler = async ({\n          newIndex,\n          oldIndex,\n        }) => {\n          if (newIndex === oldIndex) {\n            return\n          }\n          const sortedItems = arrayMove(\n            recipes as TRecipe[],\n            oldIndex,\n            newIndex,\n          )\n\n          fieldApi.setValue(sortedItems)\n        }\n        return (\n          <Container>\n            <FormFixedRow>\n              <RecipeSuggestionPanel\n                categoryType={categoryType}\n                filterRecipes={RM.without(fieldApi.value)}\n                onAdd={addedRecipe =>\n                  fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n                }\n              />\n            </FormFixedRow>\n            <SortableRecipes\n              lockAxis=\"y\"\n              lockToContainerEdges={true}\n              onSortEnd={onHandleSorting}\n            >\n              <DataList\n                items={fieldApi.value}\n                heightStretch={true}\n                rowHeight={60}\n                renderItem={(recipe, index) => (\n                  <SortableRecipe\n                    recipe={recipe}\n                    onRemove={() => {\n                      fieldApi.setValue(\n                        RM.reject(RM.propEq('id', recipe.id), fieldApi.value),\n                      )\n                    }}\n                    index={index}\n                  />\n                )}\n                rowCount={fieldApi.value.length}\n              />\n            </SortableRecipes>\n          </Container>\n        )\n      }}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { StyledCheckbox } from '../../../atoms/StyledCheckbox'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  id: string\n  count: number\n  label: ReactNode | string\n  enabled: boolean\n  onChange(count: number): void\n}\n\nconst StyledCategoryRequirementControl = styled.div`\n  display: flex;\n  align-items: center;\n  & > label {\n    min-width: 5rem;\n  }\n  & > * {\n    margin: 0.2rem 0.5rem;\n  }\n  input.count {\n    font-size: 1.5rem;\n    line-height: 1.5rem;\n    text-align: center;\n  }\n`\n\nexport const CategoryRequirementControl: React.FC<IProps> = ({\n  count,\n  label,\n  enabled,\n  onChange,\n  id,\n}) => {\n  const countRef = React.useRef(count)\n  return (\n    <StyledCategoryRequirementControl>\n      <label htmlFor={id}>{label}</label>\n      <Sizer width={3}>\n        <FormInputStyled\n          id={id}\n          value={count === 0 ? '' : count}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              onChange(Number.parseInt(ev.target.value, 10))\n            }\n          }}\n          onFocus={ev => {\n            ev.target.select()\n          }}\n          disabled={count === 0 || !enabled}\n          inputFullWidth={true}\n          type=\"tel\"\n          pattern=\"^[1-9]\\d*$\"\n          className=\"count\"\n        />\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton\n          disabled={!enabled || count <= 0}\n          onClick={() => onChange(count - 1)}\n        >\n          ➖\n        </TouchButton>\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton disabled={!enabled} onClick={() => onChange(count + 1)}>\n          ➕\n        </TouchButton>\n      </Sizer>\n      <div>\n        <StyledCheckbox>\n          <input\n            type=\"checkbox\"\n            id={`${id}-nolimit`}\n            checked={count === 0}\n            disabled={!enabled}\n            onChange={ev => {\n              if (count === 0) {\n                onChange(countRef.current || 1)\n              } else {\n                countRef.current = count\n                onChange(0)\n              }\n            }}\n          />\n          <label htmlFor={`${id}-nolimit`}>\n            <Trans>Unlimited</Trans>\n          </label>\n        </StyledCheckbox>\n      </div>\n    </StyledCategoryRequirementControl>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport _ from 'lodash'\nimport React from 'react'\nimport { IFormApi, IFormState } from 'react-form'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { CategoryRequirementControl } from '../molecules/CategoryRequirementControl'\n\ninterface IRequirement {\n  label: string\n  min?: number\n  max?: number\n}\n\nexport const getRulesMap = (): Record<string, IRequirement> => ({\n  noLimit: {\n    label: i18n.t`No limitation`,\n    min: 0,\n    max: 0,\n  },\n  optional: {\n    label: i18n.t`One at most`,\n    min: 0,\n    max: 1,\n  },\n  required: {\n    label: i18n.t`One at least`,\n    min: 1,\n    max: 0,\n  },\n  onlyOne: {\n    label: i18n.t`Exactly one`,\n    min: 1,\n    max: 1,\n  },\n  custom: {\n    label: i18n.t`Custom range`,\n  },\n})\n\ntype TRule = keyof ReturnType<typeof getRulesMap>\n\nexport const CategoryRequirementsForm: React.FC<{\n  formApi: IFormApi & IFormState\n}> = ({ formApi }) => {\n  const ruleMap = React.useMemo(getRulesMap, [])\n  const [currentRule, setRule] = React.useState<TRule>('noLimit')\n\n  const minCount = formApi.getValue('minCount')\n  const maxCount = formApi.getValue('maxCount')\n\n  React.useEffect(() => {\n    if (currentRule !== 'custom') {\n      const found = _.findKey(\n        ruleMap,\n        ({ min, max }) => min === minCount && max === maxCount,\n      )\n      if (found) {\n        setRule(found)\n      }\n    }\n  }, [currentRule, minCount, maxCount, ruleMap])\n\n  const setMinCount = (count: number) => formApi.setValue('minCount', count)\n  const setMaxCount = (count: number) => formApi.setValue('maxCount', count)\n\n  return (\n    <>\n      <SelectControlFlat<TRule>\n        items={Object.keys(ruleMap) as ReadonlyArray<TRule>}\n        formatItem={req => ruleMap[req].label}\n        onSingleSelection={selectedRule => {\n          if (selectedRule) {\n            setRule(selectedRule)\n            const rule = ruleMap[selectedRule]\n            setMinCount(rule.min || 0)\n            setMaxCount(rule.max || 0)\n          }\n        }}\n        selectedItem={currentRule}\n      />\n      <CategoryRequirementControl\n        id=\"minCount\"\n        count={minCount}\n        label={<Trans>Minimum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMinCount}\n      />\n      <CategoryRequirementControl\n        id=\"maxCount\"\n        count={maxCount}\n        label={<Trans>Maximum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMaxCount}\n      />\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FormApi } from 'react-form'\nimport { Redirect, RouteComponentProps } from 'react-router'\nimport styled from 'styled-components/macro'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getCategoryTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\nimport { CategoryRequirementsForm } from '../organisms/CategoryRequirementsForm'\n\ninterface IProps extends RouteComponentProps<{ categoryId: ID }> {}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.FC<IProps> = ({ match }) => {\n  const { categoryId } = match.params\n  const { itemType: categoryType, getCategoryListRoute } = useMenuRouting()\n\n  if (categoryType === null) {\n    return <Redirect to={getCategoryListRoute()} />\n  }\n\n  return (\n    <CategoryFormLoader categoryId={categoryId} categoryType={categoryType}>\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n          <FormContainer>\n            <FormFixedRow>\n              <Card>\n                <CategoryBasicForm categoryType={categoryType} />\n              </Card>\n            </FormFixedRow>\n            <IsCategoryType isSideDish={true} type={categoryType}>\n              <FormFixedRow>\n                <Card>\n                  <Headline>\n                    <Trans>Required amounts of recipes to be picked</Trans>\n                  </Headline>\n                  <FormApi component={CategoryRequirementsForm} />\n                </Card>\n              </FormFixedRow>\n            </IsCategoryType>\n            <FormStretchedRow>\n              <Card stretchToParent={true}>\n                <Headline>\n                  <Trans>Recipes assigned to this category</Trans>\n                </Headline>\n                <CategoryRecipesView categoryType={categoryType} />\n              </Card>\n            </FormStretchedRow>\n          </FormContainer>\n        </PageLayoutFullHeightItem>\n\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n            }\n          >\n            <SubmitButton isCreate={categoryId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n      </FullPageLayout>\n    </CategoryFormLoader>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FMenuCategoryListItemFragment,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nconst CategorySuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <MenuSuggestionPanel<TCategory>\n      isLoading={loading}\n      options={RM.without(currentCategories, categories)}\n      addButtonText={addButtonText}\n      onAdd={onAdd}\n    />\n  )\n}\n\nexport default observer(CategorySuggestionPanel)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport {\n  FMenuCategoryListItemFragment,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport CategorySuggestionPanel from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nexport const RecipeCategoryView: React.FC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<TCategory[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n})), 'ErrorOutline');","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.FC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        isRequired={true}\n        validatioName={i18n.t`Code`}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.FC<IProps> = ({\n  field = 'descriptionLabel',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { FMenuAllergenFragmentDoc } from '../../../graph/generated'\nimport { GAllergens } from '../../../graph/types'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...FMenuAllergen\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/generated'\nimport { Colors, Spacing } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.FC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import _ from 'lodash'\nimport React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nexport const RecipeAllergenDisplay: React.FC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = _.uniq(_.flatten(value.map(RM.prop('allergens'))))\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import { ErrorOutline } from '@material-ui/icons'\nimport React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.FC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon={ErrorOutline}>\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <CardDock position=\"BottomRight\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </CardDock>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.FC<IProps> = ({\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={recipeId === null}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const { vats, currencyCode } = await menu.recipe.queryDefaults()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: vats[priceType],\n          currencyCode,\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel!,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.FC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInputTextBox\n            field={['ingredients', rowIndex, 'quantity']}\n            validate={validateQuantity}\n            inputFullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onAdd(ingredient: TIngredient): void\n  onRemove(stockItemId: ID): void\n}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsControl = observer<IProps>(\n  ({ ingredients, onAdd, onRemove }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuStockList({\n      branchId: settings.branchId,\n    })\n\n    return (\n      <>\n        <RecipeIngredientsTable ingredients={ingredients} onRemove={onRemove} />\n        <MenuSuggestionPanel<GMenuStockItem.Fragment>\n          isLoading={loading}\n          addButtonText={i18n.t`Add ingredient`}\n          options={\n            loading ? [] : unselectedStockOnly(data.stockItems, ingredients)\n          }\n          onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n            onAdd({\n              stockItem: addedStockItem.id,\n              label: addedStockItem.nameLabel,\n              quantity: 1,\n              unitLabel: addedStockItem.wareUnit.code,\n              allergens: addedStockItem.allergens.map(RM.prop('enum')),\n            })\n          }}\n        />\n      </>\n    )\n  },\n)\n\nexport const RecipeIngredientsView = () => {\n  return (\n    <Field field=\"ingredients\">\n      {(fieldApi: IFieldApi<TIngredient[]>) => (\n        <RecipeIngredientsControl\n          ingredients={fieldApi.value}\n          onAdd={ingredient => {\n            fieldApi.setValue([...fieldApi.value, ingredient])\n          }}\n          onRemove={stockItemId => {\n            fieldApi.setValue(\n              RM.reject(RM.propEq('stockItem', stockItemId), fieldApi.value),\n            )\n          }}\n        />\n      )}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { getRecipeTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps extends RouteComponentProps<{ recipeId: ID }> {}\n\nexport const MenuRecipePage: React.FC<IProps> = ({ match }) => {\n  const { recipeId } = match.params\n  const { itemType: recipeType, getRecipeListRoute } = useMenuRouting()\n\n  if (recipeType === null) {\n    return <Redirect to={getRecipeListRoute()} />\n  }\n\n  return (\n    <RecipeFormLoader recipeId={recipeId} recipeType={recipeType}>\n      <MarginBox margin=\"0 1.25rem 4rem 0\">\n        <FullPageLayout\n          pageTitle={getRecipeTypeLabel(recipeType)}\n          hideLogoutWidget={true}\n          useBackButton={true}\n        >\n          <Card>\n            <RecipeFormBasic recipeType={recipeType} />\n          </Card>\n          <Card>\n            <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Recipe ingredients</Trans>\n            </Headline>\n            <VerticalGap />\n            <RecipeIngredientsView />\n          </Card>\n          <IsCategoryType type={recipeType} isMain={true}>\n            <Card>\n              <Headline>\n                <Trans>Sidedish categories</Trans>\n              </Headline>\n              <NoteText>\n                <Trans>These sidedish are presented with recipe</Trans>\n              </NoteText>\n              <RecipeCategoryView\n                categoryType={TRecipeType.SideDish}\n                field=\"sideDishes\"\n                addButtonText={i18n.t`Attach sidedish category`}\n                noRowsText={i18n.t`Recipe has no sidedish category attached`}\n              />\n            </Card>\n            <Card>\n              <Headline>\n                <Trans>Category assignments</Trans>\n              </Headline>\n              <NoteText>\n                <Trans>Recipe is in these categories</Trans>\n              </NoteText>\n              <RecipeCategoryView\n                categoryType={TRecipeType.Main}\n                field=\"categories\"\n                addButtonText={i18n.t`Add to category`}\n                noRowsText={i18n.t`Recipe is not in any category`}\n              />\n            </Card>\n          </IsCategoryType>\n        </FullPageLayout>\n\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n          >\n            <SubmitButton isCreate={recipeId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n      </MarginBox>\n    </RecipeFormLoader>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { FMenuWareUnitFragment } from '../../../graph/generated'\nimport { priceFormat } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<FMenuWareUnitFragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.FC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format(priceFormat)} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');","import { Done } from '@material-ui/icons'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { QMenuStockDepositStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: QMenuStockDepositStockItems[]\n  onSelect(stockItem: QMenuStockDepositStockItems): void\n}\n\nexport const StockDepositResultTable: React.FC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTable items={stockItems} heightStretch={false}>\n    <Column\n      dataKey=\"id\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererSelect}\n      columnData={{ onSelect }}\n    />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"code\"\n      width={100}\n      label={i18n.t`Card code`}\n      cellRenderer={highlightMatch(searchValue)}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Card name`}\n      cellRenderer={highlightMatch(searchValue)}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <SizerButton>\n      <TouchButton icon={Done} onClick={() => onSelect(rowData)} />\n    </SizerButton>\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  componentDidUpdate(prevProps: IProps) {\n    if (prevProps.stockItems !== this.props.stockItems) {\n      this.onFilter(this.state.searchValue)\n    }\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { observer } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QMenuStockDepositStockItems,\n  useMMenuStockQuantity,\n  useQMenuStockDeposit,\n} from '../../../graph/generated'\n\nexport type TStockItem = QMenuStockDepositStockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader = observer<IProps>(({ children }) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockDeposit({\n    branchId: settings.branchId,\n  })\n  const [changeQuantity] = useMMenuStockQuantity()\n  const onDeposit: TDepositFn = (stockItem, quantity) => {\n    changeQuantity({\n      stockItem: stockItem.id,\n      quantityChange: quantity,\n    })\n  }\n  return children(loading ? [] : data.stockItems, onDeposit)\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.FC<IProps> = props => (\n  <FullPageLayout pageTitle={i18n.t`Stock deposit`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\n\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { StyledCheckbox } from '../../../atoms/StyledCheckbox'\n\ninterface IProps {\n  checked: boolean\n  onChange: () => void\n  sideText?: string | ReactNode\n}\n\nexport const ImportCheckbox: React.FC<IProps> = ({ sideText, ...props }) => (\n  <>\n    <MarginBox margin=\"0 10px 0 0\">\n      <StyledCheckbox>\n        <input type=\"checkbox\" {...props} />\n      </StyledCheckbox>\n    </MarginBox>\n    {sideText}\n  </>\n)\n","import { useMenu } from './useMenu'\n\nexport function useTransferModel() {\n  const {\n    stock: { transfer },\n  } = useMenu()\n  return transfer\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { i18n } from '../../../i18n'\nimport { numberRx } from '../../../locale/numeral'\nimport { useTransferModel } from '../hooks/useTransferModel'\n\ninterface IProps {\n  stockItemId: ID\n}\n\nexport const StockTransferAmountInput = observer<IProps>(({ stockItemId }) => {\n  const transfer = useTransferModel()\n\n  const inputRef = React.useRef<HTMLInputElement | null>(null)\n\n  const onChange = React.useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = ev.target\n      transfer.setQuantity(stockItemId, Number(value.replace(',', '.')))\n    },\n    [stockItemId, transfer],\n  )\n\n  const onFocus = React.useCallback(() => {\n    if (inputRef.current) {\n      inputRef.current.select()\n    }\n  }, [])\n\n  const value = transfer.getItemTransferQuantity(stockItemId)\n\n  return (\n    <FormInputStyled\n      type=\"text\"\n      inputFullWidth={true}\n      value={value === null ? '' : value}\n      disabled={transfer.targetId === null}\n      onChange={onChange}\n      onFocus={onFocus}\n      placeholder={i18n.t`to transfer`}\n      pattern={numberRx.source}\n      invalid={transfer.hasInvalidAmount(stockItemId)}\n    />\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { RM } from '@speedlo/tools'\nimport { Observer, observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { QMenuStockListStockItems } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { ImportCheckbox } from '../atoms/ImportCheckbox'\nimport { useMenu } from '../hooks/useMenu'\nimport { useTransferModel } from '../hooks/useTransferModel'\nimport { StockTransferAmountInput } from '../molecules/StockTransferAmountInput'\n\ntype TStockItem = QMenuStockListStockItems\n\ninterface IProps {\n  stockItems: RoA<TStockItem>\n  isLoading: boolean\n  isTransferTable: boolean\n}\n\nconst ANIMATION_DURATION = '0.3s'\nconst ANIMATED_COLUMN_WIDTH = 130\n\nconst StyledDataTable = styled(DataTable)`\n  [aria-label='grid']:focus {\n    outline: none;\n  }\n\n  [role='columnheader'] {\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n  }\n\n  .flex-animation,\n  [role='columnheader'] {\n    transition: flex ${ANIMATION_DURATION};\n  }\n`\n\nconst VerticallyCenteredFlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const StockListTable: React.FC<IProps> = observer(\n  ({ stockItems, isLoading, isTransferTable }) => {\n    const { stock } = useMenu()\n    const transfer = useTransferModel()\n\n    const getItemMaxLimit = ({ quantity, allowNegative }: TStockItem) => {\n      if (allowNegative) {\n        return Number.MAX_SAFE_INTEGER\n      } else {\n        return Math.max(quantity, 0)\n      }\n    }\n\n    React.useEffect(() => {\n      if (isTransferTable) {\n        const unfilteredItems = stockItems.map(item => {\n          const max = getItemMaxLimit(item)\n          return { id: item.id, max }\n        })\n\n        transfer.initItems(unfilteredItems)\n      }\n    }, [isTransferTable, stockItems, transfer])\n\n    const searchValue = stock.filterInput\n    const partialMatch = isPartialMatch(searchValue)\n    const filterItems = RM.cond([\n      [RM.propEq('plu', searchValue), RM.T],\n      [RM.propSatisfies(partialMatch, 'code'), RM.T],\n      [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n    ])\n\n    const renderImportItemCheckbox = React.useCallback(\n      ({ cellData: itemId }: TableCellProps) => (\n        <Observer>\n          {() => (\n            <ImportCheckbox\n              checked={transfer.isImportingItem(itemId)}\n              onChange={() => transfer.toggleImportItem(itemId)}\n            />\n          )}\n        </Observer>\n      ),\n      [transfer],\n    )\n\n    const renderImportAllHeader = React.useCallback(\n      () => (\n        <Observer>\n          {() => (\n            <ImportCheckbox\n              checked={transfer.isImportingAll}\n              onChange={transfer.toggleImportAll}\n              sideText={<Trans>Import</Trans>}\n            />\n          )}\n        </Observer>\n      ),\n      [transfer],\n    )\n\n    const renderAmountInput = React.useCallback(\n      ({ cellData }: TableCellProps) => {\n        const itemId = cellData as ID\n        return (\n          <Observer>\n            {() => (\n              <VerticallyCenteredFlexContainer>\n                <Sizer width={5.5} margin=\"0 0.5rem 0 0\">\n                  <StockTransferAmountInput stockItemId={itemId} />\n                </Sizer>\n              </VerticallyCenteredFlexContainer>\n            )}\n          </Observer>\n        )\n      },\n      [],\n    )\n\n    const quantityColumn = (\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n    )\n\n    return (\n      <StyledDataTable\n        items={stockItems.filter(filterItems)}\n        heightStretch={true}\n        noRowsRenderer={() =>\n          isLoading ? (\n            <Loading />\n          ) : (\n            <h3>\n              <Trans>Selected branch has no stock cards</Trans>\n            </h3>\n          )\n        }\n      >\n        {isTransferTable && (\n          <Column\n            dataKey=\"id\"\n            width={transfer.isImportMode ? ANIMATED_COLUMN_WIDTH : 0}\n            label={i18n.t`Import`}\n            headerRenderer={renderImportAllHeader}\n            cellRenderer={renderImportItemCheckbox}\n            className=\"flex-animation\"\n          />\n        )}\n        {isTransferTable && (\n          <Column\n            dataKey=\"id\"\n            width={transfer.isTransferMode ? ANIMATED_COLUMN_WIDTH : 0}\n            label={i18n.t`Amount`}\n            cellRenderer={renderAmountInput}\n            className=\"flex-animation\"\n          />\n        )}\n        {!isTransferTable && (\n          <Column\n            dataKey=\"id\"\n            width={Spacing.ButtonColumnWidthPx}\n            minWidth={Spacing.ButtonColumnWidthPx}\n            cellRenderer={checkColumnAccess(\n              { canQuery: 'stockItem' },\n              ColumnRendererEdit,\n            )}\n          />\n        )}\n        {isTransferTable && quantityColumn}\n        <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n        <Column\n          dataKey=\"nameLabel\"\n          width={300}\n          minWidth={30}\n          flexGrow={2}\n          label={i18n.t`Card name`}\n        />\n        {!isTransferTable && quantityColumn}\n        <Column\n          dataKey=\"allowNegative\"\n          width={300}\n          label={i18n.t`Negative stock`}\n          cellRenderer={stockAllowNegative}\n        />\n        {isTransferTable ? null : (\n          <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n        )}\n      </StyledDataTable>\n    )\n  },\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { StockListTable } from './StockListTable'\n\ninterface IProps {\n  isTransferring?: boolean\n}\n\nexport const StockListLoader = observer<IProps>(\n  ({ isTransferring = false }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuStockList({\n      branchId: settings.branchId,\n    })\n\n    const stockItems =\n      !data || !data.stockItems || data.stockItems.length === 0\n        ? []\n        : data.stockItems\n\n    return (\n      <StockListTable\n        stockItems={stockItems}\n        isLoading={loading}\n        isTransferTable={isTransferring}\n      />\n    )\n  },\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\nimport { StyledFilterWithTableContainer } from './MenuRecipeListPage'\n\nexport const MenuStockListPage: React.FC = () => {\n  const { getStockCreateRoute } = useMenuRouting()\n  return (\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true}>\n      <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n        <Card stretchToParent={true}>\n          <StyledFilterWithTableContainer>\n            <div className=\"filter\">\n              <FlexRowSingle justify=\"start\" flexWrap=\"wrap\">\n                <FlexColumn>\n                  <SettingsCompanyBranchPicker width={20} />\n                </FlexColumn>\n                <FlexColumn>\n                  <MenuFilterInput modelType=\"stock\" />\n                </FlexColumn>\n              </FlexRowSingle>\n              <CanMutate mutationName=\"createStockItem\">\n                <CreateButton routeTo={getStockCreateRoute()} />\n              </CanMutate>\n            </div>\n            <div className=\"table\">\n              <StockListLoader />\n            </div>\n          </StyledFilterWithTableContainer>\n        </Card>\n      </PageLayoutFullHeightItem>\n    </FullPageLayout>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FMenuAllergenFragmentDoc,\n  FMenuWareUnitFragmentDoc,\n} from '../../../graph/generated'\nimport { GMenuStockForm } from '../../../graph/types'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...FMenuWareUnit\n      }\n      allergens {\n        ...FMenuAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n  ${FMenuWareUnitFragmentDoc}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  WareUnitEnum,\n} from '../../../graph/generated'\nimport { GMenuStockDefaults, GMenuStockForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.FC<IProps> = ({ stockId, children }) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={stockId === null}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId: stockId! },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import { ErrorOutline } from '@material-ui/icons'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n}\n\nexport const FormInputAllergens: React.FC<IProps> = ({\n  field = 'allergens',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={ErrorOutline} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.FC<IProps> = () => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z\"\n}), 'Fingerprint');","import { Fingerprint } from '@material-ui/icons'\nimport React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {}\n\nexport const FormInputPlu: React.FC<IProps> = ({ field = 'plu', ...props }) => (\n  <IconLine icon={Fingerprint} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z\"\n}), 'SelectAll');","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import { SelectAll } from '@material-ui/icons'\nimport React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {}\n\nexport const FormInputWareUnit: React.FC<IProps> = ({\n  field = 'wareUnit',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={SelectAll} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.FC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <CardDock position=\"BottomRight\">\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </CardDock>\n  </FormContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { BlockLoader } from '../../../atoms/BlockLoader'\nimport { Column, ColumnRendererEdit, DataTable } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { useQStockRecipes } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  stockId: ID\n}\n\nexport const StockRecipesView: React.FC<IProps> = ({ stockId }) => {\n  const { data, loading } = useQStockRecipes({\n    stockId,\n  })\n\n  if (loading) {\n    return <BlockLoader />\n  }\n\n  const {\n    stockItem: { ingredients },\n  } = data\n  if (ingredients.length === 0) {\n    return (\n      <Headline>\n        <Trans>No recipes are using stock card</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      <Headline>\n        <Trans>Recipes using this card</Trans>\n      </Headline>\n\n      <DataTable\n        items={[...ingredients]}\n        disableHeader={true}\n        fullHeight={true}\n      >\n        <Column\n          dataKey=\"\"\n          cellDataGetter={({ rowData }) => ({\n            pathname: `/settings/menu/recipe/${rowData.recipe.id}`,\n            state: { recipeType: rowData.recipe.recipeType.enum },\n          })}\n          cellRenderer={ColumnRendererEdit}\n          width={100}\n        />\n        <Column\n          dataKey=\"recipe\"\n          width={300}\n          label={i18n.t`Name`}\n          cellRenderer={({ rowData }) => (\n            <>\n              {rowData.recipe.nameLabel}\n              <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n            </>\n          )}\n        />\n      </DataTable>\n    </>\n  )\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps extends RouteComponentProps<{ stockId: ID }> {}\n\nexport const MenuStockPage: React.FC<IProps> = ({ match }) => {\n  const { stockId } = match.params\n  const isCreate = stockId === 'create'\n\n  return (\n    <FullPageLayout\n      pageTitle={i18n.t`Stock card`}\n      hideLogoutWidget={true}\n      useBackButton={true}\n    >\n      <StockFormLoader stockId={isCreate ? null : stockId}>\n        <>\n          <TopRightButtonContainer>\n            <CanMutate\n              mutationName={isCreate ? 'createStockItem' : 'updateStockItem'}\n            >\n              <SubmitButton isCreate={isCreate} />\n            </CanMutate>\n          </TopRightButtonContainer>\n          <Card>\n            <StockFormMain />\n            {!isCreate && (\n              <CanQuery queryName=\"recipes\">\n                <StockRecipesView stockId={stockId} />\n              </CanQuery>\n            )}\n          </Card>\n        </>\n      </StockFormLoader>\n    </FullPageLayout>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../../app/Responsive'\nimport { useMCreateTransfers } from '../../../graph/generated'\nimport { useCanMutate } from '../../../hooks/useAccessGuard'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { useTransferModel } from '../hooks/useTransferModel'\n\nconst StyledConfirmTransferButton = styled.div`\n  flex: 0 0 auto;\n  ${mediaDesktop`\n    margin-left: 3rem;\n    width: 16rem;\n  `};\n  @media (max-width: 760px) {\n    width: unset;\n    margin-left: ${Spacing.Middle};\n  }\n  ${mediaMobile`\n    margin-left: ${Spacing.Middle};\n  `};\n`\n\nexport const ConfirmTransferButton = observer(() => {\n  const transfer = useTransferModel()\n  const { enqueueSuccess } = useSnackBar()\n  const [createTransfers] = useMCreateTransfers()\n  const canTransferStockItems = useCanMutate('createStockItemTransfers')\n\n  const targetBranch = transfer.targetId\n  const noTargetSelected = targetBranch === null\n\n  const onConfirm = React.useCallback(async () => {\n    const transfers = transfer.itemsForTransfer\n      .filter(RM.propSatisfies(RM.gt(0), 'quantity'))\n      .map(item => ({\n        stockItemId: item.id,\n        quantity: item.quantity!,\n      }))\n\n    if (transfers.length > 0 && targetBranch) {\n      const transferVariables = {\n        targetBranch,\n        transfers,\n      }\n\n      const result = await createTransfers(transferVariables)\n\n      if (result) {\n        enqueueSuccess(i18n.t`Transfer was successfully completed!`)\n        transfer.clearTransferState()\n      }\n    }\n  }, [createTransfers, enqueueSuccess, targetBranch, transfer])\n\n  if (!canTransferStockItems) {\n    return null\n  }\n\n  return (\n    <StyledConfirmTransferButton>\n      <TouchButton\n        color={Colors.green}\n        onClick={onConfirm}\n        disabled={noTargetSelected}\n      >\n        {transfer.isImportMode ? (\n          <Trans>Confirm import</Trans>\n        ) : (\n          <Trans>Confirm transfer</Trans>\n        )}\n      </TouchButton>\n    </StyledConfirmTransferButton>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Sizer } from '../../../atoms/Sizer'\nimport { ImportCheckbox } from '../atoms/ImportCheckbox'\nimport { useTransferModel } from '../hooks/useTransferModel'\n\nexport const ImportModeToggle = observer(() => {\n  const transfer = useTransferModel()\n\n  return (\n    <>\n      <ImportCheckbox\n        checked={transfer.isImportMode}\n        onChange={transfer.toggleImportMode}\n      />\n      <Sizer width={10}>\n        <Trans>Enable import mode</Trans>\n      </Sizer>\n    </>\n  )\n})\n","import React from 'react'\n\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\n\nexport const TransferSourceBranchPicker: React.FC = () => {\n  return <SettingsCompanyBranchPicker width={20} />\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');","import { ArrowRightAlt } from '@material-ui/icons'\nimport { idPropEq, RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { useTransferModel } from '../hooks/useTransferModel'\n\nexport const TransferTargetBranchPicker = observer(() => {\n  const { user } = useRoot()\n  const transfer = useTransferModel()\n\n  const branchesWithoutSourceBranch = RM.reject(\n    idPropEq(transfer.sourceId),\n    user.branches,\n  )\n\n  return (\n    <IconLine icon={ArrowRightAlt}>\n      <CompanyBranchPicker\n        selectedBranches={transfer.targetId ? [transfer.targetId] : []}\n        onSelectionChange={([branch]) => transfer.setTargetId(branch)}\n        onSelectionClear={() => transfer.setTargetId(null)}\n        isMulti={false}\n        isClearable={false}\n        getDropdownProps={() => ({ width: 20 })}\n        hideWhenSingleBranch={true}\n        branches={branchesWithoutSourceBranch}\n      />\n    </IconLine>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useCanMutate } from '../../../hooks/useAccessGuard'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { ConfirmTransferButton } from '../molecules/ConfirmTransferButton'\nimport { ImportModeToggle } from '../molecules/ImportModeToggle'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { TransferSourceBranchPicker } from '../molecules/TransferSourceBranchPicker'\nimport { TransferTargetBranchPicker } from '../molecules/TransferTargetBranchPicker'\nimport { StockListLoader } from '../organisms/StockListLoader'\nimport { StyledFilterWithTableContainer } from './MenuRecipeListPage'\n\nconst StyledTopContainer = styled.div`\n  display: flex;\n`\n\nconst VerticallyCenteredRow = styled(FlexRowSingle)`\n  &,\n  & > * {\n    display: flex;\n    align-items: center;\n  }\n`\n\nexport const MenuStockTransferPage: React.FC = props => {\n  const { user } = useRoot()\n  const canTransferItems = useCanMutate('createStockItemTransfers')\n  const canAccessPage = canTransferItems && !user.hasSingleBranch\n\n  return (\n    <FullPageLayout\n      pageTitle={i18n.t`Stock transfer`}\n      useBackButton={true}\n      topContent={\n        <StyledTopContainer>\n          <ConfirmTransferButton />\n        </StyledTopContainer>\n      }\n    >\n      <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n        <Card stretchToParent={true}>\n          {canAccessPage ? (\n            <StyledFilterWithTableContainer>\n              <div className=\"filter\">\n                <VerticallyCenteredRow justify=\"start\" flexWrap=\"wrap\">\n                  <FlexColumn>\n                    <TransferSourceBranchPicker />\n                  </FlexColumn>\n                  <FlexColumn>\n                    <TransferTargetBranchPicker />\n                  </FlexColumn>\n                  <FlexColumn>\n                    <MenuFilterInput modelType=\"stock\" />\n                  </FlexColumn>\n                  <FlexColumn>\n                    <ImportModeToggle />\n                  </FlexColumn>\n                </VerticallyCenteredRow>\n              </div>\n              <div className=\"table\">\n                <StockListLoader isTransferring={true} />\n              </div>\n            </StyledFilterWithTableContainer>\n          ) : (\n            <Headline>\n              <Trans>Can't access page</Trans>\n            </Headline>\n          )}\n        </Card>\n      </PageLayoutFullHeightItem>\n    </FullPageLayout>\n  )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MENU_ROUTE, useMenuRouting } from '../hooks/useMenuRouting'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\nimport { MenuStockTransferPage } from '../pages/MenuStockTransferPage'\n\ninterface IProps {}\n\nexport const MenuRoutes: React.FC<IProps> = () => {\n  const routing = useMenuRouting()\n  return (\n    <Switch>\n      <SecureRoute\n        path={routing.getCategoryEditRoute(':categoryId')}\n        component={MenuCategoryPage}\n      />\n      <SecureRoute\n        path={routing.getCategoryListRoute()}\n        component={MenuCategoryListPage}\n      />\n      <SecureRoute\n        path={routing.getRecipeEditRoute(':recipeId')}\n        component={MenuRecipePage}\n      />\n      <SecureRoute\n        path={routing.getRecipeListRoute()}\n        component={MenuRecipeListPage}\n      />\n      <SecureRoute\n        path={routing.getStockDepositRoute()}\n        component={MenuStockDepositPage}\n      />\n      <SecureRoute\n        path={routing.getStockTransferRoute()}\n        component={MenuStockTransferPage}\n      />\n      <SecureRoute\n        path={routing.getStockEditRoute(':stockId')}\n        component={MenuStockPage}\n      />\n      <SecureRoute\n        path={routing.getStockListRoute()}\n        component={MenuStockListPage}\n      />\n      <Redirect to={routing.getCategoryListRoute()} from={MENU_ROUTE} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default MenuRoutes\n"],"sourceRoot":""}