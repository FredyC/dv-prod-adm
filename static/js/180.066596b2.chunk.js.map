{"version":3,"sources":["molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","atoms/CardDock.tsx","atoms/ScrollArea.tsx","helpers/filter.ts","atoms/FormInputFlatSelect.tsx","atoms/BlockLoader.tsx","atoms/RelativeLink.tsx","../node_modules/resolve-pathname/esm/resolve-pathname.js","atoms/FormInputSelect.tsx","atoms/DragHandle.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/apollo-client/errors/ApolloError.js","molecules/TouchButtonEdit.tsx","molecules/TouchButtonRemove.tsx","molecules/TouchButtonVisibility.tsx","atoms/NoteText.tsx","atoms/DataTable.tsx","molecules/SortableDataTable.tsx","segments/menu/molecules/CategoryListTable.tsx","segments/menu/molecules/CreateButton.tsx","segments/menu/organisms/CategoryList.tsx","segments/menu/organisms/MenuGuideDownload.tsx","segments/menu/pages/MenuCategoryListPage.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/labels.ts","segments/menu/molecules/SubmitButton.tsx","atoms/FormContainer.tsx","segments/settings/atoms/WithSettings.tsx","atoms/PictogramDisplay.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/molecules/MenuCategoryOrigins.tsx","segments/menu/organisms/CategoryFormBasic.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","segments/menu/organisms/CategoryFormLoader.tsx","atoms/DataList.tsx","atoms/FormDisplayField.tsx","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormPricingField.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/molecules/CategoryRequirementControl.tsx","segments/menu/organisms/CategoryRequirementsForm.tsx","segments/menu/pages/MenuCategoryPage.tsx","atoms/DataTableContainer.tsx","segments/menu/molecules/MenuCategoryFilter.tsx","segments/menu/molecules/MenuFilterInput.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipeListPage.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeCategoryView.tsx","segments/menu/molecules/FormInputCode.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormLoader.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","segments/menu/molecules/FormInputPlu.tsx","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/organisms/StockFormMain.tsx","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/routes/MenuRoutes.tsx"],"names":["StyledPageLayoutFullHeightItem","styled","div","withConfig","displayName","componentId","mediaDesktop","_templateObject","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","column","row","mediaMobile","_templateObject2","_ref","rowInMobile","_ref2","forcePercentHeightInMobile","concat","PageHeaderHeight","DefaultSizeUnit","PageLayoutFullHeightItem","_ref3","children","_ref3$row","_ref3$rowInMobile","_ref3$column","_ref3$widthInColumns","_ref3$withScrollArea","withScrollArea","scrollAreaId","forceHeightInMobile","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_4__","id","_atoms_Sizer__WEBPACK_IMPORTED_MODULE_5__","height","heightUnit","FlexRowSingle","_ref$flexWrap","flexWrap","_ref2$justify","justify","VerticalGap","_ref$size","size","_ref$sizeUnit","sizeUnit","CardDock","_ref2$position","position","_ref$position","ScrollArea","isPartialMatch","searchValue","search","toLocaleLowerCase","propValue","includes","__webpack_require__","d","__webpack_exports__","FormInputFlatSelect","_speedlo_tools__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_form__WEBPACK_IMPORTED_MODULE_2__","_i18n__WEBPACK_IMPORTED_MODULE_3__","_SelectControlFlat__WEBPACK_IMPORTED_MODULE_4__","items","field","_props$fieldIsPure","fieldIsPure","_props$isClearable","isClearable","_props$isMulti","isMulti","_props$isRequired","isRequired","_props$validationName","validationName","_","_props$getItemId","getItemId","idProp","pure","validate","value","Array","isArray","length","fieldApi","Object","assign","selection","selectedItems","filter","item","onMultiSelection","setValue","map","setTouched","selectedItem","find","onSingleSelection","getControlProps","isInvalid","Boolean","error","StyledBlockLoader","Colors","orange","BlockLoader","className","RelativeLink","to","from","linkProps","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isAbsolute","charAt","spliceOne","list","index","i","k","pop","hasTrailingSlash","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","last","up","part","unshift","result","join","substr","FormInputSelect","_React$Component","_getPrototypeOf2","_this","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_len","arguments","args","_key","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","apply","_i18n__WEBPACK_IMPORTED_MODULE_10__","0","validatioName","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","_this$props","options","getOptionValue","defaultValue","isSelected","RM","F","onChange","selectedOptions","option","_this2","_this$props2","_this$props2$fieldIsP","react__WEBPACK_IMPORTED_MODULE_7___default","react_form__WEBPACK_IMPORTED_MODULE_8__","_SelectControl__WEBPACK_IMPORTED_MODULE_11__","onFocus","styles","control","base","borderColor","React","Component","defaultProps","prop","DragHandleContainerStyled","DragHandle","SortableHandle","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","_extends","target","source","prototype","hasOwnProperty","defineProperty","exports","tslib_1","isApolloError","err","generateErrorMessage","message","graphQLErrors","forEach","graphQLError","errorMessage","networkError","replace","ApolloError","_super","_a","extraInfo","__proto__","__extends","Error","TouchButtonEdit","_ref$Link","Link","objectWithoutProperties","react_default","SizerButton","TouchButton","TouchButtonRemove","esm_extends","TouchButtonVisibility","isVisible","iconColor","white","greyMiddle","color","NoteText","DataTable","_props$heightStretch","heightStretch","_props$fullHeight","fullHeight","_props$rowHeight","rowHeight","_props$isLoading","isLoading","tableProps","rowGetter","useCallback","noRowsRenderer","renderTable","width","es","autoHeight","headerHeight","rowCount","style","outline","disableHeight","scrollElement","window","_ref4","_ref5","checkColumnAccess","_ref6","renderer","canQuery","canMutate","cellProps","CanQuery","queryName","CanMutate","mutationName","ColumnRendererEdit","_ref7","cellData","TouchButtonEdit_TouchButtonEdit","ColumnRendererRemove","_ref8","columnData","TouchButtonRemove_TouchButtonRemove","onClick","onRemove","ColumnRendererVisibility","_ref9","rowData","TouchButtonVisibility_TouchButtonVisibility","onToggle","ColumnRendererWithNote","_ref10","Fragment","noteKey","DataTableEmptyText","_ref11","_ref11$text","text","i18n","DataTable_templateObject","SortableTableRowRenderer","SortableElement","columns","SortableDataTableContainer","SortableContainer","SortableDataTable","_React$PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","sortedItems","rowRenderer","rowProps","onHandleSorting","asyncToGenerator","regenerator_default","mark","_callee","newIndex","oldIndex","currentItems","sortSuccess","wrap","_context","prev","next","abrupt","toConsumableArray","arrayMove","setState","onSort","offset","t0","sent","stop","_x","inherits","createClass","lockAxis","useDragHandle","onSortEnd","PureComponent","getDerivedStateFromProps","nextProps","CategoryListTable","categories","_ref$showEditColumn","showEditColumn","_ref$showRemoveColumn","showRemoveColumn","_ref$showVisibilityCo","showVisibilityColumn","_ref$showHeader","showHeader","_ref$isSortable","isSortable","_ref$isLoading","_ref$heightStretch","_ref$fullHeight","_ref$noRowsDisplay","noRowsDisplay","disableHeader","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","cellDataGetter","getCategoryRoute","categoryType","enum","label","objectSpread","CreateButtonContainer","CreateButton_templateObject","CreateButton","_ref$routeTo","routeTo","green","StyledCategoryList","CategoryList_templateObject","greyLight","observer","headline","_ref$subHeadline","subHeadline","settings","useRoot","_useQMenuCategoryList","useQMenuCategoryList","branchId","data","loading","updateQuery","refetch","dataOrigins","useQMenuCategoryOrigins","originsMap","useMemo","origins","reduce","acc","origin","code","renderOrigins","sort","originEnum","_useMMenuCategoryVisi","useMMenuCategoryVisibility","changeVisibility","slicedToArray","FlexColumn","widthGrowIndex","Headline","fixedWidth","CreateButton_CreateButton","CategoryListTable_CategoryListTable","categoryId","visible","optimisticResponse","updateWareCategory","__typename","menu","category","sortCategory","fontSize","MenuGuideDownloadButton","MenuGuideDownload_templateObject","black","MenuGuideDownload","_useQMenuGuideDownloa","useQMenuGuideDownload","companyBranch","foodMenuUrl","href","_lingui_react","PartialDataTableContainer","MenuCategoryListPage_templateObject","MenuCategoryListPage","FullPageLayout","pageTitle","useBackButton","Card","stretchToParent","SettingsCompanyBranchPicker","organisms_CategoryList","WareCategoryTypeEnum","Main","SideDish","Cover","TopRightButtonContainer","TopRightButtonContainer_templateObject","Radiuses","Button","IsCategoryType","type","isMain","isSideDish","isCover","_categories","i18nMark","recipes","_recipes","getCategoryTypeLabel","getRecipeTypeLabel","recipeType","SubmitButton","_ref$isCreate","isCreate","react_form_es","render","form","FormSubmit","isFormValid","getButtonText","FormContainer","FormContainer_templateObject","FormColumn","WithSettings","observe","WithRoot","_render","toString","PictogramDisplayStyled","PictogramDisplay_templateObject","_ref2$fontSize","_ref2$fontSizeUnit","fontSizeUnit","PictogramDisplay","pictogramId","_ref$fontSize","_ref$fontSizeUnit","getClassName","MenuCategoryPictogramSelect","SelectControl","pictogram","availablePictograms","formatOptionLabel","PictogramDisplay_PictogramDisplay","components","SingleValue","container","menuList","maxHeight","isSearchable","FormDeleteButton","confirmText","onDelete","react_router","history","TouchButtonDelete","goBack","FormInputInternalNote","_ref$field","_ref$label","icon","IconLine","labelWidth","FormInputTextBox","inputFullWidth","FormInputName","_ref$icon","MenuCategoryOrigins","_useQMenuCategoryOrig","getOptionLabel","CategoryBasicForm","Sizer","FormInputName_FormInputName","placeholder","FormInputInternalNote_FormInputInternalNote","MenuCategoryOrigins_MenuCategoryOrigins","FormInputCheckbox","MenuCategoryPictogramSelect_MenuCategoryPictogramSelect","WithSettings_WithSettings","FormDeleteButton_FormDeleteButton","deleteCategory","FormLoader","shouldLoad","loader","_useState","useState","_useState2","values","setValues","useEffect","then","NavigateBack","ErrorPop","MenuBaseFormLoader_templateObject","MenuBaseFormLoader","submitError","validationErrors","_this$state","renderSubmitError","renderValidationErrors","messages","propEq","userErrors","renderPopover","errors","index_es","open","anchorEl","document","getElementById","onClose","anchorOrigin","vertical","horizontal","idx","_this3","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack_NavigateBack","defaultValues","defaults","loadedDefaults","formApi","logForm","onSubmit","_callee2","_context2","onSubmitFailure","keys","logError","renderErrors","useMenu","CategoryFormLoader","MenuBaseFormLoader_MenuBaseFormLoader","createCategory","updateCategory","internalNoteLabel","nameLabel","minCount","maxCount","getDefaults","client","query","QMenuCategoryDocument","variables","fetchPolicy","DataList","renderItem","listProps","renderList","formInputPriceValidate","isEmpty","validateNumber","FormInputPrice","VatsQuery","gql","FormInputVatSelect_graphql_templateObject","QueryVat","buildQuery","css","FormInputVatSelect_templateObject","FormInputVatSelect","useObserver","renderLoading","vats","formatItem","vat","FormPricingCurrencyCode","FormPricingField_templateObject","FormPricingField","priceType","FormInputPrice_FormInputPrice","FormInputVatSelect_FormInputVatSelect","MenuSuggestionPanel","onAdd","_props$addLabel","addLabel","_props$addButtonText","addButtonText","selectProps","_useStateRef","useStateRef","_useStateRef2","getSelected","setSelected","onConfirm","selected","onKeyDown","ev","onSelect","margin","disabled","RecipeAssocListTable","DataTable_DataTable","RecipeAssociatedView","recipeId","priceTypeRecipes","rejectSuggestions","reject","recipe","some","onAddRecipe","addedRecipe","warePriceType","associatedRecipe","formattedPrice","RecipeAssocListTable_RecipeAssocListTable","RecipeForm_graphql","priceTypes","WarePriceTypeEnum","Delivery","Inhouse","RecipeFormPricing","react","FormPricingField_FormPricingField","TRecipeType","RecipeAssociatedView_RecipeAssociatedView","RecipeSuggestionPanel","filterRecipes","_useQMenuRecipeList","useQMenuRecipeList","Container","CategoryRecipesView_templateObject","FormFixedRow","CategoryRecipesView_templateObject2","FormStretchedRow","_templateObject3","SortableRecipes","RecipeRow","_templateObject4","MoveCell","_templateObject5","SortableRecipe","prices","foundPrice","pathEq","price","formattedValue","internalNote","CategoryRecipesView","without","lockToContainerEdges","StyledCategoryRequirementControl","CategoryRequirementControl_templateObject","CategoryRequirementControl","count","enabled","countRef","useRef","htmlFor","FormInputStyled","_onChange","validity","valid","Number","parseInt","select","pattern","StyledCheckbox","checked","_onChange2","_x2","current","getRulesMap","noLimit","min","max","optional","required","onlyOne","custom","CategoryRequirementsForm","ruleMap","_React$useState","_React$useState2","currentRule","setRule","getValue","found","findKey","setMinCount","setMaxCount","SelectControlFlat","req","selectedRule","rule","CategoryRequirementControl_CategoryRequirementControl","MenuCategoryPage_templateObject","MenuCategoryPage_templateObject2","MenuCategoryPage_templateObject3","MenuCategoryPage","CategoryFormLoader_CategoryFormLoader","hideLogoutWidget","MenuCategoryPage_FormContainer","MenuCategoryPage_FormFixedRow","CategoryFormBasic_CategoryBasicForm","IsCategoryType_IsCategoryType","component","MenuCategoryPage_FormStretchedRow","CategoryRecipesView_CategoryRecipesView","SubmitButton_SubmitButton","DataTableContainer","DataTableContainer_templateObject","MenuCategoryFilter","_useQMenuCategoryFilt","useQMenuCategoryFilter","setCategoryFilter","grouped","groupBy","cat","typeString","getOptions","MenuFilterInput","modelType","model","useDebounceCallback","setFilterInput","Search","filterInput","RecipeTypeSelection","isOpen","setOpen","useRouterContext","getRecipeRoute","push","preventDefault","RecipeListTable","_ref$showTypeColumn","showTypeColumn","react_content_loader_es","ColumnRendererCode","flexGrow","ColumnRendererPrice","TPriceType","RecipeListLoader","categoryFilterId","filteredRecipes","useComputed","partialMatch","cond","propSatisfies","T","RecipeListTable_RecipeListTable","MenuRecipeListPage","MenuFilterInput_MenuFilterInput","RecipeTypeSelection_RecipeTypeSelection","currentCategories","RecipeCategoryView","noRowsText","organisms_CategorySuggestionPanel","addedCategory","FormInputCode","FormInputDescription","AllergensQuery","FormInputAllergens_graphql_templateObject","FMenuAllergenFragmentDoc","QueryAllergens","AllergenBox","AllergenIndicator_templateObject","MarginAroundFormComponents","active","AllergenIndicator_templateObject2","yellow","MenuAllergenIndicator","allergens","allergen","title","RecipeAllergenDisplay","uniq","flatten","AllergenIndicator_MenuAllergenIndicator","RecipeFormBasic","FormInputCode_FormInputCode","FormInputDescription_FormInputDescription","RecipeAllergenDisplay_RecipeAllergenDisplay","deleteRecipe","RecipeFormLoader","createRecipe","updateRecipe","currencyCode","queryDefaults","getPriceMap","vatId","MenuRecipeFormQuery","normalizeValues","descriptionLabel","image","sourcePrices","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","recipeSource","quantity","_ref7$stockItem","stockItem","unitLabel","wareUnit","sourcePrice","currency","RecipeIngredientsTable","rowIndex","validateQuantity","fieldName","validator","isFloat","unselectedStockOnly","differenceWith","RecipeIngredientsControl","_useQMenuStockList","useQMenuStockList","RecipeIngredientsTable_RecipeIngredientsTable","stockItems","_onAdd","addedStockItem","RecipeIngredientsView","ingredient","stockItemId","MenuRecipePage","RecipeFormLoader_RecipeFormLoader","MarginBox","RecipeFormBasic_RecipeFormBasic","RecipeFormPricing_RecipeFormPricing","RecipeIngredientsView_RecipeIngredientsView","RecipeCategoryView_RecipeCategoryView","StockDepositConfirmButton","numeral","format","priceFormat","1","StockDepositFilterInput","forwardRef","ref","onFilter","autoFocus","onKeyPressCapture","StockDepositQuantityInput","StockDepositResultTable","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","StockDepositResultTable_templateObject","indexOf","begin","substring","match","end","StockDepositControl","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","trim","head","onConfirmFilter","focus","onQuantity","onSelectStockItem","onDeposit","prevProps","_this$state2","hasSearchValue","isNoneFind","isMultiFind","StockDepositConfirmButton_StockDepositConfirmButton","cardName","StockDepositResultTable_StockDepositResultTable","StockDepositLoader","_useQMenuStockDeposit","useQMenuStockDeposit","_useMMenuStockQuantit","useMMenuStockQuantity","changeQuantity","quantityChange","MenuStockDepositPage","StockDepositControl_StockDepositControl","StockListTable","Loading","stockAllowNegative","StockListLoader","filteredItems","stock","StockListTable_StockListTable","MenuStockListPage","MenuStockFormQuery","StockForm_graphql_templateObject","FMenuWareUnitFragmentDoc","MenuStockDefaultsQuery","StockForm_graphql_templateObject2","StockFormLoader","stockId","createItem","updateItem","allowNegativeDefault","getAllowNegativeDefault","allowNegative","note","plu","FieldStateEnum","Default","isEnabled","Disabled","FormInputAllergens","Enabled","FormInputAllowNegative","obj","TypeError","_objectDestructuringEmpty","labelForDefault","FormInputPlu","WareUnitsQuery","FormInputWareUnit_graphql_templateObject","QueryWareUnits","FormInputWareUnit","wareUnits","StockFormMain","FormInputWareUnit_FormInputWareUnit","FormInputPlu_FormInputPlu","FormInputAllergens_FormInputAllergens","FormInputAllowNegative_FormInputAllowNegative","deleteItem","StockRecipesView","_useQStockRecipes","useQStockRecipes","MenuStockPage","StockFormLoader_StockFormLoader","StockFormMain_StockFormMain","StockRecipesVIew_StockRecipesView","MenuRoutes_MenuRoutes","MenuRoutes","SecureRoute","exact","path","params","MenuCategoryPage_MenuCategoryPage","MenuRecipePage_MenuRecipePage","MenuStockPage_MenuStockPage","NotFoundPage"],"mappings":"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","file":"static/js/180.066596b2.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => (\n  <StyledPageLayoutFullHeightItem\n    column={column}\n    row={row}\n    rowInMobile={rowInMobile}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n    forcePercentHeightInMobile={forceHeightInMobile}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <Sizer height={100} heightUnit=\"%\">\n        {children}\n      </Sizer>\n    )}\n  </StyledPageLayoutFullHeightItem>\n)\n","import styled from 'styled-components'\n\ninterface IProps {\n  flexWrap?: string\n  justify?: string\n}\n\nexport const FlexRowSingle = styled.div<IProps>`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: ${({ flexWrap = 'unset' }: IProps) => flexWrap};\n  justify-content: ${({ justify = 'space-between' }: IProps) => justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import { idProp } from '@speedlo/tools'\nimport React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends Omit<\n    ISelectControlFlatProps<ItemType>,\n    'selectedItems' | 'onMultiSelection' | 'selectedItem' | 'onSingleSelection'\n  > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n}\n\nexport const FormInputFlatSelect = <ItemType extends Record<string, any>>(\n  props: IFormInputSelectProps<ItemType>,\n) => {\n  const {\n    items,\n    field,\n    fieldIsPure = false,\n    isClearable = false,\n    isMulti = false,\n    isRequired = false,\n    validationName = i18n.t`Value`,\n    getItemId = idProp as AnyFunction,\n  } = props\n\n  const validate = value => {\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && (value === null || value === undefined)) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n\n  const getControlProps = (\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> => {\n    const selection = fieldApi.value\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) => selection.includes(getItemId(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n\n  return (\n    <Field field={field} pure={fieldIsPure} validate={validate}>\n      {fieldApi => (\n        <SelectControlFlat<ItemType>\n          {...getControlProps(fieldApi)}\n          isInvalid={Boolean(fieldApi.error)}\n          isClearable={isClearable && !isRequired}\n          {...props}\n        />\n      )}\n    </Field>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nconst StyledBlockLoader = styled.div`\n  width: 40px;\n  height: 40px;\n  margin: 100px auto;\n  background-color: ${Colors.orange};\n\n  border-radius: 100%;\n  -webkit-animation: sk-scaleout 1s infinite ease-in-out;\n  animation: sk-scaleout 1s infinite ease-in-out;\n\n  @-webkit-keyframes sk-scaleout {\n    0% {\n      -webkit-transform: scale(0);\n    }\n    100% {\n      -webkit-transform: scale(1);\n      opacity: 0;\n    }\n  }\n\n  @keyframes sk-scaleout {\n    0% {\n      -webkit-transform: scale(0);\n      transform: scale(0);\n    }\n    100% {\n      -webkit-transform: scale(1);\n      transform: scale(1);\n      opacity: 0;\n    }\n  }\n`\n\nexport const BlockLoader: React.FC = props => {\n  return (\n    <StyledBlockLoader>\n      <div className=\"bounce1\" />\n      <div className=\"bounce2\" />\n      <div className=\"bounce3\" />\n    </StyledBlockLoader>\n  )\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      defaultValue,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nfunction isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\nexports.isApolloError = isApolloError;\n\nvar generateErrorMessage = function generateErrorMessage(err) {\n  var message = '';\n\n  if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += \"GraphQL error: \" + errorMessage + \"\\n\";\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nvar ApolloError = function (_super) {\n  tslib_1.__extends(ApolloError, _super);\n\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        networkError = _a.networkError,\n        errorMessage = _a.errorMessage,\n        extraInfo = _a.extraInfo;\n\n    var _this = _super.call(this, errorMessage) || this;\n\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      _this.message = generateErrorMessage(_this);\n    } else {\n      _this.message = errorMessage;\n    }\n\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n\n  return ApolloError;\n}(Error);\n\nexports.ApolloError = ApolloError;","import { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends Omit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.FC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <SizerButton>\n      <TouchButton iconName=\"mode_edit\" {...props} />\n    </SizerButton>\n  </Link>\n)\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.FC<IProps> = ({ ...props }) => (\n  <SizerButton>\n    <TouchButton iconName=\"remove_circle_outline\" {...props} />\n  </SizerButton>\n)\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.FC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      iconName=\"remove_red_eye\"\n      iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n      color={Colors.greyMiddle}\n      {...props}\n    />\n  </SizerButton>\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Index,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { BlockLoader } from './BlockLoader'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport { NoteText } from './NoteText'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  rowHeight?: number\n  isLoading?: boolean\n  heightStretch?: boolean\n  fullHeight?: boolean\n}\n\nexport const DataTable = <T extends {}>(props: IDataTableProps<T>) => {\n  const {\n    items,\n    heightStretch = false,\n    fullHeight = false,\n    rowHeight = 60,\n    isLoading = false,\n    children,\n    ...tableProps\n  } = props\n\n  const rowGetter = React.useCallback(({ index }: Index) => items[index], [\n    items,\n  ])\n\n  const noRowsRenderer = React.useCallback(\n    () => (isLoading ? <BlockLoader /> : null),\n    [isLoading],\n  )\n\n  const renderTable = (width: number, height: number) => {\n    return (\n      <Table\n        autoHeight={!heightStretch && !fullHeight}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowCount={items ? items.length : 0}\n        rowHeight={rowHeight}\n        rowGetter={rowGetter}\n        noRowsRenderer={noRowsRenderer}\n        style={{ outline: 'none' }}\n        {...tableProps}\n      >\n        {children}\n      </Table>\n    )\n  }\n\n  if (fullHeight) {\n    return (\n      <AutoSizer disableHeight={true}>\n        {({ width }) => renderTable(width, items.length * rowHeight)}\n      </AutoSizer>\n    )\n  }\n\n  if (heightStretch) {\n    return (\n      <AutoSizer>{({ width, height }) => renderTable(width, height)}</AutoSizer>\n    )\n  }\n\n  return (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderTable(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.PureComponent<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  rowRenderer = rowProps => {\n    return <SortableTableRowRenderer {...rowProps} />\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        lockAxis=\"y\"\n        useDragHandle={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={this.rowRenderer}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FMenuCategoryListItemFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\n\ntype TCategory = FMenuCategoryListItemFragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  fullHeight?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.FC<IProps> = ({\n  categories,\n  children,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  fullHeight = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    heightStretch,\n    fullHeight,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  const columns = [\n    showEditColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canQuery: 'wareCategory' },\n          ColumnRendererEdit,\n        )}\n        cellDataGetter={({ rowData }) =>\n          getCategoryRoute(rowData.id, rowData.categoryType.enum)\n        }\n      />\n    ),\n    showRemoveColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererRemove}\n        columnData={{ onRemove }}\n      />\n    ),\n    showVisibilityColumn && (\n      <Column\n        dataKey=\"visible\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canMutate: 'updateWareCategory' },\n          ColumnRendererVisibility,\n        )}\n        columnData={{ onToggle }}\n      />\n    ),\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNoteLabel' }}\n    />,\n    <Column\n      dataKey=\"countRecipes\"\n      label={i18n.t`Recipe count`}\n      width={100}\n      cellRenderer={({ cellData }) =>\n        `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n      }\n    />,\n    children,\n    isSortable && (\n      <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n    ),\n  ]\n\n  if (isSortable) {\n    return React.createElement(\n      SortableDataTable,\n      {\n        onSort: onSort as any,\n        ...props,\n      },\n      ...columns,\n    )\n  }\n\n  return React.createElement(DataTable, props, ...columns)\n}\n","import { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLAnchorElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.FC<IProps> = ({\n  routeTo = 'create',\n  onClick,\n}) => (\n  <CreateButtonContainer>\n    <RelativeLink to={routeTo} onClick={onClick}>\n      <SizerButton>\n        <TouchButton iconName=\"add_circle\" color={Colors.green} />\n      </SizerButton>\n    </RelativeLink>\n  </CreateButtonContainer>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Column } from '../../../atoms/DataTable'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderOriginCategoryEnum,\n  useMMenuCategoryVisibility,\n  useQMenuCategoryList,\n  useQMenuCategoryOrigins,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst StyledCategoryList = styled.div`\n  .origins span {\n    display: inline-block;\n    margin: 0.2rem;\n    padding: 0.2rem;\n    background-color: ${Colors.greyLight};\n  }\n`\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery, refetch } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const { data: dataOrigins } = useQMenuCategoryOrigins()\n\n  const originsMap = React.useMemo(() => {\n    if (dataOrigins && dataOrigins.origins) {\n      return dataOrigins.origins.reduce((acc, origin) => {\n        acc[origin.enum] = origin.code\n        return acc\n      }, {}) as Record<OrderOriginCategoryEnum, string>\n    }\n    return {} as Record<OrderOriginCategoryEnum, string>\n  }, [dataOrigins])\n\n  const renderOrigins = React.useCallback(\n    ({ cellData }) => {\n      cellData.sort()\n      return cellData.map(originEnum => (\n        <span key={originEnum}>{originsMap[originEnum]}</span>\n      ))\n    },\n    [dataOrigins],\n  )\n\n  const [changeVisibility] = useMMenuCategoryVisibility()\n\n  const categories = loading ? [] : data.categories\n\n  return (\n    <StyledCategoryList>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <CreateButton routeTo={getCategoryRoute('create', categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories}\n        onToggle={(categoryId: ID, visible: boolean) => {\n          changeVisibility(\n            { categoryId, visible },\n            {\n              optimisticResponse: {\n                updateWareCategory: {\n                  __typename: 'WareCategory',\n                  id: categoryId,\n                  visible,\n                },\n              },\n            },\n          )\n        }}\n        isSortable={true}\n        showHeader={false}\n        fullHeight={true}\n        showVisibilityColumn={true}\n        onSort={async ({ item, items, offset }) => {\n          updateQuery(() => ({\n            categories: items,\n          }))\n          const result = await settings.menu.category.sortCategory(\n            item.id,\n            offset,\n          )\n          if (result) {\n            await refetch()\n          }\n          return result\n        }}\n      >\n        <Column\n          dataKey=\"origins\"\n          width={300}\n          className=\"origins\"\n          cellRenderer={renderOrigins}\n          style={{ fontSize: '0.8rem' }}\n        />\n      </CategoryListTable>\n    </StyledCategoryList>\n  )\n}\n\nexport default observer(CategoryList)\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuGuideDownload } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nconst MenuGuideDownloadButton = styled(TouchButton)`\n  white-space: nowrap;\n  margin-left: 2rem;\n  & a {\n    text-decoration: none;\n    color: ${Colors.black};\n    padding: 1rem;\n  }\n`\n\nexport const MenuGuideDownload = observer(() => {\n  const { settings } = useRoot()\n  const { loading, data } = useQMenuGuideDownload({\n    branchId: settings.branchId,\n  })\n  if (\n    loading ||\n    !(data && data.companyBranch && data.companyBranch.foodMenuUrl)\n  ) {\n    return null\n  }\n  return (\n    <MenuGuideDownloadButton color={Colors.greyMiddle}>\n      <a href={data.companyBranch.foodMenuUrl} target=\"_blank\">\n        <Trans>Menu codes manual</Trans>\n      </a>\n    </MenuGuideDownloadButton>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport CategoryList from '../organisms/CategoryList'\nimport { MenuGuideDownload } from '../organisms/MenuGuideDownload'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Category overview`} useBackButton={true}>\n    <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuGuideDownload />\n          </FlexColumn>\n        </FlexRowSingle>\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </FullPageLayout>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0;\n  top: 0rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.FC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menutypes'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport function getCategoryTypeLabel(categoryType: TCategoryType) {\n  return i18n._(categories[categoryType])\n}\n\nexport function getRecipeTypeLabel(recipeType: TRecipeType) {\n  return i18n._(recipes[recipeType])\n}\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.FC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { TSettingsModel } from '../models/SettingsModel'\n\ninterface IProps {\n  render(settings: TSettingsModel): ReactNode\n  observe?: boolean\n}\n\nexport const WithSettings: React.FC<IProps> = ({ observe, render }) => (\n  <WithRoot observe={observe} render={({ settings }) => render(settings)} />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst PictogramDisplayStyled = styled.div`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport const PictogramDisplay: React.FC<IProps> = ({\n  pictogramId,\n  fontSize = 2,\n  fontSizeUnit = 'rem',\n}) => (\n  <PictogramDisplayStyled\n    className={getClassName(pictogramId)}\n    fontSize={fontSize}\n    fontSizeUnit={fontSizeUnit}\n  />\n)\n\nfunction getFontSize({ fontSize = 2, fontSizeUnit = 'rem' }: Partial<IProps>) {\n  return `${fontSize}${fontSizeUnit}`\n}\n\nfunction getClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.FC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value && !Array.isArray(value)) {\n            fieldApi.setValue(value.pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router-dom'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.FC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.FC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputName: React.FC<IProps> = ({\n  field = 'nameLabel',\n  icon = 'label',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputFullWidth={true}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import { RM } from '@speedlo/tools'\nimport React from 'react'\n\nimport { FormInputSelect } from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  QMenuCategoryOriginsOrigins,\n  useQMenuCategoryOrigins,\n} from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\nexport const MenuCategoryOrigins: React.FC = () => {\n  const { data, loading } = useQMenuCategoryOrigins()\n  return (\n    <IconLine label={i18n.t`cat. origins`} labelWidth={7}>\n      <FormInputSelect<QMenuCategoryOriginsOrigins>\n        field=\"origins\"\n        isMulti={true}\n        isLoading={loading}\n        isSearchable={true}\n        options={loading ? [] : (data.origins as any)}\n        getOptionLabel={RM.prop('code')}\n        getOptionValue={RM.prop('enum')}\n      />\n    </IconLine>\n  )\n}\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { MenuCategoryOrigins } from '../molecules/MenuCategoryOrigins'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.FC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <Sizer width={30}>\n        <FormInputName\n          placeholder={i18n.t`Category name`}\n          inputFullWidth={true}\n        />\n      </Sizer>\n      <Sizer width={30}>\n        <FormInputInternalNote placeholder={i18n.t`Category internal note`} />\n      </Sizer>\n      <Sizer width={30}>\n        <MenuCategoryOrigins />\n      </Sizer>\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <CardDock position=\"BottomRight\">\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </CardDock>\n  </FormContainer>\n)\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(\n    () => {\n      if (!shouldLoad) {\n        return\n      }\n      loader().then(setValues)\n    },\n    [shouldLoad],\n  )\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.FC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              const defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import React from 'react'\n\nimport {\n  QMenuCategoryDocument,\n  QMenuCategoryQuery,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { OrderOriginCategoryEnum } from '../../../graph/types'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TCategoryFormValues } from '../models/MenuCategoryModel'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport const CategoryFormLoader: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={categoryId === null}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<QMenuCategoryQuery>({\n          query: QMenuCategoryDocument,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          ...data.category,\n          origins: data.category.origins as OrderOriginCategoryEnum[],\n        }\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    minCount: 0,\n    maxCount: 0,\n    categoryType: { enum: categoryType },\n    recipes: [],\n    origins: [],\n  }\n}\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  List,\n  ListProps,\n  ListRowRenderer,\n  WindowScroller,\n} from 'react-virtualized'\n\ninterface IColumn {\n  size: string\n}\n\ninterface IDataListProps<T> extends Partial<ListProps> {\n  items: ReadonlyArray<T>\n  columns?: IColumn[]\n  renderItem(item: T, index: number): ReactNode\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport function DataList<T>(props: IDataListProps<T>) {\n  const {\n    items,\n    renderItem,\n    isLoading = false,\n    heightStretch = false,\n    rowHeight = 60,\n    ...listProps\n  } = props\n\n  const rowRenderer: ListRowRenderer = React.useCallback(\n    ({ key, style, index }) => (\n      <div key={key} style={style}>\n        {renderItem(items[index], index)}\n      </div>\n    ),\n    [renderItem, items],\n  )\n\n  const renderList = (width: number, height: number) => (\n    <List\n      width={width}\n      height={height}\n      headerHeight={50}\n      rowHeight={rowHeight}\n      rowCount={items ? items.length : 0}\n      rowRenderer={rowRenderer}\n      style={{ outline: 'none' }}\n      {...listProps}\n    />\n  )\n\n  return heightStretch ? (\n    <AutoSizer>{({ width, height }) => renderList(width, height)}</AutoSizer>\n  ) : (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderList(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\ninterface IProps {\n  field: FieldType\n  className?: string\n  children?: never\n}\n\nexport const FormDisplayField: React.FC<IProps> = ({ field, className }) => {\n  return (\n    <Field field={field}>\n      {fieldApi => <span className={className}>{fieldApi.value}</span>}\n    </Field>\n  )\n}\n","import React from 'react'\nimport { isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { validateNumber } from '../../../locale/numeral'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nconst formInputPriceValidate = (value: string) => {\n  if (\n    value === undefined ||\n    isEmpty(value + '') ||\n    !validateNumber(value + '')\n  ) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.FC<IProps> = ({\n  field = 'price.value',\n  icon = 'toll',\n  ...props\n}) => (\n  <IconLine icon={icon}>\n    <Sizer width={5}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        validate={formInputPriceValidate}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import { css } from 'emotion'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.FC<IProps> = ({\n  field = 'price.vat',\n}) => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QueryVat\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderLoading={false}\n      render={({ vats }) => (\n        <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n          {vats && (\n            <FormInputFlatSelect\n              field={field}\n              items={vats}\n              formatItem={({ vat }) => `${vat}%`}\n              isRequired={true}\n              validationName={i18n.t`VAT`}\n            />\n          )}\n        </IconLine>\n      )}\n    />\n  ))\n}\n","import React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormDisplayField } from '../../../atoms/FormDisplayField'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nconst FormPricingCurrencyCode = styled(FormDisplayField)`\n  padding: 0.5rem;\n`\n\nexport const FormPricingField: React.FC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormPricingCurrencyCode field=\"currencyCode\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import { useStateRef } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: string }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(\n    () => {\n      const selected = getSelected()\n      if (selected !== null) {\n        onAdd(selected)\n        setSelected(null)\n      }\n    },\n    [onAdd],\n  )\n\n  const onKeyDown = useCallback((ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === 'Enter') {\n      onConfirm()\n    }\n  }, [])\n\n  const onSelect = useCallback(option => {\n    setSelected(option || null)\n  }, [])\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.prop('nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.FC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.FC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                variables={{\n                  branchId: settings.branchId,\n                }}\n                fetchPolicy=\"cache-and-network\"\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.FC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useQMenuRecipeList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel = observer<IProps>(\n  ({ categoryType, filterRecipes, onAdd }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuRecipeList({\n      branchId: settings.branchId,\n      categoryType,\n    })\n    return (\n      <MenuSuggestionPanel<TRecipe>\n        isLoading={loading}\n        options={loading ? [] : filterRecipes(data.recipes)}\n        onAdd={onAdd}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { DataList } from '../../../atoms/DataList'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { priceTypes } from './RecipeFormPricing'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n`\n\nconst FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\n\nconst FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  margin: 1rem 0 0 1rem;\n`\n\nconst SortableRecipes = SortableContainer(FormStretchedRow)\n\nconst RecipeRow = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: ${Spacing.ButtonColumnWidthPx}px 100px 3fr 1fr 1fr 50px;\n`\n\nconst MoveCell = styled.div`\n  cursor: move;\n`\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IRecipeRow {\n  recipe: TRecipe\n  onRemove(): void\n}\n\nconst SortableRecipe = SortableElement<IRecipeRow>(({ recipe, onRemove }) => {\n  const prices = priceTypes.map(({ priceType, label }) => {\n    const foundPrice = recipe.prices.find(\n      RM.pathEq(['priceType', 'enum'], priceType),\n    )\n    return (\n      <MoveCell key={priceType}>\n        <NoteText>{i18n._(label)}</NoteText>\n        {foundPrice ? (\n          foundPrice.price.formattedValue\n        ) : (\n          <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n        )}\n      </MoveCell>\n    )\n  })\n\n  return (\n    <RecipeRow>\n      <div>\n        <TouchButtonRemove onClick={onRemove} />\n      </div>\n      <MoveCell>{recipe.code}</MoveCell>\n      <MoveCell>\n        {recipe.nameLabel}\n        <NoteText>{recipe.internalNote}</NoteText>\n      </MoveCell>\n      {prices}\n      <DragHandle />\n    </RecipeRow>\n  )\n})\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<TRecipe>>) => {\n        const recipes = fieldApi.value\n        const onHandleSorting: SortEndHandler = async ({\n          newIndex,\n          oldIndex,\n        }) => {\n          if (newIndex === oldIndex) {\n            return\n          }\n          const sortedItems = arrayMove(\n            recipes as TRecipe[],\n            oldIndex,\n            newIndex,\n          )\n\n          fieldApi.setValue(sortedItems)\n        }\n        return (\n          <Container>\n            <FormFixedRow>\n              <RecipeSuggestionPanel\n                categoryType={categoryType}\n                filterRecipes={RM.without(fieldApi.value)}\n                onAdd={addedRecipe =>\n                  fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n                }\n              />\n            </FormFixedRow>\n            <SortableRecipes\n              lockAxis=\"y\"\n              lockToContainerEdges={true}\n              onSortEnd={onHandleSorting}\n            >\n              <DataList\n                items={fieldApi.value}\n                heightStretch={true}\n                rowHeight={60}\n                renderItem={(recipe, index) => (\n                  <SortableRecipe\n                    recipe={recipe}\n                    onRemove={() => {\n                      fieldApi.setValue(\n                        RM.reject(RM.propEq('id', recipe.id), fieldApi.value),\n                      )\n                    }}\n                    index={index}\n                  />\n                )}\n                rowCount={fieldApi.value.length}\n              />\n            </SortableRecipes>\n          </Container>\n        )\n      }}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { StyledCheckbox } from '../../../atoms/StyledCheckbox'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  id: string\n  count: number\n  label: ReactNode | string\n  enabled: boolean\n  onChange(count: number): void\n}\n\nconst StyledCategoryRequirementControl = styled.div`\n  display: flex;\n  align-items: center;\n  & > label {\n    min-width: 5rem;\n  }\n  & > * {\n    margin: 0.2rem 0.5rem;\n  }\n  input.count {\n    font-size: 1.5rem;\n    line-height: 1.5rem;\n    text-align: center;\n  }\n`\n\nexport const CategoryRequirementControl: React.FC<IProps> = ({\n  count,\n  label,\n  enabled,\n  onChange,\n  id,\n}) => {\n  const countRef = React.useRef(count)\n  return (\n    <StyledCategoryRequirementControl>\n      <label htmlFor={id}>{label}</label>\n      <Sizer width={3}>\n        <FormInputStyled\n          id={id}\n          value={count === 0 ? '' : count}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              onChange(Number.parseInt(ev.target.value, 10))\n            }\n          }}\n          onFocus={ev => {\n            ev.target.select()\n          }}\n          disabled={count === 0 || !enabled}\n          inputFullWidth={true}\n          type=\"tel\"\n          pattern=\"^[1-9]\\d*$\"\n          className=\"count\"\n        />\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton\n          disabled={!enabled || count <= 0}\n          onClick={() => onChange(count - 1)}\n        >\n          ➖\n        </TouchButton>\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton disabled={!enabled} onClick={() => onChange(count + 1)}>\n          ➕\n        </TouchButton>\n      </Sizer>\n      <div>\n        <StyledCheckbox>\n          <input\n            type=\"checkbox\"\n            id={`${id}-nolimit`}\n            checked={count === 0}\n            disabled={!enabled}\n            onChange={ev => {\n              if (count === 0) {\n                onChange(countRef.current || 1)\n              } else {\n                countRef.current = count\n                onChange(0)\n              }\n            }}\n          />\n          <label htmlFor={`${id}-nolimit`}>\n            <Trans>Unlimited</Trans>\n          </label>\n        </StyledCheckbox>\n      </div>\n    </StyledCategoryRequirementControl>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport _ from 'lodash'\nimport React from 'react'\nimport { IFormApi, IFormState } from 'react-form'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { CategoryRequirementControl } from '../molecules/CategoryRequirementControl'\n\ninterface IRequirement {\n  label: string\n  min?: number\n  max?: number\n}\n\nexport const getRulesMap = (): Record<string, IRequirement> => ({\n  noLimit: {\n    label: i18n.t`No limitation`,\n    min: 0,\n    max: 0,\n  },\n  optional: {\n    label: i18n.t`One at most`,\n    min: 0,\n    max: 1,\n  },\n  required: {\n    label: i18n.t`One at least`,\n    min: 1,\n    max: 0,\n  },\n  onlyOne: {\n    label: i18n.t`Exactly one`,\n    min: 1,\n    max: 1,\n  },\n  custom: {\n    label: i18n.t`Custom range`,\n  },\n})\n\ntype TRule = keyof ReturnType<typeof getRulesMap>\n\nexport const CategoryRequirementsForm: React.FC<{\n  formApi: IFormApi & IFormState\n}> = ({ formApi }) => {\n  const ruleMap = React.useMemo(getRulesMap, [])\n  const [currentRule, setRule] = React.useState<TRule>('noLimit')\n\n  const minCount = formApi.getValue('minCount')\n  const maxCount = formApi.getValue('maxCount')\n\n  React.useEffect(\n    () => {\n      if (currentRule !== 'custom') {\n        const found = _.findKey(\n          ruleMap,\n          ({ min, max }) => min === minCount && max === maxCount,\n        )\n        if (found) {\n          setRule(found)\n        }\n      }\n    },\n    [currentRule, minCount, maxCount],\n  )\n\n  const setMinCount = (count: number) => formApi.setValue('minCount', count)\n  const setMaxCount = (count: number) => formApi.setValue('maxCount', count)\n\n  return (\n    <>\n      <SelectControlFlat<TRule>\n        items={Object.keys(ruleMap) as ReadonlyArray<TRule>}\n        formatItem={req => ruleMap[req].label}\n        onSingleSelection={selectedRule => {\n          if (selectedRule) {\n            setRule(selectedRule)\n            const rule = ruleMap[selectedRule]\n            setMinCount(rule.min || 0)\n            setMaxCount(rule.max || 0)\n          }\n        }}\n        selectedItem={currentRule}\n      />\n      <CategoryRequirementControl\n        id=\"minCount\"\n        count={minCount}\n        label={<Trans>Minimum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMinCount}\n      />\n      <CategoryRequirementControl\n        id=\"maxCount\"\n        count={maxCount}\n        label={<Trans>Maximum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMaxCount}\n      />\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FormApi } from 'react-form'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getCategoryTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\nimport { CategoryRequirementsForm } from '../organisms/CategoryRequirementsForm'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n}) => (\n  <CategoryFormLoader categoryId={categoryId} categoryType={categoryType}>\n    <>\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      />\n\n      <PageLayoutFullHeightItem>\n        <FormContainer>\n          <FormFixedRow>\n            <Card>\n              <CategoryBasicForm categoryType={categoryType} />\n            </Card>\n          </FormFixedRow>\n          <IsCategoryType isSideDish={true} type={categoryType}>\n            <FormFixedRow>\n              <Card>\n                <Headline>\n                  <Trans>Required amounts of recipes to be picked</Trans>\n                </Headline>\n                <FormApi component={CategoryRequirementsForm} />\n              </Card>\n            </FormFixedRow>\n          </IsCategoryType>\n          <FormStretchedRow>\n            <Card stretchToParent={true}>\n              <Headline>\n                <Trans>Recipes assigned to this category</Trans>\n              </Headline>\n              <CategoryRecipesView categoryType={categoryType} />\n            </Card>\n          </FormStretchedRow>\n        </FormContainer>\n      </PageLayoutFullHeightItem>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={\n            categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n          }\n        >\n          <SubmitButton isCreate={categoryId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </>\n  </CategoryFormLoader>\n)\n","import styled from 'styled-components'\n\nexport const DataTableContainer = styled.div`\n  height: calc(100% - 4.5rem);\n  padding-top: 2rem;\n`\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  QMenuCategoryFilterCategories,\n  useQMenuCategoryFilter,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { getCategoryTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\n\ntype TCategory = QMenuCategoryFilterCategories\n\nexport const MenuCategoryFilter = observer(() => {\n  const {\n    settings: {\n      menu: { recipe },\n    },\n  } = useRoot()\n\n  const { data, loading } = useQMenuCategoryFilter({\n    branchId: recipe.branchId,\n  })\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return []\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TRecipeType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        key={recipe.branchId}\n        onChange={value => {\n          recipe.setCategoryFilter(value ? (value as TCategory).id : null)\n        }}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={true}\n        isSearchable={true}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.prop('nameLabel')}\n      />\n    </Sizer>\n  )\n})\n","import { Search } from '@material-ui/icons'\nimport { useDebounceCallback } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <Sizer width={17}>\n        <FormInputStyled\n          defaultValue={model.filterInput}\n          inputFullWidth={true}\n          onChange={ev => onChange(ev.target.value)}\n          placeholder={i18n.t`Filter by name or code`}\n        />\n      </Sizer>\n    </IconLine>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\nimport resolvePathname from 'resolve-pathname'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\nimport { CreateButton } from './CreateButton'\n\nexport const RecipeTypeSelection: React.FC = () => {\n  const [isOpen, setOpen] = React.useState(false)\n  const { history } = useRouterContext()\n\n  const onSelect = (recipeType: WareCategoryTypeEnum) => () => {\n    const to = getRecipeRoute(\n      resolvePathname('create', `${location.pathname}/`),\n      recipeType,\n    )\n    history.push(to)\n  }\n\n  return (\n    <>\n      <CreateButton\n        onClick={ev => {\n          ev.preventDefault()\n          setOpen(true)\n        }}\n      />\n      <Dialog open={isOpen} onClose={() => setOpen(false)}>\n        <DialogTitle>Select item type</DialogTitle>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Main)}>\n          <Trans>Ware</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.SideDish)}>\n          <Trans>Sidedish</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Cover)}>\n          <Trans>Cover</Trans>\n        </TouchButton>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport {\n  QMenuRecipeListRecipes,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TPriceType } from '../menutypes'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\n\ntype TRecipe = QMenuRecipeListRecipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.FC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  return (\n    <DataTable {...props}>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n    </DataTable>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuRecipeList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuRecipeList({\n    branchId: settings.branchId,\n    categoryId: settings.menu.recipe.categoryFilterId,\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data || !data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuCategoryFilter } from '../molecules/MenuCategoryFilter'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const MenuRecipeListPage: React.FC = props => (\n  <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true}>\n    <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\" flexWrap=\"wrap\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"recipe\" />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuCategoryFilter />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createRecipe\">\n          <RecipeTypeSelection />\n        </CanMutate>\n        <DataTableContainer>\n          <RecipeListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </FullPageLayout>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FMenuCategoryListItemFragment,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nconst CategorySuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <MenuSuggestionPanel<TCategory>\n      isLoading={loading}\n      options={RM.without(currentCategories, categories)}\n      addButtonText={addButtonText}\n      onAdd={onAdd}\n    />\n  )\n}\n\nexport default observer(CategorySuggestionPanel)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport {\n  FMenuCategoryListItemFragment,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport CategorySuggestionPanel from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nexport const RecipeCategoryView: React.FC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<TCategory[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.FC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        isRequired={true}\n        validatioName={i18n.t`Code`}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.FC<IProps> = ({\n  field = 'descriptionLabel',\n  icon = 'label_outline',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { FMenuAllergenFragmentDoc } from '../../../graph/generated'\nimport { GAllergens } from '../../../graph/types'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...FMenuAllergen\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/generated'\nimport { Colors, Spacing } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.FC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import _ from 'lodash'\nimport React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nexport const RecipeAllergenDisplay: React.FC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = _.uniq(_.flatten(value.map(RM.prop('allergens'))))\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.FC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon=\"error_outline\">\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <CardDock position=\"BottomRight\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </CardDock>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.FC<IProps> = ({\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={recipeId === null}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const { vats, currencyCode } = await menu.recipe.queryDefaults()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: vats[priceType],\n          currencyCode,\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.FC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInputTextBox\n            field={['ingredients', rowIndex, 'quantity']}\n            validate={validateQuantity}\n            inputFullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onAdd(ingredient: TIngredient): void\n  onRemove(stockItemId: ID): void\n}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsControl = observer<IProps>(\n  ({ ingredients, onAdd, onRemove }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuStockList({\n      branchId: settings.branchId,\n    })\n\n    return (\n      <>\n        <RecipeIngredientsTable ingredients={ingredients} onRemove={onRemove} />\n        <MenuSuggestionPanel<GMenuStockItem.Fragment>\n          isLoading={loading}\n          addButtonText={i18n.t`Add ingredient`}\n          options={\n            loading ? [] : unselectedStockOnly(data.stockItems, ingredients)\n          }\n          onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n            onAdd({\n              stockItem: addedStockItem.id,\n              label: addedStockItem.nameLabel,\n              quantity: 1,\n              unitLabel: addedStockItem.wareUnit.code,\n              allergens: addedStockItem.allergens.map(RM.prop('enum')),\n            })\n          }}\n        />\n      </>\n    )\n  },\n)\n\nexport const RecipeIngredientsView = () => {\n  return (\n    <Field field=\"ingredients\">\n      {(fieldApi: IFieldApi<TIngredient[]>) => (\n        <RecipeIngredientsControl\n          ingredients={fieldApi.value}\n          onAdd={ingredient => {\n            fieldApi.setValue([...fieldApi.value, ingredient])\n          }}\n          onRemove={stockItemId => {\n            fieldApi.setValue(\n              RM.reject(RM.propEq('stockItem', stockItemId), fieldApi.value),\n            )\n          }}\n        />\n      )}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getRecipeTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: WareCategoryTypeEnum\n}\n\nexport const MenuRecipePage: React.FC<IProps> = ({ recipeId, recipeType }) => (\n  <RecipeFormLoader recipeId={recipeId} recipeType={recipeType}>\n    <MarginBox margin=\"0 1.25rem 0 0\">\n      <FullPageLayout\n        pageTitle={getRecipeTypeLabel(recipeType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <Card>\n          <RecipeFormBasic recipeType={recipeType} />\n        </Card>\n        <Card>\n          <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n        </Card>\n        <Card>\n          <Headline>\n            <Trans>Recipe ingredients</Trans>\n          </Headline>\n          <VerticalGap />\n          <RecipeIngredientsView />\n        </Card>\n        <IsCategoryType type={recipeType} isMain={true}>\n          <Card>\n            <Headline>\n              <Trans>Sidedish categories</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>These sidedish are presented with recipe</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.SideDish}\n              field=\"sideDishes\"\n              addButtonText={i18n.t`Attach sidedish category`}\n              noRowsText={i18n.t`Recipe has no sidedish category attached`}\n            />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Category assignments</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>Recipe is in these categories</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.Main}\n              field=\"categories\"\n              addButtonText={i18n.t`Add to category`}\n              noRowsText={i18n.t`Recipe is not in any category`}\n            />\n          </Card>\n        </IsCategoryType>\n      </FullPageLayout>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n        >\n          <SubmitButton isCreate={recipeId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </MarginBox>\n  </RecipeFormLoader>\n)\n","import { Trans } from '@lingui/macro'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { FMenuWareUnitFragment } from '../../../graph/generated'\nimport { priceFormat } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<FMenuWareUnitFragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.FC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format(priceFormat)} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { QMenuStockDepositStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: QMenuStockDepositStockItems[]\n  onSelect(stockItem: QMenuStockDepositStockItems): void\n}\n\nexport const StockDepositResultTable: React.FC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTableContainer>\n    <DataTable items={stockItems} heightStretch={false}>\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererSelect}\n        columnData={{ onSelect }}\n      />\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n      <Column\n        dataKey=\"code\"\n        width={100}\n        label={i18n.t`Card code`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Card name`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n    </DataTable>\n  </DataTableContainer>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <SizerButton>\n      <TouchButton iconName=\"done\" onClick={() => onSelect(rowData)} />\n    </SizerButton>\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  componentDidUpdate(prevProps: IProps) {\n    if (prevProps.stockItems !== this.props.stockItems) {\n      this.onFilter(this.state.searchValue)\n    }\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { observer } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QMenuStockDepositStockItems,\n  useMMenuStockQuantity,\n  useQMenuStockDeposit,\n} from '../../../graph/generated'\n\nexport type TStockItem = QMenuStockDepositStockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader = observer<IProps>(({ children }) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockDeposit({\n    branchId: settings.branchId,\n  })\n  const [changeQuantity] = useMMenuStockQuantity()\n  const onDeposit: TDepositFn = (stockItem, quantity) => {\n    changeQuantity({\n      stockItem: stockItem.id,\n      quantityChange: quantity,\n    })\n  }\n  return children(loading ? [] : data.stockItems, onDeposit)\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.FC<IProps> = props => (\n  <FullPageLayout pageTitle={i18n.t`Stock deposit`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { QMenuStockListStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\n\ntype TStockItem = QMenuStockListStockItems\n\ninterface IProps {\n  stockItems: TStockItem[]\n  isLoading: boolean\n}\n\nexport const StockListTable: React.FC<IProps> = ({ stockItems, isLoading }) => (\n  <DataTable\n    items={stockItems}\n    heightStretch={true}\n    noRowsRenderer={() =>\n      isLoading ? (\n        <Loading />\n      ) : (\n        <h3>\n          <Trans>Selected branch has no stock cards</Trans>\n        </h3>\n      )\n    }\n  >\n    <Column\n      dataKey=\"id\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={checkColumnAccess(\n        { canQuery: 'stockItem' },\n        ColumnRendererEdit,\n      )}\n    />\n    <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      minWidth={30}\n      flexGrow={2}\n      label={i18n.t`Card name`}\n    />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"allowNegative\"\n      width={300}\n      label={i18n.t`Negative stock`}\n      cellRenderer={stockAllowNegative}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockListTable } from './StockListTable'\n\nexport const StockListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockList({\n    branchId: settings.branchId,\n  })\n\n  const filteredItems = useComputed(\n    () => {\n      if (!data || !data.stockItems || data.stockItems.length === 0) {\n        return []\n      }\n      const searchValue = settings.menu.stock.filterInput\n      const partialMatch = isPartialMatch(searchValue)\n      return data.stockItems.filter(\n        RM.cond([\n          [RM.propEq('plu', searchValue), RM.T],\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.stockItems],\n  )\n\n  return <StockListTable stockItems={filteredItems} isLoading={loading} />\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\n\nexport const MenuStockListPage: React.FC = props => (\n  <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true}>\n    <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\" flexWrap=\"wrap\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"stock\" />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createStockItem\">\n          <CreateButton routeTo=\"create\" />\n        </CanMutate>\n        <DataTableContainer>\n          <StockListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </FullPageLayout>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FMenuAllergenFragmentDoc,\n  FMenuWareUnitFragmentDoc,\n} from '../../../graph/generated'\nimport { GMenuStockForm } from '../../../graph/types'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...FMenuWareUnit\n      }\n      allergens {\n        ...FMenuAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n  ${FMenuWareUnitFragmentDoc}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  WareUnitEnum,\n} from '../../../graph/generated'\nimport { GMenuStockDefaults, GMenuStockForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.FC<IProps> = ({ stockId, children }) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={stockId === null}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId: stockId! },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n  icon?: string\n}\n\nexport const FormInputAllergens: React.FC<IProps> = ({\n  field = 'allergens',\n  icon = 'error_outline',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={icon} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.FC<IProps> = ({}) => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputPlu: React.FC<IProps> = ({\n  field = 'plu',\n  icon = 'fingerprint',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {\n  icon?: string\n}\n\nexport const FormInputWareUnit: React.FC<IProps> = ({\n  field = 'wareUnit',\n  icon = 'select_all',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={icon} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.FC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <CardDock position=\"BottomRight\">\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </CardDock>\n  </FormContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { BlockLoader } from '../../../atoms/BlockLoader'\nimport { Column, ColumnRendererEdit, DataTable } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { useQStockRecipes } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  stockId: ID\n}\n\nexport const StockRecipesView: React.FC<IProps> = ({ stockId }) => {\n  const { data, loading } = useQStockRecipes({\n    stockId,\n  })\n\n  if (loading) {\n    return <BlockLoader />\n  }\n\n  const {\n    stockItem: { ingredients },\n  } = data\n  if (ingredients.length === 0) {\n    return (\n      <Headline>\n        <Trans>No recipes are using stock card</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      <Headline>\n        <Trans>Recipes using this card</Trans>\n      </Headline>\n\n      <DataTable\n        items={[...ingredients]}\n        disableHeader={true}\n        fullHeight={true}\n      >\n        <Column\n          dataKey=\"\"\n          cellDataGetter={({ rowData }) => ({\n            pathname: `/settings/menu/recipe/${rowData.recipe.id}`,\n            state: { recipeType: rowData.recipe.recipeType.enum },\n          })}\n          cellRenderer={ColumnRendererEdit}\n          width={100}\n        />\n        <Column\n          dataKey=\"recipe\"\n          width={300}\n          label={i18n.t`Name`}\n          cellRenderer={({ rowData }) => (\n            <>\n              {rowData.recipe.nameLabel}\n              <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n            </>\n          )}\n        />\n      </DataTable>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const MenuStockPage: React.FC<IProps> = ({ stockId }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Stock card`}\n    hideLogoutWidget={true}\n    useBackButton={true}\n  >\n    <StockFormLoader stockId={stockId}>\n      <>\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              stockId === null ? 'createStockItem' : 'updateStockItem'\n            }\n          >\n            <SubmitButton isCreate={stockId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n        <Card>\n          <StockFormMain />\n          {stockId && (\n            <CanQuery queryName=\"recipes\">\n              <StockRecipesView stockId={stockId} />\n            </CanQuery>\n          )}\n        </Card>\n      </>\n    </StockFormLoader>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MenuRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      render={() => <Redirect to={`${match.path}/category`} />}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/category`}\n      component={MenuCategoryListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/category/:categoryId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuCategoryPage\n          categoryId={params.categoryId === 'create' ? null : params.categoryId}\n          categoryType={state.categoryType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/recipe`}\n      component={MenuRecipeListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/recipe/:recipeId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuRecipePage\n          recipeId={params.recipeId === 'create' ? null : params.recipeId}\n          recipeType={state.recipeType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/stock`}\n      component={MenuStockListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/deposit`}\n      component={MenuStockDepositPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/:stockId`}\n      render={({ match: { params } }) => (\n        <MenuStockPage\n          stockId={params.stockId === 'create' ? null : params.stockId}\n        />\n      )}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default MenuRoutes\n"],"sourceRoot":""}