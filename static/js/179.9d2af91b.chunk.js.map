{"version":3,"sources":["atoms/CanMutate.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","atoms/TouchButtonBadge.tsx","segments/main/molecules/OrderButton.tsx","segments/main/organisms/OrderCallWatch.graphql.ts","segments/main/molecules/CreateOrderButton.tsx","segments/main/molecules/CallMeButton.tsx","segments/main/molecules/KitchenButton.tsx","segments/main/molecules/MapViewButton.tsx","segments/main/molecules/OverviewButton.tsx","segments/main/molecules/SettingsButton.tsx","segments/main/molecules/SupportButton.tsx","segments/main/pages/MainDashboardPage.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CanMutate","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_1__","_RootProvider__WEBPACK_IMPORTED_MODULE_2__","_ref","mutationName","children","useRoot","user","canMutate","a","createElement","Fragment","concat","NoAccess","CanQuery","queryName","canQuery","TouchButtonBadge","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","styled","div","withConfig","displayName","componentId","Colors","red","OrderButton","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_atoms_TouchButtonBadge__WEBPACK_IMPORTED_MODULE_2__","_i18n__WEBPACK_IMPORTED_MODULE_3__","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","count","to","text","_","iconName","badge","color","yellow","OrderCallSubscription","gql","_templateObject","CreateOrderButton_CreateOrderButton","CreateOrderButton","_ref$showOnlyText","showOnlyText","data","useSubscription","location","pathname","state","call","react_default","react_router_dom","TouchButton","i18n","undefined","turquoise","isRinging","index_es","CallMeButton","props","KitchenButton","blue","MapViewButton","greyMiddle","OverviewButton","greyDark","SettingsButton","SupportButton","green","MainDashboardPage_MainDashboardPage","MainDashboardPage","PageLayout","layouts","i","x","y","w","h","static","pageTitle","showSoundControl","key","MapViewButton_MapViewButton","CallMeButton_CallMeButton","KitchenButton_KitchenButton","SettingsButton_SettingsButton","OverviewButton_OverviewButton","SupportButton_SupportButton"],"mappings":"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","file":"static/js/179.9d2af91b.chunk.js","sourcesContent":["import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return user.canMutate(mutationName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return user.canQuery(queryName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const TouchButtonBadge = styled.div`\n  min-height: 1.8rem;\n  line-height: 1.8rem;\n  min-width: 1.8rem;\n  font-size: 1.2rem;\n  margin: 0;\n  background-color: ${Colors.red};\n  color: white;\n  position: absolute;\n  right: -0.25rem;\n  top: -0.25rem;\n  border-radius: 1.8rem;\n  text-align: center;\n  vertical-align: middle;\n  padding: 0;\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { TouchButtonBadge } from '../../../atoms/TouchButtonBadge'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  count?: Maybe<number>\n}\n\nexport const OrderButton: React.FC<IProps> = ({ count }) => (\n  <Link to=\"/order\">\n    <TouchButton\n      text={i18n.t`Orders`}\n      iconName=\"assignment_returned\"\n      badge={\n        count && count > 0 ? <TouchButtonBadge>{count}</TouchButtonBadge> : null\n      }\n      color={Colors.yellow}\n    />\n  </Link>\n)\n","import gql from 'graphql-tag'\n\nexport const OrderCallSubscription = gql`\n  subscription SOrderCall {\n    call: updatedUserCallingCustomer {\n      eventId\n      phone\n      prefix\n      isRinging\n    }\n  }\n`\n","import { RingVolume } from '@material-ui/icons'\nimport { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { useSubscription } from 'react-apollo-hooks'\nimport { Link } from 'react-router-dom'\n\nimport { TouchButtonBadge } from '../../../atoms/TouchButtonBadge'\nimport { SOrderCall } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { OrderCallSubscription } from '../organisms/OrderCallWatch.graphql'\n\ninterface INewOrderButtonProps {\n  showOnlyText?: boolean\n}\n\nexport const CreateOrderButton: React.FC<INewOrderButtonProps> = ({\n  showOnlyText = false,\n}) => {\n  const { data } = useSubscription<\n    SOrderCall.Subscription,\n    SOrderCall.Variables\n  >(OrderCallSubscription)\n\n  const location: LocationDescriptor = {\n    pathname: '/order/create',\n    state: data ? data.call : null,\n  }\n\n  return (\n    <Link to={location}>\n      <TouchButton\n        text={i18n.t`Create order`}\n        iconName={showOnlyText ? undefined : 'add_circle'}\n        color={Colors.turquoise}\n        badge={\n          data && data.call && data.call.isRinging ? (\n            <TouchButtonBadge>\n              <RingVolume />\n            </TouchButtonBadge>\n          ) : null\n        }\n      />\n    </Link>\n  )\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nexport const CallMeButton: React.FC<IProps> = props => {\n  if (process.env.REACT_APP_STAGE === 'prod') {\n    return null\n  }\n  const { history } = useRouterContext()\n  const makeCall = useCallback((ev: React.MouseEvent<HTMLButtonElement>) => {\n    const phone = window.prompt(\n      'Zadej telefonní číslo, které ti bude volat (bez předvolby)',\n    )\n    if (phone === null) {\n      return\n    }\n    let eventId: MaybeID = null\n    if (ev.shiftKey) {\n      eventId = window.prompt('A teď ještě eventId, jestli víš co děláš ;)')\n    }\n    history.push({\n      pathname: `/order/create`,\n      state: {\n        eventId,\n        phone,\n      },\n    })\n  }, [])\n  return (\n    <TouchButton\n      text=\"Zavolej mi [DEV]\"\n      iconName=\"ring_volume\"\n      color={Colors.turquoise}\n      onClick={makeCall}\n    />\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nexport const KitchenButton: React.FC<IProps> = () => (\n  <Link to=\"/kitchen\">\n    <TouchButton\n      text={i18n.t`Kitchen`}\n      iconName=\"restaurant_menu\"\n      color={Colors.blue}\n    />\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IMapViewButtonProps {}\n\nexport const MapViewButton: React.FC<IMapViewButtonProps> = ({ children }) => (\n  <Link to=\"/order/map\">\n    <TouchButton text={i18n.t`Map`} iconName=\"map\" color={Colors.greyMiddle}>\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IOverviewButtonProps {}\n\nexport const OverviewButton: React.FC<IOverviewButtonProps> = ({\n  children,\n}) => (\n  <Link to=\"/overview\">\n    <TouchButton\n      text={i18n.t`Overview`}\n      iconName=\"trending_up\"\n      color={Colors.greyDark}\n    >\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface ISettingsButtonProps {}\n\nexport const SettingsButton: React.FC<ISettingsButtonProps> = ({\n  children,\n}) => (\n  <Link to=\"/settings\">\n    <TouchButton\n      text={i18n.t`Settings`}\n      iconName=\"settings\"\n      color={Colors.greyDark}\n    >\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface ISupportButtonProps {}\n\nexport const SupportButton: React.FC<ISupportButtonProps> = ({ children }) => (\n  <Link to=\"/support\">\n    <TouchButton text={i18n.t`Support`} iconName=\"help\" color={Colors.green}>\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { CallMeButton } from '../molecules/CallMeButton'\nimport { CreateOrderButton } from '../molecules/CreateOrderButton'\nimport { KitchenButton } from '../molecules/KitchenButton'\nimport { MapViewButton } from '../molecules/MapViewButton'\nimport { OrderButton } from '../molecules/OrderButton'\nimport { OverviewButton } from '../molecules/OverviewButton'\nimport { SettingsButton } from '../molecules/SettingsButton'\nimport { SupportButton } from '../molecules/SupportButton'\n\ninterface IDashboardPageProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'b1', x: 0, y: 1, w: 2, h: 2, static: true },\n    { i: 'b2', x: 2, y: 1, w: 2, h: 2, static: true },\n    { i: 'b3', x: 4, y: 1, w: 2, h: 2, static: true },\n    { i: 'b4', x: 10, y: 1, w: 1, h: 2, static: true },\n    { i: 'b5', x: 0, y: 3, w: 2, h: 2, static: true },\n    { i: 'bb1', x: 0, y: 7, w: 2, h: 2, static: true },\n    { i: 'bb2', x: 2, y: 7, w: 2, h: 2, static: true },\n    { i: 'bb3', x: 4, y: 7, w: 2, h: 2, static: true },\n    { i: 'bb4', x: 14, y: 7, w: 2, h: 2, static: true },\n  ]\n}\n\nexport const MainDashboardPage: React.FC<IDashboardPageProps> = props => (\n  <>\n    <PageLayout\n      layouts={getLayout()}\n      pageTitle={i18n.t`Main menu`}\n      showSoundControl={true}\n    >\n      <div key=\"b1\">\n        <CanQuery queryName=\"orders\">\n          <OrderButton />\n        </CanQuery>\n      </div>\n      <div key=\"b2\">\n        <CanQuery queryName=\"orders\">\n          <MapViewButton />\n        </CanQuery>\n      </div>\n      <div key=\"b3\">\n        <CanMutate mutationName=\"createOrder\">\n          <CreateOrderButton />\n        </CanMutate>\n      </div>\n      <div key=\"b4\">\n        <CanMutate mutationName=\"createOrder\">\n          <CallMeButton />\n        </CanMutate>\n      </div>\n      <div key=\"b5\">\n        <KitchenButton />\n      </div>\n      <div key=\"bb1\">\n        <SettingsButton />\n      </div>\n      <div key=\"bb2\">\n        <OverviewButton />\n      </div>\n      <div key=\"bb4\">\n        <SupportButton />\n      </div>\n    </PageLayout>\n  </>\n)\n\nexport default MainDashboardPage\n"],"sourceRoot":""}