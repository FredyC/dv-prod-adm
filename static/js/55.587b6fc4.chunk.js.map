{"version":3,"sources":["molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","atoms/DataTable.tsx","atoms/ScrollArea.tsx","helpers/filter.ts","atoms/RelativeLink.tsx","atoms/FormInputFlatSelect.tsx","atoms/DragHandle.tsx","atoms/FormContainer.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","hooks/useDebounceCallback.ts","atoms/FormInputSelect.tsx","segments/menu/molecules/CreateButton.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/molecules/SubmitButton.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","atoms/DataTableContainer.tsx","segments/menu/molecules/CategoryListTable.tsx","molecules/TouchButtonRemove.tsx","molecules/SortableDataTable.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/menutypes.ts","segments/menu/molecules/MenuFilterInput.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/molecules/FormInputCode.tsx","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/routes/MenuRoutes.tsx","segments/menu/pages/MenuCategoryListPage.tsx","segments/menu/organisms/CategoryList.tsx","molecules/TouchButtonEdit.tsx","molecules/TouchButtonVisibility.tsx","segments/menu/pages/MenuCategoryPage.tsx","segments/menu/organisms/CategoryFormBasic.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","../node_modules/@speedlo/assets/index.js","../node_modules/@speedlo/assets/Flaticon.js","atoms/PictogramDisplay.tsx","segments/menu/organisms/CategoryFormLoader.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/pages/MenuRecipeListPage.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","atoms/RelativeRedirect.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/organisms/RecipeCategoryView.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/molecules/FormPricingField.tsx","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/organisms/StockDepositLoader.graphql.ts","graph/buildMutation.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/organisms/StockFormLoader.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormMain.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","segments/menu/molecules/FormInputPlu.tsx","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/organisms/StockRecipesView.graphql.ts"],"names":["_react","_interopRequireDefault","__webpack_require__","_styledComponents","_ScrollArea","_styling","FullHeightDiv","default","div","withConfig","displayName","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","widthComputed","column","leftPos","row","topPos","FullHeightDivStyled","children","withScrollArea","scrollAreaId","createElement","ScrollArea","id","FlexRowSingle","justify","VerticalGap","size","sizeUnit","canQuery","canMutate","renderer","cellProps","result","_CanQuery","CanQuery","queryName","_CanMutate","CanMutate","mutationName","cellData","_TouchButtonEdit","TouchButtonEdit","target","columnData","_TouchButtonRemove","TouchButtonRemove","onClick","onRemove","rowData","_TouchButtonVisibility","TouchButtonVisibility","isVisible","onToggle","Fragment","NoteText","noteKey","_interopRequireWildcard","_reactVirtualized","_i18n","_Pacman","DataTable","Component","[object Object]","width","height","_a","this","items","isLoading","heightStretch","__rest","Table","_extends","autoHeight","headerHeight","rowHeight","rowCount","length","rowGetter","index","noRowsRenderer","AutoSizer","renderTable","WindowScroller","scrollElement","window","disableHeight","defaultProps","Colors","greyMiddle","DataTableEmptyText","text","i18n","_","searchValue","search","toLocaleLowerCase","propValue","includes","_reactRouterDom","_resolvePathname","resolveLocation","to","from","resolved","pathname","Object","assign","linkProps","Route","location","Link","_reactForm","_ramda","_SelectControlFlat","FormInputFlatSelect","validate","value","isRequired","isMulti","validationName","Array","isArray","fieldApi","defaultSelection","getItemId","selection","isSelected","item","selectedItems","filter","onMultiSelection","setValue","map","setTouched","selectedItem","find","onSingleSelection","field","fieldIsPure","isClearable","Field","pure","SelectControlFlat","getControlProps","isInvalid","Boolean","error","RM","prop","_reactSortableHoc","_Icon","DragHandleContainerStyled","DragHandle","SortableHandle","Icon","iconName","FormContainer","form","FormColumn","onAdd","addLabel","addButtonText","selectProps","getSelected","setSelected","_useStateRef","useStateRef","onConfirm","useCallback","selected","onKeyDown","ev","key","onSelect","option","_FlexRowSingle","_FlexColumn","FlexColumn","fixedWidth","margin","_SelectControl","SelectControl","onChange","getOptionValue","getOptionLabel","_TouchButton","TouchButton","disabled","cb","time","memoCb","debounced","useRef","_debounce","useEffect","current","clear","FormInputSelect","0","validatioName","options","defaultValue","F","selectedOptions","onFocus","styles","control","base","borderColor","_RelativeLink","CreateButtonContainer","routeTo","RelativeLink","color","green","ButtonHeight","TopRightButtonContainer","_form","_FormSubmit","isCreate","FormApi","render","FormSubmit","isFormValid","getButtonText","_reactRouter","_TouchButtonDelete","confirmText","onDelete","history","TouchButtonDelete","__awaiter","goBack","_FormInputTextBox","_IconLine","icon","label","IconLine","labelWidth","FormInputTextBox","inputWidth","_core","_ApolloError","_FormLoader","_NavigateBack","_logger","ErrorPop","state","submitError","validationErrors","renderSubmitError","renderValidationErrors","messages","isApolloError","propEq","userErrors","graphQLErrors","renderPopover","errors","Popover","open","anchorEl","document","getElementById","onClose","setState","anchorOrigin","vertical","horizontal","message","idx","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack","FormLoader","shouldLoad","defaultValues","loader","defaults","loadedDefaults","values","formApi","logForm","onSubmit","onSubmitFailure","keys","logError","renderErrors","settings","menu","_RootProvider","useRoot","DataTableContainer","_DataTable","_DragHandle","_SortableDataTable","_MenuCategoryModel","categories","onSort","showEditColumn","showRemoveColumn","showVisibilityColumn","showHeader","isSortable","noRowsDisplay","disableHeader","SortableDataTable","Column","dataKey","cellRenderer","checkColumnAccess","ColumnRendererEdit","cellDataGetter","getCategoryRoute","categoryType","enum","ColumnRendererRemove","ColumnRendererVisibility","ColumnRendererWithNote","SortableTableRowRenderer","SortableElement","columns","style","className","SortableDataTableContainer","SortableContainer","sortedItems","onHandleSorting","newIndex","oldIndex","currentItems","arrayMove","sortSuccess","offset","useDragHandle","lockAxis","lockToContainerEdges","onSortEnd","rowRenderer","rowProps","getDerivedStateFromProps","nextProps","_reactContentLoader","_Headline","_types","_menutypes","_MenuRecipeModel","ColumnRendererPrice","prices","priceType","foundPrice","pathEq","price","formattedValue","ColumnRendererCode","type","recipeType","WareCategoryTypeEnum","SideDish","Cover","recipes","onSortRecipe","showTypeColumn","BulletList","Headline","getRecipeRoute","TPriceType","Delivery","Inhouse","_icons","_useDebounceCallback","modelType","model","useDebounceCallback","setFilterInput","Search","FormInputStyled","placeholder","isMain","isSideDish","isCover","Main","_FormInputAllergens","AllergenBox","active","css","black","yellow","white","QueryAllergens","allergens","allergen","title","code","category","_NotFoundPage","_SecureRoute","_MenuCategoryListPage","_MenuCategoryPage","_MenuRecipeListPage","_MenuRecipePage","_MenuStockDepositPage","_MenuStockListPage","_MenuStockPage","MenuRoutes","match","Switch","SecureRoute","exact","path","Redirect","component","MenuCategoryListPage","params","MenuCategoryPage","categoryId","MenuRecipeListPage","MenuRecipePage","recipeId","MenuStockListPage","MenuStockDepositPage","MenuStockPage","stockId","NotFoundPage","_Card","_VerticalGap","_FullPageLayout","_PageLayoutFullHeightItem","_SettingsCompanyBranchPicker","_CategoryList","PartialDataTableContainer","FullPageLayout","pageTitle","useBackButton","PageLayoutFullHeightItem","Card","stretchToParent","SettingsCompanyBranchPicker","CategoryList","headline","_WithRoot","_CategoryListTable","_CreateButton","subHeadline","widthGrowIndex","CreateButton","WithRoot","QueryCategoryList","getQueryProps","renderLoading","wareCategories","CategoryListTable","changeVisibility","sortCategory","iconColor","_react2","_TopRightButtonContainer","_SubmitButton","_CategoryFormBasic","_CategoryFormLoader","_CategoryRecipesView","titleByType","i18nMark","FormFixedRow","FormStretchedRow","CategoryFormLoader","hideLogoutWidget","SubmitButton","CategoryBasicForm","Trans","CategoryRecipesView","_FormContainer","_FormInputCheckbox","_WithSettings","_MenuCategoryPictogramSelect","_FormDeleteButton","_FormInputInternalNote","_FormInputName","FormInputName","FormInputInternalNote","FormInputCheckbox","MenuCategoryPictogramSelect","WithSettings","FormDeleteButton","deleteCategory","_assets","_PictogramDisplay","pictogram","pictograms","formatOptionLabel","PictogramDisplay","pictogramId","fontSize","components","SingleValue","data","container","menuList","maxHeight","isSearchable","minWidth","exports","module","PictogramDisplayStyled","fontSizeUnit","getClassName","_MenuBaseFormLoader","_useMenu","_CategoryForm","useMenu","MenuBaseFormLoader","createCategory","updateCategory","visible","internalNoteLabel","nameLabel","getDefaults","client","query","MenuCategoryFormQuery","variables","fetchPolicy","wareCategory","setValues","useState","then","Form","_RecipeListTable","_RecipeSuggestionPanel","RecipeSuggestionPanel","filterRecipes","without","addedRecipe","concat","RecipeListTable","reject","_MenuSuggestionPanel","_RecipeList","observe","QueryRecipeList","MenuSuggestionPanel","_DataTableContainer","_MenuFilterInput","_RecipeTypeSelection","_RecipeListLoader","MenuFilterInput","RecipeTypeSelection","RecipeListLoader","_RelativeRedirect","isOpen","onOpen","RelativeRedirect","push","preventDefault","Dialog","DialogTitle","_mobxReactLite","_reactApolloHooks","_filter","observer","loading","useQuery","MenuRecipeListQuery","queryProps","suspend","filteredRecipes","useComputed","partialMatch","isPartialMatch","recipe","filterInput","cond","propSatisfies","T","_IsCategoryType","_RecipeCategoryView","_RecipeFormBasic","_RecipeFormLoader","_RecipeFormPricing","_RecipeIngredientsView","RecipeFormLoader","RecipeFormBasic","RecipeFormPricing","IsCategoryType","RecipeIngredientsView","RecipeCategoryView","noRowsText","_CategorySuggestionPanel","CategorySuggestionPanel","currentCategories","addedCategory","_FormInputCode","_FormInputDescription","_RecipeAllergenDisplay","FormInputCode","FormInputDescription","RecipeAllergenDisplay","deleteRecipe","_AllergenIndicator","extractAllergens","pipe","flatten","uniq","MenuAllergenIndicator","_graphqlTag","_buildQuery","_AllergenFragment","AllergensQuery","AllergenFragment","buildQuery","_RecipeForm","getPriceMap","acc","WarePriceTypeEnum","reduce","internalNote","descriptionLabel","image","sourcePrices","vatId","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","createRecipe","updateRecipe","defaultVats","getDefaultVat","MenuRecipeFormQuery","recipeSource","warePriceType","associatedRecipe","formattedPrice","quantity","stockItem","wareUnit","unitLabel","sourcePrice","vat","_FormPricingField","_RecipeAssociatedView","priceTypes","FormPricingField","TRecipeType","RecipeAssociatedView","_FormInputPrice","_FormInputVatSelect","NestedField","FormInputPrice","FormInputVatSelect","_validator","formInputPriceValidate","isEmpty","isDecimal","_emotion","_FormInputFlatSelect","QueryVat","vats","formatItem","VatsQuery","_RecipeAssocListTable","priceTypeRecipes","rejectSuggestions","some","isAssociated","onAddRecipe","RecipeAssocListTable","QueryMenuRecipeFormAssoc","_RecipeIngredientsTable","_StockList","unselectedStockOnly","differenceWith","RecipeIngredientsTable","QueryMenuStockList","stockItems","addedStockItem","validateQuantity","fieldName","isFloat","min","rowIndex","_StockDepositControl","_StockDepositLoader","StockDepositLoader","onDeposit","StockDepositControl","_StockDepositConfirmButton","_StockDepositFilterInput","_StockDepositQuantityInput","_StockDepositResultTable","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","onFilter","trim","head","onConfirmFilter","focus","onQuantity","onSelectStockItem","hasSearchValue","isNoneFind","isMultiFind","StockDepositFilterInput","ref","StockDepositQuantityInput","enabled","StockDepositConfirmButton","cardName","StockDepositResultTable","_numeral","format","1","forwardRef","autoFocus","onKeyPressCapture","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","indexOf","begin","substring","end","ChangeMenuStockQuantity","execute","quantityChange","QueryMenuStockDeposit","_buildMutation","_WareUnitFragment","MenuStockDepositQuery","WareUnitFragment","ChangeMenuStockQuantityMutation","buildMutation","mutation","_reactApollo","Mutation","_StockListLoader","StockListLoader","_StockListTable","MenuStockListQuery","filteredItems","stock","StockListTable","_Loading","stockAllowNegative","Loading","_StockFormLoader","_StockFormMain","_StockRecipesVIew","StockFormLoader","StockFormMain","StockRecipesView","_StockForm","plu","note","allowNegative","FieldStateEnum","Default","allowNegativeDefault","getAllowNegativeDefault","isEnabled","Disabled","createItem","updateItem","MenuStockDefaultsQuery","branchId","companyBranch","MenuStockFormQuery","QueryMenuStock","_FormInputAllowNegative","_FormInputPlu","_FormInputWareUnit","FormInputWareUnit","FormInputPlu","FormInputAllergens","FormInputAllowNegative","deleteItem","Enabled","labelForDefault","useMemo","_FormInputSelect","QueryWareUnits","wareUnits","WareUnitsQuery","_StockRecipesView","QueryStockRecipes","StockRecipesQuery"],"mappings":"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","file":"static/js/55.587b6fc4.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.SFC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import 'react-virtualized/styles.css'\n\nimport React, { Component } from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport Pacman from './Pacman'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport class DataTable<T> extends Component<IDataTableProps<T>> {\n  static defaultProps = {\n    heightStretch: false,\n  }\n  renderTable(width: number, height: number) {\n    const { items, children, isLoading, heightStretch, ...props } = this.props\n\n    return (\n      <Table\n        autoHeight={!heightStretch}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowHeight={60}\n        rowCount={items ? items.length : 0}\n        rowGetter={({ index }) => items[index]}\n        noRowsRenderer={() => (isLoading ? <Pacman /> : null)}\n        {...props}\n      >\n        {children}\n      </Table>\n    )\n  }\n  render() {\n    return this.props.heightStretch ? (\n      <AutoSizer>\n        {({ width, height }) => this.renderTable(width, height)}\n      </AutoSizer>\n    ) : (\n      <WindowScroller scrollElement={window}>\n        {({ height }) => (\n          <AutoSizer disableHeight={true}>\n            {({ width }) => this.renderTable(width, height)}\n          </AutoSizer>\n        )}\n      </WindowScroller>\n    )\n  }\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.SFC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends Omit<\n      ISelectControlFlatProps<ItemType>,\n      | 'selectedItems'\n      | 'onMultiSelection'\n      | 'selectedItem'\n      | 'onSingleSelection'\n    > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n  defaultSelection?: ReadonlyArray<ItemType> | ItemType\n}\n\nexport class FormInputFlatSelect<ItemType> extends React.Component<\n  IFormInputSelectProps<ItemType>\n> {\n  static defaultProps = {\n    validationName: i18n.t`Value`,\n    getItemId: RM.prop('id'),\n  }\n  validate = value => {\n    const { isRequired, isMulti, validationName } = this.props\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && value == null) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n  getControlProps(\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> {\n    const { isMulti, items, defaultSelection, getItemId } = this.props\n\n    const selection = fieldApi.value || defaultSelection\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) =>\n        selection.includes(getItemId!(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId!))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId!(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId!(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      isClearable = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} pure={fieldIsPure} validate={this.validate}>\n        {fieldApi => (\n          <SelectControlFlat<ItemType>\n            {...this.getControlProps(fieldApi)}\n            isInvalid={Boolean(fieldApi.error)}\n            isClearable={isClearable && !isRequired}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { useStateRef } from '../../../hooks/useStateRef'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: string }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(\n    () => {\n      const selected = getSelected()\n      if (selected !== null) {\n        onAdd(selected)\n        setSelected(null)\n      }\n    },\n    [onAdd],\n  )\n\n  const onKeyDown = useCallback((ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === 'Enter') {\n      onConfirm()\n    }\n  }, [])\n\n  const onSelect = useCallback(option => {\n    setSelected(option || null)\n  }, [])\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.prop('nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import debounce from 'debounce'\nimport { useCallback, useEffect, useRef } from 'react'\n\nexport function useDebounceCallback(cb: AnyFunction, time: number = 300) {\n  const memoCb = useCallback(cb, [])\n  const debounced = useRef(debounce(memoCb, time))\n  useEffect(() => debounced.current.clear)\n  return debounced.current\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      defaultValue = undefined,\n      isRequired = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLAnchorElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.SFC<IProps> = ({\n  routeTo = 'create',\n  onClick,\n}) => (\n  <CreateButtonContainer>\n    <RelativeLink to={routeTo} onClick={onClick}>\n      <TouchButton\n        iconName=\"add_circle\"\n        color={Colors.green}\n        width={Spacing.ButtonHeight}\n        height={Spacing.ButtonHeight}\n      />\n    </RelativeLink>\n  </CreateButtonContainer>\n)\n","import styled from 'styled-components'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  right: 0;\n  top: -4rem;\n  width: 10rem;\n`\nTopRightButtonContainer.displayName = 'TopRightButtonContainer'\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.SFC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.SFC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.SFC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputWidth={22} {...props} />\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputName: React.SFC<IProps> = ({\n  field = 'nameLabel',\n  icon = 'label',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputWidth={22}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              let defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import styled from 'styled-components'\n\nexport const DataTableContainer = styled.div`\n  height: calc(100% - 4.5rem);\n  padding-top: 2rem;\n`\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { GMenuCategoryListItem } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\n\ntype TCategory = GMenuCategoryListItem.Fragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.SFC<IProps> = ({\n  categories,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  noRowsDisplay = () => (\n    <DataTableEmptyText text={i18n.t`No recipes in category`} />\n  ),\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  let Table: React.SFC = ({ children }) =>\n    isSortable ? (\n      <SortableDataTable\n        heightStretch={heightStretch}\n        onSort={onSort}\n        {...props}\n      >\n        {children}\n      </SortableDataTable>\n    ) : (\n      <DataTable heightStretch={heightStretch} {...props}>\n        {children}\n      </DataTable>\n    )\n  return (\n    <Table>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={60}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'wareCategory' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getCategoryRoute(rowData.id, rowData.categoryType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={60}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={60}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateWareCategory' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNoteLabel' }}\n      />\n      <Column\n        dataKey=\"countRecipes\"\n        label={i18n.t`Recipe count`}\n        width={100}\n        cellRenderer={({ cellData }) =>\n          `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n        }\n      />\n      {isSortable && (\n        <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n      )}\n    </Table>\n  )\n}\n","import React from 'react'\n\nimport { Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.SFC<IProps> = ({ ...props }) => (\n  <TouchButton\n    iconName=\"remove_circle_outline\"\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    {...props}\n  />\n)\n","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.Component<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, isLoading, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        useDragHandle={true}\n        lockAxis=\"y\"\n        lockToContainerEdges={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={rowProps => {\n          return <SortableTableRowRenderer {...rowProps} />\n        }}\n        isLoading={isLoading}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { Headline } from '../../../atoms/Headline'\nimport { GMenuRecipeList, WareCategoryTypeEnum } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { TPriceType } from '../menutypes'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\n\ntype TRecipe = GMenuRecipeList.Recipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  onSortRecipe?: TSortHandler<TRecipe>\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.SFC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  onSortRecipe,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  let Table: React.SFC = ({ children }) =>\n    isSortable ? (\n      <SortableDataTable onSort={onSortRecipe} {...props}>\n        {children}\n      </SortableDataTable>\n    ) : (\n      <DataTable {...props}>{children}</DataTable>\n    )\n  return (\n    <Table>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={60}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={60}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={60}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n      {isSortable && (\n        <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n      )}\n    </Table>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import {\n  AllergenEnum,\n  GMenuRecipeForm,\n  GMenuRecipePrice,\n  WarePriceTypeEnum,\n} from '../../graph/types'\n\nexport {\n  WareCategoryTypeEnum as TRecipeType,\n  WarePriceTypeEnum as TPriceType,\n} from '../../graph/types'\n\nexport type TAssocRecipe = {\n  warePriceType: WarePriceTypeEnum\n  associatedRecipe: ID\n  nameLabel?: string\n  formattedPrice?: string\n}\n\nexport type TIngredient = {\n  stockItem: ID\n  label: string\n  quantity: number | string\n  unitLabel: string\n  allergens: AllergenEnum[]\n}\n\nexport type TPricing = GMenuRecipePrice.Fragment\nexport type TRecipeFormValues = GMenuRecipeForm.Recipe & {\n  associatedRecipes: TAssocRecipe[]\n  ingredients: TIngredient[]\n  prices: {\n    [priceType in WarePriceTypeEnum]: {\n      value: number\n      vatId: MaybeID\n    }\n  }\n}\n","import { Search } from '@material-ui/icons'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useDebounceCallback } from '../../../hooks/useDebounceCallback'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <FormInputStyled\n        onChange={ev => onChange(ev.target.value)}\n        placeholder={i18n.t`Filter by name or code`}\n      />\n    </IconLine>\n  )\n}\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/types'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.SFC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.SFC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      width={9}\n      isRequired={true}\n      validatioName={i18n.t`Code`}\n      {...props}\n    />\n  </IconLine>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/types'\nimport { Colors } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2rem;\n  height: 2rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem 0;\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: center;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.SFC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MenuRoutes: React.SFC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      render={() => <Redirect to={`${match.path}/category`} />}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/category`}\n      component={MenuCategoryListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/category/:categoryId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuCategoryPage\n          categoryId={params.categoryId === 'create' ? null : params.categoryId}\n          categoryType={state.categoryType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/recipe`}\n      component={MenuRecipeListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/recipe/:recipeId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuRecipePage\n          recipeId={params.recipeId === 'create' ? null : params.recipeId}\n          recipeType={state.recipeType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/stock`}\n      component={MenuStockListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/deposit`}\n      component={MenuStockDepositPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/:stockId`}\n      render={({ match: { params } }) => (\n        <MenuStockPage\n          stockId={params.stockId === 'create' ? null : params.stockId}\n        />\n      )}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default MenuRoutes\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { CategoryList } from '../organisms/CategoryList'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.SFC = props => (\n  <>\n    <FullPageLayout\n      pageTitle={i18n.t`Category overview`}\n      useBackButton={true}\n    />\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <SettingsCompanyBranchPicker width={20} />\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n            heightStretch={false}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n            heightStretch={false}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n            heightStretch={false}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { QueryCategoryList } from './CategoryList.graphql'\n\ninterface ICategoryListProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nexport const CategoryList: React.SFC<ICategoryListProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n  heightStretch = false,\n}) => (\n  <>\n    <FlexRowSingle>\n      <FlexColumn widthGrowIndex={1}>\n        <Headline>{headline}</Headline>\n        {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true}>\n        <CreateButton routeTo={getCategoryRoute('create', categoryType)} />\n      </FlexColumn>\n    </FlexRowSingle>\n    <WithRoot\n      render={({ settings }) => (\n        <QueryCategoryList\n          {...settings.getQueryProps({ categoryType })}\n          renderLoading={true}\n          render={({ wareCategories }) => (\n            <CategoryListTable\n              categories={wareCategories}\n              onToggle={settings.menu.category.changeVisibility}\n              isSortable={true}\n              showHeader={false}\n              heightStretch={heightStretch}\n              showVisibilityColumn={true}\n              onSort={({ item, offset }) => {\n                settings.menu.category.sortCategory(item.id, offset)\n              }}\n            />\n          )}\n        />\n      )}\n    />\n  </>\n)\n","import { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends Omit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.SFC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <TouchButton\n      iconName=\"mode_edit\"\n      width={Spacing.ButtonHeight}\n      height={Spacing.ButtonHeight}\n      {...props}\n    />\n  </Link>\n)\n","import React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors, Spacing } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.SFC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <TouchButton\n    iconName=\"remove_red_eye\"\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n    color={Colors.greyMiddle}\n    {...props}\n  />\n)\n","import { i18nMark, Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n}\n\nconst titleByType = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.SFC<IProps> = ({\n  categoryId,\n  categoryType,\n}) => (\n  <CategoryFormLoader categoryId={categoryId} categoryType={categoryType}>\n    <>\n      <FullPageLayout\n        pageTitle={i18n._(titleByType[categoryType])}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n            }\n          >\n            <SubmitButton isCreate={categoryId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n      </FullPageLayout>\n\n      <PageLayoutFullHeightItem>\n        <FormContainer>\n          <FormFixedRow>\n            <Card>\n              <CategoryBasicForm categoryType={categoryType} />\n            </Card>\n          </FormFixedRow>\n          <FormStretchedRow>\n            <Card stretchToParent={true}>\n              <Headline>\n                <Trans>Recipes assigned to this category</Trans>\n              </Headline>\n              <CategoryRecipesView categoryType={categoryType} />\n            </Card>\n          </FormStretchedRow>\n        </FormContainer>\n      </PageLayoutFullHeightItem>\n    </>\n  </CategoryFormLoader>\n)\n","import React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.SFC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Category name`} inputWidth={22} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Category internal note`}\n        inputWidth={22}\n      />\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <FormColumn>\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </FormColumn>\n  </FormContainer>\n)\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.SFC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value && !Array.isArray(value)) {\n            fieldApi.setValue(value.pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","exports.pictograms = require('./Flaticon');","module.exports = ['pizza', 'beans', 'cheese', 'hot-pepper', 'smoking-barbecue', 'meat-pie', 'sausage', 'hot-dog', 'fruit', 'fruit-1', 'fruit-2', 'strawberry', 'soup', 'noodles', 'ramen', 'rice', 'spaghetti', 'food', 'piece-of-cake', 'beer', 'marshmallow', 'cake', 'banana-split', 'ice-cream', 'cookie', 'doughnut', 'cupcake', 'kebab', 'steak', 'fish', 'fondue', 'shrimp', 'berry', 'food', 'food-1', 'food-2', 'food-3', 'food-4', 'food-5', 'food-6', 'food-7', 'food-8', 'food-9', 'food-10', 'food-11', 'food-12', 'food-13', 'food-14', 'food-15', 'food-16', 'food-17', 'food-18', 'food-19', 'food-20', 'food-21', 'food-22', 'food-23', 'food-24', 'food-25', 'food-26', 'food-27', 'food-28', 'food-29', 'food-30', 'drink', 'drink-1', 'drink-2', 'drink-3', 'drink-4', 'drink-5', 'cup', 'cup-1', 'cup-2', 'whisky'];","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst PictogramDisplayStyled = styled.div`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport const PictogramDisplay: React.SFC<IProps> = ({\n  pictogramId,\n  fontSize = 2,\n  fontSizeUnit = 'rem',\n}) => (\n  <PictogramDisplayStyled\n    className={getClassName(pictogramId)}\n    fontSize={fontSize}\n    fontSizeUnit={fontSizeUnit}\n  />\n)\n\nfunction getFontSize({ fontSize = 2, fontSizeUnit = 'rem' }: Partial<IProps>) {\n  return `${fontSize}${fontSizeUnit}`\n}\n\nfunction getClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import React from 'react'\n\nimport { GMenuCategoryForm, WareCategoryTypeEnum } from '../../../graph/types'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuCategoryFormQuery } from './CategoryForm.graphql'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport type TCategoryFormValues = GMenuCategoryForm.WareCategory\n\nexport const CategoryFormLoader: React.SFC<IProps> = ({\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={categoryId === null}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuCategoryForm.Query>({\n          query: MenuCategoryFormQuery,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return data.wareCategory\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    categoryType: { enum: categoryType },\n    recipes: [],\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(\n    () => {\n      if (!shouldLoad) {\n        return\n      }\n      loader().then(setValues)\n    },\n    [shouldLoad],\n  )\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.SFC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport styled from 'styled-components'\n\nimport { GMenuRecipe, WareCategoryTypeEnum } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 96%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<GMenuRecipe.Fragment>>) => (\n        <FormContainer>\n          <FormFixedRow>\n            <RecipeSuggestionPanel\n              categoryType={categoryType}\n              filterRecipes={RM.without(fieldApi.value)}\n              onAdd={addedRecipe =>\n                fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n              }\n            />\n          </FormFixedRow>\n          <FormStretchedRow>\n            <RecipeListTable\n              recipes={fieldApi.value}\n              isSortable={true}\n              showRemoveColumn={true}\n              showEditColumn={false}\n              showVisibilityColumn={false}\n              heightStretch={true}\n              onRemove={recipeId =>\n                fieldApi.setValue(\n                  RM.reject(RM.propEq('id', recipeId), fieldApi.value),\n                )\n              }\n              onSortRecipe={({ items }) => {\n                fieldApi.setValue(items)\n              }}\n            />\n          </FormStretchedRow>\n        </FormContainer>\n      )}\n    </Field>\n  )\n}\n","import React from 'react'\n\nimport { GMenuRecipe, WareCategoryTypeEnum } from '../../../graph/types'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { QueryRecipeList } from './RecipeList.graphql'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel: React.SFC<IProps> = ({\n  categoryType,\n  filterRecipes,\n  onAdd,\n}) => (\n  <WithSettings\n    observe={true}\n    render={settings => (\n      <QueryRecipeList\n        {...settings.getQueryProps({ categoryType })}\n        fetchPolicy=\"cache-and-network\"\n        render={({ recipes }) => (\n          <MenuSuggestionPanel<TRecipe>\n            options={filterRecipes(recipes)}\n            onAdd={onAdd}\n          />\n        )}\n      />\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const MenuRecipeListPage: React.SFC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"recipe\" />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createRecipe\">\n          <RecipeTypeSelection />\n        </CanMutate>\n        <DataTableContainer>\n          <RecipeListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import { Trans } from '@lingui/react'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport React, { Component } from 'react'\n\nimport { RelativeRedirect } from '../../../atoms/RelativeRedirect'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\nimport { CreateButton } from './CreateButton'\n\ninterface IProps {}\n\ninterface IState {\n  isOpen: boolean\n  recipeType: Maybe<WareCategoryTypeEnum>\n}\n\nexport class RecipeTypeSelection extends Component<IProps, IState> {\n  state = { isOpen: false, recipeType: null }\n  onClose = () => {\n    this.setState({ isOpen: false })\n  }\n  onOpen = () => {\n    this.setState({ isOpen: true })\n  }\n  onSelect = (recipeType: WareCategoryTypeEnum) => () => {\n    this.setState({ isOpen: true, recipeType })\n  }\n  render() {\n    const { isOpen, recipeType } = this.state\n    return (\n      <>\n        {recipeType !== null && (\n          <RelativeRedirect\n            to={getRecipeRoute('create', recipeType)}\n            push={true}\n          />\n        )}\n        <CreateButton\n          onClick={ev => {\n            ev.preventDefault()\n            this.onOpen()\n          }}\n        />\n        <Dialog open={isOpen} onClose={this.onClose}>\n          <DialogTitle>Select item type</DialogTitle>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Main)}>\n            <Trans>Ware</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.SideDish)}>\n            <Trans>Sidedish</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Cover)}>\n            <Trans>Cover</Trans>\n          </TouchButton>\n        </Dialog>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { Redirect, RedirectProps } from 'react-router-dom'\n\nimport { resolveLocation } from './RelativeLink'\n\ninterface IProps extends RedirectProps {}\n\nexport const RelativeRedirect: React.SFC<IProps> = ({ to, from, ...props }) => (\n  <Redirect\n    to={resolveLocation(to, from || `${location.pathname}/`)}\n    from={from}\n    {...props}\n  />\n)\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GMenuRecipeList } from '../../../graph/types'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\nimport { MenuRecipeListQuery } from './RecipeList.graphql'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GMenuRecipeList.Query,\n    GMenuRecipeList.Variables\n  >(MenuRecipeListQuery, {\n    ...settings.queryProps,\n    suspend: false,\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import { i18nMark, Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { NoteText } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: WareCategoryTypeEnum\n}\n\nconst titleByType = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport const MenuRecipePage: React.SFC<IProps> = ({ recipeId, recipeType }) => (\n  <FullPageLayout\n    width={15}\n    pageTitle={i18n._(titleByType[recipeType])}\n    hideLogoutWidget={true}\n    useBackButton={true}\n  >\n    <RecipeFormLoader recipeId={recipeId} recipeType={recipeType}>\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n        >\n          <SubmitButton isCreate={recipeId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n      <Card>\n        <RecipeFormBasic recipeType={recipeType} />\n      </Card>\n      <Card>\n        <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n      </Card>\n      <IsCategoryType type={recipeType} isMain={true}>\n        <Card>\n          <Headline>\n            <Trans>Recipe ingredients</Trans>\n          </Headline>\n          <VerticalGap />\n          <RecipeIngredientsView />\n        </Card>\n        <Card>\n          <Headline>\n            <Trans>Sidedish categories</Trans>\n          </Headline>\n          <NoteText>\n            <Trans>These sidedish are presented with recipe</Trans>\n          </NoteText>\n          <RecipeCategoryView\n            categoryType={WareCategoryTypeEnum.SideDish}\n            field=\"sideDishes\"\n            addButtonText={i18n.t`Attach sidedish category`}\n            noRowsText={i18n.t`Recipe has no sidedish category attached`}\n          />\n        </Card>\n        <Card>\n          <Headline>\n            <Trans>Category assignments</Trans>\n          </Headline>\n          <NoteText>\n            <Trans>Recipe is in these categories</Trans>\n          </NoteText>\n          <RecipeCategoryView\n            categoryType={WareCategoryTypeEnum.Main}\n            field=\"categories\"\n            addButtonText={i18n.t`Add to category`}\n            noRowsText={i18n.t`Recipe is not in any category`}\n          />\n        </Card>\n      </IsCategoryType>\n    </RecipeFormLoader>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport {\n  GMenuCategoryListItem,\n  WareCategoryTypeEnum,\n} from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CategorySuggestionPanel } from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\nexport const RecipeCategoryView: React.SFC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<GMenuCategoryListItem.Fragment[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  GMenuCategoryListItem,\n  WareCategoryTypeEnum,\n} from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { QueryCategoryList } from './CategoryList.graphql'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = GMenuCategoryListItem.Fragment\n\nexport const CategorySuggestionPanel: React.SFC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => (\n  <WithSettings\n    observe={true}\n    render={settings => (\n      <QueryCategoryList\n        {...settings.getQueryProps({ categoryType })}\n        fetchPolicy=\"cache-and-network\"\n        render={({ wareCategories }) => (\n          <MenuSuggestionPanel<TCategory>\n            onAdd={onAdd}\n            options={RM.without(currentCategories, wareCategories)}\n            addButtonText={addButtonText}\n          />\n        )}\n      />\n    )}\n  />\n)\n","import React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.SFC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon=\"error_outline\">\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <FormColumn>\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </FormColumn>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.SFC<IProps> = ({\n  field = 'descriptionLabel',\n  icon = 'label_outline',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputWidth={22} {...props} />\n  </IconLine>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nconst extractAllergens = RM.pipe(\n  RM.map(RM.prop('allergens')),\n  // @ts-ignore Something wrong with Ramda typings\n  RM.flatten,\n  RM.uniq,\n)\n\nexport const RecipeAllergenDisplay: React.SFC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = extractAllergens(value)\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GAllergens } from '../../../graph/types'\nimport { AllergenFragment } from '../graph/AllergenFragment.graphql'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...GAllergen\n    }\n  }\n  ${AllergenFragment}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\n\nimport { GMenuRecipeForm, WarePriceTypeEnum } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.SFC<IProps> = ({\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={recipeId === null}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const defaultVats = await menu.recipe.getDefaultVat()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: defaultVats[priceType],\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n      }\n    }),\n  }\n}\n","import { i18nMark } from '@lingui/react'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.SFC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import React from 'react'\nimport { NestedField } from 'react-form'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nexport const FormPricingField: React.SFC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import React from 'react'\nimport { isDecimal, isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nconst formInputPriceValidate = (value: string) => {\n  if (value === undefined || isEmpty(value + '') || !isDecimal(value + '')) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.SFC<IProps> = ({\n  field = 'price.value',\n  icon = 'toll',\n  ...props\n}) => (\n  <IconLine icon={icon}>\n    <FormInputTextBox\n      field={field}\n      inputWidth={5}\n      validate={formInputPriceValidate}\n      {...props}\n    />\n    Kč\n  </IconLine>\n)\n","import { css } from 'emotion'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.SFC<IProps> = ({\n  field = 'price.vat',\n}) => (\n  <WithRoot\n    render={({ settings }) => (\n      <QueryVat\n        {...settings.queryProps}\n        renderLoading={false}\n        render={({ vats }) => (\n          <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n            {vats && (\n              <FormInputFlatSelect\n                field={field}\n                items={vats}\n                formatItem={({ vat }) => `${vat}%`}\n                isRequired={true}\n                validationName={i18n.t`VAT`}\n              />\n            )}\n          </IconLine>\n        )}\n      />\n    )}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.SFC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                {...settings.queryProps}\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.SFC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={60}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\nimport { QueryMenuStockList } from './StockList.graphql'\n\ninterface IProps {}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsView: React.SFC<IProps> = () => (\n  <WithSettings\n    observe={false}\n    render={settings => (\n      <Field field=\"ingredients\">\n        {(fieldApi: IFieldApi<TIngredient[]>) => (\n          <>\n            <RecipeIngredientsTable\n              ingredients={fieldApi.value}\n              onRemove={stockItem => {\n                fieldApi.setValue(\n                  RM.reject(RM.propEq('stockItem', stockItem), fieldApi.value),\n                )\n              }}\n            />\n            <QueryMenuStockList\n              {...settings.queryProps}\n              render={({ stockItems }) => (\n                <MenuSuggestionPanel<GMenuStockItem.Fragment>\n                  addButtonText={i18n.t`Add ingredient`}\n                  options={unselectedStockOnly(stockItems, fieldApi.value)}\n                  onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n                    fieldApi.setValue([\n                      ...fieldApi.value,\n                      {\n                        stockItem: addedStockItem.id,\n                        label: addedStockItem.nameLabel,\n                        quantity: 1,\n                        unitLabel: addedStockItem.wareUnit.code,\n                        allergens: addedStockItem.allergens.map(\n                          RM.prop('enum'),\n                        ),\n                      },\n                    ])\n                  }}\n                />\n              )}\n            />\n          </>\n        )}\n      </Field>\n    )}\n  />\n)\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { i18n } from '../../../i18n'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.SFC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={60}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <FormInputTextBox\n          field={['ingredients', rowIndex, 'quantity']}\n          validate={validateQuantity}\n          width=\"40px\"\n        />\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.SFC<IProps> = props => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock deposit`}\n    useBackButton={true}\n  >\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue: searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { Trans } from '@lingui/react'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { GWareUnit } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<GWareUnit.Fragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.SFC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format('0,0.[00]')} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputTextBox'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { GMenuStockDeposit } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: GMenuStockDeposit.StockItems[]\n  onSelect(stockItem: GMenuStockDeposit.StockItems): void\n}\n\nexport const StockDepositResultTable: React.SFC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTableContainer>\n    <DataTable items={stockItems} heightStretch={false}>\n      <Column\n        dataKey=\"id\"\n        width={60}\n        cellRenderer={ColumnRendererSelect}\n        columnData={{ onSelect }}\n      />\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n      <Column\n        dataKey=\"code\"\n        width={100}\n        label={i18n.t`Card code`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Card name`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n    </DataTable>\n  </DataTableContainer>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <TouchButton\n      iconName=\"done\"\n      width={Spacing.ButtonHeight}\n      height={Spacing.ButtonHeight}\n      onClick={() => onSelect(rowData)}\n    />\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import React from 'react'\n\nimport { GMenuStockDeposit } from '../../../graph/types'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport {\n  ChangeMenuStockQuantity,\n  QueryMenuStockDeposit,\n} from './StockDepositLoader.graphql'\n\nexport type TStockItem = GMenuStockDeposit.StockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader: React.SFC<IProps> = ({ children }) => (\n  <ChangeMenuStockQuantity\n    render={execute => {\n      const onDeposit: TDepositFn = (stockItem, quantity) => {\n        execute({\n          variables: { stockItem: stockItem.id, quantityChange: quantity },\n        })\n      }\n      return (\n        <WithSettings\n          render={settings => (\n            <QueryMenuStockDeposit\n              {...settings.queryProps}\n              render={({ stockItems }) => children(stockItems, onDeposit)}\n            />\n          )}\n        />\n      )\n    }}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildMutation } from '../../../graph/buildMutation'\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  GChangeMenuStockQuantity,\n  GMenuStockDeposit,\n} from '../../../graph/types'\nimport { WareUnitFragment } from '../graph/WareUnitFragment.graphql'\n\nconst MenuStockDepositQuery = gql`\n  query GMenuStockDeposit($branchId: ID!) {\n    stockItems(companyBranch: $branchId) {\n      id\n      code\n      plu\n      nameLabel: label\n      note\n      quantity\n      wareUnit {\n        ...GWareUnit\n      }\n    }\n  }\n  ${WareUnitFragment}\n`\n\nconst ChangeMenuStockQuantityMutation = gql`\n  mutation GChangeMenuStockQuantity($stockItem: ID!, $quantityChange: Float!) {\n    changeAmountStockItem(id: $stockItem, amountOffset: $quantityChange) {\n      id\n      quantity\n    }\n  }\n`\n\nexport const ChangeMenuStockQuantity = buildMutation<\n  GChangeMenuStockQuantity.Mutation,\n  GChangeMenuStockQuantity.Variables\n>(ChangeMenuStockQuantityMutation)\n\nexport const QueryMenuStockDeposit = buildQuery<\n  GMenuStockDeposit.Query,\n  GMenuStockDeposit.Variables\n>(MenuStockDepositQuery)\n","import { DocumentNode } from 'graphql'\nimport React from 'react'\nimport { Mutation, MutationFn, MutationProps } from 'react-apollo'\n\nexport function buildMutation<TData, TVariables>(mutation: DocumentNode) {\n  interface IProps\n    extends Omit<MutationProps<TData, TVariables>, 'mutation' | 'children'> {\n    render(result: MutationFn<TData, TVariables>): ReactNode\n  }\n  const GMutation: React.SFC<IProps> = ({ render, children, ...props }) => (\n    <Mutation mutation={mutation} {...props}>\n      {render}\n    </Mutation>\n  )\n  return GMutation\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\n\nexport const MenuStockListPage: React.SFC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"stock\" />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createStockItem\">\n          <CreateButton routeTo=\"create\" />\n        </CanMutate>\n        <DataTableContainer>\n          <StockListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GMenuStockList } from '../../../graph/types'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuStockListQuery } from './StockList.graphql'\nimport { StockListTable } from './StockListTable'\n\nexport const StockListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GMenuStockList.Query,\n    GMenuStockList.Variables\n  >(MenuStockListQuery, {\n    ...settings.queryProps,\n    suspend: false,\n  })\n\n  const filteredItems = useComputed(\n    () => {\n      if (!data.stockItems || data.stockItems.length === 0) {\n        return []\n      }\n      const searchValue = settings.menu.stock.filterInput\n      const partialMatch = isPartialMatch(searchValue)\n      return data.stockItems.filter(\n        RM.cond([\n          [RM.propEq('plu', searchValue), RM.T],\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.stockItems],\n  )\n\n  return <StockListTable stockItems={filteredItems} isLoading={loading} />\n})\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { GMenuStockList } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\n\ntype TStockItem = GMenuStockList.StockItems\n\ninterface IProps {\n  stockItems: TStockItem[]\n  isLoading: boolean\n}\n\nexport const StockListTable: React.SFC<IProps> = ({\n  stockItems,\n  isLoading,\n}) => (\n  <DataTable\n    items={stockItems}\n    heightStretch={true}\n    noRowsRenderer={() =>\n      isLoading ? (\n        <Loading />\n      ) : (\n        <h3>\n          <Trans>Selected branch has no stock cards</Trans>\n        </h3>\n      )\n    }\n  >\n    <Column\n      dataKey=\"id\"\n      width={60}\n      cellRenderer={checkColumnAccess(\n        { canQuery: 'stockItem' },\n        ColumnRendererEdit,\n      )}\n    />\n    <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n    <Column dataKey=\"nameLabel\" width={300} label={i18n.t`Card name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"allowNegative\"\n      width={300}\n      label={i18n.t`Negative stock`}\n      cellRenderer={stockAllowNegative}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const MenuStockPage: React.SFC<IProps> = ({ stockId }) => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock card`}\n    hideLogoutWidget={true}\n    useBackButton={true}\n  >\n    <StockFormLoader stockId={stockId}>\n      <>\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              stockId === null ? 'createStockItem' : 'updateStockItem'\n            }\n          >\n            <SubmitButton isCreate={stockId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n        <Card>\n          <StockFormMain />\n          <CanQuery queryName=\"recipes\">\n            <StockRecipesView stockId={stockId} />\n          </CanQuery>\n        </Card>\n      </>\n    </StockFormLoader>\n  </FullPageLayout>\n)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  GMenuStockDefaults,\n  GMenuStockForm,\n  WareUnitEnum,\n} from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.SFC<IProps> = ({ stockId, children }) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={stockId === null}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId: stockId! },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GMenuStockForm } from '../../../graph/types'\nimport { AllergenFragment } from '../graph/AllergenFragment.graphql'\nimport { WareUnitFragment } from '../graph/WareUnitFragment.graphql'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...GWareUnit\n      }\n      allergens {\n        ...GAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${AllergenFragment}\n  ${WareUnitFragment}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.SFC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <FormColumn>\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </FormColumn>\n  </FormContainer>\n)\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n  icon?: string\n}\n\nexport const FormInputAllergens: React.SFC<IProps> = ({\n  field = 'allergens',\n  icon = 'error_outline',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={icon} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/react'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.SFC<IProps> = ({}) => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputPlu: React.SFC<IProps> = ({\n  field = 'plu',\n  icon = 'fingerprint',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <FormInputTextBox field={field} width={9} {...props} />\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {\n  icon?: string\n}\n\nexport const FormInputWareUnit: React.SFC<IProps> = ({\n  field = 'wareUnit',\n  icon = 'select_all',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={icon} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport {\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n  NoteText,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { QueryStockRecipes } from './StockRecipesView.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const StockRecipesView: React.SFC<IProps> = ({ stockId }) =>\n  stockId === null ? null : (\n    <QueryStockRecipes\n      variables={{ stockId }}\n      render={({ stockItem: { ingredients } }) =>\n        ingredients.length > 0 ? (\n          <>\n            <Headline>\n              <Trans>Recipes using this card</Trans>\n            </Headline>\n\n            <DataTable items={[...ingredients]}>\n              <Column\n                dataKey=\"\"\n                cellDataGetter={({ rowData }) =>\n                  `../../recipe/${rowData.recipe.id}`\n                }\n                cellRenderer={ColumnRendererEdit}\n                width={100}\n              />\n              <Column\n                dataKey=\"recipe\"\n                width={300}\n                label={i18n.t`Name`}\n                cellRenderer={({ rowData }) => (\n                  <>\n                    {rowData.recipe.nameLabel}\n                    <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n                  </>\n                )}\n              />\n            </DataTable>\n          </>\n        ) : null\n      }\n    />\n  )\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GStockRecipes } from '../../../graph/types'\n\nexport const StockRecipesQuery = gql`\n  query GStockRecipes($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      ingredients {\n        id\n        recipe {\n          id\n          nameLabel\n          descriptionLabel\n        }\n      }\n    }\n  }\n`\n\nexport const QueryStockRecipes = buildQuery<\n  GStockRecipes.Query,\n  GStockRecipes.Variables\n>(StockRecipesQuery)\n"],"sourceRoot":""}