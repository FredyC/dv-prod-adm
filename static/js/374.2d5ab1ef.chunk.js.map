{"version":3,"sources":["atoms/IconLine.tsx","helpers/form.ts","hooks/useAccessGuard.ts","atoms/SelectControl.tsx","components/filters/BranchesFilter.tsx","atoms/ScrollArea.tsx","molecules/PageLayoutFullHeightItem.tsx","hooks/useUserModel.ts","atoms/HorizontalSeparator.tsx","atoms/VerticalGap.tsx","hooks/useDropdownFilter.ts","atoms/FormGrid.tsx","hooks/useAutorunWhenSingleBranch.ts","atoms/Printer.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","components/forms/FormDropdownMulti.tsx","atoms/CardDock.tsx","hooks/useOnConnectionRestored.ts","segments/order/atoms/DeliveryTimeBadge.tsx","atoms/TimeBadge.tsx","atoms/LinkStyled.tsx","hooks/useDropdownMulti.ts","atoms/CardListTitle.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/NoteLine.tsx","segments/order/atoms/OrderStarIndicator.tsx","segments/order/molecules/OrderTicker.tsx","assets/orderNotification.mp3","components/filters/OccasionsFilter.tsx","components/filters/SectorsFilter.tsx","components/icons/createSvgIcon.tsx","components/icons/FilterDisable.tsx","components/icons/FilterEnable.tsx","segments/kitchen/molecules/KitchenFilters.tsx","segments/kitchen/hooks/useKitchenCompletionDeck.ts","segments/kitchen/hooks/useKitchenFilterForm.ts","segments/kitchen/organisms/KitchenCompletionLoader.tsx","molecules/OrderNotificationSound.tsx","segments/kitchen/atoms/KitchenInfoMessage.tsx","segments/kitchen/hooks/useKitchenDeck.ts","segments/kitchen/hooks/useKitchenOrderDeck.ts","segments/kitchen/atoms/KitchenCardButton.tsx","segments/kitchen/hooks/useKitchenHandler.ts","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenCardItem.tsx","segments/kitchen/molecules/KitchenCardItems.tsx","segments/kitchen/molecules/KitchenOrderStarIndicator.tsx","segments/kitchen/molecules/KitchenCardCompletion.tsx","segments/kitchen/organisms/KitchenCompletionShelf.tsx","segments/kitchen/hooks/useKitchenSectorDeck.ts","segments/kitchen/organisms/KitchenLoader.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/molecules/KitchenCardOrder.tsx","segments/kitchen/molecules/KitchenCardSector.tsx","segments/kitchen/organisms/KitchenShelf.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/pages/KitchenCompletionPage.tsx","segments/kitchen/routes/KitchenRouting.tsx"],"names":["StyledIconLine","styled","div","labelMargin","labelWidth","labelWidthUnits","StyledGridDescription","mediaMobile","replace","StyledGridContent","IconLine","icon","label","Spacing","DefaultSizeUnit","labelSmallCaps","children","iconComponent","logError","Error","isInFormGrid","useFormGridCheck","descriptionPart","color","Colors","greyDark","className","cn","smallCaps","isFormValid","formState","errors","Object","keys","length","fieldIsRequiredMsg","fieldDescription","fieldIsPositiveNumberMsg","validateAsNumberField","yup","number","default","transform","_","origValue","parseNumber","test","fieldIsNumberMsg","value","isNaN","ARRAY_EMPTY","useAccessGuard","queries","mutations","user","useRoot","every","canQuery","canMutate","useCanQuery","useCanMutate","getControlStyles","width","minWidth","invalid","border","red","backgroundColor","errorBackground","greyMiddle","margin","MarginAroundFormComponents","undefined","composeSelectControlStyles","outerStyles","control","base","state","controlStyles","selectProps","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","clearIndicator","cursor","SelectControl","hideOnSingleOption","props","options","toPrint","formatWith","getOptionLabel","formatOptionLabel","valueText","Array","isArray","map","placeholder","getPrintContent","components","ClearIndicator","styles","getStyles","innerProps","ref","restInnerProps","style","padding","useBranchesFilterEditable","createStatePersistence","BranchesFilter","React","memo","userModel","useUserModel","branches","setBranches","useAutorunWhenSingleBranch","branch","id","formatBranchName","getOptionValue","idProp","dropdownProps","useDropdownMulti","onSelectionChange","selected","filterProps","useDropdownFilter","getOptionFilter","useBranchesFilter","withUserBranchesWhenEmpty","branchesId","key","join","useMemo","ScrollArea","StyledPageLayoutFullHeightItem","mediaDesktop","widthInColumns","LayoutGridCellMargin","column","row","rowInMobile","forcePercentHeightInMobile","PageHeaderHeight","PageLayoutFullHeightItem","withScrollArea","scrollAreaId","forceHeightInMobile","isMobile","useResponsive","Sizer","height","heightUnit","HorizontalSeparatorStyled","greyLight","HorizontalSeparator","visible","VerticalGap","size","sizeUnit","displayName","isSearchable","filterOption","useCallback","option","rawInput","data","toLocaleLowerCase","includes","StyledFormGrid","formGridCounter","formGridContext","createContext","FormGrid","Provider","useContext","onSingleBranch","useAutorun","isReady","hasSingleBranch","StyledPrinter","Printer","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","resolve","module","exports","FormDropdownMulti","fieldName","useXFormState","field","useXField","useObserver","setValue","onFocus","setTouched","touched","hasError","isDisabled","isSubmitting","CardDock","position","useOnConnectionRestored","cb","useDisposable","whenGoingOnline","cancelIconPadding","css","StyledDelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","isCancelled","isDelayed","onClick","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","role","aria-label","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","StyledTimeBadge","variants","orange","green","bigNumberStyle","dashStyle","clickable","TimeBadge","forwardRef","Variant","output","extraClassNames","push","toString","cx","heartBeat","pulse","LinkStyled","a","filter","onChange","isMulti","CardListTitle","h2","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","StyledCurrentNote","span","NoteLine","note","Note","StyledOrderStarIndicator","OrderStarIndicator","data-testid","Icon","Star","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","name","companyBranch","Date","delayedDeliveryTime","sector","deliveryType","enum","DeliveryTypeEnum","Pickup","address","original","formatAddress","isPriority","totalSum","formattedValue","isPaidWithCard","OccasionsFilter","markAsAvailable","useQFilterOccasions","getStash","loading","occasions","hasAnyOccasions","useEffect","noOptionsMessage","isLoading","RM","prop","DropdownTreeSelectMemo","texts","SectorsFilter","sectors","useQFilterSectors","hasAnySectors","treeData","getTreeFromFlatData","flatData","mapper","node","getParentKey","parent","getKey","buildForSingleBranch","sectorsPerBranch","groupBy","isSector","branchKey","buildWithBranches","currentNode","selectedNodes","selectedSectorsId","reduce","acc","startsWith","isBranchNode","branchNode","find","idPropEq","noMatches","branchId","childrenToParents","forEach","child","parentKey","trav","Reflect","has","createSvgIcon","path","SvgIcon","data-mui-test","FilterDisable","d","FilterEnable","StyledPopup","Popover","KitchenFilters","xform","useXFormCtx","buttonRef","useRef","store","useLocalStore","isOpen","setOpen","this","setClosed","sectorsAvailable","markSectorsAvailable","available","occassionsAvailable","markOccasionsAvailable","values","wasSubmitted","SizerButton","TouchButton","isActive","iconSize","disabled","isEnabled","open","keepMounted","onClose","ev","reason","api","submitForm","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","Close","fontSize","ButtonHeight","text","i18n","requiredCategories","OrderStateCategoryEnum","NewOrders","Preparing","ReadyToDeliver","sortForCompletion","sortWith","descend","ascend","either","useKitchenCompletionDeck","skip","variables","useQKitchenCompletionOrderList","categories","updateQuery","refetch","useSKitchenCompletionOrderList","concat","Finished","onSubscriptionData","dataUpdate","subscriptionData","prev","update","updatedOrder","orders","orderStateCategory","orderExists","unshift","handleSubscriptionUpdate","useKitchenFilterForm","useState","filters","setFilters","onFilterSubmit","toJS","loaderContext","KitchenCompletionLoader","observer","deck","initialValues","onSubmit","OrderNotificationSound","shouldPlay","playNow","config","useIntervalSound","soundUrl","orderNotificationSound","intervalSec","orderListSoundIntervalSec","forcePlayNow","KitchenInfoMessage","kitchenRecipeStateMapping","OrderRecipeStateEnum","Fresh","Ready","Cooked","kitchenOrderStateMapping","useKitchenOrderDeck","useQKitchenOrderList","useSKitchenOrderList","cards","mapOrderToKitchenCard","normalizeToKitchenDeck","type","time","createdAt","items","mapOrderItemToCardItem","orderItem","recipe","sideDishes","sidedishes","KitchenCardButton","KeyboardArrowRight","useKitchenHandler","canHandleOrder","canHandleOrderRecipe","canHandleSector","canHandleSectorRecipe","useMKitchenOrderHandle","handleOrder","useMKitchenOrderRecipeHandle","handleOrderRecipe","useMKitchenSectorHandle","handleSector","useMKitchenSectorRecipeHandle","handleSectorRecipe","canHandleCard","card","canHandleCardItem","handleCard","orderId","OrderStateEnum","InProduce","sectorId","Accepted","handleCardItem","item","nextItemState","getItemToggledState","orderRecipeId","sectorRecipeId","propEq","Circle","Small","CheckedInner","TouchCheckButton","isChecked","firstSideDishStyle","StyledKitchenCardItem","isFirstSidedish","FontSizes","CompactCardBig","KitchenCardItem","canHandle","onHandle","KitchenCardItems","sideDish","idx","StyledKitchenOrderStarIndicator","KitchenOrderStarIndicator","StyledKitchenCardCompletion","CompactCard","greyDarkest","Middle","KitchenCardCompletion","handler","orderNumber","orderOrigin","cashBox","KitchenCompletionShelf","category","noOrdersMessage","mobileHeadline","orderModel","shouldPlayNotification","list","branchesFilter","requiredStates","useKitchenSectorDeck","useQKitchenSectorList","states","useSKitchenSectorList","Canceled","sectorRecipe","updatedSectorRecipe","sectorRecipes","s","exists","makeKey","initialState","mapObjIndexed","invertObj","groupedBySectorAndState","sortByTime","sortBy","relatedSectorRecipes","sortedRecipes","sortCards","kitchenContext","KitchenLoader","orderDeck","sectorDeck","kitchenDeck","mergeDeepWith","sortedKitchenDeck","Label","DeliveryTime","DeliverLabel","deliverType","KitchenOrderAtSummary","deliverTime","AccessTime","formatTimeWithoutTodayDate","StyledKitchenCardOrder","KitchenCardOrder","onHandleRecipe","canHandleRecipe","href","StyledKitchenCardSector","KitchenCardSector","pink","KitchenShelf","noCardsMessage","shelfCards","useKitchenDeck","commonProps","StyledKitchenFilterContainer","KitchenCategorySeparator","KitchenOverviewPage","PageLayoutResponsive","pageTitle","useBackButton","showSoundControl","topContent","PageLayoutGridItem","gridRowInMobile","KitchenCompletionPage","KitchenRouting","SecureRoute","exact","ROUTE_KITCHEN","component","ROUTE_KITCHEN_COMPLETION","NotFoundPage"],"mappings":"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","file":"static/js/374.2d5ab1ef.chunk.js","sourcesContent":["import { Error, SvgIconComponent } from '@material-ui/icons'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../app/Responsive'\nimport { logError } from '../helpers/logger'\nimport { Colors, Spacing } from '../styling'\nimport { useFormGridCheck } from './FormGrid'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: SvgIconComponent\n  label?: string | ReactNode\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  labelSmallCaps?: boolean\n  className?: string\n}\n\nconst StyledIconLine = styled.div<IProps>`\n  display: flex;\n\n  div.description {\n    margin: ${({ labelMargin }) => labelMargin};\n    min-width: ${({ labelWidth, labelWidthUnits }) =>\n      `${labelWidth}${labelWidthUnits}`};\n    flex: 0 0 auto;\n    text-align: right;\n  }\n\n  div.contents {\n    margin-left: 0.5rem;\n    align-self: stretch;\n    flex: 1 1 auto;\n  }\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n`\n\nconst StyledGridDescription = styled.div<IProps>`\n  grid-column: desc;\n  margin: ${({ labelMargin }) => labelMargin};\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n\n  ${mediaMobile`\n  grid-column: content;\n  justify-self: start;\n  margin: ${({ labelMargin }) => labelMargin.replace('auto', '0.7rem')};\n  `};\n`\n\nconst StyledGridContent = styled.div<IProps>`\n  grid-column: content;\n  margin-left: 0.5rem;\n`\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n  labelMargin = '0.5rem 0.2rem 0 auto',\n  labelSmallCaps = true,\n  children,\n}) => {\n  let iconComponent = icon\n  if (typeof icon === 'string') {\n    logError(\n      `IconLine: Do not use icon prop as string! Replace \"${icon}\" with the one imported from @material-ui/icons.`,\n    )\n    iconComponent = Error\n  }\n  const isInFormGrid = useFormGridCheck()\n\n  const descriptionPart = (\n    <>\n      <Icon icon={iconComponent} color={Colors.greyDark} />\n      {label ? (\n        <div className={cn('label', { smallCaps: labelSmallCaps })}>\n          {label}\n        </div>\n      ) : null}\n    </>\n  )\n\n  return isInFormGrid ? (\n    <>\n      <StyledGridDescription labelMargin={labelMargin}>\n        {descriptionPart}\n      </StyledGridDescription>\n      <StyledGridContent>{children}</StyledGridContent>\n    </>\n  ) : (\n    <StyledIconLine\n      labelWidth={labelWidth}\n      labelWidthUnits={labelWidthUnits}\n      labelMargin={labelMargin}\n    >\n      <div className=\"description\">{descriptionPart}</div>\n      <div className=\"contents\">{children}</div>\n    </StyledIconLine>\n  )\n}\n","import { yup } from '@speedlo/xform'\nimport { IFormState } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { parseNumber } from './numeral'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function fieldIsRequiredMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} cannot be empty`\n}\n\nexport function fieldIsNumberMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} must be a number`\n}\n\nexport function fieldIsPositiveNumberMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} must be a positive number`\n}\n\nexport const validateAsNumberField = (fieldDescription: string) =>\n  yup\n    .number()\n    .default(0)\n    .transform((_, origValue) => parseNumber(origValue))\n    .test(\n      'number-field',\n      fieldIsNumberMsg(fieldDescription),\n      value => !isNaN(value),\n    )\n\nexport const ARRAY_EMPTY: RoA<any> = []\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/src/Select'\nimport { StylesConfig } from 'react-select/src/styles'\n\nimport { Colors, Spacing } from '../styling'\nimport { Printer } from './Printer'\n\nexport type TSelectControlProps<OptionType> = NoChildren &\n  Props<OptionType> & {\n    width?: number\n    minWidth?: number\n    maxHeight?: number\n    invalid?: boolean\n    hideOnSingleOption?: boolean\n  }\n\ntype TStyledProps = TSelectControlProps<unknown> & {\n  printing: boolean\n}\n\nfunction getControlStyles({ width, minWidth, invalid }: TStyledProps) {\n  const colors =\n    invalid === true\n      ? {\n          border: `1px solid ${Colors.red}`,\n          backgroundColor: Colors.errorBackground,\n        }\n      : {\n          border: `1px solid ${Colors.greyMiddle}`,\n        }\n  return {\n    ...colors,\n    margin: Spacing.MarginAroundFormComponents,\n    width: width !== undefined ? `${width}rem` : '100%',\n    minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n  }\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const controlStyles = { ...base, ...getControlStyles(state.selectProps) }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n  clearIndicator: base => ({\n    ...base,\n    cursor: 'pointer',\n  }),\n})\n\nexport function SelectControl<OptionType>({\n  hideOnSingleOption = false,\n  ...props\n}: TSelectControlProps<OptionType>) {\n  const getPrintContent = () => {\n    if (!props.value) {\n      return null\n    }\n    const formatWith: any = props.getOptionLabel || props.formatOptionLabel\n    if (!formatWith) {\n      return null\n    }\n    const valueText = Array.isArray(props.value)\n      ? props.value.map(formatWith)\n      : formatWith(props.value as OptionType)\n    return valueText.length === 0 ? null : (\n      <div>{`${props.placeholder}: ${valueText}`}</div>\n    )\n  }\n\n  if (hideOnSingleOption && props.options && props.options.length <= 1) {\n    return null\n  }\n\n  return (\n    <Printer toPrint={getPrintContent()}>\n      <Select<OptionType>\n        {...props}\n        components={{\n          ClearIndicator,\n          ...props.components,\n        }}\n        styles={composeSelectControlStyles(props.styles)}\n      />\n    </Printer>\n  )\n}\n\nfunction ClearIndicator(props) {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n","import { createStatePersistence } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { SelectControl } from '../../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../../graph/generated'\nimport { formatBranchName } from '../../helpers/formats'\nimport { useAutorunWhenSingleBranch } from '../../hooks/useAutorunWhenSingleBranch'\nimport { useDropdownFilter } from '../../hooks/useDropdownFilter'\nimport { useDropdownMulti } from '../../hooks/useDropdownMulti'\nimport { useUserModel } from '../../hooks/useUserModel'\nimport { i18n } from '../../i18n'\nimport { idProp } from '../../tools/ramda'\n\nexport const useBranchesFilterEditable = createStatePersistence<RoA<ID>>(\n  'branches',\n  [],\n)\n\nexport const BranchesFilter = React.memo<NoChildren>(() => {\n  const userModel = useUserModel()\n  const [branches, setBranches] = useBranchesFilterEditable()\n\n  useAutorunWhenSingleBranch(branch => {\n    setBranches([branch.id])\n  })\n\n  const selectProps = {\n    options: userModel.branches,\n    placeholder: i18n.t`Filter branches...`,\n    formatOptionLabel: formatBranchName,\n    getOptionValue: idProp,\n    hideOnSingleOption: true,\n  }\n\n  const dropdownProps = useDropdownMulti<FCompanyBranchFragment>({\n    ...selectProps,\n    onSelectionChange: setBranches,\n    selected: branches,\n  })\n\n  const filterProps = useDropdownFilter<FCompanyBranchFragment>({\n    getOptionFilter: formatBranchName,\n  })\n\n  return (\n    <SelectControl<FCompanyBranchFragment>\n      {...dropdownProps}\n      {...filterProps}\n      {...selectProps}\n    />\n  )\n})\n\n/**\n * Access to currently persisted list of branches for filtering purposes.\n *\n * By default it will use all user branches if none are currently set.\n * This behavior can be disabled with argument.\n *\n * @param withUserBranchesWhenEmpty\n */\nexport function useBranchesFilter(withUserBranchesWhenEmpty = true) {\n  const userModel = useUserModel()\n  let [branches] = useBranchesFilterEditable()\n  if (branches.length === 0 && withUserBranchesWhenEmpty === true) {\n    branches = userModel.branchesId\n  }\n  const key = branches.join('|')\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useMemo(() => branches, [key])\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile, useResponsive } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => {\n  const { isMobile } = useResponsive()\n\n  return (\n    <StyledPageLayoutFullHeightItem\n      column={column}\n      row={row}\n      rowInMobile={rowInMobile}\n      widthInColumns={widthInColumns}\n      withScrollArea={withScrollArea}\n      forcePercentHeightInMobile={forceHeightInMobile}\n    >\n      {withScrollArea && !isMobile ? (\n        <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n      ) : (\n        <Sizer height={100} heightUnit=\"%\">\n          {children}\n        </Sizer>\n      )}\n    </StyledPageLayoutFullHeightItem>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useUserModel() {\n  const { user } = useRoot()\n  return user\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import React from 'react'\n\ntype TOptions<TSelectOption> = {\n  getOptionFilter?(option: TSelectOption): string\n}\n\nexport function useDropdownFilter<TSelectOption>({\n  getOptionFilter,\n}: TOptions<TSelectOption>) {\n  const isSearchable = typeof getOptionFilter === 'function'\n\n  const filterOption = React.useCallback(\n    (option, rawInput) => {\n      if (!getOptionFilter || rawInput.length === 0) {\n        return true\n      }\n      return getOptionFilter(option.data)\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    },\n    [getOptionFilter],\n  )\n\n  return { filterOption, isSearchable }\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../app/Responsive'\n\nconst StyledFormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 0.1fr [desc] auto [content] 1fr;\n  grid-template-areas: '. desc content';\n  grid-auto-flow: row dense;\n\n  ${mediaMobile`\n    grid-template-columns: 1fr;\n    grid-template-areas:\n      'content';\n  `};\n`\n\ninterface IProps {}\nlet formGridCounter = 0\nconst formGridContext = React.createContext(formGridCounter)\n\nexport const FormGrid: React.FC<IProps> = props => {\n  return (\n    <StyledFormGrid>\n      <formGridContext.Provider value={++formGridCounter}>\n        {props.children}\n      </formGridContext.Provider>\n    </StyledFormGrid>\n  )\n}\n\nexport function useFormGridCheck() {\n  return React.useContext(formGridContext) > 0\n}\n","import { useAutorun } from '@speedlo/hooks'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\nexport function useAutorunWhenSingleBranch(\n  onSingleBranch: (branch: FCompanyBranchFragment) => void,\n) {\n  const { user } = useRoot()\n  useAutorun(() => {\n    if (user.isReady && user.hasSingleBranch) {\n      onSingleBranch(user.branches[0])\n    }\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype TProps = SomeChildren & {\n  toPrint: ReactNodes\n}\n\nconst StyledPrinter = styled.div`\n  & .toPrint {\n    display: none;\n  }\n  @media print {\n    & .toPrint {\n      display: inline-block;\n    }\n    & .noPrint {\n      display: none;\n    }\n  }\n`\n\nexport const Printer: React.FC<TProps> = props => {\n  return (\n    <StyledPrinter>\n      <div className=\"toPrint\">{props.toPrint}</div>\n      <div className=\"noPrint\">{props.children}</div>\n    </StyledPrinter>\n  )\n}\n","var map = {\n\t\"./cs.svg\": 1396,\n\t\"./de.svg\": 1397,\n\t\"./en.svg\": 1398,\n\t\"./pl.svg\": 1399,\n\t\"./sk.svg\": 1400\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1395;","var map = {\n\t\"./logo-doveze.svg\": 1402,\n\t\"./logo-gopay.svg\": 1403,\n\t\"./logo-mastercard.svg\": 1404,\n\t\"./logo-visa.svg\": 1405\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1401;","import { useXField, useXFormState, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectControl, TSelectControlProps } from '../../atoms/SelectControl'\nimport { useDropdownFilter } from '../../hooks/useDropdownFilter'\nimport { useDropdownMulti } from '../../hooks/useDropdownMulti'\nimport { idProp } from '../../tools/ramda'\n\ntype TFormDropdownMultiProps<OptionType> = Omit<\n  TSelectControlProps<OptionType>,\n  'value' | 'onChange' | 'isMulti'\n> & {\n  fieldName: XFieldName\n  options: RoA<OptionType>\n  getOptionFilter?(option: OptionType): string\n}\n\nexport const FormDropdownMulti = <TOption extends any>({\n  fieldName,\n  getOptionValue = idProp as any,\n  getOptionFilter,\n  ...selectProps\n}: TFormDropdownMultiProps<TOption>) => {\n  const formState = useXFormState()\n  const field = useXField<RoA<ID>>(fieldName)\n\n  return useObserver(function useBody() {\n    const filterProps = useDropdownFilter({ getOptionFilter })\n    const dropdownProps = useDropdownMulti({\n      ...selectProps,\n      onSelectionChange: field.setValue,\n      selected: field.value,\n      getOptionValue,\n    })\n\n    return (\n      <SelectControl<TOption>\n        {...dropdownProps}\n        {...filterProps}\n        {...selectProps}\n        onFocus={() => field.setTouched()}\n        invalid={field.touched && field.hasError}\n        isDisabled={formState.isSubmitting}\n        getOptionValue={getOptionValue}\n      />\n    )\n  })\n}\n","import styled from 'styled-components/macro'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nexport const CardDock = styled.div<IProps>`\n  position: absolute;\n  ${({ position }) =>\n    position === 'BottomRight' || position === 'BottomLeft'\n      ? 'bottom: 0'\n      : 'top: 0'};\n  ${({ position }) =>\n    position === 'BottomLeft' || position === 'TopLeft'\n      ? 'left: 0'\n      : 'right: 0'};\n`\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst StyledDelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return (\n      <TimeBadge variant={variant}>\n        <span role=\"img\" aria-label=\"Unknown\">\n          ❔\n        </span>\n      </TimeBadge>\n    )\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <StyledDelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst StyledTimeBadge = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid ${Colors.white};\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(StyledTimeBadge)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(StyledTimeBadge)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(StyledTimeBadge)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(StyledTimeBadge)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  line-height: 1.6rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge = React.forwardRef<HTMLDivElement, ITimeBadgeProps>(\n  ({ minutes, className, children, variant, onClick }, ref) => {\n    const Variant = variants[variant]\n    let output = children\n    const extraClassNames = ['animated']\n    if (minutes !== undefined) {\n      if (minutes > 99 || minutes < -9) {\n        extraClassNames.push(bigNumberStyle)\n      }\n      if (minutes < -99) {\n        output = '‒'\n        extraClassNames.push(dashStyle)\n      } else {\n        output = minutes.toString()\n      }\n    }\n    if (onClick) {\n      extraClassNames.push(clickable)\n    }\n    return (\n      <Variant\n        ref={ref}\n        key={minutes}\n        onClick={onClick}\n        className={cx(\n          className,\n          {\n            heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n            pulse: variant === ETimeBadgeVariant.WARNING,\n          },\n          ...extraClassNames,\n        )}\n      >\n        {output}\n      </Variant>\n    )\n  },\n)\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import React from 'react'\n\nimport { ARRAY_EMPTY } from '../helpers/form'\n\ntype TOptions<TSelectOption> = {\n  options: RoA<TSelectOption> | null\n  selected: RoA<ID>\n  onSelectionChange: (selected: RoA<ID>) => void\n  getOptionValue(option: TSelectOption): string\n}\n\nexport function useDropdownMulti<TSelectOption>({\n  options,\n  selected,\n  onSelectionChange,\n  getOptionValue,\n}: TOptions<TSelectOption>) {\n  const value = React.useMemo(() => {\n    if (!Array.isArray(selected)) {\n      return null\n    }\n    return options === null\n      ? ARRAY_EMPTY\n      : options.filter(option => selected.includes(getOptionValue(option)))\n  }, [selected, options, getOptionValue])\n\n  const onChange = (option: unknown) => {\n    onSelectionChange(\n      option ? (option as TSelectOption[]).map(getOptionValue) : ARRAY_EMPTY,\n    )\n  }\n\n  return { value, onChange, isMulti: true }\n}\n","import styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n  @media print {\n    color: ${Colors.black};\n  }\n`\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n        ? customer.defaultPhone.phone\n        : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Note } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n}\n\nconst StyledCurrentNote = styled.span`\n  color: ${Colors.orange};\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note }) =>\n  note ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon={Note} labelMargin=\"0\">\n        <StyledCurrentNote>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </StyledCurrentNote>\n      </IconLine>\n    </>\n  ) : null\n","import { Star } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\nconst StyledOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 3.8rem;\n  top: 0;\n`\n\nexport const OrderStarIndicator: React.FC = () => {\n  return (\n    <StyledOrderStarIndicator data-testid=\"OrderStarIndicator\">\n      <Icon icon={Star} color={Colors.orange} />\n    </StyledOrderStarIndicator>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport {\n  DeliveryTypeEnum,\n  FOrderTickerFragment,\n} from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\nimport { OrderStarIndicator } from '../atoms/OrderStarIndicator'\n\ninterface IOrderTickerProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onClick(): void\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  isCancelled,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (order.sector !== null) {\n      return order.sector.name\n    }\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    if (order.address.original) return order.address.original\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={isCancelled}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          {order.isPriority && <OrderStarIndicator />}\n          {order.totalSum.formattedValue}\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled data-testid=\"PaidMark\" />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/orderNotification.0aa2ebe9.mp3\";","import React from 'react'\n\nimport {\n  QFilterOccasionsOccasions,\n  useQFilterOccasions,\n} from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/form'\nimport { i18n } from '../../i18n'\nimport { RM } from '../../tools/ramda'\nimport { FormDropdownMulti } from '../forms/FormDropdownMulti'\nimport { useBranchesFilter } from './BranchesFilter'\n\ntype TOccasion = QFilterOccasionsOccasions\n\ntype TProps = NoChildren & {\n  markAsAvailable?(isAvailable: boolean): void\n}\n\nexport const OccasionsFilter = React.memo<TProps>(({ markAsAvailable }) => {\n  const branches = useBranchesFilter()\n  const { getStash, loading } = useQFilterOccasions({\n    branches,\n  })\n\n  const occasions = getStash(data => data.occasions)\n  const hasAnyOccasions = occasions !== null && occasions.length > 0\n\n  React.useEffect(() => {\n    if (markAsAvailable) {\n      markAsAvailable(hasAnyOccasions)\n    }\n  }, [hasAnyOccasions, markAsAvailable])\n\n  return (\n    <FormDropdownMulti<TOccasion>\n      fieldName=\"occasions\"\n      placeholder={i18n.t`Filter by occasions`}\n      options={occasions || ARRAY_EMPTY}\n      noOptionsMessage={() => i18n.t`No occasions`}\n      isLoading={loading}\n      getOptionLabel={RM.prop('title')}\n      getOptionFilter={RM.prop('title')}\n    />\n  )\n})\n","import './SectorsFilter.css'\n\nimport { useXField } from '@speedlo/xform'\nimport React from 'react'\nimport DropdownTreeSelect, {\n  DropdownTreeSelectProps,\n  TreeNode,\n} from 'react-dropdown-tree-select'\n\nimport {\n  FCompanyBranchFragment,\n  QFilterSectorsSectors,\n  useQFilterSectors,\n} from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/form'\nimport { useUserModel } from '../../hooks/useUserModel'\nimport { i18n } from '../../i18n'\nimport { idProp, idPropEq, RM } from '../../tools/ramda'\nimport { useBranchesFilter } from './BranchesFilter'\n\nconst DropdownTreeSelectMemo = React.memo<DropdownTreeSelectProps & NoChildren>(\n  ({ texts, data, onChange }) => {\n    // this wrapper is necessary because of the silly implementation of the component\n    // which basically resets the state on each render\n    return <DropdownTreeSelect texts={texts} data={data} onChange={onChange} />\n  },\n)\n\ntype TProps = NoChildren & {\n  markAsAvailable?(isAvailable: boolean): void\n}\n\ntype TSector = QFilterSectorsSectors\ntype TBranch = FCompanyBranchFragment\n\nexport const SectorsFilter = React.memo<TProps>(({ markAsAvailable }) => {\n  const userModel = useUserModel()\n  const branches = useBranchesFilter()\n  const hasSingleBranch = branches.length === 1\n\n  const { getStash } = useQFilterSectors({\n    branches,\n  })\n  const sectors = getStash(data => data.sectors)\n  const hasAnySectors = sectors !== null && sectors.length > 0\n\n  const treeData = React.useMemo(() => {\n    if (sectors === null) {\n      return null\n    }\n    if (hasSingleBranch) {\n      return buildForSingleBranch(sectors)\n    }\n    return buildWithBranches(\n      sectors,\n      userModel.branches.filter(branch => branches.includes(branch.id)),\n    )\n  }, [branches, hasSingleBranch, sectors, userModel])\n\n  const field = useXField<RoA<ID>>('sectors')\n\n  React.useEffect(() => {\n    if (markAsAvailable) {\n      markAsAvailable(hasAnySectors)\n    }\n  }, [hasAnySectors, markAsAvailable])\n\n  const onChange = React.useCallback(\n    (currentNode: TreeNode, selectedNodes: TreeNode[]) => {\n      const selectedSectorsId = selectedNodes.reduce(\n        (acc, node) => {\n          if (isBranchNode(node)) {\n            // with branch selected, its root sectors needs to be used\n            // in the filter instead\n            const branchNode = treeData!.find(idPropEq(node.value))\n            if (branchNode && branchNode.children) {\n              acc.push(...(branchNode.children as RoA<TSector>).map(idProp))\n            }\n          } else {\n            acc.push(node.value)\n          }\n          return acc\n        },\n        [] as ID[],\n      )\n      field.setValue(selectedSectorsId)\n    },\n    [field, treeData],\n  )\n\n  const texts = React.useMemo(\n    () => ({\n      placeholder: i18n.t`Filter by sectors`,\n      noMatches: i18n.t`No sectors`,\n    }),\n    [],\n  )\n\n  if (!hasAnySectors) {\n    return null\n  }\n\n  return (\n    <DropdownTreeSelectMemo\n      texts={texts}\n      data={treeData!}\n      onChange={onChange}\n    />\n  )\n})\n\nfunction buildForSingleBranch(sectors: RoA<TSector>) {\n  return getTreeFromFlatData({\n    flatData: sectors,\n    mapper: node => ({\n      label: node.name,\n      value: node.id,\n    }),\n    getParentKey(node) {\n      return node.parent ? node.parent.id : null\n    },\n    getKey(node) {\n      return node.id\n    },\n  })\n}\n\nconst branchKey = (branchId: ID) => `branch-${branchId}`\nfunction isBranchNode(node: TreeNode) {\n  return node.value.startsWith('branch')\n}\n\nfunction buildWithBranches(sectors: RoA<TSector>, branches: RoA<TBranch>) {\n  const sectorsPerBranch = RM.groupBy(\n    sector => sector.companyBranch.id,\n    sectors,\n  )\n\n  const flatData = [\n    ...sectors,\n    ...branches.filter(branch => {\n      return (\n        sectorsPerBranch[branch.id] && sectorsPerBranch[branch.id].length > 0\n      )\n    }),\n  ]\n\n  return getTreeFromFlatData({\n    flatData,\n    mapper: (node: TSector | TBranch) => ({\n      label: node.name,\n      id: isSector(node) ? node.id : branchKey(node.id),\n      value: isSector(node) ? node.id : branchKey(node.id),\n    }),\n    getParentKey(node) {\n      if (isSector(node)) {\n        if (node.parent) {\n          return node.parent.id\n        }\n        // sectors without parent gets the branch as parent\n        return branchKey(node.companyBranch.id)\n      }\n      return null // is branch, no parent\n    },\n    getKey(node) {\n      if (isSector(node)) {\n        return node.id\n      }\n      return branchKey(node.id)\n    },\n  })\n}\n\nfunction getTreeFromFlatData<T extends Record<string, any>, R>({\n  flatData,\n  mapper,\n  getKey,\n  getParentKey,\n}: {\n  flatData: RoA<T>\n  mapper(node: T): R\n  getKey(node: T): string\n  getParentKey(node: T): string | null\n}): Array<T & R & { children: T[] }> {\n  if (!flatData) {\n    return []\n  }\n\n  const rootKey = '@@'\n\n  const childrenToParents = { [rootKey]: [] as T[] }\n  flatData.forEach(child => {\n    const parentKey = getParentKey(child) || rootKey\n\n    if (parentKey in childrenToParents) {\n      childrenToParents[parentKey].push(child)\n    } else {\n      childrenToParents[parentKey] = [child]\n    }\n  })\n\n  if (!(rootKey in childrenToParents)) {\n    return []\n  }\n\n  const trav = (parent: T) => {\n    const parentKey = getKey(parent)\n    if (parentKey in childrenToParents) {\n      return {\n        ...parent,\n        ...mapper(parent),\n        children: childrenToParents[parentKey].map(child => trav(child)),\n      }\n    } else {\n      return {\n        ...parent,\n        ...mapper(parent),\n        children: ARRAY_EMPTY,\n      }\n    }\n  }\n\n  return childrenToParents[rootKey].map(child => trav(child))\n}\n\nfunction isSector(node: TSector | TBranch): node is TSector {\n  return Reflect.has(node, 'parent')\n}\n","import { SvgIcon } from '@material-ui/core'\nimport React from 'react'\n\nexport function createSvgIcon(\n  path: ReactNode,\n  displayName: string,\n): typeof SvgIcon {\n  const Component = React.memo(\n    React.forwardRef<SVGSVGElement, {}>((props, ref) => (\n      <SvgIcon data-mui-test={`${displayName}Icon`} ref={ref} {...props}>\n        {path}\n      </SvgIcon>\n    )),\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = `${displayName}Icon`\n  }\n\n  return Component\n}\n","import React from 'react'\nimport { createSvgIcon } from './createSvgIcon'\n\nexport const FilterDisable = createSvgIcon(\n  <path d=\"M14.76,20.83L17.6,18L14.76,15.17L16.17,13.76L19,16.57L21.83,13.76L23.24,15.17L20.43,18L23.24,20.83L21.83,22.24L19,19.4L16.17,22.24L14.76,20.83M12,12V19.88C12.04,20.18 11.94,20.5 11.71,20.71C11.32,21.1 10.69,21.1 10.3,20.71L8.29,18.7C8.06,18.47 7.96,18.16 8,17.87V12H7.97L2.21,4.62C1.87,4.19 1.95,3.56 2.38,3.22C2.57,3.08 2.78,3 3,3V3H17V3C17.22,3 17.43,3.08 17.62,3.22C18.05,3.56 18.13,4.19 17.79,4.62L12.03,12H12Z\" />,\n  'FilterDisable',\n)\n","import React from 'react'\nimport { createSvgIcon } from './createSvgIcon'\n\nexport const FilterEnable = createSvgIcon(\n  <path d=\"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z\" />,\n  'FilterEnable',\n)\n","import { Popover } from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useXFormCtx } from '@speedlo/xform'\nimport { useLocalStore, useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Card } from '../../../atoms/Card'\nimport { Icon } from '../../../atoms/Icon'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { OccasionsFilter } from '../../../components/filters/OccasionsFilter'\nimport { SectorsFilter } from '../../../components/filters/SectorsFilter'\nimport { FilterDisable } from '../../../components/icons/FilterDisable'\nimport { FilterEnable } from '../../../components/icons/FilterEnable'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { TKitchenFormFilter } from '../kitchen.types'\n\nconst StyledPopup = styled(Popover)`\n  .MuiPopover-paper {\n    width: 30rem;\n    overflow-x: initial;\n    overflow-y: initial;\n  }\n  .close-button {\n    margin: -0.9rem -0.7rem 0rem auto;\n    padding: 0.7rem;\n    display: block;\n    width: 3rem;\n    text-align: right;\n  }\n`\n\nexport const KitchenFilters = React.memo<NoChildren>(() => {\n  const xform = useXFormCtx<TKitchenFormFilter>()\n\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const store = useLocalStore(() => ({\n    isOpen: false,\n    setOpen() {\n      this.isOpen = true\n    },\n    setClosed() {\n      this.isOpen = false\n    },\n    sectorsAvailable: false,\n    markSectorsAvailable(available: boolean) {\n      this.sectorsAvailable = available\n    },\n    occassionsAvailable: false,\n    markOccasionsAvailable(available: boolean) {\n      this.occassionsAvailable = available\n    },\n    get isEnabled() {\n      return this.sectorsAvailable || this.occassionsAvailable\n    },\n    get isActive() {\n      const { values, wasSubmitted } = xform.state\n      return (\n        wasSubmitted && (values.occasions.length > 0 || values.sectors.length)\n      )\n    },\n  }))\n\n  return useObserver(() => (\n    <>\n      <SizerButton>\n        <TouchButton\n          color={store.isActive ? Colors.green : Colors.greyMiddle}\n          icon={store.isActive ? FilterDisable : FilterEnable}\n          ref={buttonRef}\n          iconSize={2}\n          onClick={store.setOpen}\n          disabled={!store.isEnabled}\n        ></TouchButton>\n      </SizerButton>\n      <StyledPopup\n        open={store.isOpen}\n        keepMounted={true}\n        onClose={(ev, reason) => {\n          if (reason === 'backdropClick') {\n            xform.api.submitForm()\n          }\n          store.setClosed()\n        }}\n        anchorEl={buttonRef.current}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Card padding={1}>\n          <Icon\n            icon={Close}\n            color={Colors.greyMiddle}\n            fontSize={1}\n            className=\"close-button\"\n            onClick={() => {\n              xform.api.submitForm()\n              store.setClosed()\n            }}\n          />\n          <SectorsFilter markAsAvailable={store.markSectorsAvailable} />\n          <VerticalGap />\n          <OccasionsFilter markAsAvailable={store.markOccasionsAvailable} />\n          <VerticalGap />\n          <Sizer width={9} height={Spacing.ButtonHeight}>\n            <TouchButton\n              text={i18n.t`Filter`}\n              color={Colors.green}\n              onClick={() => {\n                xform.api.submitForm()\n                store.setClosed()\n              }}\n            />\n          </Sizer>\n        </Card>\n      </StyledPopup>\n    </>\n  ))\n})\n","import {\n  FKitchenCompletionOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenCompletionOrderListQuery,\n  SKitchenCompletionOrderListSubscription,\n  useQKitchenCompletionOrderList,\n  useSKitchenCompletionOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { RM } from '../../../tools/ramda'\nimport { TKitchenDeckInput } from '../kitchen.types'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\nconst sortForCompletion = RM.sortWith<FKitchenCompletionOrderFragment>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.prop('orderNumber')),\n  RM.ascend(RM.either(RM.prop('deliverAt'), RM.prop('createdAt'))),\n])\n\nexport function useKitchenCompletionDeck({\n  branches,\n  sectors,\n  occasions,\n}: TKitchenDeckInput) {\n  const skip = branches.length === 0\n\n  const variables = {\n    branches,\n    occasions,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQKitchenCompletionOrderList(\n    {\n      ...variables,\n      categories: requiredCategories,\n    },\n    { skip },\n  )\n  useOnConnectionRestored(refetch)\n\n  useSKitchenCompletionOrderList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data => sortForCompletion(data.orders))\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenCompletionOrderListSubscription,\n  prev: QKitchenCompletionOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order || !prev.orders) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { toJS } from 'mobx'\nimport React from 'react'\n\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { TKitchenDeckInput, TKitchenFormFilter } from '../kitchen.types'\n\nexport function useKitchenFilterForm() {\n  const branches = useBranchesFilter(false)\n\n  const [filters, setFilters] = React.useState<TKitchenFormFilter>({\n    occasions: [],\n    sectors: [],\n  })\n\n  const onFilterSubmit = React.useCallback((values: TKitchenFormFilter) => {\n    setFilters(toJS(values))\n  }, [])\n\n  const filterInput = React.useMemo(\n    () => ({\n      ...filters,\n      branches,\n    }),\n    [branches, filters],\n  )\n\n  return [filterInput, onFilterSubmit] as [\n    TKitchenDeckInput,\n    typeof onFilterSubmit,\n  ]\n}\n","import { XForm } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { QKitchenCompletionOrderListOrders } from '../../../graph/generated'\nimport { useKitchenCompletionDeck } from '../hooks/useKitchenCompletionDeck'\nimport { useKitchenFilterForm } from '../hooks/useKitchenFilterForm'\n\ntype TOrder = QKitchenCompletionOrderListOrders\n\nconst loaderContext = React.createContext<RoA<TOrder> | null>(null)\n\nexport const KitchenCompletionLoader: React.FC = observer(props => {\n  const [filters, onFilterSubmit] = useKitchenFilterForm()\n\n  const deck = useKitchenCompletionDeck(filters)\n\n  return (\n    <XForm initialValues={filters} onSubmit={onFilterSubmit}>\n      <loaderContext.Provider value={deck}>\n        {props.children}\n      </loaderContext.Provider>\n    </XForm>\n  )\n})\n\nexport function useKitchenCompletion() {\n  return React.useContext(loaderContext)\n}\n","import React from 'react'\n\nimport orderNotificationSound from '../assets/orderNotification.mp3'\nimport { useRoot } from '../atoms/RootProvider'\nimport { useIntervalSound } from '../hooks/useIntervalSound'\n\ntype TProps = {\n  shouldPlay: boolean\n  playNow?: boolean\n}\n\nexport const OrderNotificationSound = React.memo<TProps>(\n  ({ shouldPlay, playNow = false }) => {\n    const { config } = useRoot()\n    return useIntervalSound({\n      soundUrl: orderNotificationSound,\n      intervalSec: config.orderListSoundIntervalSec,\n      forcePlayNow: playNow,\n      shouldPlay,\n    })\n  },\n)\n","import styled from 'styled-components'\n\nexport const KitchenInfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n","import {\n  OrderRecipeStateEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../tools/ramda'\nimport { TKitchenCardState, TKitchenDeck } from '../kitchen.types'\n\nexport const kitchenRecipeStateMapping: Partial<\n  Record<OrderRecipeStateEnum, TKitchenCardState>\n> = {\n  [OrderRecipeStateEnum.Fresh]: 'todo',\n  [OrderRecipeStateEnum.Preparing]: 'progress',\n  [OrderRecipeStateEnum.Ready]: 'progress',\n  [OrderRecipeStateEnum.Cooked]: 'done',\n}\n\nexport const kitchenOrderStateMapping: Partial<\n  Record<OrderStateCategoryEnum, TKitchenCardState>\n> = {\n  [OrderStateCategoryEnum.NewOrders]: 'todo',\n  [OrderStateCategoryEnum.Preparing]: 'progress',\n  [OrderStateCategoryEnum.ReadyToDeliver]: 'done',\n}\n\nexport function useKitchenDeck() {\n  const initialState = (RM.mapObjIndexed(\n    () => [],\n    RM.invertObj(kitchenRecipeStateMapping),\n  ) as unknown) as TKitchenDeck\n\n  return { initialState }\n}\n","import {\n  FKitchenOrderBaseItems,\n  FKitchenOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { RM } from '../../../tools/ramda'\nimport {\n  TKitchenCardItem,\n  TKitchenCardOrder,\n  TKitchenDeck,\n  TKitchenDeckInput,\n} from '../kitchen.types'\nimport {\n  kitchenOrderStateMapping,\n  kitchenRecipeStateMapping,\n} from './useKitchenDeck'\n\nconst requiredCategories = Object.keys(\n  kitchenOrderStateMapping,\n) as OrderStateCategoryEnum[]\n\nexport function useKitchenOrderDeck({\n  branches,\n  occasions,\n  sectors,\n}: TKitchenDeckInput) {\n  const skip = branches.length === 0\n\n  const variables = {\n    branches,\n    occasions,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      ...variables,\n      categories: requiredCategories,\n    },\n    { skip },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data => normalizeToKitchenDeck(data.orders))\n}\n\nfunction normalizeToKitchenDeck(orders: RoA<FKitchenOrderFragment>) {\n  const cards: TKitchenCardOrder[] = orders.map(mapOrderToKitchenCard)\n  return RM.groupBy(o => o.state, cards) as TKitchenDeck\n}\n\nfunction mapOrderToKitchenCard(\n  order: FKitchenOrderFragment,\n): TKitchenCardOrder {\n  return {\n    ...order,\n    type: 'order',\n    state: kitchenOrderStateMapping[order.orderStateCategory]!,\n    time: order.deliverAt || order.createdAt,\n    items: order.items.map(mapOrderItemToCardItem),\n  }\n}\n\nexport function mapOrderItemToCardItem(\n  orderItem: FKitchenOrderBaseItems,\n): TKitchenCardItem {\n  return {\n    id: orderItem.id,\n    code: orderItem.recipe.code,\n    name: orderItem.recipe.name,\n    state: kitchenRecipeStateMapping[orderItem.state.enum]!,\n    isReady: kitchenRecipeStateMapping[orderItem.state.enum] === 'done',\n    sideDishes: orderItem.sidedishes.map(RM.prop('recipe')),\n  }\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order || !prev.orders) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { KeyboardArrowRight } from '@material-ui/icons'\nimport React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ntype TProps = NoChildren & ITouchButtonProps\n\nexport const KitchenCardButton: React.FC<TProps> = props => {\n  return (\n    <TouchButton\n      icon={KeyboardArrowRight}\n      width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n      color={Colors.green}\n      {...props}\n    />\n  )\n}\n","import React from 'react'\n\nimport {\n  OrderRecipeStateEnum,\n  OrderStateEnum,\n  useMKitchenOrderHandle,\n  useMKitchenOrderRecipeHandle,\n  useMKitchenSectorHandle,\n  useMKitchenSectorRecipeHandle,\n} from '../../../graph/generated'\nimport { useCanMutate } from '../../../hooks/useAccessGuard'\nimport { RM } from '../../../tools/ramda'\nimport { TKitchenCard, TKitchenCardItem } from '../kitchen.types'\n\nexport function useKitchenHandler() {\n  const canHandleOrder = useCanMutate('addOrderState')\n  const canHandleOrderRecipe = useCanMutate('updateOrderRecipeState')\n  const canHandleSector = useCanMutate('updateSectorRecipes')\n  const canHandleSectorRecipe = useCanMutate('updateSectorRecipe')\n\n  const [handleOrder] = useMKitchenOrderHandle()\n  const [handleOrderRecipe] = useMKitchenOrderRecipeHandle()\n  const [handleSector] = useMKitchenSectorHandle()\n  const [handleSectorRecipe] = useMKitchenSectorRecipeHandle()\n\n  const canHandleCard = (card: TKitchenCard) => {\n    if (card.state === 'todo') {\n      if (card.type === 'order' || card.type === 'completion') {\n        return canHandleOrder\n      }\n      if (card.type === 'sector') {\n        return canHandleSector\n      }\n    }\n    // ! temporary, should be removed when cashbox can finish those recipes\n    if (card.type === 'sector' && card.state === 'done') {\n      return canHandleSector\n    }\n    if (card.type === 'completion' && card.state === 'done') {\n      return canHandleOrder\n    }\n    return false\n  }\n\n  const canHandleCardItem = (card: TKitchenCard) => {\n    if (card.state !== 'todo') {\n      if (card.type === 'order' || card.type === 'completion') {\n        return canHandleOrderRecipe\n      }\n      if (card.type === 'sector') {\n        return canHandleSectorRecipe\n      }\n    }\n    return false\n  }\n\n  const handleCard = React.useCallback(\n    async (card: TKitchenCard) => {\n      if (card.type === 'order') {\n        await handleOrder({ orderId: card.id, state: OrderStateEnum.InProduce })\n      }\n      if (card.type === 'sector') {\n        if (card.state === 'todo') {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Preparing,\n          })\n        }\n        if (card.state === 'done') {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Finished,\n          })\n        }\n      }\n      if (card.type === 'completion') {\n        if (card.state === 'todo') {\n          await handleOrder({\n            orderId: card.id,\n            state: OrderStateEnum.Accepted,\n          })\n        }\n        if (card.state === 'done') {\n          await handleOrder({\n            orderId: card.id,\n            state: OrderStateEnum.Finished,\n          })\n        }\n      }\n    },\n    [handleOrder, handleSector],\n  )\n\n  const handleCardItem = React.useCallback(\n    async (card: TKitchenCard, item: TKitchenCardItem) => {\n      const nextItemState = getItemToggledState(card, item)\n      if (card.type === 'order' || card.type === 'completion') {\n        await handleOrderRecipe({\n          orderRecipeId: item.id,\n          state: nextItemState,\n        })\n      }\n      if (card.type === 'sector') {\n        await handleSectorRecipe({\n          sectorRecipeId: item.id,\n          state: nextItemState,\n        })\n\n        // special case to move a whole sector to done when all items are ready\n        // need to mark the one that was moved just now so the following condition can pass\n        item.isReady = nextItemState === OrderRecipeStateEnum.Ready\n        if (card.items.every(RM.propEq('isReady', true))) {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Cooked,\n          })\n        }\n      }\n    },\n    [handleOrderRecipe, handleSector, handleSectorRecipe],\n  )\n\n  return {\n    canHandleCard,\n    canHandleCardItem,\n    handleCard,\n    handleCardItem,\n  }\n}\n\nfunction getItemToggledState(\n  card: TKitchenCard,\n  item: TKitchenCardItem,\n): OrderRecipeStateEnum {\n  switch (item.state) {\n    case 'todo':\n    case 'progress': {\n      if (card.type === 'sector') {\n        return item.isReady\n          ? OrderRecipeStateEnum.Preparing\n          : OrderRecipeStateEnum.Ready\n      }\n      return OrderRecipeStateEnum.Cooked\n    }\n    case 'done': {\n      return OrderRecipeStateEnum.Preparing\n    }\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ntype TProps = NoChildren & {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<TProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\n\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\nimport { TKitchenCardItemCommon } from '../kitchen.types'\n\ntype TProps = NoChildren & {\n  item: TKitchenCardItemCommon\n  isChecked?: boolean\n  canHandle?: boolean\n  onHandle?(): void\n  isFirstSidedish?: boolean\n}\n\nconst firstSideDishStyle = css`\n  margin-top: -0.8rem;\n`\n\nconst StyledKitchenCardItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${(props: { isFirstSidedish: boolean }) =>\n    props.isFirstSidedish && firstSideDishStyle};\n\n  & .done-container {\n    flex: 0 0 2.4rem;\n  }\n\n  & .item-code {\n    flex: 0 0 4.1rem;\n    font-size: ${FontSizes.CompactCardBig};\n    color: ${Colors.black};\n    margin-top: 0.35rem;\n  }\n\n  & .item-name {\n    flex: 1 0;\n    color: ${Colors.greyMiddle};\n    margin: 0.4rem 0 0 0.5rem;\n  }\n`\n\nexport const KitchenCardItem: React.FC<TProps> = ({\n  item,\n  isChecked = false,\n  canHandle = false,\n  onHandle,\n  isFirstSidedish = false,\n}) => (\n  <StyledKitchenCardItem isFirstSidedish={isFirstSidedish}>\n    <div className=\"done-container\">\n      {canHandle && onHandle && (\n        <TouchCheckButton isChecked={isChecked} onClick={onHandle} />\n      )}\n    </div>\n    <div className=\"item-code\">{item.code}</div>\n    <div className=\"item-name\">{item.name}</div>\n  </StyledKitchenCardItem>\n)\n","import React, { Fragment } from 'react'\n\nimport { TKitchenCardItem } from '../kitchen.types'\nimport { KitchenCardItem } from './KitchenCardItem'\n\ninterface IProps {\n  items: RoA<TKitchenCardItem>\n  canHandle: boolean\n  onHandle(item: TKitchenCardItem): Promise<void>\n}\n\nexport const KitchenCardItems: React.FC<IProps> = ({\n  items,\n  canHandle,\n  onHandle,\n}) => {\n  return (\n    <div>\n      {items.map(item => (\n        <Fragment key={item.id}>\n          <KitchenCardItem\n            item={item}\n            isChecked={item.isReady}\n            canHandle={canHandle}\n            onHandle={() => onHandle(item)}\n          />\n          <>\n            {item.sideDishes.map((sideDish, idx) => (\n              <KitchenCardItem\n                key={`${item.id}-${sideDish.id}`}\n                item={sideDish}\n                isFirstSidedish={idx === 0 && canHandle}\n              />\n            ))}\n          </>\n        </Fragment>\n      ))}\n    </div>\n  )\n}\n","import { Star } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\nconst StyledKitchenOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 0.2rem;\n  top: 0.2rem;\n  z-index: 5;\n`\n\nexport const KitchenOrderStarIndicator: React.FC = () => {\n  return (\n    <StyledKitchenOrderStarIndicator data-testid=\"KitchenOrderStarIndicator\">\n      <Icon color={Colors.orange} icon={Star} />\n    </StyledKitchenOrderStarIndicator>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { useKitchenHandler } from '../hooks/useKitchenHandler'\nimport { TKitchenCardCompletion } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ntype TProps = NoChildren & {\n  card: TKitchenCardCompletion\n  showBranch: boolean\n}\n\nexport const StyledKitchenCardCompletion = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  padding-bottom: ${Spacing.Middle};\n  position: relative;\n\n  & .header {\n    display: flex;\n    flex-wrap: nowrap;\n  }\n\n  & .order__number {\n    width: 4.5rem;\n    background: ${Colors.orange};\n    color: ${Colors.white};\n    font-size: 2rem;\n    border-top-left-radius: ${Radiuses.Card};\n    text-align: center;\n  }\n\n  & .order__source {\n    display: inline-block;\n    background: ${Colors.greyMiddle};\n    color: ${Colors.white};\n    font-size: 0.9rem;\n    padding: 0.1rem 0.8rem;\n    border-radius: 0.9rem;\n    margin: 0.5rem;\n  }\n\n  & .order__sector {\n    display: inline-block;\n    color: ${Colors.black};\n    margin: 0.5rem;\n  }\n\n  & .order__content {\n    margin: ${Spacing.Middle};\n  }\n`\n\nexport const KitchenCardCompletion: React.FC<TProps> = ({\n  card,\n  showBranch,\n}) => {\n  const handler = useKitchenHandler()\n  return (\n    <StyledKitchenCardCompletion data-testid=\"order-box\">\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {card.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <div className=\"header\">\n        <div className=\"order__number\">{card.orderNumber}</div>\n        <div className=\"order__source\">{`${card.orderOrigin.code} ${\n          card.cashBox !== null ? card.cashBox.id : ''\n        }`}</div>\n        {card.sector && <div className=\"order__sector\">{card.sector.name}</div>}\n        {card.isPriority && <KitchenOrderStarIndicator />}\n      </div>\n\n      <div className=\"order__content\">\n        <KitchenCardItems\n          items={card.items}\n          canHandle={handler.canHandleCardItem(card)}\n          onHandle={item => handler.handleCardItem(card, item)}\n        />\n        {card.note && <div className=\"order__note\">{card.note}</div>}\n      </div>\n\n      {handler.canHandleCard(card) && (\n        <CardDock position=\"BottomRight\">\n          <KitchenCardButton\n            color={card.state === 'todo' ? Colors.green : Colors.red}\n            onClick={() => handler.handleCard(card)}\n          />\n        </CardDock>\n      )}\n    </StyledKitchenCardCompletion>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Mobile } from '../../../app/Responsive'\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { FKitchenCompletionOrderFragment, OrderStateCategoryEnum } from '../../../graph/generated'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { RM } from '../../../tools/ramda'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { kitchenOrderStateMapping } from '../hooks/useKitchenDeck'\nimport { mapOrderItemToCardItem } from '../hooks/useKitchenOrderDeck'\nimport { TKitchenCardCompletion } from '../kitchen.types'\nimport { KitchenCardCompletion } from '../molecules/KitchenCardCompletion'\nimport { useKitchenCompletion } from './KitchenCompletionLoader'\n\ntype TProps = NoChildren & {\n  category: OrderStateCategoryEnum\n  noOrdersMessage: ReactNode\n  mobileHeadline: ReactNode\n}\n\nexport const KitchenCompletionShelf = observer<TProps>(\n  ({ category, noOrdersMessage, mobileHeadline }) => {\n    const { order: orderModel } = useRoot()\n    const branches = useBranchesFilter(false)\n    const orders = useKitchenCompletion()\n\n    if (branches.length === 0) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Select a branch</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (orders === null) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Loading</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    const cards = orders\n      .filter(RM.propEq('orderStateCategory', category))\n      .map(mapOrderToKitchenCard)\n\n    if (cards.length === 0) {\n      return <KitchenInfoMessage>{noOrdersMessage}</KitchenInfoMessage>\n    }\n\n    const shouldPlayNotification = category === OrderStateCategoryEnum.NewOrders\n\n    return (\n      <>\n        {mobileHeadline && (\n          <Mobile>\n            <CardListTitle>{mobileHeadline}</CardListTitle>\n          </Mobile>\n        )}\n        <div data-testid={`order-list-${category}`}>\n          {cards.map(card => (\n            <KitchenCardCompletion\n              key={card.id}\n              card={card}\n              showBranch={orderModel.list.branchesFilter.length > 1}\n            />\n          ))}\n        </div>\n        <OrderNotificationSound shouldPlay={shouldPlayNotification} playNow />\n      </>\n    )\n  },\n)\n\nfunction mapOrderToKitchenCard(\n  order: FKitchenCompletionOrderFragment,\n): TKitchenCardCompletion {\n  return {\n    ...order,\n    type: 'completion',\n    state: kitchenOrderStateMapping[order.orderStateCategory]!,\n    time: order.deliverAt || order.createdAt,\n    items: order.items.map(mapOrderItemToCardItem),\n  }\n}\n","import {\n  FKitchenSectorRecipeFragment,\n  OrderRecipeStateEnum,\n  QKitchenSectorListQuery,\n  QKitchenSectorListSectors,\n  SKitchenSectorListSubscription,\n  useQKitchenSectorList,\n  useSKitchenSectorList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { RM } from '../../../tools/ramda'\nimport {\n  TKitchenCardItem,\n  TKitchenCardState,\n  TKitchenDeck,\n  TKitchenDeckInput,\n} from '../kitchen.types'\nimport { kitchenRecipeStateMapping } from './useKitchenDeck'\n\nconst requiredStates = Object.keys(\n  kitchenRecipeStateMapping,\n) as OrderRecipeStateEnum[]\n\nexport function useKitchenSectorDeck({ branches, sectors }: TKitchenDeckInput) {\n  const skip = branches.length === 0\n\n  const variables = {\n    branches,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQKitchenSectorList(\n    {\n      ...variables,\n      states: requiredStates,\n    },\n    { skip },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenSectorList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      states: requiredStates.concat(\n        OrderRecipeStateEnum.Finished,\n        OrderRecipeStateEnum.Canceled,\n      ),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data =>\n    normalizeToKitchenDeck(data.sectorRecipes, data.sectors),\n  )\n}\n\nfunction normalizeToKitchenDeck(\n  sectorRecipes: RoA<FKitchenSectorRecipeFragment>,\n  sectors: RoA<QKitchenSectorListSectors>,\n) {\n  const makeKey = (sectorId: ID, state: TKitchenCardState) =>\n    `${sectorId}-${state}`\n\n  const initialState = (RM.mapObjIndexed(\n    () => [],\n    RM.invertObj(kitchenRecipeStateMapping),\n  ) as unknown) as TKitchenDeck\n\n  const groupedBySectorAndState = RM.groupBy(\n    ({ sector, state }) =>\n      makeKey(sector.id, kitchenRecipeStateMapping[state.enum]!),\n    sectorRecipes,\n  )\n\n  const sortByTime = RM.sortBy(RM.prop('createdAt'))\n\n  return sectors.reduce((acc, sector) => {\n    return RM.mapObjIndexed((cards, state) => {\n      const key = makeKey(sector.id, state as TKitchenCardState)\n      const relatedSectorRecipes = groupedBySectorAndState[key]\n      if (relatedSectorRecipes) {\n        const sortedRecipes = sortByTime(relatedSectorRecipes)\n        const items = sortedRecipes.map(\n          (sectorRecipe): TKitchenCardItem => ({\n            id: sectorRecipe.id,\n            code: sectorRecipe.recipe.code,\n            name: sectorRecipe.recipe.name,\n            state: kitchenRecipeStateMapping[sectorRecipe.state.enum]!,\n            isReady: [\n              OrderRecipeStateEnum.Ready,\n              OrderRecipeStateEnum.Cooked,\n            ].includes(sectorRecipe.state.enum),\n            sideDishes: sectorRecipe.sideDishes.map(RM.prop('recipe')),\n          }),\n        )\n        return cards.concat({\n          id: sector.id,\n          type: 'sector',\n          name: sector.name,\n          time: sortedRecipes[0].createdAt,\n          state: state as TKitchenCardState,\n          isPriority: false,\n          items,\n        })\n      }\n      return cards\n    }, acc) as TKitchenDeck\n  }, initialState)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenSectorListSubscription,\n  prev: QKitchenSectorListQuery,\n): QKitchenSectorListQuery {\n  const { sectorRecipe } = update.updatedSectorRecipe\n  if (!sectorRecipe || !prev.sectorRecipes) {\n    return prev\n  }\n  if (!requiredStates.includes(sectorRecipe.state.enum)) {\n    return {\n      ...prev,\n      sectorRecipes: prev.sectorRecipes.filter(s => s.id !== sectorRecipe.id),\n    }\n  }\n  let exists = false\n  const sectorRecipes = prev.sectorRecipes.map(s => {\n    if (s.id === sectorRecipe.id) {\n      exists = true\n      return sectorRecipe\n    }\n    return s\n  })\n  if (!exists) {\n    sectorRecipes.unshift(sectorRecipe)\n  }\n  return { ...prev, sectorRecipes }\n}\n","import { XForm } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { RM } from '../../../tools/ramda'\nimport { useKitchenFilterForm } from '../hooks/useKitchenFilterForm'\nimport { useKitchenOrderDeck } from '../hooks/useKitchenOrderDeck'\nimport { useKitchenSectorDeck } from '../hooks/useKitchenSectorDeck'\nimport { TKitchenCard, TKitchenCardState, TKitchenDeck } from '../kitchen.types'\n\nconst sortCards = RM.sortWith<TKitchenCard>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.prop('time')),\n])\n\nconst kitchenContext = React.createContext<TKitchenDeck | null>(null)\n\nexport const KitchenLoader = observer<SomeChildren>(({ children }) => {\n  const [filters, onFilterSubmit] = useKitchenFilterForm()\n\n  const orderDeck = useKitchenOrderDeck(filters)\n  const sectorDeck = useKitchenSectorDeck(filters)\n\n  const kitchenDeck =\n    orderDeck &&\n    sectorDeck &&\n    RM.mergeDeepWith(RM.concat, orderDeck, sectorDeck)\n\n  const sortedKitchenDeck =\n    kitchenDeck && (RM.mapObjIndexed(sortCards, kitchenDeck) as TKitchenDeck)\n\n  return (\n    <XForm initialValues={filters} onSubmit={onFilterSubmit}>\n      <kitchenContext.Provider value={sortedKitchenDeck}>\n        {children}\n      </kitchenContext.Provider>\n    </XForm>\n  )\n})\n\nexport function useKitchenDeck(state: TKitchenCardState) {\n  const kitchenDeck = React.useContext(kitchenContext)\n  return kitchenDeck && kitchenDeck[state]\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ntype TProps = NoChildren & {\n  deliverTime: Maybe<Date>\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<TProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { TKitchenCardOrder, TKitchenCardProps } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ntype TProps = NoChildren &\n  TKitchenCardProps<TKitchenCardOrder> & {\n    card: TKitchenCardOrder\n  }\n\nconst StyledKitchenCardOrder = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n\n  .order-ticker {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    padding: 0.2rem;\n    color: ${Colors.greyMiddle};\n  }\n\n  .details {\n    padding: 0 0.2rem 0.1rem 0.2rem;\n    position: relative;\n  }\n\n  .delivery-time-badge-container {\n    flex: 0 0 1.8rem;\n  }\n\n  .address-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .customer-identity-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .pickup-label {\n    font-style: italic;\n  }\n`\n\nexport const KitchenCardOrder: React.FC<TProps> = ({\n  card,\n  onHandle,\n  onHandleRecipe,\n  canHandle,\n  canHandleRecipe,\n}) => {\n  const getOrderDestination = () => {\n    if (card.sector !== null) {\n      return card.sector.name\n    }\n    if (\n      card.deliveryType &&\n      card.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <div className=\"pickup-label\">\n          <Trans>To pickup</Trans>\n        </div>\n      )\n    }\n    return formatAddress(card.address)\n  }\n\n  return (\n    <StyledKitchenCardOrder>\n      <div className=\"order-ticker\">\n        <div className=\"delivery-time-badge-container\">\n          <DeliveryTimeBadge\n            deliverAt={card.deliverAt ? new Date(card.deliverAt) : null}\n            deliveredAt={card.deliveredAt ? new Date(card.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={card.delayedDeliveryTime !== null}\n          />\n        </div>\n\n        <div className=\"address-container\">{getOrderDestination()}</div>\n\n        <div className=\"customer-identity-container\">\n          <CustomerIdentity customer={card.customer} />\n          <br />\n          {card.customer && card.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${card.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {card.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </div>\n      </div>\n\n      <div className=\"details\">\n        <HorizontalSeparator />\n        {card.isPriority && <KitchenOrderStarIndicator />}\n        <KitchenCardItems\n          items={card.items}\n          canHandle={canHandleRecipe}\n          onHandle={item => onHandleRecipe(card, item)}\n        />\n        <HorizontalSeparator />\n        <KitchenOrderAtSummary\n          deliverTime={card.deliverAt}\n          deliverType={\n            card.deliveryType &&\n            card.deliveryType.enum === DeliveryTypeEnum.Pickup\n              ? 'PERSONAL'\n              : 'DELIVER_UNTIL'\n          }\n        />\n        <NoteLine note={card.note} />\n        {canHandle && (\n          <CardDock position=\"BottomRight\">\n            <KitchenCardButton onClick={() => onHandle(card)} />\n          </CardDock>\n        )}\n      </div>\n    </StyledKitchenCardOrder>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { TKitchenCardProps, TKitchenCardSector } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\n\ntype TProps = NoChildren &\n  TKitchenCardProps<TKitchenCardSector> & {\n    card: TKitchenCardSector\n  }\n\nconst StyledKitchenCardSector = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n\n  .details {\n    padding: 0 0.2rem 0.1rem 0.2rem;\n    position: relative;\n  }\n\n  .sector-name {\n    padding: 0.3rem 0 0.3rem 2.5rem;\n    font-size: 1.1rem;\n  }\n`\n\nexport const KitchenCardSector: React.FC<TProps> = ({\n  card,\n  canHandle,\n  canHandleRecipe,\n  onHandle,\n  onHandleRecipe,\n}) => {\n  return (\n    <StyledKitchenCardSector>\n      <div className=\"sector-name\">{card.name}</div>\n\n      <div className=\"details\">\n        <HorizontalSeparator />\n        <KitchenCardItems\n          items={card.items}\n          canHandle={canHandleRecipe}\n          onHandle={item => onHandleRecipe(card, item)}\n        />\n        {canHandle && (\n          <>\n            <HorizontalSeparator />\n            <CardDock position=\"BottomRight\">\n              <KitchenCardButton\n                color={card.state === 'todo' ? Colors.green : Colors.pink}\n                onClick={() => onHandle(card)}\n              />\n            </CardDock>\n          </>\n        )}\n      </div>\n    </StyledKitchenCardSector>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Mobile } from '../../../app/Responsive'\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { useKitchenHandler } from '../hooks/useKitchenHandler'\nimport { TKitchenCardState } from '../kitchen.types'\nimport { KitchenCardOrder } from '../molecules/KitchenCardOrder'\nimport { KitchenCardSector } from '../molecules/KitchenCardSector'\nimport { useKitchenDeck } from './KitchenLoader'\n\ntype TProps = NoChildren & {\n  state: TKitchenCardState\n  noCardsMessage: ReactNode\n  mobileHeadline?: ReactNode\n}\n\nexport const KitchenShelf = observer<TProps>(\n  ({ state, noCardsMessage, mobileHeadline }) => {\n    const shelfCards = useKitchenDeck(state)\n    const branches = useBranchesFilter(false)\n    const handler = useKitchenHandler()\n\n    if (branches.length === 0) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Select a branch</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (shelfCards === null) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Loading</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (shelfCards.length === 0) {\n      return <KitchenInfoMessage>{noCardsMessage}</KitchenInfoMessage>\n    }\n\n    const shouldPlayNotification = state === 'todo'\n\n    return (\n      <>\n        {mobileHeadline && (\n          <Mobile>\n            <CardListTitle>{mobileHeadline}</CardListTitle>\n          </Mobile>\n        )}\n        <OrderNotificationSound shouldPlay={shouldPlayNotification} playNow />\n        {shelfCards.map(card => {\n          const commonProps = {\n            key: `${card.type}-${card.id}`,\n            canHandle: handler.canHandleCard(card),\n            canHandleRecipe: handler.canHandleCardItem(card),\n            onHandle: handler.handleCard,\n            onHandleRecipe: handler.handleCardItem,\n          }\n          if (card.type === 'order') {\n            return <KitchenCardOrder card={card} {...commonProps} />\n          }\n          if (card.type === 'sector') {\n            return <KitchenCardSector card={card} {...commonProps} />\n          }\n          return null\n        })}\n      </>\n    )\n  },\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { BranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { Colors } from '../../../styling'\nimport { KitchenFilters } from '../molecules/KitchenFilters'\nimport { KitchenLoader } from '../organisms/KitchenLoader'\nimport { KitchenShelf } from '../organisms/KitchenShelf'\n\nexport const StyledKitchenFilterContainer = styled.div`\n  position: absolute;\n  left: 16rem;\n  top: 0.4rem;\n  width: calc(100vw - 36rem);\n  z-index: 120;\n`\n\nexport const KitchenCategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  left: -5px;\n  top: 0rem;\n`\n\nexport const KitchenOverviewPage: React.FC<NoChildren> = () => (\n  <KitchenLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      showSoundControl={true}\n      topContent={<KitchenFilters />}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <BranchesFilter />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <BranchesFilter />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenShelf\n          state=\"todo\"\n          noCardsMessage={<Trans>No new orders</Trans>}\n          mobileHeadline={<Trans>New orders</Trans>}\n        />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenShelf\n          state=\"progress\"\n          noCardsMessage={<Trans>No orders to prepare</Trans>}\n          mobileHeadline={<Trans>Orders to prepare</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenShelf\n          state=\"done\"\n          noCardsMessage={<Trans>No orders to deliver</Trans>}\n          mobileHeadline={<Trans>Orders to deliver</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenLoader>\n)\n\nexport default KitchenOverviewPage\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { BranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { KitchenFilters } from '../molecules/KitchenFilters'\nimport { KitchenCompletionLoader } from '../organisms/KitchenCompletionLoader'\nimport { KitchenCompletionShelf } from '../organisms/KitchenCompletionShelf'\nimport {\n  KitchenCategorySeparator,\n  StyledKitchenFilterContainer,\n} from './KitchenOverviewPage'\n\nexport const KitchenCompletionPage: React.FC<NoChildren> = () => (\n  <KitchenCompletionLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Completion`}\n      useBackButton={true}\n      showSoundControl={true}\n      topContent={<KitchenFilters />}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <BranchesFilter />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <BranchesFilter />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.NewOrders}\n          noOrdersMessage={<Trans>No new orders</Trans>}\n          mobileHeadline={<Trans>New orders</Trans>}\n        />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.Preparing}\n          noOrdersMessage={<Trans>No orders to complete</Trans>}\n          mobileHeadline={<Trans>Orders to complete</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.ReadyToDeliver}\n          noOrdersMessage={<Trans>No orders to hand over</Trans>}\n          mobileHeadline={<Trans>Orders to hand over</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenCompletionLoader>\n)\n\nexport default KitchenCompletionPage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ROUTE_KITCHEN, ROUTE_KITCHEN_COMPLETION } from '../kitchen.routes'\nimport { KitchenCompletionPage } from '../pages/KitchenCompletionPage'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps {}\n\nexport const KitchenRouting: React.FC<IProps> = () => {\n  return (\n    <Switch>\n      <SecureRoute exact path={ROUTE_KITCHEN} component={KitchenOverviewPage} />\n      <SecureRoute\n        path={ROUTE_KITCHEN_COMPLETION}\n        component={KitchenCompletionPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default KitchenRouting\n"],"sourceRoot":""}