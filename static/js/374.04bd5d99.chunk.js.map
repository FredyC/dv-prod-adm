{"version":3,"sources":["helpers/form.ts","../node_modules/@material-ui/icons/esm/Error.js","atoms/IconLine.tsx","hooks/useAccessGuard.ts","atoms/SelectControl.tsx","components/filters/BranchesFilter.tsx","atoms/ScrollArea.tsx","molecules/PageLayoutFullHeightItem.tsx","hooks/useUserModel.ts","hooks/useDropdownFilter.ts","atoms/HorizontalSeparator.tsx","atoms/VerticalGap.tsx","atoms/Printer.tsx","atoms/FormGrid.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","hooks/useOnConnectionRestored.ts","hooks/useDropdownMulti.ts","components/forms/FormDropdownMulti.tsx","atoms/CardDock.tsx","atoms/TimeBadge.tsx","atoms/LinkStyled.tsx","atoms/CardListTitle.tsx","../node_modules/@material-ui/icons/esm/CancelOutlined.js","segments/order/atoms/DeliveryTimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/NoteLine.tsx","components/filters/SectorsFilter.tsx","../node_modules/@material-ui/core/esm/Popover/Popover.js","assets/orderNotification.mp3","components/filters/OccasionsFilter.tsx","../node_modules/@material-ui/icons/esm/AccessTime.js","../node_modules/@material-ui/icons/esm/Note.js","../node_modules/@material-ui/icons/esm/Star.js","../node_modules/@material-ui/icons/esm/Close.js","components/icons/createSvgIcon.tsx","components/icons/FilterDisable.tsx","components/icons/FilterEnable.tsx","segments/kitchen/molecules/KitchenFilters.tsx","segments/kitchen/hooks/useKitchenCompletionDeck.ts","segments/kitchen/hooks/useKitchenFilterForm.ts","segments/kitchen/organisms/KitchenCompletionLoader.tsx","molecules/OrderNotificationSound.tsx","segments/kitchen/atoms/KitchenInfoMessage.tsx","segments/kitchen/hooks/useKitchenDeck.ts","segments/kitchen/hooks/useKitchenOrderDeck.ts","../node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","segments/kitchen/atoms/KitchenCardButton.tsx","segments/kitchen/hooks/useKitchenHandler.ts","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenCardItem.tsx","segments/kitchen/molecules/KitchenCardItems.tsx","segments/kitchen/molecules/KitchenOrderStarIndicator.tsx","segments/kitchen/molecules/KitchenCardCompletion.tsx","segments/kitchen/organisms/KitchenCompletionShelf.tsx","segments/kitchen/hooks/useKitchenSectorDeck.ts","segments/kitchen/organisms/KitchenLoader.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/molecules/KitchenCardOrder.tsx","segments/kitchen/molecules/KitchenCardSector.tsx","segments/kitchen/organisms/KitchenShelf.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/pages/KitchenCompletionPage.tsx","segments/kitchen/routes/KitchenRouting.tsx"],"names":["isFormValid","formState","errors","Object","keys","length","fieldIsRequiredMsg","fieldDescription","fieldIsPositiveNumberMsg","validateAsNumberField","yup","number","default","transform","_","origValue","parseNumber","test","fieldIsNumberMsg","value","isNaN","ARRAY_EMPTY","createSvgIcon","React","createElement","d","StyledIconLine","styled","div","labelMargin","labelWidth","labelWidthUnits","StyledGridDescription","mediaMobile","replace","StyledGridContent","IconLine","icon","label","Spacing","DefaultSizeUnit","labelSmallCaps","children","iconComponent","logError","Error","isInFormGrid","useFormGridCheck","descriptionPart","Icon","color","Colors","greyDark","className","cn","smallCaps","useAccessGuard","queries","mutations","user","useRoot","every","canQuery","canMutate","useCanQuery","useCanMutate","getControlStyles","width","minWidth","colors","invalid","border","red","backgroundColor","errorBackground","greyMiddle","margin","MarginAroundFormComponents","undefined","composeSelectControlStyles","outerStyles","control","base","state","controlStyles","selectProps","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","clearIndicator","cursor","SelectControl","hideOnSingleOption","props","options","toPrint","formatWith","getOptionLabel","formatOptionLabel","valueText","Array","isArray","map","placeholder","getPrintContent","components","ClearIndicator","styles","getStyles","innerProps","ref","restInnerProps","style","padding","useBranchesFilterEditable","createStatePersistence","BranchesFilter","memo","userModel","useUserModel","branches","setBranches","formatBranchName","getOptionValue","idProp","dropdownProps","useDropdownMulti","onSelectionChange","selected","filterProps","useDropdownFilter","getOptionFilter","useBranchesFilter","withUserBranchesWhenEmpty","persistedBranches","setPersistedBranches","persistenceKey","join","selectedBranches","useMemo","RM","intersection","branchesId","hasPersistedBranches","hasAccessToAllPersistedBranches","useEffect","noBranchSelected","key","ScrollArea","StyledPageLayoutFullHeightItem","mediaDesktop","widthInColumns","LayoutGridCellMargin","column","row","rowInMobile","forcePercentHeightInMobile","PageHeaderHeight","PageLayoutFullHeightItem","withScrollArea","scrollAreaId","forceHeightInMobile","isMobile","useResponsive","id","Sizer","height","heightUnit","isSearchable","filterOption","useCallback","option","rawInput","data","toLocaleLowerCase","includes","HorizontalSeparatorStyled","greyLight","HorizontalSeparator","visible","VerticalGap","size","sizeUnit","displayName","StyledPrinter","Printer","StyledFormGrid","formGridCounter","formGridContext","createContext","FormGrid","Provider","useContext","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","resolve","module","exports","useOnConnectionRestored","cb","useDisposable","whenGoingOnline","filter","onChange","isMulti","FormDropdownMulti","fieldName","useXFormState","field","useXField","useObserver","setValue","onFocus","setTouched","touched","hasError","isDisabled","isSubmitting","CardDock","position","ETimeBadgeVariant","StyledTimeBadge","white","variants","UNKNOWN","CRITICAL","WARNING","orange","NORMAL","green","bigNumberStyle","css","dashStyle","clickable","TimeBadge","forwardRef","minutes","variant","onClick","Variant","output","extraClassNames","push","toString","cx","heartBeat","pulse","LinkStyled","a","CardListTitle","h2","Fragment","fill","opacity","cancelIconPadding","StyledDelayedTimeMark","DeliveryTimeBadge","deliverAt","deliveredAt","isCancelled","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","CancelOutlined","role","aria-label","differenceInMinutes","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","StyledCurrentNote","span","NoteLine","note","Note","DropdownTreeSelectMemo","texts","SectorsFilter","markAsAvailable","hasSingleBranch","sectors","getStash","useQFilterSectors","hasAnySectors","treeData","getTreeFromFlatData","flatData","mapper","node","name","getParentKey","parent","getKey","buildForSingleBranch","sectorsPerBranch","groupBy","sector","companyBranch","branch","isSector","branchKey","buildWithBranches","currentNode","selectedNodes","selectedSectorsId","reduce","acc","startsWith","isBranchNode","branchNode","find","idPropEq","noMatches","branchId","childrenToParents","forEach","child","parentKey","trav","Reflect","has","getOffsetTop","rect","vertical","offset","getOffsetLeft","horizontal","getTransformOriginValue","transformOrigin","n","concat","getAnchorEl","anchorEl","Popover","action","_props$anchorOrigin","anchorOrigin","anchorPosition","_props$anchorReferenc","anchorReference","classes","containerProp","container","_props$elevation","elevation","getContentAnchorEl","_props$marginThreshol","marginThreshold","onEnter","onEntered","onEntering","onExit","onExited","onExiting","open","_props$PaperProps","PaperProps","_props$transformOrigi","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","transitionDurationProp","_props$TransitionProp","TransitionProps","other","_objectWithoutProperties","paperRef","useRef","getAnchorOffset","contentAnchorOffset","resolvedAnchorEl","anchorRect","ownerWindow","Element","ownerDocument","current","body","getBoundingClientRect","anchorVertical","top","left","getContentAnchorOffset","element","contentAnchorEl","contains","scrollTop","parentElement","getScrollParent","offsetTop","clientHeight","process","getTransformOrigin","elemRect","arguments","getPositioningStyle","offsetWidth","offsetHeight","elemTransformOrigin","anchorOffset","bottom","right","containerWindow","heightThreshold","innerHeight","widthThreshold","innerWidth","diff","_diff","_diff2","_diff3","setPositioningStyles","positioning","handlePaperRef","instance","ReactDOM","findDOMNode","updatePosition","debounce","useImperativeHandle","window","addEventListener","removeEventListener","clear","muiSupportAuto","Modal","_extends","BackdropProps","invisible","clsx","root","appear","in","timeout","createChainedFunction","isAppearing","Paper","paper","withStyles","overflowX","minHeight","maxWidth","outline","OccasionsFilter","useQFilterOccasions","loading","occasions","hasAnyOccasions","noOptionsMessage","isLoading","prop","path","SvgIcon","data-mui-test","FilterDisable","FilterEnable","StyledPopup","KitchenFilters","xform","useXFormCtx","buttonRef","store","useLocalStore","isOpen","setOpen","this","setClosed","sectorsAvailable","markSectorsAvailable","available","occassionsAvailable","markOccasionsAvailable","values","wasSubmitted","SizerButton","TouchButton","isActive","iconSize","disabled","isEnabled","keepMounted","onClose","ev","reason","api","submitForm","Card","Close","fontSize","ButtonHeight","text","i18n","requiredCategories","OrderStateCategoryEnum","NewOrders","Preparing","ReadyToDeliver","sortForCompletion","sortWith","descend","ascend","either","useKitchenCompletionDeck","skip","variables","useQKitchenCompletionOrderList","categories","updateQuery","refetch","useSKitchenCompletionOrderList","Finished","onSubscriptionData","dataUpdate","subscriptionData","prev","update","order","updatedOrder","orders","orderStateCategory","orderExists","unshift","handleSubscriptionUpdate","useKitchenFilterForm","useState","filters","setFilters","onFilterSubmit","toJS","loaderContext","KitchenCompletionLoader","observer","deck","initialValues","onSubmit","OrderNotificationSound","shouldPlay","playNow","config","useIntervalSound","soundUrl","orderNotificationSound","intervalSec","orderListSoundIntervalSec","forcePlayNow","KitchenInfoMessage","kitchenRecipeStateMapping","OrderRecipeStateEnum","Fresh","Ready","Cooked","kitchenOrderStateMapping","useKitchenOrderDeck","useQKitchenOrderList","useSKitchenOrderList","cards","mapOrderToKitchenCard","normalizeToKitchenDeck","type","time","createdAt","items","mapOrderItemToCardItem","orderItem","recipe","enum","isReady","sideDishes","sidedishes","KitchenCardButton","KeyboardArrowRight","useKitchenHandler","canHandleOrder","canHandleOrderRecipe","canHandleSector","canHandleSectorRecipe","useMKitchenOrderHandle","handleOrder","useMKitchenOrderRecipeHandle","handleOrderRecipe","useMKitchenSectorHandle","handleSector","useMKitchenSectorRecipeHandle","handleSectorRecipe","canHandleCard","card","canHandleCardItem","handleCard","async","orderId","OrderStateEnum","InProduce","sectorId","Accepted","handleCardItem","item","nextItemState","getItemToggledState","orderRecipeId","sectorRecipeId","propEq","Circle","Small","CheckedInner","TouchCheckButton","isChecked","firstSideDishStyle","StyledKitchenCardItem","isFirstSidedish","FontSizes","CompactCardBig","KitchenCardItem","canHandle","onHandle","KitchenCardItems","sideDish","idx","StyledKitchenOrderStarIndicator","KitchenOrderStarIndicator","data-testid","Star","StyledKitchenCardCompletion","CompactCard","greyDarkest","Radiuses","Middle","KitchenCardCompletion","showBranch","handler","orderNumber","orderOrigin","cashBox","isPriority","KitchenCompletionShelf","category","noOrdersMessage","mobileHeadline","shouldPlayNotification","requiredStates","useKitchenSectorDeck","useQKitchenSectorList","states","useSKitchenSectorList","Canceled","sectorRecipe","updatedSectorRecipe","sectorRecipes","s","exists","makeKey","initialState","mapObjIndexed","invertObj","groupedBySectorAndState","sortByTime","sortBy","relatedSectorRecipes","sortedRecipes","sortCards","kitchenContext","KitchenLoader","orderDeck","sectorDeck","kitchenDeck","mergeDeepWith","sortedKitchenDeck","Label","DeliveryTime","DeliverLabel","deliverType","KitchenOrderAtSummary","deliverTime","AccessTime","formatTimeWithoutTodayDate","StyledKitchenCardOrder","KitchenCardOrder","onHandleRecipe","canHandleRecipe","Date","delayedDeliveryTime","deliveryType","DeliveryTypeEnum","Pickup","formatAddress","address","href","StyledKitchenCardSector","KitchenCardSector","pink","KitchenShelf","noCardsMessage","shelfCards","useKitchenDeck","commonProps","StyledKitchenFilterContainer","KitchenCategorySeparator","KitchenOverviewPage","PageLayoutResponsive","pageTitle","useBackButton","showSoundControl","topContent","PageLayoutGridItem","gridRowInMobile","KitchenCompletionPage","KitchenRouting","SecureRoute","exact","ROUTE_KITCHEN","component","ROUTE_KITCHEN_COMPLETION","NotFoundPage"],"mappings":"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","file":"static/js/374.04bd5d99.chunk.js","sourcesContent":["import { yup } from '@speedlo/xform'\nimport { IFormState } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { parseNumber } from './numeral'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function fieldIsRequiredMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} cannot be empty`\n}\n\nexport function fieldIsNumberMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} must be a number`\n}\n\nexport function fieldIsPositiveNumberMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} must be a positive number`\n}\n\nexport const validateAsNumberField = (fieldDescription: string) =>\n  yup\n    .number()\n    .default(0)\n    .transform((_, origValue) => parseNumber(origValue))\n    .test(\n      'number-field',\n      fieldIsNumberMsg(fieldDescription),\n      value => !isNaN(value),\n    )\n\nexport const ARRAY_EMPTY: RoA<any> = []\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');","import { Error, SvgIconComponent } from '@material-ui/icons'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../app/Responsive'\nimport { logError } from '../helpers/logger'\nimport { Colors, Spacing } from '../styling'\nimport { useFormGridCheck } from './FormGrid'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: SvgIconComponent\n  label?: string | ReactNode\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  labelSmallCaps?: boolean\n  className?: string\n}\n\nconst StyledIconLine = styled.div<IProps>`\n  display: flex;\n\n  div.description {\n    margin: ${({ labelMargin }) => labelMargin};\n    min-width: ${({ labelWidth, labelWidthUnits }) =>\n      `${labelWidth}${labelWidthUnits}`};\n    flex: 0 0 auto;\n    text-align: right;\n  }\n\n  div.contents {\n    margin-left: 0.5rem;\n    align-self: stretch;\n    flex: 1 1 auto;\n  }\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n`\n\nconst StyledGridDescription = styled.div<IProps>`\n  grid-column: desc;\n  margin: ${({ labelMargin }) => labelMargin};\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n\n  ${mediaMobile`\n  grid-column: content;\n  justify-self: start;\n  margin: ${({ labelMargin }) => labelMargin.replace('auto', '0.7rem')};\n  `};\n`\n\nconst StyledGridContent = styled.div<IProps>`\n  grid-column: content;\n  margin-left: 0.5rem;\n`\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n  labelMargin = '0.5rem 0.2rem 0 auto',\n  labelSmallCaps = true,\n  children,\n}) => {\n  let iconComponent = icon\n  if (typeof icon === 'string') {\n    logError(\n      `IconLine: Do not use icon prop as string! Replace \"${icon}\" with the one imported from @material-ui/icons.`,\n    )\n    iconComponent = Error\n  }\n  const isInFormGrid = useFormGridCheck()\n\n  const descriptionPart = (\n    <>\n      <Icon icon={iconComponent} color={Colors.greyDark} />\n      {label ? (\n        <div className={cn('label', { smallCaps: labelSmallCaps })}>\n          {label}\n        </div>\n      ) : null}\n    </>\n  )\n\n  return isInFormGrid ? (\n    <>\n      <StyledGridDescription labelMargin={labelMargin}>\n        {descriptionPart}\n      </StyledGridDescription>\n      <StyledGridContent>{children}</StyledGridContent>\n    </>\n  ) : (\n    <StyledIconLine\n      labelWidth={labelWidth}\n      labelWidthUnits={labelWidthUnits}\n      labelMargin={labelMargin}\n    >\n      <div className=\"description\">{descriptionPart}</div>\n      <div className=\"contents\">{children}</div>\n    </StyledIconLine>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/src/Select'\nimport { StylesConfig } from 'react-select/src/styles'\n\nimport { Colors, Spacing } from '../styling'\nimport { Printer } from './Printer'\n\nexport type TSelectControlProps<OptionType> = NoChildren &\n  Props<OptionType> & {\n    width?: number\n    minWidth?: number\n    maxHeight?: number\n    invalid?: boolean\n    hideOnSingleOption?: boolean\n  }\n\ntype TStyledProps = TSelectControlProps<unknown> & {\n  printing: boolean\n}\n\nfunction getControlStyles({ width, minWidth, invalid }: TStyledProps) {\n  const colors =\n    invalid === true\n      ? {\n          border: `1px solid ${Colors.red}`,\n          backgroundColor: Colors.errorBackground,\n        }\n      : {\n          border: `1px solid ${Colors.greyMiddle}`,\n        }\n  return {\n    ...colors,\n    margin: Spacing.MarginAroundFormComponents,\n    width: width !== undefined ? `${width}rem` : '100%',\n    minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n  }\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const controlStyles = { ...base, ...getControlStyles(state.selectProps) }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n  clearIndicator: base => ({\n    ...base,\n    cursor: 'pointer',\n  }),\n})\n\nexport function SelectControl<OptionType>({\n  hideOnSingleOption = false,\n  ...props\n}: TSelectControlProps<OptionType>) {\n  const getPrintContent = () => {\n    if (!props.value) {\n      return null\n    }\n    const formatWith: any = props.getOptionLabel || props.formatOptionLabel\n    if (!formatWith) {\n      return null\n    }\n    const valueText = Array.isArray(props.value)\n      ? props.value.map(formatWith)\n      : formatWith(props.value as OptionType)\n    return valueText.length === 0 ? null : (\n      <div>{`${props.placeholder}: ${valueText}`}</div>\n    )\n  }\n\n  if (hideOnSingleOption && props.options && props.options.length <= 1) {\n    return null\n  }\n\n  return (\n    <Printer toPrint={getPrintContent()}>\n      <Select<OptionType>\n        {...props}\n        components={{\n          ClearIndicator,\n          ...props.components,\n        }}\n        styles={composeSelectControlStyles(props.styles)}\n      />\n    </Printer>\n  )\n}\n\nfunction ClearIndicator(props) {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n","import { createStatePersistence } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { SelectControl } from '../../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../../graph/generated'\nimport { formatBranchName } from '../../helpers/formats'\nimport { useDropdownFilter } from '../../hooks/useDropdownFilter'\nimport { useDropdownMulti } from '../../hooks/useDropdownMulti'\nimport { useUserModel } from '../../hooks/useUserModel'\nimport { i18n } from '../../i18n'\nimport { idProp, RM } from '../../tools/ramda'\n\nexport const useBranchesFilterEditable = createStatePersistence<RoA<ID>>(\n  'branches',\n  [],\n)\n\nexport const BranchesFilter = React.memo<NoChildren>(() => {\n  const userModel = useUserModel()\n  const [branches, setBranches] = useBranchesFilterEditable()\n\n  const selectProps = {\n    options: userModel.branches,\n    placeholder: i18n.t`Filter branches...`,\n    formatOptionLabel: formatBranchName,\n    getOptionValue: idProp,\n    hideOnSingleOption: true,\n  }\n\n  const dropdownProps = useDropdownMulti<FCompanyBranchFragment>({\n    ...selectProps,\n    onSelectionChange: setBranches,\n    selected: branches,\n  })\n\n  const filterProps = useDropdownFilter<FCompanyBranchFragment>({\n    getOptionFilter: formatBranchName,\n  })\n\n  return (\n    <SelectControl<FCompanyBranchFragment>\n      {...dropdownProps}\n      {...filterProps}\n      {...selectProps}\n    />\n  )\n})\n\n/**\n * Access to currently persisted list of branches for filtering purposes.\n *\n * By default it will use all user branches if none are currently set.\n * This behavior can be disabled with argument.\n *\n * @param withUserBranchesWhenEmpty\n */\nexport function useBranchesFilter(withUserBranchesWhenEmpty = true): ID[] {\n  const userModel = useUserModel()\n  const [persistedBranches, setPersistedBranches] = useBranchesFilterEditable()\n  const persistenceKey = persistedBranches.join('|')\n\n  let selectedBranches = React.useMemo(() => {\n    return RM.intersection(userModel.branchesId, persistedBranches)\n    // persistedBranches reference changes every time -> use persistenceKey to decide whether the persistence truly changed\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [persistenceKey, userModel.branchesId])\n\n  const hasPersistedBranches = persistedBranches.length > 0\n  const hasAccessToAllPersistedBranches =\n    persistedBranches.length === selectedBranches.length\n\n  React.useEffect(() => {\n    if (hasPersistedBranches && !hasAccessToAllPersistedBranches) {\n      setPersistedBranches(selectedBranches)\n    }\n  }, [\n    hasAccessToAllPersistedBranches,\n    hasPersistedBranches,\n    selectedBranches,\n    setPersistedBranches,\n  ])\n\n  const noBranchSelected = selectedBranches.length === 0\n  const userHasOnlyOneBranch = userModel.branchesId.length === 1\n\n  if (userHasOnlyOneBranch || (noBranchSelected && withUserBranchesWhenEmpty)) {\n    selectedBranches = userModel.branchesId\n  }\n\n  const key = selectedBranches.join('|')\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useMemo(() => selectedBranches, [key])\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile, useResponsive } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => {\n  const { isMobile } = useResponsive()\n\n  return (\n    <StyledPageLayoutFullHeightItem\n      column={column}\n      row={row}\n      rowInMobile={rowInMobile}\n      widthInColumns={widthInColumns}\n      withScrollArea={withScrollArea}\n      forcePercentHeightInMobile={forceHeightInMobile}\n    >\n      {withScrollArea && !isMobile ? (\n        <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n      ) : (\n        <Sizer height={100} heightUnit=\"%\">\n          {children}\n        </Sizer>\n      )}\n    </StyledPageLayoutFullHeightItem>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useUserModel() {\n  const { user } = useRoot()\n  return user\n}\n","import React from 'react'\n\ntype TOptions<TSelectOption> = {\n  getOptionFilter?(option: TSelectOption): string\n}\n\nexport function useDropdownFilter<TSelectOption>({\n  getOptionFilter,\n}: TOptions<TSelectOption>) {\n  const isSearchable = typeof getOptionFilter === 'function'\n\n  const filterOption = React.useCallback(\n    (option, rawInput) => {\n      if (!getOptionFilter || rawInput.length === 0) {\n        return true\n      }\n      return getOptionFilter(option.data)\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    },\n    [getOptionFilter],\n  )\n\n  return { filterOption, isSearchable }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype TProps = SomeChildren & {\n  toPrint: ReactNodes\n}\n\nconst StyledPrinter = styled.div`\n  & .toPrint {\n    display: none;\n  }\n  @media print {\n    & .toPrint {\n      display: inline-block;\n    }\n    & .noPrint {\n      display: none;\n    }\n  }\n`\n\nexport const Printer: React.FC<TProps> = props => {\n  return (\n    <StyledPrinter>\n      <div className=\"toPrint\">{props.toPrint}</div>\n      <div className=\"noPrint\">{props.children}</div>\n    </StyledPrinter>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../app/Responsive'\n\nconst StyledFormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 0.1fr [desc] auto [content] 1fr;\n  grid-template-areas: '. desc content';\n  grid-auto-flow: row dense;\n\n  ${mediaMobile`\n    grid-template-columns: 1fr;\n    grid-template-areas:\n      'content';\n  `};\n`\n\ninterface IProps {}\nlet formGridCounter = 0\nconst formGridContext = React.createContext(formGridCounter)\n\nexport const FormGrid: React.FC<IProps> = props => {\n  return (\n    <StyledFormGrid>\n      <formGridContext.Provider value={++formGridCounter}>\n        {props.children}\n      </formGridContext.Provider>\n    </StyledFormGrid>\n  )\n}\n\nexport function useFormGridCheck() {\n  return React.useContext(formGridContext) > 0\n}\n","var map = {\n\t\"./cs.svg\": 1404,\n\t\"./de.svg\": 1405,\n\t\"./en.svg\": 1406,\n\t\"./pl.svg\": 1407,\n\t\"./sk.svg\": 1408\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1403;","var map = {\n\t\"./logo-doveze.svg\": 1410,\n\t\"./logo-gopay.svg\": 1411,\n\t\"./logo-mastercard.svg\": 1412,\n\t\"./logo-visa.svg\": 1413\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1409;","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import React from 'react'\n\nimport { ARRAY_EMPTY } from '../helpers/form'\n\ntype TOptions<TSelectOption> = {\n  options: RoA<TSelectOption> | null\n  selected: RoA<ID>\n  onSelectionChange: (selected: RoA<ID>) => void\n  getOptionValue(option: TSelectOption): string\n}\n\nexport function useDropdownMulti<TSelectOption>({\n  options,\n  selected,\n  onSelectionChange,\n  getOptionValue,\n}: TOptions<TSelectOption>) {\n  const value = React.useMemo(() => {\n    if (!Array.isArray(selected)) {\n      return null\n    }\n    return options === null\n      ? ARRAY_EMPTY\n      : options.filter(option => selected.includes(getOptionValue(option)))\n  }, [selected, options, getOptionValue])\n\n  const onChange = (option: unknown) => {\n    onSelectionChange(\n      option ? (option as TSelectOption[]).map(getOptionValue) : ARRAY_EMPTY,\n    )\n  }\n\n  return { value, onChange, isMulti: true }\n}\n","import { useXField, useXFormState, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectControl, TSelectControlProps } from '../../atoms/SelectControl'\nimport { useDropdownFilter } from '../../hooks/useDropdownFilter'\nimport { useDropdownMulti } from '../../hooks/useDropdownMulti'\nimport { idProp } from '../../tools/ramda'\n\ntype TFormDropdownMultiProps<OptionType> = Omit<\n  TSelectControlProps<OptionType>,\n  'value' | 'onChange' | 'isMulti'\n> & {\n  fieldName: XFieldName\n  options: RoA<OptionType>\n  getOptionFilter?(option: OptionType): string\n}\n\nexport const FormDropdownMulti = <TOption extends any>({\n  fieldName,\n  getOptionValue = idProp as any,\n  getOptionFilter,\n  ...selectProps\n}: TFormDropdownMultiProps<TOption>) => {\n  const formState = useXFormState()\n  const field = useXField<RoA<ID>>(fieldName)\n\n  return useObserver(function useBody() {\n    const filterProps = useDropdownFilter({ getOptionFilter })\n    const dropdownProps = useDropdownMulti({\n      ...selectProps,\n      onSelectionChange: field.setValue,\n      selected: field.value,\n      getOptionValue,\n    })\n\n    return (\n      <SelectControl<TOption>\n        {...dropdownProps}\n        {...filterProps}\n        {...selectProps}\n        onFocus={() => field.setTouched()}\n        invalid={field.touched && field.hasError}\n        isDisabled={formState.isSubmitting}\n        getOptionValue={getOptionValue}\n      />\n    )\n  })\n}\n","import styled from 'styled-components/macro'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nexport const CardDock = styled.div<IProps>`\n  position: absolute;\n  ${({ position }) =>\n    position === 'BottomRight' || position === 'BottomLeft'\n      ? 'bottom: 0'\n      : 'top: 0'};\n  ${({ position }) =>\n    position === 'BottomLeft' || position === 'TopLeft'\n      ? 'left: 0'\n      : 'right: 0'};\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst StyledTimeBadge = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid ${Colors.white};\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(StyledTimeBadge)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(StyledTimeBadge)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(StyledTimeBadge)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(StyledTimeBadge)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  line-height: 1.6rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge = React.forwardRef<HTMLDivElement, ITimeBadgeProps>(\n  ({ minutes, className, children, variant, onClick }, ref) => {\n    const Variant = variants[variant]\n    let output = children\n    const extraClassNames = ['animated']\n    if (minutes !== undefined) {\n      if (minutes > 99 || minutes < -9) {\n        extraClassNames.push(bigNumberStyle)\n      }\n      if (minutes < -99) {\n        output = '‒'\n        extraClassNames.push(dashStyle)\n      } else {\n        output = minutes.toString()\n      }\n    }\n    if (onClick) {\n      extraClassNames.push(clickable)\n    }\n    return (\n      <Variant\n        ref={ref}\n        key={minutes}\n        onClick={onClick}\n        className={cx(\n          className,\n          {\n            heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n            pulse: variant === ETimeBadgeVariant.WARNING,\n          },\n          ...extraClassNames,\n        )}\n      >\n        {output}\n      </Variant>\n    )\n  },\n)\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n  @media print {\n    color: ${Colors.black};\n  }\n`\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\",\n  opacity: \".87\"\n}), React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z\"\n})), 'CancelOutlined');","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst StyledDelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return (\n      <TimeBadge variant={variant}>\n        <span role=\"img\" aria-label=\"Unknown\">\n          ❔\n        </span>\n      </TimeBadge>\n    )\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <StyledDelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n        ? customer.defaultPhone.phone\n        : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Note } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n}\n\nconst StyledCurrentNote = styled.span`\n  color: ${Colors.orange};\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note }) =>\n  note ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon={Note} labelMargin=\"0\">\n        <StyledCurrentNote>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </StyledCurrentNote>\n      </IconLine>\n    </>\n  ) : null\n","import './SectorsFilter.css'\n\nimport { useXField } from '@speedlo/xform'\nimport React from 'react'\nimport DropdownTreeSelect, {\n  DropdownTreeSelectProps,\n  TreeNode,\n} from 'react-dropdown-tree-select'\n\nimport {\n  FCompanyBranchFragment,\n  QFilterSectorsSectors,\n  useQFilterSectors,\n} from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/form'\nimport { useUserModel } from '../../hooks/useUserModel'\nimport { i18n } from '../../i18n'\nimport { idProp, idPropEq, RM } from '../../tools/ramda'\nimport { useBranchesFilter } from './BranchesFilter'\n\nconst DropdownTreeSelectMemo = React.memo<DropdownTreeSelectProps & NoChildren>(\n  ({ texts, data, onChange }) => {\n    // this wrapper is necessary because of the silly implementation of the component\n    // which basically resets the state on each render\n    return <DropdownTreeSelect texts={texts} data={data} onChange={onChange} />\n  },\n)\n\ntype TProps = NoChildren & {\n  markAsAvailable?(isAvailable: boolean): void\n}\n\ntype TSector = QFilterSectorsSectors\ntype TBranch = FCompanyBranchFragment\n\nexport const SectorsFilter = React.memo<TProps>(({ markAsAvailable }) => {\n  const userModel = useUserModel()\n  const branches = useBranchesFilter()\n  const hasSingleBranch = branches.length === 1\n\n  const { getStash } = useQFilterSectors({\n    branches,\n  })\n  const sectors = getStash(data => data.sectors)\n  const hasAnySectors = sectors !== null && sectors.length > 0\n\n  const treeData = React.useMemo(() => {\n    if (sectors === null) {\n      return null\n    }\n    if (hasSingleBranch) {\n      return buildForSingleBranch(sectors)\n    }\n    return buildWithBranches(\n      sectors,\n      userModel.branches.filter(branch => branches.includes(branch.id)),\n    )\n  }, [branches, hasSingleBranch, sectors, userModel])\n\n  const field = useXField<RoA<ID>>('sectors')\n\n  React.useEffect(() => {\n    if (markAsAvailable) {\n      markAsAvailable(hasAnySectors)\n    }\n  }, [hasAnySectors, markAsAvailable])\n\n  const onChange = React.useCallback(\n    (currentNode: TreeNode, selectedNodes: TreeNode[]) => {\n      const selectedSectorsId = selectedNodes.reduce(\n        (acc, node) => {\n          if (isBranchNode(node)) {\n            // with branch selected, its root sectors needs to be used\n            // in the filter instead\n            const branchNode = treeData!.find(idPropEq(node.value))\n            if (branchNode && branchNode.children) {\n              acc.push(...(branchNode.children as RoA<TSector>).map(idProp))\n            }\n          } else {\n            acc.push(node.value)\n          }\n          return acc\n        },\n        [] as ID[],\n      )\n      field.setValue(selectedSectorsId)\n    },\n    [field, treeData],\n  )\n\n  const texts = React.useMemo(\n    () => ({\n      placeholder: i18n.t`Filter by sectors`,\n      noMatches: i18n.t`No sectors`,\n    }),\n    [],\n  )\n\n  if (!hasAnySectors) {\n    return null\n  }\n\n  return (\n    <DropdownTreeSelectMemo\n      texts={texts}\n      data={treeData!}\n      onChange={onChange}\n    />\n  )\n})\n\nfunction buildForSingleBranch(sectors: RoA<TSector>) {\n  return getTreeFromFlatData({\n    flatData: sectors,\n    mapper: node => ({\n      label: node.name,\n      value: node.id,\n    }),\n    getParentKey(node) {\n      return node.parent ? node.parent.id : null\n    },\n    getKey(node) {\n      return node.id\n    },\n  })\n}\n\nconst branchKey = (branchId: ID) => `branch-${branchId}`\nfunction isBranchNode(node: TreeNode) {\n  return node.value.startsWith('branch')\n}\n\nfunction buildWithBranches(sectors: RoA<TSector>, branches: RoA<TBranch>) {\n  const sectorsPerBranch = RM.groupBy(\n    sector => sector.companyBranch.id,\n    sectors,\n  )\n\n  const flatData = [\n    ...sectors,\n    ...branches.filter(branch => {\n      return (\n        sectorsPerBranch[branch.id] && sectorsPerBranch[branch.id].length > 0\n      )\n    }),\n  ]\n\n  return getTreeFromFlatData({\n    flatData,\n    mapper: (node: TSector | TBranch) => ({\n      label: node.name,\n      id: isSector(node) ? node.id : branchKey(node.id),\n      value: isSector(node) ? node.id : branchKey(node.id),\n    }),\n    getParentKey(node) {\n      if (isSector(node)) {\n        if (node.parent) {\n          return node.parent.id\n        }\n        // sectors without parent gets the branch as parent\n        return branchKey(node.companyBranch.id)\n      }\n      return null // is branch, no parent\n    },\n    getKey(node) {\n      if (isSector(node)) {\n        return node.id\n      }\n      return branchKey(node.id)\n    },\n  })\n}\n\nfunction getTreeFromFlatData<T extends Record<string, any>, R>({\n  flatData,\n  mapper,\n  getKey,\n  getParentKey,\n}: {\n  flatData: RoA<T>\n  mapper(node: T): R\n  getKey(node: T): string\n  getParentKey(node: T): string | null\n}): Array<T & R & { children: T[] }> {\n  if (!flatData) {\n    return []\n  }\n\n  const rootKey = '@@'\n\n  const childrenToParents = { [rootKey]: [] as T[] }\n  flatData.forEach(child => {\n    const parentKey = getParentKey(child) || rootKey\n\n    if (parentKey in childrenToParents) {\n      childrenToParents[parentKey].push(child)\n    } else {\n      childrenToParents[parentKey] = [child]\n    }\n  })\n\n  if (!(rootKey in childrenToParents)) {\n    return []\n  }\n\n  const trav = (parent: T) => {\n    const parentKey = getKey(parent)\n    if (parentKey in childrenToParents) {\n      return {\n        ...parent,\n        ...mapper(parent),\n        children: childrenToParents[parentKey].map(child => trav(child)),\n      }\n    } else {\n      return {\n        ...parent,\n        ...mapper(parent),\n        children: ARRAY_EMPTY,\n      }\n    }\n  }\n\n  return childrenToParents[rootKey].map(child => trav(child))\n}\n\nfunction isSector(node: TSector | TBranch): node is TSector {\n  return Reflect.has(node, 'parent')\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport debounce from '../utils/debounce';\nimport clsx from 'clsx';\nimport { chainPropTypes, elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport Modal from '../Modal';\nimport Grow from '../Grow';\nimport Paper from '../Paper';\nexport function getOffsetTop(rect, vertical) {\n  var offset = 0;\n\n  if (typeof vertical === 'number') {\n    offset = vertical;\n  } else if (vertical === 'center') {\n    offset = rect.height / 2;\n  } else if (vertical === 'bottom') {\n    offset = rect.height;\n  }\n\n  return offset;\n}\nexport function getOffsetLeft(rect, horizontal) {\n  var offset = 0;\n\n  if (typeof horizontal === 'number') {\n    offset = horizontal;\n  } else if (horizontal === 'center') {\n    offset = rect.width / 2;\n  } else if (horizontal === 'right') {\n    offset = rect.width;\n  }\n\n  return offset;\n}\n\nfunction getTransformOriginValue(transformOrigin) {\n  return [transformOrigin.horizontal, transformOrigin.vertical].map(function (n) {\n    return typeof n === 'number' ? \"\".concat(n, \"px\") : n;\n  }).join(' ');\n} // Sum the scrollTop between two elements.\n\n\nfunction getScrollParent(parent, child) {\n  var element = child;\n  var scrollTop = 0;\n\n  while (element && element !== parent) {\n    element = element.parentElement;\n    scrollTop += element.scrollTop;\n  }\n\n  return scrollTop;\n}\n\nfunction getAnchorEl(anchorEl) {\n  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;\n}\n\nexport var styles = {\n  /* Styles applied to the root element */\n  root: {},\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    position: 'absolute',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    // So we see the popover when it's empty.\n    // It's most likely on issue on userland.\n    minWidth: 16,\n    minHeight: 16,\n    maxWidth: 'calc(100% - 32px)',\n    maxHeight: 'calc(100% - 32px)',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nvar Popover = React.forwardRef(function Popover(props, ref) {\n  var action = props.action,\n      anchorEl = props.anchorEl,\n      _props$anchorOrigin = props.anchorOrigin,\n      anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'left'\n  } : _props$anchorOrigin,\n      anchorPosition = props.anchorPosition,\n      _props$anchorReferenc = props.anchorReference,\n      anchorReference = _props$anchorReferenc === void 0 ? 'anchorEl' : _props$anchorReferenc,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      containerProp = props.container,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 8 : _props$elevation,\n      getContentAnchorEl = props.getContentAnchorEl,\n      _props$marginThreshol = props.marginThreshold,\n      marginThreshold = _props$marginThreshol === void 0 ? 16 : _props$marginThreshol,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$transformOrigi = props.transformOrigin,\n      transformOrigin = _props$transformOrigi === void 0 ? {\n    vertical: 'top',\n    horizontal: 'left'\n  } : _props$transformOrigi,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDurationProp = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n      _props$TransitionProp = props.TransitionProps,\n      TransitionProps = _props$TransitionProp === void 0 ? {} : _props$TransitionProp,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorEl\", \"anchorOrigin\", \"anchorPosition\", \"anchorReference\", \"children\", \"classes\", \"className\", \"container\", \"elevation\", \"getContentAnchorEl\", \"marginThreshold\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperProps\", \"transformOrigin\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var paperRef = React.useRef(); // Returns the top/left offset of the position\n  // to attach to on the anchor element (or body if none is provided)\n\n  var getAnchorOffset = React.useCallback(function (contentAnchorOffset) {\n    if (anchorReference === 'anchorPosition') {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!anchorPosition) {\n          console.error('Material-UI: you need to provide a `anchorPosition` prop when using ' + '<Popover anchorReference=\"anchorPosition\" />.');\n        }\n      }\n\n      return anchorPosition;\n    }\n\n    var resolvedAnchorEl = getAnchorEl(anchorEl);\n    var containerWindow = ownerWindow(resolvedAnchorEl); // If an anchor element wasn't provided, just use the parent body element of this Popover\n\n    var anchorElement = resolvedAnchorEl instanceof containerWindow.Element ? resolvedAnchorEl : ownerDocument(paperRef.current).body;\n    var anchorRect = anchorElement.getBoundingClientRect();\n\n    if (process.env.NODE_ENV !== 'production') {\n      var box = anchorElement.getBoundingClientRect();\n\n      if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n        console.warn(['Material-UI: the `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n      }\n    }\n\n    var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center';\n    return {\n      top: anchorRect.top + getOffsetTop(anchorRect, anchorVertical),\n      left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)\n    };\n  }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]); // Returns the vertical offset of inner content to anchor the transform on if provided\n\n  var getContentAnchorOffset = React.useCallback(function (element) {\n    var contentAnchorOffset = 0;\n\n    if (getContentAnchorEl && anchorReference === 'anchorEl') {\n      var contentAnchorEl = getContentAnchorEl(element);\n\n      if (contentAnchorEl && element.contains(contentAnchorEl)) {\n        var scrollTop = getScrollParent(element, contentAnchorEl);\n        contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;\n      } // != the default value\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (anchorOrigin.vertical !== 'top') {\n          console.error(['Material-UI: you can not change the default `anchorOrigin.vertical` value ', 'when also providing the `getContentAnchorEl` prop to the popover component.', 'Only use one of the two props.', 'Set `getContentAnchorEl` to `null | undefined`' + ' or leave `anchorOrigin.vertical` unchanged.'].join('\\n'));\n        }\n      }\n    }\n\n    return contentAnchorOffset;\n  }, [anchorOrigin.vertical, anchorReference, getContentAnchorEl]); // Return the base transform origin using the element\n  // and taking the content anchor offset into account if in use\n\n  var getTransformOrigin = React.useCallback(function (elemRect) {\n    var contentAnchorOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      vertical: getOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,\n      horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)\n    };\n  }, [transformOrigin.horizontal, transformOrigin.vertical]);\n  var getPositioningStyle = React.useCallback(function (element) {\n    // Check if the parent has requested anchoring on an inner content node\n    var contentAnchorOffset = getContentAnchorOffset(element);\n    var elemRect = {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    }; // Get the transform origin point on the element itself\n\n    var elemTransformOrigin = getTransformOrigin(elemRect, contentAnchorOffset);\n\n    if (anchorReference === 'none') {\n      return {\n        top: null,\n        left: null,\n        transformOrigin: getTransformOriginValue(elemTransformOrigin)\n      };\n    } // Get the offset of of the anchoring element\n\n\n    var anchorOffset = getAnchorOffset(contentAnchorOffset); // Calculate element positioning\n\n    var top = anchorOffset.top - elemTransformOrigin.vertical;\n    var left = anchorOffset.left - elemTransformOrigin.horizontal;\n    var bottom = top + elemRect.height;\n    var right = left + elemRect.width; // Use the parent window of the anchorEl if provided\n\n    var containerWindow = ownerWindow(getAnchorEl(anchorEl)); // Window thresholds taking required margin into account\n\n    var heightThreshold = containerWindow.innerHeight - marginThreshold;\n    var widthThreshold = containerWindow.innerWidth - marginThreshold; // Check if the vertical axis needs shifting\n\n    if (top < marginThreshold) {\n      var diff = top - marginThreshold;\n      top -= diff;\n      elemTransformOrigin.vertical += diff;\n    } else if (bottom > heightThreshold) {\n      var _diff = bottom - heightThreshold;\n\n      top -= _diff;\n      elemTransformOrigin.vertical += _diff;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (elemRect.height > heightThreshold && elemRect.height && heightThreshold) {\n        console.error(['Material-UI: the popover component is too tall.', \"Some part of it can not be seen on the screen (\".concat(elemRect.height - heightThreshold, \"px).\"), 'Please consider adding a `max-height` to improve the user-experience.'].join('\\n'));\n      }\n    } // Check if the horizontal axis needs shifting\n\n\n    if (left < marginThreshold) {\n      var _diff2 = left - marginThreshold;\n\n      left -= _diff2;\n      elemTransformOrigin.horizontal += _diff2;\n    } else if (right > widthThreshold) {\n      var _diff3 = right - widthThreshold;\n\n      left -= _diff3;\n      elemTransformOrigin.horizontal += _diff3;\n    }\n\n    return {\n      top: \"\".concat(top, \"px\"),\n      left: \"\".concat(left, \"px\"),\n      transformOrigin: getTransformOriginValue(elemTransformOrigin)\n    };\n  }, [anchorEl, anchorReference, getAnchorOffset, getContentAnchorOffset, getTransformOrigin, marginThreshold]);\n  var setPositioningStyles = React.useCallback(function (element) {\n    var positioning = getPositioningStyle(element);\n\n    if (positioning.top !== null) {\n      element.style.top = positioning.top;\n    }\n\n    if (positioning.left !== null) {\n      element.style.left = positioning.left;\n    }\n\n    element.style.transformOrigin = positioning.transformOrigin;\n  }, [getPositioningStyle]);\n\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n\n    setPositioningStyles(element);\n  };\n\n  var handlePaperRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    paperRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var updatePosition = React.useMemo(function () {\n    if (!open) {\n      return undefined;\n    }\n\n    return debounce(function () {\n      setPositioningStyles(paperRef.current);\n    });\n  }, [open, setPositioningStyles]);\n  React.useImperativeHandle(action, function () {\n    return open ? {\n      updatePosition: updatePosition\n    } : null;\n  }, [open, updatePosition]);\n  React.useEffect(function () {\n    if (!updatePosition) {\n      return undefined;\n    }\n\n    window.addEventListener('resize', updatePosition);\n    return function () {\n      window.removeEventListener('resize', updatePosition);\n      updatePosition.clear();\n    };\n  }, [updatePosition]);\n  var transitionDuration = transitionDurationProp;\n\n  if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {\n    transitionDuration = undefined;\n  } // If the container prop is provided, use that\n  // If the anchorEl prop is provided, use its parent body element as the container\n  // If neither are provided let the Modal take care of choosing the container\n\n\n  var container = containerProp || (anchorEl ? ownerDocument(getAnchorEl(anchorEl)).body : undefined);\n  return React.createElement(Modal, _extends({\n    container: container,\n    open: open,\n    ref: ref,\n    BackdropProps: {\n      invisible: true\n    },\n    className: clsx(classes.root, className)\n  }, other), React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: onEnter,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExited: onExited,\n    onExiting: onExiting,\n    timeout: transitionDuration\n  }, TransitionProps, {\n    onEntering: createChainedFunction(handleEntering, TransitionProps.onEntering)\n  }), React.createElement(Paper, _extends({\n    elevation: elevation,\n    ref: handlePaperRef\n  }, PaperProps, {\n    className: clsx(classes.paper, PaperProps.className)\n  }), children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Popover.propTypes = {\n  /**\n   * A ref for imperative actions.\n   * It currently only supports updatePosition() action.\n   */\n  action: refType,\n\n  /**\n   * This is the DOM element, or a function that returns the DOM element,\n   * that may be used to set the position of the popover.\n   */\n  anchorEl: chainPropTypes(PropTypes.oneOfType([PropTypes.object, PropTypes.func]), function (props) {\n    if (props.open && (!props.anchorReference || props.anchorReference === 'anchorEl')) {\n      var resolvedAnchorEl = getAnchorEl(props.anchorEl);\n      var containerWindow = ownerWindow(resolvedAnchorEl);\n\n      if (resolvedAnchorEl instanceof containerWindow.Element) {\n        var box = resolvedAnchorEl.getBoundingClientRect();\n\n        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          return new Error(['Material-UI: the `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n        }\n      } else {\n        return new Error(['Material-UI: the `anchorEl` prop provided to the component is invalid.', \"It should be an Element instance but it's `\".concat(resolvedAnchorEl, \"` instead.\")].join('\\n'));\n      }\n    }\n\n    return null;\n  }),\n\n  /**\n   * This is the point on the anchor where the popover's\n   * `anchorEl` will attach to. This is not used when the\n   * anchorReference is 'anchorPosition'.\n   *\n   * Options:\n   * vertical: [top, center, bottom];\n   * horizontal: [left, center, right].\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['left', 'center', 'right'])]).isRequired,\n    vertical: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['top', 'center', 'bottom'])]).isRequired\n  }),\n\n  /**\n   * This is the position that may be used\n   * to set the position of the popover.\n   * The coordinates are relative to\n   * the application's client area.\n   */\n  anchorPosition: PropTypes.shape({\n    left: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired\n  }),\n\n  /*\n   * This determines which anchor prop to refer to to set\n   * the position of the popover.\n   */\n  anchorReference: PropTypes.oneOf(['anchorEl', 'anchorPosition', 'none']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will passed to the Modal component.\n   * By default, it uses the body of the anchorEl's top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * The elevation of the popover.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * This function is called in order to retrieve the content anchor element.\n   * It's the opposite of the `anchorEl` prop.\n   * The content anchor element should be an element inside the popover.\n   * It's used to correctly scroll and set the position of the popover.\n   * The positioning strategy tries to make the content anchor element just above the\n   * anchor element.\n   */\n  getContentAnchorEl: PropTypes.func,\n\n  /**\n   * Specifies how close to the edge of the window the popover can appear.\n   */\n  marginThreshold: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the component is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the component has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the component is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the component is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the component has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the component is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the popover is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef\n  }),\n\n  /**\n   * This is the point on the popover which\n   * will attach to the anchor's origin.\n   *\n   * Options:\n   * vertical: [top, center, bottom, x(px)];\n   * horizontal: [left, center, right, x(px)].\n   */\n  transformOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['left', 'center', 'right'])]).isRequired,\n    vertical: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['top', 'center', 'bottom'])]).isRequired\n  }),\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])]),\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPopover'\n})(Popover);","module.exports = __webpack_public_path__ + \"static/media/orderNotification.0aa2ebe9.mp3\";","import React from 'react'\n\nimport {\n  QFilterOccasionsOccasions,\n  useQFilterOccasions,\n} from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/form'\nimport { i18n } from '../../i18n'\nimport { RM } from '../../tools/ramda'\nimport { FormDropdownMulti } from '../forms/FormDropdownMulti'\nimport { useBranchesFilter } from './BranchesFilter'\n\ntype TOccasion = QFilterOccasionsOccasions\n\ntype TProps = NoChildren & {\n  markAsAvailable?(isAvailable: boolean): void\n}\n\nexport const OccasionsFilter = React.memo<TProps>(({ markAsAvailable }) => {\n  const branches = useBranchesFilter()\n  const { getStash, loading } = useQFilterOccasions({\n    branches,\n  })\n\n  const occasions = getStash(data => data.occasions)\n  const hasAnyOccasions = occasions !== null && occasions.length > 0\n\n  React.useEffect(() => {\n    if (markAsAvailable) {\n      markAsAvailable(hasAnyOccasions)\n    }\n  }, [hasAnyOccasions, markAsAvailable])\n\n  return (\n    <FormDropdownMulti<TOccasion>\n      fieldName=\"occasions\"\n      placeholder={i18n.t`Filter by occasions`}\n      options={occasions || ARRAY_EMPTY}\n      noOptionsMessage={() => i18n.t`No occasions`}\n      isLoading={loading}\n      getOptionLabel={RM.prop('title')}\n      getOptionFilter={RM.prop('title')}\n    />\n  )\n})\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), React.createElement(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n})), 'AccessTime');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M22 10l-6-6H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99l16-.01c1.1 0 2-.89 2-1.99v-8zm-7-4.5l5.5 5.5H15V5.5z\"\n}), 'Note');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Star');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import { SvgIcon } from '@material-ui/core'\nimport React from 'react'\n\nexport function createSvgIcon(\n  path: ReactNode,\n  displayName: string,\n): typeof SvgIcon {\n  const Component = React.memo(\n    React.forwardRef<SVGSVGElement, {}>((props, ref) => (\n      <SvgIcon data-mui-test={`${displayName}Icon`} ref={ref} {...props}>\n        {path}\n      </SvgIcon>\n    )),\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = `${displayName}Icon`\n  }\n\n  //@ts-ignore Some issue with ref being a string\n  return Component\n}\n","import React from 'react'\nimport { createSvgIcon } from './createSvgIcon'\n\nexport const FilterDisable = createSvgIcon(\n  <path d=\"M14.76,20.83L17.6,18L14.76,15.17L16.17,13.76L19,16.57L21.83,13.76L23.24,15.17L20.43,18L23.24,20.83L21.83,22.24L19,19.4L16.17,22.24L14.76,20.83M12,12V19.88C12.04,20.18 11.94,20.5 11.71,20.71C11.32,21.1 10.69,21.1 10.3,20.71L8.29,18.7C8.06,18.47 7.96,18.16 8,17.87V12H7.97L2.21,4.62C1.87,4.19 1.95,3.56 2.38,3.22C2.57,3.08 2.78,3 3,3V3H17V3C17.22,3 17.43,3.08 17.62,3.22C18.05,3.56 18.13,4.19 17.79,4.62L12.03,12H12Z\" />,\n  'FilterDisable',\n)\n","import React from 'react'\nimport { createSvgIcon } from './createSvgIcon'\n\nexport const FilterEnable = createSvgIcon(\n  <path d=\"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z\" />,\n  'FilterEnable',\n)\n","import { Popover } from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useXFormCtx } from '@speedlo/xform'\nimport { useLocalStore, useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Card } from '../../../atoms/Card'\nimport { Icon } from '../../../atoms/Icon'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { OccasionsFilter } from '../../../components/filters/OccasionsFilter'\nimport { SectorsFilter } from '../../../components/filters/SectorsFilter'\nimport { FilterDisable } from '../../../components/icons/FilterDisable'\nimport { FilterEnable } from '../../../components/icons/FilterEnable'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { TKitchenFormFilter } from '../kitchen.types'\n\nconst StyledPopup = styled(Popover)`\n  .MuiPopover-paper {\n    width: 30rem;\n    overflow-x: initial;\n    overflow-y: initial;\n  }\n  .close-button {\n    margin: -0.9rem -0.7rem 0rem auto;\n    padding: 0.7rem;\n    display: block;\n    width: 3rem;\n    text-align: right;\n  }\n`\n\nexport const KitchenFilters = React.memo<NoChildren>(() => {\n  const xform = useXFormCtx<TKitchenFormFilter>()\n\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const store = useLocalStore(() => ({\n    isOpen: false,\n    setOpen() {\n      this.isOpen = true\n    },\n    setClosed() {\n      this.isOpen = false\n    },\n    sectorsAvailable: false,\n    markSectorsAvailable(available: boolean) {\n      this.sectorsAvailable = available\n    },\n    occassionsAvailable: false,\n    markOccasionsAvailable(available: boolean) {\n      this.occassionsAvailable = available\n    },\n    get isEnabled() {\n      return this.sectorsAvailable || this.occassionsAvailable\n    },\n    get isActive() {\n      const { values, wasSubmitted } = xform.state\n      return (\n        wasSubmitted && (values.occasions.length > 0 || values.sectors.length)\n      )\n    },\n  }))\n\n  return useObserver(() => (\n    <>\n      <SizerButton>\n        <TouchButton\n          color={store.isActive ? Colors.green : Colors.greyMiddle}\n          icon={store.isActive ? FilterDisable : FilterEnable}\n          ref={buttonRef}\n          iconSize={2}\n          onClick={store.setOpen}\n          disabled={!store.isEnabled}\n        ></TouchButton>\n      </SizerButton>\n      <StyledPopup\n        open={store.isOpen}\n        keepMounted={true}\n        onClose={(ev, reason) => {\n          if (reason === 'backdropClick') {\n            xform.api.submitForm()\n          }\n          store.setClosed()\n        }}\n        anchorEl={buttonRef.current}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Card padding={1}>\n          <Icon\n            icon={Close}\n            color={Colors.greyMiddle}\n            fontSize={1}\n            className=\"close-button\"\n            onClick={() => {\n              xform.api.submitForm()\n              store.setClosed()\n            }}\n          />\n          <SectorsFilter markAsAvailable={store.markSectorsAvailable} />\n          <VerticalGap />\n          <OccasionsFilter markAsAvailable={store.markOccasionsAvailable} />\n          <VerticalGap />\n          <Sizer width={9} height={Spacing.ButtonHeight}>\n            <TouchButton\n              text={i18n.t`Filter`}\n              color={Colors.green}\n              onClick={() => {\n                xform.api.submitForm()\n                store.setClosed()\n              }}\n            />\n          </Sizer>\n        </Card>\n      </StyledPopup>\n    </>\n  ))\n})\n","import {\n  FKitchenCompletionOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenCompletionOrderListQuery,\n  SKitchenCompletionOrderListSubscription,\n  useQKitchenCompletionOrderList,\n  useSKitchenCompletionOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { RM } from '../../../tools/ramda'\nimport { TKitchenDeckInput } from '../kitchen.types'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\nconst sortForCompletion = RM.sortWith<FKitchenCompletionOrderFragment>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.prop('orderNumber')),\n  RM.ascend(RM.either(RM.prop('deliverAt'), RM.prop('createdAt'))),\n])\n\nexport function useKitchenCompletionDeck({\n  branches,\n  sectors,\n  occasions,\n}: TKitchenDeckInput) {\n  const skip = branches.length === 0\n\n  const variables = {\n    branches,\n    occasions,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQKitchenCompletionOrderList(\n    {\n      ...variables,\n      categories: requiredCategories,\n    },\n    { skip },\n  )\n  useOnConnectionRestored(refetch)\n\n  useSKitchenCompletionOrderList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data => sortForCompletion(data.orders))\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenCompletionOrderListSubscription,\n  prev: QKitchenCompletionOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order || !prev.orders) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { toJS } from 'mobx'\nimport React from 'react'\n\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { TKitchenDeckInput, TKitchenFormFilter } from '../kitchen.types'\n\nexport function useKitchenFilterForm() {\n  const branches = useBranchesFilter(false)\n\n  const [filters, setFilters] = React.useState<TKitchenFormFilter>({\n    occasions: [],\n    sectors: [],\n  })\n\n  const onFilterSubmit = React.useCallback((values: TKitchenFormFilter) => {\n    setFilters(toJS(values))\n  }, [])\n\n  const filterInput = React.useMemo(\n    () => ({\n      ...filters,\n      branches,\n    }),\n    [branches, filters],\n  )\n\n  return [filterInput, onFilterSubmit] as [\n    TKitchenDeckInput,\n    typeof onFilterSubmit,\n  ]\n}\n","import { XForm } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { QKitchenCompletionOrderListOrders } from '../../../graph/generated'\nimport { useKitchenCompletionDeck } from '../hooks/useKitchenCompletionDeck'\nimport { useKitchenFilterForm } from '../hooks/useKitchenFilterForm'\n\ntype TOrder = QKitchenCompletionOrderListOrders\n\nconst loaderContext = React.createContext<RoA<TOrder> | null>(null)\n\nexport const KitchenCompletionLoader: React.FC = observer(props => {\n  const [filters, onFilterSubmit] = useKitchenFilterForm()\n\n  const deck = useKitchenCompletionDeck(filters)\n\n  return (\n    <XForm initialValues={filters} onSubmit={onFilterSubmit}>\n      <loaderContext.Provider value={deck}>\n        {props.children}\n      </loaderContext.Provider>\n    </XForm>\n  )\n})\n\nexport function useKitchenCompletion() {\n  return React.useContext(loaderContext)\n}\n","import React from 'react'\n\nimport orderNotificationSound from '../assets/orderNotification.mp3'\nimport { useRoot } from '../atoms/RootProvider'\nimport { useIntervalSound } from '../hooks/useIntervalSound'\n\ntype TProps = {\n  shouldPlay: boolean\n  playNow?: boolean\n}\n\nexport const OrderNotificationSound = React.memo<TProps>(\n  ({ shouldPlay, playNow = false }) => {\n    const { config } = useRoot()\n    return useIntervalSound({\n      soundUrl: orderNotificationSound,\n      intervalSec: config.orderListSoundIntervalSec,\n      forcePlayNow: playNow,\n      shouldPlay,\n    })\n  },\n)\n","import styled from 'styled-components'\n\nexport const KitchenInfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n","import {\n  OrderRecipeStateEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../tools/ramda'\nimport { TKitchenCardState, TKitchenDeck } from '../kitchen.types'\n\nexport const kitchenRecipeStateMapping: Partial<\n  Record<OrderRecipeStateEnum, TKitchenCardState>\n> = {\n  [OrderRecipeStateEnum.Fresh]: 'todo',\n  [OrderRecipeStateEnum.Preparing]: 'progress',\n  [OrderRecipeStateEnum.Ready]: 'progress',\n  [OrderRecipeStateEnum.Cooked]: 'done',\n}\n\nexport const kitchenOrderStateMapping: Partial<\n  Record<OrderStateCategoryEnum, TKitchenCardState>\n> = {\n  [OrderStateCategoryEnum.NewOrders]: 'todo',\n  [OrderStateCategoryEnum.Preparing]: 'progress',\n  [OrderStateCategoryEnum.ReadyToDeliver]: 'done',\n}\n\nexport function useKitchenDeck() {\n  const initialState = (RM.mapObjIndexed(\n    () => [],\n    RM.invertObj(kitchenRecipeStateMapping),\n  ) as unknown) as TKitchenDeck\n\n  return { initialState }\n}\n","import {\n  FKitchenOrderBaseItems,\n  FKitchenOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { RM } from '../../../tools/ramda'\nimport {\n  TKitchenCardItem,\n  TKitchenCardOrder,\n  TKitchenDeck,\n  TKitchenDeckInput,\n} from '../kitchen.types'\nimport {\n  kitchenOrderStateMapping,\n  kitchenRecipeStateMapping,\n} from './useKitchenDeck'\n\nconst requiredCategories = Object.keys(\n  kitchenOrderStateMapping,\n) as OrderStateCategoryEnum[]\n\nexport function useKitchenOrderDeck({\n  branches,\n  occasions,\n  sectors,\n}: TKitchenDeckInput) {\n  const skip = branches.length === 0\n\n  const variables = {\n    branches,\n    occasions,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      ...variables,\n      categories: requiredCategories,\n    },\n    { skip },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data => normalizeToKitchenDeck(data.orders))\n}\n\nfunction normalizeToKitchenDeck(orders: RoA<FKitchenOrderFragment>) {\n  const cards: TKitchenCardOrder[] = orders.map(mapOrderToKitchenCard)\n  return RM.groupBy(o => o.state, cards) as TKitchenDeck\n}\n\nfunction mapOrderToKitchenCard(\n  order: FKitchenOrderFragment,\n): TKitchenCardOrder {\n  return {\n    ...order,\n    type: 'order',\n    state: kitchenOrderStateMapping[order.orderStateCategory]!,\n    time: order.deliverAt || order.createdAt,\n    items: order.items.map(mapOrderItemToCardItem),\n  }\n}\n\nexport function mapOrderItemToCardItem(\n  orderItem: FKitchenOrderBaseItems,\n): TKitchenCardItem {\n  return {\n    id: orderItem.id,\n    code: orderItem.recipe.code,\n    name: orderItem.recipe.name,\n    state: kitchenRecipeStateMapping[orderItem.state.enum]!,\n    isReady: kitchenRecipeStateMapping[orderItem.state.enum] === 'done',\n    sideDishes: orderItem.sidedishes.map(RM.prop('recipe')),\n  }\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order || !prev.orders) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');","import { KeyboardArrowRight } from '@material-ui/icons'\nimport React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ntype TProps = NoChildren & ITouchButtonProps\n\nexport const KitchenCardButton: React.FC<TProps> = props => {\n  return (\n    <TouchButton\n      icon={KeyboardArrowRight}\n      width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n      color={Colors.green}\n      {...props}\n    />\n  )\n}\n","import React from 'react'\n\nimport {\n  OrderRecipeStateEnum,\n  OrderStateEnum,\n  useMKitchenOrderHandle,\n  useMKitchenOrderRecipeHandle,\n  useMKitchenSectorHandle,\n  useMKitchenSectorRecipeHandle,\n} from '../../../graph/generated'\nimport { useCanMutate } from '../../../hooks/useAccessGuard'\nimport { RM } from '../../../tools/ramda'\nimport { TKitchenCard, TKitchenCardItem } from '../kitchen.types'\n\nexport function useKitchenHandler() {\n  const canHandleOrder = useCanMutate('addOrderState')\n  const canHandleOrderRecipe = useCanMutate('updateOrderRecipeState')\n  const canHandleSector = useCanMutate('updateSectorRecipes')\n  const canHandleSectorRecipe = useCanMutate('updateSectorRecipe')\n\n  const [handleOrder] = useMKitchenOrderHandle()\n  const [handleOrderRecipe] = useMKitchenOrderRecipeHandle()\n  const [handleSector] = useMKitchenSectorHandle()\n  const [handleSectorRecipe] = useMKitchenSectorRecipeHandle()\n\n  const canHandleCard = (card: TKitchenCard) => {\n    if (card.state === 'todo') {\n      if (card.type === 'order' || card.type === 'completion') {\n        return canHandleOrder\n      }\n      if (card.type === 'sector') {\n        return canHandleSector\n      }\n    }\n    // ! temporary, should be removed when cashbox can finish those recipes\n    if (card.type === 'sector' && card.state === 'done') {\n      return canHandleSector\n    }\n    if (card.type === 'completion' && card.state === 'done') {\n      return canHandleOrder\n    }\n    return false\n  }\n\n  const canHandleCardItem = (card: TKitchenCard) => {\n    if (card.state !== 'todo') {\n      if (card.type === 'order' || card.type === 'completion') {\n        return canHandleOrderRecipe\n      }\n      if (card.type === 'sector') {\n        return canHandleSectorRecipe\n      }\n    }\n    return false\n  }\n\n  const handleCard = React.useCallback(\n    async (card: TKitchenCard) => {\n      if (card.type === 'order') {\n        await handleOrder({ orderId: card.id, state: OrderStateEnum.InProduce })\n      }\n      if (card.type === 'sector') {\n        if (card.state === 'todo') {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Preparing,\n          })\n        }\n        if (card.state === 'done') {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Finished,\n          })\n        }\n      }\n      if (card.type === 'completion') {\n        if (card.state === 'todo') {\n          await handleOrder({\n            orderId: card.id,\n            state: OrderStateEnum.Accepted,\n          })\n        }\n        if (card.state === 'done') {\n          await handleOrder({\n            orderId: card.id,\n            state: OrderStateEnum.Finished,\n          })\n        }\n      }\n    },\n    [handleOrder, handleSector],\n  )\n\n  const handleCardItem = React.useCallback(\n    async (card: TKitchenCard, item: TKitchenCardItem) => {\n      const nextItemState = getItemToggledState(card, item)\n      if (card.type === 'order' || card.type === 'completion') {\n        await handleOrderRecipe({\n          orderRecipeId: item.id,\n          state: nextItemState,\n        })\n      }\n      if (card.type === 'sector') {\n        await handleSectorRecipe({\n          sectorRecipeId: item.id,\n          state: nextItemState,\n        })\n\n        // special case to move a whole sector to done when all items are ready\n        // need to mark the one that was moved just now so the following condition can pass\n        item.isReady = nextItemState === OrderRecipeStateEnum.Ready\n        if (card.items.every(RM.propEq('isReady', true))) {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Cooked,\n          })\n        }\n      }\n    },\n    [handleOrderRecipe, handleSector, handleSectorRecipe],\n  )\n\n  return {\n    canHandleCard,\n    canHandleCardItem,\n    handleCard,\n    handleCardItem,\n  }\n}\n\nfunction getItemToggledState(\n  card: TKitchenCard,\n  item: TKitchenCardItem,\n): OrderRecipeStateEnum {\n  switch (item.state) {\n    case 'todo':\n    case 'progress': {\n      if (card.type === 'sector') {\n        return item.isReady\n          ? OrderRecipeStateEnum.Preparing\n          : OrderRecipeStateEnum.Ready\n      }\n      return OrderRecipeStateEnum.Cooked\n    }\n    case 'done': {\n      return OrderRecipeStateEnum.Preparing\n    }\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ntype TProps = NoChildren & {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<TProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\n\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\nimport { TKitchenCardItemCommon } from '../kitchen.types'\n\ntype TProps = NoChildren & {\n  item: TKitchenCardItemCommon\n  isChecked?: boolean\n  canHandle?: boolean\n  onHandle?(): void\n  isFirstSidedish?: boolean\n}\n\nconst firstSideDishStyle = css`\n  margin-top: -0.8rem;\n`\n\nconst StyledKitchenCardItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${(props: { isFirstSidedish: boolean }) =>\n    props.isFirstSidedish && firstSideDishStyle};\n\n  & .done-container {\n    flex: 0 0 2.4rem;\n  }\n\n  & .item-code {\n    flex: 0 0 4.1rem;\n    font-size: ${FontSizes.CompactCardBig};\n    color: ${Colors.black};\n    margin-top: 0.35rem;\n  }\n\n  & .item-name {\n    flex: 1 0;\n    color: ${Colors.greyMiddle};\n    margin: 0.4rem 0 0 0.5rem;\n  }\n`\n\nexport const KitchenCardItem: React.FC<TProps> = ({\n  item,\n  isChecked = false,\n  canHandle = false,\n  onHandle,\n  isFirstSidedish = false,\n}) => (\n  <StyledKitchenCardItem isFirstSidedish={isFirstSidedish}>\n    <div className=\"done-container\">\n      {canHandle && onHandle && (\n        <TouchCheckButton isChecked={isChecked} onClick={onHandle} />\n      )}\n    </div>\n    <div className=\"item-code\">{item.code}</div>\n    <div className=\"item-name\">{item.name}</div>\n  </StyledKitchenCardItem>\n)\n","import React, { Fragment } from 'react'\n\nimport { TKitchenCardItem } from '../kitchen.types'\nimport { KitchenCardItem } from './KitchenCardItem'\n\ninterface IProps {\n  items: RoA<TKitchenCardItem>\n  canHandle: boolean\n  onHandle(item: TKitchenCardItem): Promise<void>\n}\n\nexport const KitchenCardItems: React.FC<IProps> = ({\n  items,\n  canHandle,\n  onHandle,\n}) => {\n  return (\n    <div>\n      {items.map(item => (\n        <Fragment key={item.id}>\n          <KitchenCardItem\n            item={item}\n            isChecked={item.isReady}\n            canHandle={canHandle}\n            onHandle={() => onHandle(item)}\n          />\n          <>\n            {item.sideDishes.map((sideDish, idx) => (\n              <KitchenCardItem\n                key={`${item.id}-${sideDish.id}`}\n                item={sideDish}\n                isFirstSidedish={idx === 0 && canHandle}\n              />\n            ))}\n          </>\n        </Fragment>\n      ))}\n    </div>\n  )\n}\n","import { Star } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\nconst StyledKitchenOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 0.2rem;\n  top: 0.2rem;\n  z-index: 5;\n`\n\nexport const KitchenOrderStarIndicator: React.FC = () => {\n  return (\n    <StyledKitchenOrderStarIndicator data-testid=\"KitchenOrderStarIndicator\">\n      <Icon color={Colors.orange} icon={Star} />\n    </StyledKitchenOrderStarIndicator>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { useKitchenHandler } from '../hooks/useKitchenHandler'\nimport { TKitchenCardCompletion } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ntype TProps = NoChildren & {\n  card: TKitchenCardCompletion\n  showBranch: boolean\n}\n\nexport const StyledKitchenCardCompletion = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  padding-bottom: ${Spacing.Middle};\n  position: relative;\n\n  & .header {\n    display: flex;\n    flex-wrap: nowrap;\n  }\n\n  .order-branch {\n    padding: 0.5rem 1.2rem 0 0.5rem;\n    margin: 0 -0.3rem 0 0;\n    border-top-left-radius: ${Radiuses.Card};\n    background-color: ${Colors.green};\n    color: ${Colors.white};\n  }\n\n  & .order__number {\n    width: 4.5rem;\n    background: ${Colors.orange};\n    color: ${Colors.white};\n    font-size: 2rem;\n    border-top-left-radius: ${Radiuses.Card};\n    text-align: center;\n  }\n\n  & .order__source {\n    display: inline-block;\n    background: ${Colors.greyMiddle};\n    color: ${Colors.white};\n    font-size: 0.9rem;\n    padding: 0.1rem 0.8rem;\n    border-radius: 0.9rem;\n    margin: 0.5rem;\n  }\n\n  & .order__sector {\n    display: inline-block;\n    color: ${Colors.black};\n    margin: 0.5rem;\n  }\n\n  & .order__content {\n    margin: ${Spacing.Middle};\n  }\n`\n\nexport const KitchenCardCompletion: React.FC<TProps> = ({\n  card,\n  showBranch,\n}) => {\n  const handler = useKitchenHandler()\n  return (\n    <StyledKitchenCardCompletion data-testid=\"order-box\">\n      <div className=\"header\">\n        {showBranch && (\n          <div className=\"order-branch\">{card.companyBranch.name}</div>\n        )}\n        <div className=\"order__number\">{card.orderNumber}</div>\n        <div className=\"order__source\">{`${card.orderOrigin.code} ${\n          card.cashBox !== null ? card.cashBox.id : ''\n        }`}</div>\n        {card.sector && <div className=\"order__sector\">{card.sector.name}</div>}\n        {card.isPriority && <KitchenOrderStarIndicator />}\n      </div>\n\n      <div className=\"order__content\">\n        <KitchenCardItems\n          items={card.items}\n          canHandle={handler.canHandleCardItem(card)}\n          onHandle={item => handler.handleCardItem(card, item)}\n        />\n        {card.note && <div className=\"order__note\">{card.note}</div>}\n      </div>\n\n      {handler.canHandleCard(card) && (\n        <CardDock position=\"BottomRight\">\n          <KitchenCardButton\n            color={card.state === 'todo' ? Colors.green : Colors.red}\n            onClick={() => handler.handleCard(card)}\n          />\n        </CardDock>\n      )}\n    </StyledKitchenCardCompletion>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Mobile } from '../../../app/Responsive'\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport {\n  FKitchenCompletionOrderFragment,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { RM } from '../../../tools/ramda'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { kitchenOrderStateMapping } from '../hooks/useKitchenDeck'\nimport { mapOrderItemToCardItem } from '../hooks/useKitchenOrderDeck'\nimport { TKitchenCardCompletion } from '../kitchen.types'\nimport { KitchenCardCompletion } from '../molecules/KitchenCardCompletion'\nimport { useKitchenCompletion } from './KitchenCompletionLoader'\n\ntype TProps = NoChildren & {\n  category: OrderStateCategoryEnum\n  noOrdersMessage: ReactNode\n  mobileHeadline: ReactNode\n}\n\nexport const KitchenCompletionShelf = observer<TProps>(\n  ({ category, noOrdersMessage, mobileHeadline }) => {\n    const branches = useBranchesFilter(false)\n    const orders = useKitchenCompletion()\n\n    if (branches.length === 0) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Select a branch</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (orders === null) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Loading</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    const cards = orders\n      .filter(RM.propEq('orderStateCategory', category))\n      .map(mapOrderToKitchenCard)\n\n    if (cards.length === 0) {\n      return <KitchenInfoMessage>{noOrdersMessage}</KitchenInfoMessage>\n    }\n\n    const shouldPlayNotification = category === OrderStateCategoryEnum.NewOrders\n\n    return (\n      <>\n        {mobileHeadline && (\n          <Mobile>\n            <CardListTitle>{mobileHeadline}</CardListTitle>\n          </Mobile>\n        )}\n        <div data-testid={`order-list-${category}`}>\n          {cards.map(card => (\n            <KitchenCardCompletion\n              key={card.id}\n              card={card}\n              showBranch={branches.length > 1}\n            />\n          ))}\n        </div>\n        <OrderNotificationSound shouldPlay={shouldPlayNotification} playNow />\n      </>\n    )\n  },\n)\n\nfunction mapOrderToKitchenCard(\n  order: FKitchenCompletionOrderFragment,\n): TKitchenCardCompletion {\n  return {\n    ...order,\n    type: 'completion',\n    state: kitchenOrderStateMapping[order.orderStateCategory]!,\n    time: order.deliverAt || order.createdAt,\n    items: order.items.map(mapOrderItemToCardItem),\n  }\n}\n","import {\n  FKitchenSectorRecipeFragment,\n  OrderRecipeStateEnum,\n  QKitchenSectorListQuery,\n  QKitchenSectorListSectors,\n  SKitchenSectorListSubscription,\n  useQKitchenSectorList,\n  useSKitchenSectorList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { RM } from '../../../tools/ramda'\nimport {\n  TKitchenCardItem,\n  TKitchenCardState,\n  TKitchenDeck,\n  TKitchenDeckInput,\n} from '../kitchen.types'\nimport { kitchenRecipeStateMapping } from './useKitchenDeck'\n\nconst requiredStates = Object.keys(\n  kitchenRecipeStateMapping,\n) as OrderRecipeStateEnum[]\n\nexport function useKitchenSectorDeck({ branches, sectors }: TKitchenDeckInput) {\n  const skip = branches.length === 0\n\n  const variables = {\n    branches,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQKitchenSectorList(\n    {\n      ...variables,\n      states: requiredStates,\n    },\n    { skip },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenSectorList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      states: requiredStates.concat(\n        OrderRecipeStateEnum.Finished,\n        OrderRecipeStateEnum.Canceled,\n      ),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data =>\n    normalizeToKitchenDeck(data.sectorRecipes, data.sectors),\n  )\n}\n\nfunction normalizeToKitchenDeck(\n  sectorRecipes: RoA<FKitchenSectorRecipeFragment>,\n  sectors: RoA<QKitchenSectorListSectors>,\n) {\n  const makeKey = (sectorId: ID, state: TKitchenCardState) =>\n    `${sectorId}-${state}`\n\n  const initialState = (RM.mapObjIndexed(\n    () => [],\n    RM.invertObj(kitchenRecipeStateMapping),\n  ) as unknown) as TKitchenDeck\n\n  const groupedBySectorAndState = RM.groupBy(\n    ({ sector, state }) =>\n      makeKey(sector.id, kitchenRecipeStateMapping[state.enum]!),\n    sectorRecipes,\n  )\n\n  const sortByTime = RM.sortBy(RM.prop('createdAt'))\n\n  return sectors.reduce((acc, sector) => {\n    return RM.mapObjIndexed((cards, state) => {\n      const key = makeKey(sector.id, state as TKitchenCardState)\n      const relatedSectorRecipes = groupedBySectorAndState[key]\n      if (relatedSectorRecipes) {\n        const sortedRecipes = sortByTime(relatedSectorRecipes)\n        const items = sortedRecipes.map(\n          (sectorRecipe): TKitchenCardItem => ({\n            id: sectorRecipe.id,\n            code: sectorRecipe.recipe.code,\n            name: sectorRecipe.recipe.name,\n            state: kitchenRecipeStateMapping[sectorRecipe.state.enum]!,\n            isReady: [\n              OrderRecipeStateEnum.Ready,\n              OrderRecipeStateEnum.Cooked,\n            ].includes(sectorRecipe.state.enum),\n            sideDishes: sectorRecipe.sideDishes.map(RM.prop('recipe')),\n          }),\n        )\n        return cards.concat({\n          id: sector.id,\n          type: 'sector',\n          name: sector.name,\n          time: sortedRecipes[0].createdAt,\n          state: state as TKitchenCardState,\n          isPriority: false,\n          items,\n        })\n      }\n      return cards\n    }, acc) as TKitchenDeck\n  }, initialState)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenSectorListSubscription,\n  prev: QKitchenSectorListQuery,\n): QKitchenSectorListQuery {\n  const { sectorRecipe } = update.updatedSectorRecipe\n  if (!sectorRecipe || !prev.sectorRecipes) {\n    return prev\n  }\n  if (!requiredStates.includes(sectorRecipe.state.enum)) {\n    return {\n      ...prev,\n      sectorRecipes: prev.sectorRecipes.filter(s => s.id !== sectorRecipe.id),\n    }\n  }\n  let exists = false\n  const sectorRecipes = prev.sectorRecipes.map(s => {\n    if (s.id === sectorRecipe.id) {\n      exists = true\n      return sectorRecipe\n    }\n    return s\n  })\n  if (!exists) {\n    sectorRecipes.unshift(sectorRecipe)\n  }\n  return { ...prev, sectorRecipes }\n}\n","import { XForm } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { RM } from '../../../tools/ramda'\nimport { useKitchenFilterForm } from '../hooks/useKitchenFilterForm'\nimport { useKitchenOrderDeck } from '../hooks/useKitchenOrderDeck'\nimport { useKitchenSectorDeck } from '../hooks/useKitchenSectorDeck'\nimport { TKitchenCard, TKitchenCardState, TKitchenDeck } from '../kitchen.types'\n\nconst sortCards = RM.sortWith<TKitchenCard>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.prop('time')),\n])\n\nconst kitchenContext = React.createContext<TKitchenDeck | null>(null)\n\nexport const KitchenLoader = observer<SomeChildren>(({ children }) => {\n  const [filters, onFilterSubmit] = useKitchenFilterForm()\n\n  const orderDeck = useKitchenOrderDeck(filters)\n  const sectorDeck = useKitchenSectorDeck(filters)\n\n  const kitchenDeck =\n    orderDeck &&\n    sectorDeck &&\n    RM.mergeDeepWith(RM.concat, orderDeck, sectorDeck)\n\n  const sortedKitchenDeck =\n    kitchenDeck && (RM.mapObjIndexed(sortCards, kitchenDeck) as TKitchenDeck)\n\n  return (\n    <XForm initialValues={filters} onSubmit={onFilterSubmit}>\n      <kitchenContext.Provider value={sortedKitchenDeck}>\n        {children}\n      </kitchenContext.Provider>\n    </XForm>\n  )\n})\n\nexport function useKitchenDeck(state: TKitchenCardState) {\n  const kitchenDeck = React.useContext(kitchenContext)\n  return kitchenDeck && kitchenDeck[state]\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ntype TProps = NoChildren & {\n  deliverTime: Maybe<Date>\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<TProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { TKitchenCardOrder, TKitchenCardProps } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ntype TProps = NoChildren &\n  TKitchenCardProps<TKitchenCardOrder> & {\n    card: TKitchenCardOrder\n    showBranch: boolean\n  }\n\nconst StyledKitchenCardOrder = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n\n  .order-branch {\n    padding: 0.3rem 0.6rem;\n    margin: -0.2rem 0.3rem 0 -0.2rem;\n    align-self: flex-start;\n    border-top-left-radius: ${Radiuses.Card};\n    background-color: ${Colors.green};\n    color: ${Colors.white};\n  }\n\n  .order-ticker {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    padding: 0.2rem;\n    color: ${Colors.greyMiddle};\n  }\n\n  .details {\n    padding: 0 0.2rem 0.1rem 0.2rem;\n    position: relative;\n  }\n\n  .delivery-time-badge-container {\n    flex: 0 0 1.8rem;\n  }\n\n  .address-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .customer-identity-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .pickup-label {\n    font-style: italic;\n  }\n`\n\nexport const KitchenCardOrder: React.FC<TProps> = ({\n  card,\n  showBranch,\n  onHandle,\n  onHandleRecipe,\n  canHandle,\n  canHandleRecipe,\n}) => {\n  const getOrderDestination = () => {\n    if (card.sector !== null) {\n      return card.sector.name\n    }\n    if (\n      card.deliveryType &&\n      card.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <div className=\"pickup-label\">\n          <Trans>To pickup</Trans>\n        </div>\n      )\n    }\n    return formatAddress(card.address)\n  }\n\n  return (\n    <StyledKitchenCardOrder>\n      <div className=\"order-ticker\">\n        {showBranch && (\n          <div className=\"order-branch\">{card.companyBranch.name}</div>\n        )}\n\n        <div className=\"delivery-time-badge-container\">\n          <DeliveryTimeBadge\n            deliverAt={card.deliverAt ? new Date(card.deliverAt) : null}\n            deliveredAt={card.deliveredAt ? new Date(card.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={card.delayedDeliveryTime !== null}\n          />\n        </div>\n\n        <div className=\"address-container\">{getOrderDestination()}</div>\n\n        <div className=\"customer-identity-container\">\n          <CustomerIdentity customer={card.customer} />\n          <br />\n          {card.customer && card.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${card.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {card.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </div>\n      </div>\n\n      <div className=\"details\">\n        <HorizontalSeparator />\n        {card.isPriority && <KitchenOrderStarIndicator />}\n        <KitchenCardItems\n          items={card.items}\n          canHandle={canHandleRecipe}\n          onHandle={item => onHandleRecipe(card, item)}\n        />\n        <HorizontalSeparator />\n        <KitchenOrderAtSummary\n          deliverTime={card.deliverAt}\n          deliverType={\n            card.deliveryType &&\n            card.deliveryType.enum === DeliveryTypeEnum.Pickup\n              ? 'PERSONAL'\n              : 'DELIVER_UNTIL'\n          }\n        />\n        <NoteLine note={card.note} />\n        {canHandle && (\n          <CardDock position=\"BottomRight\">\n            <KitchenCardButton onClick={() => onHandle(card)} />\n          </CardDock>\n        )}\n      </div>\n    </StyledKitchenCardOrder>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { TKitchenCardProps, TKitchenCardSector } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\n\ntype TProps = NoChildren &\n  TKitchenCardProps<TKitchenCardSector> & {\n    card: TKitchenCardSector\n  }\n\nconst StyledKitchenCardSector = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n\n  .details {\n    padding: 0 0.2rem 0.1rem 0.2rem;\n    position: relative;\n  }\n\n  .sector-name {\n    padding: 0.3rem 0 0.3rem 2.5rem;\n    font-size: 1.1rem;\n  }\n`\n\nexport const KitchenCardSector: React.FC<TProps> = ({\n  card,\n  canHandle,\n  canHandleRecipe,\n  onHandle,\n  onHandleRecipe,\n}) => {\n  return (\n    <StyledKitchenCardSector>\n      <div className=\"sector-name\">{card.name}</div>\n\n      <div className=\"details\">\n        <HorizontalSeparator />\n        <KitchenCardItems\n          items={card.items}\n          canHandle={canHandleRecipe}\n          onHandle={item => onHandleRecipe(card, item)}\n        />\n        {canHandle && (\n          <>\n            <HorizontalSeparator />\n            <CardDock position=\"BottomRight\">\n              <KitchenCardButton\n                color={card.state === 'todo' ? Colors.green : Colors.pink}\n                onClick={() => onHandle(card)}\n              />\n            </CardDock>\n          </>\n        )}\n      </div>\n    </StyledKitchenCardSector>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Mobile } from '../../../app/Responsive'\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { useKitchenHandler } from '../hooks/useKitchenHandler'\nimport { TKitchenCardState } from '../kitchen.types'\nimport { KitchenCardOrder } from '../molecules/KitchenCardOrder'\nimport { KitchenCardSector } from '../molecules/KitchenCardSector'\nimport { useKitchenDeck } from './KitchenLoader'\n\ntype TProps = NoChildren & {\n  state: TKitchenCardState\n  noCardsMessage: ReactNode\n  mobileHeadline?: ReactNode\n}\n\nexport const KitchenShelf = observer<TProps>(\n  ({ state, noCardsMessage, mobileHeadline }) => {\n    const shelfCards = useKitchenDeck(state)\n    const branches = useBranchesFilter(false)\n    const handler = useKitchenHandler()\n\n    if (branches.length === 0) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Select a branch</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (shelfCards === null) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Loading</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (shelfCards.length === 0) {\n      return <KitchenInfoMessage>{noCardsMessage}</KitchenInfoMessage>\n    }\n\n    const shouldPlayNotification = state === 'todo'\n\n    return (\n      <>\n        {mobileHeadline && (\n          <Mobile>\n            <CardListTitle>{mobileHeadline}</CardListTitle>\n          </Mobile>\n        )}\n        <OrderNotificationSound shouldPlay={shouldPlayNotification} playNow />\n        {shelfCards.map(card => {\n          const commonProps = {\n            key: `${card.type}-${card.id}`,\n            canHandle: handler.canHandleCard(card),\n            canHandleRecipe: handler.canHandleCardItem(card),\n            onHandle: handler.handleCard,\n            onHandleRecipe: handler.handleCardItem,\n          }\n          if (card.type === 'order') {\n            return (\n              <KitchenCardOrder\n                card={card}\n                showBranch={branches.length > 1}\n                {...commonProps}\n              />\n            )\n          }\n          if (card.type === 'sector') {\n            return <KitchenCardSector card={card} {...commonProps} />\n          }\n          return null\n        })}\n      </>\n    )\n  },\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { BranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { Colors } from '../../../styling'\nimport { KitchenFilters } from '../molecules/KitchenFilters'\nimport { KitchenLoader } from '../organisms/KitchenLoader'\nimport { KitchenShelf } from '../organisms/KitchenShelf'\n\nexport const StyledKitchenFilterContainer = styled.div`\n  position: absolute;\n  left: 16rem;\n  top: 0.4rem;\n  width: calc(100vw - 36rem);\n  z-index: 120;\n`\n\nexport const KitchenCategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  left: -5px;\n  top: 0rem;\n`\n\nexport const KitchenOverviewPage: React.FC<NoChildren> = () => (\n  <KitchenLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      showSoundControl={true}\n      topContent={<KitchenFilters />}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <BranchesFilter />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <BranchesFilter />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenShelf\n          state=\"todo\"\n          noCardsMessage={<Trans>No new orders</Trans>}\n          mobileHeadline={<Trans>New orders</Trans>}\n        />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenShelf\n          state=\"progress\"\n          noCardsMessage={<Trans>No orders to prepare</Trans>}\n          mobileHeadline={<Trans>Orders to prepare</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenShelf\n          state=\"done\"\n          noCardsMessage={<Trans>No orders to deliver</Trans>}\n          mobileHeadline={<Trans>Orders to deliver</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenLoader>\n)\n\nexport default KitchenOverviewPage\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { BranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { KitchenFilters } from '../molecules/KitchenFilters'\nimport { KitchenCompletionLoader } from '../organisms/KitchenCompletionLoader'\nimport { KitchenCompletionShelf } from '../organisms/KitchenCompletionShelf'\nimport {\n  KitchenCategorySeparator,\n  StyledKitchenFilterContainer,\n} from './KitchenOverviewPage'\n\nexport const KitchenCompletionPage: React.FC<NoChildren> = () => (\n  <KitchenCompletionLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Completion`}\n      useBackButton={true}\n      showSoundControl={true}\n      topContent={<KitchenFilters />}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <BranchesFilter />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <BranchesFilter />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.NewOrders}\n          noOrdersMessage={<Trans>No new orders</Trans>}\n          mobileHeadline={<Trans>New orders</Trans>}\n        />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.Preparing}\n          noOrdersMessage={<Trans>No orders to complete</Trans>}\n          mobileHeadline={<Trans>Orders to complete</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.ReadyToDeliver}\n          noOrdersMessage={<Trans>No orders to hand over</Trans>}\n          mobileHeadline={<Trans>Orders to hand over</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenCompletionLoader>\n)\n\nexport default KitchenCompletionPage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ROUTE_KITCHEN, ROUTE_KITCHEN_COMPLETION } from '../kitchen.routes'\nimport { KitchenCompletionPage } from '../pages/KitchenCompletionPage'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps {}\n\nexport const KitchenRouting: React.FC<IProps> = () => {\n  return (\n    <Switch>\n      <SecureRoute exact path={ROUTE_KITCHEN} component={KitchenOverviewPage} />\n      <SecureRoute\n        path={ROUTE_KITCHEN_COMPLETION}\n        component={KitchenCompletionPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default KitchenRouting\n"],"sourceRoot":""}