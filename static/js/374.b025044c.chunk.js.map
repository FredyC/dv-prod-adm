{"version":3,"sources":["helpers/form.ts","atoms/IconLine.tsx","hooks/useAccessGuard.ts","atoms/SelectControl.tsx","components/filters/BranchesFilter.tsx","atoms/ScrollArea.tsx","molecules/PageLayoutFullHeightItem.tsx","hooks/useUserModel.ts","atoms/HorizontalSeparator.tsx","hooks/useDropdownFilter.ts","atoms/VerticalGap.tsx","atoms/FormGrid.tsx","atoms/Printer.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","components/forms/FormDropdownMulti.tsx","atoms/CardDock.tsx","hooks/useOnConnectionRestored.ts","atoms/TimeBadge.tsx","atoms/LinkStyled.tsx","hooks/useDropdownMulti.ts","segments/order/atoms/DeliveryTimeBadge.tsx","atoms/CardListTitle.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/NoteLine.tsx","assets/orderNotification.mp3","components/filters/OccasionsFilter.tsx","components/filters/SectorsFilter.tsx","components/icons/createSvgIcon.tsx","components/icons/FilterDisable.tsx","components/icons/FilterEnable.tsx","segments/kitchen/molecules/KitchenFilters.tsx","segments/kitchen/hooks/useKitchenCompletionDeck.ts","segments/kitchen/hooks/useKitchenFilterForm.ts","segments/kitchen/organisms/KitchenCompletionLoader.tsx","molecules/OrderNotificationSound.tsx","segments/kitchen/atoms/KitchenInfoMessage.tsx","segments/kitchen/hooks/useKitchenDeck.ts","segments/kitchen/hooks/useKitchenOrderDeck.ts","segments/kitchen/atoms/KitchenCardButton.tsx","segments/kitchen/hooks/useKitchenHandler.ts","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenCardItem.tsx","segments/kitchen/molecules/KitchenCardItems.tsx","segments/kitchen/molecules/KitchenOrderStarIndicator.tsx","segments/kitchen/molecules/KitchenCardCompletion.tsx","segments/kitchen/organisms/KitchenCompletionShelf.tsx","segments/kitchen/hooks/useKitchenSectorDeck.ts","segments/kitchen/organisms/KitchenLoader.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/molecules/KitchenCardOrder.tsx","segments/kitchen/molecules/KitchenCardSector.tsx","segments/kitchen/organisms/KitchenShelf.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/pages/KitchenCompletionPage.tsx","segments/kitchen/routes/KitchenRouting.tsx"],"names":["isFormValid","formState","errors","Object","keys","length","fieldIsRequiredMsg","fieldDescription","fieldIsPositiveNumberMsg","validateAsNumberField","yup","number","default","transform","_","origValue","parseNumber","test","fieldIsNumberMsg","value","isNaN","ARRAY_EMPTY","StyledIconLine","styled","div","labelMargin","labelWidth","labelWidthUnits","StyledGridDescription","mediaMobile","replace","StyledGridContent","IconLine","icon","label","Spacing","DefaultSizeUnit","labelSmallCaps","children","iconComponent","logError","Error","isInFormGrid","useFormGridCheck","descriptionPart","color","Colors","greyDark","className","cn","smallCaps","useAccessGuard","queries","mutations","user","useRoot","every","canQuery","canMutate","useCanQuery","useCanMutate","getControlStyles","width","minWidth","colors","invalid","border","red","backgroundColor","errorBackground","greyMiddle","margin","MarginAroundFormComponents","undefined","composeSelectControlStyles","outerStyles","control","base","state","controlStyles","selectProps","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","clearIndicator","cursor","SelectControl","hideOnSingleOption","props","options","toPrint","formatWith","getOptionLabel","formatOptionLabel","valueText","Array","isArray","map","placeholder","getPrintContent","components","ClearIndicator","styles","getStyles","innerProps","ref","restInnerProps","style","padding","useBranchesFilterEditable","createStatePersistence","BranchesFilter","React","memo","userModel","useUserModel","branches","setBranches","formatBranchName","getOptionValue","idProp","dropdownProps","useDropdownMulti","onSelectionChange","selected","filterProps","useDropdownFilter","getOptionFilter","useBranchesFilter","withUserBranchesWhenEmpty","persistedBranches","setPersistedBranches","persistenceKey","join","selectedBranches","useMemo","RM","intersection","branchesId","hasPersistedBranches","hasAccessToAllPersistedBranches","useEffect","noBranchSelected","key","ScrollArea","StyledPageLayoutFullHeightItem","mediaDesktop","widthInColumns","LayoutGridCellMargin","column","row","rowInMobile","forcePercentHeightInMobile","PageHeaderHeight","PageLayoutFullHeightItem","withScrollArea","scrollAreaId","forceHeightInMobile","isMobile","useResponsive","id","Sizer","height","heightUnit","HorizontalSeparatorStyled","greyLight","HorizontalSeparator","visible","isSearchable","filterOption","useCallback","option","rawInput","data","toLocaleLowerCase","includes","VerticalGap","size","sizeUnit","displayName","StyledFormGrid","formGridCounter","formGridContext","createContext","FormGrid","Provider","useContext","StyledPrinter","Printer","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","resolve","module","exports","FormDropdownMulti","fieldName","useXFormState","field","useXField","useObserver","setValue","onFocus","setTouched","touched","hasError","isDisabled","isSubmitting","CardDock","position","useOnConnectionRestored","cb","useDisposable","whenGoingOnline","ETimeBadgeVariant","StyledTimeBadge","white","variants","UNKNOWN","CRITICAL","WARNING","orange","NORMAL","green","bigNumberStyle","css","dashStyle","clickable","TimeBadge","forwardRef","minutes","variant","onClick","Variant","output","extraClassNames","push","toString","cx","heartBeat","pulse","LinkStyled","a","filter","onChange","isMulti","cancelIconPadding","StyledDelayedTimeMark","DeliveryTimeBadge","deliverAt","deliveredAt","isCancelled","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","role","aria-label","differenceInMinutes","CardListTitle","h2","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","StyledCurrentNote","span","NoteLine","note","Note","OccasionsFilter","markAsAvailable","useQFilterOccasions","getStash","loading","occasions","hasAnyOccasions","noOptionsMessage","isLoading","prop","DropdownTreeSelectMemo","texts","SectorsFilter","hasSingleBranch","sectors","useQFilterSectors","hasAnySectors","treeData","getTreeFromFlatData","flatData","mapper","node","name","getParentKey","parent","getKey","buildForSingleBranch","sectorsPerBranch","groupBy","sector","companyBranch","branch","isSector","branchKey","buildWithBranches","currentNode","selectedNodes","selectedSectorsId","reduce","acc","startsWith","isBranchNode","branchNode","find","idPropEq","noMatches","branchId","childrenToParents","forEach","child","parentKey","trav","Reflect","has","createSvgIcon","path","SvgIcon","data-mui-test","FilterDisable","d","FilterEnable","StyledPopup","Popover","KitchenFilters","xform","useXFormCtx","buttonRef","useRef","store","useLocalStore","isOpen","setOpen","this","setClosed","sectorsAvailable","markSectorsAvailable","available","occassionsAvailable","markOccasionsAvailable","values","wasSubmitted","SizerButton","TouchButton","isActive","iconSize","disabled","isEnabled","open","keepMounted","onClose","ev","reason","api","submitForm","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","Card","Icon","Close","fontSize","ButtonHeight","text","i18n","requiredCategories","OrderStateCategoryEnum","NewOrders","Preparing","ReadyToDeliver","sortForCompletion","sortWith","descend","ascend","either","useKitchenCompletionDeck","skip","variables","useQKitchenCompletionOrderList","categories","updateQuery","refetch","useSKitchenCompletionOrderList","concat","Finished","onSubscriptionData","dataUpdate","subscriptionData","prev","update","order","updatedOrder","orders","orderStateCategory","orderExists","unshift","handleSubscriptionUpdate","useKitchenFilterForm","useState","filters","setFilters","onFilterSubmit","toJS","loaderContext","KitchenCompletionLoader","observer","deck","initialValues","onSubmit","OrderNotificationSound","shouldPlay","playNow","config","useIntervalSound","soundUrl","orderNotificationSound","intervalSec","orderListSoundIntervalSec","forcePlayNow","KitchenInfoMessage","kitchenRecipeStateMapping","OrderRecipeStateEnum","Fresh","Ready","Cooked","kitchenOrderStateMapping","useKitchenOrderDeck","useQKitchenOrderList","useSKitchenOrderList","cards","mapOrderToKitchenCard","normalizeToKitchenDeck","type","time","createdAt","items","mapOrderItemToCardItem","orderItem","recipe","enum","isReady","sideDishes","sidedishes","KitchenCardButton","KeyboardArrowRight","useKitchenHandler","canHandleOrder","canHandleOrderRecipe","canHandleSector","canHandleSectorRecipe","useMKitchenOrderHandle","handleOrder","useMKitchenOrderRecipeHandle","handleOrderRecipe","useMKitchenSectorHandle","handleSector","useMKitchenSectorRecipeHandle","handleSectorRecipe","canHandleCard","card","canHandleCardItem","handleCard","async","orderId","OrderStateEnum","InProduce","sectorId","Accepted","handleCardItem","item","nextItemState","getItemToggledState","orderRecipeId","sectorRecipeId","propEq","Circle","Small","CheckedInner","TouchCheckButton","isChecked","firstSideDishStyle","StyledKitchenCardItem","isFirstSidedish","FontSizes","CompactCardBig","KitchenCardItem","canHandle","onHandle","KitchenCardItems","sideDish","idx","StyledKitchenOrderStarIndicator","KitchenOrderStarIndicator","data-testid","Star","StyledKitchenCardCompletion","CompactCard","greyDarkest","Radiuses","Middle","KitchenCardCompletion","showBranch","handler","orderNumber","orderOrigin","cashBox","isPriority","KitchenCompletionShelf","category","noOrdersMessage","mobileHeadline","shouldPlayNotification","requiredStates","useKitchenSectorDeck","useQKitchenSectorList","states","useSKitchenSectorList","Canceled","sectorRecipe","updatedSectorRecipe","sectorRecipes","s","exists","makeKey","initialState","mapObjIndexed","invertObj","groupedBySectorAndState","sortByTime","sortBy","relatedSectorRecipes","sortedRecipes","sortCards","kitchenContext","KitchenLoader","orderDeck","sectorDeck","kitchenDeck","mergeDeepWith","sortedKitchenDeck","Label","DeliveryTime","DeliverLabel","deliverType","KitchenOrderAtSummary","deliverTime","AccessTime","formatTimeWithoutTodayDate","StyledKitchenCardOrder","KitchenCardOrder","onHandleRecipe","canHandleRecipe","Date","delayedDeliveryTime","deliveryType","DeliveryTypeEnum","Pickup","formatAddress","address","href","StyledKitchenCardSector","KitchenCardSector","pink","KitchenShelf","noCardsMessage","shelfCards","useKitchenDeck","commonProps","StyledKitchenFilterContainer","KitchenCategorySeparator","KitchenOverviewPage","PageLayoutResponsive","pageTitle","useBackButton","showSoundControl","topContent","PageLayoutGridItem","gridRowInMobile","KitchenCompletionPage","KitchenRouting","SecureRoute","exact","ROUTE_KITCHEN","component","ROUTE_KITCHEN_COMPLETION","NotFoundPage"],"mappings":"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","file":"static/js/374.b025044c.chunk.js","sourcesContent":["import { yup } from '@speedlo/xform'\nimport { IFormState } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { parseNumber } from './numeral'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function fieldIsRequiredMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} cannot be empty`\n}\n\nexport function fieldIsNumberMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} must be a number`\n}\n\nexport function fieldIsPositiveNumberMsg(fieldDescription: string) {\n  return i18n.t`Field ${fieldDescription} must be a positive number`\n}\n\nexport const validateAsNumberField = (fieldDescription: string) =>\n  yup\n    .number()\n    .default(0)\n    .transform((_, origValue) => parseNumber(origValue))\n    .test(\n      'number-field',\n      fieldIsNumberMsg(fieldDescription),\n      value => !isNaN(value),\n    )\n\nexport const ARRAY_EMPTY: RoA<any> = []\n","import { Error, SvgIconComponent } from '@material-ui/icons'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../app/Responsive'\nimport { logError } from '../helpers/logger'\nimport { Colors, Spacing } from '../styling'\nimport { useFormGridCheck } from './FormGrid'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: SvgIconComponent\n  label?: string | ReactNode\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  labelSmallCaps?: boolean\n  className?: string\n}\n\nconst StyledIconLine = styled.div<IProps>`\n  display: flex;\n\n  div.description {\n    margin: ${({ labelMargin }) => labelMargin};\n    min-width: ${({ labelWidth, labelWidthUnits }) =>\n      `${labelWidth}${labelWidthUnits}`};\n    flex: 0 0 auto;\n    text-align: right;\n  }\n\n  div.contents {\n    margin-left: 0.5rem;\n    align-self: stretch;\n    flex: 1 1 auto;\n  }\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n`\n\nconst StyledGridDescription = styled.div<IProps>`\n  grid-column: desc;\n  margin: ${({ labelMargin }) => labelMargin};\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n\n  ${mediaMobile`\n  grid-column: content;\n  justify-self: start;\n  margin: ${({ labelMargin }) => labelMargin.replace('auto', '0.7rem')};\n  `};\n`\n\nconst StyledGridContent = styled.div<IProps>`\n  grid-column: content;\n  margin-left: 0.5rem;\n`\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n  labelMargin = '0.5rem 0.2rem 0 auto',\n  labelSmallCaps = true,\n  children,\n}) => {\n  let iconComponent = icon\n  if (typeof icon === 'string') {\n    logError(\n      `IconLine: Do not use icon prop as string! Replace \"${icon}\" with the one imported from @material-ui/icons.`,\n    )\n    iconComponent = Error\n  }\n  const isInFormGrid = useFormGridCheck()\n\n  const descriptionPart = (\n    <>\n      <Icon icon={iconComponent} color={Colors.greyDark} />\n      {label ? (\n        <div className={cn('label', { smallCaps: labelSmallCaps })}>\n          {label}\n        </div>\n      ) : null}\n    </>\n  )\n\n  return isInFormGrid ? (\n    <>\n      <StyledGridDescription labelMargin={labelMargin}>\n        {descriptionPart}\n      </StyledGridDescription>\n      <StyledGridContent>{children}</StyledGridContent>\n    </>\n  ) : (\n    <StyledIconLine\n      labelWidth={labelWidth}\n      labelWidthUnits={labelWidthUnits}\n      labelMargin={labelMargin}\n    >\n      <div className=\"description\">{descriptionPart}</div>\n      <div className=\"contents\">{children}</div>\n    </StyledIconLine>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/src/Select'\nimport { StylesConfig } from 'react-select/src/styles'\n\nimport { Colors, Spacing } from '../styling'\nimport { Printer } from './Printer'\n\nexport type TSelectControlProps<OptionType> = NoChildren &\n  Props<OptionType> & {\n    width?: number\n    minWidth?: number\n    maxHeight?: number\n    invalid?: boolean\n    hideOnSingleOption?: boolean\n  }\n\ntype TStyledProps = TSelectControlProps<unknown> & {\n  printing: boolean\n}\n\nfunction getControlStyles({ width, minWidth, invalid }: TStyledProps) {\n  const colors =\n    invalid === true\n      ? {\n          border: `1px solid ${Colors.red}`,\n          backgroundColor: Colors.errorBackground,\n        }\n      : {\n          border: `1px solid ${Colors.greyMiddle}`,\n        }\n  return {\n    ...colors,\n    margin: Spacing.MarginAroundFormComponents,\n    width: width !== undefined ? `${width}rem` : '100%',\n    minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n  }\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const controlStyles = { ...base, ...getControlStyles(state.selectProps) }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n  clearIndicator: base => ({\n    ...base,\n    cursor: 'pointer',\n  }),\n})\n\nexport function SelectControl<OptionType>({\n  hideOnSingleOption = false,\n  ...props\n}: TSelectControlProps<OptionType>) {\n  const getPrintContent = () => {\n    if (!props.value) {\n      return null\n    }\n    const formatWith: any = props.getOptionLabel || props.formatOptionLabel\n    if (!formatWith) {\n      return null\n    }\n    const valueText = Array.isArray(props.value)\n      ? props.value.map(formatWith)\n      : formatWith(props.value as OptionType)\n    return valueText.length === 0 ? null : (\n      <div>{`${props.placeholder}: ${valueText}`}</div>\n    )\n  }\n\n  if (hideOnSingleOption && props.options && props.options.length <= 1) {\n    return null\n  }\n\n  return (\n    <Printer toPrint={getPrintContent()}>\n      <Select<OptionType>\n        {...props}\n        components={{\n          ClearIndicator,\n          ...props.components,\n        }}\n        styles={composeSelectControlStyles(props.styles)}\n      />\n    </Printer>\n  )\n}\n\nfunction ClearIndicator(props) {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n","import { createStatePersistence } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { SelectControl } from '../../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../../graph/generated'\nimport { formatBranchName } from '../../helpers/formats'\nimport { useDropdownFilter } from '../../hooks/useDropdownFilter'\nimport { useDropdownMulti } from '../../hooks/useDropdownMulti'\nimport { useUserModel } from '../../hooks/useUserModel'\nimport { i18n } from '../../i18n'\nimport { idProp, RM } from '../../tools/ramda'\n\nexport const useBranchesFilterEditable = createStatePersistence<RoA<ID>>(\n  'branches',\n  [],\n)\n\nexport const BranchesFilter = React.memo<NoChildren>(() => {\n  const userModel = useUserModel()\n  const [branches, setBranches] = useBranchesFilterEditable()\n\n  const selectProps = {\n    options: userModel.branches,\n    placeholder: i18n.t`Filter branches...`,\n    formatOptionLabel: formatBranchName,\n    getOptionValue: idProp,\n    hideOnSingleOption: true,\n  }\n\n  const dropdownProps = useDropdownMulti<FCompanyBranchFragment>({\n    ...selectProps,\n    onSelectionChange: setBranches,\n    selected: branches,\n  })\n\n  const filterProps = useDropdownFilter<FCompanyBranchFragment>({\n    getOptionFilter: formatBranchName,\n  })\n\n  return (\n    <SelectControl<FCompanyBranchFragment>\n      {...dropdownProps}\n      {...filterProps}\n      {...selectProps}\n    />\n  )\n})\n\n/**\n * Access to currently persisted list of branches for filtering purposes.\n *\n * By default it will use all user branches if none are currently set.\n * This behavior can be disabled with argument.\n *\n * @param withUserBranchesWhenEmpty\n */\nexport function useBranchesFilter(withUserBranchesWhenEmpty = true): ID[] {\n  const userModel = useUserModel()\n  const [persistedBranches, setPersistedBranches] = useBranchesFilterEditable()\n  const persistenceKey = persistedBranches.join('|')\n\n  let selectedBranches = React.useMemo(() => {\n    return RM.intersection(userModel.branchesId, persistedBranches)\n    // persistedBranches reference changes every time -> use persistenceKey to decide whether the persistence truly changed\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [persistenceKey, userModel.branchesId])\n\n  const hasPersistedBranches = persistedBranches.length > 0\n  const hasAccessToAllPersistedBranches =\n    persistedBranches.length === selectedBranches.length\n\n  React.useEffect(() => {\n    if (hasPersistedBranches && !hasAccessToAllPersistedBranches) {\n      setPersistedBranches(selectedBranches)\n    }\n  }, [\n    hasAccessToAllPersistedBranches,\n    hasPersistedBranches,\n    selectedBranches,\n    setPersistedBranches,\n  ])\n\n  const noBranchSelected = selectedBranches.length === 0\n  const userHasOnlyOneBranch = userModel.branchesId.length === 1\n\n  if (userHasOnlyOneBranch || (noBranchSelected && withUserBranchesWhenEmpty)) {\n    selectedBranches = userModel.branchesId\n  }\n\n  const key = selectedBranches.join('|')\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useMemo(() => selectedBranches, [key])\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile, useResponsive } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => {\n  const { isMobile } = useResponsive()\n\n  return (\n    <StyledPageLayoutFullHeightItem\n      column={column}\n      row={row}\n      rowInMobile={rowInMobile}\n      widthInColumns={widthInColumns}\n      withScrollArea={withScrollArea}\n      forcePercentHeightInMobile={forceHeightInMobile}\n    >\n      {withScrollArea && !isMobile ? (\n        <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n      ) : (\n        <Sizer height={100} heightUnit=\"%\">\n          {children}\n        </Sizer>\n      )}\n    </StyledPageLayoutFullHeightItem>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useUserModel() {\n  const { user } = useRoot()\n  return user\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import React from 'react'\n\ntype TOptions<TSelectOption> = {\n  getOptionFilter?(option: TSelectOption): string\n}\n\nexport function useDropdownFilter<TSelectOption>({\n  getOptionFilter,\n}: TOptions<TSelectOption>) {\n  const isSearchable = typeof getOptionFilter === 'function'\n\n  const filterOption = React.useCallback(\n    (option, rawInput) => {\n      if (!getOptionFilter || rawInput.length === 0) {\n        return true\n      }\n      return getOptionFilter(option.data)\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    },\n    [getOptionFilter],\n  )\n\n  return { filterOption, isSearchable }\n}\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../app/Responsive'\n\nconst StyledFormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 0.1fr [desc] auto [content] 1fr;\n  grid-template-areas: '. desc content';\n  grid-auto-flow: row dense;\n\n  ${mediaMobile`\n    grid-template-columns: 1fr;\n    grid-template-areas:\n      'content';\n  `};\n`\n\ninterface IProps {}\nlet formGridCounter = 0\nconst formGridContext = React.createContext(formGridCounter)\n\nexport const FormGrid: React.FC<IProps> = props => {\n  return (\n    <StyledFormGrid>\n      <formGridContext.Provider value={++formGridCounter}>\n        {props.children}\n      </formGridContext.Provider>\n    </StyledFormGrid>\n  )\n}\n\nexport function useFormGridCheck() {\n  return React.useContext(formGridContext) > 0\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype TProps = SomeChildren & {\n  toPrint: ReactNodes\n}\n\nconst StyledPrinter = styled.div`\n  & .toPrint {\n    display: none;\n  }\n  @media print {\n    & .toPrint {\n      display: inline-block;\n    }\n    & .noPrint {\n      display: none;\n    }\n  }\n`\n\nexport const Printer: React.FC<TProps> = props => {\n  return (\n    <StyledPrinter>\n      <div className=\"toPrint\">{props.toPrint}</div>\n      <div className=\"noPrint\">{props.children}</div>\n    </StyledPrinter>\n  )\n}\n","var map = {\n\t\"./cs.svg\": 1400,\n\t\"./de.svg\": 1401,\n\t\"./en.svg\": 1402,\n\t\"./pl.svg\": 1403,\n\t\"./sk.svg\": 1404\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1399;","var map = {\n\t\"./logo-doveze.svg\": 1406,\n\t\"./logo-gopay.svg\": 1407,\n\t\"./logo-mastercard.svg\": 1408,\n\t\"./logo-visa.svg\": 1409\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1405;","import { useXField, useXFormState, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectControl, TSelectControlProps } from '../../atoms/SelectControl'\nimport { useDropdownFilter } from '../../hooks/useDropdownFilter'\nimport { useDropdownMulti } from '../../hooks/useDropdownMulti'\nimport { idProp } from '../../tools/ramda'\n\ntype TFormDropdownMultiProps<OptionType> = Omit<\n  TSelectControlProps<OptionType>,\n  'value' | 'onChange' | 'isMulti'\n> & {\n  fieldName: XFieldName\n  options: RoA<OptionType>\n  getOptionFilter?(option: OptionType): string\n}\n\nexport const FormDropdownMulti = <TOption extends any>({\n  fieldName,\n  getOptionValue = idProp as any,\n  getOptionFilter,\n  ...selectProps\n}: TFormDropdownMultiProps<TOption>) => {\n  const formState = useXFormState()\n  const field = useXField<RoA<ID>>(fieldName)\n\n  return useObserver(function useBody() {\n    const filterProps = useDropdownFilter({ getOptionFilter })\n    const dropdownProps = useDropdownMulti({\n      ...selectProps,\n      onSelectionChange: field.setValue,\n      selected: field.value,\n      getOptionValue,\n    })\n\n    return (\n      <SelectControl<TOption>\n        {...dropdownProps}\n        {...filterProps}\n        {...selectProps}\n        onFocus={() => field.setTouched()}\n        invalid={field.touched && field.hasError}\n        isDisabled={formState.isSubmitting}\n        getOptionValue={getOptionValue}\n      />\n    )\n  })\n}\n","import styled from 'styled-components/macro'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nexport const CardDock = styled.div<IProps>`\n  position: absolute;\n  ${({ position }) =>\n    position === 'BottomRight' || position === 'BottomLeft'\n      ? 'bottom: 0'\n      : 'top: 0'};\n  ${({ position }) =>\n    position === 'BottomLeft' || position === 'TopLeft'\n      ? 'left: 0'\n      : 'right: 0'};\n`\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst StyledTimeBadge = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid ${Colors.white};\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(StyledTimeBadge)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(StyledTimeBadge)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(StyledTimeBadge)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(StyledTimeBadge)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  line-height: 1.6rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge = React.forwardRef<HTMLDivElement, ITimeBadgeProps>(\n  ({ minutes, className, children, variant, onClick }, ref) => {\n    const Variant = variants[variant]\n    let output = children\n    const extraClassNames = ['animated']\n    if (minutes !== undefined) {\n      if (minutes > 99 || minutes < -9) {\n        extraClassNames.push(bigNumberStyle)\n      }\n      if (minutes < -99) {\n        output = '‒'\n        extraClassNames.push(dashStyle)\n      } else {\n        output = minutes.toString()\n      }\n    }\n    if (onClick) {\n      extraClassNames.push(clickable)\n    }\n    return (\n      <Variant\n        ref={ref}\n        key={minutes}\n        onClick={onClick}\n        className={cx(\n          className,\n          {\n            heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n            pulse: variant === ETimeBadgeVariant.WARNING,\n          },\n          ...extraClassNames,\n        )}\n      >\n        {output}\n      </Variant>\n    )\n  },\n)\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import React from 'react'\n\nimport { ARRAY_EMPTY } from '../helpers/form'\n\ntype TOptions<TSelectOption> = {\n  options: RoA<TSelectOption> | null\n  selected: RoA<ID>\n  onSelectionChange: (selected: RoA<ID>) => void\n  getOptionValue(option: TSelectOption): string\n}\n\nexport function useDropdownMulti<TSelectOption>({\n  options,\n  selected,\n  onSelectionChange,\n  getOptionValue,\n}: TOptions<TSelectOption>) {\n  const value = React.useMemo(() => {\n    if (!Array.isArray(selected)) {\n      return null\n    }\n    return options === null\n      ? ARRAY_EMPTY\n      : options.filter(option => selected.includes(getOptionValue(option)))\n  }, [selected, options, getOptionValue])\n\n  const onChange = (option: unknown) => {\n    onSelectionChange(\n      option ? (option as TSelectOption[]).map(getOptionValue) : ARRAY_EMPTY,\n    )\n  }\n\n  return { value, onChange, isMulti: true }\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst StyledDelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return (\n      <TimeBadge variant={variant}>\n        <span role=\"img\" aria-label=\"Unknown\">\n          ❔\n        </span>\n      </TimeBadge>\n    )\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <StyledDelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n  @media print {\n    color: ${Colors.black};\n  }\n`\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n        ? customer.defaultPhone.phone\n        : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Note } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n}\n\nconst StyledCurrentNote = styled.span`\n  color: ${Colors.orange};\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note }) =>\n  note ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon={Note} labelMargin=\"0\">\n        <StyledCurrentNote>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </StyledCurrentNote>\n      </IconLine>\n    </>\n  ) : null\n","module.exports = __webpack_public_path__ + \"static/media/orderNotification.0aa2ebe9.mp3\";","import React from 'react'\n\nimport {\n  QFilterOccasionsOccasions,\n  useQFilterOccasions,\n} from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/form'\nimport { i18n } from '../../i18n'\nimport { RM } from '../../tools/ramda'\nimport { FormDropdownMulti } from '../forms/FormDropdownMulti'\nimport { useBranchesFilter } from './BranchesFilter'\n\ntype TOccasion = QFilterOccasionsOccasions\n\ntype TProps = NoChildren & {\n  markAsAvailable?(isAvailable: boolean): void\n}\n\nexport const OccasionsFilter = React.memo<TProps>(({ markAsAvailable }) => {\n  const branches = useBranchesFilter()\n  const { getStash, loading } = useQFilterOccasions({\n    branches,\n  })\n\n  const occasions = getStash(data => data.occasions)\n  const hasAnyOccasions = occasions !== null && occasions.length > 0\n\n  React.useEffect(() => {\n    if (markAsAvailable) {\n      markAsAvailable(hasAnyOccasions)\n    }\n  }, [hasAnyOccasions, markAsAvailable])\n\n  return (\n    <FormDropdownMulti<TOccasion>\n      fieldName=\"occasions\"\n      placeholder={i18n.t`Filter by occasions`}\n      options={occasions || ARRAY_EMPTY}\n      noOptionsMessage={() => i18n.t`No occasions`}\n      isLoading={loading}\n      getOptionLabel={RM.prop('title')}\n      getOptionFilter={RM.prop('title')}\n    />\n  )\n})\n","import './SectorsFilter.css'\n\nimport { useXField } from '@speedlo/xform'\nimport React from 'react'\nimport DropdownTreeSelect, {\n  DropdownTreeSelectProps,\n  TreeNode,\n} from 'react-dropdown-tree-select'\n\nimport {\n  FCompanyBranchFragment,\n  QFilterSectorsSectors,\n  useQFilterSectors,\n} from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/form'\nimport { useUserModel } from '../../hooks/useUserModel'\nimport { i18n } from '../../i18n'\nimport { idProp, idPropEq, RM } from '../../tools/ramda'\nimport { useBranchesFilter } from './BranchesFilter'\n\nconst DropdownTreeSelectMemo = React.memo<DropdownTreeSelectProps & NoChildren>(\n  ({ texts, data, onChange }) => {\n    // this wrapper is necessary because of the silly implementation of the component\n    // which basically resets the state on each render\n    return <DropdownTreeSelect texts={texts} data={data} onChange={onChange} />\n  },\n)\n\ntype TProps = NoChildren & {\n  markAsAvailable?(isAvailable: boolean): void\n}\n\ntype TSector = QFilterSectorsSectors\ntype TBranch = FCompanyBranchFragment\n\nexport const SectorsFilter = React.memo<TProps>(({ markAsAvailable }) => {\n  const userModel = useUserModel()\n  const branches = useBranchesFilter()\n  const hasSingleBranch = branches.length === 1\n\n  const { getStash } = useQFilterSectors({\n    branches,\n  })\n  const sectors = getStash(data => data.sectors)\n  const hasAnySectors = sectors !== null && sectors.length > 0\n\n  const treeData = React.useMemo(() => {\n    if (sectors === null) {\n      return null\n    }\n    if (hasSingleBranch) {\n      return buildForSingleBranch(sectors)\n    }\n    return buildWithBranches(\n      sectors,\n      userModel.branches.filter(branch => branches.includes(branch.id)),\n    )\n  }, [branches, hasSingleBranch, sectors, userModel])\n\n  const field = useXField<RoA<ID>>('sectors')\n\n  React.useEffect(() => {\n    if (markAsAvailable) {\n      markAsAvailable(hasAnySectors)\n    }\n  }, [hasAnySectors, markAsAvailable])\n\n  const onChange = React.useCallback(\n    (currentNode: TreeNode, selectedNodes: TreeNode[]) => {\n      const selectedSectorsId = selectedNodes.reduce(\n        (acc, node) => {\n          if (isBranchNode(node)) {\n            // with branch selected, its root sectors needs to be used\n            // in the filter instead\n            const branchNode = treeData!.find(idPropEq(node.value))\n            if (branchNode && branchNode.children) {\n              acc.push(...(branchNode.children as RoA<TSector>).map(idProp))\n            }\n          } else {\n            acc.push(node.value)\n          }\n          return acc\n        },\n        [] as ID[],\n      )\n      field.setValue(selectedSectorsId)\n    },\n    [field, treeData],\n  )\n\n  const texts = React.useMemo(\n    () => ({\n      placeholder: i18n.t`Filter by sectors`,\n      noMatches: i18n.t`No sectors`,\n    }),\n    [],\n  )\n\n  if (!hasAnySectors) {\n    return null\n  }\n\n  return (\n    <DropdownTreeSelectMemo\n      texts={texts}\n      data={treeData!}\n      onChange={onChange}\n    />\n  )\n})\n\nfunction buildForSingleBranch(sectors: RoA<TSector>) {\n  return getTreeFromFlatData({\n    flatData: sectors,\n    mapper: node => ({\n      label: node.name,\n      value: node.id,\n    }),\n    getParentKey(node) {\n      return node.parent ? node.parent.id : null\n    },\n    getKey(node) {\n      return node.id\n    },\n  })\n}\n\nconst branchKey = (branchId: ID) => `branch-${branchId}`\nfunction isBranchNode(node: TreeNode) {\n  return node.value.startsWith('branch')\n}\n\nfunction buildWithBranches(sectors: RoA<TSector>, branches: RoA<TBranch>) {\n  const sectorsPerBranch = RM.groupBy(\n    sector => sector.companyBranch.id,\n    sectors,\n  )\n\n  const flatData = [\n    ...sectors,\n    ...branches.filter(branch => {\n      return (\n        sectorsPerBranch[branch.id] && sectorsPerBranch[branch.id].length > 0\n      )\n    }),\n  ]\n\n  return getTreeFromFlatData({\n    flatData,\n    mapper: (node: TSector | TBranch) => ({\n      label: node.name,\n      id: isSector(node) ? node.id : branchKey(node.id),\n      value: isSector(node) ? node.id : branchKey(node.id),\n    }),\n    getParentKey(node) {\n      if (isSector(node)) {\n        if (node.parent) {\n          return node.parent.id\n        }\n        // sectors without parent gets the branch as parent\n        return branchKey(node.companyBranch.id)\n      }\n      return null // is branch, no parent\n    },\n    getKey(node) {\n      if (isSector(node)) {\n        return node.id\n      }\n      return branchKey(node.id)\n    },\n  })\n}\n\nfunction getTreeFromFlatData<T extends Record<string, any>, R>({\n  flatData,\n  mapper,\n  getKey,\n  getParentKey,\n}: {\n  flatData: RoA<T>\n  mapper(node: T): R\n  getKey(node: T): string\n  getParentKey(node: T): string | null\n}): Array<T & R & { children: T[] }> {\n  if (!flatData) {\n    return []\n  }\n\n  const rootKey = '@@'\n\n  const childrenToParents = { [rootKey]: [] as T[] }\n  flatData.forEach(child => {\n    const parentKey = getParentKey(child) || rootKey\n\n    if (parentKey in childrenToParents) {\n      childrenToParents[parentKey].push(child)\n    } else {\n      childrenToParents[parentKey] = [child]\n    }\n  })\n\n  if (!(rootKey in childrenToParents)) {\n    return []\n  }\n\n  const trav = (parent: T) => {\n    const parentKey = getKey(parent)\n    if (parentKey in childrenToParents) {\n      return {\n        ...parent,\n        ...mapper(parent),\n        children: childrenToParents[parentKey].map(child => trav(child)),\n      }\n    } else {\n      return {\n        ...parent,\n        ...mapper(parent),\n        children: ARRAY_EMPTY,\n      }\n    }\n  }\n\n  return childrenToParents[rootKey].map(child => trav(child))\n}\n\nfunction isSector(node: TSector | TBranch): node is TSector {\n  return Reflect.has(node, 'parent')\n}\n","import { SvgIcon } from '@material-ui/core'\nimport React from 'react'\n\nexport function createSvgIcon(\n  path: ReactNode,\n  displayName: string,\n): typeof SvgIcon {\n  const Component = React.memo(\n    React.forwardRef<SVGSVGElement, {}>((props, ref) => (\n      <SvgIcon data-mui-test={`${displayName}Icon`} ref={ref} {...props}>\n        {path}\n      </SvgIcon>\n    )),\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = `${displayName}Icon`\n  }\n\n  //@ts-ignore Some issue with ref being a string\n  return Component\n}\n","import React from 'react'\nimport { createSvgIcon } from './createSvgIcon'\n\nexport const FilterDisable = createSvgIcon(\n  <path d=\"M14.76,20.83L17.6,18L14.76,15.17L16.17,13.76L19,16.57L21.83,13.76L23.24,15.17L20.43,18L23.24,20.83L21.83,22.24L19,19.4L16.17,22.24L14.76,20.83M12,12V19.88C12.04,20.18 11.94,20.5 11.71,20.71C11.32,21.1 10.69,21.1 10.3,20.71L8.29,18.7C8.06,18.47 7.96,18.16 8,17.87V12H7.97L2.21,4.62C1.87,4.19 1.95,3.56 2.38,3.22C2.57,3.08 2.78,3 3,3V3H17V3C17.22,3 17.43,3.08 17.62,3.22C18.05,3.56 18.13,4.19 17.79,4.62L12.03,12H12Z\" />,\n  'FilterDisable',\n)\n","import React from 'react'\nimport { createSvgIcon } from './createSvgIcon'\n\nexport const FilterEnable = createSvgIcon(\n  <path d=\"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z\" />,\n  'FilterEnable',\n)\n","import { Popover } from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport { useXFormCtx } from '@speedlo/xform'\nimport { useLocalStore, useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Card } from '../../../atoms/Card'\nimport { Icon } from '../../../atoms/Icon'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { OccasionsFilter } from '../../../components/filters/OccasionsFilter'\nimport { SectorsFilter } from '../../../components/filters/SectorsFilter'\nimport { FilterDisable } from '../../../components/icons/FilterDisable'\nimport { FilterEnable } from '../../../components/icons/FilterEnable'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\nimport { TKitchenFormFilter } from '../kitchen.types'\n\nconst StyledPopup = styled(Popover)`\n  .MuiPopover-paper {\n    width: 30rem;\n    overflow-x: initial;\n    overflow-y: initial;\n  }\n  .close-button {\n    margin: -0.9rem -0.7rem 0rem auto;\n    padding: 0.7rem;\n    display: block;\n    width: 3rem;\n    text-align: right;\n  }\n`\n\nexport const KitchenFilters = React.memo<NoChildren>(() => {\n  const xform = useXFormCtx<TKitchenFormFilter>()\n\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const store = useLocalStore(() => ({\n    isOpen: false,\n    setOpen() {\n      this.isOpen = true\n    },\n    setClosed() {\n      this.isOpen = false\n    },\n    sectorsAvailable: false,\n    markSectorsAvailable(available: boolean) {\n      this.sectorsAvailable = available\n    },\n    occassionsAvailable: false,\n    markOccasionsAvailable(available: boolean) {\n      this.occassionsAvailable = available\n    },\n    get isEnabled() {\n      return this.sectorsAvailable || this.occassionsAvailable\n    },\n    get isActive() {\n      const { values, wasSubmitted } = xform.state\n      return (\n        wasSubmitted && (values.occasions.length > 0 || values.sectors.length)\n      )\n    },\n  }))\n\n  return useObserver(() => (\n    <>\n      <SizerButton>\n        <TouchButton\n          color={store.isActive ? Colors.green : Colors.greyMiddle}\n          icon={store.isActive ? FilterDisable : FilterEnable}\n          ref={buttonRef}\n          iconSize={2}\n          onClick={store.setOpen}\n          disabled={!store.isEnabled}\n        ></TouchButton>\n      </SizerButton>\n      <StyledPopup\n        open={store.isOpen}\n        keepMounted={true}\n        onClose={(ev, reason) => {\n          if (reason === 'backdropClick') {\n            xform.api.submitForm()\n          }\n          store.setClosed()\n        }}\n        anchorEl={buttonRef.current}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Card padding={1}>\n          <Icon\n            icon={Close}\n            color={Colors.greyMiddle}\n            fontSize={1}\n            className=\"close-button\"\n            onClick={() => {\n              xform.api.submitForm()\n              store.setClosed()\n            }}\n          />\n          <SectorsFilter markAsAvailable={store.markSectorsAvailable} />\n          <VerticalGap />\n          <OccasionsFilter markAsAvailable={store.markOccasionsAvailable} />\n          <VerticalGap />\n          <Sizer width={9} height={Spacing.ButtonHeight}>\n            <TouchButton\n              text={i18n.t`Filter`}\n              color={Colors.green}\n              onClick={() => {\n                xform.api.submitForm()\n                store.setClosed()\n              }}\n            />\n          </Sizer>\n        </Card>\n      </StyledPopup>\n    </>\n  ))\n})\n","import {\n  FKitchenCompletionOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenCompletionOrderListQuery,\n  SKitchenCompletionOrderListSubscription,\n  useQKitchenCompletionOrderList,\n  useSKitchenCompletionOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { RM } from '../../../tools/ramda'\nimport { TKitchenDeckInput } from '../kitchen.types'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\nconst sortForCompletion = RM.sortWith<FKitchenCompletionOrderFragment>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.prop('orderNumber')),\n  RM.ascend(RM.either(RM.prop('deliverAt'), RM.prop('createdAt'))),\n])\n\nexport function useKitchenCompletionDeck({\n  branches,\n  sectors,\n  occasions,\n}: TKitchenDeckInput) {\n  const skip = branches.length === 0\n\n  const variables = {\n    branches,\n    occasions,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQKitchenCompletionOrderList(\n    {\n      ...variables,\n      categories: requiredCategories,\n    },\n    { skip },\n  )\n  useOnConnectionRestored(refetch)\n\n  useSKitchenCompletionOrderList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data => sortForCompletion(data.orders))\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenCompletionOrderListSubscription,\n  prev: QKitchenCompletionOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order || !prev.orders) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { toJS } from 'mobx'\nimport React from 'react'\n\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { TKitchenDeckInput, TKitchenFormFilter } from '../kitchen.types'\n\nexport function useKitchenFilterForm() {\n  const branches = useBranchesFilter(false)\n\n  const [filters, setFilters] = React.useState<TKitchenFormFilter>({\n    occasions: [],\n    sectors: [],\n  })\n\n  const onFilterSubmit = React.useCallback((values: TKitchenFormFilter) => {\n    setFilters(toJS(values))\n  }, [])\n\n  const filterInput = React.useMemo(\n    () => ({\n      ...filters,\n      branches,\n    }),\n    [branches, filters],\n  )\n\n  return [filterInput, onFilterSubmit] as [\n    TKitchenDeckInput,\n    typeof onFilterSubmit,\n  ]\n}\n","import { XForm } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { QKitchenCompletionOrderListOrders } from '../../../graph/generated'\nimport { useKitchenCompletionDeck } from '../hooks/useKitchenCompletionDeck'\nimport { useKitchenFilterForm } from '../hooks/useKitchenFilterForm'\n\ntype TOrder = QKitchenCompletionOrderListOrders\n\nconst loaderContext = React.createContext<RoA<TOrder> | null>(null)\n\nexport const KitchenCompletionLoader: React.FC = observer(props => {\n  const [filters, onFilterSubmit] = useKitchenFilterForm()\n\n  const deck = useKitchenCompletionDeck(filters)\n\n  return (\n    <XForm initialValues={filters} onSubmit={onFilterSubmit}>\n      <loaderContext.Provider value={deck}>\n        {props.children}\n      </loaderContext.Provider>\n    </XForm>\n  )\n})\n\nexport function useKitchenCompletion() {\n  return React.useContext(loaderContext)\n}\n","import React from 'react'\n\nimport orderNotificationSound from '../assets/orderNotification.mp3'\nimport { useRoot } from '../atoms/RootProvider'\nimport { useIntervalSound } from '../hooks/useIntervalSound'\n\ntype TProps = {\n  shouldPlay: boolean\n  playNow?: boolean\n}\n\nexport const OrderNotificationSound = React.memo<TProps>(\n  ({ shouldPlay, playNow = false }) => {\n    const { config } = useRoot()\n    return useIntervalSound({\n      soundUrl: orderNotificationSound,\n      intervalSec: config.orderListSoundIntervalSec,\n      forcePlayNow: playNow,\n      shouldPlay,\n    })\n  },\n)\n","import styled from 'styled-components'\n\nexport const KitchenInfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n","import {\n  OrderRecipeStateEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../tools/ramda'\nimport { TKitchenCardState, TKitchenDeck } from '../kitchen.types'\n\nexport const kitchenRecipeStateMapping: Partial<\n  Record<OrderRecipeStateEnum, TKitchenCardState>\n> = {\n  [OrderRecipeStateEnum.Fresh]: 'todo',\n  [OrderRecipeStateEnum.Preparing]: 'progress',\n  [OrderRecipeStateEnum.Ready]: 'progress',\n  [OrderRecipeStateEnum.Cooked]: 'done',\n}\n\nexport const kitchenOrderStateMapping: Partial<\n  Record<OrderStateCategoryEnum, TKitchenCardState>\n> = {\n  [OrderStateCategoryEnum.NewOrders]: 'todo',\n  [OrderStateCategoryEnum.Preparing]: 'progress',\n  [OrderStateCategoryEnum.ReadyToDeliver]: 'done',\n}\n\nexport function useKitchenDeck() {\n  const initialState = (RM.mapObjIndexed(\n    () => [],\n    RM.invertObj(kitchenRecipeStateMapping),\n  ) as unknown) as TKitchenDeck\n\n  return { initialState }\n}\n","import {\n  FKitchenOrderBaseItems,\n  FKitchenOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { RM } from '../../../tools/ramda'\nimport {\n  TKitchenCardItem,\n  TKitchenCardOrder,\n  TKitchenDeck,\n  TKitchenDeckInput,\n} from '../kitchen.types'\nimport {\n  kitchenOrderStateMapping,\n  kitchenRecipeStateMapping,\n} from './useKitchenDeck'\n\nconst requiredCategories = Object.keys(\n  kitchenOrderStateMapping,\n) as OrderStateCategoryEnum[]\n\nexport function useKitchenOrderDeck({\n  branches,\n  occasions,\n  sectors,\n}: TKitchenDeckInput) {\n  const skip = branches.length === 0\n\n  const variables = {\n    branches,\n    occasions,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      ...variables,\n      categories: requiredCategories,\n    },\n    { skip },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data => normalizeToKitchenDeck(data.orders))\n}\n\nfunction normalizeToKitchenDeck(orders: RoA<FKitchenOrderFragment>) {\n  const cards: TKitchenCardOrder[] = orders.map(mapOrderToKitchenCard)\n  return RM.groupBy(o => o.state, cards) as TKitchenDeck\n}\n\nfunction mapOrderToKitchenCard(\n  order: FKitchenOrderFragment,\n): TKitchenCardOrder {\n  return {\n    ...order,\n    type: 'order',\n    state: kitchenOrderStateMapping[order.orderStateCategory]!,\n    time: order.deliverAt || order.createdAt,\n    items: order.items.map(mapOrderItemToCardItem),\n  }\n}\n\nexport function mapOrderItemToCardItem(\n  orderItem: FKitchenOrderBaseItems,\n): TKitchenCardItem {\n  return {\n    id: orderItem.id,\n    code: orderItem.recipe.code,\n    name: orderItem.recipe.name,\n    state: kitchenRecipeStateMapping[orderItem.state.enum]!,\n    isReady: kitchenRecipeStateMapping[orderItem.state.enum] === 'done',\n    sideDishes: orderItem.sidedishes.map(RM.prop('recipe')),\n  }\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order || !prev.orders) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { KeyboardArrowRight } from '@material-ui/icons'\nimport React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ntype TProps = NoChildren & ITouchButtonProps\n\nexport const KitchenCardButton: React.FC<TProps> = props => {\n  return (\n    <TouchButton\n      icon={KeyboardArrowRight}\n      width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n      color={Colors.green}\n      {...props}\n    />\n  )\n}\n","import React from 'react'\n\nimport {\n  OrderRecipeStateEnum,\n  OrderStateEnum,\n  useMKitchenOrderHandle,\n  useMKitchenOrderRecipeHandle,\n  useMKitchenSectorHandle,\n  useMKitchenSectorRecipeHandle,\n} from '../../../graph/generated'\nimport { useCanMutate } from '../../../hooks/useAccessGuard'\nimport { RM } from '../../../tools/ramda'\nimport { TKitchenCard, TKitchenCardItem } from '../kitchen.types'\n\nexport function useKitchenHandler() {\n  const canHandleOrder = useCanMutate('addOrderState')\n  const canHandleOrderRecipe = useCanMutate('updateOrderRecipeState')\n  const canHandleSector = useCanMutate('updateSectorRecipes')\n  const canHandleSectorRecipe = useCanMutate('updateSectorRecipe')\n\n  const [handleOrder] = useMKitchenOrderHandle()\n  const [handleOrderRecipe] = useMKitchenOrderRecipeHandle()\n  const [handleSector] = useMKitchenSectorHandle()\n  const [handleSectorRecipe] = useMKitchenSectorRecipeHandle()\n\n  const canHandleCard = (card: TKitchenCard) => {\n    if (card.state === 'todo') {\n      if (card.type === 'order' || card.type === 'completion') {\n        return canHandleOrder\n      }\n      if (card.type === 'sector') {\n        return canHandleSector\n      }\n    }\n    // ! temporary, should be removed when cashbox can finish those recipes\n    if (card.type === 'sector' && card.state === 'done') {\n      return canHandleSector\n    }\n    if (card.type === 'completion' && card.state === 'done') {\n      return canHandleOrder\n    }\n    return false\n  }\n\n  const canHandleCardItem = (card: TKitchenCard) => {\n    if (card.state !== 'todo') {\n      if (card.type === 'order' || card.type === 'completion') {\n        return canHandleOrderRecipe\n      }\n      if (card.type === 'sector') {\n        return canHandleSectorRecipe\n      }\n    }\n    return false\n  }\n\n  const handleCard = React.useCallback(\n    async (card: TKitchenCard) => {\n      if (card.type === 'order') {\n        await handleOrder({ orderId: card.id, state: OrderStateEnum.InProduce })\n      }\n      if (card.type === 'sector') {\n        if (card.state === 'todo') {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Preparing,\n          })\n        }\n        if (card.state === 'done') {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Finished,\n          })\n        }\n      }\n      if (card.type === 'completion') {\n        if (card.state === 'todo') {\n          await handleOrder({\n            orderId: card.id,\n            state: OrderStateEnum.Accepted,\n          })\n        }\n        if (card.state === 'done') {\n          await handleOrder({\n            orderId: card.id,\n            state: OrderStateEnum.Finished,\n          })\n        }\n      }\n    },\n    [handleOrder, handleSector],\n  )\n\n  const handleCardItem = React.useCallback(\n    async (card: TKitchenCard, item: TKitchenCardItem) => {\n      const nextItemState = getItemToggledState(card, item)\n      if (card.type === 'order' || card.type === 'completion') {\n        await handleOrderRecipe({\n          orderRecipeId: item.id,\n          state: nextItemState,\n        })\n      }\n      if (card.type === 'sector') {\n        await handleSectorRecipe({\n          sectorRecipeId: item.id,\n          state: nextItemState,\n        })\n\n        // special case to move a whole sector to done when all items are ready\n        // need to mark the one that was moved just now so the following condition can pass\n        item.isReady = nextItemState === OrderRecipeStateEnum.Ready\n        if (card.items.every(RM.propEq('isReady', true))) {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Cooked,\n          })\n        }\n      }\n    },\n    [handleOrderRecipe, handleSector, handleSectorRecipe],\n  )\n\n  return {\n    canHandleCard,\n    canHandleCardItem,\n    handleCard,\n    handleCardItem,\n  }\n}\n\nfunction getItemToggledState(\n  card: TKitchenCard,\n  item: TKitchenCardItem,\n): OrderRecipeStateEnum {\n  switch (item.state) {\n    case 'todo':\n    case 'progress': {\n      if (card.type === 'sector') {\n        return item.isReady\n          ? OrderRecipeStateEnum.Preparing\n          : OrderRecipeStateEnum.Ready\n      }\n      return OrderRecipeStateEnum.Cooked\n    }\n    case 'done': {\n      return OrderRecipeStateEnum.Preparing\n    }\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ntype TProps = NoChildren & {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<TProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\n\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\nimport { TKitchenCardItemCommon } from '../kitchen.types'\n\ntype TProps = NoChildren & {\n  item: TKitchenCardItemCommon\n  isChecked?: boolean\n  canHandle?: boolean\n  onHandle?(): void\n  isFirstSidedish?: boolean\n}\n\nconst firstSideDishStyle = css`\n  margin-top: -0.8rem;\n`\n\nconst StyledKitchenCardItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${(props: { isFirstSidedish: boolean }) =>\n    props.isFirstSidedish && firstSideDishStyle};\n\n  & .done-container {\n    flex: 0 0 2.4rem;\n  }\n\n  & .item-code {\n    flex: 0 0 4.1rem;\n    font-size: ${FontSizes.CompactCardBig};\n    color: ${Colors.black};\n    margin-top: 0.35rem;\n  }\n\n  & .item-name {\n    flex: 1 0;\n    color: ${Colors.greyMiddle};\n    margin: 0.4rem 0 0 0.5rem;\n  }\n`\n\nexport const KitchenCardItem: React.FC<TProps> = ({\n  item,\n  isChecked = false,\n  canHandle = false,\n  onHandle,\n  isFirstSidedish = false,\n}) => (\n  <StyledKitchenCardItem isFirstSidedish={isFirstSidedish}>\n    <div className=\"done-container\">\n      {canHandle && onHandle && (\n        <TouchCheckButton isChecked={isChecked} onClick={onHandle} />\n      )}\n    </div>\n    <div className=\"item-code\">{item.code}</div>\n    <div className=\"item-name\">{item.name}</div>\n  </StyledKitchenCardItem>\n)\n","import React, { Fragment } from 'react'\n\nimport { TKitchenCardItem } from '../kitchen.types'\nimport { KitchenCardItem } from './KitchenCardItem'\n\ninterface IProps {\n  items: RoA<TKitchenCardItem>\n  canHandle: boolean\n  onHandle(item: TKitchenCardItem): Promise<void>\n}\n\nexport const KitchenCardItems: React.FC<IProps> = ({\n  items,\n  canHandle,\n  onHandle,\n}) => {\n  return (\n    <div>\n      {items.map(item => (\n        <Fragment key={item.id}>\n          <KitchenCardItem\n            item={item}\n            isChecked={item.isReady}\n            canHandle={canHandle}\n            onHandle={() => onHandle(item)}\n          />\n          <>\n            {item.sideDishes.map((sideDish, idx) => (\n              <KitchenCardItem\n                key={`${item.id}-${sideDish.id}`}\n                item={sideDish}\n                isFirstSidedish={idx === 0 && canHandle}\n              />\n            ))}\n          </>\n        </Fragment>\n      ))}\n    </div>\n  )\n}\n","import { Star } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\nconst StyledKitchenOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 0.2rem;\n  top: 0.2rem;\n  z-index: 5;\n`\n\nexport const KitchenOrderStarIndicator: React.FC = () => {\n  return (\n    <StyledKitchenOrderStarIndicator data-testid=\"KitchenOrderStarIndicator\">\n      <Icon color={Colors.orange} icon={Star} />\n    </StyledKitchenOrderStarIndicator>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { useKitchenHandler } from '../hooks/useKitchenHandler'\nimport { TKitchenCardCompletion } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ntype TProps = NoChildren & {\n  card: TKitchenCardCompletion\n  showBranch: boolean\n}\n\nexport const StyledKitchenCardCompletion = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  padding-bottom: ${Spacing.Middle};\n  position: relative;\n\n  & .header {\n    display: flex;\n    flex-wrap: nowrap;\n  }\n\n  .order-branch {\n    padding: 0.5rem 1.2rem 0 0.5rem;\n    margin: 0 -0.3rem 0 0;\n    border-top-left-radius: ${Radiuses.Card};\n    background-color: ${Colors.green};\n    color: ${Colors.white};\n  }\n\n  & .order__number {\n    width: 4.5rem;\n    background: ${Colors.orange};\n    color: ${Colors.white};\n    font-size: 2rem;\n    border-top-left-radius: ${Radiuses.Card};\n    text-align: center;\n  }\n\n  & .order__source {\n    display: inline-block;\n    background: ${Colors.greyMiddle};\n    color: ${Colors.white};\n    font-size: 0.9rem;\n    padding: 0.1rem 0.8rem;\n    border-radius: 0.9rem;\n    margin: 0.5rem;\n  }\n\n  & .order__sector {\n    display: inline-block;\n    color: ${Colors.black};\n    margin: 0.5rem;\n  }\n\n  & .order__content {\n    margin: ${Spacing.Middle};\n  }\n`\n\nexport const KitchenCardCompletion: React.FC<TProps> = ({\n  card,\n  showBranch,\n}) => {\n  const handler = useKitchenHandler()\n  return (\n    <StyledKitchenCardCompletion data-testid=\"order-box\">\n      <div className=\"header\">\n        {showBranch && (\n          <div className=\"order-branch\">{card.companyBranch.name}</div>\n        )}\n        <div className=\"order__number\">{card.orderNumber}</div>\n        <div className=\"order__source\">{`${card.orderOrigin.code} ${\n          card.cashBox !== null ? card.cashBox.id : ''\n        }`}</div>\n        {card.sector && <div className=\"order__sector\">{card.sector.name}</div>}\n        {card.isPriority && <KitchenOrderStarIndicator />}\n      </div>\n\n      <div className=\"order__content\">\n        <KitchenCardItems\n          items={card.items}\n          canHandle={handler.canHandleCardItem(card)}\n          onHandle={item => handler.handleCardItem(card, item)}\n        />\n        {card.note && <div className=\"order__note\">{card.note}</div>}\n      </div>\n\n      {handler.canHandleCard(card) && (\n        <CardDock position=\"BottomRight\">\n          <KitchenCardButton\n            color={card.state === 'todo' ? Colors.green : Colors.red}\n            onClick={() => handler.handleCard(card)}\n          />\n        </CardDock>\n      )}\n    </StyledKitchenCardCompletion>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Mobile } from '../../../app/Responsive'\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport {\n  FKitchenCompletionOrderFragment,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { RM } from '../../../tools/ramda'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { kitchenOrderStateMapping } from '../hooks/useKitchenDeck'\nimport { mapOrderItemToCardItem } from '../hooks/useKitchenOrderDeck'\nimport { TKitchenCardCompletion } from '../kitchen.types'\nimport { KitchenCardCompletion } from '../molecules/KitchenCardCompletion'\nimport { useKitchenCompletion } from './KitchenCompletionLoader'\n\ntype TProps = NoChildren & {\n  category: OrderStateCategoryEnum\n  noOrdersMessage: ReactNode\n  mobileHeadline: ReactNode\n}\n\nexport const KitchenCompletionShelf = observer<TProps>(\n  ({ category, noOrdersMessage, mobileHeadline }) => {\n    const branches = useBranchesFilter(false)\n    const orders = useKitchenCompletion()\n\n    if (branches.length === 0) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Select a branch</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (orders === null) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Loading</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    const cards = orders\n      .filter(RM.propEq('orderStateCategory', category))\n      .map(mapOrderToKitchenCard)\n\n    if (cards.length === 0) {\n      return <KitchenInfoMessage>{noOrdersMessage}</KitchenInfoMessage>\n    }\n\n    const shouldPlayNotification = category === OrderStateCategoryEnum.NewOrders\n\n    return (\n      <>\n        {mobileHeadline && (\n          <Mobile>\n            <CardListTitle>{mobileHeadline}</CardListTitle>\n          </Mobile>\n        )}\n        <div data-testid={`order-list-${category}`}>\n          {cards.map(card => (\n            <KitchenCardCompletion\n              key={card.id}\n              card={card}\n              showBranch={branches.length > 1}\n            />\n          ))}\n        </div>\n        <OrderNotificationSound shouldPlay={shouldPlayNotification} playNow />\n      </>\n    )\n  },\n)\n\nfunction mapOrderToKitchenCard(\n  order: FKitchenCompletionOrderFragment,\n): TKitchenCardCompletion {\n  return {\n    ...order,\n    type: 'completion',\n    state: kitchenOrderStateMapping[order.orderStateCategory]!,\n    time: order.deliverAt || order.createdAt,\n    items: order.items.map(mapOrderItemToCardItem),\n  }\n}\n","import {\n  FKitchenSectorRecipeFragment,\n  OrderRecipeStateEnum,\n  QKitchenSectorListQuery,\n  QKitchenSectorListSectors,\n  SKitchenSectorListSubscription,\n  useQKitchenSectorList,\n  useSKitchenSectorList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { RM } from '../../../tools/ramda'\nimport {\n  TKitchenCardItem,\n  TKitchenCardState,\n  TKitchenDeck,\n  TKitchenDeckInput,\n} from '../kitchen.types'\nimport { kitchenRecipeStateMapping } from './useKitchenDeck'\n\nconst requiredStates = Object.keys(\n  kitchenRecipeStateMapping,\n) as OrderRecipeStateEnum[]\n\nexport function useKitchenSectorDeck({ branches, sectors }: TKitchenDeckInput) {\n  const skip = branches.length === 0\n\n  const variables = {\n    branches,\n    sectors,\n  }\n\n  const { getStash, updateQuery, refetch } = useQKitchenSectorList(\n    {\n      ...variables,\n      states: requiredStates,\n    },\n    { skip },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenSectorList(\n    {\n      ...variables,\n      // subscription needs to watch for finished state to remove such orders from view\n      states: requiredStates.concat(\n        OrderRecipeStateEnum.Finished,\n        OrderRecipeStateEnum.Canceled,\n      ),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return getStash(data =>\n    normalizeToKitchenDeck(data.sectorRecipes, data.sectors),\n  )\n}\n\nfunction normalizeToKitchenDeck(\n  sectorRecipes: RoA<FKitchenSectorRecipeFragment>,\n  sectors: RoA<QKitchenSectorListSectors>,\n) {\n  const makeKey = (sectorId: ID, state: TKitchenCardState) =>\n    `${sectorId}-${state}`\n\n  const initialState = (RM.mapObjIndexed(\n    () => [],\n    RM.invertObj(kitchenRecipeStateMapping),\n  ) as unknown) as TKitchenDeck\n\n  const groupedBySectorAndState = RM.groupBy(\n    ({ sector, state }) =>\n      makeKey(sector.id, kitchenRecipeStateMapping[state.enum]!),\n    sectorRecipes,\n  )\n\n  const sortByTime = RM.sortBy(RM.prop('createdAt'))\n\n  return sectors.reduce((acc, sector) => {\n    return RM.mapObjIndexed((cards, state) => {\n      const key = makeKey(sector.id, state as TKitchenCardState)\n      const relatedSectorRecipes = groupedBySectorAndState[key]\n      if (relatedSectorRecipes) {\n        const sortedRecipes = sortByTime(relatedSectorRecipes)\n        const items = sortedRecipes.map(\n          (sectorRecipe): TKitchenCardItem => ({\n            id: sectorRecipe.id,\n            code: sectorRecipe.recipe.code,\n            name: sectorRecipe.recipe.name,\n            state: kitchenRecipeStateMapping[sectorRecipe.state.enum]!,\n            isReady: [\n              OrderRecipeStateEnum.Ready,\n              OrderRecipeStateEnum.Cooked,\n            ].includes(sectorRecipe.state.enum),\n            sideDishes: sectorRecipe.sideDishes.map(RM.prop('recipe')),\n          }),\n        )\n        return cards.concat({\n          id: sector.id,\n          type: 'sector',\n          name: sector.name,\n          time: sortedRecipes[0].createdAt,\n          state: state as TKitchenCardState,\n          isPriority: false,\n          items,\n        })\n      }\n      return cards\n    }, acc) as TKitchenDeck\n  }, initialState)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenSectorListSubscription,\n  prev: QKitchenSectorListQuery,\n): QKitchenSectorListQuery {\n  const { sectorRecipe } = update.updatedSectorRecipe\n  if (!sectorRecipe || !prev.sectorRecipes) {\n    return prev\n  }\n  if (!requiredStates.includes(sectorRecipe.state.enum)) {\n    return {\n      ...prev,\n      sectorRecipes: prev.sectorRecipes.filter(s => s.id !== sectorRecipe.id),\n    }\n  }\n  let exists = false\n  const sectorRecipes = prev.sectorRecipes.map(s => {\n    if (s.id === sectorRecipe.id) {\n      exists = true\n      return sectorRecipe\n    }\n    return s\n  })\n  if (!exists) {\n    sectorRecipes.unshift(sectorRecipe)\n  }\n  return { ...prev, sectorRecipes }\n}\n","import { XForm } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { RM } from '../../../tools/ramda'\nimport { useKitchenFilterForm } from '../hooks/useKitchenFilterForm'\nimport { useKitchenOrderDeck } from '../hooks/useKitchenOrderDeck'\nimport { useKitchenSectorDeck } from '../hooks/useKitchenSectorDeck'\nimport { TKitchenCard, TKitchenCardState, TKitchenDeck } from '../kitchen.types'\n\nconst sortCards = RM.sortWith<TKitchenCard>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.prop('time')),\n])\n\nconst kitchenContext = React.createContext<TKitchenDeck | null>(null)\n\nexport const KitchenLoader = observer<SomeChildren>(({ children }) => {\n  const [filters, onFilterSubmit] = useKitchenFilterForm()\n\n  const orderDeck = useKitchenOrderDeck(filters)\n  const sectorDeck = useKitchenSectorDeck(filters)\n\n  const kitchenDeck =\n    orderDeck &&\n    sectorDeck &&\n    RM.mergeDeepWith(RM.concat, orderDeck, sectorDeck)\n\n  const sortedKitchenDeck =\n    kitchenDeck && (RM.mapObjIndexed(sortCards, kitchenDeck) as TKitchenDeck)\n\n  return (\n    <XForm initialValues={filters} onSubmit={onFilterSubmit}>\n      <kitchenContext.Provider value={sortedKitchenDeck}>\n        {children}\n      </kitchenContext.Provider>\n    </XForm>\n  )\n})\n\nexport function useKitchenDeck(state: TKitchenCardState) {\n  const kitchenDeck = React.useContext(kitchenContext)\n  return kitchenDeck && kitchenDeck[state]\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ntype TProps = NoChildren & {\n  deliverTime: Maybe<Date>\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<TProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { TKitchenCardOrder, TKitchenCardProps } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ntype TProps = NoChildren &\n  TKitchenCardProps<TKitchenCardOrder> & {\n    card: TKitchenCardOrder\n    showBranch: boolean\n  }\n\nconst StyledKitchenCardOrder = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n\n  .order-branch {\n    padding: 0.3rem 0.6rem;\n    margin: -0.2rem 0.3rem 0 -0.2rem;\n    align-self: flex-start;\n    border-top-left-radius: ${Radiuses.Card};\n    background-color: ${Colors.green};\n    color: ${Colors.white};\n  }\n\n  .order-ticker {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    padding: 0.2rem;\n    color: ${Colors.greyMiddle};\n  }\n\n  .details {\n    padding: 0 0.2rem 0.1rem 0.2rem;\n    position: relative;\n  }\n\n  .delivery-time-badge-container {\n    flex: 0 0 1.8rem;\n  }\n\n  .address-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .customer-identity-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .pickup-label {\n    font-style: italic;\n  }\n`\n\nexport const KitchenCardOrder: React.FC<TProps> = ({\n  card,\n  showBranch,\n  onHandle,\n  onHandleRecipe,\n  canHandle,\n  canHandleRecipe,\n}) => {\n  const getOrderDestination = () => {\n    if (card.sector !== null) {\n      return card.sector.name\n    }\n    if (\n      card.deliveryType &&\n      card.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <div className=\"pickup-label\">\n          <Trans>To pickup</Trans>\n        </div>\n      )\n    }\n    return formatAddress(card.address)\n  }\n\n  return (\n    <StyledKitchenCardOrder>\n      <div className=\"order-ticker\">\n        {showBranch && (\n          <div className=\"order-branch\">{card.companyBranch.name}</div>\n        )}\n\n        <div className=\"delivery-time-badge-container\">\n          <DeliveryTimeBadge\n            deliverAt={card.deliverAt ? new Date(card.deliverAt) : null}\n            deliveredAt={card.deliveredAt ? new Date(card.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={card.delayedDeliveryTime !== null}\n          />\n        </div>\n\n        <div className=\"address-container\">{getOrderDestination()}</div>\n\n        <div className=\"customer-identity-container\">\n          <CustomerIdentity customer={card.customer} />\n          <br />\n          {card.customer && card.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${card.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {card.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </div>\n      </div>\n\n      <div className=\"details\">\n        <HorizontalSeparator />\n        {card.isPriority && <KitchenOrderStarIndicator />}\n        <KitchenCardItems\n          items={card.items}\n          canHandle={canHandleRecipe}\n          onHandle={item => onHandleRecipe(card, item)}\n        />\n        <HorizontalSeparator />\n        <KitchenOrderAtSummary\n          deliverTime={card.deliverAt}\n          deliverType={\n            card.deliveryType &&\n            card.deliveryType.enum === DeliveryTypeEnum.Pickup\n              ? 'PERSONAL'\n              : 'DELIVER_UNTIL'\n          }\n        />\n        <NoteLine note={card.note} />\n        {canHandle && (\n          <CardDock position=\"BottomRight\">\n            <KitchenCardButton onClick={() => onHandle(card)} />\n          </CardDock>\n        )}\n      </div>\n    </StyledKitchenCardOrder>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { TKitchenCardProps, TKitchenCardSector } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\n\ntype TProps = NoChildren &\n  TKitchenCardProps<TKitchenCardSector> & {\n    card: TKitchenCardSector\n  }\n\nconst StyledKitchenCardSector = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n\n  .details {\n    padding: 0 0.2rem 0.1rem 0.2rem;\n    position: relative;\n  }\n\n  .sector-name {\n    padding: 0.3rem 0 0.3rem 2.5rem;\n    font-size: 1.1rem;\n  }\n`\n\nexport const KitchenCardSector: React.FC<TProps> = ({\n  card,\n  canHandle,\n  canHandleRecipe,\n  onHandle,\n  onHandleRecipe,\n}) => {\n  return (\n    <StyledKitchenCardSector>\n      <div className=\"sector-name\">{card.name}</div>\n\n      <div className=\"details\">\n        <HorizontalSeparator />\n        <KitchenCardItems\n          items={card.items}\n          canHandle={canHandleRecipe}\n          onHandle={item => onHandleRecipe(card, item)}\n        />\n        {canHandle && (\n          <>\n            <HorizontalSeparator />\n            <CardDock position=\"BottomRight\">\n              <KitchenCardButton\n                color={card.state === 'todo' ? Colors.green : Colors.pink}\n                onClick={() => onHandle(card)}\n              />\n            </CardDock>\n          </>\n        )}\n      </div>\n    </StyledKitchenCardSector>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Mobile } from '../../../app/Responsive'\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useBranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { useKitchenHandler } from '../hooks/useKitchenHandler'\nimport { TKitchenCardState } from '../kitchen.types'\nimport { KitchenCardOrder } from '../molecules/KitchenCardOrder'\nimport { KitchenCardSector } from '../molecules/KitchenCardSector'\nimport { useKitchenDeck } from './KitchenLoader'\n\ntype TProps = NoChildren & {\n  state: TKitchenCardState\n  noCardsMessage: ReactNode\n  mobileHeadline?: ReactNode\n}\n\nexport const KitchenShelf = observer<TProps>(\n  ({ state, noCardsMessage, mobileHeadline }) => {\n    const shelfCards = useKitchenDeck(state)\n    const branches = useBranchesFilter(false)\n    const handler = useKitchenHandler()\n\n    if (branches.length === 0) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Select a branch</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (shelfCards === null) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Loading</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (shelfCards.length === 0) {\n      return <KitchenInfoMessage>{noCardsMessage}</KitchenInfoMessage>\n    }\n\n    const shouldPlayNotification = state === 'todo'\n\n    return (\n      <>\n        {mobileHeadline && (\n          <Mobile>\n            <CardListTitle>{mobileHeadline}</CardListTitle>\n          </Mobile>\n        )}\n        <OrderNotificationSound shouldPlay={shouldPlayNotification} playNow />\n        {shelfCards.map(card => {\n          const commonProps = {\n            key: `${card.type}-${card.id}`,\n            canHandle: handler.canHandleCard(card),\n            canHandleRecipe: handler.canHandleCardItem(card),\n            onHandle: handler.handleCard,\n            onHandleRecipe: handler.handleCardItem,\n          }\n          if (card.type === 'order') {\n            return (\n              <KitchenCardOrder\n                card={card}\n                showBranch={branches.length > 1}\n                {...commonProps}\n              />\n            )\n          }\n          if (card.type === 'sector') {\n            return <KitchenCardSector card={card} {...commonProps} />\n          }\n          return null\n        })}\n      </>\n    )\n  },\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { BranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { Colors } from '../../../styling'\nimport { KitchenFilters } from '../molecules/KitchenFilters'\nimport { KitchenLoader } from '../organisms/KitchenLoader'\nimport { KitchenShelf } from '../organisms/KitchenShelf'\n\nexport const StyledKitchenFilterContainer = styled.div`\n  position: absolute;\n  left: 16rem;\n  top: 0.4rem;\n  width: calc(100vw - 36rem);\n  z-index: 120;\n`\n\nexport const KitchenCategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  left: -5px;\n  top: 0rem;\n`\n\nexport const KitchenOverviewPage: React.FC<NoChildren> = () => (\n  <KitchenLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      showSoundControl={true}\n      topContent={<KitchenFilters />}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <BranchesFilter />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <BranchesFilter />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenShelf\n          state=\"todo\"\n          noCardsMessage={<Trans>No new orders</Trans>}\n          mobileHeadline={<Trans>New orders</Trans>}\n        />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenShelf\n          state=\"progress\"\n          noCardsMessage={<Trans>No orders to prepare</Trans>}\n          mobileHeadline={<Trans>Orders to prepare</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenShelf\n          state=\"done\"\n          noCardsMessage={<Trans>No orders to deliver</Trans>}\n          mobileHeadline={<Trans>Orders to deliver</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenLoader>\n)\n\nexport default KitchenOverviewPage\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { BranchesFilter } from '../../../components/filters/BranchesFilter'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { KitchenFilters } from '../molecules/KitchenFilters'\nimport { KitchenCompletionLoader } from '../organisms/KitchenCompletionLoader'\nimport { KitchenCompletionShelf } from '../organisms/KitchenCompletionShelf'\nimport {\n  KitchenCategorySeparator,\n  StyledKitchenFilterContainer,\n} from './KitchenOverviewPage'\n\nexport const KitchenCompletionPage: React.FC<NoChildren> = () => (\n  <KitchenCompletionLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Completion`}\n      useBackButton={true}\n      showSoundControl={true}\n      topContent={<KitchenFilters />}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <BranchesFilter />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <BranchesFilter />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.NewOrders}\n          noOrdersMessage={<Trans>No new orders</Trans>}\n          mobileHeadline={<Trans>New orders</Trans>}\n        />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.Preparing}\n          noOrdersMessage={<Trans>No orders to complete</Trans>}\n          mobileHeadline={<Trans>Orders to complete</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.ReadyToDeliver}\n          noOrdersMessage={<Trans>No orders to hand over</Trans>}\n          mobileHeadline={<Trans>Orders to hand over</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenCompletionLoader>\n)\n\nexport default KitchenCompletionPage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ROUTE_KITCHEN, ROUTE_KITCHEN_COMPLETION } from '../kitchen.routes'\nimport { KitchenCompletionPage } from '../pages/KitchenCompletionPage'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps {}\n\nexport const KitchenRouting: React.FC<IProps> = () => {\n  return (\n    <Switch>\n      <SecureRoute exact path={ROUTE_KITCHEN} component={KitchenOverviewPage} />\n      <SecureRoute\n        path={ROUTE_KITCHEN_COMPLETION}\n        component={KitchenCompletionPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default KitchenRouting\n"],"sourceRoot":""}