{"version":3,"sources":["atoms/FormInputStyled.tsx","atoms/LoginPageBackground.tsx","assets/bg_login.jpg","assets/bg_login@2x.jpg","segments/login/molecules/PasswordPageGrid.tsx","segments/login/organisms/PasswordResetForm.tsx","segments/login/pages/PasswordResetPage.tsx","segments/login/routes/PasswordResetRoute.tsx"],"names":["invalidInputStyle","css","_templateObject","fullWidthStyle","_templateObject2","FormInputStyled","styled","input","_templateObject3","Spacing","MarginAroundFormComponents","_ref","inputFullWidth","_ref2","invalid","LoginPageBackground","div","backgroundImage","backgroundImage2x","module","exports","__webpack_require__","p","PasswordPageGrid","withConfig","displayName","componentId","Middle","Small","PasswordResetForm","inputRef","React","useRef","_React$useState","useState","_React$useState2","Object","slicedToArray","isSubmitting","setSubmitting","_useSnackBar","useSnackBar","enqueueError","enqueueSuccess","recoverPassword","asyncToGenerator","regenerator_default","a","mark","_callee","success","message","wrap","_context","prev","next","requestRecovery","current","value","sent","i18n","_","stop","apply","this","arguments","react_default","createElement","Fragment","placeholder","ref","disabled","MarginBox","margin","concat","TouchButton","onClick","color","Colors","green","height","_lingui_react","id","_callee2","loginName","url","fetch","response","_context2","appConfig","endpoint","window","headers","Accept","abrupt","json","t0","Sentry","withScope","scope","setLevel","Severity","Debug","setExtra","captureException","PasswordResetPage","PageTitle","title","PageLayoutGridItem","gridRow","gridColumn","Display","PasswordResetForm_PasswordResetForm","d","__webpack_exports__","PasswordResetRoute_PasswordResetRoute","PasswordResetRoute","useRoot","auth","isAuthenticatedUser","react_router","to","PasswordResetPage_PasswordResetPage"],"mappings":"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","file":"static/js/185.8e6a16b2.chunk.js","sourcesContent":["import styled, { css } from 'styled-components'\n\nimport { Spacing } from '../styling'\n\ninterface IFormInputStyled {\n  invalid?: boolean\n  inputFullWidth?: boolean\n}\n\nexport const invalidInputStyle = css`\n  border: 1px red solid;\n`\n\nexport const fullWidthStyle = css`\n  width: 100%;\n`\n\nexport const FormInputStyled = styled.input`\n  margin: ${Spacing.MarginAroundFormComponents};\n  ${({ inputFullWidth }: IFormInputStyled) => inputFullWidth && fullWidthStyle};\n  ${({ invalid }: IFormInputStyled) => invalid && invalidInputStyle};\n`\n","import styled from 'styled-components'\n\nimport backgroundImage from '../assets/bg_login.jpg'\nimport backgroundImage2x from '../assets/bg_login@2x.jpg'\n\nexport const LoginPageBackground = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n\n  @media only screen and (-webkit-min-device-pixel-ratio: 1.3),\n    only screen and (min--moz-device-pixel-ratio: 1.3),\n    only screen and (-o-min-device-pixel-ratio: 2.6/2),\n    only screen and (min-device-pixel-ratio: 1.3),\n    only screen and (min-width: 1024px) {\n    background-image: url(${backgroundImage2x});\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/media/bg_login.382d98be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg_login@2x.35ab1818.jpg\";","import styled from 'styled-components/macro'\n\nimport { Spacing } from '../../../styling'\n\nexport const PasswordPageGrid = styled.div`\n  display: grid;\n  width: 100vw;\n  height: 100vh;\n  grid-gap: ${Spacing.Middle};\n  grid-template-columns: repeat(16, 1fr);\n  grid-template-rows: repeat(7, 3rem);\n  padding: 0 ${Spacing.Small} 0 ${Spacing.Small};\n`\n","import { Trans } from '@lingui/macro'\nimport { Sentry } from '@speedlo/sentry'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { appConfig } from '../../../config'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\nexport const PasswordResetForm: React.FC = () => {\n  const inputRef = React.useRef<HTMLInputElement | null>(null)\n  const [isSubmitting, setSubmitting] = React.useState(false)\n  const { enqueueError, enqueueSuccess } = useSnackBar()\n  const recoverPassword = async () => {\n    setSubmitting(true)\n    const { success, message } = await requestRecovery(inputRef.current!.value)\n    if (success) {\n      enqueueSuccess(\n        i18n.t`Email to recover your password has been successfully sent.`,\n      )\n    } else {\n      enqueueError(message)\n    }\n    setSubmitting(false)\n  }\n  return (\n    <>\n      <FormInputStyled\n        placeholder={i18n.t`Login name`}\n        ref={inputRef}\n        disabled={isSubmitting}\n      />\n      <MarginBox margin={`${Spacing.Middle} 0 0 0`}>\n        <TouchButton\n          disabled={isSubmitting}\n          onClick={recoverPassword}\n          color={Colors.green}\n          height=\"auto\"\n        >\n          <Trans>Recover password</Trans>\n        </TouchButton>\n      </MarginBox>\n    </>\n  )\n}\n\nasync function requestRecovery(loginName: string) {\n  const url = `${appConfig.endpoint}/users/reset_password?login=${loginName}`\n  const fetch: TFetch = window.fetch\n  try {\n    const response = await fetch(url, {\n      headers: {\n        Accept: 'application/json',\n      },\n    })\n    return response.json()\n  } catch (err) {\n    Sentry.withScope(scope => {\n      scope.setLevel(Sentry.Severity.Debug)\n      scope.setExtra('loginName', loginName)\n      Sentry.captureException(err)\n    })\n    return {\n      success: false,\n      message: i18n.t`Unknown error while requesting password recovery`,\n    }\n  }\n}\n","import React from 'react'\n\nimport { LoginPageBackground } from '../../../atoms/LoginPageBackground'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { PasswordPageGrid } from '../molecules/PasswordPageGrid'\nimport { PasswordResetForm } from '../organisms/PasswordResetForm'\n\nexport const PasswordResetPage: React.FC = () => {\n  return (\n    <LoginPageBackground>\n      <PageTitle title={i18n.t`Password recovery`} />\n      <PasswordPageGrid>\n        <PageLayoutGridItem gridRow=\"2 / span 2\" gridColumn=\"6 / span 6\">\n          <PageTitle.Display />\n        </PageLayoutGridItem>\n        <PageLayoutGridItem gridRow=\"4 / span 6\" gridColumn=\"6 / span 6\">\n          <PasswordResetForm />\n        </PageLayoutGridItem>\n      </PasswordPageGrid>\n    </LoginPageBackground>\n  )\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { PasswordResetPage } from '../pages/PasswordResetPage'\n\nexport const PasswordResetRoute: React.FC = () => {\n  const { auth } = useRoot()\n  return auth.isAuthenticatedUser ? <Redirect to=\"/\" /> : <PasswordResetPage />\n}\n\nexport default PasswordResetRoute\n"],"sourceRoot":""}