{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/Headline.tsx","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/CanQuery.tsx","atoms/HorizontalSeparator.tsx","atoms/Price.tsx","atoms/FlexColumn.tsx","atoms/SelectControlFlat.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","hooks/useExecutableQuery.ts","atoms/DateTimeFormatProvider.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","atoms/RelativeLink.tsx","atoms/DeliveryMinutes.tsx","molecules/DeliveryTimeDialog.tsx","atoms/FormInputDateTime.tsx","atoms/FlexAutoHeight.tsx","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","atoms/ObserverWhen.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderWarePriceLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderIdLine.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/atoms/OrderTimeLabel.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareLine.tsx","segments/order/molecules/OrderWareList.tsx","segments/order/organisms/OrderDetail.graphql.ts","molecules/ConfirmButton.tsx","segments/order/molecules/OrderCancelButton.tsx","segments/order/molecules/OrderDeliveryToPickup.tsx","segments/order/molecules/OrderStateButton.tsx","hooks/useAccessGuard.ts","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/atoms/OrderBox.tsx","segments/overview/molecules/ClosureHistoryFilter.tsx","segments/overview/organisms/ClosureHistoryLoader.graphql.ts","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/pages/ClosureHistoryPage.tsx","atoms/MonospaceOutput.tsx","segments/overview/organisms/ClosureStatisticsContent.graphql.ts","segments/overview/organisms/ClosureStatisticsContent.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/pages/ClosurePage.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/molecules/StatisticsFilter.tsx","segments/overview/hooks/createStatisticsQuery.ts","segments/overview/organisms/DailyStatisticsLoader.graphql.ts","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/organisms/DailyStatisticsContent.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/molecules/StatisticsDriversFilter.tsx","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/organisms/OrdersStatisticsList.tsx","segments/overview/organisms/OrdersStatisticsSummary.tsx","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/routes/OverviewRoutes.tsx"],"names":["IconLineWrap","styled","div","withConfig","displayName","componentId","DescriptionContainer","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","Headline","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","NoAccess","PageLayoutFullHeightItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","id","FlexRowSingle","_ref$justify","justify","CanQuery","queryName","canQuery","HorizontalSeparator","_styling__WEBPACK_IMPORTED_MODULE_2__","HorizontalSeparatorStyled","_ref$visible","visible","Price","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","className","formatPrice","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","RM","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_6___default","hasSelection","onClick","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","map","idx","Component","defaultProps","prop","getItemValue","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","react","placeholder","i18n","_","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","FormSubmit","react_form__WEBPACK_IMPORTED_MODULE_2__","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","isEmpty","useExecutableQuery","query","client","useApolloClient","onError","useApolloDefender","result","useObservable","loading","error","wasExecuted","hasAnyError","Boolean","useReaction","makeError","err","variables","ApolloOperationError","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","execute","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","queryResult","wrap","_context","prev","next","sent","runInAction","ApolloError","graphQLErrors","t0","abrupt","stop","_x","reset","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","utils","MomentUtils","cancelIconPadding","_templateObject","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","red","orange","bigNumberStyle","dashStyle","_templateObject2","clickable","_templateObject3","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","companyBranch","_atoms_DeliveryTimeBadge__WEBPACK_IMPORTED_MODULE_10__","Date","orderStateCategory","OrderStateCategoryEnum","Cancel","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","formatAddress","address","_atoms_CustomerIdentity__WEBPACK_IMPORTED_MODULE_9__","_atoms_Price__WEBPACK_IMPORTED_MODULE_5__","totalSum","currency","code","isPaidWithCard","NoteLine","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_2__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_i18n__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","CurrentNoteStyled","span","PreviousNoteStyled","note","previousNote","RelativeLink","from","linkProps","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","deliveryMinutes","pickupMinutes","MinutesContainer","MinutesItem","DeliveryMinutes","onMinuteClick","initialMinutes","_React$useState","useState","_React$useState2","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setSelected","getMinutesForDeliveryType","yellow","type","DeliveryTimeDialog","onConfirm","onCancel","cancelText","refApi","_useState","_useState2","isOpen","setOpen","openDialog","closeDialog","current","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","open","onClose","_atoms_DeliveryMinutes__WEBPACK_IMPORTED_MODULE_4__","_TouchButton__WEBPACK_IMPORTED_MODULE_5__","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","FormInputDateTime","field","_ref$inline","inline","pickerProps","Picker","InlineDateTimePicker","DateTimePicker","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_6__","react_form__WEBPACK_IMPORTED_MODULE_4__","render","fieldApi","setValue","onOpen","setTouched","format","ampm","showTabs","maxDateMessage","_i18n__WEBPACK_IMPORTED_MODULE_5__","minDateMessage","AutoHeight","FormInputDate","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_5__","react_form__WEBPACK_IMPORTED_MODULE_3__","okLabel","cancelLabel","clearLabel","todayLabel","FlexRow","ObserverWhen","test","renderSuccess","renderFailure","ContactLines","phones","emails","renderContact","contact","description","isMail","href","replace","renderClickableLink","email","OrderCountLine","total","_lingui_react","values","OrderWareLineWrap","NameContainerStyled","OrderWarePriceLine","_ref$highlight","highlight","OrderCartTotalsContainer","OrderDetailTotals","OrderWarePriceLine_OrderWarePriceLine","tip","transportFee","coverPrice","totalDiscount","OrderOriginLabel","orderOrigin","OrderOriginEnum","DameJidlo","OrderIdLine","displayedId","OrderRuleLines","rules","join","OrderTimeLabel","DelayedDeliveryTimeLabel","DelayedOrderTimeLabel","OrderStats","stats","formatTimeWithoutTodayDate","driver","_order$driver$user","Timelapse","labelMap","_labelMap","defineProperty","NewOrders","i18nMark","Preparing","ReadyToDeliver","OnWay","Finished","OrderTimeLine","orderTiming","reject","createdAt","timing","CodeContainerStyled","OrderWareLine","OrderWareLine_OrderWareLineWrap","OrderWareLine_NameContainerStyled","OrderWareLine_PriceContainerStyled","OrderWareList","orderWares","orderWare","OrderWareLine_OrderWareLine","recipe","nameLabel","sidedishes","sidedish","QueryOrderDetail","buildQuery","gql","FPriceFragmentDoc","FEmailFragmentDoc","FPhoneFragmentDoc","FOrderDriverFragmentDoc","FOrderTimingFragmentDoc","ConfirmButton","confirmNode","_ref$initialColor","initialColor","_ref$confirmColor","confirmColor","_ref$confirmDisableMs","confirmDisableMs","_ref$resetToInitialMs","resetToInitialMs","SECOND","slicedToArray","needConfirm","setNeedConfirm","buttonRef","useRef","useEffect","timer","setTimeout","clearTimeout","TouchButton","OrderCancelButton","orderId","_useMCancelOrder","useMCancelOrder","cancelOrder","Sizer","ConfirmButton_ConfirmButton","OrderDeliveryToPickup","isDelivery","_useMOrderChangeToPic","useMOrderChangeToPickup","changeToPickup","text","stateLabels","_stateLabels","OrderStateEnum","Accepted","OrderStateButton","nextState","_useMOrderState","useMOrderState","updateOrderState","useAccessGuard","queries","mutations","every","DriverName","backgroundColor","background","height","ButtonHeight","borderWidth","borderRadius","Button","valueContainer","singleValue","fontSize","OrderDriverSelect","drivers","selectedDriver","isLoading","onSelect","onClear","onReload","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","Icon","react_select_esm","DropdownIndicator","OrderStateDeliver","branchId","canRead","_len","_key","useCanQuery","deliverOrder","_useMSelectOrderDrive","useMSelectOrderDriver","selectDriver","_useMRemoveOrderDrive","useMRemoveOrderDriver","removeDriver","_useQOrderDrivers","useQOrderDrivers","skip","refetch","OrderDriverSelect_OrderDriverSelect","orderDriver","orderDriverId","driverId","OrderStateFlowContainerWrapper","Control","OrderStateFlowContainer","Children","child","OrderStateTimeNotification","_useMOrderTimeNotific","useMOrderTimeNotification","sendTimeNotification","Messenger","OrderStateNewOrder","OrderStateFlowContainer_OrderStateFlowContainer","canCancel","OrderCancelButton_OrderCancelButton","OrderDeliveryToPickup_OrderDeliveryToPickup","OrderStateTimeNotification_OrderStateTimeNotification","OrderStateButton_OrderStateButton","OrderStateAcceptedOrder","canDeliver","OrderStateDeliver_OrderStateDeliver","OrderStateReadyToDeliverOrder","OrderStateOnWayOrder","OrderStateFinishedOrder","OrderStateFlow","_useQOrderState","useQOrderState","allowedCategories","isCancelable","stateProps","OrderStateFlow_OrderStateNewOrder","OrderStateFlow_OrderStateAcceptedOrder","OrderStateFlow_OrderStateReadyToDeliverOrder","OrderStateFlow_OrderStateOnWayOrder","OrderStateFlow_OrderStateFinishedOrder","OrderDetailContainerStyled","OrderDetail","fetchPolicy","OrderWareList_OrderWareList","OrderDetailTotals_OrderDetailTotals","OrderRuleLines_OrderRuleLines","allAppliedRules","OrderCountLine_OrderCountLine","customerOrdersCountCurrent","customerOrdersCountTotal","ContactLines_ContactLines","OrderIdLine_OrderIdLine","OrderTimeLine_OrderTimeLine","OrderStats_OrderStats","OrderStateFlow_OrderStateFlow","OrderBox_OrderBox","OrderBoxStyled","OrderBox","toggleOrderDetail","isOrderDetailOpen","ObserverWhen_ObserverWhen","OrderDetail_OrderDetail","ClosureHistoryFilter","autoOk","ClosureHistoryQuery","context","createContext","ClosureHistoryLoader","statistics","_useExecutableQuery","es","onSubmit","formValues","closureBranch","dateFrom","formatDateISO","dateTo","defaultValues","subDays","ClosureHistoryLoader_context","Provider","ClosureHistoryTable","observer","_useClosureHistory","useContext","Loading","financialReports","report","SizerButton","reportSequence","reportDatetime","index_es","ClosureCurrentButton","react_router_dom","ButtonToRight","ClosureStatisticsFilter","showCurrent","setClosureBranch","ClosureCurrentButton_ClosureCurrentButton","ClosureHistoryPage","ClosureHistoryLoader_ClosureHistoryLoader","FullPageLayout","pageTitle","useBackButton","backRoute","ClosureHistoryFilter_ClosureHistoryFilter","MonospaceOutputStyled","p","MonospaceOutput","RegExp","FinancialReport","ClosureStatisticsContent_graphql_templateObject","QueryFinancialReport","ClosureStatisticsContent","_ref$reportId","reportId","WithRoot","showReport","renderLoading","_ref4","lastReport","MonospaceOutput_MonospaceOutput","plainData","ClosureHistoryButton","ClosureSubmitButton","ClosureStatisticsControl","enqueueSuccess","useSnackBar","history","useRouterContext","_useMFinancialReportC","useMFinancialReportCreate","createClosure","useCallback","asyncToGenerator","regenerator_default","ClosureSubmitButton_ClosureSubmitButton","ClosureStatisticsControl_ButtonToRight","ClosureHistoryButton_ClosureHistoryButton","ClosurePage","match","ClosureStatisticsControl_ClosureStatisticsControl","params","ClosureStatisticsContent_ClosureStatisticsContent","StatisticsBranchFilter","setBranchFilter","clearBranchFilter","StatisticsFilter","0","branchesFilter","getInitialResult","DailyStatisticsQuery","DailyStatisticsLoader_graphql_templateObject","useStatisticsQuery","dateTimeFrom","dateTimeTo","executeFilter","isoDate","resetResult","DailyStatisticsLoader","_useStatisticsQuery","updateFilter","DailyStatisticsLoader_context","DailyStatisticsContent","_useDailyStatistics","dailyStatisticsPlain","categoryStatisticsPlain","deliveryStatisticsPlain","driversStatisticsPlain","DailyStatisticsPage","DailyStatisticsLoader_DailyStatisticsLoader","StatisticsBranchFilter_StatisticsBranchFilter","StatisticsFilter_StatisticsFilter","StatisticsDriversFilter","_useQAllDrivers","useQAllDrivers","setDriversFilter","intersection","toConsumableArray","formatFullName","useOrderStatisticsFilter","OrdersStatisticsLoader","autoFilter","setFilter","OrdersStatisticsLoader_context","OrdersStatisticsList","_useRoot","orderModel","orders","Map","loaderRef","measureCache","useMemo","CellMeasurerCache","defaultHeight","minHeight","_useQStatsOrdersCount","useQStatsOrdersCounts","countsData","countsLoading","clear","clearAll","resetLoadMoreRowsCache","JSON","stringify","executeList","QStatsOrdersListDocument","queryMoreOrders","startIndex","stopIndex","list","index","pagination","fromIndex","toIndex","shift","set","isRowLoaded","get","rowRenderer","parent","dist_es","columnIndex","rowIndex","cache","_ref5","measure","o","_countsData$stats$cou","counts","totalCount","finished","cancelled","_ref6","rowCount","loadMoreRows","_ref7","onRowsRendered","registerChild","rowHeight","deferredMeasurementCache","StatPanel","StatLabel","h1","StatValue","OrdersStatisticsSummary","_useQStatsOrders","useQStatsOrders","finishedOrders","onlinePayments","finishedCount","cancelledCount","fees","orderStatisticsPlain","OrdersStatisticsPage","setTodayOrdersFilter","OrdersStatisticsLoader_OrdersStatisticsLoader","FlexAutoHeight","OrdersStatisticsList_OrdersStatisticsList","PageLayout","layouts","i","x","y","w","h","showSoundControl","scrollPageTitle","ClosureButton","DailyStatisticsButton","OrdersStatisticsButton","OverviewPage","OverviewRoutes_OverviewRoutes","OverviewRoutes","PageTitle","react_router","SecureRoute","exact","path","NotFoundPage"],"mappings":"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","file":"static/js/173.a40ab6d5.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import {\n  ApolloOperationError,\n  useApolloClient,\n  useApolloDefender,\n} from '@speedlo/graphql'\nimport { useReaction } from '@speedlo/hooks'\nimport { ApolloError, QueryOptions } from 'apollo-client'\nimport { DocumentNode } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  error?: ApolloError\n  hasAnyError: boolean\n  wasExecuted: boolean\n}\n\nexport function useExecutableQuery<TData, TVariables>(\n  query: DocumentNode,\n  options: Partial<QueryOptions<TVariables>> = {},\n) {\n  const client = useApolloClient()\n  const { onError } = useApolloDefender()\n  const result: IQueryResult<TData> = useObservable({\n    data: null,\n    loading: false,\n    error: undefined,\n    wasExecuted: false,\n    get hasAnyError() {\n      return Boolean(result.error)\n    },\n  })\n  useReaction(\n    () => result.error,\n    error => {\n      if (error) {\n        onError(error)\n      }\n    },\n  )\n  const makeError = (err: ApolloError, variables: TVariables) => {\n    return new ApolloOperationError(err, query, { ...options, variables })\n  }\n  const execute = async (variables: TVariables) => {\n    result.loading = true\n    try {\n      const queryResult = await client.query<TData, TVariables>({\n        ...options,\n        query,\n        variables,\n      })\n      runInAction(() => {\n        result.wasExecuted = true\n        result.data = queryResult.data\n        result.loading = false\n        if (queryResult.errors && queryResult.errors.length > 0) {\n          result.error = makeError(\n            new ApolloError({ graphQLErrors: queryResult.errors }),\n            variables,\n          )\n        }\n      })\n    } catch (err) {\n      runInAction(() => {\n        result.error = makeError(err, variables)\n        result.loading = false\n      })\n    }\n    return result\n  }\n  const reset = () => {\n    runInAction(() => {\n      result.wasExecuted = false\n      result.data = null\n      result.error = undefined\n      result.loading = false\n    })\n  }\n  return { result, execute, reset }\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  DeliveryTypeEnum,\n  FOrderStateCategoryFragment,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { GOrderListTicker } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & FOrderStateCategoryFragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={\n              order.orderStateCategory === OrderStateCategoryEnum.Cancel\n            }\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          <Price\n            price={order.totalSum.value}\n            currencyCode={order.totalSum.currency.code}\n          />\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  initialMinutes?: number\n  deliveryType: DeliveryTypeEnum\n  onMinuteClick(minute: number): void\n}\n\nconst deliveryMinutes = [20, 30, 45, 60, 75, 90, 105, 120]\nconst pickupMinutes = [10, 20, 30, 45, 60, 75, 90]\n\nconst MinutesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst MinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport const DeliveryMinutes: React.FC<IProps> = ({\n  deliveryType,\n  onMinuteClick,\n  initialMinutes,\n}) => {\n  const [selected, setSelected] = React.useState(initialMinutes)\n  const options = getMinutesForDeliveryType(deliveryType)\n  return (\n    <MinutesContainer>\n      {options.map(minutes => (\n        <MinutesItem key={minutes}>\n          <TouchButton\n            onClick={() => {\n              setSelected(minutes)\n              onMinuteClick(minutes)\n            }}\n            color={selected === minutes ? Colors.yellow : Colors.green}\n          >\n            {minutes}\n          </TouchButton>\n        </MinutesItem>\n      ))}\n    </MinutesContainer>\n  )\n}\n\nexport function getMinutesForDeliveryType(type: DeliveryTypeEnum) {\n  return type === DeliveryTypeEnum.Pickup ? pickupMinutes : deliveryMinutes\n}\n","import { Trans } from '@lingui/macro'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport React, { MutableRefObject, useState } from 'react'\n\nimport { DeliveryMinutes } from '../atoms/DeliveryMinutes'\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  title: string\n  deliveryType: DeliveryTypeEnum\n  cancelText?: string\n  onConfirm(minutes: number): void\n  onCancel?(): void\n  refApi?: MutableRefObject<Maybe<IDeliveryTimeDialogApi>>\n  children?(props: IDeliveryTimeDialogApi): React.ReactElement<{}>\n}\n\nexport interface IDeliveryTimeDialogApi {\n  openDialog(): void\n  closeDialog(): void\n}\n\nexport const DeliveryTimeDialog: React.FC<IProps> = ({\n  title,\n  deliveryType,\n  onConfirm,\n  onCancel,\n  children,\n  cancelText,\n  refApi,\n}) => {\n  const [isOpen, setOpen] = useState(false)\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  if (refApi) {\n    refApi.current = { openDialog, closeDialog }\n  }\n\n  return (\n    <>\n      {children && children({ openDialog, closeDialog })}\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DeliveryMinutes\n            deliveryType={deliveryType}\n            onMinuteClick={minutes => {\n              closeDialog()\n              onConfirm(minutes)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <TouchButton\n            onClick={() => {\n              closeDialog()\n              if (onCancel) {\n                onCancel()\n              }\n            }}\n          >\n            {cancelText ? cancelText : <Trans>Cancel</Trans>}\n          </TouchButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import {\n  DateTimePicker,\n  DateTimePickerProps,\n  InlineDateTimePicker,\n} from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DateTimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n  inline?: boolean\n}\n\nexport const FormInputDateTime: React.FC<IProps> = ({\n  field,\n  inline = true,\n  ...pickerProps\n}) => {\n  const Picker = inline ? InlineDateTimePicker : DateTimePicker\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi =>\n          React.createElement(Picker, {\n            value: fieldApi.value,\n            onChange: value => fieldApi.setValue(value),\n            onOpen: () => fieldApi.setTouched(true),\n            format: 'lll',\n            ampm: false,\n            showTabs: false,\n            maxDateMessage: i18n.t`Date is too much in the future`,\n            minDateMessage: i18n.t`Date is too much in the past`,\n            ...pickerProps,\n          })\n        }\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nexport const AutoHeight = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import { DatePickerProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineDatePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"ll\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            todayLabel={i18n.t`Today`}\n            maxDateMessage={i18n.t`Date is too much in the future`}\n            minDateMessage={i18n.t`Date is too much in the past`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\ninterface IObserverWhenProps {\n  test(): boolean\n  renderSuccess(): ReactNode\n  renderFailure?(): ReactNode\n}\n\nexport const ObserverWhen: React.FC<IObserverWhenProps> = ({\n  test,\n  renderSuccess,\n  renderFailure,\n}) =>\n  useObserver(\n    () => (test() ? renderSuccess() : renderFailure ? renderFailure() : null),\n  )\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { FEmailFragment, FPhoneFragment } from '../../../graph/generated'\n\ninterface IContactLinesProps {\n  phones: ReadonlyArray<FPhoneFragment>\n  emails: ReadonlyArray<FEmailFragment>\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (FPhoneFragment | FEmailFragment)\n\nexport const ContactLines: React.FC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import { Plural, SelectOrdinal, Trans } from '@lingui/react'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.FC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  label: string\n  price: number\n  highlight?: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\n\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWarePriceLine: React.FC<IProps> = ({\n  label,\n  price,\n  highlight = false,\n}) => (\n  <OrderWareLineWrap>\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      {highlight ? (\n        <b>\n          <Price price={price} />\n        </b>\n      ) : (\n        <Price price={price} />\n      )}\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { OrderWarePriceLine } from './OrderWarePriceLine'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nconst OrderCartTotalsContainer = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.FC<IProps> = ({ order }) => (\n  <OrderCartTotalsContainer>\n    <OrderWarePriceLine label={i18n.t`Tips`} price={order.tip.value} />\n    <OrderWarePriceLine\n      label={i18n.t`Transport fee`}\n      price={order.transportFee.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Covers price`}\n      price={order.coverPrice.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Discount total`}\n      price={order.totalDiscount.value * -1}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Total price`}\n      price={order.totalSum.value}\n      highlight={true}\n    />\n  </OrderCartTotalsContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  GOrderDetailOrderOrigin,\n  OrderOriginEnum,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  displayedId: string\n  orderOrigin: GOrderDetailOrderOrigin\n}\n\nconst orderColorAccordingOrigin = ({ orderOrigin }: IProps) => {\n  switch (orderOrigin.enum) {\n    case OrderOriginEnum.DameJidlo:\n      return Colors.orange\n    default:\n      return Colors.greyLight\n  }\n}\n\nconst OrderOriginLabel = styled.div`\n  display: inline-block;\n  background: ${orderColorAccordingOrigin};\n  border-radius: 0.7rem;\n  margin: 0 0 0 1rem;\n  padding: 0.1rem 0.8rem;\n`\n\nexport const OrderIdLine: React.FC<IProps> = ({ displayedId, orderOrigin }) => (\n  <IconLine icon=\"format_list_numbered\" labelMargin=\"0\">\n    {displayedId}\n    <OrderOriginLabel orderOrigin={orderOrigin} displayedId={displayedId}>\n      {orderOrigin.code}\n    </OrderOriginLabel>\n  </IconLine>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: ReadonlyArray<string>\n}\n\nexport const OrderRuleLines: React.FC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import styled from 'styled-components'\n\nimport { Colors } from '../../../styling'\n\nexport const OrderTimeLabel = styled.div`\n  margin-left: 1rem;\n  display: inline-block;\n  color: ${Colors.greyMiddle};\n`\n","import { Trans } from '@lingui/macro'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GOrderDetailOrder } from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  order: GOrderDetailOrder\n}\n\nconst DelayedDeliveryTimeLabel = styled.span`\n  font-weight: bold;\n  color: ${Colors.orange};\n`\nconst DelayedOrderTimeLabel = styled(OrderTimeLabel)`\n  color: ${Colors.orange};\n`\n\nexport const OrderStats: React.FC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.delayedDeliveryTime) {\n    stats.push(\n      <div key=\"delayedDeliveryTime\">\n        <DelayedDeliveryTimeLabel>\n          {formatTimeWithoutTodayDate(order.delayedDeliveryTime)}\n        </DelayedDeliveryTimeLabel>\n        <DelayedOrderTimeLabel>\n          <Trans>Deliver at time</Trans>\n        </DelayedOrderTimeLabel>\n      </div>,\n    )\n  } else if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <OrderTimeLabel>\n          <Trans>Deliver on time</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <OrderTimeLabel>\n          <Trans>Driver</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  FOrderTimingOrderTiming,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  orderTiming: ReadonlyArray<FOrderTimingOrderTiming>\n}\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NewOrders]: i18nMark('Created'),\n  [OrderStateCategoryEnum.Preparing]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.OnWay]: i18nMark('On way'),\n  [OrderStateCategoryEnum.Finished]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.FC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <OrderTimeLabel>\n          {i18n._(labelMap[timing.orderStateCategory])}\n        </OrderTimeLabel>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.black};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.FC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React, { Fragment } from 'react'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: ReadonlyArray<GOrderDetail.Items>\n}\n\nexport const OrderWareList: React.FC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: GOrderDetail.Items) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FEmailFragmentDoc,\n  FOrderDriverFragmentDoc,\n  FOrderTimingFragmentDoc,\n  FPhoneFragmentDoc,\n  FPriceFragmentDoc,\n} from '../../../graph/generated'\nimport { GOrderDetail } from '../../../graph/types'\n\nexport const QueryOrderDetail = buildQuery<\n  GOrderDetail.Query,\n  GOrderDetail.Variables\n>(gql`\n  query GOrderDetail($id: ID!) {\n    order(id: $id) {\n      id\n      createdAt\n      deliverAt\n      delayedDeliveryTime\n      companyBranch {\n        id\n      }\n      customer {\n        emails {\n          ...FEmail\n        }\n        phones {\n          ...FPhone\n        }\n      }\n      customerOrdersCountCurrent\n      customerOrdersCountTotal\n      note\n      previousNote\n      allAppliedRules\n      items {\n        ...GOrderDetailWare\n        sidedishes: sideDishes {\n          ...GOrderDetailWare\n        }\n      }\n      totalSum {\n        ...FPrice\n      }\n      transportFee {\n        ...FPrice\n      }\n      coverPrice {\n        ...FPrice\n      }\n      totalDiscount {\n        ...FPrice\n      }\n      orderOrigin {\n        code\n        enum\n      }\n      tip {\n        ...FPrice\n      }\n      ...FOrderTiming\n      ...FOrderDriver\n    }\n  }\n\n  fragment GOrderDetailWare on OrderRecipe {\n    id\n    recipe {\n      id\n      code\n      nameLabel\n    }\n    price {\n      ...FPrice\n    }\n  }\n  ${FPriceFragmentDoc}\n  ${FEmailFragmentDoc}\n  ${FPhoneFragmentDoc}\n  ${FOrderDriverFragmentDoc}\n  ${FOrderTimingFragmentDoc}\n`)\n","import { SECOND } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { Colors } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  confirmNode: ReactNode | string\n  initialColor?: Colors\n  confirmColor?: Colors\n  confirmDisableMs?: number\n  resetToInitialMs?: number\n  onConfirm(): void\n}\n\nexport const ConfirmButton: React.FC<IProps> = ({\n  confirmNode,\n  initialColor = Colors.greyMiddle,\n  confirmColor = Colors.red,\n  confirmDisableMs = 300,\n  resetToInitialMs = 3 * SECOND,\n  children,\n  onConfirm,\n}) => {\n  const [needConfirm, setNeedConfirm] = React.useState(false)\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const onClick = () => {\n    if (needConfirm === false) {\n      buttonRef.current!.disabled = true\n      setNeedConfirm(true)\n      setTimeout(() => {\n        if (buttonRef.current) {\n          buttonRef.current.disabled = false\n        }\n      }, confirmDisableMs)\n    } else {\n      onConfirm()\n    }\n  }\n\n  React.useEffect(\n    () => {\n      if (needConfirm) {\n        const timer = setTimeout(() => {\n          setNeedConfirm(false)\n        }, resetToInitialMs)\n        return () => {\n          clearTimeout(timer)\n        }\n      }\n      return undefined\n    },\n    [resetToInitialMs, needConfirm],\n  )\n\n  return (\n    <TouchButton\n      ref={buttonRef}\n      onClick={onClick}\n      color={needConfirm ? confirmColor : initialColor}\n    >\n      {needConfirm ? confirmNode : children}\n    </TouchButton>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { useMCancelOrder } from '../../../graph/generated'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderCancelButton: React.FC<IProps> = ({ orderId }) => {\n  const [cancelOrder] = useMCancelOrder()\n\n  return (\n    <CardDock position=\"BottomLeft\">\n      <Sizer width={7.375}>\n        <ConfirmButton\n          confirmNode={<Trans>Really cancel?</Trans>}\n          onConfirm={() => {\n            cancelOrder({ orderId })\n          }}\n        >\n          <Trans>Cancel order</Trans>\n        </ConfirmButton>\n      </Sizer>\n    </CardDock>\n  )\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { useMOrderChangeToPickup } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderDeliveryToPickup: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [changeToPickup] = useMOrderChangeToPickup()\n  if (!isDelivery) {\n    return null\n  }\n  return (\n    <CanMutate mutationName=\"updateOrderDeliveryToPickup\">\n      <TouchButton\n        text={i18n.t`Change to pickup`}\n        onClick={() => {\n          changeToPickup({ orderId })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n}\n\nconst stateLabels = {\n  [OrderStateEnum.Accepted]: i18nMark('Accept order'),\n  [OrderStateEnum.Finished]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.FC<IProps> = ({ orderId, nextState }) => {\n  const [updateOrderState] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        text={i18n._(stateLabels[nextState])}\n        width=\"7.375rem\"\n        onClick={() => {\n          updateOrderState({ orderId, state: nextState })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = FDriverFragment\n\ninterface IProps {\n  drivers: ReadonlyArray<TDriver>\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst DriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst backgroundColor = {\n  background: Colors.greyMiddle,\n}\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...backgroundColor,\n    ...textColor,\n    height: Spacing.ButtonHeight + Spacing.DefaultSizeUnit,\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    ...backgroundColor,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n}\n\nexport const OrderDriverSelect: React.FC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers as TDriver[]}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver => {\n      if (driver === null) {\n        onClear()\n      } else {\n        onSelect(driver as TDriver)\n      }\n    }}\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <DriverName>{`${driver.firstName} ${driver.lastName}`}</DriverName>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useMOrderState,\n  useMRemoveOrderDriver,\n  useMSelectOrderDriver,\n  useQOrderDrivers,\n} from '../../../graph/generated'\nimport { useCanQuery } from '../../../hooks/useAccessGuard'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n}\n\nexport const OrderStateDeliver: React.FC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n}) => {\n  const canRead = useCanQuery('drivers')\n\n  const [deliverOrder] = useMOrderState()\n  const [selectDriver] = useMSelectOrderDriver()\n  const [removeDriver] = useMRemoveOrderDriver()\n\n  const { data, loading, refetch } = useQOrderDrivers(\n    {\n      branchId: [branchId],\n      orderId,\n    },\n    {\n      skip: !canRead,\n    },\n  )\n  return (\n    <CanMutate mutationName=\"createUserDeliveringOrder\">\n      <OrderDriverSelect\n        drivers={loading || !canRead ? [] : data.drivers}\n        selectedDriver={\n          loading ? null : data.order.driver && data.order.driver.user\n        }\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          const orderDriver = data.order.driver\n          if (orderDriver) {\n            removeDriver({ orderDriverId: orderDriver.id })\n          }\n        }}\n        onSelect={driver => {\n          selectDriver({ orderId, driverId: driver.id })\n          if (orderStateCategory !== OrderStateCategoryEnum.OnWay) {\n            deliverOrder({ orderId, state: OrderStateEnum.OnWay })\n          }\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst OrderStateFlowContainerWrapper = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n  height: ${Spacing.ButtonHeight + Spacing.DefaultSizeUnit};\n`\n\nconst Control = styled.div`\n  margin: 0 0 0 0.5rem;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.FC<IProps> = ({ children }) => (\n  <OrderStateFlowContainerWrapper>\n    {Children.map(children, (child, idx) => (\n      <Control key={idx}>{child}</Control>\n    ))}\n  </OrderStateFlowContainerWrapper>\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  DeliveryTypeEnum,\n  useMOrderTimeNotification,\n} from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { DeliveryTimeDialog } from '../../../molecules/DeliveryTimeDialog'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderStateTimeNotification: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [sendTimeNotification] = useMOrderTimeNotification()\n\n  return (\n    <CanMutate mutationName=\"orderNotifyCustomer\">\n      <DeliveryTimeDialog\n        title={\n          isDelivery\n            ? i18n.t`Send expected time of delivery to customer (in minutes)`\n            : i18n.t`Send expected time of pickup to customer (in minutes)`\n        }\n        deliveryType={\n          isDelivery ? DeliveryTypeEnum.Messenger : DeliveryTypeEnum.Pickup\n        }\n        onConfirm={minutes => {\n          sendTimeNotification({ orderId, minutes })\n        }}\n      >\n        {({ openDialog }) => (\n          <TouchButton iconName=\"schedule\" onClick={openDialog} />\n        )}\n      </DeliveryTimeDialog>\n    </CanMutate>\n  )\n}\n","import React from 'react'\n\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useQOrderState,\n} from '../../../graph/generated'\nimport { OrderCancelButton } from '../molecules/OrderCancelButton'\nimport { OrderDeliveryToPickup } from '../molecules/OrderDeliveryToPickup'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  orderStateCategory: OrderStateCategoryEnum\n  canCancel: boolean\n  canDeliver: boolean\n  isDelivery: boolean\n}\n\nconst OrderStateNewOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderDeliveryToPickup {...props} />\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Accepted} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderDeliveryToPickup {...props} />\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateReadyToDeliverOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    {props.isDelivery ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateFinishedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.FC<IProps> = ({ orderId, branchId }) => {\n  const { data, loading } = useQOrderState({\n    orderId,\n    branchId,\n  })\n\n  if (loading) {\n    return null\n  }\n\n  const {\n    order,\n    companyBranch: { allowedCategories },\n  } = data\n\n  const isDelivery =\n    order.deliveryType !== null &&\n    order.deliveryType.enum !== DeliveryTypeEnum.Pickup\n\n  const canDeliver =\n    isDelivery &&\n    (allowedCategories.includes(OrderStateCategoryEnum.OnWay) ||\n      allowedCategories.includes(OrderStateCategoryEnum.ReadyToDeliver))\n\n  const canCancel = order.isCancelable\n\n  const stateProps: IStateProps = {\n    orderId,\n    branchId,\n    orderStateCategory: order.orderStateCategory,\n    canCancel,\n    canDeliver,\n    isDelivery,\n  }\n  switch (order.orderStateCategory) {\n    case OrderStateCategoryEnum.NewOrders:\n      return <OrderStateNewOrder {...stateProps} />\n    case OrderStateCategoryEnum.Preparing:\n      return <OrderStateAcceptedOrder {...stateProps} />\n    case OrderStateCategoryEnum.ReadyToDeliver:\n      return <OrderStateReadyToDeliverOrder {...stateProps} />\n    case OrderStateCategoryEnum.OnWay:\n      return <OrderStateOnWayOrder {...stateProps} />\n    case OrderStateCategoryEnum.Finished:\n      return <OrderStateFinishedOrder {...stateProps} />\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderIdLine } from '../molecules/OrderIdLine'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { QueryOrderDetail } from './OrderDetail.graphql'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IOrderDetailProps {\n  orderId: string\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail: React.FC<IOrderDetailProps> = ({ orderId }) => (\n  <QueryOrderDetail\n    variables={{ id: orderId }}\n    fetchPolicy=\"cache-and-network\"\n    render={({ order }) => (\n      <>\n        <OrderDetailContainerStyled>\n          <HorizontalSeparator />\n          <OrderWareList orderWares={order.items} />\n          <OrderDetailTotals order={order} />\n          <OrderRuleLines rules={order.allAppliedRules}>\n            <OrderCountLine\n              current={order.customerOrdersCountCurrent}\n              total={order.customerOrdersCountTotal}\n            />\n          </OrderRuleLines>\n          <ContactLines\n            phones={order.customer.phones}\n            emails={order.customer.emails}\n          />\n          <NoteLine note={order.note} previousNote={order.previousNote} />\n          <HorizontalSeparator />\n          <OrderIdLine displayedId={order.id} orderOrigin={order.orderOrigin} />\n          <HorizontalSeparator />\n          <OrderTimeLine orderTiming={order.orderTiming} />\n          <OrderStats order={order} />\n        </OrderDetailContainerStyled>\n        <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ObserverWhen } from '../../../atoms/ObserverWhen'\nimport { FOrderStateCategoryFragment } from '../../../graph/generated'\nimport { GOrderListTicker } from '../../../graph/types'\nimport { Colors, Radiuses } from '../../../styling'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ntype TOrder = GOrderListTicker.Fragment & FOrderStateCategoryFragment\n\ninterface IProps {\n  order: TOrder\n  showBranch: boolean\n  toggleOrderDetail(orderId: ID): void\n  isOrderDetailOpen(orderId: ID): boolean\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox: React.FC<IProps> = ({\n  order,\n  showBranch,\n  toggleOrderDetail,\n  isOrderDetailOpen,\n}) => (\n  <OrderBoxStyled id={`order-${order.id}`}>\n    <OrderTicker\n      order={order}\n      showBranch={showBranch}\n      onClick={() => toggleOrderDetail(order.id)}\n    />\n    <ObserverWhen\n      test={() => isOrderDetailOpen(order.id)}\n      renderSuccess={() => <OrderDetail orderId={order.id} />}\n    />\n  </OrderBoxStyled>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const ClosureHistoryFilter = () => {\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateFrom\"\n          label={<Trans>From date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateTo\"\n          label={<Trans>To date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Trans>Show history for branch</Trans>\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const ClosureHistoryQuery = gql`\n  query GClosureHistory($branchId: ID!, $dateFrom: Date!, $dateTo: Date!) {\n    financialReports(\n      companyBranchId: $branchId\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      id\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n","import { subDays } from 'date-fns'\nimport React, { createContext, useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GClosureHistory } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\nimport { ClosureHistoryQuery } from './ClosureHistoryLoader.graphql'\n\nexport type TReports = GClosureHistory.FinancialReports\n\nconst context = createContext<IQueryResult<GClosureHistory.Query> | null>(null)\n\nexport const useClosureHistory = () => useContext(context)!\n\nexport const ClosureHistoryLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery<\n    GClosureHistory.Query,\n    GClosureHistory.Variables\n  >(ClosureHistoryQuery)\n\n  return (\n    <Form\n      onSubmit={(formValues: { dateFrom: Date; dateTo: Date }) => {\n        if (statistics.closureBranch) {\n          execute({\n            branchId: statistics.closureBranch,\n            dateFrom: formatDateISO(formValues.dateFrom),\n            dateTo: formatDateISO(formValues.dateTo),\n          })\n        }\n      }}\n      defaultValues={{ dateFrom: subDays(new Date(), 1), dateTo: new Date() }}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Typography } from '@material-ui/core'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading, wasExecuted } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (!wasExecuted) {\n    return (\n      <Typography variant=\"subheading\">\n        <em>\n          <Trans>Use the filter</Trans>\n        </em>\n      </Typography>\n    )\n  }\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (data && data.financialReports.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data &&\n        data.financialReports.map(report => (\n          <FlexRow key={report.id}>\n            <FlexColumn fixedWidth={true}>\n              <RelativeLink to={`../${report.id}`}>\n                <SizerButton>\n                  <TouchButton iconName=\"mode_edit\" />\n                </SizerButton>\n              </RelativeLink>\n            </FlexColumn>\n            <FlexColumn widthGrowIndex={1}>\n              {`[${report.reportSequence}] ${formatDateISO(\n                report.reportDatetime,\n              )}`}\n            </FlexColumn>\n          </FlexRow>\n        ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryFilter } from '../molecules/ClosureHistoryFilter'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.FC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <ClosureHistoryFilter />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n}\n\nconst MonospaceOutputStyled = styled.p`\n  color: white;\n  font-family: 'Lucida Console', Monaco, monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 1rem;\n  line-height: 1.8rem;\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nexport const MonospaceOutput: React.FC<IProps> = ({ text }) => (\n  <MonospaceOutputStyled>{formatOutput(text)}</MonospaceOutputStyled>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GClosureReportQuery } from '../../../graph/types'\n\nexport const FinancialReport = gql`\n  query GClosureReportQuery(\n    $branchId: ID!\n    $reportId: ID!\n    $showReport: Boolean!\n  ) {\n    lastReport: lastFinancialReport(companyBranchId: $branchId)\n      @skip(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n    report: financialReport(report: $reportId) @include(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n\nexport const QueryFinancialReport = buildQuery<\n  GClosureReportQuery.Query,\n  GClosureReportQuery.Variables\n>(FinancialReport)\n","import React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryFinancialReport } from './ClosureStatisticsContent.graphql'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent: React.FC<IProps> = ({\n  reportId = '',\n}) => (\n  <WithRoot\n    render={({ statistics }) =>\n      statistics.closureBranch ? (\n        <QueryFinancialReport\n          variables={{\n            branchId: statistics.closureBranch,\n            reportId,\n            showReport: Boolean(reportId),\n          }}\n          fetchPolicy=\"cache-and-network\"\n          renderLoading={false}\n          render={({ report, lastReport }, { loading }) =>\n            loading ? (\n              <MonospaceOutput text={i18n.t`Computing`} />\n            ) : (\n              <MonospaceOutput\n                text={reportId ? report!.plainData : lastReport.plainData}\n              />\n            )\n          }\n        />\n      ) : null\n    }\n  />\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick?(e: MouseEvent<HTMLButtonElement>): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.FC<IProps> = props => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <TouchButton\n      text={i18n.t`Create closure`}\n      color={Colors.green}\n      width=\"12rem\"\n      {...props}\n    />\n  </CanMutate>\n)\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useMFinancialReportCreate } from '../../../graph/generated'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nconst ButtonToRight = styled.div`\n  float: right;\n`\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const [createClosure] = useMFinancialReportCreate()\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      branchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <>\n      {showCurrent ? (\n        <ClosureCurrentButton />\n      ) : (\n        <ClosureSubmitButton\n          onClick={onSubmit}\n          disabled={!statistics.closureBranch}\n        />\n      )}\n      <ButtonToRight>\n        <ClosureHistoryButton />\n      </ButtonToRight>\n    </>\n  ))\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsContent } from '../organisms/ClosureStatisticsContent'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.FC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(statistics.branches)}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n    />\n  ))\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDateTime } from '../../../atoms/FormInputDateTime'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const StatisticsFilter = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeFrom\"\n          label={<Trans>From</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeTo\"\n          label={<Trans>To</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Plural\n            value={statistics.branchesFilter.length}\n            one=\"Show for one branch\"\n            few=\"Show for # branches\"\n            other=\"Show for # branches\"\n          />\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  ))\n}\n","import { isoDate } from '@speedlo/graphql'\nimport { DocumentNode } from 'graphql'\nimport { createContext } from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { DateTime } from '../../../graph/generated'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\n\ninterface IVariables {\n  readonly dateTimeFrom: DateTime\n  readonly dateTimeTo: DateTime\n  readonly branches: ReadonlyArray<string>\n}\n\nconst getInitialResult = () => ({\n  data: null,\n  loading: false,\n  hasAnyError: false,\n  wasExecuted: false,\n})\n\nexport function createStatisticsQuery<TData, TVariables extends IVariables>(\n  query: DocumentNode,\n) {\n  const context = createContext<IQueryResult<TData>>(getInitialResult())\n  const useStatisticsQuery = () => {\n    const { statistics } = useRoot()\n    const { result, execute, reset } = useExecutableQuery<TData, IVariables>(\n      query,\n    )\n    const executeFilter = () => {\n      reset()\n      execute({\n        branches: statistics.branchesFilter,\n        dateTimeFrom: isoDate(statistics.dateTimeFrom),\n        dateTimeTo: isoDate(statistics.dateTimeTo),\n      })\n    }\n    const defaultValues = {\n      dateTimeFrom: statistics.dateTimeFrom,\n      dateTimeTo: statistics.dateTimeTo,\n    }\n    return { result, executeFilter, resetResult: reset, defaultValues }\n  }\n  return {\n    context,\n    useStatisticsQuery,\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const DailyStatisticsQuery = gql`\n  query GDailyStatistics(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      categoryStatisticsPlain\n      dailyStatisticsPlain\n      deliveryStatisticsPlain\n      driversStatisticsPlain\n    }\n  }\n`\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GDailyStatistics } from '../../../graph/types'\nimport { createStatisticsQuery } from '../hooks/createStatisticsQuery'\nimport { DailyStatisticsQuery } from './DailyStatisticsLoader.graphql'\n\nexport type TOrdersStats = GDailyStatistics.Stats\n\nconst { useStatisticsQuery, context } = createStatisticsQuery<\n  GDailyStatistics.Query,\n  GDailyStatistics.Variables\n>(DailyStatisticsQuery)\n\nexport const useDailyStatistics = () => React.useContext(context)\n\nexport const DailyStatisticsLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, executeFilter, defaultValues } = useStatisticsQuery()\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n      defaultValues={defaultValues}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { i18n } from '../../../i18n'\nimport { useDailyStatistics } from './DailyStatisticsLoader'\n\nexport const DailyStatisticsContent = observer(() => {\n  const { data, loading } = useDailyStatistics()\n  if (!data) {\n    return null\n  }\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n  const { stats } = data\n  return (\n    <>\n      <Headline light={true}>\n        <Trans>Daily statistics</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.dailyStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By category</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.categoryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By type</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.deliveryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By driver</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.driversStatisticsPlain} />\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { DailyStatisticsContent } from '../organisms/DailyStatisticsContent'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment, useQAllDrivers } from '../../../graph/generated'\nimport { formatFullName } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ntype TDriver = FDriverFragment\n\nexport const StatisticsDriversFilter = observer(() => {\n  const { statistics } = useRoot()\n  const { data, loading } = useQAllDrivers({\n    branches: statistics.branchesFilter,\n  })\n  React.useEffect(\n    () => {\n      if (!loading) {\n        statistics.setDriversFilter(\n          RM.intersection(statistics.drivers, data.drivers.map(RM.prop('id'))),\n        )\n      }\n    },\n    [loading],\n  )\n  return (\n    <SelectControl\n      isMulti={true}\n      isClearable={true}\n      placeholder={i18n.t`Filter by drivers`}\n      isLoading={loading}\n      options={loading ? [] : [...data.drivers]}\n      value={\n        loading\n          ? []\n          : data.drivers.filter(driver =>\n              statistics.drivers.includes(driver.id),\n            )\n      }\n      formatOptionLabel={formatFullName}\n      getOptionValue={RM.prop('id')}\n      onChange={value => {\n        if (!value) {\n          statistics.setDriversFilter([])\n        } else {\n          statistics.setDriversFilter((value as TDriver[]).map(RM.prop('id')))\n        }\n      }}\n    />\n  )\n})\n","import { isoDate } from '@speedlo/graphql'\nimport React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { DateTime } from '../../../graph/generated'\n\ninterface IProps {\n  autoFilter?: string\n}\n\nexport interface IStatsOrdersFilter {\n  branches: ReadonlyArray<ID>\n  drivers: ReadonlyArray<ID>\n  dateTimeFrom: DateTime\n  dateTimeTo: DateTime\n}\n\nconst context = React.createContext<IStatsOrdersFilter | undefined>(undefined)\n\nexport const useOrderStatisticsFilter = () => React.useContext(context)\n\nexport const OrdersStatisticsLoader: React.FC<IProps> = ({\n  children,\n  autoFilter,\n}) => {\n  const { statistics } = useRoot()\n  const [filter, setFilter] = React.useState<IStatsOrdersFilter | undefined>()\n\n  const executeFilter = () => {\n    setFilter({\n      branches: [...statistics.branchesFilter],\n      drivers: [...statistics.drivers],\n      dateTimeFrom: isoDate(statistics.dateTimeFrom),\n      dateTimeTo: isoDate(statistics.dateTimeTo),\n    })\n  }\n\n  React.useEffect(\n    () => {\n      if (autoFilter) {\n        executeFilter()\n      }\n    },\n    [autoFilter],\n  )\n\n  const defaultValues = {\n    dateTimeFrom: statistics.dateTimeFrom,\n    dateTimeTo: statistics.dateTimeTo,\n  }\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n      defaultValues={defaultValues}\n    >\n      <context.Provider value={filter}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  IndexRange,\n  InfiniteLoader,\n  List,\n} from 'react-virtualized'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QStatsOrdersListDocument,\n  QStatsOrdersListList,\n  QStatsOrdersListQuery,\n  QStatsOrdersListVariables,\n  useQStatsOrdersCounts,\n} from '../../../graph/generated'\nimport { useExecutableQuery } from '../../../hooks/useExecutableQuery'\nimport { OrderBox } from '../../../segments/order/atoms/OrderBox'\nimport { useOrderStatisticsFilter } from './OrdersStatisticsLoader'\n\nexport const OrdersStatisticsList: React.FC = () => {\n  const { statistics, order: orderModel } = useRoot()\n  const filter = useOrderStatisticsFilter()\n\n  const orders = React.useRef(new Map<number, QStatsOrdersListList>())\n  const loaderRef = React.useRef<InfiniteLoader | null>(null)\n  const measureCache = React.useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: 55,\n        minHeight: 55,\n      }),\n    [],\n  )\n\n  const { data: countsData, loading: countsLoading } = useQStatsOrdersCounts(\n    filter,\n    { skip: !filter },\n  )\n\n  React.useEffect(\n    () => {\n      orders.current.clear()\n      measureCache.clearAll()\n      if (loaderRef.current) {\n        loaderRef.current.resetLoadMoreRowsCache(true)\n      }\n    },\n    [JSON.stringify(filter)],\n  )\n\n  const { execute: executeList } = useExecutableQuery<\n    QStatsOrdersListQuery,\n    QStatsOrdersListVariables\n  >(QStatsOrdersListDocument)\n\n  const queryMoreOrders = React.useCallback(\n    async ({ startIndex, stopIndex }: IndexRange) => {\n      if (filter) {\n        const result = await executeList({\n          ...filter,\n          pagination: {\n            fromIndex: startIndex,\n            toIndex: stopIndex,\n          },\n        })\n\n        if (result.data) {\n          const list = [...result.data.stats.orders.list]\n          for (let index = startIndex; index <= stopIndex; index++) {\n            const order = list.shift()\n            if (order) {\n              orders.current.set(index, order)\n            }\n          }\n        }\n      }\n    },\n    [filter],\n  )\n\n  const isRowLoaded = React.useCallback(\n    ({ index }) => orders.current.get(index) !== undefined,\n    [],\n  )\n\n  const rowRenderer = React.useCallback(({ index, key, style, parent }) => {\n    const order = orders.current.get(index)\n    if (order === undefined) {\n      return (\n        <div style={style} key={key}>\n          ...\n        </div>\n      )\n    }\n    return (\n      <CellMeasurer\n        key={key}\n        columnIndex={0}\n        rowIndex={index}\n        cache={measureCache}\n        parent={parent}\n      >\n        {({ measure }) => (\n          <div style={style}>\n            <OrderBox\n              order={order}\n              toggleOrderDetail={o => {\n                orderModel.list.toggleOrderDetail(o)\n                setTimeout(measure, 500)\n              }}\n              isOrderDetailOpen={orderModel.list.isOrderDetailOpen}\n              showBranch={statistics.branchesFilter.length > 1}\n            />\n          </div>\n        )}\n      </CellMeasurer>\n    )\n  }, [])\n\n  if (!filter) {\n    return null\n  }\n\n  if (countsLoading) {\n    return <Loading />\n  }\n\n  const { finished, cancelled } = countsData.stats.counts\n  const totalCount = finished + cancelled\n\n  if (totalCount === 0) {\n    return <Trans>No orders</Trans>\n  }\n\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <InfiniteLoader\n          rowCount={totalCount}\n          isRowLoaded={isRowLoaded}\n          loadMoreRows={queryMoreOrders}\n          ref={loaderRef}\n        >\n          {({ onRowsRendered, registerChild }) => (\n            <List\n              ref={registerChild}\n              onRowsRendered={onRowsRendered}\n              rowHeight={measureCache.rowHeight}\n              deferredMeasurementCache={measureCache}\n              rowCount={totalCount}\n              width={width}\n              height={height}\n              rowRenderer={rowRenderer}\n            />\n          )}\n        </InfiniteLoader>\n      )}\n    </AutoSizer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { Price } from '../../../atoms/Price'\nimport { useQStatsOrders } from '../../../graph/generated'\nimport { useOrderStatisticsFilter } from '../organisms/OrdersStatisticsLoader'\n\nconst StatPanel = styled.div`\n  margin: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n`\n\nconst StatLabel = styled.h1`\n  font-size: 1.5rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nconst StatValue = styled.h2`\n  font-size: 4rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const filter = useOrderStatisticsFilter()\n  const { data, loading } = useQStatsOrders(filter, { skip: !filter })\n  if (loading || !data) {\n    return null\n  }\n  const stats = data.stats.finishedOrders\n  return (\n    <>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total turnover</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Online payments</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Orders count</Trans>\n        </StatLabel>\n        <StatValue>{stats.finishedCount + stats.cancelledCount}</StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total commissions</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <MonospaceOutput text={data.stats.orderStatisticsPlain} />\n      </StatPanel>\n    </>\n  )\n})\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { AutoHeight } from '../../../atoms/FlexAutoHeight'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsDriversFilter } from '../molecules/StatisticsDriversFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { OrdersStatisticsList } from '../organisms/OrdersStatisticsList'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\nimport { OrdersStatisticsSummary } from '../organisms/OrdersStatisticsSummary'\n\ninterface IProps extends RouteComponentProps<{ filter?: string }> {}\n\nfunction getLayout() {\n  return [{ i: 'summary', x: 0, y: 1, w: 7, h: 1 }]\n}\n\nexport const OrdersStatisticsPage: React.FC<IProps> = ({ match }) => {\n  const { statistics } = useRoot()\n  if (match.params.filter === 'today') {\n    statistics.setTodayOrdersFilter()\n  }\n  return (\n    <OrdersStatisticsLoader autoFilter={match.params.filter}>\n      <PageLayoutFullHeightItem\n        withScrollArea={false}\n        row={1}\n        column={7}\n        widthInColumns={9}\n      >\n        <AutoHeight>\n          <OrdersStatisticsList />\n        </AutoHeight>\n      </PageLayoutFullHeightItem>\n\n      <PageLayout\n        layouts={getLayout()}\n        pageTitle={i18n.t`Orders statistics`}\n        showSoundControl={false}\n        scrollPageTitle={false}\n        useBackButton={true}\n      >\n        <div key=\"summary\">\n          <Card>\n            <StatisticsBranchFilter />\n            <StatisticsDriversFilter />\n            <StatisticsFilter />\n          </Card>\n\n          <OrdersStatisticsSummary />\n        </div>\n      </PageLayout>\n    </OrdersStatisticsLoader>\n  )\n}\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'OrdersStatistics', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'DailyStatistics', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'Closure', x: 4, y: 1, w: 2, h: 2 },\n  ]\n}\n\nexport const OverviewPage: React.FC<IProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders/:filter?`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n"],"sourceRoot":""}