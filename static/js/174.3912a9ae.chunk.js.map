{"version":3,"sources":["segments/settings/routes/SettingsRoutes.tsx","atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/FormInputTextBox.tsx","atoms/SelectControl.tsx","atoms/Headline.tsx","atoms/Sizer.tsx","atoms/FormInputStyled.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","atoms/FlexColumn.tsx","atoms/SelectControlFlat.tsx","segments/settings/atoms/WithSettings.tsx","molecules/FormSubmit.tsx","helpers/form.ts","organisms/CompanyBranchPicker.tsx","molecules/TouchButtonDelete.tsx","molecules/CompanyBranchDropdown.tsx","segments/settings/organisms/SettingsCompanyBranchPicker.tsx","atoms/MarginBox.tsx","atoms/CompanyBranch.tsx","atoms/CursorContainer.tsx","molecules/CompanyBranchFlatSelect.tsx","molecules/PageLayoutItem.tsx","atoms/DateTimeFormatProvider.tsx","atoms/FormInputCheckbox.tsx","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","segments/branchpreferences/routes/BranchPreferencesRoutes.tsx","segments/branchpreferences/pages/BranchPreferencesPage.tsx","segments/branchpreferences/organism/InvoicePreferencesForm.tsx","segments/branchpreferences/organism/SaveInvoicePreferencesButton.tsx","segments/branchpreferences/organism/StoppageForm.tsx","segments/businesshours/routes/BusinessHoursRoutes.tsx","segments/businesshours/pages/BusinessHoursPage.tsx","segments/businesshours/organisms/SpecificBusinessHourForm.tsx","atoms/FormInputTimeSpan.tsx","atoms/FormInputTime.tsx","segments/businesshours/molecules/SpecificModeSelector.tsx","segments/businesshours/organisms/SpecificBusinessHours.tsx","segments/businesshours/molecules/SpecificBusinessHourLine.tsx","segments/settings/pages/SettingsPage.tsx","segments/settings/organisms/BusinessHoursButton.tsx","segments/settings/organisms/MenuCategoryButton.tsx","segments/settings/organisms/MenuRecipeButton.tsx","segments/settings/organisms/MenuStockButton.tsx","segments/settings/organisms/MenuStockDepositButton.tsx","segments/settings/organisms/ZonesMenuButton.tsx"],"names":["_react","__webpack_require__","_reactRouter","_PageTitle","_i18n","_NotFoundPage","_LazyRoute","_SecureRoute","_BranchPreferencesRoutes","_BusinessHoursRoutes","_SettingsPage","ZoneMenuRoutes","default","lazy","Promise","all","e","then","t","bind","MenuRoutes","SettingsRoutes","match","createElement","Fragment","PageTitle","Route","path","title","i18n","_","Switch","SecureRoute","exact","component","SettingsPage","LazyRoute","BusinessHoursRoutes","BranchPreferencesRoutes","NotFoundPage","_interopRequireDefault","_styledComponents","_styling","_Icon","IconLineWrap","div","withConfig","displayName","DescriptionContainer","labelMargin","labelWidth","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","_a","icon","label","children","props","__rest","iconComponent","Icon","iconName","color","Colors","greyDark","nativeColor","_NoAccess","_RootProvider","mutationName","user","useRoot","canMutate","NoAccess","_reactForm","_validator","_FormInputStyled","FormInputTextBox","forwardRef","inputRef","field","inputFullWidth","isRequired","validatioName","validationMessage","validate","Field","value","isEmpty","fieldApi","FormInputStyled","_extends","onChange","ev","setTouched","setValue","target","invalid","Boolean","error","ref","_reactSelect","styles","composeSelectControlStyles","outerStyles","Object","assign","control","base","state","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","undefined","menu","menuStyles","zIndex","black","Headline","h2","light","greyLight","greyDarkest","size","_MarginBox","SizerContainer","widthUnit","height","heightUnit","className","wrap","MarginBox","_interopRequireWildcard","invalidInputStyle","css","fullWidthStyle","input","queryName","canQuery","FlexColumn","fixedWidth","widthGrowIndex","padding","_react2","_ramda","ItemStyled","textColor","isSelected","SelectorStyled","isInvalid","SelectControlFlat","Component","[object Object]","isMulti","selectedItem","selectedItems","this","Array","isArray","length","item","RM","contains","equals","onSingleSelection","onMultiSelection","isItemSelected","without","concat","items","isClearable","formatItem","hasSelection","onClick","updateSelection","Trans","id","map","idx","key","defaultProps","prop","getItemValue","_WithRoot","observe","render","WithRoot","settings","_form","_TouchButton","FormApi","form","TouchButton","green","disabled","isFormValid","submitting","preventDefault","submitForm","formState","errors","keys","fieldName","_CompanyBranchDropdown","_CompanyBranchFlatSelect","breakpoint","selectedBranches","onSelectionChange","onSelectionClear","getDropdownProps","branch","includes","branches","selectedBranch","find","filter","selected","CompanyBranchFlatSelect","CompanyBranchDropdown","onDelete","confirmText","ButtonHeight","window","confirm","_CompanyBranch","_SelectControl","ClearIndicator","getStyles","innerProps","restInnerProps","style","SelectControl","placeholder","options","getOptionValue","formatOptionLabel","CompanyBranch","filterOption","rawInput","data","name","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","cursor","selection","head","_mobxReactLite","_IconLine","_CompanyBranchPicker","useObserver","IconLine","CompanyBranchPicker","branchId","selectBranch","_CursorContainer","short","showBrand","CursorContainer","substr","brand","_SelectControlFlat","_reactRouterDom","_CanMutate","_CanQuery","route","layoutItem","Link","to","CanQuery","CanMutate","_moment","_materialUiPickers","MuiPickersUtilsProvider","utils","CheckboxStyled","Checkbox","white","Radiuses","TextComponent","defaultValue","inputProps","checked","_DateTimeFormatProvider","pickerProps","DateTimeFormatProvider","InlineDatePicker","onOpen","format","ampm","okLabel","cancelLabel","clearLabel","todayLabel","maxDateMessage","minDateMessage","FlexRow","_BranchPreferencesPage","BranchPreferencesPage","_Card","_Headline","_FullPageLayout","_SettingsCompanyBranchPicker","_InvoicePreferencesForm","_StoppageForm","FullPageLayout","pageTitle","Card","SettingsCompanyBranchPicker","StoppageForm","InvoicePreferencesForm","_FormInputTextBox","_SaveInvoicePreferencesButton","SaveButtonContainer","Form","SaveInvoicePreferencesButton","text","_FormInputCheckbox","FormInputCheckbox","_BusinessHoursPage","BusinessHoursPage","_SpecificBusinessHourForm","_SpecificBusinessHours","useBackButton","SpecificBusinessHours","SpecificBusinessHourForm","_dateFns","_FormInputDate","_FormInputTimeSpan","_Sizer","_formats","_FormSubmit","_BusinessHoursModel","_SpecificModeSelector","DateContainer","FormContainer","businessHours","onSubmit","submitSpecificHour","defaultValues","now","Date","date","openAt","setHours","setMinutes","closeAt","getDefaultValues","FormInputDate","fullDateFormat","minDate","fullWidth","SpecificModeSelector","Observer","specificMode","ESpecificHourMode","TIMESPAN","FormInputTimeSpan","fieldFrom","fieldTo","Sizer","FormSubmit","_FormInputTime","InlineWrap","FormInputTime","InlineTimePicker","_WithSettings","labels","i18nMark","FULLDAY","WithSettings","mode","changeSpecificMode","_SpecificBusinessHourLine","sortByDate","sort","ascend","or","not","QuerySpecificBusinessHours","queryProps","fetchPolicy","renderFragment","bsHour","SpecificBusinessHourLine","deleteSpecificHour","_FlexColumn","_FlexRow","_TouchButtonDelete","TouchButtonDelete","0","specificDateLocalized","closed","closedNote","formatLineTime","_PageLayout","_PageLayoutItem","_BusinessHoursButton","_MenuCategoryButton","_MenuRecipeButton","_MenuStockButton","_MenuStockDepositButton","_ZonesMenuButton","PageLayout","layouts","i","x","y","w","h","PageLayoutItem","BusinessHoursButton","MenuRecipeButton","MenuCategoryButton","MenuStockButton","MenuStockDepositButton","ZonesMenuButton","red","turquoise","violet"],"mappings":"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","file":"static/js/174.3912a9ae.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { LazyRoute } from '../../../routes/LazyRoute'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesRoutes } from '../../branchpreferences/routes/BranchPreferencesRoutes'\nimport { BusinessHoursRoutes } from '../../businesshours/routes/BusinessHoursRoutes'\nimport { SettingsPage } from '../pages/SettingsPage'\n\nconst ZoneMenuRoutes = React.lazy(() =>\n  import('../../../segments/zones/routes/ZoneMenuRoutes'),\n)\nconst MenuRoutes = React.lazy(() =>\n  import('../../../segments/menu/routes/MenuRoutes'),\n)\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const SettingsRoutes: React.SFC<ISettingsRoutesProps> = ({ match }) => {\n  return (\n    <>\n      <PageTitle.Route path={match.path} title={i18n.t`Settings`} />\n      <Switch>\n        <SecureRoute exact={true} path={match.path} component={SettingsPage} />\n        <LazyRoute path={`${match.path}/menu`} component={MenuRoutes} />\n        <LazyRoute path={`${match.path}/zones`} component={ZoneMenuRoutes} />\n        <Route\n          path={`${match.path}/businesshours`}\n          component={BusinessHoursRoutes}\n        />\n        <Route\n          path={`${match.path}/preferences`}\n          component={BranchPreferencesRoutes}\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </>\n  )\n}\n\nexport default SettingsRoutes\n","import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.SFC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.SFC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return user.canMutate(mutationName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { FormInputStyled } from './FormInputStyled'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  isRequired?: boolean\n  validatioName?: string\n  validationMessage?: string\n  inputFullWidth?: boolean\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputFullWidth = false,\n      isRequired,\n      validatioName,\n      validationMessage,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            if (validationMessage) {\n              return validationMessage\n            }\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            fieldApi.setTouched(true)\n            fieldApi.setValue(ev.target.value)\n          }}\n          inputFullWidth={inputFullWidth}\n          invalid={Boolean(fieldApi.error)}\n          // @ts-ignore\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../styling'\nimport { MarginBox } from './MarginBox'\n\ninterface IProps {\n  width?: number\n  widthUnit?: string\n  height?: number\n  heightUnit?: string\n  margin?: string\n  className?: string\n}\n\nconst widthProperty = ({\n  width: width,\n  widthUnit: widthUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (width === undefined) {\n    return ''\n  } else {\n    return `width: ${width}${widthUnit}`\n  }\n}\n\nconst heightProperty = ({\n  height: height,\n  heightUnit: heightUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (height === undefined) {\n    return ''\n  } else {\n    return `height: ${height}${heightUnit}`\n  }\n}\n\nconst SizerContainer = styled('div')`\n  ${widthProperty};\n  ${heightProperty};\n`\n\nexport const Sizer: React.FC<IProps> = ({\n  width,\n  widthUnit = Spacing.DefaultSizeUnit,\n  height,\n  heightUnit = Spacing.DefaultSizeUnit,\n  margin,\n  children,\n  className,\n  ...props\n}) => {\n  const wrap = (\n    <SizerContainer\n      width={width}\n      widthUnit={widthUnit}\n      height={height}\n      heightUnit={heightUnit}\n      className={className}\n      {...props}\n    >\n      {children}\n    </SizerContainer>\n  )\n\n  return margin === undefined ? (\n    wrap\n  ) : (\n    <MarginBox margin={margin}>{wrap}</MarginBox>\n  )\n}\n","import styled, { css } from 'styled-components'\n\nimport { Spacing } from '../styling'\n\ninterface IFormInputStyled {\n  invalid?: boolean\n  inputFullWidth?: boolean\n}\n\nconst invalidInputStyle = css`\n  border: 1px red solid;\n`\nconst fullWidthStyle = css`\n  width: 100%;\n`\nexport const FormInputStyled = styled.input`\n  margin: ${Spacing.MarginAroundFormComponents};\n  ${({ inputFullWidth }: IFormInputStyled) => inputFullWidth && fullWidthStyle};\n  ${({ invalid }: IFormInputStyled) => invalid && invalidInputStyle};\n`\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.SFC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.SFC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return user.canQuery(queryName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem != null\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { TSettingsModel } from '../models/SettingsModel'\n\ninterface IProps {\n  render(settings: TSettingsModel): ReactNode\n  observe?: boolean\n}\n\nexport const WithSettings: React.SFC<IProps> = ({ observe, render }) => (\n  <WithRoot observe={observe} render={({ settings }) => render(settings)} />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.SFC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = GCompanyBranch.Fragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import React from 'react'\n\nimport { Colors, Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps extends Omit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.SFC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => (\n  <TouchButton\n    iconName=\"delete\"\n    color={Colors.greyMiddle}\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    onClick={ev => {\n      ev.preventDefault()\n      if (!confirmText || window.confirm(confirmText)) {\n        onDelete()\n      }\n    }}\n    {...props}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<GCompanyBranch.Fragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<GCompanyBranch.Fragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.SFC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<GCompanyBranch.Fragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as GCompanyBranch.Fragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {\n  isMulti?: boolean\n  width?: number\n}\n\nexport const SettingsCompanyBranchPicker: React.FC<IProps> = ({\n  isMulti,\n  width,\n}) => {\n  const { settings } = useRoot()\n  return useObserver(() => (\n    <IconLine icon=\"store_mall_directory\">\n      <CompanyBranchPicker\n        selectedBranches={settings.branchId ? [settings.branchId] : undefined}\n        onSelectionChange={([branch]) => settings.selectBranch(branch)}\n        isMulti={isMulti}\n        isClearable={false}\n        getDropdownProps={() => ({ width })}\n      />\n    </IconLine>\n  ))\n}\n","import styled from 'styled-components'\n\nexport interface IProps {\n  margin: string\n  className?: string\n}\n\nexport const MarginBox = styled('div')`\n  margin: ${(props: IProps) => props.margin};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { GCompanyBranch } from '../graph/types'\n\ninterface ICompanyBranchProps {\n  branch: GCompanyBranch.Fragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.SFC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { GCompanyBranch } from '../graph/types'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.SFC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<GCompanyBranch.Fragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.SFC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import React from 'react'\nimport { Checkbox, FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { Colors, Radiuses, Spacing } from '../styling'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  label?: string\n}\n\nconst CheckboxStyled = styled(Checkbox)`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-color: ${Colors.white};\n  border: 1px solid ${Colors.greyMiddle};\n  padding: 1rem;\n  border-radius: ${Radiuses.TextComponent};\n  display: inline-block;\n  position: relative;\n  margin: ${Spacing.MarginAroundFormComponents};\n  outline: none;\n  &:checked {\n    background-color: ${Colors.white};\n    border: 1px solid ${Colors.greyMiddle};\n  }\n  &:checked:after {\n    content: '\\\\2714';\n    font-size: 2rem;\n    position: absolute;\n    top: -0.5rem;\n    left: 0.1rem;\n    color: ${Colors.greyDark};\n    overflow: hidden;\n  }\n`\n\nconst LabelStyled = styled.div`\n  display: inline-block;\n  margin: 0.4rem 0 0 0.5rem;\n  vertical-align: top;\n`\n\nexport const FormInputCheckbox: React.SFC<IProps> = ({\n  field,\n  label,\n  defaultValue,\n  children,\n  ...inputProps\n}) => (\n  <>\n    <CheckboxStyled\n      field={field}\n      checked={Boolean(defaultValue)}\n      {...inputProps}\n    />\n    {label && <LabelStyled>{label}</LabelStyled>}\n  </>\n)\n","import { DatePickerProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineDatePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"ll\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            todayLabel={i18n.t`Today`}\n            maxDateMessage={i18n.t`Date is too much in the future`}\n            minDateMessage={i18n.t`Date is too much in the past`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesPage } from '../pages/BranchPreferencesPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BranchPreferencesRoutes: React.SFC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      component={BranchPreferencesPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { InvoicePreferencesForm } from '../organism/InvoicePreferencesForm'\nimport { StoppageForm } from '../organism/StoppageForm'\n\ninterface IPreferencesPageProps {}\n\nexport const BranchPreferencesPage: React.SFC<\n  IPreferencesPageProps\n> = props => (\n  <FullPageLayout pageTitle={i18n.t`Branch preferences`}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <Headline>\n        <Trans id=\"branch.preferences.stoppage\">Stoppage</Trans>\n      </Headline>\n      <StoppageForm />\n\n      <Headline>\n        <Trans>Change of invoice preferences</Trans>\n      </Headline>\n      <InvoicePreferencesForm />\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { SaveInvoicePreferencesButton } from './SaveInvoicePreferencesButton'\n\ninterface IInvoicePreferencesFormProps {}\n\nconst SaveButtonContainer = styled.div`\n  margin-top: 1rem;\n  width: 15rem;\n`\n\nexport const InvoicePreferencesForm: React.SFC<\n  IInvoicePreferencesFormProps\n> = props => (\n  <Form>\n    <FormInputTextBox field=\"account\" placeholder=\"Název firmy\" />\n    <br />\n    <FormInputTextBox field=\"number\" placeholder=\"IČ\" />\n    <FormInputTextBox field=\"vatIdent\" placeholder=\"DIČ\" />\n\n    <SaveButtonContainer>\n      <SaveInvoicePreferencesButton />\n    </SaveButtonContainer>\n  </Form>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const SaveInvoicePreferencesButton: React.SFC = props => (\n  <TouchButton text={i18n.t`Save invoice preferences`} color={Colors.green} />\n)\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { i18n } from '../../../i18n'\n\ninterface IStoppageFormProps {}\n\nexport const StoppageForm: React.SFC<IStoppageFormProps> = props => (\n  <Form>\n    <FormInputCheckbox\n      field=\"onlyPersonalPickup\"\n      label={i18n.t`We are not delivering, only take away.`}\n    />\n    <br />\n    <FormInputCheckbox\n      field=\"stoppage\"\n      label={i18n.t`Completely stop all orders.`}\n    />\n  </Form>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BusinessHoursPage } from '../pages/BusinessHoursPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BusinessHoursRoutes: React.SFC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute exact={true} path={match.path} component={BusinessHoursPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../../segments/settings/organisms/SettingsCompanyBranchPicker'\nimport { SpecificBusinessHourForm } from '../organisms/SpecificBusinessHourForm'\nimport { SpecificBusinessHours } from '../organisms/SpecificBusinessHours'\n\nexport const BusinessHoursPage: React.SFC = () => (\n  <FullPageLayout pageTitle={i18n.t`Business hours`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      {/* <Headline>Pravidelné otevírací hodiny</Headline>\n      <RegularOpeningHours /> */}\n\n      <Headline>\n        <Trans>Specific business hours</Trans>\n      </Headline>\n      <SpecificBusinessHours />\n\n      <CanMutate mutationName=\"addSpecialBusinessHour\">\n        <Headline>\n          <Trans>Add specific business hour</Trans>\n        </Headline>\n        <SpecificBusinessHourForm />\n      </CanMutate>\n    </Card>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/react'\nimport { setHours, setMinutes } from 'date-fns'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { FormInputTimeSpan } from '../../../atoms/FormInputTimeSpan'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { fullDateFormat } from '../../../helpers/formats'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport {\n  ESpecificHourMode,\n  ISpecificFormData,\n} from '../models/BusinessHoursModel'\nimport { SpecificModeSelector } from '../molecules/SpecificModeSelector'\n\nconst DateContainer = styled.div`\n  display: inline-block;\n  width: 13rem;\n  margin-left: 1rem;\n  margin-top: 2rem;\n`\n\nconst FormContainer = styled.div`\n  display: inline-block;\n  width: 16rem;\n  min-height: 6rem;\n  margin: 0rem 0 0 1rem;\n  vertical-align: top;\n`\n\nexport const SpecificBusinessHourForm: React.FC = props => {\n  const {\n    settings: { businessHours },\n  } = useRoot()\n  return (\n    <Form\n      onSubmit={businessHours.submitSpecificHour}\n      defaultValues={getDefaultValues()}\n    >\n      <DateContainer>\n        <FormInputDate\n          field=\"date\"\n          format={fullDateFormat}\n          minDate={new Date()}\n          fullWidth={true}\n          label={<Trans>Date</Trans>}\n        />\n      </DateContainer>\n\n      <FormContainer>\n        <SpecificModeSelector />\n        <Observer>\n          {() =>\n            businessHours.specificMode === ESpecificHourMode.TIMESPAN ? (\n              <FormInputTimeSpan fieldFrom=\"openAt\" fieldTo=\"closeAt\" />\n            ) : (\n              <Sizer width={13}>\n                <FormInputTextBox\n                  field=\"note\"\n                  inputFullWidth={true}\n                  placeholder={i18n.t`Closing reason`}\n                />\n              </Sizer>\n            )\n          }\n        </Observer>\n      </FormContainer>\n\n      <FormSubmit width=\"9rem\">{i18n.t`Add`}</FormSubmit>\n    </Form>\n  )\n}\n\nfunction getDefaultValues(): Partial<ISpecificFormData> {\n  const now = new Date()\n  return {\n    date: now,\n    openAt: setHours(setMinutes(now, 0), 9),\n    closeAt: setHours(setMinutes(now, 0), 20),\n  }\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTime } from './FormInputTime'\n\ninterface IFormInputTimeSpanProps {\n  fieldFrom: FieldType\n  fieldTo: FieldType\n}\n\nconst InlineWrap = styled.div`\n  width: 5rem;\n  display: inline-block;\n`\n\nexport const FormInputTimeSpan: React.SFC<IFormInputTimeSpanProps> = ({\n  fieldFrom,\n  fieldTo,\n}) => (\n  <>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldFrom}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldTo}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n  </>\n)\n","import { InlineTimePicker, TimePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<TimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputTime: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineTimePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"LT\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { i18nMark } from '@lingui/react'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { ESpecificHourMode } from '../models/BusinessHoursModel'\n\nconst labels = {\n  [ESpecificHourMode.TIMESPAN]: i18nMark('Open between'),\n  [ESpecificHourMode.FULLDAY]: i18nMark('Closed'),\n}\n\nexport const SpecificModeSelector: React.SFC = () => (\n  <WithSettings\n    observe={true}\n    render={({ businessHours }) => (\n      <SelectControlFlat<ESpecificHourMode>\n        items={[ESpecificHourMode.TIMESPAN, ESpecificHourMode.FULLDAY]}\n        selectedItem={businessHours.specificMode as ESpecificHourMode}\n        formatItem={mode => i18n._(labels[mode])}\n        onSingleSelection={(mode: ESpecificHourMode) =>\n          businessHours.changeSpecificMode(mode)\n        }\n      />\n    )}\n  />\n)\n","import React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { SpecificBusinessHourLine } from '../molecules/SpecificBusinessHourLine'\nimport { QuerySpecificBusinessHours } from './SpecificBusinessHours.graphql'\n\nconst sortByDate = RM.sort<GSpecificBusinessHour.Fragment>(\n  // @ts-ignore Fix typing\n  RM.ascend(RM.or(RM.prop('specificDate'), RM.not)),\n)\n\nexport const SpecificBusinessHours: React.SFC = props => (\n  <WithRoot\n    render={({ settings }) => (\n      <QuerySpecificBusinessHours\n        {...settings.queryProps}\n        fetchPolicy=\"cache-and-network\"\n        renderFragment={({ businessHours }) =>\n          sortByDate(businessHours).map(bsHour => (\n            <SpecificBusinessHourLine\n              key={bsHour.id}\n              bsHour={bsHour}\n              onDelete={() =>\n                settings.businessHours.deleteSpecificHour(bsHour.id)\n              }\n            />\n          ))\n        }\n      />\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface ISpecificBusinessHourLineProps {\n  bsHour: GSpecificBusinessHour.Fragment\n  onDelete(): void\n}\n\nexport const SpecificBusinessHourLine: React.SFC<\n  ISpecificBusinessHourLineProps\n> = ({ bsHour, onDelete }) => (\n  <FlexRow>\n    <FlexColumn fixedWidth={true}>\n      <CanMutate mutationName=\"destroyBusinessHour\">\n        <TouchButtonDelete\n          onDelete={onDelete}\n          confirmText={`${i18n.t`Really remove specific business hour ${\n            bsHour.specificDateLocalized\n          }?`}`}\n        />\n      </CanMutate>\n    </FlexColumn>\n    <FlexColumn fixedWidth={true} width=\"14rem\">\n      {bsHour.specificDateLocalized}\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={1}>{formatLineTime(bsHour)}</FlexColumn>\n  </FlexRow>\n)\n\nfunction formatLineTime(bsHour: GSpecificBusinessHour.Fragment) {\n  if (bsHour.closed) {\n    return bsHour.closedNote\n  }\n  return `${bsHour.openAt} - ${bsHour.closeAt}`\n}\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\n\nimport { BusinessHoursButton } from '../organisms/BusinessHoursButton'\nimport { MenuCategoryButton } from '../organisms/MenuCategoryButton'\nimport { MenuRecipeButton } from '../organisms/MenuRecipeButton'\nimport { MenuStockButton } from '../organisms/MenuStockButton'\nimport { MenuStockDepositButton } from '../organisms/MenuStockDepositButton'\nimport { ZonesMenuButton } from '../organisms/ZonesMenuButton'\n\ninterface ISettingsPageProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'BusinessHours', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'Preferences', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'ZonesMenu', x: 4, y: 1, w: 2, h: 2 },\n    { i: 'MenuRecipe', x: 0, y: 3, w: 2, h: 2 },\n    { i: 'MenuCategory', x: 2, y: 3, w: 2, h: 2 },\n    { i: 'MenuStock', x: 4, y: 3, w: 2, h: 2 },\n    { i: 'MenuStockDeposit', x: 6, y: 3, w: 2, h: 2 },\n  ]\n}\n\nexport const SettingsPage: React.SFC<ISettingsPageProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"BusinessHours\"\n      route=\"/settings/businesshours\"\n      component={BusinessHoursButton}\n      canQuery=\"businessHours\"\n    />\n    {/* <PageLayoutItem\n      key=\"Preferences\"\n      route=\"/settings/preferences\"\n      component={PreferencesButton}\n    /> */}\n    <PageLayoutItem\n      key=\"MenuRecipe\"\n      route=\"/settings/menu/recipe\"\n      component={MenuRecipeButton}\n      canQuery=\"recipes\"\n    />\n    <PageLayoutItem\n      key=\"MenuCategory\"\n      route=\"/settings/menu/category\"\n      component={MenuCategoryButton}\n      canQuery=\"wareCategories\"\n    />\n    <PageLayoutItem\n      key=\"MenuStock\"\n      route=\"/settings/menu/stock\"\n      component={MenuStockButton}\n      canQuery=\"stockItems\"\n    />\n    <PageLayoutItem\n      key=\"MenuStockDeposit\"\n      route=\"/settings/menu/stock/deposit\"\n      component={MenuStockDepositButton}\n      canMutate=\"changeAmountStockItem\"\n    />\n    <PageLayoutItem\n      key=\"ZonesMenu\"\n      route=\"/settings/zones\"\n      component={ZonesMenuButton}\n      canQuery=\"zones\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const BusinessHoursButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Business hours`}\n    iconName=\"av_timer\"\n    color={Colors.red}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuCategoryButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Categories`}\n    iconName=\"folder\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuRecipeButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Recipes`}\n    iconName=\"insert_drive_file\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Stock overview`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockDepositButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Stock deposit`}\n    iconName=\"open_in_browser\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IZonesMenuButtonProps {}\n\nexport const ZonesMenuButton: React.SFC<IZonesMenuButtonProps> = props => (\n  <TouchButton\n    text={i18n.t`Delivery zones`}\n    iconName=\"edit_location\"\n    color={Colors.violet}\n  />\n)\n"],"sourceRoot":""}