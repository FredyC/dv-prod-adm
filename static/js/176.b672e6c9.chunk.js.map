{"version":3,"sources":["molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","helpers/filter.ts","atoms/FormInputFlatSelect.tsx","atoms/RelativeLink.tsx","atoms/DragHandle.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/extends.js","atoms/FormInputSelect.tsx","../node_modules/@speedlo/assets/index.js","../node_modules/@speedlo/assets/Flaticon.js","../node_modules/apollo-client/errors/ApolloError.js","molecules/TouchButtonEdit.tsx","molecules/TouchButtonRemove.tsx","molecules/TouchButtonVisibility.tsx","atoms/NoteText.tsx","atoms/DataTable.tsx","molecules/SortableDataTable.tsx","segments/menu/molecules/CategoryListTable.tsx","segments/menu/molecules/CreateButton.tsx","segments/menu/organisms/CategoryList.tsx","segments/menu/organisms/MenuGuideDownload.tsx","segments/menu/pages/MenuCategoryListPage.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/labels.ts","segments/menu/molecules/SubmitButton.tsx","atoms/FormContainer.tsx","atoms/PictogramDisplay.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/organisms/CategoryFormBasic.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","segments/menu/organisms/CategoryFormLoader.tsx","atoms/DataList.tsx","atoms/FormDisplayField.tsx","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormPricingField.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/molecules/CategoryRequirementControl.tsx","segments/menu/organisms/CategoryRequirementsForm.tsx","segments/menu/pages/MenuCategoryPage.tsx","atoms/DataTableContainer.tsx","segments/menu/molecules/MenuCategoryFilter.tsx","segments/menu/molecules/MenuFilterInput.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipeListPage.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeCategoryView.tsx","segments/menu/molecules/FormInputCode.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormLoader.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","segments/menu/molecules/FormInputPlu.tsx","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/organisms/StockFormMain.tsx","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/routes/MenuRoutes.tsx"],"names":["FullHeightDiv","styled","div","_templateObject","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","column","row","FullHeightDivStyled","_templateObject2","PageLayoutFullHeightItem","_ref","children","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_3__","id","FlexRowSingle","_ref$justify","justify","VerticalGap","_ref$size","size","_ref$sizeUnit","sizeUnit","concat","displayName","ScrollArea","CardDock","_ref2","_ref2$position","position","_ref$position","isPartialMatch","searchValue","search","toLocaleLowerCase","propValue","includes","__webpack_require__","d","__webpack_exports__","FormInputFlatSelect","_React$Component","_getPrototypeOf2","_this","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","length","args","Array","_key","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","validate","value","_this$props","isRequired","isMulti","validationName","isArray","_i18n__WEBPACK_IMPORTED_MODULE_9__","_","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","fieldApi","_this$props2","items","defaultSelection","getItemId","selection","selectedItems","filter","item","onMultiSelection","setValue","map","setTouched","selectedItem","find","onSingleSelection","_this2","_this$props3","field","_this$props3$fieldIsP","fieldIsPure","_this$props3$isRequir","_this$props3$isCleara","isClearable","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","react_form__WEBPACK_IMPORTED_MODULE_7__","pure","_SelectControlFlat__WEBPACK_IMPORTED_MODULE_10__","assign","getControlProps","isInvalid","Boolean","error","React","Component","defaultProps","RM","prop","RelativeLink","to","from","linkProps","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DragHandleContainerStyled","DragHandle","SortableHandle","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","_extends","target","i","source","prototype","hasOwnProperty","FormInputSelect","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_i18n__WEBPACK_IMPORTED_MODULE_10__","0","validatioName","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","options","getOptionValue","defaultValue","isSelected","F","onChange","selectedOptions","option","_this$props2$fieldIsP","react__WEBPACK_IMPORTED_MODULE_7___default","react_form__WEBPACK_IMPORTED_MODULE_8__","_SelectControl__WEBPACK_IMPORTED_MODULE_11__","onFocus","styles","control","base","borderColor","exports","pictograms","module","defineProperty","tslib_1","isApolloError","err","generateErrorMessage","message","graphQLErrors","forEach","graphQLError","errorMessage","networkError","replace","ApolloError","_super","_a","extraInfo","__proto__","__extends","Error","TouchButtonEdit","_ref$Link","Link","objectWithoutProperties","react_default","SizerButton","TouchButton","TouchButtonRemove","esm_extends","TouchButtonVisibility","isVisible","iconColor","Colors","white","greyMiddle","color","NoteText","DataTable","_props$heightStretch","heightStretch","_props$fullHeight","fullHeight","_props$rowHeight","rowHeight","_props$isLoading","isLoading","tableProps","rowGetter","useCallback","index","noRowsRenderer","Pacman","renderTable","width","height","es","autoHeight","headerHeight","rowCount","style","outline","disableHeight","_ref3","scrollElement","window","_ref4","_ref5","checkColumnAccess","_ref6","renderer","canQuery","canMutate","cellProps","result","CanQuery","queryName","CanMutate","mutationName","ColumnRendererEdit","_ref7","cellData","TouchButtonEdit_TouchButtonEdit","ColumnRendererRemove","_ref8","columnData","TouchButtonRemove_TouchButtonRemove","onClick","onRemove","ColumnRendererVisibility","_ref9","rowData","TouchButtonVisibility_TouchButtonVisibility","onToggle","ColumnRendererWithNote","_ref10","Fragment","noteKey","DataTableEmptyText","_ref11","_ref11$text","text","i18n","DataTable_templateObject","SortableTableRowRenderer","SortableElement","columns","className","SortableDataTableContainer","SortableContainer","SortableDataTable","_React$PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","sortedItems","rowRenderer","rowProps","onHandleSorting","asyncToGenerator","regenerator_default","mark","_callee","newIndex","oldIndex","currentItems","sortSuccess","wrap","_context","prev","next","abrupt","toConsumableArray","arrayMove","setState","onSort","offset","t0","sent","stop","_x","inherits","createClass","lockAxis","useDragHandle","onSortEnd","PureComponent","getDerivedStateFromProps","nextProps","CategoryListTable","categories","_ref$showEditColumn","showEditColumn","_ref$showRemoveColumn","showRemoveColumn","_ref$showVisibilityCo","showVisibilityColumn","_ref$showHeader","showHeader","_ref$isSortable","isSortable","_ref$isLoading","_ref$heightStretch","_ref$fullHeight","_ref$noRowsDisplay","noRowsDisplay","disableHeader","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","cellDataGetter","getCategoryRoute","categoryType","enum","label","objectSpread","CreateButtonContainer","CreateButton_templateObject","CreateButton","_ref$routeTo","routeTo","green","observer","headline","_ref$subHeadline","subHeadline","settings","useRoot","_useQMenuCategoryList","useQMenuCategoryList","branchId","data","loading","updateQuery","refetch","_useMMenuCategoryVisi","useMMenuCategoryVisibility","changeVisibility","slicedToArray","FlexColumn","widthGrowIndex","Headline","fixedWidth","CreateButton_CreateButton","CategoryListTable_CategoryListTable","categoryId","visible","optimisticResponse","updateWareCategory","__typename","menu","category","sortCategory","MenuGuideDownloadButton","MenuGuideDownload_templateObject","black","MenuGuideDownload","_useQMenuGuideDownloa","useQMenuGuideDownload","companyBranch","foodMenuUrl","href","_lingui_react","PartialDataTableContainer","MenuCategoryListPage_templateObject","MenuCategoryListPage","FullPageLayout","pageTitle","useBackButton","Card","stretchToParent","SettingsCompanyBranchPicker","organisms_CategoryList","WareCategoryTypeEnum","Main","SideDish","Cover","TopRightButtonContainer","TopRightButtonContainer_templateObject","Radiuses","Button","IsCategoryType","type","isMain","isSideDish","isCover","_categories","i18nMark","recipes","_recipes","getCategoryTypeLabel","getRecipeTypeLabel","recipeType","SubmitButton","_ref$isCreate","isCreate","react_form_es","render","form","FormSubmit","isFormValid","getButtonText","FormContainer","FormContainer_templateObject","FormColumn","PictogramDisplayStyled","PictogramDisplay_templateObject","_ref2$fontSize","fontSize","_ref2$fontSizeUnit","fontSizeUnit","PictogramDisplay","pictogramId","_ref$fontSize","_ref$fontSizeUnit","getClassName","MenuCategoryPictogramSelect","SelectControl","pictogram","availablePictograms","formatOptionLabel","PictogramDisplay_PictogramDisplay","components","SingleValue","container","menuList","maxHeight","isSearchable","FormDeleteButton","confirmText","onDelete","react_router","history","TouchButtonDelete","goBack","FormInputInternalNote","_ref$field","_ref$label","icon","IconLine","labelWidth","FormInputTextBox","inputFullWidth","FormInputName","_ref$icon","CategoryBasicForm","Sizer","FormInputName_FormInputName","placeholder","FormInputInternalNote_FormInputInternalNote","FormInputCheckbox","MenuCategoryPictogramSelect_MenuCategoryPictogramSelect","WithSettings","FormDeleteButton_FormDeleteButton","deleteCategory","FormLoader","shouldLoad","loader","_useState","useState","_useState2","values","setValues","useEffect","then","NavigateBack","ErrorPop","MenuBaseFormLoader_templateObject","MenuBaseFormLoader","submitError","validationErrors","_this$state","renderSubmitError","renderValidationErrors","messages","propEq","userErrors","renderPopover","errors","index_es","open","anchorEl","document","getElementById","onClose","anchorOrigin","vertical","horizontal","idx","_this3","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack_NavigateBack","defaultValues","defaults","loadedDefaults","formApi","logForm","onSubmit","_callee2","_context2","onSubmitFailure","keys","logError","renderErrors","useMenu","CategoryFormLoader","MenuBaseFormLoader_MenuBaseFormLoader","createCategory","updateCategory","internalNoteLabel","nameLabel","minCount","maxCount","getDefaults","client","query","QMenuCategoryDocument","variables","fetchPolicy","DataList","renderItem","listProps","renderList","formInputPriceValidate","isEmpty","validateNumber","FormInputPrice","VatsQuery","gql","FormInputVatSelect_graphql_templateObject","QueryVat","buildQuery","css","FormInputVatSelect_templateObject","FormInputVatSelect","useObserver","renderLoading","vats","formatItem","vat","FormPricingCurrencyCode","FormPricingField_templateObject","FormPricingField","priceType","FormInputPrice_FormInputPrice","FormInputVatSelect_FormInputVatSelect","MenuSuggestionPanel","onAdd","_props$addLabel","addLabel","_props$addButtonText","addButtonText","selectProps","_useStateRef","useStateRef","_useStateRef2","getSelected","setSelected","onConfirm","selected","onKeyDown","ev","onSelect","margin","getOptionLabel","disabled","RecipeAssocListTable","DataTable_DataTable","RecipeAssociatedView","recipeId","priceTypeRecipes","rejectSuggestions","reject","recipe","some","onAddRecipe","addedRecipe","warePriceType","associatedRecipe","formattedPrice","RecipeAssocListTable_RecipeAssocListTable","RecipeForm_graphql","priceTypes","WarePriceTypeEnum","Delivery","Inhouse","RecipeFormPricing","react","FormPricingField_FormPricingField","TRecipeType","RecipeAssociatedView_RecipeAssociatedView","RecipeSuggestionPanel","filterRecipes","_useQMenuRecipeList","useQMenuRecipeList","Container","CategoryRecipesView_templateObject","FormFixedRow","CategoryRecipesView_templateObject2","FormStretchedRow","_templateObject3","SortableRecipes","RecipeRow","_templateObject4","MoveCell","_templateObject5","SortableRecipe","prices","foundPrice","pathEq","price","formattedValue","code","internalNote","CategoryRecipesView","without","lockToContainerEdges","StyledCategoryRequirementControl","CategoryRequirementControl_templateObject","CategoryRequirementControl","count","enabled","countRef","useRef","htmlFor","FormInputStyled","_onChange","toString","validity","valid","valueAsNumber","pattern","StyledCheckbox","checked","_onChange2","_x2","current","getRulesMap","noLimit","min","max","optional","required","onlyOne","custom","CategoryRequirementsForm","ruleMap","useMemo","_React$useState","_React$useState2","currentRule","setRule","getValue","found","findKey","setMinCount","setMaxCount","SelectControlFlat","req","selectedRule","rule","CategoryRequirementControl_CategoryRequirementControl","MenuCategoryPage_templateObject","MenuCategoryPage_templateObject2","MenuCategoryPage_templateObject3","MenuCategoryPage","CategoryFormLoader_CategoryFormLoader","hideLogoutWidget","MenuCategoryPage_FormContainer","MenuCategoryPage_FormFixedRow","CategoryFormBasic_CategoryBasicForm","IsCategoryType_IsCategoryType","component","MenuCategoryPage_FormStretchedRow","CategoryRecipesView_CategoryRecipesView","SubmitButton_SubmitButton","DataTableContainer","DataTableContainer_templateObject","MenuCategoryFilter","_useQMenuCategoryFilt","useQMenuCategoryFilter","setCategoryFilter","grouped","groupBy","cat","typeString","getOptions","MenuFilterInput","modelType","model","useDebounceCallback","setFilterInput","Search","filterInput","RecipeTypeSelection","isOpen","setOpen","useRouterContext","getRecipeRoute","push","preventDefault","RecipeListTable","_ref$showTypeColumn","showTypeColumn","react_content_loader_es","ColumnRendererCode","flexGrow","ColumnRendererPrice","TPriceType","RecipeListLoader","categoryFilterId","filteredRecipes","useComputed","partialMatch","cond","propSatisfies","T","RecipeListTable_RecipeListTable","MenuRecipeListPage","MenuFilterInput_MenuFilterInput","RecipeTypeSelection_RecipeTypeSelection","currentCategories","RecipeCategoryView","noRowsText","organisms_CategorySuggestionPanel","addedCategory","FormInputCode","FormInputDescription","AllergensQuery","FormInputAllergens_graphql_templateObject","FMenuAllergenFragmentDoc","QueryAllergens","AllergenBox","AllergenIndicator_templateObject","MarginAroundFormComponents","active","AllergenIndicator_templateObject2","yellow","MenuAllergenIndicator","allergens","allergen","title","extractAllergens","pipe","flatten","uniq","RecipeAllergenDisplay","AllergenIndicator_MenuAllergenIndicator","RecipeFormBasic","FormInputCode_FormInputCode","FormInputDescription_FormInputDescription","RecipeAllergenDisplay_RecipeAllergenDisplay","deleteRecipe","RecipeFormLoader","createRecipe","updateRecipe","currencyCode","queryDefaults","getPriceMap","vatId","MenuRecipeFormQuery","normalizeValues","acc","reduce","descriptionLabel","image","sourcePrices","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","recipeSource","quantity","_ref7$stockItem","stockItem","unitLabel","wareUnit","sourcePrice","currency","RecipeIngredientsTable","rowIndex","validateQuantity","fieldName","validator","isFloat","unselectedStockOnly","differenceWith","RecipeIngredientsControl","_useQMenuStockList","useQMenuStockList","RecipeIngredientsTable_RecipeIngredientsTable","stockItems","_onAdd","addedStockItem","RecipeIngredientsView","ingredient","stockItemId","MenuRecipePage_templateObject","MenuRecipePage","RecipeFormLoader_RecipeFormLoader","MenuRecipePage_FormContainer","RecipeFormBasic_RecipeFormBasic","RecipeFormPricing_RecipeFormPricing","RecipeIngredientsView_RecipeIngredientsView","RecipeCategoryView_RecipeCategoryView","StockDepositConfirmButton","numeral","format","priceFormat","1","StockDepositFilterInput","forwardRef","ref","onFilter","autoFocus","onKeyPressCapture","StockDepositQuantityInput","StockDepositResultTable","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","StockDepositResultTable_templateObject","indexOf","begin","substring","match","end","StockDepositControl","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","trim","head","onConfirmFilter","focus","onQuantity","onSelectStockItem","onDeposit","prevProps","_this$state2","hasSearchValue","isNoneFind","isMultiFind","StockDepositConfirmButton_StockDepositConfirmButton","cardName","StockDepositResultTable_StockDepositResultTable","StockDepositLoader","_useQMenuStockDeposit","useQMenuStockDeposit","_useMMenuStockQuantit","useMMenuStockQuantity","changeQuantity","quantityChange","MenuStockDepositPage","StockDepositControl_StockDepositControl","StockListTable","Loading","stockAllowNegative","StockListLoader","filteredItems","stock","StockListTable_StockListTable","MenuStockListPage","MenuStockFormQuery","StockForm_graphql_templateObject","FMenuWareUnitFragmentDoc","MenuStockDefaultsQuery","StockForm_graphql_templateObject2","StockFormLoader","stockId","createItem","updateItem","allowNegativeDefault","getAllowNegativeDefault","allowNegative","note","plu","FieldStateEnum","Default","isEnabled","Disabled","FormInputAllergens","Enabled","FormInputAllowNegative","obj","TypeError","_objectDestructuringEmpty","labelForDefault","FormInputPlu","WareUnitsQuery","FormInputWareUnit_graphql_templateObject","QueryWareUnits","FormInputWareUnit","wareUnits","StockFormMain","FormInputWareUnit_FormInputWareUnit","FormInputPlu_FormInputPlu","FormInputAllergens_FormInputAllergens","FormInputAllowNegative_FormInputAllowNegative","deleteItem","StockRecipesView","_useQStockRecipes","useQStockRecipes","MenuStockPage","StockFormLoader_StockFormLoader","StockFormMain_StockFormMain","StockRecipesVIew_StockRecipesView","MenuRoutes_MenuRoutes","MenuRoutes","SecureRoute","exact","path","params","MenuCategoryPage_MenuCategoryPage","MenuRecipePage_MenuRecipePage","MenuStockPage_MenuStockPage","NotFoundPage"],"mappings":"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","file":"static/js/176.b672e6c9.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends Omit<\n      ISelectControlFlatProps<ItemType>,\n      | 'selectedItems'\n      | 'onMultiSelection'\n      | 'selectedItem'\n      | 'onSingleSelection'\n    > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n  defaultSelection?: ReadonlyArray<ItemType> | ItemType\n}\n\nexport class FormInputFlatSelect<ItemType> extends React.Component<\n  IFormInputSelectProps<ItemType>\n> {\n  static defaultProps = {\n    validationName: i18n.t`Value`,\n    getItemId: RM.prop('id'),\n  }\n  validate = value => {\n    const { isRequired, isMulti, validationName } = this.props\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && (value === null || value === undefined)) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n  getControlProps(\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> {\n    const { isMulti, items, defaultSelection, getItemId } = this.props\n\n    const selection = fieldApi.value || defaultSelection\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) =>\n        selection.includes(getItemId!(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId!))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId!(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId!(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      isClearable = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} pure={fieldIsPure} validate={this.validate}>\n        {fieldApi => (\n          <SelectControlFlat<ItemType>\n            {...this.getControlProps(fieldApi)}\n            isInvalid={Boolean(fieldApi.error)}\n            isClearable={isClearable && !isRequired}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      defaultValue,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","exports.pictograms = require('./Flaticon');","module.exports = ['pizza', 'beans', 'cheese', 'hot-pepper', 'smoking-barbecue', 'meat-pie', 'sausage', 'hot-dog', 'fruit', 'fruit-1', 'fruit-2', 'strawberry', 'soup', 'noodles', 'ramen', 'rice', 'spaghetti', 'food', 'piece-of-cake', 'beer', 'marshmallow', 'cake', 'banana-split', 'ice-cream', 'cookie', 'doughnut', 'cupcake', 'kebab', 'steak', 'fish', 'fondue', 'shrimp', 'berry', 'food', 'food-1', 'food-2', 'food-3', 'food-4', 'food-5', 'food-6', 'food-7', 'food-8', 'food-9', 'food-10', 'food-11', 'food-12', 'food-13', 'food-14', 'food-15', 'food-16', 'food-17', 'food-18', 'food-19', 'food-20', 'food-21', 'food-22', 'food-23', 'food-24', 'food-25', 'food-26', 'food-27', 'food-28', 'food-29', 'food-30', 'drink', 'drink-1', 'drink-2', 'drink-3', 'drink-4', 'drink-5', 'cup', 'cup-1', 'cup-2', 'whisky'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nfunction isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\nexports.isApolloError = isApolloError;\n\nvar generateErrorMessage = function generateErrorMessage(err) {\n  var message = '';\n\n  if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += \"GraphQL error: \" + errorMessage + \"\\n\";\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nvar ApolloError = function (_super) {\n  tslib_1.__extends(ApolloError, _super);\n\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        networkError = _a.networkError,\n        errorMessage = _a.errorMessage,\n        extraInfo = _a.extraInfo;\n\n    var _this = _super.call(this, errorMessage) || this;\n\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      _this.message = generateErrorMessage(_this);\n    } else {\n      _this.message = errorMessage;\n    }\n\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n\n  return ApolloError;\n}(Error);\n\nexports.ApolloError = ApolloError;","import { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends Omit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.FC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <SizerButton>\n      <TouchButton iconName=\"mode_edit\" {...props} />\n    </SizerButton>\n  </Link>\n)\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.FC<IProps> = ({ ...props }) => (\n  <SizerButton>\n    <TouchButton iconName=\"remove_circle_outline\" {...props} />\n  </SizerButton>\n)\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.FC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      iconName=\"remove_red_eye\"\n      iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n      color={Colors.greyMiddle}\n      {...props}\n    />\n  </SizerButton>\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Index,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport { NoteText } from './NoteText'\nimport Pacman from './Pacman'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  rowHeight?: number\n  isLoading?: boolean\n  heightStretch?: boolean\n  fullHeight?: boolean\n}\n\nexport const DataTable = <T extends {}>(props: IDataTableProps<T>) => {\n  const {\n    items,\n    heightStretch = false,\n    fullHeight = false,\n    rowHeight = 60,\n    isLoading = false,\n    children,\n    ...tableProps\n  } = props\n\n  const rowGetter = React.useCallback(({ index }: Index) => items[index], [\n    items,\n  ])\n\n  const noRowsRenderer = React.useCallback(\n    () => (isLoading ? <Pacman /> : null),\n    [isLoading],\n  )\n\n  const renderTable = (width: number, height: number) => {\n    return (\n      <Table\n        autoHeight={!heightStretch && !fullHeight}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowCount={items ? items.length : 0}\n        rowHeight={rowHeight}\n        rowGetter={rowGetter}\n        noRowsRenderer={noRowsRenderer}\n        style={{ outline: 'none' }}\n        {...tableProps}\n      >\n        {children}\n      </Table>\n    )\n  }\n\n  if (fullHeight) {\n    return (\n      <AutoSizer disableHeight={true}>\n        {({ width }) => renderTable(width, items.length * rowHeight)}\n      </AutoSizer>\n    )\n  }\n\n  if (heightStretch) {\n    return (\n      <AutoSizer>{({ width, height }) => renderTable(width, height)}</AutoSizer>\n    )\n  }\n\n  return (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderTable(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.PureComponent<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  rowRenderer = rowProps => {\n    return <SortableTableRowRenderer {...rowProps} />\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        lockAxis=\"y\"\n        useDragHandle={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={this.rowRenderer}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FMenuCategoryListItemFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\n\ntype TCategory = FMenuCategoryListItemFragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  fullHeight?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.FC<IProps> = ({\n  categories,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  fullHeight = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    heightStretch,\n    fullHeight,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  const columns = [\n    showEditColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canQuery: 'wareCategory' },\n          ColumnRendererEdit,\n        )}\n        cellDataGetter={({ rowData }) =>\n          getCategoryRoute(rowData.id, rowData.categoryType.enum)\n        }\n      />\n    ),\n    showRemoveColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererRemove}\n        columnData={{ onRemove }}\n      />\n    ),\n    showVisibilityColumn && (\n      <Column\n        dataKey=\"visible\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canMutate: 'updateWareCategory' },\n          ColumnRendererVisibility,\n        )}\n        columnData={{ onToggle }}\n      />\n    ),\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNoteLabel' }}\n    />,\n    <Column\n      dataKey=\"countRecipes\"\n      label={i18n.t`Recipe count`}\n      width={100}\n      cellRenderer={({ cellData }) =>\n        `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n      }\n    />,\n    isSortable && (\n      <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n    ),\n  ]\n\n  if (isSortable) {\n    return React.createElement(\n      SortableDataTable,\n      {\n        onSort: onSort as any,\n        ...props,\n      },\n      ...columns,\n    )\n  }\n\n  return React.createElement(DataTable, props, ...columns)\n}\n","import { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLAnchorElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.FC<IProps> = ({\n  routeTo = 'create',\n  onClick,\n}) => (\n  <CreateButtonContainer>\n    <RelativeLink to={routeTo} onClick={onClick}>\n      <SizerButton>\n        <TouchButton iconName=\"add_circle\" color={Colors.green} />\n      </SizerButton>\n    </RelativeLink>\n  </CreateButtonContainer>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useMMenuCategoryVisibility,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery, refetch } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const [changeVisibility] = useMMenuCategoryVisibility()\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <CreateButton routeTo={getCategoryRoute('create', categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories}\n        onToggle={(categoryId: ID, visible: boolean) => {\n          changeVisibility(\n            { categoryId, visible },\n            {\n              optimisticResponse: {\n                updateWareCategory: {\n                  __typename: 'WareCategory',\n                  id: categoryId,\n                  visible,\n                },\n              },\n            },\n          )\n        }}\n        isSortable={true}\n        showHeader={false}\n        fullHeight={true}\n        showVisibilityColumn={true}\n        onSort={async ({ item, items, offset }) => {\n          updateQuery(() => ({\n            categories: items,\n          }))\n          const result = await settings.menu.category.sortCategory(\n            item.id,\n            offset,\n          )\n          if (result) {\n            await refetch()\n          }\n          return result\n        }}\n      />\n    </>\n  )\n}\n\nexport default observer(CategoryList)\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuGuideDownload } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nconst MenuGuideDownloadButton = styled(TouchButton)`\n  white-space: nowrap;\n  margin-left: 2rem;\n  & a {\n    text-decoration: none;\n    color: ${Colors.black};\n    padding: 1rem;\n  }\n`\n\nexport const MenuGuideDownload = observer(() => {\n  const { settings } = useRoot()\n  const { loading, data } = useQMenuGuideDownload({\n    branchId: settings.branchId,\n  })\n  if (\n    loading ||\n    !(data && data.companyBranch && data.companyBranch.foodMenuUrl)\n  ) {\n    return null\n  }\n  return (\n    <MenuGuideDownloadButton color={Colors.greyMiddle}>\n      <a href={data.companyBranch.foodMenuUrl} target=\"_blank\">\n        <Trans>Menu codes manual</Trans>\n      </a>\n    </MenuGuideDownloadButton>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport CategoryList from '../organisms/CategoryList'\nimport { MenuGuideDownload } from '../organisms/MenuGuideDownload'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.FC = () => (\n  <>\n    <FullPageLayout\n      pageTitle={i18n.t`Category overview`}\n      useBackButton={true}\n    />\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuGuideDownload />\n          </FlexColumn>\n        </FlexRowSingle>\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0;\n  top: 0rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.FC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menutypes'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport function getCategoryTypeLabel(categoryType: TCategoryType) {\n  return i18n._(categories[categoryType])\n}\n\nexport function getRecipeTypeLabel(recipeType: TRecipeType) {\n  return i18n._(recipes[recipeType])\n}\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.FC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst PictogramDisplayStyled = styled.div`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport const PictogramDisplay: React.FC<IProps> = ({\n  pictogramId,\n  fontSize = 2,\n  fontSizeUnit = 'rem',\n}) => (\n  <PictogramDisplayStyled\n    className={getClassName(pictogramId)}\n    fontSize={fontSize}\n    fontSizeUnit={fontSizeUnit}\n  />\n)\n\nfunction getFontSize({ fontSize = 2, fontSizeUnit = 'rem' }: Partial<IProps>) {\n  return `${fontSize}${fontSizeUnit}`\n}\n\nfunction getClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.FC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value && !Array.isArray(value)) {\n            fieldApi.setValue(value.pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router-dom'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.FC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.FC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputName: React.FC<IProps> = ({\n  field = 'nameLabel',\n  icon = 'label',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputFullWidth={true}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.FC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <Sizer width={22}>\n        <FormInputName\n          placeholder={i18n.t`Category name`}\n          inputFullWidth={true}\n        />\n      </Sizer>\n      <Sizer width={22}>\n        <FormInputInternalNote placeholder={i18n.t`Category internal note`} />\n      </Sizer>\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <CardDock position=\"BottomRight\">\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </CardDock>\n  </FormContainer>\n)\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(\n    () => {\n      if (!shouldLoad) {\n        return\n      }\n      loader().then(setValues)\n    },\n    [shouldLoad],\n  )\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.FC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              const defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import React from 'react'\n\nimport {\n  QMenuCategoryDocument,\n  QMenuCategoryQuery,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TCategoryFormValues } from '../models/MenuCategoryModel'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport const CategoryFormLoader: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={categoryId === null}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<QMenuCategoryQuery>({\n          query: QMenuCategoryDocument,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return data.category\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    minCount: 0,\n    maxCount: 0,\n    categoryType: { enum: categoryType },\n    recipes: [],\n  }\n}\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  List,\n  ListProps,\n  ListRowRenderer,\n  WindowScroller,\n} from 'react-virtualized'\n\ninterface IColumn {\n  size: string\n}\n\ninterface IDataListProps<T> extends Partial<ListProps> {\n  items: ReadonlyArray<T>\n  columns?: IColumn[]\n  renderItem(item: T, index: number): ReactNode\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport function DataList<T>(props: IDataListProps<T>) {\n  const {\n    items,\n    renderItem,\n    isLoading = false,\n    heightStretch = false,\n    rowHeight = 60,\n    ...listProps\n  } = props\n\n  const rowRenderer: ListRowRenderer = React.useCallback(\n    ({ key, style, index }) => (\n      <div key={key} style={style}>\n        {renderItem(items[index], index)}\n      </div>\n    ),\n    [renderItem, items],\n  )\n\n  const renderList = (width: number, height: number) => (\n    <List\n      width={width}\n      height={height}\n      headerHeight={50}\n      rowHeight={rowHeight}\n      rowCount={items ? items.length : 0}\n      rowRenderer={rowRenderer}\n      style={{ outline: 'none' }}\n      {...listProps}\n    />\n  )\n\n  return heightStretch ? (\n    <AutoSizer>{({ width, height }) => renderList(width, height)}</AutoSizer>\n  ) : (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderList(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\ninterface IProps {\n  field: FieldType\n  className?: string\n  children?: never\n}\n\nexport const FormDisplayField: React.FC<IProps> = ({ field, className }) => {\n  return (\n    <Field field={field}>\n      {fieldApi => <span className={className}>{fieldApi.value}</span>}\n    </Field>\n  )\n}\n","import React from 'react'\nimport { isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { validateNumber } from '../../../locale/numeral'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nconst formInputPriceValidate = (value: string) => {\n  if (\n    value === undefined ||\n    isEmpty(value + '') ||\n    !validateNumber(value + '')\n  ) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.FC<IProps> = ({\n  field = 'price.value',\n  icon = 'toll',\n  ...props\n}) => (\n  <IconLine icon={icon}>\n    <Sizer width={5}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        validate={formInputPriceValidate}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import { css } from 'emotion'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.FC<IProps> = ({\n  field = 'price.vat',\n}) => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QueryVat\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderLoading={false}\n      render={({ vats }) => (\n        <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n          {vats && (\n            <FormInputFlatSelect\n              field={field}\n              items={vats}\n              formatItem={({ vat }) => `${vat}%`}\n              isRequired={true}\n              validationName={i18n.t`VAT`}\n            />\n          )}\n        </IconLine>\n      )}\n    />\n  ))\n}\n","import React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormDisplayField } from '../../../atoms/FormDisplayField'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nconst FormPricingCurrencyCode = styled(FormDisplayField)`\n  padding: 0.5rem;\n`\n\nexport const FormPricingField: React.FC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormPricingCurrencyCode field=\"currencyCode\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import { useStateRef } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: string }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(\n    () => {\n      const selected = getSelected()\n      if (selected !== null) {\n        onAdd(selected)\n        setSelected(null)\n      }\n    },\n    [onAdd],\n  )\n\n  const onKeyDown = useCallback((ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === 'Enter') {\n      onConfirm()\n    }\n  }, [])\n\n  const onSelect = useCallback(option => {\n    setSelected(option || null)\n  }, [])\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.prop('nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.FC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.FC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                variables={{\n                  branchId: settings.branchId,\n                }}\n                fetchPolicy=\"cache-and-network\"\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.FC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useQMenuRecipeList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel = observer<IProps>(\n  ({ categoryType, filterRecipes, onAdd }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuRecipeList({\n      branchId: settings.branchId,\n      categoryType,\n    })\n    return (\n      <MenuSuggestionPanel<TRecipe>\n        isLoading={loading}\n        options={loading ? [] : filterRecipes(data.recipes)}\n        onAdd={onAdd}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { DataList } from '../../../atoms/DataList'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { priceTypes } from './RecipeFormPricing'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n`\n\nconst FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\n\nconst FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  margin: 1rem 0 0 1rem;\n`\n\nconst SortableRecipes = SortableContainer(FormStretchedRow)\n\nconst RecipeRow = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: ${Spacing.ButtonColumnWidthPx}px 100px 3fr 1fr 1fr 50px;\n`\n\nconst MoveCell = styled.div`\n  cursor: move;\n`\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IRecipeRow {\n  recipe: TRecipe\n  onRemove(): void\n}\n\nconst SortableRecipe = SortableElement<IRecipeRow>(({ recipe, onRemove }) => {\n  const prices = priceTypes.map(({ priceType, label }) => {\n    const foundPrice = recipe.prices.find(\n      RM.pathEq(['priceType', 'enum'], priceType),\n    )\n    return (\n      <MoveCell key={priceType}>\n        <NoteText>{i18n._(label)}</NoteText>\n        {foundPrice ? (\n          foundPrice.price.formattedValue\n        ) : (\n          <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n        )}\n      </MoveCell>\n    )\n  })\n\n  return (\n    <RecipeRow>\n      <div>\n        <TouchButtonRemove onClick={onRemove} />\n      </div>\n      <MoveCell>{recipe.code}</MoveCell>\n      <MoveCell>\n        {recipe.nameLabel}\n        <NoteText>{recipe.internalNote}</NoteText>\n      </MoveCell>\n      {prices}\n      <DragHandle />\n    </RecipeRow>\n  )\n})\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<TRecipe>>) => {\n        const recipes = fieldApi.value\n        const onHandleSorting: SortEndHandler = async ({\n          newIndex,\n          oldIndex,\n        }) => {\n          if (newIndex === oldIndex) {\n            return\n          }\n          const sortedItems = arrayMove(\n            recipes as TRecipe[],\n            oldIndex,\n            newIndex,\n          )\n\n          fieldApi.setValue(sortedItems)\n        }\n        return (\n          <Container>\n            <FormFixedRow>\n              <RecipeSuggestionPanel\n                categoryType={categoryType}\n                filterRecipes={RM.without(fieldApi.value)}\n                onAdd={addedRecipe =>\n                  fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n                }\n              />\n            </FormFixedRow>\n            <SortableRecipes\n              lockAxis=\"y\"\n              lockToContainerEdges={true}\n              onSortEnd={onHandleSorting}\n            >\n              <DataList\n                items={fieldApi.value}\n                heightStretch={true}\n                rowHeight={60}\n                renderItem={(recipe, index) => (\n                  <SortableRecipe\n                    recipe={recipe}\n                    onRemove={() => {\n                      fieldApi.setValue(\n                        RM.reject(RM.propEq('id', recipe.id), fieldApi.value),\n                      )\n                    }}\n                    index={index}\n                  />\n                )}\n                rowCount={fieldApi.value.length}\n              />\n            </SortableRecipes>\n          </Container>\n        )\n      }}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { StyledCheckbox } from '../../../atoms/StyledCheckbox'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  id: string\n  count: number\n  label: ReactNode | string\n  enabled: boolean\n  onChange(count: number): void\n}\n\nconst StyledCategoryRequirementControl = styled.div`\n  display: flex;\n  align-items: center;\n  & > label {\n    min-width: 5rem;\n  }\n  & > * {\n    margin: 0.2rem 0.5rem;\n  }\n  input.count {\n    font-size: 1.5rem;\n    line-height: 1.5rem;\n    text-align: center;\n  }\n`\n\nexport const CategoryRequirementControl: React.FC<IProps> = ({\n  count,\n  label,\n  enabled,\n  onChange,\n  id,\n}) => {\n  const countRef = React.useRef(count)\n  return (\n    <StyledCategoryRequirementControl>\n      <label htmlFor={id}>{label}</label>\n      <Sizer width={3}>\n        <FormInputStyled\n          id={id}\n          value={count === 0 ? '' : count}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              onChange(ev.target.valueAsNumber)\n            }\n          }}\n          disabled={count === 0 || !enabled}\n          inputFullWidth={true}\n          type=\"tel\"\n          pattern=\"^[1-9]\\d*$\"\n          className=\"count\"\n        />\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton\n          disabled={!enabled || count <= 0}\n          onClick={() => onChange(count - 1)}\n        >\n          ➖\n        </TouchButton>\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton disabled={!enabled} onClick={() => onChange(count + 1)}>\n          ➕\n        </TouchButton>\n      </Sizer>\n      <div>\n        <StyledCheckbox>\n          <input\n            type=\"checkbox\"\n            id={`${id}-nolimit`}\n            checked={count === 0}\n            disabled={!enabled}\n            onChange={ev => {\n              if (count === 0) {\n                onChange(countRef.current || 1)\n              } else {\n                countRef.current = count\n                onChange(0)\n              }\n            }}\n          />\n          <label htmlFor={`${id}-nolimit`}>\n            <Trans>Unlimited</Trans>\n          </label>\n        </StyledCheckbox>\n      </div>\n    </StyledCategoryRequirementControl>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport _ from 'lodash'\nimport React from 'react'\nimport { IFormApi, IFormState } from 'react-form'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { CategoryRequirementControl } from '../molecules/CategoryRequirementControl'\n\ninterface IRequirement {\n  label: string\n  min?: number\n  max?: number\n}\n\nexport const getRulesMap = (): Record<string, IRequirement> => ({\n  noLimit: {\n    label: i18n.t`No limitation`,\n    min: 0,\n    max: 0,\n  },\n  optional: {\n    label: i18n.t`One at most`,\n    min: 0,\n    max: 1,\n  },\n  required: {\n    label: i18n.t`One at least`,\n    min: 1,\n    max: 0,\n  },\n  onlyOne: {\n    label: i18n.t`Exactly one`,\n    min: 1,\n    max: 1,\n  },\n  custom: {\n    label: i18n.t`Custom range`,\n  },\n})\n\ntype TRule = keyof ReturnType<typeof getRulesMap>\n\nexport const CategoryRequirementsForm: React.FC<{\n  formApi: IFormApi & IFormState\n}> = ({ formApi }) => {\n  const ruleMap = React.useMemo(getRulesMap, [])\n  const [currentRule, setRule] = React.useState<TRule>('noLimit')\n\n  const minCount = formApi.getValue('minCount')\n  const maxCount = formApi.getValue('maxCount')\n\n  React.useEffect(\n    () => {\n      if (currentRule !== 'custom') {\n        const found = _.findKey(\n          ruleMap,\n          ({ min, max }) => min === minCount && max === maxCount,\n        )\n        if (found) {\n          setRule(found)\n        }\n      }\n    },\n    [currentRule, minCount, maxCount],\n  )\n\n  const setMinCount = (count: number) => formApi.setValue('minCount', count)\n  const setMaxCount = (count: number) => formApi.setValue('maxCount', count)\n\n  return (\n    <>\n      <SelectControlFlat<TRule>\n        items={Object.keys(ruleMap) as ReadonlyArray<TRule>}\n        formatItem={req => ruleMap[req].label}\n        onSingleSelection={selectedRule => {\n          if (selectedRule) {\n            setRule(selectedRule)\n            const rule = ruleMap[selectedRule]\n            setMinCount(rule.min || 0)\n            setMaxCount(rule.max || 0)\n          }\n        }}\n        selectedItem={currentRule}\n      />\n      <CategoryRequirementControl\n        id=\"minCount\"\n        count={minCount}\n        label={<Trans>Minimum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMinCount}\n      />\n      <CategoryRequirementControl\n        id=\"maxCount\"\n        count={maxCount}\n        label={<Trans>Maximum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMaxCount}\n      />\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FormApi } from 'react-form'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getCategoryTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\nimport { CategoryRequirementsForm } from '../organisms/CategoryRequirementsForm'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n}) => (\n  <CategoryFormLoader categoryId={categoryId} categoryType={categoryType}>\n    <>\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      />\n\n      <PageLayoutFullHeightItem>\n        <FormContainer>\n          <FormFixedRow>\n            <Card>\n              <CategoryBasicForm categoryType={categoryType} />\n            </Card>\n          </FormFixedRow>\n          <IsCategoryType isSideDish={true} type={categoryType}>\n            <FormFixedRow>\n              <Card>\n                <Headline>\n                  <Trans>Required amounts of recipes to be picked</Trans>\n                </Headline>\n                <FormApi component={CategoryRequirementsForm} />\n              </Card>\n            </FormFixedRow>\n          </IsCategoryType>\n          <FormStretchedRow>\n            <Card stretchToParent={true}>\n              <Headline>\n                <Trans>Recipes assigned to this category</Trans>\n              </Headline>\n              <CategoryRecipesView categoryType={categoryType} />\n            </Card>\n          </FormStretchedRow>\n        </FormContainer>\n      </PageLayoutFullHeightItem>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={\n            categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n          }\n        >\n          <SubmitButton isCreate={categoryId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </>\n  </CategoryFormLoader>\n)\n","import styled from 'styled-components'\n\nexport const DataTableContainer = styled.div`\n  height: calc(100% - 4.5rem);\n  padding-top: 2rem;\n`\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  QMenuCategoryFilterCategories,\n  useQMenuCategoryFilter,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { getCategoryTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\n\ntype TCategory = QMenuCategoryFilterCategories\n\nexport const MenuCategoryFilter = observer(() => {\n  const {\n    settings: {\n      menu: { recipe },\n    },\n  } = useRoot()\n\n  const { data, loading } = useQMenuCategoryFilter({\n    branchId: recipe.branchId,\n  })\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return []\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TRecipeType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        key={recipe.branchId}\n        onChange={value => {\n          recipe.setCategoryFilter(value ? (value as TCategory).id : null)\n        }}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={true}\n        isSearchable={true}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.prop('nameLabel')}\n      />\n    </Sizer>\n  )\n})\n","import { Search } from '@material-ui/icons'\nimport { useDebounceCallback } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <Sizer width={17}>\n        <FormInputStyled\n          defaultValue={model.filterInput}\n          inputFullWidth={true}\n          onChange={ev => onChange(ev.target.value)}\n          placeholder={i18n.t`Filter by name or code`}\n        />\n      </Sizer>\n    </IconLine>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\nimport resolvePathname from 'resolve-pathname'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\nimport { CreateButton } from './CreateButton'\n\nexport const RecipeTypeSelection: React.FC = () => {\n  const [isOpen, setOpen] = React.useState(false)\n  const { history } = useRouterContext()\n\n  const onSelect = (recipeType: WareCategoryTypeEnum) => () => {\n    const to = getRecipeRoute(\n      resolvePathname('create', `${location.pathname}/`),\n      recipeType,\n    )\n    history.push(to)\n  }\n\n  return (\n    <>\n      <CreateButton\n        onClick={ev => {\n          ev.preventDefault()\n          setOpen(true)\n        }}\n      />\n      <Dialog open={isOpen} onClose={() => setOpen(false)}>\n        <DialogTitle>Select item type</DialogTitle>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Main)}>\n          <Trans>Ware</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.SideDish)}>\n          <Trans>Sidedish</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Cover)}>\n          <Trans>Cover</Trans>\n        </TouchButton>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport {\n  QMenuRecipeListRecipes,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TPriceType } from '../menutypes'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\n\ntype TRecipe = QMenuRecipeListRecipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.FC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  return (\n    <DataTable {...props}>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n    </DataTable>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuRecipeList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuRecipeList({\n    branchId: settings.branchId,\n    categoryId: settings.menu.recipe.categoryFilterId,\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data || !data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuCategoryFilter } from '../molecules/MenuCategoryFilter'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const MenuRecipeListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"recipe\" />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuCategoryFilter />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createRecipe\">\n          <RecipeTypeSelection />\n        </CanMutate>\n        <DataTableContainer>\n          <RecipeListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FMenuCategoryListItemFragment,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nconst CategorySuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <MenuSuggestionPanel<TCategory>\n      isLoading={loading}\n      options={RM.without(currentCategories, categories)}\n      addButtonText={addButtonText}\n      onAdd={onAdd}\n    />\n  )\n}\n\nexport default observer(CategorySuggestionPanel)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport {\n  FMenuCategoryListItemFragment,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport CategorySuggestionPanel from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nexport const RecipeCategoryView: React.FC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<TCategory[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.FC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        isRequired={true}\n        validatioName={i18n.t`Code`}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.FC<IProps> = ({\n  field = 'descriptionLabel',\n  icon = 'label_outline',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { FMenuAllergenFragmentDoc } from '../../../graph/generated'\nimport { GAllergens } from '../../../graph/types'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...FMenuAllergen\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/generated'\nimport { Colors, Spacing } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.FC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nconst extractAllergens = RM.pipe(\n  RM.map(RM.prop('allergens')),\n  // @ts-ignore Something wrong with Ramda typings\n  RM.flatten,\n  RM.uniq,\n)\n\nexport const RecipeAllergenDisplay: React.FC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = extractAllergens(value)\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.FC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon=\"error_outline\">\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <CardDock position=\"BottomRight\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </CardDock>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.FC<IProps> = ({\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={recipeId === null}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const { vats, currencyCode } = await menu.recipe.queryDefaults()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: vats[priceType],\n          currencyCode,\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.FC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInputTextBox\n            field={['ingredients', rowIndex, 'quantity']}\n            validate={validateQuantity}\n            inputFullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onAdd(ingredient: TIngredient): void\n  onRemove(stockItemId: ID): void\n}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsControl = observer<IProps>(\n  ({ ingredients, onAdd, onRemove }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuStockList({\n      branchId: settings.branchId,\n    })\n\n    return (\n      <>\n        <RecipeIngredientsTable ingredients={ingredients} onRemove={onRemove} />\n        <MenuSuggestionPanel<GMenuStockItem.Fragment>\n          isLoading={loading}\n          addButtonText={i18n.t`Add ingredient`}\n          options={\n            loading ? [] : unselectedStockOnly(data.stockItems, ingredients)\n          }\n          onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n            onAdd({\n              stockItem: addedStockItem.id,\n              label: addedStockItem.nameLabel,\n              quantity: 1,\n              unitLabel: addedStockItem.wareUnit.code,\n              allergens: addedStockItem.allergens.map(RM.prop('enum')),\n            })\n          }}\n        />\n      </>\n    )\n  },\n)\n\nexport const RecipeIngredientsView = () => {\n  return (\n    <Field field=\"ingredients\">\n      {(fieldApi: IFieldApi<TIngredient[]>) => (\n        <RecipeIngredientsControl\n          ingredients={fieldApi.value}\n          onAdd={ingredient => {\n            fieldApi.setValue([...fieldApi.value, ingredient])\n          }}\n          onRemove={stockItemId => {\n            fieldApi.setValue(\n              RM.reject(RM.propEq('stockItem', stockItemId), fieldApi.value),\n            )\n          }}\n        />\n      )}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getRecipeTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: WareCategoryTypeEnum\n}\n\nconst FormContainer = styled('div')`\n  margin: 0 1.25rem 0 0;\n`\n\nexport const MenuRecipePage: React.FC<IProps> = ({ recipeId, recipeType }) => (\n  <RecipeFormLoader recipeId={recipeId} recipeType={recipeType}>\n    <FormContainer>\n      <FullPageLayout\n        width={16}\n        pageTitle={getRecipeTypeLabel(recipeType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <Card>\n          <RecipeFormBasic recipeType={recipeType} />\n        </Card>\n        <Card>\n          <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n        </Card>\n        <Card>\n          <Headline>\n            <Trans>Recipe ingredients</Trans>\n          </Headline>\n          <VerticalGap />\n          <RecipeIngredientsView />\n        </Card>\n        <IsCategoryType type={recipeType} isMain={true}>\n          <Card>\n            <Headline>\n              <Trans>Sidedish categories</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>These sidedish are presented with recipe</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.SideDish}\n              field=\"sideDishes\"\n              addButtonText={i18n.t`Attach sidedish category`}\n              noRowsText={i18n.t`Recipe has no sidedish category attached`}\n            />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Category assignments</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>Recipe is in these categories</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.Main}\n              field=\"categories\"\n              addButtonText={i18n.t`Add to category`}\n              noRowsText={i18n.t`Recipe is not in any category`}\n            />\n          </Card>\n        </IsCategoryType>\n      </FullPageLayout>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n        >\n          <SubmitButton isCreate={recipeId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </FormContainer>\n  </RecipeFormLoader>\n)\n","import { Trans } from '@lingui/macro'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { FMenuWareUnitFragment } from '../../../graph/generated'\nimport { priceFormat } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<FMenuWareUnitFragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.FC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format(priceFormat)} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { QMenuStockDepositStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: QMenuStockDepositStockItems[]\n  onSelect(stockItem: QMenuStockDepositStockItems): void\n}\n\nexport const StockDepositResultTable: React.FC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTableContainer>\n    <DataTable items={stockItems} heightStretch={false}>\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererSelect}\n        columnData={{ onSelect }}\n      />\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n      <Column\n        dataKey=\"code\"\n        width={100}\n        label={i18n.t`Card code`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Card name`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n    </DataTable>\n  </DataTableContainer>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <SizerButton>\n      <TouchButton iconName=\"done\" onClick={() => onSelect(rowData)} />\n    </SizerButton>\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  componentDidUpdate(prevProps: IProps) {\n    if (prevProps.stockItems !== this.props.stockItems) {\n      this.onFilter(this.state.searchValue)\n    }\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { observer } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QMenuStockDepositStockItems,\n  useMMenuStockQuantity,\n  useQMenuStockDeposit,\n} from '../../../graph/generated'\n\nexport type TStockItem = QMenuStockDepositStockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader = observer<IProps>(({ children }) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockDeposit({\n    branchId: settings.branchId,\n  })\n  const [changeQuantity] = useMMenuStockQuantity()\n  const onDeposit: TDepositFn = (stockItem, quantity) => {\n    changeQuantity({\n      stockItem: stockItem.id,\n      quantityChange: quantity,\n    })\n  }\n  return children(loading ? [] : data.stockItems, onDeposit)\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.FC<IProps> = props => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock deposit`}\n    useBackButton={true}\n  >\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { QMenuStockListStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\n\ntype TStockItem = QMenuStockListStockItems\n\ninterface IProps {\n  stockItems: TStockItem[]\n  isLoading: boolean\n}\n\nexport const StockListTable: React.FC<IProps> = ({ stockItems, isLoading }) => (\n  <DataTable\n    items={stockItems}\n    heightStretch={true}\n    noRowsRenderer={() =>\n      isLoading ? (\n        <Loading />\n      ) : (\n        <h3>\n          <Trans>Selected branch has no stock cards</Trans>\n        </h3>\n      )\n    }\n  >\n    <Column\n      dataKey=\"id\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={checkColumnAccess(\n        { canQuery: 'stockItem' },\n        ColumnRendererEdit,\n      )}\n    />\n    <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      minWidth={30}\n      flexGrow={2}\n      label={i18n.t`Card name`}\n    />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"allowNegative\"\n      width={300}\n      label={i18n.t`Negative stock`}\n      cellRenderer={stockAllowNegative}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockListTable } from './StockListTable'\n\nexport const StockListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockList({\n    branchId: settings.branchId,\n  })\n\n  const filteredItems = useComputed(\n    () => {\n      if (!data || !data.stockItems || data.stockItems.length === 0) {\n        return []\n      }\n      const searchValue = settings.menu.stock.filterInput\n      const partialMatch = isPartialMatch(searchValue)\n      return data.stockItems.filter(\n        RM.cond([\n          [RM.propEq('plu', searchValue), RM.T],\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.stockItems],\n  )\n\n  return <StockListTable stockItems={filteredItems} isLoading={loading} />\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\n\nexport const MenuStockListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"stock\" />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createStockItem\">\n          <CreateButton routeTo=\"create\" />\n        </CanMutate>\n        <DataTableContainer>\n          <StockListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FMenuAllergenFragmentDoc,\n  FMenuWareUnitFragmentDoc,\n} from '../../../graph/generated'\nimport { GMenuStockForm } from '../../../graph/types'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...FMenuWareUnit\n      }\n      allergens {\n        ...FMenuAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n  ${FMenuWareUnitFragmentDoc}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  WareUnitEnum,\n} from '../../../graph/generated'\nimport { GMenuStockDefaults, GMenuStockForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.FC<IProps> = ({ stockId, children }) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={stockId === null}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId: stockId! },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n  icon?: string\n}\n\nexport const FormInputAllergens: React.FC<IProps> = ({\n  field = 'allergens',\n  icon = 'error_outline',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={icon} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.FC<IProps> = ({}) => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputPlu: React.FC<IProps> = ({\n  field = 'plu',\n  icon = 'fingerprint',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {\n  icon?: string\n}\n\nexport const FormInputWareUnit: React.FC<IProps> = ({\n  field = 'wareUnit',\n  icon = 'select_all',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={icon} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.FC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <CardDock position=\"BottomRight\">\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </CardDock>\n  </FormContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Column, ColumnRendererEdit, DataTable } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport Pacman from '../../../atoms/Pacman'\nimport { useQStockRecipes } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  stockId: ID\n}\n\nexport const StockRecipesView: React.FC<IProps> = ({ stockId }) => {\n  const { data, loading } = useQStockRecipes({\n    stockId,\n  })\n\n  if (loading) {\n    return <Pacman />\n  }\n\n  const {\n    stockItem: { ingredients },\n  } = data\n  if (ingredients.length === 0) {\n    return (\n      <Headline>\n        <Trans>No recipes are using stock card</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      <Headline>\n        <Trans>Recipes using this card</Trans>\n      </Headline>\n\n      <DataTable\n        items={[...ingredients]}\n        disableHeader={true}\n        fullHeight={true}\n      >\n        <Column\n          dataKey=\"\"\n          cellDataGetter={({ rowData }) => ({\n            pathname: `/settings/menu/recipe/${rowData.recipe.id}`,\n            state: { recipeType: rowData.recipe.recipeType.enum },\n          })}\n          cellRenderer={ColumnRendererEdit}\n          width={100}\n        />\n        <Column\n          dataKey=\"recipe\"\n          width={300}\n          label={i18n.t`Name`}\n          cellRenderer={({ rowData }) => (\n            <>\n              {rowData.recipe.nameLabel}\n              <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n            </>\n          )}\n        />\n      </DataTable>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const MenuStockPage: React.FC<IProps> = ({ stockId }) => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock card`}\n    hideLogoutWidget={true}\n    useBackButton={true}\n  >\n    <StockFormLoader stockId={stockId}>\n      <>\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              stockId === null ? 'createStockItem' : 'updateStockItem'\n            }\n          >\n            <SubmitButton isCreate={stockId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n        <Card>\n          <StockFormMain />\n          {stockId && (\n            <CanQuery queryName=\"recipes\">\n              <StockRecipesView stockId={stockId} />\n            </CanQuery>\n          )}\n        </Card>\n      </>\n    </StockFormLoader>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MenuRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      render={() => <Redirect to={`${match.path}/category`} />}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/category`}\n      component={MenuCategoryListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/category/:categoryId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuCategoryPage\n          categoryId={params.categoryId === 'create' ? null : params.categoryId}\n          categoryType={state.categoryType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/recipe`}\n      component={MenuRecipeListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/recipe/:recipeId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuRecipePage\n          recipeId={params.recipeId === 'create' ? null : params.recipeId}\n          recipeType={state.recipeType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/stock`}\n      component={MenuStockListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/deposit`}\n      component={MenuStockDepositPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/:stockId`}\n      render={({ match: { params } }) => (\n        <MenuStockPage\n          stockId={params.stockId === 'create' ? null : params.stockId}\n        />\n      )}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default MenuRoutes\n"],"sourceRoot":""}