{"version":3,"sources":["molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","helpers/filter.ts","atoms/RelativeLink.tsx","atoms/FormInputFlatSelect.tsx","atoms/DragHandle.tsx","atoms/FormInputSelect.tsx","../node_modules/@speedlo/assets/index.js","../node_modules/@speedlo/assets/Flaticon.js","molecules/TouchButtonEdit.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/extends.js","molecules/TouchButtonRemove.tsx","molecules/TouchButtonVisibility.tsx","atoms/DataTable.tsx","molecules/SortableDataTable.tsx","segments/menu/molecules/CategoryListTable.tsx","segments/menu/molecules/CreateButton.tsx","segments/menu/organisms/CategoryList.tsx","segments/menu/organisms/MenuGuideDownload.graphql.ts","segments/menu/organisms/MenuGuideDownload.tsx","segments/menu/pages/MenuCategoryListPage.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/labels.ts","segments/menu/molecules/SubmitButton.tsx","atoms/FormContainer.tsx","atoms/PictogramDisplay.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/organisms/CategoryFormBasic.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","segments/menu/organisms/CategoryFormLoader.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","segments/menu/organisms/RecipeList.graphql.ts","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/pages/MenuCategoryPage.tsx","atoms/DataTableContainer.tsx","segments/menu/molecules/MenuCategoryFilter.graphql.ts","segments/menu/molecules/MenuCategoryFilter.tsx","segments/menu/molecules/MenuFilterInput.tsx","atoms/RelativeRedirect.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipeListPage.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeCategoryView.tsx","segments/menu/molecules/FormInputCode.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/organisms/RecipeFormLoader.tsx","atoms/FormDisplayField.tsx","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormPricingField.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormLoader.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","segments/menu/molecules/FormInputPlu.tsx","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/organisms/StockFormMain.tsx","segments/menu/organisms/StockRecipesView.graphql.ts","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/routes/MenuRoutes.tsx"],"names":["__webpack_require__","d","__webpack_exports__","PageLayoutFullHeightItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","styled","div","withConfig","displayName","componentId","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref","children","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","a","createElement","id","FlexRowSingle","_ref$justify","justify","VerticalGap","_ref$size","size","_ref$sizeUnit","sizeUnit","concat","ScrollArea","CardDock","styled_components__WEBPACK_IMPORTED_MODULE_0__","_ref2","_ref2$position","position","_ref$position","isPartialMatch","searchValue","search","toLocaleLowerCase","propValue","includes","RelativeLink","to","from","linkProps","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","assign","resolveLocation","pathname","resolvePathname","resolved","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","FormInputFlatSelect","_React$Component","_getPrototypeOf2","_this","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","length","args","Array","_key","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","validate","value","_this$props","isRequired","isMulti","validationName","isArray","_i18n__WEBPACK_IMPORTED_MODULE_9__","_","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","fieldApi","_this$props2","items","defaultSelection","getItemId","selection","selectedItems","filter","item","onMultiSelection","setValue","map","setTouched","selectedItem","find","onSingleSelection","_this2","_this$props3","field","_this$props3$fieldIsP","fieldIsPure","_this$props3$isRequir","_this$props3$isCleara","isClearable","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","react_form__WEBPACK_IMPORTED_MODULE_7__","pure","_SelectControlFlat__WEBPACK_IMPORTED_MODULE_10__","getControlProps","isInvalid","Boolean","error","React","Component","defaultProps","RM","prop","DragHandle","react_sortable_hoc__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_Icon__WEBPACK_IMPORTED_MODULE_3__","DragHandleContainerStyled","SortableHandle","iconName","FormInputSelect","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_i18n__WEBPACK_IMPORTED_MODULE_10__","0","validatioName","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","options","getOptionValue","defaultValue","isSelected","F","onChange","selectedOptions","option","_this$props2$fieldIsP","react__WEBPACK_IMPORTED_MODULE_7___default","react_form__WEBPACK_IMPORTED_MODULE_8__","_SelectControl__WEBPACK_IMPORTED_MODULE_11__","onFocus","styles","control","base","borderColor","exports","pictograms","module","TouchButtonEdit","target","_ref$Link","Link","objectWithoutProperties","react_default","TouchButton","width","ButtonHeight","height","_extends","i","source","prototype","hasOwnProperty","TouchButtonRemove","TouchButtonVisibility","isVisible","iconColor","Colors","white","greyMiddle","color","DataTable","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","isLoading","heightStretch","es","autoHeight","headerHeight","rowHeight","rowCount","rowGetter","index","noRowsRenderer","Pacman","renderTable","scrollElement","window","_ref3","disableHeight","_ref4","checkColumnAccess","_ref5","renderer","canQuery","canMutate","cellProps","result","CanQuery","queryName","CanMutate","mutationName","ColumnRendererEdit","_ref6","cellData","TouchButtonEdit_TouchButtonEdit","ColumnRendererRemove","_ref7","columnData","TouchButtonRemove_TouchButtonRemove","onClick","onRemove","ColumnRendererVisibility","_ref8","rowData","TouchButtonVisibility_TouchButtonVisibility","onToggle","NoteText","ColumnRendererWithNote","_ref9","Fragment","noteKey","DataTableEmptyText","_ref10","_ref10$text","text","i18n","SortableTableRowRenderer","SortableElement","columns","style","className","SortableDataTableContainer","SortableContainer","SortableDataTable","state","sortedItems","onHandleSorting","asyncToGenerator","regenerator_default","mark","_callee","newIndex","oldIndex","currentItems","sortSuccess","wrap","_context","prev","next","abrupt","toConsumableArray","arrayMove","setState","onSort","offset","t0","sent","stop","_x","useDragHandle","lockAxis","lockToContainerEdges","onSortEnd","rowRenderer","rowProps","getDerivedStateFromProps","nextProps","CategoryListTable","categories","_ref$showEditColumn","showEditColumn","_ref$showRemoveColumn","showRemoveColumn","_ref$showVisibilityCo","showVisibilityColumn","_ref$showHeader","showHeader","_ref$isSortable","isSortable","_ref$isLoading","_ref$heightStretch","_ref$noRowsDisplay","noRowsDisplay","disableHeader","SortableDataTable_SortableDataTable","DataTable_DataTable","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","cellDataGetter","getCategoryRoute","categoryType","enum","label","CreateButtonContainer","CreateButton","_ref$routeTo","routeTo","green","observer","headline","_ref$subHeadline","subHeadline","settings","useRoot","_useQuery","useQuery","CategoryListQuery","objectSpread","getQueryProps","suspend","data","loading","updateQuery","refetch","FlexColumn","widthGrowIndex","Headline","fixedWidth","CreateButton_CreateButton","CategoryListTable_CategoryListTable","menu","category","changeVisibility","sortCategory","MenuGuideDownloadQuery","gql","_templateObject","MenuGuideDownloadButton","black","MenuGuideDownload","variables","branchId","companyBranch","foodMenuUrl","href","_lingui_react","PartialDataTableContainer","MenuCategoryListPage","FullPageLayout","pageTitle","useBackButton","Card","stretchToParent","SettingsCompanyBranchPicker","organisms_CategoryList","WareCategoryTypeEnum","Main","SideDish","Cover","TopRightButtonContainer","Radiuses","Button","_categories","defineProperty","i18nMark","recipes","_recipes","getCategoryTypeLabel","getRecipeTypeLabel","recipeType","SubmitButton","_ref$isCreate","isCreate","react_form_es","render","form","FormSubmit","isFormValid","getButtonText","FormContainer","FormColumn","PictogramDisplayStyled","_ref2$fontSize","fontSize","_ref2$fontSizeUnit","fontSizeUnit","PictogramDisplay","pictogramId","_ref$fontSize","_ref$fontSizeUnit","getClassName","MenuCategoryPictogramSelect","SelectControl","pictogram","availablePictograms","formatOptionLabel","PictogramDisplay_PictogramDisplay","components","SingleValue","container","menuList","maxHeight","isSearchable","FormDeleteButton","confirmText","onDelete","react_router","history","TouchButtonDelete","goBack","FormInputInternalNote","_ref$field","_ref$label","icon","IconLine","labelWidth","FormInputTextBox","inputFullWidth","FormInputName","_ref$icon","CategoryBasicForm","Sizer","FormInputName_FormInputName","placeholder","FormInputInternalNote_FormInputInternalNote","FormInputCheckbox","MenuCategoryPictogramSelect_MenuCategoryPictogramSelect","WithSettings","FormDeleteButton_FormDeleteButton","deleteCategory","FormLoader","shouldLoad","loader","_useState","useState","_useState2","slicedToArray","values","setValues","useEffect","then","NavigateBack","ErrorPop","MenuBaseFormLoader","submitError","validationErrors","_this$state","renderSubmitError","renderValidationErrors","messages","isApolloError","propEq","userErrors","graphQLErrors","renderPopover","errors","index_es","open","anchorEl","document","getElementById","onClose","anchorOrigin","vertical","horizontal","message","idx","_this3","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack_NavigateBack","defaultValues","defaults","loadedDefaults","formApi","logForm","onSubmit","_callee2","_context2","onSubmitFailure","keys","logError","renderErrors","useMenu","CategoryFormLoader","categoryId","MenuBaseFormLoader_MenuBaseFormLoader","createCategory","updateCategory","visible","internalNoteLabel","nameLabel","getDefaults","client","query","MenuCategoryFormQuery","fetchPolicy","wareCategory","RecipeListTable","onSortRecipe","_ref$showTypeColumn","showTypeColumn","react_content_loader_es","getRecipeRoute","ColumnRendererCode","flexGrow","ColumnRendererPrice","priceType","TPriceType","Delivery","Inhouse","prices","foundPrice","pathEq","price","formattedValue","type","MenuSuggestionPanel","onAdd","_props$addLabel","addLabel","_props$addButtonText","addButtonText","selectProps","_useStateRef","useStateRef","_useStateRef2","getSelected","setSelected","onConfirm","useCallback","selected","onKeyDown","ev","onSelect","margin","getOptionLabel","disabled","MenuRecipeListQuery","RecipeList_graphql_templateObject","MenuRecipeFragment","QueryRecipeList","buildQuery","RecipeSuggestionPanel","filterRecipes","observe","FormFixedRow","FormStretchedRow","CategoryRecipesView","CategoryRecipesView_FormContainer","RecipeSuggestionPanel_RecipeSuggestionPanel","without","addedRecipe","RecipeListTable_RecipeListTable","recipeId","reject","MenuCategoryPage","CategoryFormLoader_CategoryFormLoader","hideLogoutWidget","MenuCategoryPage_FormContainer","MenuCategoryPage_FormFixedRow","CategoryFormBasic_CategoryBasicForm","MenuCategoryPage_FormStretchedRow","CategoryRecipesView_CategoryRecipesView","SubmitButton_SubmitButton","DataTableContainer","MenuCategoryFilterQuery","MenuCategoryFilter_graphql_templateObject","MenuCategoryFilter","recipe","setCategoryFilter","grouped","groupBy","cat","toString","typeString","getOptions","MenuFilterInput","modelType","model","useDebounceCallback","setFilterInput","Search","FormInputStyled","RelativeRedirect","RecipeTypeSelection","isOpen","onOpen","RelativeRedirect_RelativeRedirect","push","preventDefault","RecipeListLoader","categoryFilterId","filteredRecipes","useComputed","partialMatch","filterInput","cond","propSatisfies","T","MenuRecipeListPage","MenuFilterInput_MenuFilterInput","MenuCategoryFilter_MenuCategoryFilter","RecipeTypeSelection_RecipeTypeSelection","IsCategoryType","isMain","isSideDish","isCover","currentCategories","RecipeCategoryView","noRowsText","organisms_CategorySuggestionPanel","addedCategory","FormInputCode","FormInputDescription","AllergensQuery","FormInputAllergens_graphql_templateObject","AllergenFragment","QueryAllergens","AllergenBox","MarginAroundFormComponents","active","css","yellow","MenuAllergenIndicator","allergens","allergen","title","code","extractAllergens","pipe","flatten","uniq","RecipeAllergenDisplay","AllergenIndicator_MenuAllergenIndicator","RecipeFormBasic","FormInputCode_FormInputCode","FormInputDescription_FormInputDescription","IsCategoryType_IsCategoryType","RecipeAllergenDisplay_RecipeAllergenDisplay","deleteRecipe","RecipeFormLoader","createRecipe","updateRecipe","vats","currencyCode","queryDefaults","getPriceMap","vatId","MenuRecipeFormQuery","normalizeValues","acc","WarePriceTypeEnum","reduce","internalNote","descriptionLabel","image","sourcePrices","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","recipeSource","warePriceType","associatedRecipe","formattedPrice","quantity","_ref7$stockItem","stockItem","unitLabel","wareUnit","sourcePrice","vat","currency","formInputPriceValidate","isEmpty","validateNumber","FormInputPrice","VatsQuery","FormInputVatSelect_graphql_templateObject","QueryVat","FormInputVatSelect","WithRoot","queryProps","renderLoading","formatItem","FormPricingCurrencyCode","FormPricingField","FormInputPrice_FormInputPrice","FormInputVatSelect_FormInputVatSelect","RecipeAssocListTable","RecipeAssociatedView","priceTypeRecipes","rejectSuggestions","some","onAddRecipe","RecipeAssocListTable_RecipeAssocListTable","RecipeForm_graphql","priceTypes","RecipeFormPricing","react","FormPricingField_FormPricingField","TRecipeType","RecipeAssociatedView_RecipeAssociatedView","RecipeIngredientsTable","rowIndex","validateQuantity","fieldName","validator","isFloat","min","unselectedStockOnly","differenceWith","RecipeIngredientsView","RecipeIngredientsTable_RecipeIngredientsTable","StockList_graphql","stockItems","addedStockItem","MenuRecipePage","RecipeFormLoader_RecipeFormLoader","MenuRecipePage_FormContainer","RecipeFormBasic_RecipeFormBasic","RecipeFormPricing_RecipeFormPricing","RecipeIngredientsView_RecipeIngredientsView","RecipeCategoryView_RecipeCategoryView","StockDepositConfirmButton","numeral","format","priceFormat","1","StockDepositFilterInput","forwardRef","ref","onFilter","autoFocus","onKeyPressCapture","StockDepositQuantityInput","enabled","_onChange","StockDepositResultTable","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","indexOf","begin","substring","match","end","StockDepositControl","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","trim","head","onConfirmFilter","current","focus","onQuantity","onSelectStockItem","onDeposit","_this$state2","hasSearchValue","isNoneFind","isMultiFind","StockDepositConfirmButton_StockDepositConfirmButton","cardName","StockDepositResultTable_StockDepositResultTable","StockDepositLoader","_useQMenuStockDeposit","useQMenuStockDeposit","changeQuantity","useMMenuStockQuantity","quantityChange","MenuStockDepositPage","StockDepositLoader_StockDepositLoader","StockDepositControl_StockDepositControl","StockListTable","Loading","stockAllowNegative","StockListLoader","MenuStockListQuery","filteredItems","stock","StockListTable_StockListTable","MenuStockListPage","MenuStockFormQuery","StockForm_graphql_templateObject","WareUnitFragment","MenuStockDefaultsQuery","_templateObject2","StockFormLoader","stockId","createItem","updateItem","allowNegativeDefault","getAllowNegativeDefault","allowNegative","note","plu","FieldStateEnum","Default","isEnabled","Disabled","FormInputAllergens","Enabled","FormInputAllowNegative","obj","TypeError","_objectDestructuringEmpty","labelForDefault","useMemo","FormInputPlu","WareUnitsQuery","FormInputWareUnit_graphql_templateObject","QueryWareUnits","FormInputWareUnit","wareUnits","StockFormMain","FormInputWareUnit_FormInputWareUnit","FormInputPlu_FormInputPlu","FormInputAllergens_FormInputAllergens","FormInputAllowNegative_FormInputAllowNegative","deleteItem","StockRecipesQuery","StockRecipesView_graphql_templateObject","QueryStockRecipes","StockRecipesView","MenuStockPage","StockFormLoader_StockFormLoader","StockFormMain_StockFormMain","StockRecipesVIew_StockRecipesView","MenuRoutes_MenuRoutes","MenuRoutes","SecureRoute","exact","path","component","params","MenuCategoryPage_MenuCategoryPage","MenuRecipePage_MenuRecipePage","MenuStockPage_MenuStockPage","NotFoundPage"],"mappings":"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","file":"static/js/176.ce02229d.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends Omit<\n      ISelectControlFlatProps<ItemType>,\n      | 'selectedItems'\n      | 'onMultiSelection'\n      | 'selectedItem'\n      | 'onSingleSelection'\n    > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n  defaultSelection?: ReadonlyArray<ItemType> | ItemType\n}\n\nexport class FormInputFlatSelect<ItemType> extends React.Component<\n  IFormInputSelectProps<ItemType>\n> {\n  static defaultProps = {\n    validationName: i18n.t`Value`,\n    getItemId: RM.prop('id'),\n  }\n  validate = value => {\n    const { isRequired, isMulti, validationName } = this.props\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && (value === null || value === undefined)) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n  getControlProps(\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> {\n    const { isMulti, items, defaultSelection, getItemId } = this.props\n\n    const selection = fieldApi.value || defaultSelection\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) =>\n        selection.includes(getItemId!(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId!))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId!(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId!(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      isClearable = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} pure={fieldIsPure} validate={this.validate}>\n        {fieldApi => (\n          <SelectControlFlat<ItemType>\n            {...this.getControlProps(fieldApi)}\n            isInvalid={Boolean(fieldApi.error)}\n            isClearable={isClearable && !isRequired}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      defaultValue,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","exports.pictograms = require('./Flaticon');","module.exports = ['pizza', 'beans', 'cheese', 'hot-pepper', 'smoking-barbecue', 'meat-pie', 'sausage', 'hot-dog', 'fruit', 'fruit-1', 'fruit-2', 'strawberry', 'soup', 'noodles', 'ramen', 'rice', 'spaghetti', 'food', 'piece-of-cake', 'beer', 'marshmallow', 'cake', 'banana-split', 'ice-cream', 'cookie', 'doughnut', 'cupcake', 'kebab', 'steak', 'fish', 'fondue', 'shrimp', 'berry', 'food', 'food-1', 'food-2', 'food-3', 'food-4', 'food-5', 'food-6', 'food-7', 'food-8', 'food-9', 'food-10', 'food-11', 'food-12', 'food-13', 'food-14', 'food-15', 'food-16', 'food-17', 'food-18', 'food-19', 'food-20', 'food-21', 'food-22', 'food-23', 'food-24', 'food-25', 'food-26', 'food-27', 'food-28', 'food-29', 'food-30', 'drink', 'drink-1', 'drink-2', 'drink-3', 'drink-4', 'drink-5', 'cup', 'cup-1', 'cup-2', 'whisky'];","import { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends Omit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.FC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <TouchButton\n      iconName=\"mode_edit\"\n      width={Spacing.ButtonHeight}\n      height={Spacing.ButtonHeight}\n      {...props}\n    />\n  </Link>\n)\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from 'react'\n\nimport { Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.FC<IProps> = ({ ...props }) => (\n  <TouchButton\n    iconName=\"remove_circle_outline\"\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors, Spacing } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.FC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <TouchButton\n    iconName=\"remove_red_eye\"\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n    color={Colors.greyMiddle}\n    {...props}\n  />\n)\n","import 'react-virtualized/styles.css'\n\nimport React, { Component } from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport Pacman from './Pacman'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport class DataTable<T> extends Component<IDataTableProps<T>> {\n  static defaultProps = {\n    heightStretch: false,\n  }\n  renderTable(width: number, height: number) {\n    const { items, children, isLoading, heightStretch, ...props } = this.props\n\n    return (\n      <Table\n        autoHeight={!heightStretch}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowHeight={60}\n        rowCount={items ? items.length : 0}\n        rowGetter={({ index }) => items[index]}\n        noRowsRenderer={() => (isLoading ? <Pacman /> : null)}\n        {...props}\n      >\n        {children}\n      </Table>\n    )\n  }\n  render() {\n    return this.props.heightStretch ? (\n      <AutoSizer>\n        {({ width, height }) => this.renderTable(width, height)}\n      </AutoSizer>\n    ) : (\n      <WindowScroller scrollElement={window}>\n        {({ height }) => (\n          <AutoSizer disableHeight={true}>\n            {({ width }) => this.renderTable(width, height)}\n          </AutoSizer>\n        )}\n      </WindowScroller>\n    )\n  }\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.Component<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, isLoading, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        useDragHandle={true}\n        lockAxis=\"y\"\n        lockToContainerEdges={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={rowProps => {\n          return <SortableTableRowRenderer {...rowProps} />\n        }}\n        isLoading={isLoading}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { GMenuCategoryListItem } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\n\ntype TCategory = GMenuCategoryListItem.Fragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.FC<IProps> = ({\n  categories,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  const Table: React.FC = ({ children }) =>\n    isSortable ? (\n      <SortableDataTable\n        heightStretch={heightStretch}\n        onSort={onSort}\n        {...props}\n      >\n        {children}\n      </SortableDataTable>\n    ) : (\n      <DataTable heightStretch={heightStretch} {...props}>\n        {children}\n      </DataTable>\n    )\n  return (\n    <Table>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'wareCategory' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getCategoryRoute(rowData.id, rowData.categoryType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateWareCategory' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNoteLabel' }}\n      />\n      <Column\n        dataKey=\"countRecipes\"\n        label={i18n.t`Recipe count`}\n        width={100}\n        cellRenderer={({ cellData }) =>\n          `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n        }\n      />\n      {isSortable && (\n        <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n      )}\n    </Table>\n  )\n}\n","import { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLAnchorElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.FC<IProps> = ({\n  routeTo = 'create',\n  onClick,\n}) => (\n  <CreateButtonContainer>\n    <RelativeLink to={routeTo} onClick={onClick}>\n      <TouchButton\n        iconName=\"add_circle\"\n        color={Colors.green}\n        width={Spacing.ButtonHeight}\n        height={Spacing.ButtonHeight}\n      />\n    </RelativeLink>\n  </CreateButtonContainer>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GCategoryList } from '../../../graph/types'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { CategoryListQuery } from './CategoryList.graphql'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n  heightStretch = false,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery, refetch } = useQuery<\n    GCategoryList.Query,\n    GCategoryList.Variables\n  >(CategoryListQuery, {\n    ...settings.getQueryProps({ categoryType }),\n    suspend: false,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <CreateButton routeTo={getCategoryRoute('create', categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories}\n        onToggle={settings.menu.category.changeVisibility}\n        isSortable={true}\n        showHeader={false}\n        heightStretch={heightStretch}\n        showVisibilityColumn={true}\n        onSort={async ({ item, items, offset }) => {\n          updateQuery(() => ({\n            categories: items,\n          }))\n          const result = await settings.menu.category.sortCategory(\n            item.id,\n            offset,\n          )\n          if (result) {\n            await refetch()\n          }\n          return result\n        }}\n      />\n    </>\n  )\n}\n\nexport default observer(CategoryList)\n","import gql from 'graphql-tag'\n\nexport const MenuGuideDownloadQuery = gql`\n  query QMenuGuideDownload($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      foodMenuUrl\n    }\n  }\n`\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { QMenuGuideDownload } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { MenuGuideDownloadQuery } from './MenuGuideDownload.graphql'\n\nconst MenuGuideDownloadButton = styled(TouchButton)`\n  white-space: nowrap;\n  margin-left: 2rem;\n  & a {\n    text-decoration: none;\n    color: ${Colors.black};\n    padding: 1rem;\n  }\n`\n\nexport const MenuGuideDownload = observer(() => {\n  const { settings } = useRoot()\n  const { loading, data } = useQuery<\n    QMenuGuideDownload.Query,\n    QMenuGuideDownload.Variables\n  >(MenuGuideDownloadQuery, {\n    suspend: false,\n    variables: { branchId: settings.branchId },\n  })\n  if (\n    loading ||\n    !(data && data.companyBranch && data.companyBranch.foodMenuUrl)\n  ) {\n    return null\n  }\n  return (\n    <MenuGuideDownloadButton color={Colors.greyMiddle}>\n      <a href={data.companyBranch.foodMenuUrl} target=\"_blank\">\n        <Trans>Menu codes manual</Trans>\n      </a>\n    </MenuGuideDownloadButton>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport CategoryList from '../organisms/CategoryList'\nimport { MenuGuideDownload } from '../organisms/MenuGuideDownload'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.FC = props => (\n  <>\n    <FullPageLayout\n      pageTitle={i18n.t`Category overview`}\n      useBackButton={true}\n    />\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuGuideDownload />\n          </FlexColumn>\n        </FlexRowSingle>\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n            heightStretch={false}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n            heightStretch={false}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n            heightStretch={false}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0;\n  top: 0rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menutypes'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport function getCategoryTypeLabel(categoryType: TCategoryType) {\n  return i18n._(categories[categoryType])\n}\n\nexport function getRecipeTypeLabel(recipeType: TRecipeType) {\n  return i18n._(recipes[recipeType])\n}\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.FC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst PictogramDisplayStyled = styled.div`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport const PictogramDisplay: React.FC<IProps> = ({\n  pictogramId,\n  fontSize = 2,\n  fontSizeUnit = 'rem',\n}) => (\n  <PictogramDisplayStyled\n    className={getClassName(pictogramId)}\n    fontSize={fontSize}\n    fontSizeUnit={fontSizeUnit}\n  />\n)\n\nfunction getFontSize({ fontSize = 2, fontSizeUnit = 'rem' }: Partial<IProps>) {\n  return `${fontSize}${fontSizeUnit}`\n}\n\nfunction getClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.FC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value && !Array.isArray(value)) {\n            fieldApi.setValue(value.pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router-dom'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.FC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.FC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputName: React.FC<IProps> = ({\n  field = 'nameLabel',\n  icon = 'label',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputFullWidth={true}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.FC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <Sizer width={22}>\n        <FormInputName\n          placeholder={i18n.t`Category name`}\n          inputFullWidth={true}\n        />\n      </Sizer>\n      <Sizer width={22}>\n        <FormInputInternalNote placeholder={i18n.t`Category internal note`} />\n      </Sizer>\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <CardDock position=\"BottomRight\">\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </CardDock>\n  </FormContainer>\n)\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(\n    () => {\n      if (!shouldLoad) {\n        return\n      }\n      loader().then(setValues)\n    },\n    [shouldLoad],\n  )\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.FC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              const defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuCategoryForm } from '../../../graph/types'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuCategoryFormQuery } from './CategoryForm.graphql'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport type TCategoryFormValues = GMenuCategoryForm.WareCategory\n\nexport const CategoryFormLoader: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={categoryId === null}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuCategoryForm.Query>({\n          query: MenuCategoryFormQuery,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return data.wareCategory\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    categoryType: { enum: categoryType },\n    recipes: [],\n  }\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeList } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { TPriceType } from '../menutypes'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\n\ntype TRecipe = GMenuRecipeList.Recipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  onSortRecipe?: TSortHandler<TRecipe>\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.FC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  onSortRecipe,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  const Table: React.FC = ({ children }) =>\n    isSortable ? (\n      <SortableDataTable onSort={onSortRecipe} {...props}>\n        {children}\n      </SortableDataTable>\n    ) : (\n      <DataTable {...props}>{children}</DataTable>\n    )\n  return (\n    <Table>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n      {isSortable && (\n        <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n      )}\n    </Table>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import { useStateRef } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: string }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(\n    () => {\n      const selected = getSelected()\n      if (selected !== null) {\n        onAdd(selected)\n        setSelected(null)\n      }\n    },\n    [onAdd],\n  )\n\n  const onKeyDown = useCallback((ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === 'Enter') {\n      onConfirm()\n    }\n  }, [])\n\n  const onSelect = useCallback(option => {\n    setSelected(option || null)\n  }, [])\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.prop('nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GMenuRecipeList } from '../../../graph/types'\nimport { MenuRecipeFragment } from '../models/MenuRecipeModel.graphql'\n\nexport const MenuRecipeListQuery = gql`\n  query GMenuRecipeList(\n    $branchId: ID!\n    $categoryId: ID\n    $categoryType: WareCategoryTypeEnum\n  ) {\n    recipes(\n      companyBranch: $branchId\n      wareCategory: $categoryId\n      wareCategoryType: $categoryType\n    ) {\n      ...GMenuRecipe\n    }\n  }\n  ${MenuRecipeFragment}\n`\n\nexport const QueryRecipeList = buildQuery<\n  GMenuRecipeList.Query,\n  GMenuRecipeList.Variables\n>(MenuRecipeListQuery)\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { QueryRecipeList } from './RecipeList.graphql'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  filterRecipes,\n  onAdd,\n}) => (\n  <WithSettings\n    observe={true}\n    render={settings => (\n      <QueryRecipeList\n        {...settings.getQueryProps({ categoryType })}\n        fetchPolicy=\"cache-and-network\"\n        render={({ recipes }) => (\n          <MenuSuggestionPanel<TRecipe>\n            options={filterRecipes(recipes)}\n            onAdd={onAdd}\n          />\n        )}\n      />\n    )}\n  />\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport styled from 'styled-components'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n  overflow-x: hidden;\n`\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<GMenuRecipe.Fragment>>) => (\n        <FormContainer>\n          <FormFixedRow>\n            <RecipeSuggestionPanel\n              categoryType={categoryType}\n              filterRecipes={RM.without(fieldApi.value)}\n              onAdd={addedRecipe =>\n                fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n              }\n            />\n          </FormFixedRow>\n          <FormStretchedRow>\n            <RecipeListTable\n              recipes={fieldApi.value}\n              isSortable={true}\n              showRemoveColumn={true}\n              showEditColumn={false}\n              showVisibilityColumn={false}\n              heightStretch={false}\n              onRemove={recipeId =>\n                fieldApi.setValue(\n                  RM.reject(RM.propEq('id', recipeId), fieldApi.value),\n                )\n              }\n              onSortRecipe={({ items }) => {\n                fieldApi.setValue(items)\n              }}\n            />\n          </FormStretchedRow>\n        </FormContainer>\n      )}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { getCategoryTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n}) => (\n  <CategoryFormLoader categoryId={categoryId} categoryType={categoryType}>\n    <>\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      />\n\n      <PageLayoutFullHeightItem>\n        <FormContainer>\n          <FormFixedRow>\n            <Card>\n              <CategoryBasicForm categoryType={categoryType} />\n            </Card>\n          </FormFixedRow>\n          <FormStretchedRow>\n            <Card stretchToParent={true}>\n              <Headline>\n                <Trans>Recipes assigned to this category</Trans>\n              </Headline>\n              <CategoryRecipesView categoryType={categoryType} />\n            </Card>\n          </FormStretchedRow>\n        </FormContainer>\n      </PageLayoutFullHeightItem>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={\n            categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n          }\n        >\n          <SubmitButton isCreate={categoryId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </>\n  </CategoryFormLoader>\n)\n","import styled from 'styled-components'\n\nexport const DataTableContainer = styled.div`\n  height: calc(100% - 4.5rem);\n  padding-top: 2rem;\n`\n","import gql from 'graphql-tag'\n\nexport const MenuCategoryFilterQuery = gql`\n  query QMenuCategoryFilter($branchId: ID!) {\n    categories: wareCategories(companyBranch: $branchId) {\n      id\n      nameLabel\n      countRecipes\n      categoryType: wareCategoryType {\n        enum\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { QMenuCategoryFilter } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { getCategoryTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\nimport { MenuCategoryFilterQuery } from './MenuCategoryFilter.graphql'\n\ninterface IProps {}\n\ntype TCategory = QMenuCategoryFilter.Categories\n\nexport const MenuCategoryFilter: React.FC<IProps> = () => {\n  const {\n    settings: {\n      menu: { recipe },\n    },\n  } = useRoot()\n\n  const { data, loading } = useQuery<\n    QMenuCategoryFilter.Query,\n    QMenuCategoryFilter.Variables\n  >(MenuCategoryFilterQuery, {\n    suspend: false,\n    variables: { branchId: recipe.branchId },\n  })\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return []\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TRecipeType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        onChange={value => recipe.setCategoryFilter((value as TCategory).id)}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={false}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.prop('nameLabel')}\n      />\n    </Sizer>\n  )\n}\n","import { Search } from '@material-ui/icons'\nimport { useDebounceCallback } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <Sizer width={17}>\n        <FormInputStyled\n          inputFullWidth={true}\n          onChange={ev => onChange(ev.target.value)}\n          placeholder={i18n.t`Filter by name or code`}\n        />\n      </Sizer>\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport { Redirect, RedirectProps } from 'react-router-dom'\n\nimport { resolveLocation } from './RelativeLink'\n\ninterface IProps extends RedirectProps {}\n\nexport const RelativeRedirect: React.FC<IProps> = ({ to, from, ...props }) => (\n  <Redirect\n    to={resolveLocation(to, from || `${location.pathname}/`)}\n    from={from}\n    {...props}\n  />\n)\n","import { Trans } from '@lingui/macro'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport React, { Component } from 'react'\n\nimport { RelativeRedirect } from '../../../atoms/RelativeRedirect'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\nimport { CreateButton } from './CreateButton'\n\ninterface IProps {}\n\ninterface IState {\n  isOpen: boolean\n  recipeType: Maybe<WareCategoryTypeEnum>\n}\n\nexport class RecipeTypeSelection extends Component<IProps, IState> {\n  state = { isOpen: false, recipeType: null }\n  onClose = () => {\n    this.setState({ isOpen: false })\n  }\n  onOpen = () => {\n    this.setState({ isOpen: true })\n  }\n  onSelect = (recipeType: WareCategoryTypeEnum) => () => {\n    this.setState({ isOpen: true, recipeType })\n  }\n  render() {\n    const { isOpen, recipeType } = this.state\n    return (\n      <>\n        {recipeType !== null && (\n          <RelativeRedirect\n            to={getRecipeRoute('create', recipeType)}\n            push={true}\n          />\n        )}\n        <CreateButton\n          onClick={ev => {\n            ev.preventDefault()\n            this.onOpen()\n          }}\n        />\n        <Dialog open={isOpen} onClose={this.onClose}>\n          <DialogTitle>Select item type</DialogTitle>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Main)}>\n            <Trans>Ware</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.SideDish)}>\n            <Trans>Sidedish</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Cover)}>\n            <Trans>Cover</Trans>\n          </TouchButton>\n        </Dialog>\n      </>\n    )\n  }\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GMenuRecipeList } from '../../../graph/types'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\nimport { MenuRecipeListQuery } from './RecipeList.graphql'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GMenuRecipeList.Query,\n    GMenuRecipeList.Variables\n  >(MenuRecipeListQuery, {\n    ...settings.getQueryProps({\n      categoryId: settings.menu.recipe.categoryFilterId,\n    }),\n    suspend: false,\n    fetchPolicy: 'cache-and-network',\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data || !data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuCategoryFilter } from '../molecules/MenuCategoryFilter'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const MenuRecipeListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"recipe\" />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuCategoryFilter />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createRecipe\">\n          <RecipeTypeSelection />\n        </CanMutate>\n        <DataTableContainer>\n          <RecipeListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.FC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GCategoryList, GMenuCategoryListItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { CategoryListQuery } from './CategoryList.graphql'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = GMenuCategoryListItem.Fragment\n\nconst CategorySuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GCategoryList.Query,\n    GCategoryList.Variables\n  >(CategoryListQuery, {\n    ...settings.getQueryProps({ categoryType }),\n    fetchPolicy: 'cache-and-network',\n    suspend: false,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <MenuSuggestionPanel<TCategory>\n      isLoading={loading}\n      options={RM.without(currentCategories, categories)}\n      addButtonText={addButtonText}\n      onAdd={onAdd}\n    />\n  )\n}\n\nexport default observer(CategorySuggestionPanel)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuCategoryListItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport CategorySuggestionPanel from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\nexport const RecipeCategoryView: React.FC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<GMenuCategoryListItem.Fragment[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.FC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        isRequired={true}\n        validatioName={i18n.t`Code`}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.FC<IProps> = ({\n  field = 'descriptionLabel',\n  icon = 'label_outline',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GAllergens } from '../../../graph/types'\nimport { AllergenFragment } from '../graph/AllergenFragment.graphql'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...GAllergen\n    }\n  }\n  ${AllergenFragment}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/generated'\nimport { Colors, Spacing } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.FC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nconst extractAllergens = RM.pipe(\n  RM.map(RM.prop('allergens')),\n  // @ts-ignore Something wrong with Ramda typings\n  RM.flatten,\n  RM.uniq,\n)\n\nexport const RecipeAllergenDisplay: React.FC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = extractAllergens(value)\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.FC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon=\"error_outline\">\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <CardDock position=\"BottomRight\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </CardDock>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.FC<IProps> = ({\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={recipeId === null}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const { vats, currencyCode } = await menu.recipe.queryDefaults()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: vats[priceType],\n          currencyCode,\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\ninterface IProps {\n  field: FieldType\n  className?: string\n  children?: never\n}\n\nexport const FormDisplayField: React.FC<IProps> = ({ field, className }) => {\n  return (\n    <Field field={field}>\n      {fieldApi => <span className={className}>{fieldApi.value}</span>}\n    </Field>\n  )\n}\n","import React from 'react'\nimport { isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { validateNumber } from '../../../locale/numeral'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nconst formInputPriceValidate = (value: string) => {\n  if (\n    value === undefined ||\n    isEmpty(value + '') ||\n    !validateNumber(value + '')\n  ) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.FC<IProps> = ({\n  field = 'price.value',\n  icon = 'toll',\n  ...props\n}) => (\n  <IconLine icon={icon}>\n    <Sizer width={5}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        validate={formInputPriceValidate}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import { css } from 'emotion'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.FC<IProps> = ({\n  field = 'price.vat',\n}) => (\n  <WithRoot\n    render={({ settings }) => (\n      <QueryVat\n        {...settings.queryProps}\n        renderLoading={false}\n        render={({ vats }) => (\n          <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n            {vats && (\n              <FormInputFlatSelect\n                field={field}\n                items={vats}\n                formatItem={({ vat }) => `${vat}%`}\n                isRequired={true}\n                validationName={i18n.t`VAT`}\n              />\n            )}\n          </IconLine>\n        )}\n      />\n    )}\n  />\n)\n","import React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormDisplayField } from '../../../atoms/FormDisplayField'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nconst FormPricingCurrencyCode = styled(FormDisplayField)`\n  padding: 0.5rem;\n`\n\nexport const FormPricingField: React.FC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormPricingCurrencyCode field=\"currencyCode\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.FC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.FC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                {...settings.queryProps}\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.FC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.FC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInputTextBox\n            field={['ingredients', rowIndex, 'quantity']}\n            validate={validateQuantity}\n            inputFullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\nimport { QueryMenuStockList } from './StockList.graphql'\n\ninterface IProps {}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsView: React.FC<IProps> = () => (\n  <WithSettings\n    observe={false}\n    render={settings => (\n      <Field field=\"ingredients\">\n        {(fieldApi: IFieldApi<TIngredient[]>) => (\n          <>\n            <RecipeIngredientsTable\n              ingredients={fieldApi.value}\n              onRemove={stockItem => {\n                fieldApi.setValue(\n                  RM.reject(RM.propEq('stockItem', stockItem), fieldApi.value),\n                )\n              }}\n            />\n            <QueryMenuStockList\n              {...settings.queryProps}\n              render={({ stockItems }) => (\n                <MenuSuggestionPanel<GMenuStockItem.Fragment>\n                  addButtonText={i18n.t`Add ingredient`}\n                  options={unselectedStockOnly(stockItems, fieldApi.value)}\n                  onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n                    fieldApi.setValue([\n                      ...fieldApi.value,\n                      {\n                        stockItem: addedStockItem.id,\n                        label: addedStockItem.nameLabel,\n                        quantity: 1,\n                        unitLabel: addedStockItem.wareUnit.code,\n                        allergens: addedStockItem.allergens.map(\n                          RM.prop('enum'),\n                        ),\n                      },\n                    ])\n                  }}\n                />\n              )}\n            />\n          </>\n        )}\n      </Field>\n    )}\n  />\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { NoteText } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getRecipeTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: WareCategoryTypeEnum\n}\n\nconst FormContainer = styled('div')`\n  margin: 0 1.25rem 0 0;\n`\n\nexport const MenuRecipePage: React.FC<IProps> = ({ recipeId, recipeType }) => (\n  <RecipeFormLoader recipeId={recipeId} recipeType={recipeType}>\n    <FormContainer>\n      <FullPageLayout\n        width={16}\n        pageTitle={getRecipeTypeLabel(recipeType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <Card>\n          <RecipeFormBasic recipeType={recipeType} />\n        </Card>\n        <Card>\n          <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n        </Card>\n        <IsCategoryType type={recipeType} isMain={true}>\n          <Card>\n            <Headline>\n              <Trans>Recipe ingredients</Trans>\n            </Headline>\n            <VerticalGap />\n            <RecipeIngredientsView />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Sidedish categories</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>These sidedish are presented with recipe</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.SideDish}\n              field=\"sideDishes\"\n              addButtonText={i18n.t`Attach sidedish category`}\n              noRowsText={i18n.t`Recipe has no sidedish category attached`}\n            />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Category assignments</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>Recipe is in these categories</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.Main}\n              field=\"categories\"\n              addButtonText={i18n.t`Add to category`}\n              noRowsText={i18n.t`Recipe is not in any category`}\n            />\n          </Card>\n        </IsCategoryType>\n      </FullPageLayout>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n        >\n          <SubmitButton isCreate={recipeId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </FormContainer>\n  </RecipeFormLoader>\n)\n","import { Trans } from '@lingui/macro'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { GWareUnit } from '../../../graph/types'\nimport { priceFormat } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<GWareUnit.Fragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.FC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format(priceFormat)} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { QMenuStockDepositStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: QMenuStockDepositStockItems[]\n  onSelect(stockItem: QMenuStockDepositStockItems): void\n}\n\nexport const StockDepositResultTable: React.FC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTableContainer>\n    <DataTable items={stockItems} heightStretch={false}>\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererSelect}\n        columnData={{ onSelect }}\n      />\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n      <Column\n        dataKey=\"code\"\n        width={100}\n        label={i18n.t`Card code`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Card name`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n    </DataTable>\n  </DataTableContainer>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <TouchButton\n      iconName=\"done\"\n      width={Spacing.ButtonHeight}\n      height={Spacing.ButtonHeight}\n      onClick={() => onSelect(rowData)}\n    />\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QMenuStockDepositStockItems,\n  useMMenuStockQuantity,\n  useQMenuStockDeposit,\n} from '../../../graph/generated'\n\nexport type TStockItem = QMenuStockDepositStockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader: React.FC<IProps> = ({ children }) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockDeposit(undefined, settings.queryProps)\n  const changeQuantity = useMMenuStockQuantity()\n  const onDeposit: TDepositFn = (stockItem, quantity) => {\n    changeQuantity({\n      stockItem: stockItem.id,\n      quantityChange: quantity,\n    })\n  }\n  if (loading) {\n    return null\n  }\n  return children(data.stockItems, onDeposit)\n}\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.FC<IProps> = props => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock deposit`}\n    useBackButton={true}\n  >\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { GMenuStockList } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\n\ntype TStockItem = GMenuStockList.StockItems\n\ninterface IProps {\n  stockItems: TStockItem[]\n  isLoading: boolean\n}\n\nexport const StockListTable: React.FC<IProps> = ({ stockItems, isLoading }) => (\n  <DataTable\n    items={stockItems}\n    heightStretch={true}\n    noRowsRenderer={() =>\n      isLoading ? (\n        <Loading />\n      ) : (\n        <h3>\n          <Trans>Selected branch has no stock cards</Trans>\n        </h3>\n      )\n    }\n  >\n    <Column\n      dataKey=\"id\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={checkColumnAccess(\n        { canQuery: 'stockItem' },\n        ColumnRendererEdit,\n      )}\n    />\n    <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      minWidth={30}\n      flexGrow={2}\n      label={i18n.t`Card name`}\n    />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"allowNegative\"\n      width={300}\n      label={i18n.t`Negative stock`}\n      cellRenderer={stockAllowNegative}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GMenuStockList } from '../../../graph/types'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuStockListQuery } from './StockList.graphql'\nimport { StockListTable } from './StockListTable'\n\nexport const StockListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GMenuStockList.Query,\n    GMenuStockList.Variables\n  >(MenuStockListQuery, {\n    ...settings.queryProps,\n    suspend: false,\n  })\n\n  const filteredItems = useComputed(\n    () => {\n      if (!data || !data.stockItems || data.stockItems.length === 0) {\n        return []\n      }\n      const searchValue = settings.menu.stock.filterInput\n      const partialMatch = isPartialMatch(searchValue)\n      return data.stockItems.filter(\n        RM.cond([\n          [RM.propEq('plu', searchValue), RM.T],\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.stockItems],\n  )\n\n  return <StockListTable stockItems={filteredItems} isLoading={loading} />\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\n\nexport const MenuStockListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"stock\" />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createStockItem\">\n          <CreateButton routeTo=\"create\" />\n        </CanMutate>\n        <DataTableContainer>\n          <StockListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GMenuStockForm } from '../../../graph/types'\nimport { AllergenFragment } from '../graph/AllergenFragment.graphql'\nimport { WareUnitFragment } from '../graph/WareUnitFragment.graphql'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...GWareUnit\n      }\n      allergens {\n        ...GAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${AllergenFragment}\n  ${WareUnitFragment}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  WareUnitEnum,\n} from '../../../graph/generated'\nimport { GMenuStockDefaults, GMenuStockForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.FC<IProps> = ({ stockId, children }) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={stockId === null}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId: stockId! },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n  icon?: string\n}\n\nexport const FormInputAllergens: React.FC<IProps> = ({\n  field = 'allergens',\n  icon = 'error_outline',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={icon} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.FC<IProps> = ({}) => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputPlu: React.FC<IProps> = ({\n  field = 'plu',\n  icon = 'fingerprint',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {\n  icon?: string\n}\n\nexport const FormInputWareUnit: React.FC<IProps> = ({\n  field = 'wareUnit',\n  icon = 'select_all',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={icon} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.FC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <CardDock position=\"BottomRight\">\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </CardDock>\n  </FormContainer>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GStockRecipes } from '../../../graph/types'\n\nexport const StockRecipesQuery = gql`\n  query GStockRecipes($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      ingredients {\n        id\n        recipe {\n          id\n          nameLabel\n          descriptionLabel\n          recipeType: wareCategoryType {\n            enum\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const QueryStockRecipes = buildQuery<\n  GStockRecipes.Query,\n  GStockRecipes.Variables\n>(StockRecipesQuery)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport {\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n  NoteText,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { QueryStockRecipes } from './StockRecipesView.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const StockRecipesView: React.FC<IProps> = ({ stockId }) =>\n  stockId === null ? null : (\n    <QueryStockRecipes\n      variables={{ stockId }}\n      render={({ stockItem: { ingredients } }) =>\n        ingredients.length > 0 ? (\n          <>\n            <Headline>\n              <Trans>Recipes using this card</Trans>\n            </Headline>\n\n            <DataTable items={[...ingredients]}>\n              <Column\n                dataKey=\"\"\n                cellDataGetter={({ rowData }) => ({\n                  pathname: `/settings/menu/recipe/${rowData.recipe.id}`,\n                  state: { recipeType: rowData.recipe.recipeType.enum },\n                })}\n                cellRenderer={ColumnRendererEdit}\n                width={100}\n              />\n              <Column\n                dataKey=\"recipe\"\n                width={300}\n                label={i18n.t`Name`}\n                cellRenderer={({ rowData }) => (\n                  <>\n                    {rowData.recipe.nameLabel}\n                    <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n                  </>\n                )}\n              />\n            </DataTable>\n          </>\n        ) : null\n      }\n    />\n  )\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const MenuStockPage: React.FC<IProps> = ({ stockId }) => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock card`}\n    hideLogoutWidget={true}\n    useBackButton={true}\n  >\n    <StockFormLoader stockId={stockId}>\n      <>\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              stockId === null ? 'createStockItem' : 'updateStockItem'\n            }\n          >\n            <SubmitButton isCreate={stockId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n        <Card>\n          <StockFormMain />\n          <CanQuery queryName=\"recipes\">\n            <StockRecipesView stockId={stockId} />\n          </CanQuery>\n        </Card>\n      </>\n    </StockFormLoader>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MenuRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      render={() => <Redirect to={`${match.path}/category`} />}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/category`}\n      component={MenuCategoryListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/category/:categoryId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuCategoryPage\n          categoryId={params.categoryId === 'create' ? null : params.categoryId}\n          categoryType={state.categoryType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/recipe`}\n      component={MenuRecipeListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/recipe/:recipeId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuRecipePage\n          recipeId={params.recipeId === 'create' ? null : params.recipeId}\n          recipeType={state.recipeType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/stock`}\n      component={MenuStockListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/deposit`}\n      component={MenuStockDepositPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/:stockId`}\n      render={({ match: { params } }) => (\n        <MenuStockPage\n          stockId={params.stockId === 'create' ? null : params.stockId}\n        />\n      )}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default MenuRoutes\n"],"sourceRoot":""}