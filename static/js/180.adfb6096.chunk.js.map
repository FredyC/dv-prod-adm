{"version":3,"sources":["atoms/IconLine.tsx","hooks/useAccessGuard.ts","atoms/SelectControl.tsx","atoms/ScrollArea.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/HorizontalSeparator.tsx","atoms/SelectControlFlat.tsx","hooks/useAutorunWhenSingleBranch.ts","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","atoms/FormGrid.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","../node_modules/@material-ui/icons/esm/StoreMallDirectory.js","segments/settings/organisms/SettingsCompanyBranchPicker.tsx","atoms/CardDock.tsx","hooks/useOnConnectionRestored.ts","atoms/TimeBadge.tsx","atoms/LinkStyled.tsx","../node_modules/@material-ui/icons/esm/CancelOutlined.js","segments/order/atoms/DeliveryTimeBadge.tsx","hooks/useQueryParams.ts","atoms/CardListTitle.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/molecules/NoteLine.tsx","segments/order/atoms/OrderStarIndicator.tsx","segments/order/molecules/OrderTicker.tsx","assets/orderNotification.mp3","segments/order/organisms/OrderListBranchFilter.tsx","../node_modules/@material-ui/icons/esm/AccessTime.js","../node_modules/@material-ui/icons/esm/Note.js","../node_modules/@material-ui/icons/esm/Star.js","segments/kitchen/organisms/KitchenCompletionLoader.tsx","molecules/OrderNotificationSound.tsx","segments/kitchen/atoms/KitchenInfoMessage.tsx","segments/kitchen/hooks/useKitchenDeck.ts","segments/kitchen/hooks/useKitchenOrderDeck.ts","../node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","segments/kitchen/atoms/KitchenCardButton.tsx","segments/kitchen/hooks/useKitchenHandler.ts","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenCardItem.tsx","segments/kitchen/molecules/KitchenCardItems.tsx","segments/kitchen/molecules/KitchenOrderStarIndicator.tsx","segments/kitchen/molecules/KitchenCardCompletion.tsx","segments/kitchen/organisms/KitchenCompletionShelf.tsx","segments/kitchen/hooks/useKitchenSectorDeck.ts","segments/kitchen/organisms/KitchenLoader.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/molecules/KitchenCardOrder.tsx","segments/kitchen/molecules/KitchenCardSector.tsx","segments/kitchen/organisms/KitchenShelf.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/pages/KitchenCompletionPage.tsx","segments/kitchen/routes/KitchenRouting.tsx"],"names":["StyledIconLine","styled","div","labelMargin","labelWidth","labelWidthUnits","StyledGridDescription","mediaMobile","replace","StyledGridContent","IconLine","icon","label","Spacing","DefaultSizeUnit","labelSmallCaps","children","iconComponent","logError","Error","isInFormGrid","useFormGridCheck","descriptionPart","color","Colors","greyDark","className","cn","smallCaps","useAccessGuard","queries","mutations","user","useRoot","every","canQuery","canMutate","useCanQuery","useCanMutate","getControlStyles","width","minWidth","invalid","border","red","backgroundColor","errorBackground","greyMiddle","margin","MarginAroundFormComponents","undefined","composeSelectControlStyles","outerStyles","control","base","state","controlStyles","selectProps","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","props","styles","ScrollArea","StyledPageLayoutFullHeightItem","mediaDesktop","widthInColumns","LayoutGridCellMargin","column","row","rowInMobile","forcePercentHeightInMobile","PageHeaderHeight","PageLayoutFullHeightItem","withScrollArea","scrollAreaId","forceHeightInMobile","isMobile","useResponsive","id","Sizer","height","heightUnit","HorizontalSeparatorStyled","greyLight","HorizontalSeparator","visible","StyledSelectControlFlat","textColor","SelectControlFlat","items","formatItem","RM","prop","isMulti","isClearable","isInvalid","disabled","selectedItem","selectedItems","onSingleSelection","onMultiSelection","hasSingleItem","length","isItemSelected","item","Array","isArray","contains","equals","updateSelection","without","concat","interactive","active","onClick","map","idx","formatted","key","useAutorunWhenSingleBranch","onSingleBranch","React","useEffect","autorun","isReady","hasSingleBranch","branches","CompanyBranchFlatSelect","selectedBranch","selectedBranches","title","brand","name","CompanyBranchPicker","breakpoint","hideWhenSingleBranch","onSelectionChange","onSelectionClear","getDropdownProps","isSelected","branch","includes","find","filter","selected","CompanyBranchDropdown","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","Object","resolve","module","exports","StyledFormGrid","formGridCounter","formGridContext","createContext","FormGrid","Provider","value","useContext","CursorContainer","cursor","CompanyBranch","short","showBrand","substr","ClearIndicator","getStyles","innerProps","ref","restInnerProps","style","padding","placeholder","i18n","ButtonHeight","options","getOptionValue","formatOptionLabel","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","onChange","selection","head","createSvgIcon","createElement","d","SettingsCompanyBranchPicker","settings","selectBranch","branchId","getQueryParam","useQueryParams","useObserver","StoreMallDirectory","CardDock","position","useOnConnectionRestored","cb","useDisposable","whenGoingOnline","ETimeBadgeVariant","StyledTimeBadge","white","variants","UNKNOWN","CRITICAL","WARNING","orange","NORMAL","green","bigNumberStyle","css","dashStyle","clickable","TimeBadge","forwardRef","minutes","variant","Variant","output","extraClassNames","push","toString","cx","heartBeat","pulse","LinkStyled","a","Fragment","fill","opacity","cancelIconPadding","StyledDelayedTimeMark","DeliveryTimeBadge","deliverAt","deliveredAt","isCancelled","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","CancelOutlined","role","aria-label","differenceInMinutes","search","window","location","searchParams","useMemo","URLSearchParams","param","get","createQueryString","keyValueObj","entries","join","CardListTitle","h2","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","StyledCurrentNote","span","NoteLine","note","Note","StyledOrderStarIndicator","OrderStarIndicator","data-testid","Icon","Star","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","companyBranch","Date","delayedDeliveryTime","sector","deliveryType","enum","DeliveryTypeEnum","Pickup","address","original","formatAddress","isPriority","totalSum","formattedValue","isPaidWithCard","OrderListBranchFilter","list","setBranchFilter","from","clearBranchFilter","requiredCategories","OrderStateCategoryEnum","NewOrders","Preparing","ReadyToDeliver","loaderContext","loading","noFilter","orders","sortForCompletion","sortWith","descend","ascend","either","KitchenCompletionLoader","observer","orderModel","hasBranchFilter","useQKitchenCompletionOrderList","branchesFilter","categories","skip","updateQuery","refetch","useSKitchenCompletionOrderList","Finished","onSubscriptionData","dataUpdate","subscriptionData","prev","update","updatedOrder","orderStateCategory","orderExists","unshift","handleSubscriptionUpdate","OrderNotificationSound","memo","shouldPlay","config","useIntervalSound","soundUrl","orderNotificationSound","intervalSec","orderListSoundIntervalSec","KitchenInfoMessage","kitchenRecipeStateMapping","OrderRecipeStateEnum","Fresh","Ready","Cooked","kitchenOrderStateMapping","useKitchenOrderDeck","useQKitchenOrderList","useSKitchenOrderList","useLoadingCache","getKitchenOrderDeck","cards","mapOrderToKitchenCard","groupBy","normalizeToKitchenDeck","type","time","createdAt","mapOrderItemToCardItem","orderItem","recipe","sideDishes","sidedishes","KitchenCardButton","TouchButton","KeyboardArrowRight","useKitchenHandler","canHandleOrder","canHandleOrderRecipe","canHandleSector","canHandleSectorRecipe","useMKitchenOrderHandle","handleOrder","useMKitchenOrderRecipeHandle","handleOrderRecipe","useMKitchenSectorHandle","handleSector","useMKitchenSectorRecipeHandle","handleSectorRecipe","canHandleCard","card","canHandleCardItem","handleCard","useCallback","orderId","OrderStateEnum","InProduce","sectorId","Accepted","handleCardItem","nextItemState","getItemToggledState","orderRecipeId","sectorRecipeId","propEq","Circle","Small","CheckedInner","TouchCheckButton","isChecked","firstSideDishStyle","StyledKitchenCardItem","isFirstSidedish","FontSizes","CompactCardBig","KitchenCardItem","canHandle","onHandle","KitchenCardItems","sideDish","StyledKitchenOrderStarIndicator","KitchenOrderStarIndicator","StyledKitchenCardCompletion","CompactCard","greyDarkest","Middle","KitchenCardCompletion","handler","orderNumber","orderOrigin","cashBox","KitchenCompletionShelf","category","noOrdersMessage","mobileHeadline","shouldPlayNotification","requiredStates","useKitchenSectorDeck","useQKitchenSectorList","states","useSKitchenSectorList","Canceled","sectorRecipe","updatedSectorRecipe","sectorRecipes","s","exists","getKitchenSectorDeck","sectors","makeKey","initialState","mapObjIndexed","invertObj","groupedBySectorAndState","sortByTime","sortBy","reduce","acc","relatedSectorRecipes","sortedRecipes","sortCards","kitchenContext","KitchenLoader","orderDeck","sectorDeck","kitchenDeck","mergeDeepWith","sortedKitchenDeck","Label","DeliveryTime","DeliverLabel","deliverType","KitchenOrderAtSummary","deliverTime","AccessTime","formatTimeWithoutTodayDate","StyledKitchenCardOrder","KitchenCardOrder","onHandleRecipe","canHandleRecipe","href","StyledKitchenCardSector","KitchenCardSector","pink","KitchenShelf","noCardsMessage","shelfCards","useKitchenDeck","commonProps","StyledKitchenFilterContainer","KitchenCategorySeparator","KitchenOverviewPage","PageLayoutResponsive","pageTitle","useBackButton","showSoundControl","PageLayoutGridItem","gridRowInMobile","KitchenCompletionPage","KitchenRouting","SecureRoute","exact","path","ROUTE_KITCHEN","component","ROUTE_KITCHEN_COMPLETION","NotFoundPage"],"mappings":"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","file":"static/js/180.adfb6096.chunk.js","sourcesContent":["import { Error, SvgIconComponent } from '@material-ui/icons'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../app/Responsive'\nimport { logError } from '../helpers/logger'\nimport { Colors, Spacing } from '../styling'\nimport { useFormGridCheck } from './FormGrid'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: SvgIconComponent\n  label?: string | ReactNode\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  labelSmallCaps?: boolean\n  className?: string\n}\n\nconst StyledIconLine = styled.div<IProps>`\n  display: flex;\n\n  div.description {\n    margin: ${({ labelMargin }) => labelMargin};\n    min-width: ${({ labelWidth, labelWidthUnits }) =>\n      `${labelWidth}${labelWidthUnits}`};\n    flex: 0 0 auto;\n    text-align: right;\n  }\n\n  div.contents {\n    margin-left: 0.5rem;\n    align-self: stretch;\n    flex: 1 1 auto;\n  }\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n`\n\nconst StyledGridDescription = styled.div<IProps>`\n  grid-column: desc;\n  margin: ${({ labelMargin }) => labelMargin};\n\n  div.label {\n    padding-top: 0.2rem;\n    display: inline-block;\n    &.smallCaps {\n      font-variant-caps: all-petite-caps;\n    }\n  }\n\n  ${mediaMobile`\n  grid-column: content;\n  justify-self: start;\n  margin: ${({ labelMargin }) => labelMargin.replace('auto', '0.7rem')};\n  `};\n`\n\nconst StyledGridContent = styled.div<IProps>`\n  grid-column: content;\n  margin-left: 0.5rem;\n`\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n  labelMargin = '0.5rem 0.2rem 0 auto',\n  labelSmallCaps = true,\n  children,\n}) => {\n  let iconComponent = icon\n  if (typeof icon === 'string') {\n    logError(\n      `IconLine: Do not use icon prop as string! Replace \"${icon}\" with the one imported from @material-ui/icons.`,\n    )\n    iconComponent = Error\n  }\n  const isInFormGrid = useFormGridCheck()\n\n  const descriptionPart = (\n    <>\n      <Icon icon={iconComponent} color={Colors.greyDark} />\n      {label ? (\n        <div className={cn('label', { smallCaps: labelSmallCaps })}>\n          {label}\n        </div>\n      ) : null}\n    </>\n  )\n\n  return isInFormGrid ? (\n    <>\n      <StyledGridDescription labelMargin={labelMargin}>\n        {descriptionPart}\n      </StyledGridDescription>\n      <StyledGridContent>{children}</StyledGridContent>\n    </>\n  ) : (\n    <StyledIconLine\n      labelWidth={labelWidth}\n      labelWidthUnits={labelWidthUnits}\n      labelMargin={labelMargin}\n    >\n      <div className=\"description\">{descriptionPart}</div>\n      <div className=\"contents\">{children}</div>\n    </StyledIconLine>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n  invalid?: boolean\n}\n\nfunction getControlStyles({\n  width,\n  minWidth,\n  invalid,\n}: ISelectControlProps<any>) {\n  const colors =\n    invalid === true\n      ? {\n          border: `1px solid ${Colors.red}`,\n          backgroundColor: Colors.errorBackground,\n        }\n      : {\n          border: `1px solid ${Colors.greyMiddle}`,\n        }\n  return {\n    ...colors,\n    margin: Spacing.MarginAroundFormComponents,\n    width: width !== undefined ? `${width}rem` : '100%',\n    minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n  }\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const controlStyles = { ...base, ...getControlStyles(state.selectProps) }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile, useResponsive } from '../app/Responsive'\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Sizer } from '../atoms/Sizer'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  rowInMobile?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  forcePercentHeightInMobile?: number\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\n// eslint-disable-next-line no-unexpected-multiline\nconst StyledPageLayoutFullHeightItem = styled.div<\n  IPageLayoutFullHeightItemProps\n>`\n  ${mediaDesktop`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};`}\n\n  ${mediaMobile`\n    margin: 0;\n    grid-row: ${({ rowInMobile }: IPageLayoutFullHeightItemProps) =>\n      rowInMobile} ;\n    grid-column: span 16;\n    height: ${({\n      forcePercentHeightInMobile,\n    }: IPageLayoutFullHeightItemProps) =>\n      forcePercentHeightInMobile\n        ? `calc(${forcePercentHeightInMobile}vh - ${Spacing.PageHeaderHeight +\n            0.25 +\n            Spacing.DefaultSizeUnit})`\n        : 'unset'} ;\n    position: relative;\n  `}\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  rowInMobile = 16,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n  forcePercentHeightInMobile: forceHeightInMobile,\n}) => {\n  const { isMobile } = useResponsive()\n\n  return (\n    <StyledPageLayoutFullHeightItem\n      column={column}\n      row={row}\n      rowInMobile={rowInMobile}\n      widthInColumns={widthInColumns}\n      withScrollArea={withScrollArea}\n      forcePercentHeightInMobile={forceHeightInMobile}\n    >\n      {withScrollArea && !isMobile ? (\n        <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n      ) : (\n        <Sizer height={100} heightUnit=\"%\">\n          {children}\n        </Sizer>\n      )}\n    </StyledPageLayoutFullHeightItem>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import { Trans } from '@lingui/macro'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\nimport { Colors } from '../styling'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: RoA<ItemType>\n  selectedItem?: Maybe<ItemType>\n  formatItem?: (item: ItemType) => string | ReactNode\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: RoA<ItemType>\n  onMultiSelection?(selected: RoA<ItemType>): void\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  disabled?: boolean\n  textColor?: string\n}\n\nconst StyledSelectControlFlat = styled.div`\n  ${(props: { textColor?: string }) => ``}\n\n  color: ${({ textColor }) => (textColor ? textColor : 'inherit')};\n\n  &.interactive {\n    cursor: pointer;\n  }\n\n  &.invalid {\n    border: 1px red solid;\n  }\n\n  > div {\n    padding: 0.2rem 0.3rem;\n    margin: 0.3rem 0.3rem;\n    display: inline-block;\n    border: 1px dotted ${Colors.greyMiddle};\n  }\n\n  > div.active {\n    font-weight: bolder;\n    text-decoration: underline;\n  }\n\n  > div.hover {\n    text-decoration: underline;\n  }\n`\n\nexport const SelectControlFlat = <ItemType extends any>(\n  props: ISelectControlFlatProps<ItemType>,\n) => {\n  const {\n    items,\n    formatItem = RM.prop('displayName'),\n    isMulti = false,\n    isClearable = false,\n    isInvalid = false,\n    disabled = false,\n    selectedItem,\n    selectedItems,\n    onSingleSelection,\n    onMultiSelection,\n    textColor,\n  } = props\n\n  const hasSingleItem = items.length === 1\n\n  const hasSelection = () => {\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n\n  const isItemSelected = (item: ItemType) => {\n    if (items.length === 1) {\n      // with one item there no selection happening\n      return false\n    }\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n\n  const updateSelection = (item: Maybe<ItemType>) => {\n    if (hasSingleItem || disabled) {\n      return\n    }\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  return (\n    <StyledSelectControlFlat\n      className={cn({\n        invalid: isInvalid,\n        interactive: !hasSingleItem || disabled,\n      })}\n      textColor={textColor}\n    >\n      {isClearable && (\n        <div\n          className={cn({ active: !hasSelection() })}\n          onClick={() => {\n            updateSelection(null)\n          }}\n        >\n          <Trans id=\"optionselector.clear-filter\">All</Trans>\n        </div>\n      )}\n      {items.map((item, idx) => {\n        // @ts-ignore Have to use any in generics due to parsing error\n        const formatted = formatItem(item)\n        return (\n          <div\n            key={idx}\n            className={cn({ active: isItemSelected(item) })}\n            onClick={() => {\n              updateSelection(item)\n            }}\n          >\n            {formatted}\n          </div>\n        )\n      })}\n    </StyledSelectControlFlat>\n  )\n}\n","import { autorun } from 'mobx'\nimport React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\nexport function useAutorunWhenSingleBranch(\n  onSingleBranch: (branch: FCompanyBranchFragment) => void,\n) {\n  const { user } = useRoot()\n  React.useEffect(() =>\n    autorun(() => {\n      if (user.isReady && user.hasSingleBranch) {\n        onSingleBranch(user.branches[0])\n      }\n    }),\n  )\n}\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  branches?: RoA<TBranch>\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  hideWhenSingleBranch?: boolean\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: RoA<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  branches,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  hideWhenSingleBranch = false,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n\n  const isSelected = branch => selectedBranches.includes(branch.id)\n\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: branches || user.branches,\n    selectedBranch: user.branches.find(isSelected) || null,\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n\n  if (user.hasSingleBranch && hideWhenSingleBranch) {\n    return null\n  }\n\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","var map = {\n\t\"./cs.svg\": 1436,\n\t\"./de.svg\": 1437,\n\t\"./en.svg\": 1438,\n\t\"./pl.svg\": 1439,\n\t\"./sk.svg\": 1440\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1435;","var map = {\n\t\"./logo-doveze.svg\": 1442,\n\t\"./logo-gopay.svg\": 1443,\n\t\"./logo-mastercard.svg\": 1444,\n\t\"./logo-visa.svg\": 1445\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1441;","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../app/Responsive'\n\nconst StyledFormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 0.1fr [desc] auto [content] 1fr;\n  grid-template-areas: '. desc content';\n  grid-auto-flow: row dense;\n\n  ${mediaMobile`\n    grid-template-columns: 1fr;\n    grid-template-areas:\n      'content';\n  `};\n`\n\ninterface IProps {}\nlet formGridCounter = 0\nconst formGridContext = React.createContext(formGridCounter)\n\nexport const FormGrid: React.FC<IProps> = props => {\n  return (\n    <StyledFormGrid>\n      <formGridContext.Provider value={++formGridCounter}>\n        {props.children}\n      </formGridContext.Provider>\n    </StyledFormGrid>\n  )\n}\n\nexport function useFormGridCheck() {\n  return React.useContext(formGridContext) > 0\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n    ISelectControlProps<FCompanyBranchFragment>,\n    'placeholder' | 'width'\n  > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection((selection as FCompanyBranchFragment) || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z\"\n}), 'StoreMallDirectory');","import { StoreMallDirectory } from '@material-ui/icons'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { useQueryParams } from '../../../hooks/useQueryParams'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {\n  isMulti?: boolean\n  width?: number\n}\n\nexport const SettingsCompanyBranchPicker: React.FC<IProps> = ({\n  isMulti = false,\n  width,\n}) => {\n  const { settings, user } = useRoot()\n\n  useAutorunWhenSingleBranch(branch => {\n    settings.selectBranch(branch.id)\n  })\n\n  const { getQueryParam } = useQueryParams()\n  const branchId = getQueryParam('branchId')\n\n  // Change to branch specified in query params\n  React.useEffect(() => {\n    if (branchId) {\n      settings.selectBranch(branchId)\n    }\n  }, [branchId, settings])\n\n  return useObserver(() => {\n    if (user.hasSingleBranch) {\n      return null\n    }\n    return (\n      <IconLine icon={StoreMallDirectory}>\n        <CompanyBranchPicker\n          selectedBranches={settings.branchId ? [settings.branchId] : undefined}\n          onSelectionChange={([branch]) => settings.selectBranch(branch)}\n          isMulti={isMulti}\n          isClearable={false}\n          getDropdownProps={() => ({ width })}\n          hideWhenSingleBranch={true}\n        />\n      </IconLine>\n    )\n  })\n}\n","import styled from 'styled-components/macro'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nexport const CardDock = styled.div<IProps>`\n  position: absolute;\n  ${({ position }) =>\n    position === 'BottomRight' || position === 'BottomLeft'\n      ? 'bottom: 0'\n      : 'top: 0'};\n  ${({ position }) =>\n    position === 'BottomLeft' || position === 'TopLeft'\n      ? 'left: 0'\n      : 'right: 0'};\n`\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst StyledTimeBadge = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(StyledTimeBadge)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(StyledTimeBadge)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(StyledTimeBadge)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(StyledTimeBadge)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  line-height: 1.6rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge = React.forwardRef<HTMLDivElement, ITimeBadgeProps>(\n  ({ minutes, className, children, variant, onClick }, ref) => {\n    const Variant = variants[variant]\n    let output = children\n    const extraClassNames = ['animated']\n    if (minutes !== undefined) {\n      if (minutes > 99 || minutes < -9) {\n        extraClassNames.push(bigNumberStyle)\n      }\n      if (minutes < -99) {\n        output = '‒'\n        extraClassNames.push(dashStyle)\n      } else {\n        output = minutes.toString()\n      }\n    }\n    if (onClick) {\n      extraClassNames.push(clickable)\n    }\n    return (\n      <Variant\n        ref={ref}\n        key={minutes}\n        onClick={onClick}\n        className={cx(\n          className,\n          {\n            heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n            pulse: variant === ETimeBadgeVariant.WARNING,\n          },\n          ...extraClassNames,\n        )}\n      >\n        {output}\n      </Variant>\n    )\n  },\n)\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\",\n  opacity: \".87\"\n}), React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z\"\n})), 'CancelOutlined');","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst StyledDelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return (\n      <TimeBadge variant={variant}>\n        <span role=\"img\" aria-label=\"Unknown\">\n          ❔\n        </span>\n      </TimeBadge>\n    )\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <StyledDelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React from 'react'\n\nexport function useQueryParams() {\n  const { search } = window.location\n  const searchParams = React.useMemo(() => new URLSearchParams(search), [\n    search,\n  ])\n\n  const getQueryParam = (param: string) => searchParams.get(param)\n  const createQueryString = (keyValueObj: Record<string, string>) => {\n    return Object.entries(keyValueObj)\n      .map(([key, value]) => `${key}=${value}`)\n      .join('&')\n  }\n\n  return { getQueryParam, createQueryString }\n}\n","import styled from 'styled-components/macro'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n`\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { Note } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n}\n\nconst StyledCurrentNote = styled.span`\n  color: ${Colors.orange};\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note }) =>\n  note ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon={Note} labelMargin=\"0\">\n        <StyledCurrentNote>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </StyledCurrentNote>\n      </IconLine>\n    </>\n  ) : null\n","import { Star } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\nconst StyledOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 3.8rem;\n  top: 0;\n`\n\nexport const OrderStarIndicator: React.FC = () => {\n  return (\n    <StyledOrderStarIndicator data-testid=\"OrderStarIndicator\">\n      <Icon icon={Star} color={Colors.orange} />\n    </StyledOrderStarIndicator>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport {\n  DeliveryTypeEnum,\n  FOrderTickerFragment,\n} from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\nimport { OrderStarIndicator } from '../atoms/OrderStarIndicator'\n\ninterface IOrderTickerProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onClick(): void\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  isCancelled,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (order.sector !== null) {\n      return order.sector.name\n    }\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    if (order.address.original) return order.address.original\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={isCancelled}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          {order.isPriority && <OrderStarIndicator />}\n          {order.totalSum.formattedValue}\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled data-testid=\"PaidMark\" />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/orderNotification.0aa2ebe9.mp3\";","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { Colors } from '../../../styling'\n\ninterface IOrderListBranchFilterProps {}\n\nexport const OrderListBranchFilter: React.FC<\n  IOrderListBranchFilterProps\n> = () => {\n  const { order } = useRoot()\n\n  useAutorunWhenSingleBranch(branch => {\n    order.list.setBranchFilter([branch.id])\n  })\n\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(order.list.branches)}\n      onSelectionChange={branches => {\n        order.list.setBranchFilter(branches)\n      }}\n      onSelectionClear={order.list.clearBranchFilter}\n      textColor={Colors.turquoise}\n      isMulti={true}\n      isClearable={false}\n      hideWhenSingleBranch={true}\n    />\n  ))\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), React.createElement(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n})), 'AccessTime');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M22 10l-6-6H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99l16-.01c1.1 0 2-.89 2-1.99v-8zm-7-4.5l5.5 5.5H15V5.5z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n})), 'Note');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Star');","import { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FKitchenCompletionOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenCompletionOrderListOrders,\n  QKitchenCompletionOrderListQuery,\n  SKitchenCompletionOrderListSubscription,\n  useQKitchenCompletionOrderList,\n  useSKitchenCompletionOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\ntype TOrder = QKitchenCompletionOrderListOrders\n\ninterface ILoaderContext {\n  loading: boolean\n  noFilter: boolean\n  orders: RoA<TOrder>\n}\n\nconst loaderContext = React.createContext<ILoaderContext>({\n  loading: true,\n  noFilter: true,\n  orders: [],\n})\n\nexport const sortForCompletion = RM.sortWith<FKitchenCompletionOrderFragment>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.prop('orderNumber')),\n  RM.ascend(RM.either(RM.prop('deliverAt'), RM.prop('createdAt'))),\n])\n\nexport const KitchenCompletionLoader: React.FC = observer(props => {\n  const { order: orderModel } = useRoot()\n  const noFilter = !orderModel.list.hasBranchFilter\n  const {\n    data,\n    loading,\n    updateQuery,\n    refetch,\n  } = useQKitchenCompletionOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    { skip: noFilter },\n  )\n  useOnConnectionRestored(refetch)\n\n  useSKitchenCompletionOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip: noFilter,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return (\n    <loaderContext.Provider\n      value={{\n        loading,\n        noFilter,\n        orders: loading ? [] : sortForCompletion(data.orders),\n      }}\n    >\n      {props.children}\n    </loaderContext.Provider>\n  )\n})\n\nexport function useKitchenCompletion() {\n  return React.useContext(loaderContext)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenCompletionOrderListSubscription,\n  prev: QKitchenCompletionOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order || !prev.orders) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import React from 'react'\n\nimport orderNotificationSound from '../assets/orderNotification.mp3'\nimport { useRoot } from '../atoms/RootProvider'\nimport { useIntervalSound } from '../hooks/useIntervalSound'\n\ninterface IProps {\n  shouldPlay: boolean\n}\n\nexport const OrderNotificationSound = React.memo<IProps>(({ shouldPlay }) => {\n  const { config } = useRoot()\n  return useIntervalSound({\n    soundUrl: orderNotificationSound,\n    intervalSec: config.orderListSoundIntervalSec,\n    shouldPlay,\n  })\n})\n","import styled from 'styled-components'\n\nexport const KitchenInfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n","import { RM } from '@speedlo/tools'\n\nimport {\n  OrderRecipeStateEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { TKitchenCardState, TKitchenDeck } from '../kitchen.types'\n\nexport const kitchenRecipeStateMapping: Partial<\n  Record<OrderRecipeStateEnum, TKitchenCardState>\n> = {\n  [OrderRecipeStateEnum.Fresh]: 'todo',\n  [OrderRecipeStateEnum.Preparing]: 'progress',\n  [OrderRecipeStateEnum.Ready]: 'progress',\n  [OrderRecipeStateEnum.Cooked]: 'done',\n}\n\nexport const kitchenOrderStateMapping: Partial<\n  Record<OrderStateCategoryEnum, TKitchenCardState>\n> = {\n  [OrderStateCategoryEnum.NewOrders]: 'todo',\n  [OrderStateCategoryEnum.Preparing]: 'progress',\n  [OrderStateCategoryEnum.ReadyToDeliver]: 'done',\n}\n\nexport function useKitchenDeck() {\n  const initialState = (RM.mapObjIndexed(\n    () => [],\n    RM.invertObj(kitchenRecipeStateMapping),\n  ) as unknown) as TKitchenDeck\n\n  return { initialState }\n}\n","import { RM } from '@speedlo/tools'\n\nimport {\n  FKitchenOrderBaseItems,\n  FKitchenOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useLoadingCache } from '../../../hooks/useLoadingCache'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { TKitchenCardItem, TKitchenCardOrder, TKitchenDeck } from '../kitchen.types'\nimport { kitchenOrderStateMapping, kitchenRecipeStateMapping } from './useKitchenDeck'\n\nconst requiredCategories = Object.keys(\n  kitchenOrderStateMapping,\n) as OrderStateCategoryEnum[]\n\nexport function useKitchenOrderDeck(branch: MaybeID) {\n  const skip = branch === null\n\n  const { data, loading, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      branches: [branch!],\n      categories: requiredCategories,\n    },\n    { skip },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      branches: [branch!],\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  const getKitchenOrderDeck = useLoadingCache<Maybe<TKitchenDeck>>(skip)\n\n  return getKitchenOrderDeck(loading, () =>\n    skip ? null : normalizeToKitchenDeck(data.orders),\n  )\n}\n\nfunction normalizeToKitchenDeck(orders: RoA<FKitchenOrderFragment>) {\n  const cards: TKitchenCardOrder[] = orders.map(mapOrderToKitchenCard)\n  return RM.groupBy(o => o.state, cards) as TKitchenDeck\n}\n\nfunction mapOrderToKitchenCard(\n  order: FKitchenOrderFragment,\n): TKitchenCardOrder {\n  return {\n    ...order,\n    type: 'order',\n    state: kitchenOrderStateMapping[order.orderStateCategory]!,\n    time: order.deliverAt || order.createdAt,\n    items: order.items.map(mapOrderItemToCardItem),\n  }\n}\n\nexport function mapOrderItemToCardItem(\n  orderItem: FKitchenOrderBaseItems,\n): TKitchenCardItem {\n  return {\n    id: orderItem.id,\n    code: orderItem.recipe.code,\n    name: orderItem.recipe.name,\n    state: kitchenRecipeStateMapping[orderItem.state.enum]!,\n    isReady: kitchenRecipeStateMapping[orderItem.state.enum] === 'done',\n    sideDishes: orderItem.sidedishes.map(RM.prop('recipe')),\n  }\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order || !prev.orders) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n})), 'KeyboardArrowRight');","import { KeyboardArrowRight } from '@material-ui/icons'\nimport React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ntype TProps = NoChildren & ITouchButtonProps\n\nexport const KitchenCardButton: React.FC<TProps> = props => {\n  return (\n    <TouchButton\n      icon={KeyboardArrowRight}\n      width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n      color={Colors.green}\n      {...props}\n    />\n  )\n}\n","import { RM } from '@speedlo/tools'\nimport React from 'react'\n\nimport {\n  OrderRecipeStateEnum,\n  OrderStateEnum,\n  useMKitchenOrderHandle,\n  useMKitchenOrderRecipeHandle,\n  useMKitchenSectorHandle,\n  useMKitchenSectorRecipeHandle,\n} from '../../../graph/generated'\nimport { useCanMutate } from '../../../hooks/useAccessGuard'\nimport { TKitchenCard, TKitchenCardItem } from '../kitchen.types'\n\nexport function useKitchenHandler() {\n  const canHandleOrder = useCanMutate('addOrderState')\n  const canHandleOrderRecipe = useCanMutate('updateOrderRecipeState')\n  const canHandleSector = useCanMutate('updateSectorRecipes')\n  const canHandleSectorRecipe = useCanMutate('updateSectorRecipe')\n\n  const [handleOrder] = useMKitchenOrderHandle()\n  const [handleOrderRecipe] = useMKitchenOrderRecipeHandle()\n  const [handleSector] = useMKitchenSectorHandle()\n  const [handleSectorRecipe] = useMKitchenSectorRecipeHandle()\n\n  const canHandleCard = (card: TKitchenCard) => {\n    if (card.state === 'todo') {\n      if (card.type === 'order' || card.type === 'completion') {\n        return canHandleOrder\n      }\n      if (card.type === 'sector') {\n        return canHandleSector\n      }\n    }\n    if (\n      card.type === 'sector' &&\n      card.state === 'done' &&\n      process.env.REACT_APP_STAGE !== 'prod'\n    ) {\n      return canHandleSector\n    }\n    if (card.type === 'completion' && card.state === 'done') {\n      return canHandleOrder\n    }\n    return false\n  }\n\n  const canHandleCardItem = (card: TKitchenCard) => {\n    if (card.state !== 'todo') {\n      if (card.type === 'order' || card.type === 'completion') {\n        return canHandleOrderRecipe\n      }\n      if (card.type === 'sector') {\n        return canHandleSectorRecipe\n      }\n    }\n    return false\n  }\n\n  const handleCard = React.useCallback(\n    async (card: TKitchenCard) => {\n      if (card.type === 'order') {\n        await handleOrder({ orderId: card.id, state: OrderStateEnum.InProduce })\n      }\n      if (card.type === 'sector') {\n        if (card.state === 'todo') {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Preparing,\n          })\n        }\n        if (card.state === 'done') {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Finished,\n          })\n        }\n      }\n      if (card.type === 'completion') {\n        if (card.state === 'todo') {\n          await handleOrder({\n            orderId: card.id,\n            state: OrderStateEnum.Accepted,\n          })\n        }\n        if (card.state === 'done') {\n          await handleOrder({\n            orderId: card.id,\n            state: OrderStateEnum.Finished,\n          })\n        }\n      }\n    },\n    [handleOrder, handleSector],\n  )\n\n  const handleCardItem = React.useCallback(\n    async (card: TKitchenCard, item: TKitchenCardItem) => {\n      const nextItemState = getItemToggledState(card, item)\n      if (card.type === 'order' || card.type === 'completion') {\n        await handleOrderRecipe({\n          orderRecipeId: item.id,\n          state: nextItemState,\n        })\n      }\n      if (card.type === 'sector') {\n        await handleSectorRecipe({\n          sectorRecipeId: item.id,\n          state: nextItemState,\n        })\n\n        // special case to move a whole sector to done when all items are ready\n        // need to mark the one that was moved just now so the following condition can pass\n        item.isReady = nextItemState === OrderRecipeStateEnum.Ready\n        if (card.items.every(RM.propEq('isReady', true))) {\n          await handleSector({\n            sectorId: card.id,\n            state: OrderRecipeStateEnum.Cooked,\n          })\n        }\n      }\n    },\n    [handleOrderRecipe, handleSector, handleSectorRecipe],\n  )\n\n  return {\n    canHandleCard,\n    canHandleCardItem,\n    handleCard,\n    handleCardItem,\n  }\n}\n\nfunction getItemToggledState(\n  card: TKitchenCard,\n  item: TKitchenCardItem,\n): OrderRecipeStateEnum {\n  switch (item.state) {\n    case 'todo':\n    case 'progress': {\n      if (card.type === 'sector') {\n        return item.isReady\n          ? OrderRecipeStateEnum.Preparing\n          : OrderRecipeStateEnum.Ready\n      }\n      return OrderRecipeStateEnum.Cooked\n    }\n    case 'done': {\n      return OrderRecipeStateEnum.Preparing\n    }\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ntype TProps = NoChildren & {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<TProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\n\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\nimport { TKitchenCardItemCommon } from '../kitchen.types'\n\ntype TProps = NoChildren & {\n  item: TKitchenCardItemCommon\n  isChecked?: boolean\n  canHandle?: boolean\n  onHandle?(): void\n  isFirstSidedish?: boolean\n}\n\nconst firstSideDishStyle = css`\n  margin-top: -0.8rem;\n`\n\nconst StyledKitchenCardItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${(props: { isFirstSidedish: boolean }) =>\n    props.isFirstSidedish && firstSideDishStyle};\n\n  & .done-container {\n    flex: 0 0 2.4rem;\n  }\n\n  & .item-code {\n    flex: 0 0 4.1rem;\n    font-size: ${FontSizes.CompactCardBig};\n    color: ${Colors.black};\n    margin-top: 0.35rem;\n  }\n\n  & .item-name {\n    flex: 1 0;\n    color: ${Colors.greyMiddle};\n    margin: 0.4rem 0 0 0.5rem;\n  }\n`\n\nexport const KitchenCardItem: React.FC<TProps> = ({\n  item,\n  isChecked = false,\n  canHandle = false,\n  onHandle,\n  isFirstSidedish = false,\n}) => (\n  <StyledKitchenCardItem isFirstSidedish={isFirstSidedish}>\n    <div className=\"done-container\">\n      {canHandle && onHandle && (\n        <TouchCheckButton isChecked={isChecked} onClick={onHandle} />\n      )}\n    </div>\n    <div className=\"item-code\">{item.code}</div>\n    <div className=\"item-name\">{item.name}</div>\n  </StyledKitchenCardItem>\n)\n","import React, { Fragment } from 'react'\n\nimport { TKitchenCardItem } from '../kitchen.types'\nimport { KitchenCardItem } from './KitchenCardItem'\n\ninterface IProps {\n  items: RoA<TKitchenCardItem>\n  canHandle: boolean\n  onHandle(item: TKitchenCardItem): Promise<void>\n}\n\nexport const KitchenCardItems: React.FC<IProps> = ({\n  items,\n  canHandle,\n  onHandle,\n}) => {\n  return (\n    <div>\n      {items.map(item => (\n        <Fragment key={item.id}>\n          <KitchenCardItem\n            item={item}\n            isChecked={item.isReady}\n            canHandle={canHandle}\n            onHandle={() => onHandle(item)}\n          />\n          <>\n            {item.sideDishes.map((sideDish, idx) => (\n              <KitchenCardItem\n                key={`${item.id}-${sideDish.id}`}\n                item={sideDish}\n                isFirstSidedish={idx === 0}\n              />\n            ))}\n          </>\n        </Fragment>\n      ))}\n    </div>\n  )\n}\n","import { Star } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\nconst StyledKitchenOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 0.2rem;\n  top: 0.2rem;\n  z-index: 5;\n`\n\nexport const KitchenOrderStarIndicator: React.FC = () => {\n  return (\n    <StyledKitchenOrderStarIndicator data-testid=\"KitchenOrderStarIndicator\">\n      <Icon color={Colors.orange} icon={Star} />\n    </StyledKitchenOrderStarIndicator>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { useKitchenHandler } from '../hooks/useKitchenHandler'\nimport { TKitchenCardCompletion } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ntype TProps = NoChildren & {\n  card: TKitchenCardCompletion\n  showBranch: boolean\n}\n\nexport const StyledKitchenCardCompletion = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  padding-bottom: ${Spacing.Middle};\n  position: relative;\n\n  & .header {\n    display: flex;\n    flex-wrap: nowrap;\n  }\n\n  & .order__number {\n    width: 4.5rem;\n    background: ${Colors.orange};\n    color: ${Colors.white};\n    font-size: 2rem;\n    border-top-left-radius: ${Radiuses.Card};\n    text-align: center;\n  }\n\n  & .order__source {\n    display: inline-block;\n    background: ${Colors.greyMiddle};\n    color: ${Colors.white};\n    font-size: 0.9rem;\n    padding: 0.1rem 0.8rem;\n    border-radius: 0.9rem;\n    margin: 0.5rem;\n  }\n\n  & .order__sector {\n    display: inline-block;\n    color: ${Colors.black};\n    margin: 0.5rem;\n  }\n\n  & .order__content {\n    margin: ${Spacing.Middle};\n  }\n`\n\nexport const KitchenCardCompletion: React.FC<TProps> = ({\n  card,\n  showBranch,\n}) => {\n  const handler = useKitchenHandler()\n  return (\n    <StyledKitchenCardCompletion data-testid=\"order-box\">\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {card.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <div className=\"header\">\n        <div className=\"order__number\">{card.orderNumber}</div>\n        <div className=\"order__source\">{`${card.orderOrigin.code} ${\n          card.cashBox !== null ? card.cashBox.id : ''\n        }`}</div>\n        {card.sector && <div className=\"order__sector\">{card.sector.name}</div>}\n        {card.isPriority && <KitchenOrderStarIndicator />}\n      </div>\n\n      <div className=\"order__content\">\n        <KitchenCardItems\n          items={card.items}\n          canHandle={handler.canHandleCardItem(card)}\n          onHandle={item => handler.handleCardItem(card, item)}\n        />\n        {card.note && <div className=\"order__note\">{card.note}</div>}\n      </div>\n\n      {handler.canHandleCard(card) && (\n        <CardDock position=\"BottomRight\">\n          <KitchenCardButton\n            color={card.state === 'todo' ? Colors.green : Colors.red}\n            onClick={() => handler.handleCard(card)}\n          />\n        </CardDock>\n      )}\n    </StyledKitchenCardCompletion>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Mobile } from '../../../app/Responsive'\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FKitchenCompletionOrderFragment,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { kitchenOrderStateMapping } from '../hooks/useKitchenDeck'\nimport { mapOrderItemToCardItem } from '../hooks/useKitchenOrderDeck'\nimport { TKitchenCardCompletion } from '../kitchen.types'\nimport { KitchenCardCompletion } from '../molecules/KitchenCardCompletion'\nimport { useKitchenCompletion } from './KitchenCompletionLoader'\n\ntype TProps = NoChildren & {\n  category: OrderStateCategoryEnum\n  noOrdersMessage: ReactNode\n  mobileHeadline: ReactNode\n}\n\nexport const KitchenCompletionShelf = observer<TProps>(\n  ({ category, noOrdersMessage, mobileHeadline }) => {\n    const { order: orderModel } = useRoot()\n    const { loading, noFilter, orders } = useKitchenCompletion()\n\n    if (noFilter) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Select a branch</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (loading) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Loading</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    const cards = orders\n      .filter(RM.propEq('orderStateCategory', category))\n      .map(mapOrderToKitchenCard)\n\n    if (cards.length === 0) {\n      return <KitchenInfoMessage>{noOrdersMessage}</KitchenInfoMessage>\n    }\n\n    const shouldPlayNotification = category === OrderStateCategoryEnum.NewOrders\n\n    return (\n      <>\n        {mobileHeadline && (\n          <Mobile>\n            <CardListTitle>{mobileHeadline}</CardListTitle>\n          </Mobile>\n        )}\n        <div data-testid={`order-list-${category}`}>\n          {cards.map(card => (\n            <KitchenCardCompletion\n              key={card.id}\n              card={card}\n              showBranch={orderModel.list.branchesFilter.length > 1}\n            />\n          ))}\n          <OrderNotificationSound shouldPlay={shouldPlayNotification} />\n        </div>\n      </>\n    )\n  },\n)\n\nfunction mapOrderToKitchenCard(\n  order: FKitchenCompletionOrderFragment,\n): TKitchenCardCompletion {\n  return {\n    ...order,\n    type: 'completion',\n    state: kitchenOrderStateMapping[order.orderStateCategory]!,\n    time: order.deliverAt || order.createdAt,\n    items: order.items.map(mapOrderItemToCardItem),\n  }\n}\n","import { RM } from '@speedlo/tools'\n\nimport {\n  FKitchenSectorRecipeFragment,\n  OrderRecipeStateEnum,\n  QKitchenSectorListQuery,\n  QKitchenSectorListSectors,\n  SKitchenSectorListSubscription,\n  useQKitchenSectorList,\n  useSKitchenSectorList,\n} from '../../../graph/generated'\nimport { useLoadingCache } from '../../../hooks/useLoadingCache'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\nimport { TKitchenCardItem, TKitchenCardState, TKitchenDeck } from '../kitchen.types'\nimport { kitchenRecipeStateMapping } from './useKitchenDeck'\n\nconst requiredStates = Object.keys(\n  kitchenRecipeStateMapping,\n) as OrderRecipeStateEnum[]\n\nexport function useKitchenSectorDeck(branch: MaybeID) {\n  const skip = branch === null\n\n  const { data, loading, updateQuery, refetch } = useQKitchenSectorList(\n    {\n      branch: branch!,\n      states: requiredStates,\n    },\n    { skip: skip },\n  )\n\n  useOnConnectionRestored(refetch)\n\n  useSKitchenSectorList(\n    {\n      branch: branch!,\n      // subscription needs to watch for finished state to remove such orders from view\n      states: requiredStates.concat(\n        OrderRecipeStateEnum.Finished,\n        OrderRecipeStateEnum.Canceled,\n      ),\n    },\n    {\n      skip: skip,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  const getKitchenSectorDeck = useLoadingCache<Maybe<TKitchenDeck>>(skip)\n\n  return getKitchenSectorDeck(loading, () =>\n    skip ? null : normalizeToKitchenDeck(data.sectorRecipes, data.sectors),\n  )\n}\n\nfunction normalizeToKitchenDeck(\n  sectorRecipes: RoA<FKitchenSectorRecipeFragment>,\n  sectors: RoA<QKitchenSectorListSectors>,\n) {\n  const makeKey = (sectorId: ID, state: TKitchenCardState) =>\n    `${sectorId}-${state}`\n\n  const initialState = (RM.mapObjIndexed(\n    () => [],\n    RM.invertObj(kitchenRecipeStateMapping),\n  ) as unknown) as TKitchenDeck\n\n  const groupedBySectorAndState = RM.groupBy(\n    ({ sector, state }) =>\n      makeKey(sector.id, kitchenRecipeStateMapping[state.enum]!),\n    sectorRecipes,\n  )\n\n  const sortByTime = RM.sortBy(RM.prop('createdAt'))\n\n  return sectors.reduce((acc, sector) => {\n    return RM.mapObjIndexed((cards, state) => {\n      const key = makeKey(sector.id, state as TKitchenCardState)\n      const relatedSectorRecipes = groupedBySectorAndState[key]\n      if (relatedSectorRecipes) {\n        const sortedRecipes = sortByTime(relatedSectorRecipes)\n        const items = sortedRecipes.map(\n          (sectorRecipe): TKitchenCardItem => ({\n            id: sectorRecipe.id,\n            code: sectorRecipe.recipe.code,\n            name: sectorRecipe.recipe.name,\n            state: kitchenRecipeStateMapping[sectorRecipe.state.enum]!,\n            isReady: [\n              OrderRecipeStateEnum.Ready,\n              OrderRecipeStateEnum.Cooked,\n            ].includes(sectorRecipe.state.enum),\n            sideDishes: sectorRecipe.sideDishes.map(RM.prop('recipe')),\n          }),\n        )\n        return cards.concat({\n          id: sector.id,\n          type: 'sector',\n          name: sector.name,\n          time: sortedRecipes[0].createdAt,\n          state: state as TKitchenCardState,\n          isPriority: false,\n          items,\n        })\n      }\n      return cards\n    }, acc) as TKitchenDeck\n  }, initialState)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenSectorListSubscription,\n  prev: QKitchenSectorListQuery,\n): QKitchenSectorListQuery {\n  const { sectorRecipe } = update.updatedSectorRecipe\n  if (!sectorRecipe || !prev.sectorRecipes) {\n    return prev\n  }\n  if (!requiredStates.includes(sectorRecipe.state.enum)) {\n    return {\n      ...prev,\n      sectorRecipes: prev.sectorRecipes.filter(s => s.id !== sectorRecipe.id),\n    }\n  }\n  let exists = false\n  const sectorRecipes = prev.sectorRecipes.map(s => {\n    if (s.id === sectorRecipe.id) {\n      exists = true\n      return sectorRecipe\n    }\n    return s\n  })\n  if (!exists) {\n    sectorRecipes.unshift(sectorRecipe)\n  }\n  return { ...prev, sectorRecipes }\n}\n","import { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useKitchenOrderDeck } from '../hooks/useKitchenOrderDeck'\nimport { useKitchenSectorDeck } from '../hooks/useKitchenSectorDeck'\nimport { TKitchenCard, TKitchenCardState, TKitchenDeck } from '../kitchen.types'\n\nconst sortCards = RM.sortWith<TKitchenCard>([\n  RM.descend(RM.prop('isPriority')),\n  RM.ascend(RM.prop('time')),\n])\n\nconst kitchenContext = React.createContext<TKitchenDeck | null>(null)\n\nexport const KitchenLoader = observer<SomeChildren>(({ children }) => {\n  const { settings } = useRoot()\n\n  const orderDeck = useKitchenOrderDeck(settings.branchId)\n  const sectorDeck = useKitchenSectorDeck(settings.branchId)\n\n  const kitchenDeck =\n    orderDeck &&\n    sectorDeck &&\n    RM.mergeDeepWith(RM.concat, orderDeck, sectorDeck)\n\n  const sortedKitchenDeck =\n    kitchenDeck && (RM.mapObjIndexed(sortCards, kitchenDeck) as TKitchenDeck)\n\n  return (\n    <kitchenContext.Provider value={sortedKitchenDeck}>\n      {children}\n    </kitchenContext.Provider>\n  )\n})\n\nexport function useKitchenDeck(state: TKitchenCardState) {\n  const kitchenDeck = React.useContext(kitchenContext)\n  return kitchenDeck && kitchenDeck[state]\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  deliverTime: string | null\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<IProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { TKitchenCardOrder, TKitchenCardProps } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ntype TProps = NoChildren &\n  TKitchenCardProps<TKitchenCardOrder> & {\n    card: TKitchenCardOrder\n  }\n\nconst StyledKitchenCardOrder = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n\n  .order-ticker {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    padding: 0.2rem;\n    color: ${Colors.greyMiddle};\n  }\n\n  .details {\n    padding: 0 0.2rem 0.1rem 0.2rem;\n    position: relative;\n  }\n\n  .delivery-time-badge-container {\n    flex: 0 0 1.8rem;\n  }\n\n  .address-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .customer-identity-container {\n    flex: 1 0;\n    padding: 0 0 0 0.5rem;\n  }\n\n  .pickup-label {\n    font-style: italic;\n  }\n`\n\nexport const KitchenCardOrder: React.FC<TProps> = ({\n  card,\n  onHandle,\n  onHandleRecipe,\n  canHandle,\n  canHandleRecipe,\n}) => {\n  const getOrderDestination = () => {\n    if (card.sector !== null) {\n      return card.sector.name\n    }\n    if (\n      card.deliveryType &&\n      card.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <div className=\"pickup-label\">\n          <Trans>To pickup</Trans>\n        </div>\n      )\n    }\n    return formatAddress(card.address)\n  }\n\n  return (\n    <StyledKitchenCardOrder>\n      <div className=\"order-ticker\">\n        <div className=\"delivery-time-badge-container\">\n          <DeliveryTimeBadge\n            deliverAt={card.deliverAt ? new Date(card.deliverAt) : null}\n            deliveredAt={card.deliveredAt ? new Date(card.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={card.delayedDeliveryTime !== null}\n          />\n        </div>\n\n        <div className=\"address-container\">{getOrderDestination()}</div>\n\n        <div className=\"customer-identity-container\">\n          <CustomerIdentity customer={card.customer} />\n          <br />\n          {card.customer && card.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${card.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {card.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </div>\n      </div>\n\n      <div className=\"details\">\n        <HorizontalSeparator />\n        {card.isPriority && <KitchenOrderStarIndicator />}\n        <KitchenCardItems\n          items={card.items}\n          canHandle={canHandleRecipe}\n          onHandle={item => onHandleRecipe(card, item)}\n        />\n        <HorizontalSeparator />\n        <KitchenOrderAtSummary\n          deliverTime={card.deliverAt}\n          deliverType={\n            card.deliveryType &&\n            card.deliveryType.enum === DeliveryTypeEnum.Pickup\n              ? 'PERSONAL'\n              : 'DELIVER_UNTIL'\n          }\n        />\n        <NoteLine note={card.note} />\n        {canHandle && (\n          <CardDock position=\"BottomRight\">\n            <KitchenCardButton onClick={() => onHandle(card)} />\n          </CardDock>\n        )}\n      </div>\n    </StyledKitchenCardOrder>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { KitchenCardButton } from '../atoms/KitchenCardButton'\nimport { TKitchenCardProps, TKitchenCardSector } from '../kitchen.types'\nimport { KitchenCardItems } from './KitchenCardItems'\n\ntype TProps = NoChildren &\n  TKitchenCardProps<TKitchenCardSector> & {\n    card: TKitchenCardSector\n  }\n\nconst StyledKitchenCardSector = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  position: relative;\n\n  .details {\n    padding: 0 0.2rem 0.1rem 0.2rem;\n    position: relative;\n  }\n\n  .sector-name {\n    padding: 0.3rem 0 0.3rem 2.5rem;\n    font-size: 1.1rem;\n  }\n`\n\nexport const KitchenCardSector: React.FC<TProps> = ({\n  card,\n  canHandle,\n  canHandleRecipe,\n  onHandle,\n  onHandleRecipe,\n}) => {\n  return (\n    <StyledKitchenCardSector>\n      <div className=\"sector-name\">{card.name}</div>\n\n      <div className=\"details\">\n        <HorizontalSeparator />\n        <KitchenCardItems\n          items={card.items}\n          canHandle={canHandleRecipe}\n          onHandle={item => onHandleRecipe(card, item)}\n        />\n        {canHandle && (\n          <>\n            <HorizontalSeparator />\n            <CardDock position=\"BottomRight\">\n              <KitchenCardButton\n                color={card.state === 'todo' ? Colors.green : Colors.pink}\n                onClick={() => onHandle(card)}\n              />\n            </CardDock>\n          </>\n        )}\n      </div>\n    </StyledKitchenCardSector>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Mobile } from '../../../app/Responsive'\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { OrderNotificationSound } from '../../../molecules/OrderNotificationSound'\nimport { KitchenInfoMessage } from '../atoms/KitchenInfoMessage'\nimport { useKitchenHandler } from '../hooks/useKitchenHandler'\nimport { TKitchenCardState } from '../kitchen.types'\nimport { KitchenCardOrder } from '../molecules/KitchenCardOrder'\nimport { KitchenCardSector } from '../molecules/KitchenCardSector'\nimport { useKitchenDeck } from './KitchenLoader'\n\ntype TProps = NoChildren & {\n  state: TKitchenCardState\n  noCardsMessage: ReactNode\n  mobileHeadline?: ReactNode\n}\n\nexport const KitchenShelf = observer<TProps>(\n  ({ state, noCardsMessage, mobileHeadline }) => {\n    const shelfCards = useKitchenDeck(state)\n    const handler = useKitchenHandler()\n\n    if (shelfCards === null) {\n      return (\n        <KitchenInfoMessage>\n          <Trans>Loading</Trans>\n        </KitchenInfoMessage>\n      )\n    }\n\n    if (shelfCards.length === 0) {\n      return <KitchenInfoMessage>{noCardsMessage}</KitchenInfoMessage>\n    }\n\n    const shouldPlayNotification = state === 'todo'\n\n    return (\n      <>\n        {mobileHeadline && (\n          <Mobile>\n            <CardListTitle>{mobileHeadline}</CardListTitle>\n          </Mobile>\n        )}\n        <OrderNotificationSound shouldPlay={shouldPlayNotification} />\n        {shelfCards.map(card => {\n          const commonProps = {\n            key: `${card.type}-${card.id}`,\n            canHandle: handler.canHandleCard(card),\n            canHandleRecipe: handler.canHandleCardItem(card),\n            onHandle: handler.handleCard,\n            onHandleRecipe: handler.handleCardItem,\n          }\n          if (card.type === 'order') {\n            return <KitchenCardOrder card={card} {...commonProps} />\n          }\n          if (card.type === 'sector') {\n            return <KitchenCardSector card={card} {...commonProps} />\n          }\n          return null\n        })}\n      </>\n    )\n  },\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { Colors } from '../../../styling'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { KitchenLoader } from '../organisms/KitchenLoader'\nimport { KitchenShelf } from '../organisms/KitchenShelf'\n\nexport const StyledKitchenFilterContainer = styled.div`\n  position: absolute;\n  left: 16rem;\n  top: 0.4rem;\n  width: calc(100vw - 33rem);\n  z-index: 120;\n`\n\nexport const KitchenCategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  left: -5px;\n  top: 0rem;\n`\n\nexport const KitchenOverviewPage: React.FC = () => (\n  <KitchenLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      showSoundControl={true}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <SettingsCompanyBranchPicker />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <SettingsCompanyBranchPicker />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenShelf\n          state=\"todo\"\n          noCardsMessage={<Trans>No new orders</Trans>}\n          mobileHeadline={<Trans>New orders</Trans>}\n        />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenShelf\n          state=\"progress\"\n          noCardsMessage={<Trans>No orders to prepare</Trans>}\n          mobileHeadline={<Trans>Orders to prepare</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenShelf\n          state=\"done\"\n          noCardsMessage={<Trans>No orders to deliver</Trans>}\n          mobileHeadline={<Trans>Orders to deliver</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenLoader>\n)\n\nexport default KitchenOverviewPage\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Desktop, Mobile } from '../../../app/Responsive'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { OrderListBranchFilter } from '../../order/organisms/OrderListBranchFilter'\nimport { KitchenCompletionLoader } from '../organisms/KitchenCompletionLoader'\nimport { KitchenCompletionShelf } from '../organisms/KitchenCompletionShelf'\nimport {\n  KitchenCategorySeparator,\n  StyledKitchenFilterContainer,\n} from './KitchenOverviewPage'\n\nexport const KitchenCompletionPage: React.FC<NoChildren> = () => (\n  <KitchenCompletionLoader>\n    <PageLayoutResponsive\n      pageTitle={i18n.t`Completion`}\n      useBackButton={true}\n      showSoundControl={true}\n    >\n      <Desktop>\n        <StyledKitchenFilterContainer>\n          <OrderListBranchFilter />\n        </StyledKitchenFilterContainer>\n      </Desktop>\n      <Mobile>\n        <PageLayoutGridItem gridRowInMobile={1}>\n          <OrderListBranchFilter />\n        </PageLayoutGridItem>\n      </Mobile>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={2}\n        widthInColumns={5}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.NewOrders}\n          noOrdersMessage={<Trans>No new orders</Trans>}\n          mobileHeadline={<Trans>New orders</Trans>}\n        />\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={3}\n        column={5}\n        widthInColumns={6}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.Preparing}\n          noOrdersMessage={<Trans>No orders to complete</Trans>}\n          mobileHeadline={<Trans>Orders to complete</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n\n      <PageLayoutFullHeightItem\n        withScrollArea={true}\n        row={1}\n        rowInMobile={4}\n        column={11}\n        widthInColumns={5}\n      >\n        <KitchenCompletionShelf\n          category={OrderStateCategoryEnum.ReadyToDeliver}\n          noOrdersMessage={<Trans>No orders to hand over</Trans>}\n          mobileHeadline={<Trans>Orders to hand over</Trans>}\n        />\n        <Desktop>\n          <KitchenCategorySeparator />\n        </Desktop>\n      </PageLayoutFullHeightItem>\n    </PageLayoutResponsive>\n  </KitchenCompletionLoader>\n)\n\nexport default KitchenCompletionPage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ROUTE_KITCHEN, ROUTE_KITCHEN_COMPLETION } from '../kitchen.routes'\nimport { KitchenCompletionPage } from '../pages/KitchenCompletionPage'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps {}\n\nexport const KitchenRouting: React.FC<IProps> = () => {\n  return (\n    <Switch>\n      <SecureRoute exact path={ROUTE_KITCHEN} component={KitchenOverviewPage} />\n      <SecureRoute\n        path={ROUTE_KITCHEN_COMPLETION}\n        component={KitchenCompletionPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default KitchenRouting\n"],"sourceRoot":""}