{"version":3,"sources":["segments/main/pages/MainDashboardPage.tsx","atoms/CanMutate.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","hooks/useRouterContext.ts","atoms/TouchButtonBadge.tsx","segments/main/molecules/CreateOrderButton.tsx","segments/main/organisms/OrderCallWatch.graphql.ts","segments/main/molecules/OrderButton.tsx","segments/main/molecules/CallMeButton.tsx","segments/main/molecules/MapViewButton.tsx","segments/main/molecules/OverviewButton.tsx","segments/main/molecules/SettingsButton.tsx","segments/main/molecules/SupportButton.tsx"],"names":["_react","__webpack_require__","_CanMutate","_CanQuery","_i18n","_PageLayout","_CallMeButton","_CreateOrderButton","_MapViewButton","_OrderButton","_OverviewButton","_SettingsButton","_SupportButton","MainDashboardPage","props","default","createElement","Fragment","PageLayout","layouts","i","x","y","w","h","static","pageTitle","i18n","_","showSoundControl","key","CanQuery","queryName","OrderButton","MapViewButton","CanMutate","mutationName","CreateOrderButton","CallMeButton","SettingsButton","OverviewButton","SupportButton","_NoAccess","_RootProvider","children","user","useRoot","canMutate","NoAccess","canQuery","useContext","Router","__RouterContext","_interopRequireWildcard","_styledComponents","_styling","TouchButtonBadge","div","withConfig","displayName","Colors","red","_icons","_reactApolloHooks","_reactRouterDom","_TouchButtonBadge","_TouchButton","_OrderCallWatch","showOnlyText","data","useSubscription","OrderCallSubscription","location","pathname","state","call","Link","to","TouchButton","text","iconName","undefined","color","turquoise","badge","isRinging","RingVolume","count","yellow","greyMiddle","greyDark","green"],"mappings":"mLAAA,MAAAA,KAAAC,EAAA,gCAEAC,EAAAD,EAAA,MACAE,EAAAF,EAAA,MACAG,EAAAH,EAAA,IACAI,EAAAJ,EAAA,MACAK,EAAAL,EAAA,MACAM,EAAAN,EAAA,MACAO,EAAAP,EAAA,MACAQ,EAAAR,EAAA,MACAS,EAAAT,EAAA,MACAU,EAAAV,EAAA,MACAW,EAAAX,EAAA,MAiBO,MAAMY,EAAoDC,GAC/Dd,EAAAe,QAAAC,cAAAhB,EAAAe,QAAAE,SAAA,KACEjB,EAAAe,QAAAC,cAACX,EAAAa,WAAD,CACEC,QAfG,CACL,CAAEC,EAAG,KAAMC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GAC3C,CAAEL,EAAG,KAAMC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GAC3C,CAAEL,EAAG,KAAMC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GAC3C,CAAEL,EAAG,KAAMC,EAAG,GAAIC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GAC5C,CAAEL,EAAG,MAAOC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GAC5C,CAAEL,EAAG,MAAOC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GAC5C,CAAEL,EAAG,MAAOC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,GAC5C,CAAEL,EAAG,MAAOC,EAAG,GAAIC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,IAQ3CC,UAAWtB,EAAAuB,KAAAC,EAAA,aACXC,kBAAkB,GAElB7B,EAAAe,QAAAC,cAAA,OAAKc,IAAI,MACP9B,EAAAe,QAAAC,cAACb,EAAA4B,SAAD,CAAUC,UAAU,UAClBhC,EAAAe,QAAAC,cAACP,EAAAwB,YAAD,QAGJjC,EAAAe,QAAAC,cAAA,OAAKc,IAAI,MACP9B,EAAAe,QAAAC,cAACb,EAAA4B,SAAD,CAAUC,UAAU,UAClBhC,EAAAe,QAAAC,cAACR,EAAA0B,cAAD,QAGJlC,EAAAe,QAAAC,cAAA,OAAKc,IAAI,MACP9B,EAAAe,QAAAC,cAACd,EAAAiC,UAAD,CAAWC,aAAa,eACtBpC,EAAAe,QAAAC,cAACT,EAAA8B,kBAAD,QAGJrC,EAAAe,QAAAC,cAAA,OAAKc,IAAI,MACP9B,EAAAe,QAAAC,cAACd,EAAAiC,UAAD,CAAWC,aAAa,eACtBpC,EAAAe,QAAAC,cAACV,EAAAgC,aAAD,QAGJtC,EAAAe,QAAAC,cAAA,OAAKc,IAAI,OACP9B,EAAAe,QAAAC,cAACL,EAAA4B,eAAD,OAEFvC,EAAAe,QAAAC,cAAA,OAAKc,IAAI,OACP9B,EAAAe,QAAAC,cAACN,EAAA8B,eAAD,OAEFxC,EAAAe,QAAAC,cAAA,OAAKc,IAAI,OACP9B,EAAAe,QAAAC,cAACJ,EAAA6B,cAAD,qCAMO5B,qHCrEf,MAAAb,KAAAC,EAAA,gCAEAyC,EAAAzC,EAAA,MACA0C,EAAA1C,EAAA,gBAM4C,GAAGmC,eAAcQ,eAC3D,MAAMC,KAAEA,IAAS,EAAAF,EAAAG,WACjB,OAAOD,EAAKE,UAAUX,GACpBpC,EAAAe,QAAAC,cAAAhB,EAAAe,QAAAE,SAAA,KAAG2B,GAEH5C,EAAAe,QAAAC,cAAC0B,EAAAM,SAAD,8BAAoCZ,6GCdxC,MAAAnC,EAAA,KACAA,EAAA,QACAA,EAAA,6BAM2C,GAAG2C,cAKxC,4GCbN,MAAA5C,KAAAC,EAAA,gCAEAyC,EAAAzC,EAAA,MACA0C,EAAA1C,EAAA,eAM2C,GAAG+B,YAAWY,eACvD,MAAMC,KAAEA,IAAS,EAAAF,EAAAG,WACjB,OAAOD,EAAKI,SAASjB,GACnBhC,EAAAe,QAAAC,cAAAhB,EAAAe,QAAAE,SAAA,KAAG2B,GAEH5C,EAAAe,QAAAC,cAAC0B,EAAAM,SAAD,2BAAiChB,qGCXvB,WAIZ,OAAO,EAAAhC,EAAAkD,YAAWC,EAAOC,kBAP3B,IAAApD,EAAAC,EAAA,GACAkD,ySAAAE,CAAApD,EAAA,mHCDA,MAAAqD,KAAArD,EAAA,iCAEAsD,EAAAtD,EAAA,IAEO,MAAMuD,EAAmBF,EAAAvC,QAAO0C,IAAGC,WAAA,CAAAC,YAAA;;;;;;sBAMpBJ,EAAAK,OAAOC;;;;;;;;;sICV7B,MAAAC,EAAA7D,EAAA,KAEAD,KAAAC,EAAA,gCACA8D,EAAA9D,EAAA,KACA+D,EAAA/D,EAAA,KAEAgE,EAAAhE,EAAA,MAEAG,EAAAH,EAAA,IACAiE,EAAAjE,EAAA,MACAsD,EAAAtD,EAAA,IACAkE,EAAAlE,EAAA,0BAMiE,GAC/DmE,gBAAe,MAEf,MAAMC,KAAEA,IAAS,EAAAN,EAAAO,iBAGfH,EAAAI,uBAEIC,EAA+B,CACnCC,SAAU,gBACVC,MAAOL,EAAOA,EAAKM,KAAO,MAG5B,OACE3E,EAAAe,QAAAC,cAACgD,EAAAY,KAAD,CAAMC,GAAIL,GACRxE,EAAAe,QAAAC,cAACkD,EAAAY,YAAD,CACEC,KAAM3E,EAAAuB,KAAAC,EAAA,gBACNoD,SAAUZ,OAAea,EAAY,aACrCC,MAAO3B,EAAAK,OAAOuB,UACdC,MACEf,GAAQA,EAAKM,MAAQN,EAAKM,KAAKU,UAC7BrF,EAAAe,QAAAC,cAACiD,EAAAT,iBAAD,KACExD,EAAAe,QAAAC,cAAC8C,EAAAwB,WAAD,OAEA,6CCzCd,sFAEO,MAAMf,MAFbtE,EAAA,kCAEqCc;;;;;;;;;qICFrC,MAAAf,KAAAC,EAAA,gCACA+D,EAAA/D,EAAA,KAEAgE,EAAAhE,EAAA,MACAG,EAAAH,EAAA,IACAiE,EAAAjE,EAAA,MACAsD,EAAAtD,EAAA,kBAM8C,GAAGsF,WAC/CvF,EAAAe,QAAAC,cAACgD,EAAAY,KAAD,CAAMC,GAAG,UACP7E,EAAAe,QAAAC,cAACkD,EAAAY,YAAD,CACEC,KAAM3E,EAAAuB,KAAAC,EAAA,UACNoD,SAAS,sBACTI,MACEG,GAASA,EAAQ,EAAIvF,EAAAe,QAAAC,cAACiD,EAAAT,iBAAD,KAAmB+B,GAA4B,KAEtEL,MAAO3B,EAAAK,OAAO4B,qHCpBpB,sSAAAnC,CAAApD,EAAA,OAEAA,EAAA,qBACAA,EAAA,MACAA,EAAA,mBAI+Ca,IAEpC,iHCVX,MAAAd,KAAAC,EAAA,gCACA+D,EAAA/D,EAAA,KAEAG,EAAAH,EAAA,IACAiE,EAAAjE,EAAA,MACAsD,EAAAtD,EAAA,oBAI6D,GAAG2C,cAC9D5C,EAAAe,QAAAC,cAACgD,EAAAY,KAAD,CAAMC,GAAG,cACP7E,EAAAe,QAAAC,cAACkD,EAAAY,YAAD,CAAaC,KAAM3E,EAAAuB,KAAAC,EAAA,OAAaoD,SAAS,MAAME,MAAO3B,EAAAK,OAAO6B,YAC1D7C,iHCZP,MAAA5C,KAAAC,EAAA,gCACA+D,EAAA/D,EAAA,KAEAG,EAAAH,EAAA,IACAiE,EAAAjE,EAAA,MACAsD,EAAAtD,EAAA,qBAI+D,GAC7D2C,cAEA5C,EAAAe,QAAAC,cAACgD,EAAAY,KAAD,CAAMC,GAAG,aACP7E,EAAAe,QAAAC,cAACkD,EAAAY,YAAD,CACEC,KAAM3E,EAAAuB,KAAAC,EAAA,YACNoD,SAAS,cACTE,MAAO3B,EAAAK,OAAO8B,UAEb9C,iHClBP,MAAA5C,KAAAC,EAAA,gCACA+D,EAAA/D,EAAA,KAEAG,EAAAH,EAAA,IACAiE,EAAAjE,EAAA,MACAsD,EAAAtD,EAAA,qBAI+D,GAC7D2C,cAEA5C,EAAAe,QAAAC,cAACgD,EAAAY,KAAD,CAAMC,GAAG,aACP7E,EAAAe,QAAAC,cAACkD,EAAAY,YAAD,CACEC,KAAM3E,EAAAuB,KAAAC,EAAA,YACNoD,SAAS,WACTE,MAAO3B,EAAAK,OAAO8B,UAEb9C,gHClBP,MAAA5C,KAAAC,EAAA,gCACA+D,EAAA/D,EAAA,KAEAG,EAAAH,EAAA,IACAiE,EAAAjE,EAAA,MACAsD,EAAAtD,EAAA,oBAI6D,GAAG2C,cAC9D5C,EAAAe,QAAAC,cAACgD,EAAAY,KAAD,CAAMC,GAAG,YACP7E,EAAAe,QAAAC,cAACkD,EAAAY,YAAD,CAAaC,KAAM3E,EAAAuB,KAAAC,EAAA,WAAiBoD,SAAS,OAAOE,MAAO3B,EAAAK,OAAO+B,OAC/D/C","file":"static/js/172.064151c4.chunk.js","sourcesContent":["import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { CallMeButton } from '../molecules/CallMeButton'\nimport { CreateOrderButton } from '../molecules/CreateOrderButton'\nimport { MapViewButton } from '../molecules/MapViewButton'\nimport { OrderButton } from '../molecules/OrderButton'\nimport { OverviewButton } from '../molecules/OverviewButton'\nimport { SettingsButton } from '../molecules/SettingsButton'\nimport { SupportButton } from '../molecules/SupportButton'\n\ninterface IDashboardPageProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'b1', x: 0, y: 1, w: 2, h: 2, static: true },\n    { i: 'b2', x: 2, y: 1, w: 2, h: 2, static: true },\n    { i: 'b3', x: 4, y: 1, w: 2, h: 2, static: true },\n    { i: 'b4', x: 10, y: 1, w: 1, h: 2, static: true },\n    { i: 'bb1', x: 0, y: 7, w: 2, h: 2, static: true },\n    { i: 'bb2', x: 2, y: 7, w: 2, h: 2, static: true },\n    { i: 'bb3', x: 4, y: 7, w: 2, h: 2, static: true },\n    { i: 'bb4', x: 14, y: 7, w: 2, h: 2, static: true },\n  ]\n}\n\nexport const MainDashboardPage: React.SFC<IDashboardPageProps> = props => (\n  <>\n    <PageLayout\n      layouts={getLayout()}\n      pageTitle={i18n.t`Main menu`}\n      showSoundControl={true}\n    >\n      <div key=\"b1\">\n        <CanQuery queryName=\"orders\">\n          <OrderButton />\n        </CanQuery>\n      </div>\n      <div key=\"b2\">\n        <CanQuery queryName=\"orders\">\n          <MapViewButton />\n        </CanQuery>\n      </div>\n      <div key=\"b3\">\n        <CanMutate mutationName=\"createOrder\">\n          <CreateOrderButton />\n        </CanMutate>\n      </div>\n      <div key=\"b4\">\n        <CanMutate mutationName=\"createOrder\">\n          <CallMeButton />\n        </CanMutate>\n      </div>\n      <div key=\"bb1\">\n        <SettingsButton />\n      </div>\n      <div key=\"bb2\">\n        <OverviewButton />\n      </div>\n      <div key=\"bb4\">\n        <SupportButton />\n      </div>\n    </PageLayout>\n  </>\n)\n\nexport default MainDashboardPage\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.SFC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return user.canMutate(mutationName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.SFC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.SFC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return user.canQuery(queryName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n}\n","import { useContext } from 'react'\nimport * as Router from 'react-router'\n\nexport default function useRouterContext<\n  Params extends { [K in keyof Params]?: string } = {}\n>(): Router.RouteComponentProps<Params> {\n  // @ts-ignore\n  return useContext(Router.__RouterContext)\n}\n\n// export default function useRouter<\n// Params extends { [K in keyof Params]?: string } = {}\n// >(): Router.RouteComponentProps<Params> {\n//   // @ts-ignore\n//   let context = useContext(Router.__RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n\n// }\n\n// export default function useRouter(options = {}) {\n//   invariant(\n//     typeof useContext === \"function\",\n//     \"The useRouter hook requires React 16.7 or greater\"\n//   );\n\n//   let context = useContext(RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n// }\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const TouchButtonBadge = styled.div`\n  min-height: 1.8rem;\n  line-height: 1.8rem;\n  min-width: 1.8rem;\n  font-size: 1.2rem;\n  margin: 0;\n  background-color: ${Colors.red};\n  color: white;\n  position: absolute;\n  right: -0.25rem;\n  top: -0.25rem;\n  border-radius: 1.8rem;\n  text-align: center;\n  vertical-align: middle;\n  padding: 0;\n`\n","import { RingVolume } from '@material-ui/icons'\nimport { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { useSubscription } from 'react-apollo-hooks'\nimport { Link } from 'react-router-dom'\n\nimport { TouchButtonBadge } from '../../../atoms/TouchButtonBadge'\nimport { SOrderCall } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { OrderCallSubscription } from '../organisms/OrderCallWatch.graphql'\n\ninterface INewOrderButtonProps {\n  showOnlyText?: boolean\n}\n\nexport const CreateOrderButton: React.FC<INewOrderButtonProps> = ({\n  showOnlyText = false,\n}) => {\n  const { data } = useSubscription<\n    SOrderCall.Subscription,\n    SOrderCall.Variables\n  >(OrderCallSubscription)\n\n  const location: LocationDescriptor = {\n    pathname: '/order/create',\n    state: data ? data.call : null,\n  }\n\n  return (\n    <Link to={location}>\n      <TouchButton\n        text={i18n.t`Create order`}\n        iconName={showOnlyText ? undefined : 'add_circle'}\n        color={Colors.turquoise}\n        badge={\n          data && data.call && data.call.isRinging ? (\n            <TouchButtonBadge>\n              <RingVolume />\n            </TouchButtonBadge>\n          ) : null\n        }\n      />\n    </Link>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const OrderCallSubscription = gql`\n  subscription SOrderCall {\n    call: updatedUserCallingCustomer {\n      eventId\n      phone\n      prefix\n      isRinging\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { TouchButtonBadge } from '../../../atoms/TouchButtonBadge'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  count?: Maybe<number>\n}\n\nexport const OrderButton: React.SFC<IProps> = ({ count }) => (\n  <Link to=\"/order\">\n    <TouchButton\n      text={i18n.t`Orders`}\n      iconName=\"assignment_returned\"\n      badge={\n        count && count > 0 ? <TouchButtonBadge>{count}</TouchButtonBadge> : null\n      }\n      color={Colors.yellow}\n    />\n  </Link>\n)\n","import React, { useCallback } from 'react'\n\nimport useRouterContext from '../../../hooks/useRouterContext'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nexport const CallMeButton: React.SFC<IProps> = props => {\n  if (process.env.REACT_APP_STAGE === 'prod') {\n    return null\n  }\n  const { history } = useRouterContext()\n  const makeCall = useCallback((ev: React.MouseEvent<HTMLButtonElement>) => {\n    const phone = window.prompt(\n      'Zadej telefonní číslo, které ti bude volat (bez předvolby)',\n    )\n    if (phone === null) {\n      return\n    }\n    let eventId: MaybeID = null\n    if (ev.shiftKey) {\n      eventId = window.prompt('A teď ještě eventId, jestli víš co děláš ;)')\n    }\n    history.push({\n      pathname: `/order/create`,\n      state: {\n        eventId,\n        phone,\n      },\n    })\n  }, [])\n  return (\n    <TouchButton\n      text=\"Zavolej mi [DEV]\"\n      iconName=\"ring_volume\"\n      color={Colors.turquoise}\n      onClick={makeCall}\n    />\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IMapViewButtonProps {}\n\nexport const MapViewButton: React.SFC<IMapViewButtonProps> = ({ children }) => (\n  <Link to=\"/order/map\">\n    <TouchButton text={i18n.t`Map`} iconName=\"map\" color={Colors.greyMiddle}>\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IOverviewButtonProps {}\n\nexport const OverviewButton: React.SFC<IOverviewButtonProps> = ({\n  children,\n}) => (\n  <Link to=\"/overview\">\n    <TouchButton\n      text={i18n.t`Overview`}\n      iconName=\"trending_up\"\n      color={Colors.greyDark}\n    >\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface ISettingsButtonProps {}\n\nexport const SettingsButton: React.SFC<ISettingsButtonProps> = ({\n  children,\n}) => (\n  <Link to=\"/settings\">\n    <TouchButton\n      text={i18n.t`Settings`}\n      iconName=\"settings\"\n      color={Colors.greyDark}\n    >\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface ISupportButtonProps {}\n\nexport const SupportButton: React.SFC<ISupportButtonProps> = ({ children }) => (\n  <Link to=\"/support\">\n    <TouchButton text={i18n.t`Support`} iconName=\"help\" color={Colors.green}>\n      {children}\n    </TouchButton>\n  </Link>\n)\n"],"sourceRoot":""}