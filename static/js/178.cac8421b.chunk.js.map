{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/FormInputTextBox.tsx","atoms/FormInputStyled.tsx","atoms/Headline.tsx","atoms/CanQuery.tsx","atoms/NoAccess.tsx","atoms/SelectControlFlat.tsx","atoms/FlexColumn.tsx","hooks/useAutorunWhenSingleBranch.ts","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","molecules/PageLayoutItem.tsx","molecules/TouchButtonDelete.tsx","segments/settings/organisms/SettingsCompanyBranchPicker.tsx","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","atoms/FormInputCheckbox.tsx","atoms/FlexRow.tsx","atoms/InputDate.tsx","atoms/FormInputDate.tsx","atoms/StyledCheckbox.tsx","segments/branchpreferences/organism/SaveInvoicePreferencesButton.tsx","segments/branchpreferences/organism/InvoicePreferencesForm.tsx","segments/branchpreferences/organism/StoppageForm.tsx","segments/branchpreferences/pages/BranchPreferencesPage.tsx","segments/branchpreferences/routes/BranchPreferencesRoutes.tsx","atoms/InputTime.tsx","segments/businesshours/atoms/BusinessHoursTimeRange.tsx","segments/businesshours/molecules/BusinessHoursWeekday.tsx","segments/businesshours/organisms/BusinessHoursForm.tsx","atoms/FormInputTime.tsx","atoms/FormInputTimeSpan.tsx","segments/businesshours/molecules/SpecificModeSelector.tsx","hooks/useSettings.ts","segments/businesshours/organisms/SpecificBusinessHourForm.tsx","segments/businesshours/molecules/SpecificBusinessHourLine.tsx","segments/businesshours/organisms/SpecificBusinessHours.tsx","segments/businesshours/pages/BusinessHoursPage.tsx","segments/businesshours/routes/BusinessHoursRoutes.tsx","segments/settings/organisms/BusinessHoursButton.tsx","segments/settings/organisms/MenuCategoryButton.tsx","segments/settings/organisms/MenuRecipeButton.tsx","segments/settings/organisms/MenuStockButton.tsx","segments/settings/organisms/MenuStockDepositButton.tsx","segments/settings/organisms/UserMenuButton.tsx","segments/settings/organisms/ZonesMenuButton.tsx","segments/settings/pages/SettingsPage.tsx","segments/settings/routes/SettingsRoutes.tsx"],"names":["IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","FormInputTextBox","forwardRef","inputRef","field","_ref$inputFullWidth","inputFullWidth","isRequired","validatioName","validationMessage","validate","react_form__WEBPACK_IMPORTED_MODULE_2__","value","isEmpty","_i18n__WEBPACK_IMPORTED_MODULE_4__","_","fieldApi","_FormInputStyled__WEBPACK_IMPORTED_MODULE_5__","onChange","ev","target","validity","valid","setTouched","setValue","invalid","Boolean","error","ref","invalidInputStyle","css","fullWidthStyle","FormInputStyled","input","Headline","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","CanQuery","queryName","canQuery","NoAccess","StyledSelectControlFlat","textColor","SelectControlFlat","items","_props$formatItem","formatItem","RM","prop","_props$isMulti","isMulti","_props$isClearable","isClearable","_props$isInvalid","isInvalid","selectedItem","selectedItems","onSingleSelection","onMultiSelection","hasSingleItem","isItemSelected","item","Array","isArray","contains","equals","updateSelection","without","react__WEBPACK_IMPORTED_MODULE_3___default","className","cn","interactive","active","onClick","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","id","map","idx","formatted","key","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","useAutorunWhenSingleBranch","mobx__WEBPACK_IMPORTED_MODULE_0__","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","onSingleBranch","useEffect","autorun","isReady","hasSingleBranch","branches","CompanyBranchFlatSelect","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","_ref$hideWhenSingleBr","hideWhenSingleBranch","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","isSelected","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","restInnerProps","style","react","placeholder","i18n","ButtonHeight","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","selection","head","FormSubmit","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","utils","MomentUtils","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","TouchButtonDelete","onDelete","confirmText","_atoms_SizerButton__WEBPACK_IMPORTED_MODULE_2__","_TouchButton__WEBPACK_IMPORTED_MODULE_4__","window","confirm","SettingsCompanyBranchPicker","_useRoot","settings","selectBranch","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_6__","branchId","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","./cs.svg","./de.svg","./en.svg","./pl.svg","./sk.svg","webpackContext","req","webpackContextResolve","Error","code","resolve","module","exports","./logo-doveze.svg","./logo-gopay.svg","./logo-mastercard.svg","./logo-visa.svg","FormInputCheckbox","defaultValue","inputProps","_StyledCheckbox__WEBPACK_IMPORTED_MODULE_3__","checked","FlexRow","InputDate","material_ui_pickers_esm","format","maxDateMessage","core","minDateMessage","FormInputDate","pickerProps","es","render","InputDate_InputDate","onOpen","StyledCheckbox","span","white","Radiuses","TextComponent","SaveInvoicePreferencesButton","TouchButton","text","SaveButtonContainer","InvoicePreferencesForm","SaveInvoicePreferencesButton_SaveInvoicePreferencesButton","StoppageForm","BranchPreferencesPage","FullPageLayout","pageTitle","Card","_lingui_react","StoppageForm_StoppageForm","InvoicePreferencesForm_InvoicePreferencesForm","BranchPreferencesRoutes","match","react_router","SecureRoute","exact","path","NotFoundPage","InputTime","StyledBussinessHoursTimeRange","BusinessHoursTimeRange_templateObject","BusinessHoursTimeRange","memo","hour","InputTime_InputTime","openAt","fullWidth","closeAt","StyledBusinessHoursWeekday","article","BusinessHoursWeekday_templateObject","Button","BusinessHoursWeekday","weekday","hours","onAdd","onRemove","renderHour","data-testid","SizerButton","role","index_es","getTodayTime","DFP","parse","Date","BusinessHoursForm","_useQRegularBusinessH","useQRegularBusinessHours","loading","_React$useState","useState","observable","Map","businessHours","slicedToArray","_useMBusinessHoursSub","useMBusinessHoursSubmit","submitBusinessHours","weekDays","forEach","set","enum","array","weekDay","get","push","weekDayHours","clear","hourIdCounter","useRef","hourId","findIndex","propEq","splice","enqueueSuccess","useSnackBar","onSubmit","useCallback","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","apply","toConsumableArray","formatTime","sent","stop","Loading","current","startOfDay","endOfDay","Sizer","MarginBox","FormInputTime","InlineWrap","FormInputTimeSpan_templateObject","FormInputTimeSpan","fieldFrom","fieldTo","FormInputTime_FormInputTime","labels","_labels","defineProperty","ESpecificHourMode","TIMESPAN","i18nMark","FULLDAY","SpecificModeSelector","specificMode","mode","changeSpecificMode","DateContainer","SpecificBusinessHourForm_templateObject","FormContainer","SpecificBusinessHourForm","submitSpecificHour","defaultValues","getDefaultValues","fullDateFormat","minDate","index_module","FormInputTimeSpan_FormInputTimeSpan","now","date","setHours","setMinutes","SpecificBusinessHourLine","bsHour","0","specificDateLocalized","closed","closedNote","formatLineTime","sortByDate","sort","ascend","or","not","SpecificBusinessHours","SpecificBusinessHours_graphql","variables","fetchPolicy","renderFragment","SpecificBusinessHourLine_SpecificBusinessHourLine","deleteSpecificHour","BusinessHoursPage","useBackButton","BusinessHoursForm_BusinessHoursForm","SpecificBusinessHours_SpecificBusinessHours","SpecificBusinessHourForm_SpecificBusinessHourForm","BusinessHoursRoutes","BusinessHoursButton","red","MenuCategoryButton","turquoise","MenuRecipeButton","MenuStockButton","MenuStockDepositButton","UserMenuButton","ZonesMenuButton","violet","SettingsPage","PageLayout","layouts","i","x","y","w","h","SettingsRoutes_SettingsRoutes","ZoneMenuRoutes","lazy","Promise","all","then","bind","MenuRoutes","UserMenuPage","SettingsRoutes","PageTitle","Route","LazyRoute"],"mappings":"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","file":"static/js/178.cac8421b.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { FormInputStyled } from './FormInputStyled'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  isRequired?: boolean\n  validatioName?: string\n  validationMessage?: string\n  inputFullWidth?: boolean\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputFullWidth = false,\n      isRequired,\n      validatioName,\n      validationMessage,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            if (validationMessage) {\n              return validationMessage\n            }\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              fieldApi.setTouched(true)\n              fieldApi.setValue(ev.target.value)\n            }\n          }}\n          inputFullWidth={inputFullWidth}\n          invalid={Boolean(fieldApi.error)}\n          // @ts-ignore\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import styled, { css } from 'styled-components'\n\nimport { Spacing } from '../styling'\n\ninterface IFormInputStyled {\n  invalid?: boolean\n  inputFullWidth?: boolean\n}\n\nexport const invalidInputStyle = css`\n  border: 1px red solid;\n`\n\nexport const fullWidthStyle = css`\n  width: 100%;\n`\n\nexport const FormInputStyled = styled.input`\n  margin: ${Spacing.MarginAroundFormComponents};\n  ${({ inputFullWidth }: IFormInputStyled) => inputFullWidth && fullWidthStyle};\n  ${({ invalid }: IFormInputStyled) => invalid && invalidInputStyle};\n`\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import { Trans } from '@lingui/macro'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  formatItem?: (item: ItemType) => string | ReactNode\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\nconst StyledSelectControlFlat = styled.div`\n  ${(props: { textColor?: string }) => ``}\n\n  color: ${({ textColor }) => (textColor ? textColor : 'inherit')};\n\n  &.interactive {\n    cursor: pointer;\n  }\n\n  &.invalid {\n    border: 1px red solid;\n  }\n\n  > div {\n    margin: 0.5rem 0.6rem;\n    display: inline-block;\n  }\n\n  > div.active {\n    font-weight: bolder;\n    text-decoration: underline;\n  }\n`\n\nexport const SelectControlFlat = <ItemType extends any>(\n  props: ISelectControlFlatProps<ItemType>,\n) => {\n  const {\n    items,\n    formatItem = RM.prop('displayName'),\n    isMulti = false,\n    isClearable = false,\n    isInvalid = false,\n    selectedItem,\n    selectedItems,\n    onSingleSelection,\n    onMultiSelection,\n    textColor,\n  } = props\n\n  const hasSingleItem = items.length === 1\n\n  const hasSelection = () => {\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n\n  const isItemSelected = (item: ItemType) => {\n    if (items.length === 1) {\n      // with one item there no selection happening\n      return false\n    }\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n\n  const updateSelection = (item: Maybe<ItemType>) => {\n    if (hasSingleItem) {\n      return\n    }\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  return (\n    <StyledSelectControlFlat\n      className={cn({\n        invalid: isInvalid,\n        interactive: !hasSingleItem,\n      })}\n      textColor={textColor}\n    >\n      {isClearable && (\n        <div\n          className={cn({ active: !hasSelection() })}\n          onClick={() => {\n            updateSelection(null)\n          }}\n        >\n          <Trans id=\"optionselector.clear-filter\">All</Trans>\n        </div>\n      )}\n      {items.map((item, idx) => {\n        // @ts-ignore Have to use any in generics due to parsing error\n        const formatted = formatItem(item)\n        return (\n          <div\n            key={idx}\n            className={cn({ active: isItemSelected(item) })}\n            onClick={() => {\n              updateSelection(item)\n            }}\n          >\n            {formatted}\n          </div>\n        )\n      })}\n    </StyledSelectControlFlat>\n  )\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { autorun } from 'mobx'\nimport React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\nexport function useAutorunWhenSingleBranch(\n  onSingleBranch: (branch: FCompanyBranchFragment) => void,\n) {\n  const { user } = useRoot()\n  React.useEffect(() =>\n    autorun(() => {\n      if (user.isReady && user.hasSingleBranch) {\n        onSingleBranch(user.branches[0])\n      }\n    }),\n  )\n}\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  hideWhenSingleBranch?: boolean\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  hideWhenSingleBranch = false,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n\n  const isSelected = branch => selectedBranches.includes(branch.id)\n\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n\n  if (user.hasSingleBranch && hideWhenSingleBranch) {\n    return null\n  }\n\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps extends Omit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.FC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      iconName=\"delete\"\n      color={Colors.greyMiddle}\n      onClick={ev => {\n        ev.preventDefault()\n        if (!confirmText || window.confirm(confirmText)) {\n          onDelete()\n        }\n      }}\n      {...props}\n    />\n  </SizerButton>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useAutorunWhenSingleBranch } from '../../../hooks/useAutorunWhenSingleBranch'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {\n  isMulti?: boolean\n  width?: number\n}\n\nexport const SettingsCompanyBranchPicker: React.FC<IProps> = ({\n  isMulti,\n  width,\n}) => {\n  const { settings, user } = useRoot()\n\n  useAutorunWhenSingleBranch(branch => {\n    settings.selectBranch(branch.id)\n  })\n\n  return useObserver(() => {\n    if (user.hasSingleBranch) {\n      return null\n    }\n    return (\n      <IconLine icon=\"store_mall_directory\">\n        <CompanyBranchPicker\n          selectedBranches={settings.branchId ? [settings.branchId] : undefined}\n          onSelectionChange={([branch]) => settings.selectBranch(branch)}\n          isMulti={isMulti}\n          isClearable={false}\n          getDropdownProps={() => ({ width })}\n          hideWhenSingleBranch={true}\n        />\n      </IconLine>\n    )\n  })\n}\n","var map = {\n\t\"./cs.svg\": 6899,\n\t\"./de.svg\": 6900,\n\t\"./en.svg\": 6901,\n\t\"./pl.svg\": 6902,\n\t\"./sk.svg\": 6903\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6898;","var map = {\n\t\"./logo-doveze.svg\": 6905,\n\t\"./logo-gopay.svg\": 6906,\n\t\"./logo-mastercard.svg\": 6907,\n\t\"./logo-visa.svg\": 6908\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6904;","import React from 'react'\nimport { Checkbox, FieldType } from 'react-form'\n\nimport { StyledCheckbox } from './StyledCheckbox'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  label?: string\n}\n\nexport const FormInputCheckbox: React.FC<IProps> = ({\n  field,\n  label,\n  defaultValue,\n  children,\n  ...inputProps\n}) => (\n  <StyledCheckbox>\n    <Checkbox field={field} checked={Boolean(defaultValue)} {...inputProps} />\n    {label && <label>{label}</label>}\n  </StyledCheckbox>\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { i18n } from '@lingui/core'\nimport { DatePickerInlineProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends DatePickerInlineProps {}\n\nexport const InputDate: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <InlineDatePicker\n        format=\"ll\"\n        maxDateMessage={i18n.t`Date is too much in the future`}\n        minDateMessage={i18n.t`Date is too much in the past`}\n        {...props}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { DatePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { InputDate } from './InputDate'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <Field\n      field={field}\n      render={fieldApi => (\n        <InputDate\n          value={fieldApi.value}\n          onChange={value => fieldApi.setValue(value)}\n          onOpen={() => fieldApi.setTouched(true)}\n          {...pickerProps}\n        />\n      )}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses, Spacing } from '../styling'\n\nexport const StyledCheckbox = styled.span`\n  input {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-color: ${Colors.white};\n    border: 1px solid ${Colors.greyMiddle};\n    padding: 1rem;\n    border-radius: ${Radiuses.TextComponent};\n    display: inline-block;\n    position: relative;\n    margin: ${Spacing.MarginAroundFormComponents};\n    outline: none;\n    &:checked {\n      background-color: ${Colors.white};\n      border: 1px solid ${Colors.greyMiddle};\n    }\n    &:checked:after {\n      content: '\\\\2714';\n      font-size: 2rem;\n      position: absolute;\n      top: -0.5rem;\n      left: 0.1rem;\n      color: ${Colors.greyDark};\n      overflow: hidden;\n    }\n    &:disabled {\n      background-color: ${Colors.greyLight};\n    }\n    &:disabled:after {\n      color: ${Colors.greyMiddle};\n    }\n  }\n  label {\n    display: inline-block;\n    margin: 0.4rem 0 0 0.5rem;\n    vertical-align: top;\n  }\n`\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const SaveInvoicePreferencesButton: React.FC = props => (\n  <TouchButton text={i18n.t`Save invoice preferences`} color={Colors.green} />\n)\n","import React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { SaveInvoicePreferencesButton } from './SaveInvoicePreferencesButton'\n\ninterface IInvoicePreferencesFormProps {}\n\nconst SaveButtonContainer = styled.div`\n  margin-top: 1rem;\n  width: 15rem;\n`\n\nexport const InvoicePreferencesForm: React.FC<\n  IInvoicePreferencesFormProps\n> = props => (\n  <Form>\n    <FormInputTextBox field=\"account\" placeholder=\"Název firmy\" />\n    <br />\n    <FormInputTextBox field=\"number\" placeholder=\"IČ\" />\n    <FormInputTextBox field=\"vatIdent\" placeholder=\"DIČ\" />\n\n    <SaveButtonContainer>\n      <SaveInvoicePreferencesButton />\n    </SaveButtonContainer>\n  </Form>\n)\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { i18n } from '../../../i18n'\n\ninterface IStoppageFormProps {}\n\nexport const StoppageForm: React.FC<IStoppageFormProps> = props => (\n  <Form>\n    <FormInputCheckbox\n      field=\"onlyPersonalPickup\"\n      label={i18n.t`We are not delivering, only take away.`}\n    />\n    <br />\n    <FormInputCheckbox\n      field=\"stoppage\"\n      label={i18n.t`Completely stop all orders.`}\n    />\n  </Form>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { InvoicePreferencesForm } from '../organism/InvoicePreferencesForm'\nimport { StoppageForm } from '../organism/StoppageForm'\n\ninterface IPreferencesPageProps {}\n\nexport const BranchPreferencesPage: React.FC<IPreferencesPageProps> = props => (\n  <FullPageLayout pageTitle={i18n.t`Branch preferences`}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <Headline>\n        <Trans id=\"branch.preferences.stoppage\">Stoppage</Trans>\n      </Headline>\n      <StoppageForm />\n\n      <Headline>\n        <Trans>Change of invoice preferences</Trans>\n      </Headline>\n      <InvoicePreferencesForm />\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesPage } from '../pages/BranchPreferencesPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BranchPreferencesRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      component={BranchPreferencesPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import { InlineTimePicker, TimePickerInlineProps } from 'material-ui-pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends TimePickerInlineProps {}\n\nexport const InputTime: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <InlineTimePicker format=\"LT\" {...props} />\n    </DateTimeFormatProvider>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { InputTime } from '../../../atoms/InputTime'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  hour: TBusinessHour\n}\n\nconst StyledBussinessHoursTimeRange = styled.div`\n  & input {\n    width: 5rem;\n  }\n`\n\nexport const BusinessHoursTimeRange = React.memo<IProps>(({ hour }) => {\n  return useObserver(() => (\n    <StyledBussinessHoursTimeRange>\n      <InputTime\n        value={hour.openAt}\n        onChange={value => (hour.openAt = value)}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n      <InputTime\n        value={hour.closeAt}\n        onChange={value => (hour.closeAt = value)}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </StyledBussinessHoursTimeRange>\n  ))\n})\n","import { Trans } from '@lingui/macro'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { FWeekdayFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Radiuses } from '../../../styling'\nimport { BusinessHoursTimeRange } from '../atoms/BusinessHoursTimeRange'\nimport { TBusinessHour } from '../businesshours.types'\n\ninterface IProps {\n  weekday: FWeekdayFragment\n  hours: ReadonlyArray<TBusinessHour>\n  onAdd(): void\n  onRemove(hourId: ID): void\n}\n\nconst StyledBusinessHoursWeekday = styled.article`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 0.3rem 0;\n  h5 {\n    width: 5rem;\n  }\n  & .range {\n    display: flex;\n    margin: 0 2rem 0 0;\n    padding-right: 1rem;\n    background: ${Colors.white};\n    border-radius: ${Radiuses.Button};\n  }\n  .remove-btn {\n    margin-right: 1rem;\n  }\n`\n\nexport const BusinessHoursWeekday = React.memo<IProps>(\n  ({ weekday, hours, onAdd, onRemove }) => {\n    const renderHour = (hour: TBusinessHour) => {\n      return (\n        <div key={hour.id} data-testid=\"bh-range\" className=\"range\">\n          <SizerButton className=\"remove-btn\">\n            <TouchButton\n              title={i18n.t`Remove business hour`}\n              role=\"button\"\n              onClick={() => onRemove(hour.id)}\n            >\n              <Delete />\n            </TouchButton>\n          </SizerButton>\n          <BusinessHoursTimeRange hour={hour} />\n        </div>\n      )\n    }\n\n    const renderHours = () => {\n      if (hours.length === 0) {\n        return (\n          <em>\n            <Trans>Closed</Trans>\n          </em>\n        )\n      }\n      return hours.map(renderHour)\n    }\n\n    return useObserver(() => (\n      <StyledBusinessHoursWeekday>\n        <h5>{weekday.code}</h5>\n        {renderHours()}\n        <SizerButton>\n          <TouchButton\n            title={i18n.t`Add business hour`}\n            role=\"button\"\n            onClick={onAdd}\n          >\n            <AddCircle />\n          </TouchButton>\n        </SizerButton>\n      </StyledBusinessHoursWeekday>\n    ))\n  },\n)\n","import { DFP, RM } from '@speedlo/tools'\nimport { IObservableArray, observable } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  InputBusinessHourCreate,\n  useMBusinessHoursSubmit,\n  useQRegularBusinessHours,\n  WeekDayEnum,\n} from '../../../graph/generated'\nimport { formatTime } from '../../../helpers/formats'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\nimport { TBusinessHour } from '../businesshours.types'\nimport { BusinessHoursWeekday } from '../molecules/BusinessHoursWeekday'\n\nconst getTodayTime = DFP.parse(new Date(), 'H:mm')\n\nexport const BusinessHoursForm: React.FC = () =>\n  useObserver(() => {\n    const { settings } = useRoot()\n    const { data, loading } = useQRegularBusinessHours({\n      branchId: settings.branchId,\n    })\n\n    const [businessHours] = React.useState(() =>\n      observable(new Map<WeekDayEnum, IObservableArray<TBusinessHour>>()),\n    )\n\n    const [submitBusinessHours] = useMBusinessHoursSubmit()\n\n    React.useEffect(() => {\n      if (loading) {\n        return\n      }\n      if (businessHours.size === 0) {\n        data.weekDays.forEach(weekday => {\n          businessHours.set(weekday.enum, observable.array([]))\n        })\n      }\n      data.businessHours.forEach(({ id, openAt, closeAt, weekDay }) => {\n        if (weekDay) {\n          businessHours.get(weekDay.enum)!.push({\n            id,\n            openAt: getTodayTime(openAt),\n            closeAt: getTodayTime(closeAt),\n            weekDay: weekDay.enum,\n          })\n        }\n      })\n      return () => {\n        businessHours.forEach(weekDayHours => {\n          weekDayHours.clear()\n        })\n      }\n    }, [loading, settings.branchId])\n\n    const hourIdCounter = React.useRef(0)\n\n    const onAdd = (weekDay: WeekDayEnum) => () => {\n      businessHours.get(weekDay)!.push({\n        weekDay,\n        id: `L${hourIdCounter.current++}`,\n        openAt: DFP.startOfDay(new Date()),\n        closeAt: DFP.endOfDay(new Date()),\n      })\n    }\n\n    const onRemove = (weekDay: WeekDayEnum) => (hourId: ID) => {\n      const hours = businessHours.get(weekDay)!\n      const idx = hours.findIndex(RM.propEq('id', hourId))\n      if (idx >= 0) {\n        hours.splice(idx, 1)\n      }\n    }\n\n    const { enqueueSuccess } = useSnackBar()\n\n    const onSubmit = React.useCallback(async () => {\n      const hours: InputBusinessHourCreate[] = []\n      businessHours.forEach((weekDayHours, weekDay) => {\n        hours.push(\n          ...weekDayHours.map(hour => ({\n            openAt: formatTime(hour.openAt),\n            closeAt: formatTime(hour.closeAt),\n            weekDay,\n          })),\n        )\n      })\n      const result = await submitBusinessHours({\n        branchId: settings.branchId,\n        hours,\n      })\n      if (result) {\n        enqueueSuccess(i18n.t`Regular business hours has been updated`)\n      }\n    }, [])\n\n    if (loading || businessHours.size === 0) {\n      return <Loading />\n    }\n\n    return (\n      <div>\n        {data.weekDays.map(weekday => (\n          <BusinessHoursWeekday\n            key={weekday.enum}\n            weekday={weekday}\n            hours={businessHours.get(weekday.enum)!}\n            onAdd={onAdd(weekday.enum)}\n            onRemove={onRemove(weekday.enum)}\n          />\n        ))}\n        <Sizer width={20}>\n          <MarginBox margin=\"1rem\">\n            <TouchButton\n              text={i18n.t`Save regular hours`}\n              color={Colors.green}\n              onClick={onSubmit}\n            />\n          </MarginBox>\n        </Sizer>\n      </div>\n    )\n  })\n","import { TimePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { InputTime } from './InputTime'\n\ninterface IProps extends Omit<TimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputTime: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <Field\n      field={field}\n      render={fieldApi => (\n        <InputTime\n          value={fieldApi.value}\n          onChange={value => fieldApi.setValue(value)}\n          onOpen={() => fieldApi.setTouched(true)}\n          {...pickerProps}\n        />\n      )}\n    />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTime } from './FormInputTime'\n\ninterface IFormInputTimeSpanProps {\n  fieldFrom: FieldType\n  fieldTo: FieldType\n}\n\nconst InlineWrap = styled.div`\n  width: 5rem;\n  display: inline-block;\n`\n\nexport const FormInputTimeSpan: React.FC<IFormInputTimeSpanProps> = ({\n  fieldFrom,\n  fieldTo,\n}) => (\n  <>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldFrom}\n        label={<Trans id=\"input.timespan.from\">from</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n    <InlineWrap>\n      <FormInputTime\n        field={fieldTo}\n        label={<Trans id=\"input.timespan.to\">to</Trans>}\n        fullWidth={false}\n      />\n    </InlineWrap>\n  </>\n)\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { useSettings } from '../../../hooks/useSettings'\nimport { i18n } from '../../../i18n'\nimport { ESpecificHourMode } from '../models/BusinessHoursModel'\n\nconst labels = {\n  [ESpecificHourMode.TIMESPAN]: i18nMark('Open between'),\n  [ESpecificHourMode.FULLDAY]: i18nMark('Closed'),\n}\n\nexport const SpecificModeSelector = React.memo(() => {\n  const { businessHours } = useSettings()\n  return (\n    <SelectControlFlat<ESpecificHourMode>\n      items={[ESpecificHourMode.TIMESPAN, ESpecificHourMode.FULLDAY]}\n      selectedItem={businessHours.specificMode as ESpecificHourMode}\n      formatItem={mode => i18n._(labels[mode])}\n      onSingleSelection={(mode: ESpecificHourMode) =>\n        businessHours.changeSpecificMode(mode)\n      }\n    />\n  )\n})\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useSettings() {\n  const { settings } = useRoot()\n  return settings\n}\n","import { Trans } from '@lingui/macro'\nimport { setHours, setMinutes } from 'date-fns'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { FormInputTimeSpan } from '../../../atoms/FormInputTimeSpan'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { fullDateFormat } from '../../../helpers/formats'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport {\n  ESpecificHourMode,\n  ISpecificFormData,\n} from '../models/BusinessHoursModel'\nimport { SpecificModeSelector } from '../molecules/SpecificModeSelector'\n\nconst DateContainer = styled.div`\n  display: inline-block;\n  width: 13rem;\n  margin-left: 1rem;\n  margin-top: 2rem;\n`\n\nconst FormContainer = styled.div`\n  display: inline-block;\n  width: 16rem;\n  min-height: 6rem;\n  margin: 0rem 0 0 1rem;\n  vertical-align: top;\n`\n\nexport const SpecificBusinessHourForm: React.FC = props => {\n  const {\n    settings: { businessHours },\n  } = useRoot()\n  return (\n    <Form\n      onSubmit={businessHours.submitSpecificHour}\n      defaultValues={getDefaultValues()}\n    >\n      <DateContainer>\n        <FormInputDate\n          field=\"date\"\n          format={fullDateFormat}\n          minDate={new Date()}\n          fullWidth={true}\n          label={<Trans>Date</Trans>}\n        />\n      </DateContainer>\n\n      <FormContainer>\n        <SpecificModeSelector />\n        <Observer>\n          {() =>\n            businessHours.specificMode === ESpecificHourMode.TIMESPAN ? (\n              <FormInputTimeSpan fieldFrom=\"openAt\" fieldTo=\"closeAt\" />\n            ) : (\n              <Sizer width={13}>\n                <FormInputTextBox\n                  field=\"note\"\n                  inputFullWidth={true}\n                  placeholder={i18n.t`Closing reason`}\n                />\n              </Sizer>\n            )\n          }\n        </Observer>\n      </FormContainer>\n\n      <FormSubmit width=\"9rem\">{i18n.t`Add`}</FormSubmit>\n    </Form>\n  )\n}\n\nfunction getDefaultValues(): Partial<ISpecificFormData> {\n  const now = new Date()\n  return {\n    date: now,\n    openAt: setHours(setMinutes(now, 0), 9),\n    closeAt: setHours(setMinutes(now, 0), 20),\n  }\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface ISpecificBusinessHourLineProps {\n  bsHour: GSpecificBusinessHour.Fragment\n  onDelete(): void\n}\n\nexport const SpecificBusinessHourLine: React.FC<\n  ISpecificBusinessHourLineProps\n> = ({ bsHour, onDelete }) => (\n  <FlexRow>\n    <FlexColumn fixedWidth={true}>\n      <CanMutate mutationName=\"destroyBusinessHour\">\n        <TouchButtonDelete\n          onDelete={onDelete}\n          confirmText={`${i18n.t`Really remove specific business hour ${\n            bsHour.specificDateLocalized\n          }?`}`}\n        />\n      </CanMutate>\n    </FlexColumn>\n    <FlexColumn fixedWidth={true} width=\"14rem\">\n      {bsHour.specificDateLocalized}\n    </FlexColumn>\n    <FlexColumn widthGrowIndex={1}>{formatLineTime(bsHour)}</FlexColumn>\n  </FlexRow>\n)\n\nfunction formatLineTime(bsHour: GSpecificBusinessHour.Fragment) {\n  if (bsHour.closed) {\n    return bsHour.closedNote\n  }\n  return `${bsHour.openAt} - ${bsHour.closeAt}`\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GSpecificBusinessHour } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { SpecificBusinessHourLine } from '../molecules/SpecificBusinessHourLine'\nimport { QuerySpecificBusinessHours } from './SpecificBusinessHours.graphql'\n\nconst sortByDate = RM.sort<GSpecificBusinessHour.Fragment>(\n  // @ts-ignore Fix typing\n  RM.ascend(RM.or(RM.prop('specificDate'), RM.not)),\n)\n\nexport const SpecificBusinessHours: React.FC = () => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QuerySpecificBusinessHours\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderFragment={({ businessHours }) =>\n        sortByDate(businessHours).map(bsHour => (\n          <SpecificBusinessHourLine\n            key={bsHour.id}\n            bsHour={bsHour}\n            onDelete={() =>\n              settings.businessHours.deleteSpecificHour(bsHour.id)\n            }\n          />\n        ))\n      }\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../../segments/settings/organisms/SettingsCompanyBranchPicker'\nimport { BusinessHoursForm } from '../organisms/BusinessHoursForm'\nimport { SpecificBusinessHourForm } from '../organisms/SpecificBusinessHourForm'\nimport { SpecificBusinessHours } from '../organisms/SpecificBusinessHours'\n\nexport const BusinessHoursPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Business hours`} useBackButton={true}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <CanQuery queryName=\"businessHours\">\n        <Headline>\n          <MarginBox margin=\"1rem 0\">\n            <Trans>Regular business hours</Trans>\n          </MarginBox>\n        </Headline>\n        <BusinessHoursForm />\n      </CanQuery>\n\n      <Headline>\n        <MarginBox margin=\"1rem 0\">\n          <Trans>Specific business hours</Trans>\n        </MarginBox>\n      </Headline>\n      <SpecificBusinessHours />\n\n      <CanMutate mutationName=\"addSpecialBusinessHour\">\n        <Headline>\n          <MarginBox margin=\"1rem 0\">\n            <Trans>Add specific business hour</Trans>\n          </MarginBox>\n        </Headline>\n        <SpecificBusinessHourForm />\n      </CanMutate>\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BusinessHoursPage } from '../pages/BusinessHoursPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const BusinessHoursRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute exact={true} path={match.path} component={BusinessHoursPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const BusinessHoursButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Business hours`}\n    iconName=\"av_timer\"\n    color={Colors.red}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuCategoryButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Categories`}\n    iconName=\"folder\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuRecipeButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Recipes`}\n    iconName=\"insert_drive_file\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Stock overview`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const MenuStockDepositButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Stock deposit`}\n    iconName=\"open_in_browser\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const UserMenuButton: React.FC = () => (\n  <TouchButton\n    text={i18n.t`User`}\n    iconName=\"person\"\n    color={Colors.greyMiddle}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IZonesMenuButtonProps {}\n\nexport const ZonesMenuButton: React.FC<IZonesMenuButtonProps> = props => (\n  <TouchButton\n    text={i18n.t`Delivery zones`}\n    iconName=\"edit_location\"\n    color={Colors.violet}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { BusinessHoursButton } from '../organisms/BusinessHoursButton'\nimport { MenuCategoryButton } from '../organisms/MenuCategoryButton'\nimport { MenuRecipeButton } from '../organisms/MenuRecipeButton'\nimport { MenuStockButton } from '../organisms/MenuStockButton'\nimport { MenuStockDepositButton } from '../organisms/MenuStockDepositButton'\nimport { UserMenuButton } from '../organisms/UserMenuButton'\nimport { ZonesMenuButton } from '../organisms/ZonesMenuButton'\n\ninterface ISettingsPageProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'BusinessHours', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'Preferences', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'ZonesMenu', x: 4, y: 1, w: 2, h: 2 },\n    { i: 'UserMenu', x: 6, y: 1, w: 2, h: 2 },\n    { i: 'MenuRecipe', x: 0, y: 3, w: 2, h: 2 },\n    { i: 'MenuCategory', x: 2, y: 3, w: 2, h: 2 },\n    { i: 'MenuStock', x: 4, y: 3, w: 2, h: 2 },\n    { i: 'MenuStockDeposit', x: 6, y: 3, w: 2, h: 2 },\n  ]\n}\n\nexport const SettingsPage: React.FC<ISettingsPageProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"BusinessHours\"\n      route=\"/settings/businesshours\"\n      component={BusinessHoursButton}\n      canQuery=\"businessHours\"\n    />\n    {/* <PageLayoutItem\n      key=\"Preferences\"\n      route=\"/settings/preferences\"\n      component={PreferencesButton}\n    /> */}\n    <PageLayoutItem\n      key=\"MenuRecipe\"\n      route=\"/settings/menu/recipe\"\n      component={MenuRecipeButton}\n      canQuery=\"recipes\"\n    />\n    <PageLayoutItem\n      key=\"MenuCategory\"\n      route=\"/settings/menu/category\"\n      component={MenuCategoryButton}\n      canQuery=\"wareCategories\"\n    />\n    <PageLayoutItem\n      key=\"MenuStock\"\n      route=\"/settings/menu/stock\"\n      component={MenuStockButton}\n      canQuery=\"stockItems\"\n    />\n    <PageLayoutItem\n      key=\"MenuStockDeposit\"\n      route=\"/settings/menu/stock/deposit\"\n      component={MenuStockDepositButton}\n      canMutate=\"changeAmountStockItem\"\n    />\n    <PageLayoutItem\n      key=\"ZonesMenu\"\n      route=\"/settings/zones\"\n      component={ZonesMenuButton}\n      canQuery=\"zones\"\n    />\n    <PageLayoutItem\n      key=\"UserMenu\"\n      route=\"/settings/user\"\n      component={UserMenuButton}\n      canQuery=\"user\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { LazyRoute } from '../../../routes/LazyRoute'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesRoutes } from '../../branchpreferences/routes/BranchPreferencesRoutes'\nimport { BusinessHoursRoutes } from '../../businesshours/routes/BusinessHoursRoutes'\nimport { SettingsPage } from '../pages/SettingsPage'\n\nconst ZoneMenuRoutes = React.lazy(() =>\n  import('../../../segments/zones/routes/ZoneMenuRoutes'),\n)\n\nconst MenuRoutes = React.lazy(() =>\n  import('../../../segments/menu/routes/MenuRoutes'),\n)\n\nconst UserMenuPage = React.lazy(() => import('../pages/UserMenuPage'))\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const SettingsRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => {\n  return (\n    <>\n      <PageTitle.Route path={match.path} title={i18n.t`Settings`} />\n      <Switch>\n        <SecureRoute exact={true} path={match.path} component={SettingsPage} />\n        <LazyRoute path={`${match.path}/menu`} component={MenuRoutes} />\n        <LazyRoute path={`${match.path}/zones`} component={ZoneMenuRoutes} />\n        <LazyRoute path={`${match.path}/user`} component={UserMenuPage} />\n        <Route\n          path={`${match.path}/businesshours`}\n          component={BusinessHoursRoutes}\n        />\n        <Route\n          path={`${match.path}/preferences`}\n          component={BranchPreferencesRoutes}\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </>\n  )\n}\n\nexport default SettingsRoutes\n"],"sourceRoot":""}