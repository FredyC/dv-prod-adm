{"version":3,"sources":["atoms/FormInputTextBox.tsx","components/forms/FormInputCheckbox.tsx","../node_modules/@material-ui/icons/esm/Person.js","segments/branchpreferences/organism/SaveInvoicePreferencesButton.tsx","segments/branchpreferences/organism/InvoicePreferencesForm.tsx","segments/branchpreferences/organism/StoppageForm.tsx","segments/branchpreferences/pages/BranchPreferencesPage.tsx","segments/branchpreferences/routes/BranchPreferencesRoutes.tsx","../node_modules/@material-ui/icons/esm/AvTimer.js","../node_modules/@material-ui/icons/esm/EditLocation.js","../node_modules/@material-ui/icons/esm/InsertDriveFile.js","../node_modules/@material-ui/icons/esm/Folder.js","segments/dashboard/pages/SettingsDashboardPage.tsx","segments/settings/routes/SettingsRouting.tsx"],"names":["FormInputTextBox","React","forwardRef","inputRef","field","inputFullWidth","isRequired","validatioName","validationMessage","validate","props","value","isEmpty","fieldApi","onChange","ev","target","validity","valid","setTouched","setValue","invalid","Boolean","error","ref","FormCheckbox","fieldName","label","inputProps","children","useXField","formState","useXFormState","useObserver","type","id","name","checked","disabled","isSubmitting","htmlFor","createElement","d","SaveInvoicePreferencesButton","TouchButton","text","i18n","color","Colors","green","SaveButtonContainer","styled","div","InvoicePreferencesForm","placeholder","StoppageForm","BranchPreferencesPage","FullPageLayout","pageTitle","Card","SettingsCompanyBranchPicker","Headline","BranchPreferencesRoutes","SecureRoute","exact","path","ROUTE_SETTINGS_PREFS","component","NotFoundPage","createSvgIcon","SettingsPage","DashboardPage","PageTitle","Route","ROUTE_SETTINGS","title","DashboardButton","row","column","canQuery","icon","AvTimer","red","route","ROUTE_SETTINGS_HOURS","EditLocation","violet","ROUTE_SETTINGS_ZONES","Person","greyMiddle","ROUTE_SETTINGS_USER","InsertDriveFile","turquoise","ROUTE_MENU_RECIPE","Folder","ROUTE_MENU_CATEGORY","Inbox","ROUTE_MENU_STOCK","BusinessHoursRouting","lazy","ZoneMenuRouting","MenuRouting","UserMenuPage","SettingsRouting","ROUTE_SETTINGS_MENU"],"mappings":"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","file":"static/js/192.088186b7.chunk.js","sourcesContent":["import React from 'react'\nimport { Field, FieldType, ValidationResult } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\nimport { FormInputStyled } from './FormInputStyled'\n\ninterface IProps extends React.InputHTMLAttributes<never> {\n  field: FieldType\n  defaultValue?: string\n  isRequired?: boolean\n  validatioName?: string\n  validationMessage?: string\n  inputFullWidth?: boolean\n  validate?(value: string): ValidationResult\n}\n\nexport type TFormInputTextBoxProps = IProps\n\nexport const FormInputTextBox = React.forwardRef<HTMLInputElement, IProps>(\n  (\n    {\n      field,\n      inputFullWidth = false,\n      isRequired,\n      validatioName,\n      validationMessage,\n      validate,\n      ...props\n    },\n    inputRef,\n  ) => (\n    <Field\n      field={field}\n      validate={\n        validate ||\n        (value => {\n          if (isRequired && isEmpty(value + '')) {\n            if (validationMessage) {\n              return validationMessage\n            }\n            return i18n.t`${validatioName} is required`\n          }\n          return null\n        })\n      }\n    >\n      {fieldApi => (\n        <FormInputStyled\n          value={!fieldApi.value && fieldApi.value !== 0 ? '' : fieldApi.value}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              fieldApi.setTouched(true)\n              fieldApi.setValue(ev.target.value)\n            }\n          }}\n          inputFullWidth={inputFullWidth}\n          invalid={Boolean(fieldApi.error)}\n          ref={inputRef}\n          {...props}\n        />\n      )}\n    </Field>\n  ),\n)\n","import { useXField, useXFormState, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { StyledCheckbox } from '../../atoms/StyledCheckbox'\n\ntype TProps = NoChildren &\n  Omit<React.InputHTMLAttributes<never>, 'name'> & {\n    fieldName: XFieldName\n    label?: string\n  }\n\nexport type FormInputCheckboxProps = TProps\n\nexport const FormCheckbox: React.FC<TProps> = ({\n  fieldName,\n  label,\n  children,\n  ...inputProps\n}) => {\n  const field = useXField<any>(fieldName)\n  const formState = useXFormState()\n  return useObserver(() => (\n    <StyledCheckbox>\n      <input\n        type=\"checkbox\"\n        id={field.name}\n        name={field.name}\n        checked={field.value === true}\n        onChange={() => field.setValue(!field.value)}\n        disabled={formState.isSubmitting}\n        {...inputProps}\n      />\n      {label && <label htmlFor={field.name}>{label}</label>}\n    </StyledCheckbox>\n  ))\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const SaveInvoicePreferencesButton: React.FC = props => (\n  <TouchButton text={i18n.t`Save invoice preferences`} color={Colors.green} />\n)\n","import React from 'react'\nimport { Form } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { SaveInvoicePreferencesButton } from './SaveInvoicePreferencesButton'\n\ninterface IInvoicePreferencesFormProps {}\n\nconst SaveButtonContainer = styled.div`\n  margin-top: 1rem;\n  width: 15rem;\n`\n\nexport const InvoicePreferencesForm: React.FC<\n  IInvoicePreferencesFormProps\n> = props => (\n  <Form>\n    <FormInputTextBox field=\"account\" placeholder=\"Název firmy\" />\n    <br />\n    <FormInputTextBox field=\"number\" placeholder=\"IČ\" />\n    <FormInputTextBox field=\"vatIdent\" placeholder=\"DIČ\" />\n\n    <SaveButtonContainer>\n      <SaveInvoicePreferencesButton />\n    </SaveButtonContainer>\n  </Form>\n)\n","import React from 'react'\n\nimport { FormCheckbox } from '../../../components/forms/FormInputCheckbox'\nimport { i18n } from '../../../i18n'\n\ninterface IStoppageFormProps {}\n\nexport const StoppageForm: React.FC<IStoppageFormProps> = props => (\n  <div>\n    <FormCheckbox\n      fieldName=\"onlyPersonalPickup\"\n      label={i18n.t`We are not delivering, only take away.`}\n    />\n    <br />\n    <FormCheckbox\n      fieldName=\"stoppage\"\n      label={i18n.t`Completely stop all orders.`}\n    />\n  </div>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { InvoicePreferencesForm } from '../organism/InvoicePreferencesForm'\nimport { StoppageForm } from '../organism/StoppageForm'\n\ninterface IPreferencesPageProps {}\n\nexport const BranchPreferencesPage: React.FC<IPreferencesPageProps> = props => (\n  <FullPageLayout pageTitle={i18n.t`Branch preferences`}>\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <Headline>\n        <Trans id=\"branch.preferences.stoppage\">Stoppage</Trans>\n      </Headline>\n      <StoppageForm />\n\n      <Headline>\n        <Trans>Change of invoice preferences</Trans>\n      </Headline>\n      <InvoicePreferencesForm />\n    </Card>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ROUTE_SETTINGS_PREFS } from '../../settings/settings.routes'\nimport { BranchPreferencesPage } from '../pages/BranchPreferencesPage'\n\ninterface IProps {}\n\nexport const BranchPreferencesRoutes: React.FC<IProps> = () => (\n  <Switch>\n    <SecureRoute\n      exact\n      path={ROUTE_SETTINGS_PREFS}\n      component={BranchPreferencesPage}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M11 17c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm0-14v4h2V5.08c3.39.49 6 3.39 6 6.92 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-1.68.59-3.22 1.58-4.42L12 13l1.41-1.41-6.8-6.8v.02C4.42 6.45 3 9.05 3 12c0 4.97 4.02 9 9 9 4.97 0 9-4.03 9-9s-4.03-9-9-9h-1zm7 9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zM6 12c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1z\"\n}), 'AvTimer');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C8.14 2 5 5.14 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.86-3.14-7-7-7zm-1.56 10H9v-1.44l3.35-3.34 1.43 1.43L10.44 12zm4.45-4.45l-.7.7-1.44-1.44.7-.7c.15-.15.39-.15.54 0l.9.9c.15.15.15.39 0 .54z\"\n}), 'EditLocation');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z\"\n}), 'InsertDriveFile');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"\n}), 'Folder');","import {\n  AvTimer,\n  EditLocation,\n  Folder,\n  Inbox,\n  InsertDriveFile,\n  Person,\n} from '@material-ui/icons'\nimport React from 'react'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\nimport {\n  ROUTE_MENU_CATEGORY,\n  ROUTE_MENU_RECIPE,\n  ROUTE_MENU_STOCK,\n} from '../../menu/menu.routes'\nimport {\n  ROUTE_SETTINGS,\n  ROUTE_SETTINGS_HOURS,\n  ROUTE_SETTINGS_USER,\n  ROUTE_SETTINGS_ZONES,\n} from '../../settings/settings.routes'\nimport { DashboardButton } from '../atoms/DashboardButton'\nimport { DashboardPage } from '../molecules/DashboardPage'\n\nexport const SettingsPage: React.FC = () => (\n  <DashboardPage>\n    <PageTitle.Route path={ROUTE_SETTINGS} title={i18n.t`Settings`} />\n    <DashboardButton\n      row={1}\n      column={1}\n      canQuery=\"businessHours\"\n      text={i18n.t`Business hours`}\n      icon={AvTimer}\n      color={Colors.red}\n      route={ROUTE_SETTINGS_HOURS}\n    />\n    <DashboardButton\n      row={1}\n      column={2}\n      canQuery=\"zones\"\n      text={i18n.t`Delivery zones`}\n      icon={EditLocation}\n      color={Colors.violet}\n      route={ROUTE_SETTINGS_ZONES}\n    />\n    <DashboardButton\n      row={1}\n      column={3}\n      canQuery=\"user\"\n      text={i18n.t`User`}\n      icon={Person}\n      color={Colors.greyMiddle}\n      route={ROUTE_SETTINGS_USER}\n    />\n    <DashboardButton\n      row={2}\n      column={1}\n      canQuery=\"recipes\"\n      text={i18n.t`Recipes`}\n      icon={InsertDriveFile}\n      color={Colors.turquoise}\n      route={ROUTE_MENU_RECIPE}\n    />\n    <DashboardButton\n      row={2}\n      column={2}\n      canQuery=\"wareCategories\"\n      text={i18n.t`Categories`}\n      icon={Folder}\n      color={Colors.turquoise}\n      route={ROUTE_MENU_CATEGORY}\n    />\n    <DashboardButton\n      row={2}\n      column={3}\n      canQuery=\"stockItems\"\n      text={i18n.t`Stock overview`}\n      icon={Inbox}\n      color={Colors.turquoise}\n      route={ROUTE_MENU_STOCK}\n    />\n  </DashboardPage>\n)\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { BranchPreferencesRoutes } from '../../branchpreferences/routes/BranchPreferencesRoutes'\nimport { SettingsPage } from '../../dashboard/pages/SettingsDashboardPage'\nimport {\n  ROUTE_SETTINGS,\n  ROUTE_SETTINGS_HOURS,\n  ROUTE_SETTINGS_MENU,\n  ROUTE_SETTINGS_PREFS,\n  ROUTE_SETTINGS_USER,\n  ROUTE_SETTINGS_ZONES,\n} from '../settings.routes'\n\nconst BusinessHoursRouting = React.lazy(() =>\n  import('../../businesshours/routes/BusinessHoursRouting'),\n)\n\nconst ZoneMenuRouting = React.lazy(() =>\n  import('../../../segments/zones/routes/ZoneMenuRouting'),\n)\n\nconst MenuRouting = React.lazy(() =>\n  import('../../../segments/menu/routes/MenuRouting'),\n)\n\nconst UserMenuPage = React.lazy(() => import('../pages/UserMenuPage'))\n\nexport const SettingsRouting: React.FC = () => {\n  return (\n    <Switch>\n      <SecureRoute path={ROUTE_SETTINGS} exact component={SettingsPage} />\n      <SecureRoute path={ROUTE_SETTINGS_MENU} component={MenuRouting} />\n      <SecureRoute path={ROUTE_SETTINGS_ZONES} component={ZoneMenuRouting} />\n      <SecureRoute path={ROUTE_SETTINGS_USER} component={UserMenuPage} />\n      <SecureRoute\n        path={ROUTE_SETTINGS_HOURS}\n        component={BusinessHoursRouting}\n      />\n      <SecureRoute\n        path={ROUTE_SETTINGS_PREFS}\n        component={BranchPreferencesRoutes}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n}\n\nexport default SettingsRouting\n"],"sourceRoot":""}