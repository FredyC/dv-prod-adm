{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/Headline.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/HorizontalSeparator.tsx","atoms/Price.tsx","atoms/SelectControlFlat.tsx","atoms/FlexColumn.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","hooks/useExecutableQuery.ts","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","atoms/DeliveryMinutes.tsx","molecules/DeliveryTimeDialog.tsx","atoms/RelativeLink.tsx","atoms/FormInputDateTime.tsx","atoms/FlexAutoHeight.tsx","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","atoms/ObserverWhen.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderWarePriceLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderIdLine.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/atoms/OrderTimeLabel.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareLine.tsx","segments/order/molecules/OrderWareList.tsx","segments/order/organisms/OrderDetail.graphql.ts","segments/order/molecules/HamburgerMenu.tsx","molecules/ConfirmButton.tsx","segments/order/molecules/OrderCancelButton.tsx","segments/order/molecules/OrderDeliveryToPickup.tsx","segments/order/molecules/OrderStateButton.tsx","hooks/useAccessGuard.ts","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/atoms/OrderBox.tsx","segments/overview/molecules/ClosureHistoryFilter.tsx","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/pages/ClosureHistoryPage.tsx","atoms/MonospaceOutput.tsx","segments/overview/molecules/ClosureStatisticsContent.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/pages/ClosurePage.tsx","segments/overview/hooks/useStatsFilter.tsx","segments/overview/molecules/DailyStatisticsContent.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/molecules/StatisticsFilter.tsx","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/molecules/OrdersStatisticsList.tsx","segments/overview/molecules/OrdersStatisticsSummary.tsx","segments/overview/molecules/StatisticsDriversFilter.tsx","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/routes/OverviewRoutes.tsx"],"names":["IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","Headline","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","NoAccess","CanQuery","queryName","canQuery","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","PageLayoutFullHeightItem","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_3__","id","FlexRowSingle","_ref$justify","justify","HorizontalSeparatorStyled","HorizontalSeparator","_ref$visible","visible","Price","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","className","formatPrice","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","RM","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_7___default","hasSelection","onClick","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","map","idx","Component","defaultProps","prop","getItemValue","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","react","placeholder","i18n","_","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","FormSubmit","react_form__WEBPACK_IMPORTED_MODULE_2__","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","isEmpty","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","utils","MomentUtils","cancelIconPadding","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","red","orange","_templateObject5","bigNumberStyle","_templateObject6","dashStyle","_templateObject7","clickable","_templateObject8","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","useExecutableQuery","query","client","useApolloClient","onError","useApolloDefender","result","useObservable","loading","error","wasExecuted","hasAnyError","Boolean","useReaction","makeError","err","variables","ApolloOperationError","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","execute","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","queryResult","wrap","_context","prev","next","sent","runInAction","ApolloError","graphQLErrors","t0","abrupt","stop","_x","reset","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","_templateObject9","Radiuses","Card","ToPickupLabel","_templateObject10","violet","OrderTicker","order","showBranch","companyBranch","_atoms_DeliveryTimeBadge__WEBPACK_IMPORTED_MODULE_11__","Date","orderStateCategory","OrderStateCategoryEnum","Cancel","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","formatAddress","address","_atoms_CustomerIdentity__WEBPACK_IMPORTED_MODULE_10__","_atoms_Price__WEBPACK_IMPORTED_MODULE_6__","totalSum","currency","code","isPaidWithCard","CurrentNoteStyled","span","PreviousNoteStyled","NoteLine","note","previousNote","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_3__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_4__","_i18n__WEBPACK_IMPORTED_MODULE_5__","deliveryMinutes","pickupMinutes","MinutesContainer","MinutesItem","DeliveryMinutes","onMinuteClick","initialMinutes","_React$useState","useState","_React$useState2","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setSelected","getMinutesForDeliveryType","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_5__","yellow","type","DeliveryTimeDialog","onConfirm","onCancel","cancelText","refApi","_useState","_useState2","isOpen","setOpen","openDialog","closeDialog","current","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","open","onClose","_atoms_DeliveryMinutes__WEBPACK_IMPORTED_MODULE_4__","_TouchButton__WEBPACK_IMPORTED_MODULE_5__","RelativeLink","from","linkProps","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","FormInputDateTime","field","_ref$inline","inline","pickerProps","Picker","InlineDateTimePicker","DateTimePicker","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_6__","react_form__WEBPACK_IMPORTED_MODULE_4__","render","fieldApi","setValue","onOpen","setTouched","format","ampm","showTabs","maxDateMessage","minDateMessage","AutoHeight","FormInputDate","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_5__","react_form__WEBPACK_IMPORTED_MODULE_3__","okLabel","_i18n__WEBPACK_IMPORTED_MODULE_4__","cancelLabel","clearLabel","todayLabel","FlexRow","ObserverWhen","test","renderSuccess","renderFailure","ContactLines","phones","emails","renderContact","contact","description","isMail","href","replace","renderClickableLink","email","OrderCountLine","total","_lingui_react","values","OrderWareLineWrap","NameContainerStyled","OrderWarePriceLine","_ref$highlight","highlight","OrderCartTotalsContainer","OrderDetailTotals_templateObject","OrderDetailTotals","OrderWarePriceLine_OrderWarePriceLine","tip","transportFee","coverPrice","totalDiscount","OrderOriginLabel","OrderIdLine_templateObject","orderOrigin","OrderOriginEnum","DameJidlo","OrderIdLine","displayedId","OrderRuleLines","rules","join","OrderTimeLabel","OrderTimeLabel_templateObject","DelayedDeliveryTimeLabel","OrderStats_templateObject","DelayedOrderTimeLabel","OrderStats_templateObject2","OrderStats","stats","formatTimeWithoutTodayDate","driver","_order$driver$user","Timelapse","labelMap","_labelMap","defineProperty","NewOrders","i18nMark","Preparing","ReadyToDeliver","OnWay","Finished","OrderTimeLine","orderTiming","reject","createdAt","timing","OrderWareLine_templateObject","CodeContainerStyled","OrderWareLine_templateObject2","OrderWareLine_templateObject3","OrderWareLine","OrderWareLine_OrderWareLineWrap","OrderWareLine_NameContainerStyled","OrderWareLine_PriceContainerStyled","OrderWareList","orderWares","orderWare","OrderWareLine_OrderWareLine","recipe","nameLabel","sidedishes","sidedish","QueryOrderDetail","buildQuery","gql","OrderDetail_graphql_templateObject","FPriceFragmentDoc","FEmailFragmentDoc","FPhoneFragmentDoc","FOrderDriverFragmentDoc","FOrderTimingFragmentDoc","StyledHamburgerMenu","HamburgerMenu_templateObject","PopupMenu","HamburgerMenu_templateObject2","Small","Middle","HamburgerMenu","slicedToArray","isOpened","setIsOpened","Children","count","SizerButton","TouchButton","ConfirmButton","confirmNode","_ref$initialColor","initialColor","_ref$confirmColor","confirmColor","_ref$confirmDisableMs","confirmDisableMs","_ref$resetToInitialMs","resetToInitialMs","SECOND","needConfirm","setNeedConfirm","buttonRef","useRef","useEffect","timer","setTimeout","clearTimeout","OrderCancelButton","orderId","_useMCancelOrder","useMCancelOrder","cancelOrder","Sizer","ConfirmButton_ConfirmButton","OrderDeliveryToPickup","isDelivery","_useMOrderChangeToPic","useMOrderChangeToPickup","changeToPickup","stateLabels","_stateLabels","OrderStateEnum","Accepted","OrderStateButton","nextState","_useMOrderState","useMOrderState","updateOrderState","text","useAccessGuard","queries","mutations","every","DriverName","OrderDriverSelect_templateObject","backgroundColor","background","height","ButtonHeight","borderWidth","borderRadius","Button","valueContainer","singleValue","fontSize","OrderDriverSelect","drivers","selectedDriver","isLoading","onSelect","onClear","onReload","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","Icon","react_select_esm","DropdownIndicator","OrderStateDeliver","branchId","canRead","_len","_key","useCanQuery","deliverOrder","_useMSelectOrderDrive","useMSelectOrderDriver","selectDriver","_useMRemoveOrderDrive","useMRemoveOrderDriver","removeDriver","_useQOrderDrivers","useQOrderDrivers","skip","refetch","OrderDriverSelect_OrderDriverSelect","orderDriver","orderDriverId","driverId","OrderStateFlowContainerWrapper","OrderStateFlowContainer_templateObject","Control","OrderStateFlowContainer_templateObject2","OrderStateFlowContainer","child","OrderStateTimeNotification","_useMOrderTimeNotific","useMOrderTimeNotification","sendTimeNotification","Messenger","HamburgerMenuAtLeft","HamburgerMenu_HamburgerMenu","OrderStateNewOrder","OrderStateFlowContainer_OrderStateFlowContainer","OrderStateFlow_HamburgerMenuAtLeft","canCancel","OrderCancelButton_OrderCancelButton","OrderDeliveryToPickup_OrderDeliveryToPickup","OrderStateTimeNotification_OrderStateTimeNotification","OrderStateButton_OrderStateButton","OrderStateAcceptedOrder","canDeliver","OrderStateDeliver_OrderStateDeliver","OrderStateReadyToDeliverOrder","OrderStateOnWayOrder","OrderStateFinishedOrder","OrderStateFlow","_useQOrderState","useQOrderState","allowedCategories","isCancelable","stateProps","OrderStateFlow_OrderStateNewOrder","OrderStateFlow_OrderStateAcceptedOrder","OrderStateFlow_OrderStateReadyToDeliverOrder","OrderStateFlow_OrderStateOnWayOrder","OrderStateFlow_OrderStateFinishedOrder","OrderDetailContainerStyled","OrderDetail_templateObject","OrderDetail","fetchPolicy","OrderWareList_OrderWareList","OrderDetailTotals_OrderDetailTotals","OrderRuleLines_OrderRuleLines","allAppliedRules","OrderCountLine_OrderCountLine","customerOrdersCountCurrent","customerOrdersCountTotal","ContactLines_ContactLines","OrderIdLine_OrderIdLine","OrderTimeLine_OrderTimeLine","OrderStats_OrderStats","OrderStateFlow_OrderStateFlow","OrderBoxStyled","OrderBox_templateObject","OrderBox","toggleOrderDetail","isOrderDetailOpen","ObserverWhen_ObserverWhen","OrderDetail_OrderDetail","ClosureHistoryFilter","autoOk","context","createContext","ClosureHistoryLoader","statistics","_useExecutableQuery","QClosureHistoryDocument","es","onSubmit","formValues","closureBranch","dateFrom","formatDateISO","dateTo","defaultValues","subDays","Provider","ClosureHistoryTable","observer","_useClosureHistory","useContext","Loading","history","report","reportSequence","reportDatetime","ClosureCurrentButton","react_router_dom","ButtonToRight","ClosureStatisticsFilter","showCurrent","setClosureBranch","ClosureCurrentButton_ClosureCurrentButton","ClosureHistoryPage","ClosureHistoryLoader_ClosureHistoryLoader","FullPageLayout","pageTitle","useBackButton","backRoute","ClosureHistoryFilter_ClosureHistoryFilter","MonospaceOutputStyled","p","MonospaceOutput_templateObject","MonospaceOutput","RegExp","ClosureStatisticsContent","_ref$reportId","reportId","_useQClosureReport","useQClosureReport","showReport","MonospaceOutput_MonospaceOutput","plainData","lastReport","ClosureHistoryButton","ClosureSubmitButton","ClosureStatisticsControl_templateObject","ClosureStatisticsControl","enqueueSuccess","useSnackBar","useRouterContext","_useMFinancialReportC","useMFinancialReportCreate","createClosure","useCallback","asyncToGenerator","regenerator_default","ClosureSubmitButton_ClosureSubmitButton","ClosureStatisticsControl_ButtonToRight","ClosureHistoryButton_ClosureHistoryButton","ClosurePage","match","ClosureStatisticsControl_ClosureStatisticsControl","params","useStatsFilterCurrent","useStatsFilter","setFilter","executeFilter","toConsumableArray","branchesFilter","dateTimeFrom","isoDate","dateTimeTo","renderForm","updateFilter","useStatsFilter_context","StatsDisplay","plain","DailyStatisticsContent","_useQStatsDaily","useQStatsDaily","DailyStatisticsContent_StatsDisplay","daily","category","delivery","StatisticsBranchFilter","setBranchFilter","clearBranchFilter","StatisticsFilter","0","DailyStatisticsLoader","DailyStatisticsPage","DailyStatisticsLoader_DailyStatisticsLoader","StatisticsBranchFilter_StatisticsBranchFilter","StatisticsFilter_StatisticsFilter","DailyStatisticsContent_DailyStatisticsContent","OrdersStatisticsList","_useRoot","orderModel","orders","Map","loaderRef","measureCache","useMemo","CellMeasurerCache","defaultHeight","minHeight","_useQStatsOrdersCount","useQStatsOrdersCounts","countsData","countsLoading","clear","clearAll","resetLoadMoreRowsCache","JSON","stringify","executeList","QStatsOrdersListDocument","queryMoreOrders","startIndex","stopIndex","list","index","pagination","fromIndex","toIndex","shift","set","isRowLoaded","get","rowRenderer","_ref4","parent","dist_es","columnIndex","rowIndex","cache","_ref5","measure","o","_countsData$stats$cou","counts","totalCount","finished","cancelled","_ref6","rowCount","loadMoreRows","_ref7","onRowsRendered","registerChild","rowHeight","deferredMeasurementCache","StatPanel","OrdersStatisticsSummary_templateObject","StatLabel","h1","StatValue","OrdersStatisticsSummary","_useQStatsOrders","useQStatsOrders","finishedOrders","onlinePayments","finishedCount","cancelledCount","fees","orderStatisticsPlain","StatisticsDriversFilter","_useQAllDrivers","useQAllDrivers","setDriversFilter","intersection","option","formatFullName","OrdersStatisticsLoader","autoFilter","_useStatsFilter","OrdersStatisticsPage","setTodayOrdersFilter","OrdersStatisticsLoader_OrdersStatisticsLoader","FlexAutoHeight","OrdersStatisticsList_OrdersStatisticsList","PageLayout","layouts","i","x","y","w","h","showSoundControl","scrollPageTitle","ClosureButton","DailyStatisticsButton","OrdersStatisticsButton","OverviewPage","OverviewRoutes_OverviewRoutes","OverviewRoutes","PageTitle","react_router","SecureRoute","exact","path","NotFoundPage"],"mappings":"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","file":"static/js/173.ad033e01.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import {\n  ApolloOperationError,\n  useApolloClient,\n  useApolloDefender,\n} from '@speedlo/graphql'\nimport { useReaction } from '@speedlo/hooks'\nimport { ApolloError, QueryOptions } from 'apollo-client'\nimport { DocumentNode } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  error?: ApolloError\n  hasAnyError: boolean\n  wasExecuted: boolean\n}\n\nexport function useExecutableQuery<TData, TVariables>(\n  query: DocumentNode,\n  options: Partial<QueryOptions<TVariables>> = {},\n) {\n  const client = useApolloClient()\n  const { onError } = useApolloDefender()\n  const result: IQueryResult<TData> = useObservable({\n    data: null,\n    loading: false,\n    error: undefined,\n    wasExecuted: false,\n    get hasAnyError() {\n      return Boolean(result.error)\n    },\n  })\n  useReaction(\n    () => result.error,\n    error => {\n      if (error) {\n        onError(error)\n      }\n    },\n  )\n  const makeError = (err: ApolloError, variables: TVariables) => {\n    return new ApolloOperationError(err, query, { ...options, variables })\n  }\n  const execute = async (variables: TVariables) => {\n    result.loading = true\n    try {\n      const queryResult = await client.query<TData, TVariables>({\n        ...options,\n        query,\n        variables,\n      })\n      runInAction(() => {\n        result.wasExecuted = true\n        result.data = queryResult.data\n        result.loading = false\n        if (queryResult.errors && queryResult.errors.length > 0) {\n          result.error = makeError(\n            new ApolloError({ graphQLErrors: queryResult.errors }),\n            variables,\n          )\n        }\n      })\n    } catch (err) {\n      runInAction(() => {\n        result.error = makeError(err, variables)\n        result.loading = false\n      })\n    }\n    return result\n  }\n  const reset = () => {\n    runInAction(() => {\n      result.wasExecuted = false\n      result.data = null\n      result.error = undefined\n      result.loading = false\n    })\n  }\n  return { result, execute, reset }\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  DeliveryTypeEnum,\n  FOrderStateCategoryFragment,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { GOrderListTicker } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & FOrderStateCategoryFragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={\n              order.orderStateCategory === OrderStateCategoryEnum.Cancel\n            }\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          <Price\n            price={order.totalSum.value}\n            currencyCode={order.totalSum.currency.code}\n          />\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  initialMinutes?: number\n  deliveryType: DeliveryTypeEnum\n  onMinuteClick(minute: number): void\n}\n\nconst deliveryMinutes = [20, 30, 45, 60, 75, 90, 105, 120]\nconst pickupMinutes = [10, 20, 30, 45, 60, 75, 90]\n\nconst MinutesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst MinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport const DeliveryMinutes: React.FC<IProps> = ({\n  deliveryType,\n  onMinuteClick,\n  initialMinutes,\n}) => {\n  const [selected, setSelected] = React.useState(initialMinutes)\n  const options = getMinutesForDeliveryType(deliveryType)\n  return (\n    <MinutesContainer>\n      {options.map(minutes => (\n        <MinutesItem key={minutes}>\n          <TouchButton\n            onClick={() => {\n              setSelected(minutes)\n              onMinuteClick(minutes)\n            }}\n            color={selected === minutes ? Colors.yellow : Colors.green}\n          >\n            {minutes}\n          </TouchButton>\n        </MinutesItem>\n      ))}\n    </MinutesContainer>\n  )\n}\n\nexport function getMinutesForDeliveryType(type: DeliveryTypeEnum) {\n  return type === DeliveryTypeEnum.Pickup ? pickupMinutes : deliveryMinutes\n}\n","import { Trans } from '@lingui/macro'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport React, { MutableRefObject, useState } from 'react'\n\nimport { DeliveryMinutes } from '../atoms/DeliveryMinutes'\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  title: string\n  deliveryType: DeliveryTypeEnum\n  cancelText?: string\n  onConfirm(minutes: number): void\n  onCancel?(): void\n  refApi?: MutableRefObject<Maybe<IDeliveryTimeDialogApi>>\n  children?(props: IDeliveryTimeDialogApi): React.ReactElement<{}>\n}\n\nexport interface IDeliveryTimeDialogApi {\n  openDialog(): void\n  closeDialog(): void\n}\n\nexport const DeliveryTimeDialog: React.FC<IProps> = ({\n  title,\n  deliveryType,\n  onConfirm,\n  onCancel,\n  children,\n  cancelText,\n  refApi,\n}) => {\n  const [isOpen, setOpen] = useState(false)\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  if (refApi) {\n    refApi.current = { openDialog, closeDialog }\n  }\n\n  return (\n    <>\n      {children && children({ openDialog, closeDialog })}\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DeliveryMinutes\n            deliveryType={deliveryType}\n            onMinuteClick={minutes => {\n              closeDialog()\n              onConfirm(minutes)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <TouchButton\n            onClick={() => {\n              closeDialog()\n              if (onCancel) {\n                onCancel()\n              }\n            }}\n          >\n            {cancelText ? cancelText : <Trans>Cancel</Trans>}\n          </TouchButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import {\n  DateTimePicker,\n  DateTimePickerProps,\n  InlineDateTimePicker,\n} from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DateTimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n  inline?: boolean\n}\n\nexport const FormInputDateTime: React.FC<IProps> = ({\n  field,\n  inline = true,\n  ...pickerProps\n}) => {\n  const Picker = inline ? InlineDateTimePicker : DateTimePicker\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi =>\n          React.createElement(Picker, {\n            value: fieldApi.value,\n            onChange: value => fieldApi.setValue(value),\n            onOpen: () => fieldApi.setTouched(true),\n            format: 'lll',\n            ampm: false,\n            showTabs: false,\n            maxDateMessage: i18n.t`Date is too much in the future`,\n            minDateMessage: i18n.t`Date is too much in the past`,\n            ...pickerProps,\n          })\n        }\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nexport const AutoHeight = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import { DatePickerProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineDatePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"ll\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            todayLabel={i18n.t`Today`}\n            maxDateMessage={i18n.t`Date is too much in the future`}\n            minDateMessage={i18n.t`Date is too much in the past`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\ninterface IObserverWhenProps {\n  test(): boolean\n  renderSuccess(): ReactNode\n  renderFailure?(): ReactNode\n}\n\nexport const ObserverWhen: React.FC<IObserverWhenProps> = ({\n  test,\n  renderSuccess,\n  renderFailure,\n}) =>\n  useObserver(\n    () => (test() ? renderSuccess() : renderFailure ? renderFailure() : null),\n  )\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { FEmailFragment, FPhoneFragment } from '../../../graph/generated'\n\ninterface IContactLinesProps {\n  phones: ReadonlyArray<FPhoneFragment>\n  emails: ReadonlyArray<FEmailFragment>\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (FPhoneFragment | FEmailFragment)\n\nexport const ContactLines: React.FC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import { Plural, SelectOrdinal, Trans } from '@lingui/react'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.FC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  label: string\n  price: number\n  highlight?: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\n\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWarePriceLine: React.FC<IProps> = ({\n  label,\n  price,\n  highlight = false,\n}) => (\n  <OrderWareLineWrap>\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      {highlight ? (\n        <b>\n          <Price price={price} />\n        </b>\n      ) : (\n        <Price price={price} />\n      )}\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { OrderWarePriceLine } from './OrderWarePriceLine'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nconst OrderCartTotalsContainer = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.FC<IProps> = ({ order }) => (\n  <OrderCartTotalsContainer>\n    <OrderWarePriceLine label={i18n.t`Tips`} price={order.tip.value} />\n    <OrderWarePriceLine\n      label={i18n.t`Transport fee`}\n      price={order.transportFee.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Covers price`}\n      price={order.coverPrice.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Discount total`}\n      price={order.totalDiscount.value * -1}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Total price`}\n      price={order.totalSum.value}\n      highlight={true}\n    />\n  </OrderCartTotalsContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  GOrderDetailOrderOrigin,\n  OrderOriginEnum,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  displayedId: string\n  orderOrigin: GOrderDetailOrderOrigin\n}\n\nconst orderColorAccordingOrigin = ({ orderOrigin }: IProps) => {\n  switch (orderOrigin.enum) {\n    case OrderOriginEnum.DameJidlo:\n      return Colors.orange\n    default:\n      return Colors.greyLight\n  }\n}\n\nconst OrderOriginLabel = styled.div`\n  display: inline-block;\n  background: ${orderColorAccordingOrigin};\n  border-radius: 0.7rem;\n  margin: 0 0 0 1rem;\n  padding: 0.1rem 0.8rem;\n`\n\nexport const OrderIdLine: React.FC<IProps> = ({ displayedId, orderOrigin }) => (\n  <IconLine icon=\"format_list_numbered\" labelMargin=\"0\">\n    {displayedId}\n    <OrderOriginLabel orderOrigin={orderOrigin} displayedId={displayedId}>\n      {orderOrigin.code}\n    </OrderOriginLabel>\n  </IconLine>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: ReadonlyArray<string>\n}\n\nexport const OrderRuleLines: React.FC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import styled from 'styled-components'\n\nimport { Colors } from '../../../styling'\n\nexport const OrderTimeLabel = styled.div`\n  margin-left: 1rem;\n  display: inline-block;\n  color: ${Colors.greyMiddle};\n`\n","import { Trans } from '@lingui/macro'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GOrderDetailOrder } from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  order: GOrderDetailOrder\n}\n\nconst DelayedDeliveryTimeLabel = styled.span`\n  font-weight: bold;\n  color: ${Colors.orange};\n`\nconst DelayedOrderTimeLabel = styled(OrderTimeLabel)`\n  color: ${Colors.orange};\n`\n\nexport const OrderStats: React.FC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.delayedDeliveryTime) {\n    stats.push(\n      <div key=\"delayedDeliveryTime\">\n        <DelayedDeliveryTimeLabel>\n          {formatTimeWithoutTodayDate(order.delayedDeliveryTime)}\n        </DelayedDeliveryTimeLabel>\n        <DelayedOrderTimeLabel>\n          <Trans>Deliver at time</Trans>\n        </DelayedOrderTimeLabel>\n      </div>,\n    )\n  } else if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <OrderTimeLabel>\n          <Trans>Deliver on time</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <OrderTimeLabel>\n          <Trans>Driver</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  FOrderTimingOrderTiming,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  orderTiming: ReadonlyArray<FOrderTimingOrderTiming>\n}\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NewOrders]: i18nMark('Created'),\n  [OrderStateCategoryEnum.Preparing]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.OnWay]: i18nMark('On way'),\n  [OrderStateCategoryEnum.Finished]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.FC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <OrderTimeLabel>\n          {i18n._(labelMap[timing.orderStateCategory])}\n        </OrderTimeLabel>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.black};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.FC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React, { Fragment } from 'react'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: ReadonlyArray<GOrderDetail.Items>\n}\n\nexport const OrderWareList: React.FC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: GOrderDetail.Items) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FEmailFragmentDoc,\n  FOrderDriverFragmentDoc,\n  FOrderTimingFragmentDoc,\n  FPhoneFragmentDoc,\n  FPriceFragmentDoc,\n} from '../../../graph/generated'\nimport { GOrderDetail } from '../../../graph/types'\n\nexport const QueryOrderDetail = buildQuery<\n  GOrderDetail.Query,\n  GOrderDetail.Variables\n>(gql`\n  query GOrderDetail($id: ID!) {\n    order(id: $id) {\n      id\n      createdAt\n      deliverAt\n      delayedDeliveryTime\n      companyBranch {\n        id\n      }\n      customer {\n        emails {\n          ...FEmail\n        }\n        phones {\n          ...FPhone\n        }\n      }\n      customerOrdersCountCurrent\n      customerOrdersCountTotal\n      note\n      previousNote\n      allAppliedRules\n      items {\n        ...GOrderDetailWare\n        sidedishes: sideDishes {\n          ...GOrderDetailWare\n        }\n      }\n      totalSum {\n        ...FPrice\n      }\n      transportFee {\n        ...FPrice\n      }\n      coverPrice {\n        ...FPrice\n      }\n      totalDiscount {\n        ...FPrice\n      }\n      orderOrigin {\n        code\n        enum\n      }\n      tip {\n        ...FPrice\n      }\n      ...FOrderTiming\n      ...FOrderDriver\n    }\n  }\n\n  fragment GOrderDetailWare on OrderRecipe {\n    id\n    recipe {\n      id\n      code\n      nameLabel\n    }\n    price {\n      ...FPrice\n    }\n  }\n  ${FPriceFragmentDoc}\n  ${FEmailFragmentDoc}\n  ${FPhoneFragmentDoc}\n  ${FOrderDriverFragmentDoc}\n  ${FOrderTimingFragmentDoc}\n`)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst StyledHamburgerMenu = styled.div`\n  position: relative;\n`\n\nconst PopupMenu = styled.div`\n  position: absolute;\n  bottom: 4rem;\n  left: 0;\n  background: ${Colors.white};\n  padding: ${Spacing.Small};\n  border: solid 1px ${Colors.greyLight};\n  border-radius: ${Radiuses.Card};\n  box-shadow: 2px 6px 21px -2px rgba(0, 0, 0, 0.75);\n  & div:not(:last-child) {\n    margin-bottom: ${Spacing.Middle};\n  }\n`\n\nexport const HamburgerMenu: React.FC<IProps> = ({ children }) => {\n  const [isOpened, setIsOpened] = React.useState(false)\n  return React.Children.count(children) ? (\n    <StyledHamburgerMenu>\n      <SizerButton>\n        <TouchButton\n          iconName=\"menu\"\n          disabled={children === null}\n          onClick={() => setIsOpened(!isOpened)}\n        />\n      </SizerButton>\n      {isOpened && <PopupMenu>{children}</PopupMenu>}\n    </StyledHamburgerMenu>\n  ) : null\n}\n","import { SECOND } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { Colors } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  confirmNode: ReactNode | string\n  initialColor?: Colors\n  confirmColor?: Colors\n  confirmDisableMs?: number\n  resetToInitialMs?: number\n  onConfirm(): void\n}\n\nexport const ConfirmButton: React.FC<IProps> = ({\n  confirmNode,\n  initialColor = Colors.greyMiddle,\n  confirmColor = Colors.red,\n  confirmDisableMs = 300,\n  resetToInitialMs = 3 * SECOND,\n  children,\n  onConfirm,\n}) => {\n  const [needConfirm, setNeedConfirm] = React.useState(false)\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const onClick = () => {\n    if (needConfirm === false) {\n      buttonRef.current!.disabled = true\n      setNeedConfirm(true)\n      setTimeout(() => {\n        if (buttonRef.current) {\n          buttonRef.current.disabled = false\n        }\n      }, confirmDisableMs)\n    } else {\n      onConfirm()\n    }\n  }\n\n  React.useEffect(\n    () => {\n      if (needConfirm) {\n        const timer = setTimeout(() => {\n          setNeedConfirm(false)\n        }, resetToInitialMs)\n        return () => {\n          clearTimeout(timer)\n        }\n      }\n      return undefined\n    },\n    [resetToInitialMs, needConfirm],\n  )\n\n  return (\n    <TouchButton\n      ref={buttonRef}\n      onClick={onClick}\n      color={needConfirm ? confirmColor : initialColor}\n    >\n      {needConfirm ? confirmNode : children}\n    </TouchButton>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Sizer } from '../../../atoms/Sizer'\nimport { useMCancelOrder } from '../../../graph/generated'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderCancelButton: React.FC<IProps> = ({ orderId }) => {\n  const [cancelOrder] = useMCancelOrder()\n\n  return (\n    <Sizer width={7.375}>\n      <ConfirmButton\n        confirmNode={<Trans>Really cancel?</Trans>}\n        onConfirm={() => {\n          cancelOrder({ orderId })\n        }}\n      >\n        <Trans>Cancel order</Trans>\n      </ConfirmButton>\n    </Sizer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { useMOrderChangeToPickup } from '../../../graph/generated'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderDeliveryToPickup: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [changeToPickup] = useMOrderChangeToPickup()\n  if (!isDelivery) {\n    return null\n  }\n  return (\n    <CanMutate mutationName=\"updateOrderDeliveryToPickup\">\n      <ConfirmButton\n        confirmNode={<Trans>Really change?</Trans>}\n        onConfirm={() => {\n          changeToPickup({ orderId })\n        }}\n      >\n        <Trans>Change to pickup</Trans>\n      </ConfirmButton>\n    </CanMutate>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n}\n\nconst stateLabels = {\n  [OrderStateEnum.Accepted]: i18nMark('Accept order'),\n  [OrderStateEnum.Finished]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.FC<IProps> = ({ orderId, nextState }) => {\n  const [updateOrderState] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        text={i18n._(stateLabels[nextState])}\n        width=\"7.375rem\"\n        onClick={() => {\n          updateOrderState({ orderId, state: nextState })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = FDriverFragment\n\ninterface IProps {\n  drivers: ReadonlyArray<TDriver>\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst DriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst backgroundColor = {\n  background: Colors.greyMiddle,\n}\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...backgroundColor,\n    ...textColor,\n    height: Spacing.ButtonHeight + Spacing.DefaultSizeUnit,\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    ...backgroundColor,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n}\n\nexport const OrderDriverSelect: React.FC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers as TDriver[]}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver => {\n      if (driver === null) {\n        onClear()\n      } else {\n        onSelect(driver as TDriver)\n      }\n    }}\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <DriverName>{`${driver.firstName} ${driver.lastName}`}</DriverName>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useMOrderState,\n  useMRemoveOrderDriver,\n  useMSelectOrderDriver,\n  useQOrderDrivers,\n} from '../../../graph/generated'\nimport { useCanQuery } from '../../../hooks/useAccessGuard'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n}\n\nexport const OrderStateDeliver: React.FC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n}) => {\n  const canRead = useCanQuery('drivers')\n\n  const [deliverOrder] = useMOrderState()\n  const [selectDriver] = useMSelectOrderDriver()\n  const [removeDriver] = useMRemoveOrderDriver()\n\n  const { data, loading, refetch } = useQOrderDrivers(\n    {\n      branchId: [branchId],\n      orderId,\n    },\n    {\n      skip: !canRead,\n    },\n  )\n  return (\n    <CanMutate mutationName=\"createUserDeliveringOrder\">\n      <OrderDriverSelect\n        drivers={loading || !canRead ? [] : data.drivers}\n        selectedDriver={\n          loading ? null : data.order.driver && data.order.driver.user\n        }\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          const orderDriver = data.order.driver\n          if (orderDriver) {\n            removeDriver({ orderDriverId: orderDriver.id })\n          }\n        }}\n        onSelect={driver => {\n          selectDriver({ orderId, driverId: driver.id })\n          if (orderStateCategory !== OrderStateCategoryEnum.OnWay) {\n            deliverOrder({ orderId, state: OrderStateEnum.OnWay })\n          }\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst OrderStateFlowContainerWrapper = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n  height: ${Spacing.ButtonHeight + Spacing.DefaultSizeUnit};\n`\n\nconst Control = styled.div`\n  margin: 0 0 0 0.5rem;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.FC<IProps> = ({ children }) => (\n  <OrderStateFlowContainerWrapper>\n    {Children.map(children, (child, idx) => (\n      <Control key={idx}>{child}</Control>\n    ))}\n  </OrderStateFlowContainerWrapper>\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  DeliveryTypeEnum,\n  useMOrderTimeNotification,\n} from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { DeliveryTimeDialog } from '../../../molecules/DeliveryTimeDialog'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderStateTimeNotification: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [sendTimeNotification] = useMOrderTimeNotification()\n\n  return (\n    <CanMutate mutationName=\"orderNotifyCustomer\">\n      <DeliveryTimeDialog\n        title={\n          isDelivery\n            ? i18n.t`Send expected time of delivery to customer (in minutes)`\n            : i18n.t`Send expected time of pickup to customer (in minutes)`\n        }\n        deliveryType={\n          isDelivery ? DeliveryTypeEnum.Messenger : DeliveryTypeEnum.Pickup\n        }\n        onConfirm={minutes => {\n          sendTimeNotification({ orderId, minutes })\n        }}\n      >\n        {({ openDialog }) => (\n          <TouchButton iconName=\"schedule\" onClick={openDialog} />\n        )}\n      </DeliveryTimeDialog>\n    </CanMutate>\n  )\n}\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useQOrderState,\n} from '../../../graph/generated'\nimport { HamburgerMenu } from '../molecules/HamburgerMenu'\nimport { OrderCancelButton } from '../molecules/OrderCancelButton'\nimport { OrderDeliveryToPickup } from '../molecules/OrderDeliveryToPickup'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  orderStateCategory: OrderStateCategoryEnum\n  canCancel: boolean\n  canDeliver: boolean\n  isDelivery: boolean\n}\n\nconst HamburgerMenuAtLeft: React.FC = ({ children }) => {\n  return (\n    <CardDock position=\"BottomLeft\">\n      <HamburgerMenu>{children}</HamburgerMenu>\n    </CardDock>\n  )\n}\n\nconst OrderStateNewOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n      <OrderDeliveryToPickup {...props} />\n    </HamburgerMenuAtLeft>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Accepted} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n      <OrderDeliveryToPickup {...props} />\n    </HamburgerMenuAtLeft>\n\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateReadyToDeliverOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n    {props.isDelivery ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateFinishedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.FC<IProps> = ({ orderId, branchId }) => {\n  const { data, loading } = useQOrderState({\n    orderId,\n    branchId,\n  })\n\n  if (loading) {\n    return null\n  }\n\n  const {\n    order,\n    companyBranch: { allowedCategories },\n  } = data\n\n  const isDelivery =\n    order.deliveryType !== null &&\n    order.deliveryType.enum !== DeliveryTypeEnum.Pickup\n\n  const canDeliver =\n    isDelivery &&\n    (allowedCategories.includes(OrderStateCategoryEnum.OnWay) ||\n      allowedCategories.includes(OrderStateCategoryEnum.ReadyToDeliver))\n\n  const canCancel = order.isCancelable\n\n  const stateProps: IStateProps = {\n    orderId,\n    branchId,\n    orderStateCategory: order.orderStateCategory,\n    canCancel,\n    canDeliver,\n    isDelivery,\n  }\n  switch (order.orderStateCategory) {\n    case OrderStateCategoryEnum.NewOrders:\n      return <OrderStateNewOrder {...stateProps} />\n    case OrderStateCategoryEnum.Preparing:\n      return <OrderStateAcceptedOrder {...stateProps} />\n    case OrderStateCategoryEnum.ReadyToDeliver:\n      return <OrderStateReadyToDeliverOrder {...stateProps} />\n    case OrderStateCategoryEnum.OnWay:\n      return <OrderStateOnWayOrder {...stateProps} />\n    case OrderStateCategoryEnum.Finished:\n      return <OrderStateFinishedOrder {...stateProps} />\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderIdLine } from '../molecules/OrderIdLine'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { QueryOrderDetail } from './OrderDetail.graphql'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IOrderDetailProps {\n  orderId: string\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail: React.FC<IOrderDetailProps> = ({ orderId }) => (\n  <QueryOrderDetail\n    variables={{ id: orderId }}\n    fetchPolicy=\"cache-and-network\"\n    render={({ order }) => (\n      <>\n        <OrderDetailContainerStyled>\n          <HorizontalSeparator />\n          <OrderWareList orderWares={order.items} />\n          <OrderDetailTotals order={order} />\n          <OrderRuleLines rules={order.allAppliedRules}>\n            <OrderCountLine\n              current={order.customerOrdersCountCurrent}\n              total={order.customerOrdersCountTotal}\n            />\n          </OrderRuleLines>\n          <ContactLines\n            phones={order.customer.phones}\n            emails={order.customer.emails}\n          />\n          <NoteLine note={order.note} previousNote={order.previousNote} />\n          <HorizontalSeparator />\n          <OrderIdLine displayedId={order.id} orderOrigin={order.orderOrigin} />\n          <HorizontalSeparator />\n          <OrderTimeLine orderTiming={order.orderTiming} />\n          <OrderStats order={order} />\n        </OrderDetailContainerStyled>\n        <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ObserverWhen } from '../../../atoms/ObserverWhen'\nimport { FOrderStateCategoryFragment } from '../../../graph/generated'\nimport { GOrderListTicker } from '../../../graph/types'\nimport { Colors, Radiuses } from '../../../styling'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ntype TOrder = GOrderListTicker.Fragment & FOrderStateCategoryFragment\n\ninterface IProps {\n  order: TOrder\n  showBranch: boolean\n  toggleOrderDetail(orderId: ID): void\n  isOrderDetailOpen(orderId: ID): boolean\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox: React.FC<IProps> = ({\n  order,\n  showBranch,\n  toggleOrderDetail,\n  isOrderDetailOpen,\n}) => (\n  <OrderBoxStyled id={`order-${order.id}`}>\n    <OrderTicker\n      order={order}\n      showBranch={showBranch}\n      onClick={() => toggleOrderDetail(order.id)}\n    />\n    <ObserverWhen\n      test={() => isOrderDetailOpen(order.id)}\n      renderSuccess={() => <OrderDetail orderId={order.id} />}\n    />\n  </OrderBoxStyled>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const ClosureHistoryFilter = () => {\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateFrom\"\n          label={<Trans>From date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateTo\"\n          label={<Trans>To date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Trans>Show history for branch</Trans>\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import { subDays } from 'date-fns'\nimport React, { createContext, useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QClosureHistoryDocument,\n  QClosureHistoryHistory,\n  QClosureHistoryQuery,\n  QClosureHistoryVariables,\n} from '../../../graph/generated'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\n\nexport type TReports = QClosureHistoryHistory\n\nconst context = createContext<IQueryResult<QClosureHistoryQuery> | null>(null)\n\nexport const useClosureHistory = () => useContext(context)!\n\nexport const ClosureHistoryLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery<\n    QClosureHistoryQuery,\n    QClosureHistoryVariables\n  >(QClosureHistoryDocument)\n\n  return (\n    <Form\n      onSubmit={(formValues: { dateFrom: Date; dateTo: Date }) => {\n        if (statistics.closureBranch) {\n          execute({\n            branchId: statistics.closureBranch,\n            dateFrom: formatDateISO(formValues.dateFrom),\n            dateTo: formatDateISO(formValues.dateTo),\n          })\n        }\n      }}\n      defaultValues={{ dateFrom: subDays(new Date(), 1), dateTo: new Date() }}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading, wasExecuted } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (!wasExecuted) {\n    return null\n  }\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (data && data.history.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data &&\n        data.history.map(report => (\n          <FlexRow key={report.id}>\n            <FlexColumn fixedWidth={true}>\n              <RelativeLink to={`../${report.id}`}>\n                <SizerButton>\n                  <TouchButton iconName=\"mode_edit\" />\n                </SizerButton>\n              </RelativeLink>\n            </FlexColumn>\n            <FlexColumn widthGrowIndex={1}>\n              {`[${report.reportSequence}] ${formatDateISO(\n                report.reportDatetime,\n              )}`}\n            </FlexColumn>\n          </FlexRow>\n        ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryFilter } from '../molecules/ClosureHistoryFilter'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.FC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <ClosureHistoryFilter />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n}\n\nconst MonospaceOutputStyled = styled.p`\n  color: white;\n  font-family: 'Lucida Console', Monaco, monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 1rem;\n  line-height: 1.8rem;\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nexport const MonospaceOutput: React.FC<IProps> = ({ text }) => (\n  <MonospaceOutputStyled>{formatOutput(text)}</MonospaceOutputStyled>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQClosureReport } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent = observer<IProps>(\n  ({ reportId = '' }) => {\n    const { statistics } = useRoot()\n    const { data, loading } = useQClosureReport({\n      branchId: statistics.closureBranch!,\n      reportId,\n      showReport: Boolean(reportId),\n    })\n\n    if (loading) {\n      return <MonospaceOutput text={i18n.t`Computing`} />\n    }\n\n    return (\n      <MonospaceOutput\n        text={reportId ? data.report!.plainData : data.lastReport.plainData}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick?(e: MouseEvent<HTMLButtonElement>): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.FC<IProps> = props => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <TouchButton\n      text={i18n.t`Create closure`}\n      color={Colors.green}\n      width=\"12rem\"\n      {...props}\n    />\n  </CanMutate>\n)\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useMFinancialReportCreate } from '../../../graph/generated'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nconst ButtonToRight = styled.div`\n  float: right;\n`\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const [createClosure] = useMFinancialReportCreate()\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      branchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <>\n      {showCurrent ? (\n        <ClosureCurrentButton />\n      ) : (\n        <ClosureSubmitButton\n          onClick={onSubmit}\n          disabled={!statistics.closureBranch}\n        />\n      )}\n      <ButtonToRight>\n        <ClosureHistoryButton />\n      </ButtonToRight>\n    </>\n  ))\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsContent } from '../molecules/ClosureStatisticsContent'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.FC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import { isoDate } from '@speedlo/graphql'\nimport React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { InputStatisticCreate } from '../../../graph/types'\n\nconst context = React.createContext<InputStatisticCreate | undefined>(undefined)\n\nexport const useStatsFilterCurrent = () => React.useContext(context)\n\nexport function useStatsFilter() {\n  const { statistics } = useRoot()\n  const [filter, setFilter] = React.useState<InputStatisticCreate | undefined>()\n\n  const executeFilter = () => {\n    setFilter({\n      branches: [...statistics.branchesFilter],\n      drivers: [...statistics.drivers],\n      dateTimeFrom: isoDate(statistics.dateTimeFrom),\n      dateTimeTo: isoDate(statistics.dateTimeTo),\n    })\n  }\n\n  const defaultValues = {\n    dateTimeFrom: statistics.dateTimeFrom,\n    dateTimeTo: statistics.dateTimeTo,\n  }\n\n  const renderForm = (children: ReactNode | ReactNode[]) => {\n    return (\n      <Form\n        onSubmit={executeFilter}\n        onChange={({ values }) => statistics.updateFilter(values)}\n        defaultValues={defaultValues}\n      >\n        <context.Provider value={filter}>{children}</context.Provider>\n      </Form>\n    )\n  }\n\n  return {\n    filter,\n    executeFilter,\n    renderForm,\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { useQStatsDaily } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nconst StatsDisplay: React.FC<{ plain: string }> = ({ plain, children }) => {\n  return (\n    <>\n      <Headline light={true}>{children}</Headline>\n      <MonospaceOutput text={plain} />\n    </>\n  )\n}\n\nexport const DailyStatisticsContent: React.FC = () => {\n  const filter = useStatsFilterCurrent()\n  const { data, loading } = useQStatsDaily(\n    { filter: filter! },\n    { skip: !filter },\n  )\n\n  if (!filter) {\n    return null\n  }\n\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n\n  const { stats } = data\n  return (\n    <>\n      <StatsDisplay plain={stats.daily}>\n        <Trans>Daily statistics</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.category}>\n        <Trans>By category</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.delivery}>\n        <Trans>By type</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.drivers}>\n        <Trans>By driver</Trans>\n      </StatsDisplay>\n    </>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(statistics.branches)}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n    />\n  ))\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDateTime } from '../../../atoms/FormInputDateTime'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const StatisticsFilter = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeFrom\"\n          label={<Trans>From</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeTo\"\n          label={<Trans>To</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Plural\n            value={statistics.branchesFilter.length}\n            one=\"Show for one branch\"\n            few=\"Show for # branches\"\n            other=\"Show for # branches\"\n          />\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  ))\n}\n","import React from 'react'\n\nimport { useStatsFilter } from '../hooks/useStatsFilter'\n\ninterface IProps {\n  children: ReactNode | ReactNode[]\n}\n\nexport const DailyStatisticsLoader: React.FC<IProps> = ({ children }) => {\n  const { renderForm } = useStatsFilter()\n  return renderForm(children)\n}\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { DailyStatisticsContent } from '../molecules/DailyStatisticsContent'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  IndexRange,\n  InfiniteLoader,\n  List,\n} from 'react-virtualized'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QStatsOrdersListDocument,\n  QStatsOrdersListList,\n  QStatsOrdersListQuery,\n  QStatsOrdersListVariables,\n  useQStatsOrdersCounts,\n} from '../../../graph/generated'\nimport { useExecutableQuery } from '../../../hooks/useExecutableQuery'\nimport { OrderBox } from '../../order/atoms/OrderBox'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nexport const OrdersStatisticsList: React.FC = () => {\n  const { statistics, order: orderModel } = useRoot()\n  const filter = useStatsFilterCurrent()\n\n  const orders = React.useRef(new Map<number, QStatsOrdersListList>())\n  const loaderRef = React.useRef<InfiniteLoader | null>(null)\n  const measureCache = React.useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: 55,\n        minHeight: 55,\n      }),\n    [],\n  )\n\n  const { data: countsData, loading: countsLoading } = useQStatsOrdersCounts(\n    { filter: filter! },\n    { skip: !filter },\n  )\n\n  React.useEffect(\n    () => {\n      orders.current.clear()\n      measureCache.clearAll()\n      if (loaderRef.current) {\n        loaderRef.current.resetLoadMoreRowsCache(true)\n      }\n    },\n    [JSON.stringify(filter)],\n  )\n\n  const { execute: executeList } = useExecutableQuery<\n    QStatsOrdersListQuery,\n    QStatsOrdersListVariables\n  >(QStatsOrdersListDocument)\n\n  const queryMoreOrders = React.useCallback(\n    async ({ startIndex, stopIndex }: IndexRange) => {\n      if (filter) {\n        const result = await executeList({\n          filter,\n          pagination: {\n            fromIndex: startIndex,\n            toIndex: stopIndex,\n          },\n        })\n\n        if (result.data) {\n          const list = [...result.data.stats.orders.list]\n          for (let index = startIndex; index <= stopIndex; index++) {\n            const order = list.shift()\n            if (order) {\n              orders.current.set(index, order)\n            }\n          }\n        }\n      }\n    },\n    [filter],\n  )\n\n  const isRowLoaded = React.useCallback(\n    ({ index }) => orders.current.get(index) !== undefined,\n    [],\n  )\n\n  const rowRenderer = React.useCallback(({ index, key, style, parent }) => {\n    const order = orders.current.get(index)\n    if (order === undefined) {\n      return (\n        <div style={style} key={key}>\n          ...\n        </div>\n      )\n    }\n    return (\n      <CellMeasurer\n        key={key}\n        columnIndex={0}\n        rowIndex={index}\n        cache={measureCache}\n        parent={parent}\n      >\n        {({ measure }) => (\n          <div style={style}>\n            <OrderBox\n              order={order}\n              toggleOrderDetail={o => {\n                orderModel.list.toggleOrderDetail(o)\n                setTimeout(measure, 500)\n              }}\n              isOrderDetailOpen={orderModel.list.isOrderDetailOpen}\n              showBranch={statistics.branchesFilter.length > 1}\n            />\n          </div>\n        )}\n      </CellMeasurer>\n    )\n  }, [])\n\n  if (!filter) {\n    return null\n  }\n\n  if (countsLoading) {\n    return <Loading />\n  }\n\n  const { finished, cancelled } = countsData.stats.counts\n  const totalCount = finished + cancelled\n\n  if (totalCount === 0) {\n    return <Trans>No orders</Trans>\n  }\n\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <InfiniteLoader\n          rowCount={totalCount}\n          isRowLoaded={isRowLoaded}\n          loadMoreRows={queryMoreOrders}\n          ref={loaderRef}\n        >\n          {({ onRowsRendered, registerChild }) => (\n            <List\n              ref={registerChild}\n              onRowsRendered={onRowsRendered}\n              rowHeight={measureCache.rowHeight}\n              deferredMeasurementCache={measureCache}\n              rowCount={totalCount}\n              width={width}\n              height={height}\n              rowRenderer={rowRenderer}\n            />\n          )}\n        </InfiniteLoader>\n      )}\n    </AutoSizer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { Price } from '../../../atoms/Price'\nimport { useQStatsOrders } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nconst StatPanel = styled.div`\n  margin: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n`\n\nconst StatLabel = styled.h1`\n  font-size: 1.5rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nconst StatValue = styled.h2`\n  font-size: 4rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const filter = useStatsFilterCurrent()\n  const { data, loading } = useQStatsOrders(\n    { filter: filter! },\n    { skip: !filter },\n  )\n\n  if (!filter) {\n    return null\n  }\n\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n\n  const stats = data.stats.finishedOrders\n\n  return (\n    <>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total turnover</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Online payments</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Orders count</Trans>\n        </StatLabel>\n        <StatValue>{stats.finishedCount + stats.cancelledCount}</StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total commissions</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <MonospaceOutput text={data.stats.orderStatisticsPlain} />\n      </StatPanel>\n    </>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment, useQAllDrivers } from '../../../graph/generated'\nimport { formatFullName } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ntype TDriver = FDriverFragment\n\nexport const StatisticsDriversFilter = observer(() => {\n  const { statistics } = useRoot()\n  const { data, loading } = useQAllDrivers({\n    branches: statistics.branchesFilter,\n  })\n  React.useEffect(\n    () => {\n      if (!loading) {\n        statistics.setDriversFilter(\n          RM.intersection(statistics.drivers, data.drivers.map(RM.prop('id'))),\n        )\n      }\n    },\n    [loading],\n  )\n  return (\n    <SelectControl<FDriverFragment>\n      isMulti={true}\n      isClearable={true}\n      isSearchable={true}\n      filterOption={(option, rawInput) =>\n        rawInput.length === 0 ||\n        formatFullName(option.data)\n          .toLocaleLowerCase()\n          .includes(rawInput.toLocaleLowerCase())\n      }\n      placeholder={i18n.t`Filter by drivers`}\n      isLoading={loading}\n      options={loading ? [] : [...data.drivers]}\n      value={\n        loading\n          ? []\n          : data.drivers.filter(driver =>\n              statistics.drivers.includes(driver.id),\n            )\n      }\n      formatOptionLabel={formatFullName}\n      getOptionValue={RM.prop('id')}\n      onChange={value => {\n        if (!value) {\n          statistics.setDriversFilter([])\n        } else {\n          statistics.setDriversFilter((value as TDriver[]).map(RM.prop('id')))\n        }\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useStatsFilter } from '../hooks/useStatsFilter'\n\ninterface IProps {\n  autoFilter?: string\n  children: ReactNode | ReactNode[]\n}\n\nexport const OrdersStatisticsLoader: React.FC<IProps> = ({\n  children,\n  autoFilter,\n}) => {\n  const { executeFilter, renderForm } = useStatsFilter()\n\n  React.useEffect(\n    () => {\n      if (autoFilter) {\n        executeFilter()\n      }\n    },\n    [autoFilter],\n  )\n\n  return renderForm(children)\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { AutoHeight } from '../../../atoms/FlexAutoHeight'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { OrdersStatisticsList } from '../molecules/OrdersStatisticsList'\nimport { OrdersStatisticsSummary } from '../molecules/OrdersStatisticsSummary'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsDriversFilter } from '../molecules/StatisticsDriversFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\n\ninterface IProps extends RouteComponentProps<{ filter?: string }> {}\n\nfunction getLayout() {\n  return [{ i: 'summary', x: 0, y: 1, w: 7, h: 1 }]\n}\n\nexport const OrdersStatisticsPage: React.FC<IProps> = ({ match }) => {\n  const { statistics } = useRoot()\n  if (match.params.filter === 'today') {\n    statistics.setTodayOrdersFilter()\n  }\n  return (\n    <OrdersStatisticsLoader autoFilter={match.params.filter}>\n      <PageLayoutFullHeightItem\n        withScrollArea={false}\n        row={1}\n        column={7}\n        widthInColumns={9}\n      >\n        <AutoHeight>\n          <OrdersStatisticsList />\n        </AutoHeight>\n      </PageLayoutFullHeightItem>\n\n      <PageLayout\n        layouts={getLayout()}\n        pageTitle={i18n.t`Orders statistics`}\n        showSoundControl={false}\n        scrollPageTitle={false}\n        useBackButton={true}\n      >\n        <div key=\"summary\">\n          <Card>\n            <StatisticsBranchFilter />\n            <StatisticsDriversFilter />\n            <StatisticsFilter />\n          </Card>\n\n          <OrdersStatisticsSummary />\n        </div>\n      </PageLayout>\n    </OrdersStatisticsLoader>\n  )\n}\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'OrdersStatistics', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'DailyStatistics', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'Closure', x: 4, y: 1, w: 2, h: 2 },\n  ]\n}\n\nexport const OverviewPage: React.FC<IProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders/:filter?`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n"],"sourceRoot":""}