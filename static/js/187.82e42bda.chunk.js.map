{"version":3,"sources":["components/forms/FormInput.tsx","atoms/VerticalGap.tsx","molecules/TouchButtonDelete.tsx","components/forms/FormSubmitButton.tsx","helpers/form.ts","atoms/FlexDiv.tsx","components/forms/FormDropdown.tsx","components/forms/FormDisplayValue.tsx","atoms/DragHandle.tsx","atoms/PictogramDisplay.tsx","components/forms/useFormLoader.ts","segments/menu/molecules/MenuGuideDownload.tsx","molecules/SortableDataTable.tsx","segments/menu/molecules/CategoryListTable.tsx","segments/menu/organisms/CategoryList.tsx","segments/menu/pages/MenuCategoryListPage.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/hooks/useMenuItemType.ts","segments/menu/atoms/IsMenuItemType.tsx","segments/menu/atoms/MenuSubmitButton.tsx","segments/menu/molecules/MenuFormLoader.tsx","segments/menu/hooks/useMenuItemId.ts","segments/menu/hooks/useMenuTranslations.ts","segments/menu/molecules/MenuTranslationLoader.tsx","segments/menu/organisms/CategoryFormLoader.tsx","components/forms/FormDeleteButton.tsx","segments/menu/atoms/FormLayoutGrid.tsx","segments/menu/molecules/CategoryOriginsField.tsx","segments/menu/molecules/CategoryPictogramSelect.tsx","segments/menu/atoms/MenuTranslationInput.tsx","segments/menu/molecules/MenuInternalNoteField.tsx","segments/menu/molecules/MenuLanguageSwitch.tsx","segments/menu/molecules/MenuNameInput.tsx","segments/menu/organisms/CategoryFormPrimary.tsx","hooks/useSettingsBranch.ts","segments/menu/atoms/MenuSuggestionPanel.tsx","segments/menu/hooks/usePriceType.ts","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/molecules/CategoryRequirementControl.tsx","segments/menu/organisms/CategoryRequirementsForm.tsx","segments/menu/pages/MenuCategoryPage.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeCategoryView.tsx","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/molecules/MenuPriceInput.tsx","components/forms/FormFlatSingleSelect.tsx","segments/menu/molecules/RecipeVatSelectField.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/molecules/MenuCodeInput.tsx","segments/menu/molecules/MenuIdExternalSystem.tsx","segments/menu/molecules/MenuVisibilityField.tsx","segments/menu/atoms/MenuAllergenIndicator.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/molecules/RecipeDescriptionInput.tsx","segments/menu/molecules/RecipeImage.tsx","segments/menu/organisms/RecipeFormPrimary.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockFormLoader.tsx","segments/menu/molecules/StockAllergenField.tsx","segments/menu/molecules/StockAllowNegativeField.tsx","segments/menu/molecules/StockPluField.tsx","segments/menu/molecules/StockWareUnitField.tsx","segments/menu/organisms/StockFormPrimary.tsx","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/routes/MenuRouting.tsx"],"names":["FormInput","React","forwardRef","inputRef","fieldName","fullWidth","validate","addHiddenLabelWithPlaceholderText","withLabel","props","getInputProps","useFormInputProps","useObserver","inputFullWidth","ref","placeholder","hidden","htmlFor","id","state","useXFormState","useXFieldForInput","field","disabled","isSubmitting","invalid","touched","Boolean","error","VerticalGap","styled","div","size","sizeUnit","displayName","TouchButtonDelete","onDelete","confirmText","icon","Delete","color","Colors","greyMiddle","onClick","ev","preventDefault","window","confirm","FormSubmitButton","children","type","green","isValid","undefined","ErrorOutline","iconSize","iconColor","red","className","cn","heartBeat","isFormValid","formState","errors","Object","keys","length","parseNumber","value","Number","parseFloat","replace","FlexDiv","FormDropdown","useXField","isMulti","options","getOptionValue","selection","isSelected","Array","isArray","option","includes","RM","F","filter","onChange","selectedOptions","setValue","map","getPropsForMulti","find","item","getPropsForSingle","onFocus","setTouched","hasError","isDisabled","FormDisplayValue","useXFieldState","StyledDragHandle","DragHandle","SortableHandle","Reorder","getFontSize","fontSize","fontSizeUnit","Spacing","DefaultSizeUnit","PictogramDisplay","attrs","getPictogramClassName","pictogramId","logger","useFormLoader","onSubmit","initialValues","loadValues","validationSchema","submitMessage","submitRedirectPath","history","useRouterContext","useSnackBar","enqueueSuccess","enqueueWarning","onSubmitSuccess","useCallback","values","a","push","onSubmitFailed","msg","hasLoaded","useRef","onReset","current","xform","useXForm","initialValidationEnabled","ignoreUnknownFieldsInValidation","onFormChanges","useEffect","Promise","resolve","then","api","mergeValues","pristineValues","enableValidation","MenuGuideDownloadButton","TouchButton","black","MenuGuideDownload","observer","settings","useRoot","useQMenuGuideDownload","branchId","fetchPolicy","loading","data","companyBranch","foodMenuUrl","href","target","rel","SortableTableRowRenderer","SortableElement","columns","style","SortableDataTableContainer","SortableContainer","DataTable","SortableDataTable","sortedItems","items","rowRenderer","rowProps","onHandleSorting","newIndex","oldIndex","currentItems","arrayMove","setState","onSort","sortSuccess","offset","this","lockAxis","useDragHandle","onSortEnd","PureComponent","getDerivedStateFromProps","nextProps","CategoryListTable","categories","onToggle","onRemove","showEditColumn","showRemoveColumn","showVisibilityColumn","showHeader","isSortable","isLoading","heightStretch","fullHeight","noRowsDisplay","text","i18n","disableHeader","noRowsRenderer","getCategoryEditRoute","useMenuRouting","dataKey","width","ButtonColumnWidthPx","minWidth","cellRenderer","checkColumnAccess","canQuery","ColumnRendererEdit","cellDataGetter","rowData","categoryType","enum","ColumnRendererRemove","columnData","canMutate","ColumnRendererVisibility","label","ColumnRendererWithNote","noteKey","cellData","toLocaleLowerCase","createElement","StyledCategoryList","greyLight","headline","subHeadline","useQMenuCategoryList","updateQuery","refetch","dataOrigins","useQMenuCategoryOrigins","originsMap","useMemo","origins","reduce","acc","origin","code","renderOrigins","sort","originEnum","key","useMMenuCategoryVisibility","changeVisibility","onVisibilityToogle","categoryId","visible","optimisticResponse","updateWareCategory","__typename","useMMenuCategorySort","sortCategory","result","success","useLoadingCache","getCategories","getCategoryCreateRoute","FlexRowSingle","FlexColumn","widthGrowIndex","Headline","fixedWidth","MenuCreateButton","routeTo","PartialDataTableContainer","MenuCategoryListPage","FullPageLayout","pageTitle","useBackButton","backRoute","ROUTE_SETTINGS","PageLayoutFullHeightItem","forcePercentHeightInMobile","Card","stretchToParent","justify","SettingsCompanyBranchPicker","WareCategoryTypeEnum","Main","SideDish","Cover","TopRightButtonContainer","Radiuses","Button","useMenuItemType","IsMenuItemType","isMain","isSideDish","isCover","itemType","MenuSubmitButton","isCreate","createMutation","updateMutation","useCanMutate","MenuFormLoader","loadCreateDefaults","loadUpdateValues","onCreate","onUpdate","createSuccessMessage","updateSuccessMessage","successRedirectPath","useMenuItemId","byLanguage","propEq","useMenuTranslations","translations","findTranslation","language","getTranslation","hasTranslation","getTranslationOrCreate","create","translation","MenuTranslationLoader","loadTranslations","menuModel","useMenuModel","branch","supportedLanguages","currentLanguage","setLanguage","defaultLanguage","isDefaultLanguage","translated","assign","CategoryFormLoader","redirectToCategoryList","useObjectValidation","yup","nameLabel","string","required","useExecutableQMenuCategoryForm","queryCategory","category","useMMenuCategoryUpdate","updateCategory","executeUpdate","getWriteVariables","useMMenuCategoryCreate","createCategory","wareCategoryType","useExecutableQMenuCategoryFormTrans","queryTranslations","internalNoteLabel","getDefaults","ROUTE_MENU_CATEGORY","pictogram","minCount","maxCount","recipes","formValues","enabled","idProp","orderOriginCategories","FormDeleteButton","mutationName","canDelete","useAccessGuard","goBack","StyledFormLayoutGrid","Middle","primaryColumnWidth","secondaryColumnWidth","mediaMobile","FormLayoutGrid","contentPrimary","contentSecondary","contentTopRight","contentBottomRight","CategoryOriginsField","IconLine","labelWidth","isSearchable","getOptionLabel","prop","CategoryPictogramSelect","SelectControl","availablePictograms","formatOptionLabel","components","SingleValue","styles","container","base","menuList","maxHeight","isClearable","StyledMenuTranslationInput","MenuTranslationInput","getFieldProps","isTranslating","name","fieldProps","src","getFlag","alt","MenuInternalNoteInput","localized","StyledLanguagePicker","LanguagePicker","MenuLanguageSwitch","availableLanguages","selectedLanguage","formatLanguage","identity","arrowColor","MenuNameInput","Label","DefaultLabelWidth","CategoryFormPrimary","useMMenuCategoryDelete","deleteCategory","FormGrid","useSettingsBranch","MenuSuggestionPanel","onAdd","addLabel","addButtonText","selectProps","useStateRef","getSelected","setSelected","onConfirm","selected","onKeyDown","onSelect","margin","propOr","priceTypes","WarePriceTypeEnum","Delivery","Inhouse","usePriceType","priceTypeLabels","getPriceTypesLabels","StyledCategoryRecipesView","mediaDesktop","StyledFormStretchedRow","SortableRecipes","StyledRecipeRow","SortableRecipe","recipe","prices","priceType","foundPrice","pathEq","NoteText","Price","currencyCode","price","currency","TouchButtonRemove","internalNote","CategoryRecipesView","useQMenuRecipeList","unselectedRecipesOnly","differenceWith","eqProps","isDesktop","useResponsive","addedRecipe","lockToContainerEdges","DataList","rowHeight","renderItem","index","reject","idPropEq","StyledCategoryRequirementControl","CategoryRequirementControl","count","countRef","Sizer","FormInputStyled","validity","valid","parseInt","select","pattern","StyledCheckbox","checked","getRulesMap","noLimit","min","max","optional","onlyOne","custom","CategoryRequirementsForm","ruleMap","useLocalStore","currentRule","setRule","rule","useAutorun","found","_","findKey","SelectControlFlat","formatItem","req","onSingleSelection","selectedRule","selectedItem","FormContainer","FormFixedRow","FormStretchedRow","MenuCategoryPage","match","params","getCategoryTypeLabel","hideLogoutWidget","withScrollArea","minHeight","CategorySuggestionPanel","currentCategories","without","RecipeCategoryView","noRowsText","from","remove","addedCategory","RecipeFormLoader","recipeId","recipeType","redirectToRecipeList","object","mapPriceTypes","useExecutableQMenuRecipeDefaults","queryDefaults","normalizeLoadedDefaults","defaults","useExecutableQMenuRecipeForm","queryRecipe","normalizeUpdateValues","useMMenuRecipeUpdate","updateRecipe","image","getImageForUpdate","disableBatching","useMMenuRecipeCreate","createRecipe","useExecutableQMenuRecipeFormTrans","descriptionLabel","ROUTE_MENU_RECIPE","warePriceType","numeral","vat","vatId","sideDishCategories","sideDishes","wareCategories","associatedRecipes","pick","ingredients","stockItem","quantity","delete","file","internalCode","vats","recipeSource","sourceAssociatedRecipes","associatedRecipe","formattedPrice","sourceIngredients","allergens","unitLabel","wareUnit","sourcePrice","sourcePrices","MenuPriceField","Toll","FormFlatSingleSelect","getItemId","isInvalid","RecipeVatSelectField","useQMenuVats","RecipeAssocListTable","RecipeAssociatedView","useQMenuRecipeFormAssoc","isPriceType","isAssocRecipe","priceTypeRecipes","rejectSuggestions","some","onAddRecipe","onRemoveRecipe","both","FormPricingCurrencyCode","RecipeFormPricing","baseName","MarginBox","left","MenuCodeInput","MenuIdExternalSystem","MenuVisibilityField","AllergenBox","MarginAroundFormComponents","white","yellow","MenuAllergenIndicator","useQMenuAllergens","allergen","title","active","StyledAllergenLabel","RecipeAllergenDisplay","uniq","flatten","RecipeDescriptionInput","StyledRecipeImageUploader","RecipeImage","useDropzone","accept","multiple","onDropAccepted","firstImage","onDropRejected","isDragActive","getRootProps","imageDisplay","URL","createObjectURL","RecipeFormPrimary","useMMenuRecipeDelete","deleteRecipe","RecipeIngredientsTable","rowIndex","String","unselectedStockOnly","RecipeIngredientsControl","useQMenuStockList","stockItems","addedStockItem","RecipeIngredientsView","ingredient","stockItemId","splice","findIndex","MenuRecipePage","right","bottom","getRecipeTypeLabel","TCategoryType","StyledDataTable","StockListTable","Loading","flexGrow","stockWithUnit","stockAllowNegative","StockListLoader","filterItem","getPredicate","partialMatch","exactMatch","MenuStockListPage","getStockCreateRoute","flexWrap","MenuFilterInput","CanMutate","StockFormLoader","stockId","redirectToStockList","array","of","useExecutableQMenuStockDefaults","allowNegativeDefault","getAllowNegativeDefault","allowNegative","useExecutableQMenuStockForm","queryStock","note","plu","useMMenuStockCreate","createStock","useMMenuStockUpdate","updateStock","FieldStateEnum","Default","ROUTE_MENU_STOCK","isEnabled","Disabled","StockAllergenField","Enabled","i18nMark","StockAllowNegativeField","StockPluField","Fingerprint","StockWareUnitField","useQMenuWareUnits","SelectAll","wareUnits","StockFormPrimary","useMMenuStockDelete","deleteStockItem","StockRecipesView","useQStockRecipes","BlockLoader","pathname","MenuStockPage","CanQuery","queryName","MenuRouting","SecureRoute","path","component","MenuRecipeListPage","to","ROUTE_MENU","NotFoundPage"],"mappings":"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","file":"static/js/187.82e42bda.chunk.js","sourcesContent":["import {\n  useXFieldForInput,\n  useXFormState,\n  XFieldName,\n  XFieldValidator,\n} from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { StyledFormInput } from '../../atoms/FormInputStyled'\n\ntype TProps = NoChildren &\n  Omit<React.InputHTMLAttributes<never>, 'name'> & {\n    fieldName: XFieldName\n    validate?: XFieldValidator<string>\n    fullWidth?: boolean\n    addHiddenLabelWithPlaceholderText?: boolean\n  }\n\nexport type FormInputProps = TProps\n\nexport const FormInput = React.forwardRef<HTMLInputElement, TProps>(\n  (\n    {\n      fieldName,\n      fullWidth,\n      validate,\n      addHiddenLabelWithPlaceholderText: withLabel = true,\n      ...props\n    },\n    inputRef,\n  ) => {\n    const getInputProps = useFormInputProps({ fieldName, validate })\n    return useObserver(() => (\n      <>\n        <StyledFormInput\n          {...getInputProps()}\n          inputFullWidth={fullWidth}\n          ref={inputRef}\n          {...props}\n        />\n        {withLabel && props.placeholder && (\n          <label hidden={true} htmlFor={getInputProps().id}>\n            {props.placeholder}\n          </label>\n        )}\n      </>\n    ))\n  },\n)\n\ninterface IHookOptions {\n  fieldName: XFieldName\n  validate?: XFieldValidator<string>\n}\n\nexport function useFormInputProps({ fieldName, validate }: IHookOptions) {\n  const state = useXFormState()\n  const [field, getInputProps] = useXFieldForInput<string>(fieldName, {\n    validate,\n  })\n  return () => ({\n    ...getInputProps(),\n    disabled: state.isSubmitting,\n    invalid: field.touched && Boolean(field.error),\n  })\n}\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import { Delete } from '@material-ui/icons'\nimport React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface ITouchButtonDeleteProps extends Omit<ITouchButtonProps, 'onClick'> {\n  confirmText?: string\n  onDelete(): void\n}\n\nexport const TouchButtonDelete: React.FC<ITouchButtonDeleteProps> = ({\n  onDelete,\n  confirmText,\n  ...props\n}) => {\n  return (\n    <SizerButton>\n      <TouchButton\n        icon={Delete}\n        color={Colors.greyMiddle}\n        onClick={ev => {\n          ev.preventDefault()\n          if (!confirmText || window.confirm(confirmText)) {\n            onDelete()\n          }\n        }}\n        {...props}\n      />\n    </SizerButton>\n  )\n}\n","import { ErrorOutline } from '@material-ui/icons'\nimport { cn } from '@speedlo/ui'\nimport { useXFormState } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../../molecules/TouchButton'\nimport { Colors } from '../../styling'\n\ninterface IProps extends ITouchButtonProps {\n  children: ReactNode | ReactNode[] | string\n}\n\nexport const FormSubmitButton: React.FC<IProps> = ({\n  children,\n  id = 'form-submit',\n  ...props\n}) => {\n  const state = useXFormState()\n  return useObserver(() => (\n    <TouchButton\n      id={id}\n      type=\"submit\"\n      color={Colors.green}\n      disabled={state.isSubmitting}\n      icon={!state.isValid ? ErrorOutline : undefined}\n      iconSize={1.1}\n      iconColor={Colors.red}\n      {...props}\n      className={cn(props.className, 'animated', 'infinite', {\n        heartBeat: state.isSubmitting,\n      })}\n    >\n      <>{children}</>\n    </TouchButton>\n  ))\n}\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n\nexport function parseNumber(value: string | number) {\n  return typeof value === 'number'\n    ? value\n    : Number.parseFloat(value.replace(',', '.'))\n}\n","import styled from 'styled-components/macro'\n\nexport const FlexDiv = styled.div`\n  display: flex;\n`\n","import { RM } from '@speedlo/tools'\nimport { useXField, useXFormState, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { ISelectControlProps, SelectControl } from '../../atoms/SelectControl'\n\ntype DefaultOptionType = object\n\nexport interface FormDropdownProps<\n  OptionType extends DefaultOptionType = DefaultOptionType\n> extends ISelectControlProps<OptionType> {\n  fieldName: XFieldName\n}\n\nexport const FormDropdown = <OptionType extends DefaultOptionType>({\n  fieldName,\n  ...props\n}: FormDropdownProps<OptionType>) => {\n  const field = useXField(fieldName)\n  const { isMulti, options, getOptionValue } = props\n\n  const getPropsForMulti = () => {\n    const selection = field.value\n    const isSelected = Array.isArray(selection)\n      ? (option: OptionType) => selection.includes(getOptionValue!(option))\n      : RM.F\n\n    return {\n      value: Array.isArray(options)\n        ? (options as OptionType[]).filter(isSelected)\n        : [],\n      onChange: selectedOptions => {\n        field.setValue(selectedOptions.map(getOptionValue))\n      },\n    }\n  }\n\n  const getPropsForSingle = () => {\n    const selection = field.value\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        field.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  const formState = useXFormState()\n\n  return useObserver(() => (\n    <SelectControl\n      {...(isMulti ? getPropsForMulti() : getPropsForSingle())}\n      onFocus={() => field.setTouched()}\n      invalid={field.touched && field.hasError}\n      isDisabled={formState.isSubmitting}\n      {...props}\n    />\n  ))\n}\n","import { useXFieldState, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\ntype TProps = NoChildren & {\n  fieldName: XFieldName\n  className?: string\n}\n\nexport const FormDisplayValue: React.FC<TProps> = ({\n  fieldName,\n  className,\n}) => {\n  const field = useXFieldState<string>(fieldName)\n  return useObserver(() => <span className={className}>{field.value}</span>)\n}\n","import { Reorder } from '@material-ui/icons'\nimport React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IProps {}\n\nconst StyledDragHandle = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IProps>(() => (\n  <StyledDragHandle>\n    <Icon icon={Reorder} />\n  </StyledDragHandle>\n))\n","import '@speedlo/assets/Flaticon.css'\n\nimport styled from 'styled-components/macro'\n\nimport { Spacing } from '../styling'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst getFontSize = ({\n  fontSize = 2,\n  fontSizeUnit = Spacing.DefaultSizeUnit,\n}: IProps) => `${fontSize}${fontSizeUnit}`\n\nexport const PictogramDisplay = styled.div.attrs<IProps>(({ pictogramId }) => ({\n  className: getPictogramClassName(pictogramId),\n}))<IProps>`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport function getPictogramClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport { TValidationSchema, useXForm, XFormErrors } from '@speedlo/xform'\nimport React from 'react'\n\nimport { logForm } from '../../helpers/logger'\nimport { useSnackBar } from '../../hooks/useSnackBar'\n\ninterface IOptions<TValues> {\n  initialValues: TValues\n  loadValues?(initialValues: TValues): Promise<Partial<TValues> | undefined>\n  onSubmit(values: TValues): Promise<any>\n  submitMessage?: string\n  submitRedirectPath?: string\n  validationSchema?: TValidationSchema\n}\n\nexport type TFormLoaderOptions<TValues = any> = IOptions<TValues>\n\nconst logger =\n  process.env.REACT_APP_STAGE !== 'prod' ? obj => logForm('%o', obj) : undefined\n\nexport function useFormLoader<TValues>({\n  onSubmit,\n  initialValues,\n  loadValues,\n  validationSchema,\n  submitMessage,\n  submitRedirectPath,\n}: IOptions<TValues>) {\n  const { history } = useRouterContext()\n  const { enqueueSuccess, enqueueWarning } = useSnackBar()\n\n  const onSubmitSuccess = React.useCallback(\n    async (values: TValues) => {\n      await onSubmit(values)\n      if (submitMessage) {\n        enqueueSuccess(submitMessage)\n      }\n      if (submitRedirectPath) {\n        history.push(submitRedirectPath)\n      }\n    },\n    [enqueueSuccess, history, onSubmit, submitMessage, submitRedirectPath],\n  )\n\n  const onSubmitFailed = React.useCallback(\n    (values: TValues, errors: XFormErrors) => {\n      for (const msg of errors.values()) {\n        if (msg) {\n          enqueueWarning(msg)\n        }\n      }\n    },\n    [enqueueWarning],\n  )\n\n  const hasLoaded = React.useRef(false)\n\n  const onReset = React.useCallback(() => {\n    hasLoaded.current = false\n  }, [])\n\n  const xform = useXForm<TValues>({\n    onSubmit: onSubmitSuccess,\n    onSubmitFailed,\n    onReset,\n    validationSchema,\n    initialValues,\n    initialValidationEnabled: loadValues === undefined,\n    ignoreUnknownFieldsInValidation: true,\n    onFormChanges: logger,\n  })\n\n  React.useEffect(() => {\n    if (!hasLoaded.current) {\n      if (loadValues) {\n        Promise.resolve(loadValues(xform.state.initialValues)).then(values => {\n          if (values) {\n            xform.api.mergeValues(values)\n            xform.state.pristineValues = xform.state.values\n          }\n          xform.api.enableValidation()\n        })\n      }\n      hasLoaded.current = true\n    }\n  }, [loadValues, xform])\n\n  return xform\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuGuideDownload } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nconst MenuGuideDownloadButton = styled(TouchButton)`\n  white-space: nowrap;\n  margin-left: 2rem;\n  & a {\n    text-decoration: none;\n    color: ${Colors.black};\n    padding: 1rem;\n  }\n`\n\nexport const MenuGuideDownload = observer(() => {\n  const { settings } = useRoot()\n  const { loading, data } = useQMenuGuideDownload(\n    {\n      branchId: settings.branchId,\n    },\n    { fetchPolicy: 'cache-first' },\n  )\n  if (loading || !data.companyBranch.foodMenuUrl) {\n    return null\n  }\n  return (\n    <MenuGuideDownloadButton color={Colors.greyMiddle}>\n      <a\n        href={data.companyBranch.foodMenuUrl}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Trans>Menu codes manual</Trans>\n      </a>\n    </MenuGuideDownloadButton>\n  )\n})\n","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: RoA<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: RoA<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: RoA<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.PureComponent<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  rowRenderer = rowProps => {\n    return <SortableTableRowRenderer {...rowProps} />\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        lockAxis=\"y\"\n        useDragHandle={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={this.rowRenderer}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FMenuCategoryInListFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\n\ntype TCategory = FMenuCategoryInListFragment\n\ninterface IProps {\n  categories: RoA<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  fullHeight?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.FC<IProps> = ({\n  categories,\n  children,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  fullHeight = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    heightStretch,\n    fullHeight,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  const { getCategoryEditRoute } = useMenuRouting()\n  const columns = [\n    showEditColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canQuery: 'wareCategory' },\n          ColumnRendererEdit,\n        )}\n        cellDataGetter={({ rowData }) =>\n          getCategoryEditRoute(rowData.id, rowData.categoryType.enum)\n        }\n      />\n    ),\n    showRemoveColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererRemove}\n        columnData={{ onRemove }}\n      />\n    ),\n    showVisibilityColumn && (\n      <Column\n        dataKey=\"visible\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canMutate: 'updateWareCategory' },\n          ColumnRendererVisibility,\n        )}\n        columnData={{ onToggle }}\n      />\n    ),\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />,\n    <Column\n      dataKey=\"countRecipes\"\n      label={i18n.t`Recipe count`}\n      width={100}\n      cellRenderer={({ cellData }) =>\n        `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n      }\n    />,\n    children,\n    isSortable && (\n      <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n    ),\n  ]\n\n  if (isSortable) {\n    return React.createElement(\n      // * Replacing this with Tabular will fix this\n      // @ts-ignore\n      SortableDataTable,\n      {\n        onSort: onSort as any,\n        ...props,\n      },\n      ...columns,\n    )\n  }\n\n  return React.createElement(DataTable, props, ...columns)\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Column } from '../../../atoms/DataTable'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FMenuCategoryInListFragment,\n  OrderOriginCategoryEnum,\n  useMMenuCategorySort,\n  useMMenuCategoryVisibility,\n  useQMenuCategoryList,\n  useQMenuCategoryOrigins,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { useLoadingCache } from '../../../hooks/useLoadingCache'\nimport { Colors } from '../../../styling'\nimport { MenuCreateButton } from '../atoms/MenuCreateButton'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst StyledCategoryList = styled.div`\n  .origins span {\n    display: inline-block;\n    margin: 0.2rem;\n    padding: 0.2rem;\n    background-color: ${Colors.greyLight};\n  }\n`\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery, refetch } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const { data: dataOrigins } = useQMenuCategoryOrigins(\n    {},\n    { fetchPolicy: 'cache-first' },\n  )\n\n  const originsMap = React.useMemo(() => {\n    if (dataOrigins && dataOrigins.origins) {\n      return dataOrigins.origins.reduce((acc, origin) => {\n        acc[origin.enum] = origin.code\n        return acc\n      }, {}) as Record<OrderOriginCategoryEnum, string>\n    }\n    return {} as Record<OrderOriginCategoryEnum, string>\n  }, [dataOrigins])\n\n  const renderOrigins = React.useCallback(\n    ({ cellData }) => {\n      cellData.sort()\n      return cellData.map(originEnum => (\n        <span key={originEnum}>{originsMap[originEnum]}</span>\n      ))\n    },\n    [originsMap],\n  )\n\n  const [changeVisibility] = useMMenuCategoryVisibility()\n  const onVisibilityToogle = React.useCallback(\n    (categoryId: ID, visible: boolean) => {\n      changeVisibility(\n        { categoryId, visible },\n        {\n          optimisticResponse: {\n            updateWareCategory: {\n              __typename: 'WareCategory',\n              id: categoryId,\n              visible,\n            },\n          },\n        },\n      )\n    },\n    [changeVisibility],\n  )\n\n  const [sortCategory] = useMMenuCategorySort()\n  const onSort = React.useCallback(\n    async ({ item, items, offset }) => {\n      updateQuery(() => ({\n        categories: items,\n      }))\n      const result = await sortCategory({\n        categoryId: item.id,\n        offset,\n      })\n      if (result) {\n        await refetch()\n        return result.success\n      }\n      return false\n    },\n    [refetch, sortCategory, updateQuery],\n  )\n\n  const getCategories = useLoadingCache<RoA<FMenuCategoryInListFragment>>()\n  const categories = getCategories(loading, () => data.categories)\n\n  const { getCategoryCreateRoute } = useMenuRouting()\n\n  return (\n    <StyledCategoryList>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <MenuCreateButton routeTo={getCategoryCreateRoute(categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories || []}\n        onToggle={onVisibilityToogle}\n        isSortable={true}\n        showHeader={false}\n        fullHeight={true}\n        showVisibilityColumn={true}\n        onSort={onSort}\n      >\n        <Column\n          dataKey=\"origins\"\n          width={300}\n          className=\"origins\"\n          cellRenderer={renderOrigins}\n          style={{ fontSize: '0.8rem' }}\n        />\n      </CategoryListTable>\n    </StyledCategoryList>\n  )\n}\n\nexport default observer(CategoryList)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { ROUTE_SETTINGS } from '../../settings/settings.routes'\nimport { MenuGuideDownload } from '../molecules/MenuGuideDownload'\nimport CategoryList from '../organisms/CategoryList'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.FC = () => (\n  <FullPageLayout\n    pageTitle={i18n.t`Category overview`}\n    useBackButton\n    backRoute={ROUTE_SETTINGS}\n  >\n    <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuGuideDownload />\n          </FlexColumn>\n        </FlexRowSingle>\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </FullPageLayout>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0.5rem;\n  top: 0.5rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import { useXFieldState } from '@speedlo/xform'\n\nimport { TMenuItemType } from '../menu.types'\n\nexport function useMenuItemType() {\n  const field = useXFieldState<TMenuItemType>('itemType')\n  return field.value\n}\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { useMenuItemType } from '../hooks/useMenuItemType'\n\ninterface IProps {\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsMenuItemType: React.FC<IProps> = ({\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  const itemType = useMenuItemType()\n  if (\n    (isMain === true && itemType === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && itemType === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && itemType === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FormSubmitButton } from '../../../components/forms/FormSubmitButton'\nimport { useCanMutate } from '../../../hooks/useAccessGuard'\n\ninterface IProps {\n  isCreate: boolean\n  createMutation: string\n  updateMutation: string\n}\n\nexport const MenuSubmitButton: React.FC<IProps> = ({\n  isCreate,\n  createMutation,\n  updateMutation,\n}) => {\n  const canSubmit = useCanMutate(isCreate ? createMutation : updateMutation)\n  if (!canSubmit) {\n    return null\n  }\n\n  return (\n    <FormSubmitButton>\n      {isCreate ? <Trans>Create</Trans> : <Trans>Save</Trans>}\n    </FormSubmitButton>\n  )\n}\n","import { TValidationSchema, XFormRender } from '@speedlo/xform'\nimport React from 'react'\n\nimport { useFormLoader } from '../../../components/forms/useFormLoader'\n\ninterface IProps<TValues> {\n  isCreate: boolean\n  initialValues: TValues\n  loadUpdateValues(values: TValues): Promise<Partial<TValues> | undefined>\n  loadCreateDefaults?(values: TValues): Promise<Partial<TValues> | undefined>\n  onCreate(values: TValues): Promise<any>\n  onUpdate(values: TValues): Promise<any>\n  createSuccessMessage?: string\n  updateSuccessMessage?: string\n  successRedirectPath?: string\n  validationSchema: TValidationSchema\n  children: ReactNode | ReactNode[]\n}\n\nexport function MenuFormLoader<TValues>({\n  isCreate,\n  initialValues,\n  loadCreateDefaults,\n  loadUpdateValues,\n  onCreate,\n  onUpdate,\n  createSuccessMessage,\n  updateSuccessMessage,\n  successRedirectPath,\n  validationSchema,\n  children,\n}: IProps<TValues>) {\n  const xform = useFormLoader({\n    initialValues,\n    validationSchema,\n    onSubmit: isCreate ? onCreate : onUpdate,\n    loadValues: isCreate ? loadCreateDefaults : loadUpdateValues,\n    submitMessage: isCreate ? createSuccessMessage : updateSuccessMessage,\n    submitRedirectPath: successRedirectPath,\n  })\n  return <XFormRender xform={xform}>{children}</XFormRender>\n}\n","import { useXFieldState } from '@speedlo/xform'\n\nexport const isCreateId = (id: ID) => id === 'NEW'\n\nexport function useMenuItemId() {\n  const field = useXFieldState<ID>('id')\n  return field.value\n}\n","import { RM } from '@speedlo/tools'\nimport { useXFieldState } from '@speedlo/xform'\n\nimport { LanguageEnum } from '../../../graph/generated'\n\nconst byLanguage = RM.propEq('language')\n\nexport interface WithLanguage {\n  language: LanguageEnum\n}\n\nexport interface WithTranslations<T extends WithLanguage> {\n  translations: T[]\n}\n\nexport function useMenuTranslations() {\n  const field = useXFieldState<WithLanguage[]>('translations')\n  const translations = field.value\n\n  const findTranslation = <T extends WithLanguage>(language: LanguageEnum) => {\n    return (\n      translations && (translations.find(byLanguage(language)) as T | undefined)\n    )\n  }\n\n  const getTranslation = <T extends WithLanguage>(\n    language: LanguageEnum,\n  ): T | undefined => {\n    return findTranslation(language)\n  }\n\n  const getTranslationOrCreate = <T extends WithLanguage>(\n    language: LanguageEnum,\n    create: () => Omit<T, 'language'>,\n  ): T => {\n    const translation = findTranslation<T>(language)\n    if (!translation) {\n      translations.push({ language, ...create() })\n      return getTranslation<T>(language)!\n    }\n    return translation\n  }\n\n  const hasTranslation = (language: LanguageEnum) => {\n    return !!findTranslation(language)\n  }\n\n  return { hasTranslation, getTranslation, getTranslationOrCreate }\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { LanguageEnum } from '../../../graph/generated'\nimport { useMenuModel } from '../hooks/useMenu'\nimport { isCreateId, useMenuItemId } from '../hooks/useMenuItemId'\nimport { useMenuTranslations } from '../hooks/useMenuTranslations'\n\ntype TProps = NoChildren & {\n  loadTranslations(language: LanguageEnum): Promise<object | undefined>\n}\n\nexport const MenuTranslationLoader = observer<TProps>(\n  ({ loadTranslations }) => {\n    const menuModel = useMenuModel()\n    const isCreate = isCreateId(useMenuItemId())\n    const { hasTranslation, getTranslationOrCreate } = useMenuTranslations()\n\n    React.useEffect(() => {\n      if (\n        menuModel.branch &&\n        !menuModel.branch.supportedLanguages.includes(menuModel.currentLanguage)\n      ) {\n        menuModel.setLanguage(menuModel.defaultLanguage)\n      }\n    }, [menuModel])\n\n    if (menuModel.isDefaultLanguage || isCreate) {\n      return null\n    }\n\n    // do not override existing translation\n    if (hasTranslation(menuModel.currentLanguage)) {\n      return null\n    }\n\n    loadTranslations(menuModel.currentLanguage).then((translated = {}) => {\n      Object.assign(\n        getTranslationOrCreate(menuModel.currentLanguage, () => translated),\n        translated,\n      )\n    })\n\n    return null\n  },\n)\n","import { idProp } from '@speedlo/tools'\nimport { useObjectValidation } from '@speedlo/xform'\nimport React from 'react'\n\nimport {\n  useExecutableQMenuCategoryForm,\n  useExecutableQMenuCategoryFormTrans,\n  useMMenuCategoryCreate,\n  useMMenuCategoryUpdate,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { LanguageEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { useMenuModel } from '../hooks/useMenu'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { ROUTE_MENU_CATEGORY } from '../menu.routes'\nimport { TCategoryFormValues } from '../menu.types'\nimport { MenuFormLoader } from '../molecules/MenuFormLoader'\nimport { MenuTranslationLoader } from '../molecules/MenuTranslationLoader'\n\ninterface IProps {\n  isCreate: boolean\n  categoryId: ID\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport const CategoryFormLoader: React.FC<IProps> = ({\n  isCreate,\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menuModel = useMenuModel()\n  const { redirectToCategoryList } = useMenuRouting()\n\n  const validationSchema = useObjectValidation(yup => ({\n    nameLabel: yup\n      .string()\n      .required(i18n.t`Category name in default language must be entered.`),\n  }))\n\n  const [queryCategory] = useExecutableQMenuCategoryForm()\n  const loadUpdateValues = React.useCallback(\n    async (values: TCategoryFormValues) => {\n      const result = await queryCategory(\n        { categoryId: categoryId!, language: menuModel.defaultLanguage },\n        { fetchPolicy: 'no-cache' },\n      )\n      if (result === null) {\n        redirectToCategoryList()\n        return values\n      }\n      return {\n        ...result.category,\n        itemType: categoryType,\n        origins: [...result.category.origins],\n      }\n    },\n    [\n      categoryId,\n      categoryType,\n      menuModel.defaultLanguage,\n      queryCategory,\n      redirectToCategoryList,\n    ],\n  )\n\n  const [updateCategory] = useMMenuCategoryUpdate()\n  const executeUpdate = React.useCallback(\n    (categoryId: ID, values: TCategoryFormValues) =>\n      updateCategory({\n        categoryId,\n        category: {\n          ...getWriteVariables(values),\n          translations: values.translations,\n        },\n      }),\n    [updateCategory],\n  )\n\n  const onUpdate = React.useCallback(\n    (values: TCategoryFormValues) => executeUpdate(categoryId, values),\n    [categoryId, executeUpdate],\n  )\n\n  const [createCategory] = useMMenuCategoryCreate()\n  const onCreate = React.useCallback(\n    async (values: TCategoryFormValues) => {\n      const result = await createCategory({\n        category: {\n          companyBranch: menuModel.branchId,\n          wareCategoryType: categoryType,\n          ...getWriteVariables(values),\n        },\n      })\n      if (result && values.translations && values.translations.length > 0) {\n        const categoryId = result.createCategory.id\n        executeUpdate(categoryId, values)\n      }\n    },\n    [categoryType, createCategory, executeUpdate, menuModel],\n  )\n\n  const [queryTranslations] = useExecutableQMenuCategoryFormTrans()\n  const loadTranslations = React.useCallback(\n    async (language: LanguageEnum) => {\n      const result = await queryTranslations(\n        { categoryId, language },\n        { fetchPolicy: 'no-cache' },\n      )\n      if (result === null) {\n        return\n      }\n      const { nameLabel, internalNoteLabel } = result.category\n      return { nameLabel, internalNoteLabel }\n    },\n    [categoryId, queryTranslations],\n  )\n\n  return (\n    <MenuFormLoader<TCategoryFormValues>\n      isCreate={isCreate}\n      onCreate={onCreate}\n      onUpdate={onUpdate}\n      initialValues={getDefaults(categoryType)}\n      loadUpdateValues={loadUpdateValues}\n      validationSchema={validationSchema}\n      successRedirectPath={ROUTE_MENU_CATEGORY}\n    >\n      <>\n        <MenuTranslationLoader loadTranslations={loadTranslations} />\n        {children}\n      </>\n    </MenuFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    itemType: categoryType,\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    minCount: 0,\n    maxCount: 0,\n    recipes: [],\n    origins: [],\n    translations: [],\n  }\n}\n\nfunction getWriteVariables(formValues: TCategoryFormValues) {\n  return {\n    nameLabel: formValues.nameLabel!,\n    internalNoteLabel: formValues.internalNoteLabel,\n    enabled: formValues.visible,\n    pictogram: formValues.pictogram,\n    recipes: formValues.recipes.map(idProp),\n    minCount: formValues.minCount,\n    maxCount: formValues.maxCount,\n    orderOriginCategories: formValues.origins,\n  }\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useXField, useXFormState, XFieldName } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useAccessGuard } from '../../hooks/useAccessGuard'\nimport { TouchButtonDelete } from '../../molecules/TouchButtonDelete'\n\ntype TProps = NoChildren & {\n  fieldName?: XFieldName\n  mutationName?: string\n  confirmText: string\n  onDelete(id: ID): Promise<any>\n}\n\nexport const FormDeleteButton = observer<TProps>(\n  ({ fieldName = 'id', mutationName, confirmText, onDelete }) => {\n    const field = useXField<ID>(fieldName)\n    const canDelete = useAccessGuard([], mutationName ? [mutationName] : [])\n\n    const { history } = useRouterContext()\n    const { isSubmitting } = useXFormState()\n\n    if (!canDelete || field.value === 'NEW') {\n      return null\n    }\n\n    return (\n      <TouchButtonDelete\n        type=\"button\"\n        disabled={isSubmitting}\n        confirmText={confirmText}\n        onDelete={async () => {\n          await onDelete(field.value)\n          history.goBack()\n        }}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../../../app/Responsive'\nimport { Spacing } from '../../../styling'\n\ninterface IStyledProps {\n  primaryColumnWidth?: string\n  secondaryColumnWidth?: string\n}\n\ninterface IProps extends IStyledProps {\n  contentPrimary: React.ReactNode\n  contentSecondary?: React.ReactNode\n  contentTopRight?: React.ReactNode\n  contentBottomRight?: React.ReactNode\n}\n\nconst StyledFormLayoutGrid = styled.div<IStyledProps>`\n  display: grid;\n  margin: -${Spacing.Middle};\n  grid-column-gap: ${Spacing.Middle};\n  grid-template-columns: ${Spacing.Middle} ${({ primaryColumnWidth }) =>\n      primaryColumnWidth} ${({ secondaryColumnWidth }) => secondaryColumnWidth} auto;\n  grid-template-rows: ${Spacing.Middle} auto 1fr auto ${Spacing.Middle};\n  grid-template-areas:\n    '. .              .                contentTopRight'\n    '. contentPrimary contentSecondary contentTopRight'\n    '. contentPrimary contentSecondary .'\n    '. contentPrimary contentSecondary contentBottomRight'\n    '. .              .                contentBottomRight';\n\n  .contentPrimary {\n    grid-area: contentPrimary;\n  }\n  .contentSecondary {\n    grid-area: contentSecondary;\n  }\n  .contentTopRight {\n    grid-area: contentTopRight;\n    justify-self: end;\n    align-self: start;\n  }\n  .contentBottomRight {\n    grid-area: contentBottomRight;\n    justify-self: end;\n    align-self: end;\n  }\n\n  ${mediaMobile`\n    grid-template-columns: ${Spacing.Middle} 1fr ${Spacing.Middle};\n    grid-template-rows: auto auto auto auto;\n    grid-row-gap: ${Spacing.Middle};\n    grid-template-areas:\n      '. contentTopRight    contentTopRight'\n      '. contentPrimary     .'\n      '. contentSecondary   .'\n      '. contentBottomRight contentBottomRight'\n  `};\n`\n\nexport const FormLayoutGrid: React.FC<IProps> = ({\n  contentPrimary,\n  contentSecondary,\n  contentTopRight,\n  contentBottomRight,\n  primaryColumnWidth = '1fr',\n  secondaryColumnWidth = '0',\n}) => {\n  return (\n    <StyledFormLayoutGrid\n      primaryColumnWidth={primaryColumnWidth}\n      secondaryColumnWidth={secondaryColumnWidth}\n    >\n      <div className=\"contentPrimary\">{contentPrimary}</div>\n      <div className=\"contentSecondary\">{contentSecondary}</div>\n      <div className=\"contentTopRight\">{contentTopRight}</div>\n      <div className=\"contentBottomRight\">{contentBottomRight}</div>\n    </StyledFormLayoutGrid>\n  )\n}\n","import { RM } from '@speedlo/tools'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FormDropdown } from '../../../components/forms/FormDropdown'\nimport {\n  QMenuCategoryOriginsOrigins,\n  useQMenuCategoryOrigins,\n} from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\nexport const CategoryOriginsField: React.FC = () => {\n  const { data, loading } = useQMenuCategoryOrigins()\n  return (\n    <IconLine label={i18n.t`cat. origins`} labelWidth={7}>\n      <FormDropdown<QMenuCategoryOriginsOrigins>\n        fieldName=\"origins\"\n        isMulti={true}\n        isLoading={loading}\n        isSearchable={true}\n        options={loading ? [] : (data.origins as any)}\n        getOptionLabel={RM.prop('code')}\n        getOptionValue={RM.prop('enum')}\n      />\n    </IconLine>\n  )\n}\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport { useXField } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { TCategoryFormValues } from '../menu.types'\n\ninterface IProps {}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const CategoryPictogramSelect: React.FC<IProps> = () => {\n  const field = useXField<TCategoryFormValues['pictogram']>('pictogram')\n\n  return useObserver(() => (\n    <SelectControl<IFormValue>\n      value={field.value ? { pictogram: field.value } : null}\n      onChange={value => {\n        if (value) {\n          field.setValue((value as IFormValue).pictogram)\n        }\n      }}\n      options={availablePictograms.map(pictogram => ({ pictogram }))}\n      getOptionValue={RM.prop('pictogram')}\n      formatOptionLabel={({ pictogram }) => (\n        <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n      )}\n      components={{\n        SingleValue: ({ data }) => (\n          <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n        ),\n      }}\n      styles={{\n        container: base => ({ ...base, width: '8rem' }),\n        menuList: base => ({ ...base, maxHeight: '35rem' }),\n      }}\n      isClearable={false}\n      isSearchable={false}\n      minWidth={8}\n    />\n  ))\n}\n","import { getFlag } from '@speedlo/assets'\nimport { useXFieldForInput, useXFormState, XFieldName } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { StyledFormInput } from '../../../atoms/FormInputStyled'\nimport { i18n } from '../../../i18n'\nimport { useMenuModel } from '../hooks/useMenu'\nimport { useMenuTranslations } from '../hooks/useMenuTranslations'\n\ninterface IProps {\n  fieldName: XFieldName\n  placeholder?: string\n}\nconst StyledMenuTranslationInput = styled.div`\n  position: relative;\n\n  .original {\n    font-size: 0.9rem;\n    padding: 0.3rem 0;\n    opacity: 0.7;\n  }\n\n  .original img {\n    width: 1.5rem;\n    margin: 0 0.6rem;\n  }\n\n  .current-language {\n    width: 1.5rem;\n    position: absolute;\n    right: 0.5rem;\n    top: 0.8rem;\n    border: 1px #aaa solid;\n    box-sizing: content-box;\n  }\n`\n\nexport const MenuTranslationInput = observer<IProps>(\n  ({ fieldName, placeholder }) => {\n    const { isSubmitting } = useXFormState()\n    const [field, getFieldProps] = useXFieldForInput(fieldName)\n    const menuModel = useMenuModel()\n\n    const { getTranslation, getTranslationOrCreate } = useMenuTranslations()\n\n    const onChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n      const value = ev.target.value\n      const translation = getTranslationOrCreate(\n        menuModel.currentLanguage,\n        () => ({}),\n      )\n      translation[field.name] = value\n    }\n\n    const isTranslating = !menuModel.isDefaultLanguage\n\n    const translation = getTranslation(menuModel.currentLanguage)\n    const value = isTranslating\n      ? translation && translation[field.name]\n      : field.value\n\n    const fieldProps = getFieldProps()\n\n    return (\n      <StyledMenuTranslationInput>\n        <StyledFormInput\n          {...fieldProps}\n          disabled={isSubmitting}\n          value={value || ''}\n          onChange={isTranslating ? onChange : fieldProps.onChange}\n          inputFullWidth={true}\n          invalid={!isTranslating && field.touched && field.hasError}\n          placeholder={placeholder}\n        />\n        <img\n          className=\"current-language\"\n          src={getFlag(menuModel.currentLanguage)}\n          alt=\"translation\"\n        />\n        {isTranslating && (\n          <div\n            className=\"original\"\n            onClick={() => menuModel.setLanguage(menuModel.defaultLanguage)}\n          >\n            <img src={getFlag(menuModel.defaultLanguage)} alt=\"original text\" />\n            {field.value || <i>{i18n.t`No text is filled`}</i>}\n          </div>\n        )}\n      </StyledMenuTranslationInput>\n    )\n  },\n)\n","import { Trans } from '@lingui/macro'\nimport { XFieldName } from '@speedlo/xform'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FormInput } from '../../../components/forms/FormInput'\nimport { MenuTranslationInput } from '../atoms/MenuTranslationInput'\n\ninterface IProps {\n  fieldName?: XFieldName\n  label?: string\n  placeholder?: string\n  localized?: boolean\n}\n\nexport const MenuInternalNoteInput: React.FC<IProps> = ({\n  fieldName = 'internalNote',\n  label = <Trans>Internal note</Trans>,\n  placeholder,\n  localized = false,\n}) => {\n  const props = {\n    fieldName,\n    placeholder,\n    fullWidth: true,\n  }\n  return (\n    <IconLine label={label} labelWidth={7}>\n      {localized ? (\n        <MenuTranslationInput {...props} />\n      ) : (\n        <FormInput {...props} />\n      )}\n    </IconLine>\n  )\n}\n","import { RM } from '@speedlo/tools'\nimport { LanguagePicker } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { Colors } from '../../../styling'\nimport { useMenuModel } from '../hooks/useMenu'\n\ninterface IProps {}\n\nconst StyledLanguagePicker = styled(LanguagePicker)`\n  transform: scale(2) translateY(0.5rem);\n  transform-origin: right;\n  height: 2.5rem;\n`\n\nexport const MenuLanguageSwitch = observer<IProps>(() => {\n  const menuModel = useMenuModel()\n  return (\n    <div>\n      <StyledLanguagePicker\n        availableLanguages={menuModel.supportedLanguages}\n        selectedLanguage={menuModel.currentLanguage}\n        onChange={menuModel.setLanguage}\n        formatLanguage={RM.identity}\n        arrowColor={Colors.greyMiddle}\n      />\n    </div>\n  )\n})\n","import { Label } from '@material-ui/icons'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FormInput, FormInputProps } from '../../../components/forms/FormInput'\nimport { Spacing } from '../../../styling'\nimport { MenuTranslationInput } from '../atoms/MenuTranslationInput'\n\ninterface IProps extends Partial<FormInputProps> {\n  localized?: boolean\n}\n\nexport const MenuNameInput: React.FC<IProps> = ({\n  fieldName = 'nameLabel',\n  localized = false,\n  ...rest\n}) => {\n  const props = {\n    fieldName,\n    ...rest,\n  }\n  return (\n    <IconLine icon={Label} labelWidth={Spacing.DefaultLabelWidth}>\n      {localized ? (\n        <MenuTranslationInput {...props} />\n      ) : (\n        <FormInput {...props} />\n      )}\n    </IconLine>\n  )\n}\n","import React from 'react'\n\nimport { FormGrid } from '../../../atoms/FormGrid'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FormDeleteButton } from '../../../components/forms/FormDeleteButton'\nimport { FormCheckbox } from '../../../components/forms/FormInputCheckbox'\nimport { useMMenuCategoryDelete } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FormLayoutGrid } from '../atoms/FormLayoutGrid'\nimport { IsMenuItemType } from '../atoms/IsMenuItemType'\nimport { CategoryOriginsField } from '../molecules/CategoryOriginsField'\nimport { CategoryPictogramSelect } from '../molecules/CategoryPictogramSelect'\nimport { MenuInternalNoteInput } from '../molecules/MenuInternalNoteField'\nimport { MenuLanguageSwitch } from '../molecules/MenuLanguageSwitch'\nimport { MenuNameInput } from '../molecules/MenuNameInput'\n\ninterface IProps {}\n\nexport const CategoryFormPrimary: React.FC<IProps> = () => {\n  const [deleteCategory] = useMMenuCategoryDelete()\n  return (\n    <FormLayoutGrid\n      primaryColumnWidth=\"minmax(10rem, 45rem)\"\n      secondaryColumnWidth=\"14rem\"\n      contentPrimary={\n        <FormGrid>\n          <MenuNameInput placeholder={i18n.t`Category name`} localized />\n          <MenuInternalNoteInput\n            placeholder={i18n.t`Category internal note`}\n            fieldName=\"internalNoteLabel\"\n            localized\n          />\n          <CategoryOriginsField />\n          <IconLine>\n            <FormCheckbox\n              fieldName=\"visible\"\n              label={i18n.t`To show this category`}\n            />\n          </IconLine>\n        </FormGrid>\n      }\n      contentSecondary={\n        <IsMenuItemType isMain>\n          <CategoryPictogramSelect />\n        </IsMenuItemType>\n      }\n      contentTopRight={<MenuLanguageSwitch />}\n      contentBottomRight={\n        <FormDeleteButton\n          mutationName=\"destroyWareCategory\"\n          confirmText={i18n.t`Remove this category?`}\n          onDelete={categoryId => deleteCategory({ categoryId })}\n        />\n      }\n    />\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\n\nimport { useRoot } from '../atoms/RootProvider'\n\nexport function useSettingsBranch() {\n  const { settings } = useRoot()\n  return useObserver(() => settings.branchId)\n}\n","import { useStateRef } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n  isLoading?: boolean\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: Maybe<string> }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    isLoading = false,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(() => {\n    const selected = getSelected()\n    if (selected !== null) {\n      onAdd(selected)\n      setSelected(null)\n    }\n  }, [getSelected, onAdd, setSelected])\n\n  const onKeyDown = useCallback(\n    (ev: React.KeyboardEvent<HTMLElement>) => {\n      if (ev.key === 'Enter') {\n        onConfirm()\n      }\n    },\n    [onConfirm],\n  )\n\n  const onSelect = useCallback(\n    option => {\n      setSelected(option || null)\n    },\n    [setSelected],\n  )\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isLoading={isLoading}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.propOr('', 'nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import React from 'react'\n\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { getPriceTypesLabels } from '../menu.labels'\n\nexport const priceTypes = [\n  WarePriceTypeEnum.Delivery,\n  WarePriceTypeEnum.Inhouse,\n]\n\nexport function usePriceType() {\n  const priceTypeLabels = React.useMemo(getPriceTypesLabels, [])\n  return {\n    priceTypes,\n    priceTypeLabels,\n  }\n}\n","import { idPropEq } from '@speedlo/tools'\nimport { useXField, useXFormState } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, useResponsive } from '../../../app/Responsive'\nimport { DataList } from '../../../atoms/DataList'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { Price } from '../../../atoms/Price'\nimport {\n  FMenuCategoryInFormRecipes,\n  FMenuRecipeInListFragment,\n  useQMenuRecipeList,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { useSettingsBranch } from '../../../hooks/useSettingsBranch'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { useMenuItemType } from '../hooks/useMenuItemType'\nimport { usePriceType } from '../hooks/usePriceType'\n\ninterface IProps {}\n\nconst StyledCategoryRecipesView = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n\n  & .fixed-row {\n    flex: 0 0 auto;\n  }\n  & .move-cell {\n    ${mediaDesktop`\n      cursor: move;\n    `}\n  }\n`\n\nconst StyledFormStretchedRow = styled.div`\n  flex: 1 1 0;\n  margin: 1rem 0 0 1rem;\n`\n\nconst SortableRecipes = SortableContainer(StyledFormStretchedRow)\n\nconst StyledRecipeRow = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: ${Spacing.ButtonColumnWidthPx}px 100px 3fr 1fr 1fr 50px;\n`\n\ntype TCategoryRecipe = FMenuCategoryInFormRecipes\n\ninterface IRecipeRow {\n  recipe: TCategoryRecipe\n  onRemove(): void\n}\n\nconst SortableRecipe = SortableElement(({ recipe, onRemove }: IRecipeRow) => {\n  const { priceTypes, priceTypeLabels } = usePriceType()\n  const prices = priceTypes.map(priceType => {\n    const foundPrice = recipe.prices.find(\n      RM.pathEq(['priceType', 'enum'], priceType),\n    )\n    return (\n      <div className=\"move-cell\" key={priceType}>\n        <NoteText>{priceTypeLabels[priceType]}</NoteText>\n        {foundPrice ? (\n          <Price currencyCode={foundPrice.price.currency.code}>\n            {foundPrice.price.value}\n          </Price>\n        ) : (\n          <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n        )}\n      </div>\n    )\n  })\n\n  return (\n    <StyledRecipeRow>\n      <div>\n        <TouchButtonRemove onClick={onRemove} />\n      </div>\n      <div className=\"move-cell\">{recipe.code}</div>\n      <div className=\"move-cell\">\n        {recipe.nameLabel}\n        <NoteText>{recipe.internalNote || ''}</NoteText>\n      </div>\n      {prices}\n      <DragHandle />\n    </StyledRecipeRow>\n  )\n})\n\nexport const CategoryRecipesView: React.FC<IProps> = () => {\n  const branchId = useSettingsBranch()\n  const categoryType = useMenuItemType()\n\n  const { data, loading } = useQMenuRecipeList({\n    branchId,\n    categoryType,\n  })\n\n  const field = useXField<TCategoryRecipe[]>('recipes')\n\n  const onHandleSorting: SortEndHandler = React.useCallback(\n    async ({ newIndex, oldIndex }) => {\n      if (newIndex === oldIndex) {\n        return\n      }\n      field.setValue(arrayMove(field.value, oldIndex, newIndex))\n    },\n    [field],\n  )\n\n  const unselectedRecipesOnly = RM.differenceWith<\n    FMenuRecipeInListFragment,\n    TCategoryRecipe\n  >(RM.eqProps('id'))\n\n  const { isDesktop } = useResponsive()\n  const formState = useXFormState()\n\n  return useObserver(() => (\n    <StyledCategoryRecipesView>\n      <div className=\"fixed-row\">\n        <MenuSuggestionPanel<TCategoryRecipe>\n          isLoading={loading}\n          isDisabled={formState.isSubmitting}\n          options={\n            loading ? [] : unselectedRecipesOnly(data.recipes, field.value)\n          }\n          onAdd={addedRecipe => field.value.push(addedRecipe)}\n          getOptionLabel={({ nameLabel, code }) => `${code} - ${nameLabel}`}\n        />\n      </div>\n      <SortableRecipes\n        lockAxis=\"y\"\n        lockToContainerEdges={true}\n        onSortEnd={onHandleSorting}\n        useDragHandle={!isDesktop}\n      >\n        <DataList\n          items={field.value}\n          heightStretch={true}\n          rowHeight={60}\n          renderItem={(recipe, index) => (\n            <SortableRecipe\n              recipe={recipe}\n              onRemove={() => {\n                field.setValue(RM.reject(idPropEq(recipe.id), field.value))\n              }}\n              index={index}\n            />\n          )}\n        />\n      </SortableRecipes>\n    </StyledCategoryRecipesView>\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { StyledCheckbox } from '../../../atoms/StyledCheckbox'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  id: string\n  count: number\n  label: ReactNode | string\n  enabled: boolean\n  onChange(count: number): void\n}\n\nconst StyledCategoryRequirementControl = styled.div`\n  display: flex;\n  align-items: center;\n  & > label {\n    min-width: 5rem;\n  }\n  & > * {\n    margin: 0.2rem 0.5rem;\n  }\n  input.count {\n    font-size: 1.5rem;\n    line-height: 1.5rem;\n    text-align: center;\n  }\n`\n\nexport const CategoryRequirementControl: React.FC<IProps> = ({\n  count,\n  label,\n  enabled,\n  onChange,\n  id,\n}) => {\n  const countRef = React.useRef(count)\n  return (\n    <StyledCategoryRequirementControl>\n      <label htmlFor={id}>{label}</label>\n      <Sizer width={3}>\n        <FormInputStyled\n          id={id}\n          value={count === 0 ? '' : count}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              onChange(Number.parseInt(ev.target.value, 10))\n            }\n          }}\n          onFocus={ev => {\n            ev.target.select()\n          }}\n          disabled={count === 0 || !enabled}\n          inputFullWidth={true}\n          type=\"tel\"\n          pattern=\"^[1-9]\\d*$\"\n          className=\"count\"\n        />\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton\n          disabled={!enabled || count <= 0}\n          onClick={() => onChange(count - 1)}\n        >\n          ➖\n        </TouchButton>\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton disabled={!enabled} onClick={() => onChange(count + 1)}>\n          ➕\n        </TouchButton>\n      </Sizer>\n      <div>\n        <StyledCheckbox>\n          <input\n            type=\"checkbox\"\n            id={`${id}-nolimit`}\n            checked={count === 0}\n            disabled={!enabled}\n            onChange={ev => {\n              if (count === 0) {\n                onChange(countRef.current || 1)\n              } else {\n                countRef.current = count\n                onChange(0)\n              }\n            }}\n          />\n          <label htmlFor={`${id}-nolimit`}>\n            <Trans>Unlimited</Trans>\n          </label>\n        </StyledCheckbox>\n      </div>\n    </StyledCategoryRequirementControl>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useAutorun } from '@speedlo/hooks'\nimport { useXField } from '@speedlo/xform'\nimport _ from 'lodash'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { CategoryRequirementControl } from '../molecules/CategoryRequirementControl'\n\ninterface IRequirement {\n  label: string\n  min?: number\n  max?: number\n}\n\nexport const getRulesMap = (): Record<string, IRequirement> => ({\n  noLimit: {\n    label: i18n.t`No limitation`,\n    min: 0,\n    max: 0,\n  },\n  optional: {\n    label: i18n.t`One at most`,\n    min: 0,\n    max: 1,\n  },\n  required: {\n    label: i18n.t`One at least`,\n    min: 1,\n    max: 0,\n  },\n  onlyOne: {\n    label: i18n.t`Exactly one`,\n    min: 1,\n    max: 1,\n  },\n  custom: {\n    label: i18n.t`Custom range`,\n  },\n})\n\ntype TRule = keyof ReturnType<typeof getRulesMap>\n\nexport const CategoryRequirementsForm = observer(() => {\n  const ruleMap = React.useMemo(getRulesMap, [])\n\n  const state = useLocalStore(() => ({\n    currentRule: 'noLimit' as TRule,\n  }))\n\n  const setRule = (rule: TRule) => {\n    state.currentRule = rule\n  }\n\n  const minCount = useXField<number>('minCount')\n  const maxCount = useXField<number>('maxCount')\n\n  useAutorun(() => {\n    if (state.currentRule !== 'custom') {\n      const found = _.findKey(\n        ruleMap,\n        ({ min, max }) => min === minCount.value && max === maxCount.value,\n      )\n      if (found) {\n        setRule(found)\n      }\n    }\n  })\n\n  return (\n    <>\n      <SelectControlFlat<TRule>\n        items={Object.keys(ruleMap) as RoA<TRule>}\n        formatItem={req => ruleMap[req].label}\n        onSingleSelection={selectedRule => {\n          if (selectedRule) {\n            setRule(selectedRule)\n            const rule = ruleMap[selectedRule]\n            minCount.setValue(rule.min || 0)\n            maxCount.setValue(rule.max || 0)\n          }\n        }}\n        selectedItem={state.currentRule}\n      />\n      <CategoryRequirementControl\n        id=\"minCount\"\n        count={minCount.value}\n        label={<Trans>Minimum</Trans>}\n        enabled={state.currentRule === 'custom'}\n        onChange={minCount.setValue}\n      />\n      <CategoryRequirementControl\n        id=\"maxCount\"\n        count={maxCount.value}\n        label={<Trans>Maximum</Trans>}\n        enabled={state.currentRule === 'custom'}\n        onChange={maxCount.setValue}\n      />\n    </>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router'\nimport styled from 'styled-components/macro'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsMenuItemType } from '../atoms/IsMenuItemType'\nimport { MenuSubmitButton } from '../atoms/MenuSubmitButton'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { getCategoryTypeLabel } from '../menu.labels'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryFormPrimary } from '../organisms/CategoryFormPrimary'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\nimport { CategoryRequirementsForm } from '../organisms/CategoryRequirementsForm'\n\ninterface IProps extends RouteComponentProps<{ categoryId: ID }> {}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.FC<IProps> = ({ match }) => {\n  const { categoryId } = match.params\n  const {\n    isCreate,\n    itemType: categoryType,\n    redirectToCategoryList,\n  } = useMenuRouting(categoryId)\n\n  if (categoryType === null) {\n    redirectToCategoryList()\n    return null\n  }\n\n  return (\n    <CategoryFormLoader\n      isCreate={isCreate}\n      categoryId={categoryId}\n      categoryType={categoryType}\n    >\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <PageLayoutFullHeightItem withScrollArea={true}>\n          <FormContainer>\n            <FormFixedRow>\n              <Card>\n                <CategoryFormPrimary />\n              </Card>\n            </FormFixedRow>\n            <IsMenuItemType isSideDish>\n              <FormFixedRow>\n                <Card>\n                  <Headline>\n                    <Trans>Required amounts of recipes to be picked</Trans>\n                  </Headline>\n                  <CategoryRequirementsForm />\n                </Card>\n              </FormFixedRow>\n            </IsMenuItemType>\n            <FormStretchedRow>\n              <Card stretchToParent={true} minHeight={25}>\n                <Headline>\n                  <Trans>Recipes assigned to this category</Trans>\n                </Headline>\n                <CategoryRecipesView />\n              </Card>\n            </FormStretchedRow>\n          </FormContainer>\n        </PageLayoutFullHeightItem>\n        <TopRightButtonContainer>\n          <MenuSubmitButton\n            isCreate={isCreate}\n            createMutation=\"createWareCategory\"\n            updateMutation=\"updateWareCategory\"\n          />\n        </TopRightButtonContainer>\n      </FullPageLayout>\n    </CategoryFormLoader>\n  )\n}\n","import { useXFormState } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FMenuCategoryInListFragment,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: RoA<TCategory>\n}\n\ntype TCategory = FMenuCategoryInListFragment\n\nexport const CategorySuggestionPanel = observer<IProps>(\n  ({ categoryType, currentCategories, addButtonText, onAdd }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuCategoryList({\n      branchId: settings.branchId,\n      categoryType,\n    })\n\n    const categories = (data && data.categories) || []\n\n    const { isSubmitting } = useXFormState()\n\n    return (\n      <MenuSuggestionPanel<TCategory>\n        isLoading={loading}\n        isDisabled={isSubmitting}\n        options={RM.without(currentCategories, categories)}\n        addButtonText={addButtonText}\n        onAdd={onAdd}\n      />\n    )\n  },\n)\n","import { idPropEq } from '@speedlo/tools'\nimport { useXField, XFieldName } from '@speedlo/xform'\nimport { IObservableArray } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport {\n  FMenuCategoryInListFragment,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CategorySuggestionPanel } from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  fieldName: XFieldName\n}\n\ntype TCategory = FMenuCategoryInListFragment\n\nexport const RecipeCategoryView: React.FC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  fieldName,\n}) => {\n  const field = useXField<IObservableArray<TCategory>>(fieldName)\n  return useObserver(() => (\n    <>\n      <CategoryListTable\n        categories={Array.from(field.value)}\n        showRemoveColumn={true}\n        showEditColumn={false}\n        showHeader={false}\n        noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        onRemove={categoryId =>\n          field.value.remove(field.value.find(idPropEq(categoryId))!)\n        }\n      />\n      <CategorySuggestionPanel\n        addButtonText={addButtonText}\n        categoryType={categoryType}\n        currentCategories={Array.from(field.value)}\n        onAdd={addedCategory => field.value.push(addedCategory)}\n      />\n    </>\n  ))\n}\n","import { useObjectValidation } from '@speedlo/xform'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { disableBatching } from '../../../graph/createClient'\nimport {\n  InputRecipeImage,\n  LanguageEnum,\n  QMenuRecipeDefaultsDefaults,\n  QMenuRecipeFormRecipe,\n  useExecutableQMenuRecipeDefaults,\n  useExecutableQMenuRecipeForm,\n  useExecutableQMenuRecipeFormTrans,\n  useMMenuRecipeCreate,\n  useMMenuRecipeUpdate,\n  WarePriceTypeEnum,\n} from '../../../graph/generated'\nimport { parseNumber } from '../../../helpers/form'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { useMenuModel } from '../hooks/useMenu'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { priceTypes, usePriceType } from '../hooks/usePriceType'\nimport { ROUTE_MENU_RECIPE } from '../menu.routes'\nimport { TRecipeFormValues, TRecipeType } from '../menu.types'\nimport { MenuFormLoader } from '../molecules/MenuFormLoader'\nimport { MenuTranslationLoader } from '../molecules/MenuTranslationLoader'\n\ninterface IProps {\n  isCreate: boolean\n  recipeId: ID\n  recipeType: TRecipeType\n  children: ReactNode\n}\n\ntype FormValues = TRecipeFormValues\n\nexport const RecipeFormLoader: React.FC<IProps> = ({\n  isCreate,\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menuModel = useMenuModel()\n  const { redirectToRecipeList } = useMenuRouting()\n  const { priceTypeLabels } = usePriceType()\n\n  const validationSchema = useObjectValidation(yup => ({\n    nameLabel: yup\n      .string()\n      .required(i18n.t`Recipe name in default language must be entered.`),\n    code: yup.string().required(i18n.t`Recipe code must be entered.`),\n    prices: yup.object(\n      mapPriceTypes(type => {\n        const priceType = priceTypeLabels[type].toLocaleLowerCase()\n        return yup.object({\n          value: yup\n            .string()\n            .required(i18n.t`Recipe price for ${priceType} must be entered.`),\n        })\n      }),\n    ),\n  }))\n\n  const [queryDefaults] = useExecutableQMenuRecipeDefaults()\n  const loadCreateDefaults = React.useCallback(async () => {\n    const result = await queryDefaults(\n      {\n        branchId: menuModel.branchId,\n      },\n      { fetchPolicy: 'cache-first' },\n    )\n    if (result !== null) {\n      return normalizeLoadedDefaults(result.defaults)\n    }\n    return\n  }, [menuModel, queryDefaults])\n\n  const [queryRecipe] = useExecutableQMenuRecipeForm()\n  const loadUpdateValues = React.useCallback(async () => {\n    const result = await queryRecipe(\n      { recipeId: recipeId!, language: menuModel.defaultLanguage },\n      { fetchPolicy: 'no-cache' },\n    )\n    if (result === null) {\n      redirectToRecipeList()\n      return\n    }\n    return normalizeUpdateValues(result.recipe)\n  }, [menuModel.defaultLanguage, queryRecipe, recipeId, redirectToRecipeList])\n\n  const [updateRecipe] = useMMenuRecipeUpdate()\n  const executeUpdate = React.useCallback(\n    (recipeId: ID, values: FormValues) =>\n      updateRecipe(\n        {\n          recipeId,\n          recipe: {\n            ...getWriteVariables(values),\n            translations: values.translations,\n            image: getImageForUpdate(values),\n          },\n        },\n        disableBatching,\n      ),\n    [updateRecipe],\n  )\n\n  const onUpdate = React.useCallback(\n    (values: FormValues) => executeUpdate(recipeId, values),\n    [executeUpdate, recipeId],\n  )\n\n  const [createRecipe] = useMMenuRecipeCreate()\n  const onCreate = React.useCallback(\n    async (values: FormValues) => {\n      const result = await createRecipe(\n        {\n          recipe: {\n            ...getWriteVariables(values),\n            companyBranch: menuModel.branchId,\n            wareCategoryType: recipeType,\n            image: values.image,\n          },\n        },\n        disableBatching,\n      )\n      if (result && values.translations && values.translations.length > 0) {\n        const recipeId = result.recipe.id\n        executeUpdate(recipeId, values)\n      }\n    },\n    [createRecipe, executeUpdate, menuModel, recipeType],\n  )\n\n  const [queryTranslations] = useExecutableQMenuRecipeFormTrans()\n  const loadTranslations = React.useCallback(\n    async (language: LanguageEnum) => {\n      const result = await queryTranslations(\n        { recipeId, language },\n        { fetchPolicy: 'no-cache' },\n      )\n      if (result === null) {\n        return\n      }\n      const { nameLabel, descriptionLabel } = result.recipe\n      return { nameLabel, descriptionLabel }\n    },\n    [queryTranslations, recipeId],\n  )\n\n  return (\n    <MenuFormLoader<TRecipeFormValues>\n      isCreate={isCreate}\n      onCreate={onCreate}\n      onUpdate={onUpdate}\n      initialValues={getDefaults(recipeType)}\n      loadCreateDefaults={loadCreateDefaults}\n      loadUpdateValues={loadUpdateValues}\n      validationSchema={validationSchema}\n      successRedirectPath={ROUTE_MENU_RECIPE}\n    >\n      <>\n        {children}\n        <MenuTranslationLoader loadTranslations={loadTranslations} />\n      </>\n    </MenuFormLoader>\n  )\n}\n\nfunction getWriteVariables(formValues: FormValues) {\n  return {\n    code: formValues.code,\n    nameLabel: formValues.nameLabel || '',\n    internalNote: formValues.internalNote,\n    descriptionLabel: formValues.descriptionLabel,\n    enabled: formValues.visible,\n    prices: Object.keys(formValues.prices).map(priceType => ({\n      warePriceType: (priceType as unknown) as WarePriceTypeEnum,\n      price: { value: numeral(formValues.prices[priceType].value).value() },\n      vat: formValues.prices[priceType].vatId,\n    })),\n    sideDishCategories: formValues.sideDishes.map(RM.prop('id')),\n    wareCategories: formValues.categories.map(RM.prop('id')),\n    associatedRecipes: formValues.associatedRecipes.map(\n      RM.pick(['associatedRecipe', 'warePriceType']),\n    ),\n    ingredients: formValues.ingredients.map(({ stockItem, quantity }) => {\n      return { stockItem, quantity: parseNumber(quantity) }\n    }),\n  }\n}\n\nfunction getImageForUpdate({ image }: FormValues): Maybe<InputRecipeImage> {\n  if (typeof image === 'string') {\n    // image did not change, do nothing\n    return null\n  }\n  if (image === null) {\n    return {\n      delete: true,\n    }\n  }\n  return {\n    file: image,\n    delete: false,\n  }\n}\n\nfunction mapPriceTypes<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return priceTypes.reduce((result, priceType) => {\n    result[priceType] = acc(priceType)\n    return result\n  }, {}) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): FormValues {\n  return {\n    id: 'NEW',\n    itemType: recipeType,\n    visible: true,\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    internalCode: '',\n    descriptionLabel: '',\n    image: null,\n    prices: mapPriceTypes(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    associatedRecipes: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n    translations: [],\n  }\n}\n\nfunction normalizeLoadedDefaults(\n  defaults: QMenuRecipeDefaultsDefaults,\n): Partial<FormValues> {\n  const vats = defaults.vats.reduce((acc, { vatId, priceType }) => {\n    acc[priceType.enum] = vatId\n    return acc\n  }, {})\n  return {\n    prices: mapPriceTypes(priceType => ({\n      value: 0,\n      vatId: vats[priceType],\n      currencyCode: defaults.currency.code,\n    })),\n  }\n}\n\nfunction normalizeUpdateValues(\n  recipeSource: QMenuRecipeFormRecipe,\n): Partial<FormValues> {\n  return {\n    ...recipeSource,\n    itemType: recipeSource.recipeType.enum,\n    internalNote: recipeSource.internalNote || '',\n    descriptionLabel: recipeSource.descriptionLabel || '',\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel!,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: mapPriceTypes(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import { Toll } from '@material-ui/icons'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { FormInput, FormInputProps } from '../../../components/forms/FormInput'\n\ninterface IProps extends FormInputProps {}\n\nexport const MenuPriceField: React.FC<IProps> = ({ fieldName, ...props }) => (\n  <IconLine icon={Toll}>\n    <Sizer width={5}>\n      <FormInput fieldName={fieldName} fullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import { idProp } from '@speedlo/tools'\nimport { useXField, useXFormState, XFieldName } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport {\n  ISelectControlFlatProps,\n  SelectControlFlat,\n} from '../../atoms/SelectControlFlat'\n\ninterface IProps<ItemType>\n  extends Omit<\n    ISelectControlFlatProps<ItemType>,\n    | 'selectedItems'\n    | 'onMultiSelection'\n    | 'selectedItem'\n    | 'onSingleSelection'\n    | 'isMulti'\n  > {\n  fieldName: XFieldName\n  getItemId?: (item: ItemType) => ID\n}\n\nexport const FormFlatSingleSelect = <ItemType extends Record<string, unknown>>(\n  props: IProps<ItemType>,\n) => {\n  const {\n    items,\n    fieldName,\n    isClearable = false,\n    getItemId = idProp as AnyFunction,\n  } = props\n\n  const field = useXField(fieldName)\n  const formState = useXFormState()\n\n  return useObserver(() => (\n    <SelectControlFlat<ItemType>\n      selectedItem={\n        field.value && items.find(item => getItemId(item) === field.value)\n      }\n      onSingleSelection={item => {\n        field.setValue(item ? getItemId(item) : null)\n        field.setTouched()\n      }}\n      disabled={formState.isSubmitting}\n      isInvalid={field.hasError}\n      isClearable={isClearable}\n      isMulti={false}\n      {...props}\n    />\n  ))\n}\n","import { XFieldName } from '@speedlo/xform'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FormFlatSingleSelect } from '../../../components/forms/FormFlatSingleSelect'\nimport { useQMenuVats } from '../../../graph/generated'\nimport { useSettingsBranch } from '../../../hooks/useSettingsBranch'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  fieldName: XFieldName\n}\n\nexport const RecipeVatSelectField: React.FC<IProps> = ({ fieldName }) => {\n  const branchId = useSettingsBranch()\n  const { data, loading } = useQMenuVats(\n    { branchId },\n    { fetchPolicy: 'cache-first' },\n  )\n\n  if (loading) {\n    return null\n  }\n\n  return (\n    <IconLine label={`${i18n.t`VAT`}:`}>\n      <FormFlatSingleSelect\n        fieldName={fieldName}\n        items={data.vats}\n        formatItem={({ vat }) => `${vat}%`}\n      />\n    </IconLine>\n  )\n}\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menu.types'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.FC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import { useXFieldState, useXFormState } from '@speedlo/xform'\nimport { IObservableArray } from 'mobx'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport {\n  FMenuAssocRecipeFragment,\n  useQMenuRecipeFormAssoc,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { useSettingsBranch } from '../../../hooks/useSettingsBranch'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { useMenuItemId } from '../hooks/useMenuItemId'\nimport { TAssocRecipe, TPriceType } from '../menu.types'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\n\ninterface IProps {\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView = observer<IProps>(({ priceType }) => {\n  const name = 'associatedRecipes'\n\n  const recipes = useXFieldState<IObservableArray<TAssocRecipe>>(name)\n\n  const recipeId = useMenuItemId()\n  const branchId = useSettingsBranch()\n\n  const { data, loading } = useQMenuRecipeFormAssoc({ branchId })\n\n  const isPriceType = RM.propEq('warePriceType', priceType)\n  const isAssocRecipe = RM.propEq('associatedRecipe')\n\n  const priceTypeRecipes = RM.filter(isPriceType, recipes.value)\n\n  const isAssociated = (id: ID) => priceTypeRecipes.some(isAssocRecipe(id))\n\n  const rejectSuggestions = RM.reject(\n    (recipe: FMenuAssocRecipeFragment) =>\n      recipe.id === recipeId || isAssociated(recipe.id),\n  )\n\n  const onAddRecipe = React.useCallback(\n    (addedRecipe: FMenuAssocRecipeFragment) => {\n      recipes.value.push({\n        warePriceType: priceType,\n        associatedRecipe: addedRecipe.id,\n        nameLabel: addedRecipe.nameLabel!,\n        formattedPrice: '?',\n      })\n    },\n    [priceType, recipes],\n  )\n\n  const onRemoveRecipe = React.useCallback(\n    (id: ID) => {\n      recipes.value.remove(\n        recipes.value.find(RM.both(isAssocRecipe(id), isPriceType))!,\n      )\n    },\n    [isAssocRecipe, isPriceType, recipes.value],\n  )\n\n  const { isSubmitting } = useXFormState()\n\n  return (\n    <>\n      <RecipeAssocListTable\n        recipes={priceTypeRecipes}\n        onRemove={onRemoveRecipe}\n      />\n      <MenuSuggestionPanel\n        options={loading ? [] : rejectSuggestions(data.recipes)}\n        onAdd={onAddRecipe}\n        isLoading={loading}\n        isDisabled={isSubmitting}\n      />\n    </>\n  )\n})\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { FlexDiv } from '../../../atoms/FlexDiv'\nimport { Headline } from '../../../atoms/Headline'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { FormDisplayValue } from '../../../components/forms/FormDisplayValue'\nimport { IsMenuItemType } from '../atoms/IsMenuItemType'\nimport { usePriceType } from '../hooks/usePriceType'\nimport { MenuPriceField } from '../molecules/MenuPriceInput'\nimport { RecipeVatSelectField } from '../molecules/RecipeVatSelectField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {}\n\nconst FormPricingCurrencyCode = styled(FormDisplayValue)`\n  padding: 0.5rem;\n`\n\nexport const RecipeFormPricing: React.FC<IProps> = () => {\n  const { priceTypes, priceTypeLabels } = usePriceType()\n  return (\n    <>\n      {priceTypes.map(priceType => {\n        const baseName = ['prices', priceType]\n        return (\n          <Fragment key={priceType}>\n            <Headline>{priceTypeLabels[priceType]}</Headline>\n            <FlexDiv>\n              <MenuPriceField fieldName={[...baseName, 'value']} />\n              <FormPricingCurrencyCode\n                fieldName={[...baseName, 'currencyCode']}\n              />\n              <MarginBox left={5}>\n                <RecipeVatSelectField fieldName={[...baseName, 'vatId']} />\n              </MarginBox>\n            </FlexDiv>\n            <VerticalGap />\n            <IsMenuItemType isMain>\n              <RecipeAssociatedView priceType={priceType} />\n              <VerticalGap />\n            </IsMenuItemType>\n          </Fragment>\n        )\n      })}\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { FormInput } from '../../../components/forms/FormInput'\nimport { Spacing } from '../../../styling'\n\ninterface IProps {\n  placeholder?: string\n}\n\nexport const MenuCodeInput: React.FC<IProps> = ({ placeholder }) => (\n  <IconLine label={<Trans>Code</Trans>} labelWidth={Spacing.DefaultLabelWidth}>\n    <Sizer width={9}>\n      <FormInput fieldName=\"code\" fullWidth={true} placeholder={placeholder} />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FormInput } from '../../../components/forms/FormInput'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nexport const MenuIdExternalSystem: React.FC<IProps> = props => {\n  return (\n    <IconLine label={i18n.t`External ID`} labelWidth={7}>\n      <FormInput fieldName=\"internalCode\" disabled={true} />\n    </IconLine>\n  )\n}\n","import React from 'react'\n\nimport { FormCheckbox } from '../../../components/forms/FormInputCheckbox'\n\ninterface IProps {\n  label: string\n}\n\nexport const MenuVisibilityField: React.FC<IProps> = ({ label }) => {\n  return <FormCheckbox fieldName=\"visible\" label={label} />\n}\n","import { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { AllergenEnum, useQMenuAllergens } from '../../../graph/generated'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  selected: RoA<AllergenEnum>\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  color: ${Colors.greyMiddle};\n  background-color: ${Colors.white};\n  &.active {\n    color: ${Colors.black};\n    background-color: ${Colors.yellow};\n  }\n`\n\nexport const MenuAllergenIndicator: React.FC<IProps> = ({\n  selected,\n  onToggle,\n}) => {\n  const { data, loading } = useQMenuAllergens(\n    {},\n    { fetchPolicy: 'cache-first' },\n  )\n  if (loading) {\n    return null\n  }\n  return (\n    <>\n      {data.allergens.map(allergen => {\n        return (\n          <AllergenBox\n            key={allergen.enum}\n            title={allergen.code}\n            className={cn({ active: selected.includes(allergen.enum) })}\n            onClick={onToggle && (() => onToggle(allergen.enum))}\n          >\n            {allergen.category}\n          </AllergenBox>\n        )\n      })}\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ErrorOutline } from '@material-ui/icons'\nimport { useXFieldState } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { RM } from '../../../helpers/ramda'\nimport { Spacing } from '../../../styling'\nimport { MenuAllergenIndicator } from '../atoms/MenuAllergenIndicator'\nimport { TRecipeFormValues } from '../menu.types'\n\nconst StyledAllergenLabel = styled.div`\n  margin: 0.7rem 0 0 0.2rem;\n`\n\nexport const RecipeAllergenDisplay = observer(() => {\n  const field = useXFieldState<TRecipeFormValues['ingredients']>('ingredients')\n  const allergens = RM.uniq(\n    RM.flatten(RM.map(RM.prop('allergens'), field.value)),\n  )\n  return (\n    <IconLine labelWidth={Spacing.DefaultLabelWidth} icon={ErrorOutline}>\n      <StyledAllergenLabel>\n        <Trans>Allergens based on stock cards</Trans>\n      </StyledAllergenLabel>\n      <MenuAllergenIndicator selected={allergens} />\n    </IconLine>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { MenuTranslationInput } from '../atoms/MenuTranslationInput'\n\ninterface IProps {}\n\nexport const RecipeDescriptionInput: React.FC<IProps> = () => (\n  <IconLine\n    label={<Trans>Public note</Trans>}\n    labelWidth={Spacing.DefaultLabelWidth}\n  >\n    <MenuTranslationInput\n      fieldName=\"descriptionLabel\"\n      placeholder={i18n.t`Public note for customers, allergens`}\n    />\n  </IconLine>\n)\n","import { Trans } from '@lingui/macro'\nimport { useXField, useXFormState } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport styled from 'styled-components/macro'\n\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\nimport { TRecipeFormValues } from '../menu.types'\n\ninterface IProps {}\n\nconst StyledRecipeImageUploader = styled.div`\n  border: 1px dotted ${Colors.greyMiddle};\n  background: ${Colors.white};\n  color: ${Colors.greyMiddle};\n  height: 18rem;\n  min-width: 12rem;\n  cursor: pointer;\n\n  & section {\n    height: 100%;\n    width: 100%;\n  }\n\n  & div.container {\n    height: 100%;\n    width: 100%;\n    padding: 0.4rem;\n  }\n\n  & img {\n    height: 100%;\n    width: 100%;\n    object-fit: contain;\n  }\n`\n\nexport const RecipeImage = observer<IProps>(() => {\n  const { enqueueWarning } = useSnackBar()\n  const { isSubmitting } = useXFormState()\n\n  const { isDragActive, getRootProps, getInputProps } = useDropzone({\n    disabled: isSubmitting,\n    accept: 'image/*',\n    multiple: false,\n    onDropAccepted: ([firstImage]) => {\n      field.setValue(firstImage)\n    },\n    onDropRejected: () => {\n      enqueueWarning(i18n.t`Supplied file is not recognized as image.`)\n    },\n  })\n\n  const field = useXField<TRecipeFormValues['image']>('image')\n\n  const imageDisplay = React.useMemo(() => {\n    const image = field.value\n    if (image === null) {\n      return null\n    }\n    if (typeof field.value !== 'string') {\n      return URL.createObjectURL(image)\n    } else {\n      return field.value\n    }\n  }, [field.value])\n\n  return (\n    <StyledRecipeImageUploader>\n      <section>\n        <div className=\"container\" {...getRootProps()}>\n          <input {...getInputProps()} />\n          {imageDisplay && <img src={imageDisplay} alt=\"\" />}\n          {imageDisplay === null && (\n            <div className=\"hint\">\n              {isDragActive ? (\n                <Trans>Drop the image here ...</Trans>\n              ) : (\n                <Trans>Click to select image or drop it here</Trans>\n              )}\n            </div>\n          )}\n        </div>\n      </section>\n    </StyledRecipeImageUploader>\n  )\n})\n","import React from 'react'\n\nimport { FormGrid } from '../../../atoms/FormGrid'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FormDeleteButton } from '../../../components/forms/FormDeleteButton'\nimport { useMMenuRecipeDelete } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { FormLayoutGrid } from '../atoms/FormLayoutGrid'\nimport { IsMenuItemType } from '../atoms/IsMenuItemType'\nimport { MenuCodeInput } from '../molecules/MenuCodeInput'\nimport { MenuIdExternalSystem } from '../molecules/MenuIdExternalSystem'\nimport { MenuInternalNoteInput } from '../molecules/MenuInternalNoteField'\nimport { MenuLanguageSwitch } from '../molecules/MenuLanguageSwitch'\nimport { MenuNameInput } from '../molecules/MenuNameInput'\nimport { MenuVisibilityField } from '../molecules/MenuVisibilityField'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\nimport { RecipeDescriptionInput } from '../molecules/RecipeDescriptionInput'\nimport { RecipeImage } from '../molecules/RecipeImage'\n\ninterface IProps {\n  isCreate: boolean\n}\n\nexport const RecipeFormPrimary: React.FC<IProps> = ({ isCreate }) => {\n  const [deleteRecipe] = useMMenuRecipeDelete()\n\n  return (\n    <FormLayoutGrid\n      primaryColumnWidth=\"minmax(24rem, 54rem)\"\n      secondaryColumnWidth=\"minmax(12rem, 30rem)\"\n      contentPrimary={\n        <FormGrid>\n          <MenuCodeInput placeholder={i18n.t`Recipe code`} />\n          <MenuNameInput placeholder={i18n.t`Recipe name`} localized />\n          <IsMenuItemType isMain>\n            <RecipeDescriptionInput />\n          </IsMenuItemType>\n          <MenuInternalNoteInput placeholder={i18n.t`Recipe internal note`} />\n          {!isCreate && <MenuIdExternalSystem />}\n          <IsMenuItemType isMain>\n            <RecipeAllergenDisplay />\n          </IsMenuItemType>\n          <IconLine labelWidth={Spacing.DefaultLabelWidth}>\n            <MenuVisibilityField label={i18n.t`To show this recipe`} />\n          </IconLine>\n        </FormGrid>\n      }\n      contentSecondary={<RecipeImage />}\n      contentTopRight={<MenuLanguageSwitch />}\n      contentBottomRight={\n        <FormDeleteButton\n          mutationName=\"destroyRecipe\"\n          confirmText={i18n.t`Remove this recipe?`}\n          onDelete={recipeId => deleteRecipe({ recipeId })}\n        />\n      }\n    />\n  )\n}\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { FormInput } from '../../../components/forms/FormInput'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menu.types'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.FC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInput\n            fieldName={['ingredients', String(rowIndex), 'quantity']}\n            fullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\n// function validateQuantity(value: string) {\n//   const fieldName = i18n.t`Quantity`\n//   if (validator.isEmpty(value + '')) {\n//     return i18n.t`${fieldName} must be entered`\n//   }\n//   if (!validator.isFloat(value + '', { min: 0 })) {\n//     return i18n.t`${fieldName} must be a positive number`\n//   }\n//   return\n// }\n","import { useXField, useXFormState } from '@speedlo/xform'\nimport { observer, useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport {\n  FMenuStockItemFragment,\n  useQMenuStockList,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { useSettingsBranch } from '../../../hooks/useSettingsBranch'\nimport { i18n } from '../../../i18n'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient, TRecipeFormValues } from '../menu.types'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onAdd(ingredient: TIngredient): void\n  onRemove(stockItemId: ID): void\n}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: FMenuStockItemFragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsControl = observer<IProps>(\n  ({ ingredients, onAdd, onRemove }) => {\n    const branchId = useSettingsBranch()\n    const { data, loading } = useQMenuStockList({\n      branchId,\n    })\n\n    const { isSubmitting } = useXFormState()\n\n    return (\n      <>\n        <RecipeIngredientsTable ingredients={ingredients} onRemove={onRemove} />\n        <MenuSuggestionPanel<FMenuStockItemFragment>\n          isLoading={loading}\n          isDisabled={isSubmitting}\n          addButtonText={i18n.t`Add ingredient`}\n          options={\n            loading ? [] : unselectedStockOnly(data.stockItems, ingredients)\n          }\n          onAdd={(addedStockItem: FMenuStockItemFragment) => {\n            onAdd({\n              stockItem: addedStockItem.id,\n              label: addedStockItem.nameLabel,\n              quantity: 1,\n              unitLabel: addedStockItem.wareUnit.code,\n              allergens: addedStockItem.allergens.map(RM.prop('enum')),\n            })\n          }}\n        />\n      </>\n    )\n  },\n)\n\nexport const RecipeIngredientsView = () => {\n  const field = useXField<TRecipeFormValues['ingredients']>('ingredients')\n  return useObserver(() => (\n    <RecipeIngredientsControl\n      ingredients={field.value}\n      onAdd={ingredient => {\n        field.value.push(ingredient)\n      }}\n      onRemove={stockItemId => {\n        field.value.splice(\n          field.value.findIndex(RM.propEq('stockItem', stockItemId)),\n          1,\n        )\n      }}\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { MarginBox } from '../../../atoms/MarginBox'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsMenuItemType } from '../atoms/IsMenuItemType'\nimport { MenuSubmitButton } from '../atoms/MenuSubmitButton'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { getRecipeTypeLabel } from '../menu.labels'\nimport { TCategoryType } from '../menu.types'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeFormPrimary } from '../organisms/RecipeFormPrimary'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps extends RouteComponentProps<{ recipeId: ID }> {}\n\nexport const MenuRecipePage: React.FC<IProps> = ({ match }) => {\n  const { recipeId } = match.params\n  const { isCreate, itemType, redirectToRecipeList } = useMenuRouting(recipeId)\n\n  if (itemType === null) {\n    redirectToRecipeList()\n    return null\n  }\n\n  return (\n    <RecipeFormLoader\n      isCreate={isCreate}\n      recipeId={recipeId}\n      recipeType={itemType}\n    >\n      <MarginBox right={1.25} bottom={4}>\n        <FullPageLayout\n          pageTitle={getRecipeTypeLabel(itemType)}\n          hideLogoutWidget={true}\n          useBackButton={true}\n        >\n          <Card>\n            <RecipeFormPrimary isCreate={isCreate} />\n          </Card>\n          <Card>\n            <RecipeFormPricing />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Recipe ingredients</Trans>\n            </Headline>\n            <VerticalGap />\n            <RecipeIngredientsView />\n          </Card>\n          <IsMenuItemType isMain>\n            <Card>\n              <Headline>\n                <Trans>Sidedish categories</Trans>\n              </Headline>\n              <NoteText>\n                <Trans>These sidedish are presented with recipe</Trans>\n              </NoteText>\n              <RecipeCategoryView\n                fieldName=\"sideDishes\"\n                categoryType={TCategoryType.SideDish}\n                addButtonText={i18n.t`Attach sidedish category`}\n                noRowsText={i18n.t`Recipe has no sidedish category attached`}\n              />\n            </Card>\n            <Card>\n              <Headline>\n                <Trans>Category assignments</Trans>\n              </Headline>\n              <NoteText>\n                <Trans>Recipe is in these categories</Trans>\n              </NoteText>\n              <RecipeCategoryView\n                fieldName=\"categories\"\n                categoryType={TCategoryType.Main}\n                addButtonText={i18n.t`Add to category`}\n                noRowsText={i18n.t`Recipe is not in any category`}\n              />\n            </Card>\n          </IsMenuItemType>\n        </FullPageLayout>\n\n        <TopRightButtonContainer>\n          <MenuSubmitButton\n            isCreate={isCreate}\n            createMutation=\"createRecipe\"\n            updateMutation=\"updateRecipe\"\n          />\n        </TopRightButtonContainer>\n      </MarginBox>\n    </RecipeFormLoader>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { QMenuStockListStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\n\ntype TStockItem = QMenuStockListStockItems\n\ninterface IProps {\n  stockItems: RoA<TStockItem>\n  isLoading: boolean\n}\n\nconst StyledDataTable = styled(DataTable)`\n  [aria-label='grid']:focus {\n    outline: none;\n  }\n\n  [role='columnheader'] {\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n  }\n`\n\nexport const StockListTable: React.FC<IProps> = observer(\n  ({ stockItems, isLoading }) => {\n    return (\n      <StyledDataTable\n        items={stockItems}\n        heightStretch={true}\n        noRowsRenderer={() =>\n          isLoading ? (\n            <Loading />\n          ) : (\n            <h3>\n              <Trans>Selected branch has no stock cards</Trans>\n            </h3>\n          )\n        }\n      >\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'stockItem' },\n            ColumnRendererEdit,\n          )}\n        />\n        <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n        <Column\n          dataKey=\"nameLabel\"\n          width={300}\n          minWidth={30}\n          flexGrow={2}\n          label={i18n.t`Card name`}\n        />\n        <Column\n          dataKey=\"quantity\"\n          width={100}\n          label={i18n.t`Card stock`}\n          cellRenderer={stockWithUnit}\n        />\n        <Column\n          dataKey=\"allowNegativeValue\"\n          width={300}\n          label={i18n.t`Negative stock`}\n          cellRenderer={stockAllowNegative}\n        />\n        <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n      </StyledDataTable>\n    )\n  },\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { useMenuModel } from '../hooks/useMenu'\nimport { StockListTable } from './StockListTable'\n\ninterface IProps {}\n\nexport const StockListLoader = observer<IProps>(() => {\n  const menuModel = useMenuModel()\n  const { data, loading } = useQMenuStockList({\n    branchId: menuModel.branchId,\n  })\n\n  const filterItem = menuModel.filter.getPredicate({\n    partialMatch: ['code', 'nameLabel'],\n    exactMatch: ['plu'],\n  })\n\n  const stockItems = loading ? [] : data.stockItems.filter(filterItem)\n\n  return <StockListTable stockItems={stockItems} isLoading={loading} />\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { MenuCreateButton } from '../atoms/MenuCreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\nimport { StyledFilterWithTableContainer } from './MenuRecipeListPage'\n\nexport const MenuStockListPage: React.FC = () => {\n  const { getStockCreateRoute } = useMenuRouting()\n  return (\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true}>\n      <PageLayoutFullHeightItem forcePercentHeightInMobile={100}>\n        <Card stretchToParent={true}>\n          <StyledFilterWithTableContainer>\n            <div className=\"filter\">\n              <FlexRowSingle justify=\"start\" flexWrap=\"wrap\">\n                <FlexColumn>\n                  <SettingsCompanyBranchPicker width={20} />\n                </FlexColumn>\n                <FlexColumn>\n                  <MenuFilterInput />\n                </FlexColumn>\n              </FlexRowSingle>\n              <CanMutate mutationName=\"createStockItem\">\n                <MenuCreateButton routeTo={getStockCreateRoute()} />\n              </CanMutate>\n            </div>\n            <div className=\"table\">\n              <StockListLoader />\n            </div>\n          </StyledFilterWithTableContainer>\n        </Card>\n      </PageLayoutFullHeightItem>\n    </FullPageLayout>\n  )\n}\n","import { useObjectValidation } from '@speedlo/xform'\nimport React from 'react'\n\nimport {\n  FieldStateEnum,\n  QMenuStockDefaultsDefaults,\n  QMenuStockFormStockItem,\n  useExecutableQMenuStockDefaults,\n  useExecutableQMenuStockForm,\n  useMMenuStockCreate,\n  useMMenuStockUpdate,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { useMenuModel } from '../hooks/useMenu'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { ROUTE_MENU_STOCK } from '../menu.routes'\nimport { TStockFormValues } from '../menu.types'\nimport { MenuFormLoader } from '../molecules/MenuFormLoader'\n\ninterface IProps {\n  stockId: ID\n  isCreate: boolean\n  children: ReactNode\n}\n\nexport const StockFormLoader: React.FC<IProps> = ({\n  stockId,\n  isCreate,\n  children,\n}) => {\n  const menuModel = useMenuModel()\n  const { redirectToStockList } = useMenuRouting()\n\n  const validationSchema = useObjectValidation(yup => ({\n    code: yup.string().required(),\n    nameLabel: yup.string().required(),\n    wareUnit: yup.string().required(),\n    ingredients: yup.array().of(\n      yup.object({\n        quantity: yup.string().required(),\n      }),\n    ),\n  }))\n\n  const [queryDefaults] = useExecutableQMenuStockDefaults()\n  const loadCreateDefaults = React.useCallback(\n    async (values: TStockFormValues) => {\n      const result = await queryDefaults({ branchId: menuModel.branchId })\n      if (result === null) {\n        return values\n      }\n      return {\n        ...values,\n        ...normalizeLoadedDefaults(result.defaults),\n      }\n    },\n    [menuModel, queryDefaults],\n  )\n\n  const [queryStock] = useExecutableQMenuStockForm()\n  const loadUpdateValues = React.useCallback(\n    async (values: TStockFormValues) => {\n      const result = await queryStock({ stockId }, { fetchPolicy: 'no-cache' })\n      if (result === null) {\n        redirectToStockList()\n        return values\n      }\n      return {\n        ...normalizeUpdateValues(result.stockItem),\n      }\n    },\n    [queryStock, redirectToStockList, stockId],\n  )\n\n  const [createStock] = useMMenuStockCreate()\n  const onCreate = React.useCallback(\n    (values: TStockFormValues) =>\n      createStock({\n        stockItem: {\n          companyBranch: menuModel.branchId,\n          ...getWriteVariables(values),\n        },\n      }),\n    [createStock, menuModel],\n  )\n\n  const [updateStock] = useMMenuStockUpdate()\n  const onUpdate = React.useCallback(\n    (values: TStockFormValues) =>\n      updateStock({\n        stockId,\n        stockItem: getWriteVariables(values),\n      }),\n    [stockId, updateStock],\n  )\n\n  return (\n    <MenuFormLoader<TStockFormValues>\n      isCreate={isCreate}\n      onCreate={onCreate}\n      onUpdate={onUpdate}\n      initialValues={getDefaults()}\n      loadCreateDefaults={loadCreateDefaults}\n      loadUpdateValues={loadUpdateValues}\n      validationSchema={validationSchema}\n      successRedirectPath={ROUTE_MENU_STOCK}\n    >\n      {children}\n    </MenuFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    quantity: 0,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction normalizeLoadedDefaults(\n  defaults: QMenuStockDefaultsDefaults,\n): Partial<TStockFormValues> {\n  return {\n    allowNegativeDefault: getAllowNegativeDefault(defaults.allowNegative),\n  }\n}\n\nfunction normalizeUpdateValues(\n  stockItem: QMenuStockFormStockItem,\n): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    quantity: stockItem.quantity,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n\nfunction getWriteVariables(formValues: TStockFormValues) {\n  return {\n    code: formValues.code,\n    label: formValues.nameLabel,\n    note: formValues.note,\n    plu: formValues.plu,\n    allergens: formValues.allergens,\n    wareUnit: formValues.wareUnit!,\n    allowNegative: formValues.allowNegative,\n  }\n}\n","import { ErrorOutline } from '@material-ui/icons'\nimport { useXField } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/MenuAllergenIndicator'\n\ninterface IProps {}\n\nexport const StockAllergenField: React.FC<IProps> = () => {\n  const field = useXField<RoA<AllergenEnum>>('allergens')\n\n  const onToggle = React.useCallback(\n    (allergen: AllergenEnum) => {\n      const current = field.value\n      if (current.includes(allergen)) {\n        field.setValue(RM.without([allergen], current))\n      } else {\n        field.setValue([...current, allergen])\n      }\n    },\n    [field],\n  )\n\n  return useObserver(() => (\n    <IconLine icon={ErrorOutline} labelWidth={7}>\n      <MenuAllergenIndicator selected={field.value} onToggle={onToggle} />\n    </IconLine>\n  ))\n}\n","import { i18nMark } from '@lingui/core'\nimport { RM } from '@speedlo/tools'\nimport { useXFormState } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FormFlatSingleSelect } from '../../../components/forms/FormFlatSingleSelect'\nimport { FieldStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TStockFormValues } from '../menu.types'\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const StockAllowNegativeField = observer(() => {\n  const { allowNegativeDefault } = useXFormState<TStockFormValues>().values\n  return (\n    <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n      <FormFlatSingleSelect\n        items={items}\n        fieldName=\"allowNegative\"\n        getItemId={RM.prop('type')}\n        formatItem={item => {\n          if (item.type === allowNegativeDefault) {\n            return (\n              <span>\n                {i18n._(item.label)}\n                <i>{` (${i18n.t`Is default setting`.toLocaleLowerCase()})`}</i>\n              </span>\n            )\n          }\n          return i18n._(item.label)\n        }}\n      />\n    </IconLine>\n  )\n})\n","import { Fingerprint } from '@material-ui/icons'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { FormInput } from '../../../components/forms/FormInput'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nexport const StockPluField: React.FC<IProps> = () => (\n  <IconLine icon={Fingerprint} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInput fieldName=\"plu\" fullWidth={true} placeholder={i18n.t`PLU`} />\n    </Sizer>\n  </IconLine>\n)\n","import { SelectAll } from '@material-ui/icons'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FormDropdown } from '../../../components/forms/FormDropdown'\nimport {\n  QMenuWareUnitsWareUnits,\n  useQMenuWareUnits,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\ntype TWareUnits = QMenuWareUnitsWareUnits\n\nexport const StockWareUnitField: React.FC<IProps> = selectProps => {\n  const { data, loading } = useQMenuWareUnits()\n\n  return (\n    <IconLine icon={SelectAll} labelWidth={7}>\n      <FormDropdown<TWareUnits>\n        options={data.wareUnits}\n        isLoading={loading}\n        getOptionLabel={RM.prop('code')}\n        getOptionValue={RM.prop('enum')}\n        placeholder={i18n.t`Choose unit`}\n        fieldName=\"wareUnit\"\n        width={12}\n      />\n    </IconLine>\n  )\n}\n","import React from 'react'\n\nimport { FormGrid } from '../../../atoms/FormGrid'\nimport { FormDeleteButton } from '../../../components/forms/FormDeleteButton'\nimport { useMMenuStockDelete } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FormLayoutGrid } from '../atoms/FormLayoutGrid'\nimport { MenuCodeInput } from '../molecules/MenuCodeInput'\nimport { MenuInternalNoteInput } from '../molecules/MenuInternalNoteField'\nimport { MenuNameInput } from '../molecules/MenuNameInput'\nimport { StockAllergenField } from '../molecules/StockAllergenField'\nimport { StockAllowNegativeField } from '../molecules/StockAllowNegativeField'\nimport { StockPluField } from '../molecules/StockPluField'\nimport { StockWareUnitField } from '../molecules/StockWareUnitField'\n\nexport const StockFormPrimary: React.FC = () => {\n  const [deleteStockItem] = useMMenuStockDelete()\n  return (\n    <FormLayoutGrid\n      primaryColumnWidth=\"minmax(10rem, 54rem)\"\n      contentPrimary={\n        <FormGrid>\n          <MenuNameInput placeholder={i18n.t`Card name`} />\n          <MenuCodeInput placeholder={i18n.t`Card code`} />\n          <StockWareUnitField />\n          <StockPluField />\n          <MenuInternalNoteInput\n            fieldName=\"note\"\n            placeholder={i18n.t`Card note`}\n            label={i18n.t`Card note`}\n          />\n          <StockAllergenField />\n          <StockAllowNegativeField />\n        </FormGrid>\n      }\n      contentBottomRight={\n        <FormDeleteButton\n          mutationName=\"destroyStockItem\"\n          confirmText={i18n.t`Remove this card?`}\n          onDelete={stockId => deleteStockItem({ stockId })}\n        />\n      }\n    />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { BlockLoader } from '../../../atoms/BlockLoader'\nimport { Column, ColumnRendererEdit, DataTable } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { useQStockRecipes } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { ROUTE_MENU_RECIPE } from '../menu.routes'\n\ninterface IProps {\n  stockId: ID\n}\n\nexport const StockRecipesView: React.FC<IProps> = ({ stockId }) => {\n  const { data, loading } = useQStockRecipes({\n    stockId,\n  })\n\n  if (loading) {\n    return <BlockLoader />\n  }\n\n  const {\n    stockItem: { ingredients },\n  } = data\n  if (ingredients.length === 0) {\n    return (\n      <Headline>\n        <Trans>No recipes are using stock card</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      <Headline>\n        <Trans>Recipes using this card</Trans>\n      </Headline>\n\n      <DataTable\n        items={[...ingredients]}\n        disableHeader={true}\n        fullHeight={true}\n      >\n        <Column\n          dataKey=\"\"\n          cellDataGetter={({ rowData }) => ({\n            pathname: `${ROUTE_MENU_RECIPE}/${rowData.recipe.id}`,\n            state: { recipeType: rowData.recipe.recipeType.enum },\n          })}\n          cellRenderer={ColumnRendererEdit}\n          width={100}\n        />\n        <Column\n          dataKey=\"recipe\"\n          width={300}\n          label={i18n.t`Name`}\n          cellRenderer={({ rowData }) => (\n            <>\n              {rowData.recipe.nameLabel}\n              <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n            </>\n          )}\n        />\n      </DataTable>\n    </>\n  )\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { MenuSubmitButton } from '../atoms/MenuSubmitButton'\nimport { useMenuRouting } from '../hooks/useMenuRouting'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormPrimary } from '../organisms/StockFormPrimary'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps extends RouteComponentProps<{ stockId: ID }> {}\n\nexport const MenuStockPage: React.FC<IProps> = ({ match }) => {\n  const { stockId } = match.params\n  const { isCreate } = useMenuRouting(stockId)\n\n  return (\n    <FullPageLayout\n      pageTitle={i18n.t`Stock card`}\n      hideLogoutWidget={true}\n      useBackButton={true}\n    >\n      <StockFormLoader isCreate={isCreate} stockId={stockId}>\n        <>\n          <Card>\n            <StockFormPrimary />\n            {!isCreate && (\n              <CanQuery queryName=\"recipes\">\n                <StockRecipesView stockId={stockId} />\n              </CanQuery>\n            )}\n          </Card>\n          <TopRightButtonContainer>\n            <MenuSubmitButton\n              isCreate={isCreate}\n              createMutation=\"createStockItem\"\n              updateMutation=\"updateStockItem\"\n            />\n          </TopRightButtonContainer>\n        </>\n      </StockFormLoader>\n    </FullPageLayout>\n  )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport {\n  ROUTE_MENU,\n  ROUTE_MENU_CATEGORY,\n  ROUTE_MENU_RECIPE,\n  ROUTE_MENU_STOCK,\n} from '../menu.routes'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\n\ninterface IProps {}\n\nexport const MenuRouting: React.FC<IProps> = () => (\n  <Switch>\n    <SecureRoute\n      path={`${ROUTE_MENU_CATEGORY}/:categoryId`}\n      component={MenuCategoryPage}\n    />\n    <SecureRoute path={ROUTE_MENU_CATEGORY} component={MenuCategoryListPage} />\n    <SecureRoute\n      path={`${ROUTE_MENU_RECIPE}/:recipeId`}\n      component={MenuRecipePage}\n    />\n    <SecureRoute path={ROUTE_MENU_RECIPE} component={MenuRecipeListPage} />\n    <SecureRoute\n      path={`${ROUTE_MENU_STOCK}/:stockId`}\n      component={MenuStockPage}\n    />\n    <SecureRoute path={ROUTE_MENU_STOCK} component={MenuStockListPage} />\n    <Redirect to={ROUTE_MENU_CATEGORY} from={ROUTE_MENU} />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default MenuRouting\n"],"sourceRoot":""}