{"version":3,"sources":["atoms/FlexRowSingle.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/VerticalGap.tsx","atoms/DataTable.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","helpers/filter.ts","atoms/RelativeLink.tsx","atoms/FormInputFlatSelect.tsx","atoms/DragHandle.tsx","atoms/FormContainer.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","hooks/useDebounceCallback.ts","atoms/FormInputSelect.tsx","segments/menu/molecules/CreateButton.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/labels.ts","segments/menu/molecules/SubmitButton.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","atoms/DataTableContainer.tsx","segments/menu/molecules/CategoryListTable.tsx","molecules/TouchButtonRemove.tsx","molecules/SortableDataTable.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/menutypes.ts","segments/menu/molecules/MenuFilterInput.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/molecules/FormInputCode.tsx","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/routes/MenuRoutes.tsx","segments/menu/pages/MenuCategoryListPage.tsx","segments/menu/organisms/CategoryList.tsx","molecules/TouchButtonEdit.tsx","molecules/TouchButtonVisibility.tsx","segments/menu/pages/MenuCategoryPage.tsx","segments/menu/organisms/CategoryFormBasic.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","../node_modules/@speedlo/assets/index.js","../node_modules/@speedlo/assets/Flaticon.js","atoms/PictogramDisplay.tsx","segments/menu/organisms/CategoryFormLoader.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/pages/MenuRecipeListPage.tsx","segments/menu/molecules/MenuCategoryFilter.tsx","segments/menu/molecules/MenuCategoryFilter.graphql.ts","segments/menu/molecules/RecipeTypeSelection.tsx","atoms/RelativeRedirect.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/organisms/RecipeCategoryView.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/molecules/FormPricingField.tsx","atoms/FormDisplayField.tsx","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/organisms/StockDepositLoader.graphql.ts","graph/buildMutation.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/organisms/StockFormLoader.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormMain.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","segments/menu/molecules/FormInputPlu.tsx","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/organisms/StockRecipesView.graphql.ts"],"names":["FlexRowSingle","__webpack_require__","default","div","withConfig","displayName","justify","_react","_interopRequireDefault","_styledComponents","_ScrollArea","_styling","FullHeightDiv","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","widthComputed","column","leftPos","row","topPos","FullHeightDivStyled","children","withScrollArea","scrollAreaId","createElement","ScrollArea","id","VerticalGap","size","sizeUnit","canQuery","canMutate","renderer","cellProps","result","_CanQuery","CanQuery","queryName","_CanMutate","CanMutate","mutationName","cellData","_TouchButtonEdit","TouchButtonEdit","target","columnData","_TouchButtonRemove","TouchButtonRemove","onClick","onRemove","rowData","_TouchButtonVisibility","TouchButtonVisibility","isVisible","onToggle","Fragment","NoteText","noteKey","_interopRequireWildcard","_reactVirtualized","_i18n","_Pacman","DataTable","Component","[object Object]","width","height","_a","this","items","isLoading","heightStretch","__rest","Table","_extends","autoHeight","headerHeight","rowHeight","rowCount","length","rowGetter","index","noRowsRenderer","AutoSizer","renderTable","WindowScroller","scrollElement","window","disableHeight","defaultProps","Colors","greyMiddle","DataTableEmptyText","text","i18n","_","CardDock","position","searchValue","search","toLocaleLowerCase","propValue","includes","_reactRouterDom","_resolvePathname","resolveLocation","to","from","resolved","pathname","Object","assign","linkProps","Route","location","Link","_reactForm","_ramda","_SelectControlFlat","FormInputFlatSelect","validate","value","isRequired","isMulti","validationName","Array","isArray","fieldApi","defaultSelection","getItemId","selection","isSelected","item","selectedItems","filter","onMultiSelection","setValue","map","setTouched","selectedItem","find","onSingleSelection","field","fieldIsPure","isClearable","Field","pure","SelectControlFlat","getControlProps","isInvalid","Boolean","error","RM","prop","_reactSortableHoc","_Icon","DragHandleContainerStyled","DragHandle","SortableHandle","Icon","iconName","FormContainer","form","FormColumn","onAdd","addLabel","addButtonText","selectProps","getSelected","setSelected","_useStateRef","useStateRef","onConfirm","useCallback","selected","onKeyDown","ev","key","onSelect","option","_FlexRowSingle","_FlexColumn","FlexColumn","fixedWidth","margin","_SelectControl","SelectControl","onChange","getOptionValue","getOptionLabel","_TouchButton","TouchButton","disabled","cb","time","memoCb","debounced","useRef","_debounce","useEffect","current","clear","FormInputSelect","0","validatioName","options","defaultValue","F","selectedOptions","onFocus","styles","control","base","borderColor","_RelativeLink","CreateButtonContainer","routeTo","RelativeLink","color","green","ButtonHeight","TopRightButtonContainer","black","Radiuses","Button","categoryType","categories","recipeType","recipes","_core","_types","WareCategoryTypeEnum","Main","i18nMark","SideDish","Cover","_form","_FormSubmit","isCreate","FormApi","render","FormSubmit","isFormValid","getButtonText","_reactRouter","_TouchButtonDelete","confirmText","onDelete","history","TouchButtonDelete","__awaiter","goBack","_FormInputTextBox","_IconLine","icon","label","IconLine","labelWidth","FormInputTextBox","inputFullWidth","_ApolloError","_FormLoader","_NavigateBack","_logger","ErrorPop","state","submitError","validationErrors","renderSubmitError","renderValidationErrors","messages","isApolloError","propEq","userErrors","graphQLErrors","renderPopover","errors","Popover","open","anchorEl","document","getElementById","onClose","setState","anchorOrigin","vertical","horizontal","message","idx","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack","FormLoader","shouldLoad","defaultValues","loader","defaults","loadedDefaults","values","formApi","logForm","onSubmit","onSubmitFailure","keys","logError","renderErrors","settings","menu","_RootProvider","useRoot","DataTableContainer","_DataTable","_DragHandle","_SortableDataTable","_MenuCategoryModel","onSort","showEditColumn","showRemoveColumn","showVisibilityColumn","showHeader","isSortable","noRowsDisplay","disableHeader","SortableDataTable","Column","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","checkColumnAccess","ColumnRendererEdit","cellDataGetter","getCategoryRoute","enum","ColumnRendererRemove","ColumnRendererVisibility","ColumnRendererWithNote","SortableTableRowRenderer","SortableElement","columns","style","className","SortableDataTableContainer","SortableContainer","sortedItems","onHandleSorting","newIndex","oldIndex","currentItems","arrayMove","sortSuccess","offset","useDragHandle","lockAxis","lockToContainerEdges","onSortEnd","rowRenderer","rowProps","getDerivedStateFromProps","nextProps","_reactContentLoader","_Headline","_menutypes","_MenuRecipeModel","ColumnRendererPrice","prices","priceType","foundPrice","pathEq","price","formattedValue","ColumnRendererCode","type","onSortRecipe","showTypeColumn","BulletList","Headline","getRecipeRoute","flexGrow","TPriceType","Delivery","Inhouse","_icons","_FormInputStyled","_Sizer","_useDebounceCallback","modelType","model","useDebounceCallback","setFilterInput","Search","Sizer","FormInputStyled","placeholder","isMain","isSideDish","isCover","_FormInputAllergens","AllergenBox","MarginAroundFormComponents","active","css","yellow","white","QueryAllergens","allergens","allergen","title","code","category","_NotFoundPage","_SecureRoute","_MenuCategoryListPage","_MenuCategoryPage","_MenuRecipeListPage","_MenuRecipePage","_MenuStockDepositPage","_MenuStockListPage","_MenuStockPage","MenuRoutes","match","Switch","SecureRoute","exact","path","Redirect","component","MenuCategoryListPage","params","MenuCategoryPage","categoryId","MenuRecipeListPage","MenuRecipePage","recipeId","MenuStockListPage","MenuStockDepositPage","MenuStockPage","stockId","NotFoundPage","_Card","_VerticalGap","_FullPageLayout","_PageLayoutFullHeightItem","_SettingsCompanyBranchPicker","_CategoryList","PartialDataTableContainer","FullPageLayout","pageTitle","useBackButton","PageLayoutFullHeightItem","Card","stretchToParent","SettingsCompanyBranchPicker","headline","_mobxReactLite","_reactApolloHooks","_CategoryListTable","_CreateButton","observer","subHeadline","data","loading","updateQuery","useQuery","CategoryListQuery","getQueryProps","suspend","widthGrowIndex","CreateButton","CategoryListTable","changeVisibility","sortCategory","iconColor","_react2","_TopRightButtonContainer","_labels","_SubmitButton","_CategoryFormBasic","_CategoryFormLoader","_CategoryRecipesView","FormFixedRow","FormStretchedRow","CategoryFormLoader","getCategoryTypeLabel","hideLogoutWidget","CategoryBasicForm","Trans","CategoryRecipesView","SubmitButton","_CardDock","_FormContainer","_FormInputCheckbox","_WithSettings","_MenuCategoryPictogramSelect","_FormDeleteButton","_FormInputInternalNote","_FormInputName","FormInputName","FormInputInternalNote","FormInputCheckbox","MenuCategoryPictogramSelect","WithSettings","FormDeleteButton","deleteCategory","_assets","_PictogramDisplay","pictogram","pictograms","formatOptionLabel","PictogramDisplay","pictogramId","fontSize","components","SingleValue","container","menuList","maxHeight","isSearchable","exports","module","PictogramDisplayStyled","fontSizeUnit","getClassName","_MenuBaseFormLoader","_useMenu","_CategoryForm","useMenu","MenuBaseFormLoader","createCategory","updateCategory","visible","internalNoteLabel","nameLabel","getDefaults","client","query","MenuCategoryFormQuery","variables","fetchPolicy","wareCategory","setValues","useState","then","Form","_RecipeListTable","_RecipeSuggestionPanel","RecipeSuggestionPanel","filterRecipes","without","addedRecipe","concat","RecipeListTable","reject","_MenuSuggestionPanel","_RecipeList","observe","QueryRecipeList","MenuSuggestionPanel","_DataTableContainer","_MenuCategoryFilter","_MenuFilterInput","_RecipeTypeSelection","_RecipeListLoader","MenuFilterInput","MenuCategoryFilter","RecipeTypeSelection","RecipeListLoader","recipe","MenuCategoryFilterQuery","branchId","setCategoryFilter","grouped","groupBy","cat","toString","typeString","getOptions","_RelativeRedirect","isOpen","onOpen","RelativeRedirect","push","preventDefault","Dialog","DialogTitle","_filter","MenuRecipeListQuery","categoryFilterId","filteredRecipes","useComputed","partialMatch","isPartialMatch","filterInput","cond","propSatisfies","T","_IsCategoryType","_RecipeCategoryView","_RecipeFormBasic","_RecipeFormLoader","_RecipeFormPricing","_RecipeIngredientsView","RecipeFormLoader","getRecipeTypeLabel","RecipeFormBasic","RecipeFormPricing","IsCategoryType","RecipeIngredientsView","RecipeCategoryView","noRowsText","_CategorySuggestionPanel","currentCategories","addedCategory","_FormInputCode","_FormInputDescription","_RecipeAllergenDisplay","FormInputCode","FormInputDescription","RecipeAllergenDisplay","deleteRecipe","_AllergenIndicator","extractAllergens","pipe","flatten","uniq","MenuAllergenIndicator","_graphqlTag","_buildQuery","_AllergenFragment","AllergensQuery","AllergenFragment","buildQuery","_RecipeForm","getPriceMap","acc","WarePriceTypeEnum","reduce","internalNote","descriptionLabel","image","sourcePrices","vatId","currencyCode","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","createRecipe","updateRecipe","vats","queryDefaults","MenuRecipeFormQuery","recipeSource","warePriceType","associatedRecipe","formattedPrice","quantity","stockItem","wareUnit","unitLabel","sourcePrice","vat","currency","_FormPricingField","_RecipeAssociatedView","priceTypes","FormPricingField","TRecipeType","RecipeAssociatedView","_FormDisplayField","_FormInputPrice","_FormInputVatSelect","FormPricingCurrencyCode","FormDisplayField","NestedField","FormInputPrice","FormInputVatSelect","_validator","formInputPriceValidate","isEmpty","isDecimal","_emotion","_FormInputFlatSelect","_WithRoot","WithRoot","QueryVat","queryProps","renderLoading","formatItem","VatsQuery","_RecipeAssocListTable","priceTypeRecipes","rejectSuggestions","some","isAssociated","onAddRecipe","RecipeAssocListTable","QueryMenuRecipeFormAssoc","_RecipeIngredientsTable","_StockList","unselectedStockOnly","differenceWith","RecipeIngredientsTable","QueryMenuStockList","stockItems","addedStockItem","validateQuantity","fieldName","isFloat","min","rowIndex","_StockDepositControl","_StockDepositLoader","StockDepositLoader","onDeposit","StockDepositControl","_StockDepositConfirmButton","_StockDepositFilterInput","_StockDepositQuantityInput","_StockDepositResultTable","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","onFilter","trim","head","onConfirmFilter","focus","onQuantity","onSelectStockItem","hasSearchValue","isNoneFind","isMultiFind","StockDepositFilterInput","ref","StockDepositQuantityInput","enabled","StockDepositConfirmButton","cardName","StockDepositResultTable","_numeral","format","1","forwardRef","autoFocus","onKeyPressCapture","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","indexOf","begin","substring","end","ChangeMenuStockQuantity","execute","quantityChange","QueryMenuStockDeposit","_buildMutation","_WareUnitFragment","MenuStockDepositQuery","WareUnitFragment","ChangeMenuStockQuantityMutation","buildMutation","mutation","_reactApollo","Mutation","_StockListLoader","StockListLoader","_StockListTable","MenuStockListQuery","filteredItems","stock","StockListTable","_Loading","stockAllowNegative","Loading","_StockFormLoader","_StockFormMain","_StockRecipesVIew","StockFormLoader","StockFormMain","StockRecipesView","_StockForm","plu","note","allowNegative","FieldStateEnum","Default","allowNegativeDefault","getAllowNegativeDefault","isEnabled","Disabled","createItem","updateItem","MenuStockDefaultsQuery","companyBranch","MenuStockFormQuery","QueryMenuStock","_FormInputAllowNegative","_FormInputPlu","_FormInputWareUnit","FormInputWareUnit","FormInputPlu","FormInputAllergens","FormInputAllowNegative","deleteItem","Enabled","labelForDefault","useMemo","_FormInputSelect","QueryWareUnits","wareUnits","WareUnitsQuery","_StockRecipesView","QueryStockRecipes","StockRecipesQuery"],"mappings":"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","file":"static/js/178.49dc70b7.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.SFC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import 'react-virtualized/styles.css'\n\nimport React, { Component } from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport Pacman from './Pacman'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport class DataTable<T> extends Component<IDataTableProps<T>> {\n  static defaultProps = {\n    heightStretch: false,\n  }\n  renderTable(width: number, height: number) {\n    const { items, children, isLoading, heightStretch, ...props } = this.props\n\n    return (\n      <Table\n        autoHeight={!heightStretch}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowHeight={60}\n        rowCount={items ? items.length : 0}\n        rowGetter={({ index }) => items[index]}\n        noRowsRenderer={() => (isLoading ? <Pacman /> : null)}\n        {...props}\n      >\n        {children}\n      </Table>\n    )\n  }\n  render() {\n    return this.props.heightStretch ? (\n      <AutoSizer>\n        {({ width, height }) => this.renderTable(width, height)}\n      </AutoSizer>\n    ) : (\n      <WindowScroller scrollElement={window}>\n        {({ height }) => (\n          <AutoSizer disableHeight={true}>\n            {({ width }) => this.renderTable(width, height)}\n          </AutoSizer>\n        )}\n      </WindowScroller>\n    )\n  }\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.SFC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends Omit<\n      ISelectControlFlatProps<ItemType>,\n      | 'selectedItems'\n      | 'onMultiSelection'\n      | 'selectedItem'\n      | 'onSingleSelection'\n    > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n  defaultSelection?: ReadonlyArray<ItemType> | ItemType\n}\n\nexport class FormInputFlatSelect<ItemType> extends React.Component<\n  IFormInputSelectProps<ItemType>\n> {\n  static defaultProps = {\n    validationName: i18n.t`Value`,\n    getItemId: RM.prop('id'),\n  }\n  validate = value => {\n    const { isRequired, isMulti, validationName } = this.props\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && value == null) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n  getControlProps(\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> {\n    const { isMulti, items, defaultSelection, getItemId } = this.props\n\n    const selection = fieldApi.value || defaultSelection\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) =>\n        selection.includes(getItemId!(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId!))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId!(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId!(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      isClearable = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} pure={fieldIsPure} validate={this.validate}>\n        {fieldApi => (\n          <SelectControlFlat<ItemType>\n            {...this.getControlProps(fieldApi)}\n            isInvalid={Boolean(fieldApi.error)}\n            isClearable={isClearable && !isRequired}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { useStateRef } from '../../../hooks/useStateRef'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: string }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(\n    () => {\n      const selected = getSelected()\n      if (selected !== null) {\n        onAdd(selected)\n        setSelected(null)\n      }\n    },\n    [onAdd],\n  )\n\n  const onKeyDown = useCallback((ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === 'Enter') {\n      onConfirm()\n    }\n  }, [])\n\n  const onSelect = useCallback(option => {\n    setSelected(option || null)\n  }, [])\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.prop('nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import debounce from 'debounce'\nimport { useCallback, useEffect, useRef } from 'react'\n\nexport function useDebounceCallback(cb: AnyFunction, time: number = 300) {\n  const memoCb = useCallback(cb, [])\n  const debounced = useRef(debounce(memoCb, time))\n  useEffect(() => debounced.current.clear)\n  return debounced.current\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      defaultValue = undefined,\n      isRequired = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLAnchorElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.SFC<IProps> = ({\n  routeTo = 'create',\n  onClick,\n}) => (\n  <CreateButtonContainer>\n    <RelativeLink to={routeTo} onClick={onClick}>\n      <TouchButton\n        iconName=\"add_circle\"\n        color={Colors.green}\n        width={Spacing.ButtonHeight}\n        height={Spacing.ButtonHeight}\n      />\n    </RelativeLink>\n  </CreateButtonContainer>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0;\n  top: 0rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menutypes'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport function getCategoryTypeLabel(categoryType: TCategoryType) {\n  return i18n._(categories[categoryType])\n}\n\nexport function getRecipeTypeLabel(recipeType: TRecipeType) {\n  return i18n._(recipes[recipeType])\n}\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.SFC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.SFC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.SFC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputName: React.SFC<IProps> = ({\n  field = 'nameLabel',\n  icon = 'label',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputFullWidth={true}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              let defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import styled from 'styled-components'\n\nexport const DataTableContainer = styled.div`\n  height: calc(100% - 4.5rem);\n  padding-top: 2rem;\n`\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { GMenuCategoryListItem } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\n\ntype TCategory = GMenuCategoryListItem.Fragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.SFC<IProps> = ({\n  categories,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  let Table: React.SFC = ({ children }) =>\n    isSortable ? (\n      <SortableDataTable\n        heightStretch={heightStretch}\n        onSort={onSort}\n        {...props}\n      >\n        {children}\n      </SortableDataTable>\n    ) : (\n      <DataTable heightStretch={heightStretch} {...props}>\n        {children}\n      </DataTable>\n    )\n  return (\n    <Table>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'wareCategory' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getCategoryRoute(rowData.id, rowData.categoryType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateWareCategory' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNoteLabel' }}\n      />\n      <Column\n        dataKey=\"countRecipes\"\n        label={i18n.t`Recipe count`}\n        width={100}\n        cellRenderer={({ cellData }) =>\n          `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n        }\n      />\n      {isSortable && (\n        <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n      )}\n    </Table>\n  )\n}\n","import React from 'react'\n\nimport { Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.SFC<IProps> = ({ ...props }) => (\n  <TouchButton\n    iconName=\"remove_circle_outline\"\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    {...props}\n  />\n)\n","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.Component<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, isLoading, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        useDragHandle={true}\n        lockAxis=\"y\"\n        lockToContainerEdges={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={rowProps => {\n          return <SortableTableRowRenderer {...rowProps} />\n        }}\n        isLoading={isLoading}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { Headline } from '../../../atoms/Headline'\nimport { GMenuRecipeList, WareCategoryTypeEnum } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { TPriceType } from '../menutypes'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\n\ntype TRecipe = GMenuRecipeList.Recipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  onSortRecipe?: TSortHandler<TRecipe>\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.SFC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  onSortRecipe,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  let Table: React.SFC = ({ children }) =>\n    isSortable ? (\n      <SortableDataTable onSort={onSortRecipe} {...props}>\n        {children}\n      </SortableDataTable>\n    ) : (\n      <DataTable {...props}>{children}</DataTable>\n    )\n  return (\n    <Table>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n      {isSortable && (\n        <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n      )}\n    </Table>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import {\n  AllergenEnum,\n  GMenuRecipeForm,\n  GMenuRecipePrice,\n  WarePriceTypeEnum,\n} from '../../graph/types'\n\nexport {\n  WareCategoryTypeEnum as TCategoryType,\n  WareCategoryTypeEnum as TRecipeType,\n  WarePriceTypeEnum as TPriceType,\n} from '../../graph/types'\n\nexport type TAssocRecipe = {\n  warePriceType: WarePriceTypeEnum\n  associatedRecipe: ID\n  nameLabel?: string\n  formattedPrice?: string\n}\n\nexport type TIngredient = {\n  stockItem: ID\n  label: string\n  quantity: number | string\n  unitLabel: string\n  allergens: AllergenEnum[]\n}\n\nexport type TPricing = GMenuRecipePrice.Fragment\nexport type TRecipeFormValues = GMenuRecipeForm.Recipe & {\n  associatedRecipes: TAssocRecipe[]\n  ingredients: TIngredient[]\n  prices: {\n    [priceType in WarePriceTypeEnum]: {\n      value: number\n      vatId: MaybeID\n      currencyCode: string\n    }\n  }\n}\n","import { Search } from '@material-ui/icons'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { useDebounceCallback } from '../../../hooks/useDebounceCallback'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <Sizer width={17}>\n        <FormInputStyled\n          inputFullWidth={true}\n          onChange={ev => onChange(ev.target.value)}\n          placeholder={i18n.t`Filter by name or code`}\n        />\n      </Sizer>\n    </IconLine>\n  )\n}\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/types'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.SFC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.SFC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        isRequired={true}\n        validatioName={i18n.t`Code`}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/types'\nimport { Colors, Spacing } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.SFC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MenuRoutes: React.SFC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      render={() => <Redirect to={`${match.path}/category`} />}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/category`}\n      component={MenuCategoryListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/category/:categoryId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuCategoryPage\n          categoryId={params.categoryId === 'create' ? null : params.categoryId}\n          categoryType={state.categoryType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/recipe`}\n      component={MenuRecipeListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/recipe/:recipeId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuRecipePage\n          recipeId={params.recipeId === 'create' ? null : params.recipeId}\n          recipeType={state.recipeType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/stock`}\n      component={MenuStockListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/deposit`}\n      component={MenuStockDepositPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/:stockId`}\n      render={({ match: { params } }) => (\n        <MenuStockPage\n          stockId={params.stockId === 'create' ? null : params.stockId}\n        />\n      )}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default MenuRoutes\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport CategoryList from '../organisms/CategoryList'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.SFC = props => (\n  <>\n    <FullPageLayout\n      pageTitle={i18n.t`Category overview`}\n      useBackButton={true}\n    />\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <SettingsCompanyBranchPicker width={20} />\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n            heightStretch={false}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n            heightStretch={false}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n            heightStretch={false}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GCategoryList, WareCategoryTypeEnum } from '../../../graph/types'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { CategoryListQuery } from './CategoryList.graphql'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n  heightStretch = false,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery } = useQuery<\n    GCategoryList.Query,\n    GCategoryList.Variables\n  >(CategoryListQuery, {\n    ...settings.getQueryProps({ categoryType }),\n    suspend: false,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <CreateButton routeTo={getCategoryRoute('create', categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories}\n        onToggle={settings.menu.category.changeVisibility}\n        isSortable={true}\n        showHeader={false}\n        heightStretch={heightStretch}\n        showVisibilityColumn={true}\n        onSort={({ item, items, offset }) => {\n          updateQuery(() => ({\n            categories: items,\n          }))\n          settings.menu.category.sortCategory(item.id, offset)\n        }}\n      />\n    </>\n  )\n}\n\nexport default observer(CategoryList)\n","import { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { Spacing } from '../styling'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends Omit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.SFC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <TouchButton\n      iconName=\"mode_edit\"\n      width={Spacing.ButtonHeight}\n      height={Spacing.ButtonHeight}\n      {...props}\n    />\n  </Link>\n)\n","import React from 'react'\n\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors, Spacing } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.SFC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <TouchButton\n    iconName=\"remove_red_eye\"\n    width={Spacing.ButtonHeight}\n    height={Spacing.ButtonHeight}\n    iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n    color={Colors.greyMiddle}\n    {...props}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { getCategoryTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.SFC<IProps> = ({\n  categoryId,\n  categoryType,\n}) => (\n  <CategoryFormLoader categoryId={categoryId} categoryType={categoryType}>\n    <>\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      />\n\n      <PageLayoutFullHeightItem>\n        <FormContainer>\n          <FormFixedRow>\n            <Card>\n              <CategoryBasicForm categoryType={categoryType} />\n            </Card>\n          </FormFixedRow>\n          <FormStretchedRow>\n            <Card stretchToParent={true}>\n              <Headline>\n                <Trans>Recipes assigned to this category</Trans>\n              </Headline>\n              <CategoryRecipesView categoryType={categoryType} />\n            </Card>\n          </FormStretchedRow>\n        </FormContainer>\n      </PageLayoutFullHeightItem>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={\n            categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n          }\n        >\n          <SubmitButton isCreate={categoryId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </>\n  </CategoryFormLoader>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.SFC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <Sizer width={22}>\n        <FormInputName\n          placeholder={i18n.t`Category name`}\n          inputFullWidth={true}\n        />\n      </Sizer>\n      <Sizer width={22}>\n        <FormInputInternalNote placeholder={i18n.t`Category internal note`} />\n      </Sizer>\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <CardDock position=\"BottomRight\">\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </CardDock>\n  </FormContainer>\n)\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.SFC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value && !Array.isArray(value)) {\n            fieldApi.setValue(value.pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","exports.pictograms = require('./Flaticon');","module.exports = ['pizza', 'beans', 'cheese', 'hot-pepper', 'smoking-barbecue', 'meat-pie', 'sausage', 'hot-dog', 'fruit', 'fruit-1', 'fruit-2', 'strawberry', 'soup', 'noodles', 'ramen', 'rice', 'spaghetti', 'food', 'piece-of-cake', 'beer', 'marshmallow', 'cake', 'banana-split', 'ice-cream', 'cookie', 'doughnut', 'cupcake', 'kebab', 'steak', 'fish', 'fondue', 'shrimp', 'berry', 'food', 'food-1', 'food-2', 'food-3', 'food-4', 'food-5', 'food-6', 'food-7', 'food-8', 'food-9', 'food-10', 'food-11', 'food-12', 'food-13', 'food-14', 'food-15', 'food-16', 'food-17', 'food-18', 'food-19', 'food-20', 'food-21', 'food-22', 'food-23', 'food-24', 'food-25', 'food-26', 'food-27', 'food-28', 'food-29', 'food-30', 'drink', 'drink-1', 'drink-2', 'drink-3', 'drink-4', 'drink-5', 'cup', 'cup-1', 'cup-2', 'whisky'];","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst PictogramDisplayStyled = styled.div`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport const PictogramDisplay: React.SFC<IProps> = ({\n  pictogramId,\n  fontSize = 2,\n  fontSizeUnit = 'rem',\n}) => (\n  <PictogramDisplayStyled\n    className={getClassName(pictogramId)}\n    fontSize={fontSize}\n    fontSizeUnit={fontSizeUnit}\n  />\n)\n\nfunction getFontSize({ fontSize = 2, fontSizeUnit = 'rem' }: Partial<IProps>) {\n  return `${fontSize}${fontSizeUnit}`\n}\n\nfunction getClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import React from 'react'\n\nimport { GMenuCategoryForm, WareCategoryTypeEnum } from '../../../graph/types'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuCategoryFormQuery } from './CategoryForm.graphql'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport type TCategoryFormValues = GMenuCategoryForm.WareCategory\n\nexport const CategoryFormLoader: React.SFC<IProps> = ({\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={categoryId === null}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuCategoryForm.Query>({\n          query: MenuCategoryFormQuery,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return data.wareCategory\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    categoryType: { enum: categoryType },\n    recipes: [],\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(\n    () => {\n      if (!shouldLoad) {\n        return\n      }\n      loader().then(setValues)\n    },\n    [shouldLoad],\n  )\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.SFC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport styled from 'styled-components'\n\nimport { GMenuRecipe, WareCategoryTypeEnum } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n  overflow-x: hidden;\n`\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<GMenuRecipe.Fragment>>) => (\n        <FormContainer>\n          <FormFixedRow>\n            <RecipeSuggestionPanel\n              categoryType={categoryType}\n              filterRecipes={RM.without(fieldApi.value)}\n              onAdd={addedRecipe =>\n                fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n              }\n            />\n          </FormFixedRow>\n          <FormStretchedRow>\n            <RecipeListTable\n              recipes={fieldApi.value}\n              isSortable={true}\n              showRemoveColumn={true}\n              showEditColumn={false}\n              showVisibilityColumn={false}\n              heightStretch={false}\n              onRemove={recipeId =>\n                fieldApi.setValue(\n                  RM.reject(RM.propEq('id', recipeId), fieldApi.value),\n                )\n              }\n              onSortRecipe={({ items }) => {\n                fieldApi.setValue(items)\n              }}\n            />\n          </FormStretchedRow>\n        </FormContainer>\n      )}\n    </Field>\n  )\n}\n","import React from 'react'\n\nimport { GMenuRecipe, WareCategoryTypeEnum } from '../../../graph/types'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { QueryRecipeList } from './RecipeList.graphql'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel: React.SFC<IProps> = ({\n  categoryType,\n  filterRecipes,\n  onAdd,\n}) => (\n  <WithSettings\n    observe={true}\n    render={settings => (\n      <QueryRecipeList\n        {...settings.getQueryProps({ categoryType })}\n        fetchPolicy=\"cache-and-network\"\n        render={({ recipes }) => (\n          <MenuSuggestionPanel<TRecipe>\n            options={filterRecipes(recipes)}\n            onAdd={onAdd}\n          />\n        )}\n      />\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuCategoryFilter } from '../molecules/MenuCategoryFilter'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const MenuRecipeListPage: React.SFC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"recipe\" />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuCategoryFilter />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createRecipe\">\n          <RecipeTypeSelection />\n        </CanMutate>\n        <DataTableContainer>\n          <RecipeListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { QMenuCategoryFilter } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { getCategoryTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\nimport { MenuCategoryFilterQuery } from './MenuCategoryFilter.graphql'\n\ninterface IProps {}\n\ntype TCategory = QMenuCategoryFilter.Categories\n\nexport const MenuCategoryFilter: React.FC<IProps> = () => {\n  const {\n    settings: {\n      menu: { recipe },\n    },\n  } = useRoot()\n\n  const { data, loading } = useQuery<\n    QMenuCategoryFilter.Query,\n    QMenuCategoryFilter.Variables\n  >(MenuCategoryFilterQuery, {\n    suspend: false,\n    variables: { branchId: recipe.branchId },\n  })\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return []\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data!.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TRecipeType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        onChange={value => recipe.setCategoryFilter((value as TCategory).id)}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={false}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.prop('nameLabel')}\n      />\n    </Sizer>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const MenuCategoryFilterQuery = gql`\n  query QMenuCategoryFilter($branchId: ID!) {\n    categories: wareCategories(companyBranch: $branchId) {\n      id\n      nameLabel\n      countRecipes\n      categoryType: wareCategoryType {\n        enum\n      }\n    }\n  }\n`\n","import { Trans } from '@lingui/react'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport React, { Component } from 'react'\n\nimport { RelativeRedirect } from '../../../atoms/RelativeRedirect'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\nimport { CreateButton } from './CreateButton'\n\ninterface IProps {}\n\ninterface IState {\n  isOpen: boolean\n  recipeType: Maybe<WareCategoryTypeEnum>\n}\n\nexport class RecipeTypeSelection extends Component<IProps, IState> {\n  state = { isOpen: false, recipeType: null }\n  onClose = () => {\n    this.setState({ isOpen: false })\n  }\n  onOpen = () => {\n    this.setState({ isOpen: true })\n  }\n  onSelect = (recipeType: WareCategoryTypeEnum) => () => {\n    this.setState({ isOpen: true, recipeType })\n  }\n  render() {\n    const { isOpen, recipeType } = this.state\n    return (\n      <>\n        {recipeType !== null && (\n          <RelativeRedirect\n            to={getRecipeRoute('create', recipeType)}\n            push={true}\n          />\n        )}\n        <CreateButton\n          onClick={ev => {\n            ev.preventDefault()\n            this.onOpen()\n          }}\n        />\n        <Dialog open={isOpen} onClose={this.onClose}>\n          <DialogTitle>Select item type</DialogTitle>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Main)}>\n            <Trans>Ware</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.SideDish)}>\n            <Trans>Sidedish</Trans>\n          </TouchButton>\n          <TouchButton onClick={this.onSelect(WareCategoryTypeEnum.Cover)}>\n            <Trans>Cover</Trans>\n          </TouchButton>\n        </Dialog>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { Redirect, RedirectProps } from 'react-router-dom'\n\nimport { resolveLocation } from './RelativeLink'\n\ninterface IProps extends RedirectProps {}\n\nexport const RelativeRedirect: React.SFC<IProps> = ({ to, from, ...props }) => (\n  <Redirect\n    to={resolveLocation(to, from || `${location.pathname}/`)}\n    from={from}\n    {...props}\n  />\n)\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GMenuRecipeList } from '../../../graph/types'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\nimport { MenuRecipeListQuery } from './RecipeList.graphql'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GMenuRecipeList.Query,\n    GMenuRecipeList.Variables\n  >(MenuRecipeListQuery, {\n    ...settings.getQueryProps({\n      categoryId: settings.menu.recipe.categoryFilterId,\n    }),\n    suspend: false,\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data || !data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { NoteText } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getRecipeTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: WareCategoryTypeEnum\n}\n\nconst FormContainer = styled('div')`\n  margin: 0 1.25rem 0 0;\n`\n\nexport const MenuRecipePage: React.SFC<IProps> = ({ recipeId, recipeType }) => (\n  <RecipeFormLoader recipeId={recipeId} recipeType={recipeType}>\n    <FormContainer>\n      <FullPageLayout\n        width={16}\n        pageTitle={getRecipeTypeLabel(recipeType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <Card>\n          <RecipeFormBasic recipeType={recipeType} />\n        </Card>\n        <Card>\n          <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n        </Card>\n        <IsCategoryType type={recipeType} isMain={true}>\n          <Card>\n            <Headline>\n              <Trans>Recipe ingredients</Trans>\n            </Headline>\n            <VerticalGap />\n            <RecipeIngredientsView />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Sidedish categories</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>These sidedish are presented with recipe</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.SideDish}\n              field=\"sideDishes\"\n              addButtonText={i18n.t`Attach sidedish category`}\n              noRowsText={i18n.t`Recipe has no sidedish category attached`}\n            />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Category assignments</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>Recipe is in these categories</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.Main}\n              field=\"categories\"\n              addButtonText={i18n.t`Add to category`}\n              noRowsText={i18n.t`Recipe is not in any category`}\n            />\n          </Card>\n        </IsCategoryType>\n      </FullPageLayout>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n        >\n          <SubmitButton isCreate={recipeId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </FormContainer>\n  </RecipeFormLoader>\n)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport {\n  GMenuCategoryListItem,\n  WareCategoryTypeEnum,\n} from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport CategorySuggestionPanel from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\nexport const RecipeCategoryView: React.SFC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<GMenuCategoryListItem.Fragment[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  GCategoryList,\n  GMenuCategoryListItem,\n  WareCategoryTypeEnum,\n} from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { CategoryListQuery } from './CategoryList.graphql'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = GMenuCategoryListItem.Fragment\n\nconst CategorySuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GCategoryList.Query,\n    GCategoryList.Variables\n  >(CategoryListQuery, {\n    ...settings.getQueryProps({ categoryType }),\n    fetchPolicy: 'cache-and-network',\n    suspend: false,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <MenuSuggestionPanel<TCategory>\n      isLoading={loading}\n      options={RM.without(currentCategories, categories)}\n      addButtonText={addButtonText}\n      onAdd={onAdd}\n    />\n  )\n}\n\nexport default observer(CategorySuggestionPanel)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.SFC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon=\"error_outline\">\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <CardDock position=\"BottomRight\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </CardDock>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.SFC<IProps> = ({\n  field = 'descriptionLabel',\n  icon = 'label_outline',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nconst extractAllergens = RM.pipe(\n  RM.map(RM.prop('allergens')),\n  // @ts-ignore Something wrong with Ramda typings\n  RM.flatten,\n  RM.uniq,\n)\n\nexport const RecipeAllergenDisplay: React.SFC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = extractAllergens(value)\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GAllergens } from '../../../graph/types'\nimport { AllergenFragment } from '../graph/AllergenFragment.graphql'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...GAllergen\n    }\n  }\n  ${AllergenFragment}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\n\nimport { GMenuRecipeForm, WarePriceTypeEnum } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.SFC<IProps> = ({\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={recipeId === null}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const { vats, currencyCode } = await menu.recipe.queryDefaults()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: vats[priceType],\n          currencyCode,\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import { i18nMark } from '@lingui/react'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.SFC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormDisplayField } from '../../../atoms/FormDisplayField'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nconst FormPricingCurrencyCode = styled(FormDisplayField)`\n  padding: 0.5rem;\n`\n\nexport const FormPricingField: React.SFC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormPricingCurrencyCode field=\"currencyCode\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\ninterface IProps {\n  field: FieldType\n  className?: string\n  children?: never\n}\n\nexport const FormDisplayField: React.FC<IProps> = ({ field, className }) => {\n  return (\n    <Field field={field}>\n      {fieldApi => <span className={className}>{fieldApi.value}</span>}\n    </Field>\n  )\n}\n","import React from 'react'\nimport { isDecimal, isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nconst formInputPriceValidate = (value: string) => {\n  if (value === undefined || isEmpty(value + '') || !isDecimal(value + '')) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.SFC<IProps> = ({\n  field = 'price.value',\n  icon = 'toll',\n  ...props\n}) => (\n  <IconLine icon={icon}>\n    <Sizer width={5}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        validate={formInputPriceValidate}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import { css } from 'emotion'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.SFC<IProps> = ({\n  field = 'price.vat',\n}) => (\n  <WithRoot\n    render={({ settings }) => (\n      <QueryVat\n        {...settings.queryProps}\n        renderLoading={false}\n        render={({ vats }) => (\n          <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n            {vats && (\n              <FormInputFlatSelect\n                field={field}\n                items={vats}\n                formatItem={({ vat }) => `${vat}%`}\n                isRequired={true}\n                validationName={i18n.t`VAT`}\n              />\n            )}\n          </IconLine>\n        )}\n      />\n    )}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.SFC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                {...settings.queryProps}\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.SFC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\nimport { QueryMenuStockList } from './StockList.graphql'\n\ninterface IProps {}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsView: React.SFC<IProps> = () => (\n  <WithSettings\n    observe={false}\n    render={settings => (\n      <Field field=\"ingredients\">\n        {(fieldApi: IFieldApi<TIngredient[]>) => (\n          <>\n            <RecipeIngredientsTable\n              ingredients={fieldApi.value}\n              onRemove={stockItem => {\n                fieldApi.setValue(\n                  RM.reject(RM.propEq('stockItem', stockItem), fieldApi.value),\n                )\n              }}\n            />\n            <QueryMenuStockList\n              {...settings.queryProps}\n              render={({ stockItems }) => (\n                <MenuSuggestionPanel<GMenuStockItem.Fragment>\n                  addButtonText={i18n.t`Add ingredient`}\n                  options={unselectedStockOnly(stockItems, fieldApi.value)}\n                  onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n                    fieldApi.setValue([\n                      ...fieldApi.value,\n                      {\n                        stockItem: addedStockItem.id,\n                        label: addedStockItem.nameLabel,\n                        quantity: 1,\n                        unitLabel: addedStockItem.wareUnit.code,\n                        allergens: addedStockItem.allergens.map(\n                          RM.prop('enum'),\n                        ),\n                      },\n                    ])\n                  }}\n                />\n              )}\n            />\n          </>\n        )}\n      </Field>\n    )}\n  />\n)\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.SFC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInputTextBox\n            field={['ingredients', rowIndex, 'quantity']}\n            validate={validateQuantity}\n            inputFullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.SFC<IProps> = props => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock deposit`}\n    useBackButton={true}\n  >\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue: searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { Trans } from '@lingui/react'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { GWareUnit } from '../../../graph/types'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<GWareUnit.Fragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.SFC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format('0,0.[00]')} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { GMenuStockDeposit } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: GMenuStockDeposit.StockItems[]\n  onSelect(stockItem: GMenuStockDeposit.StockItems): void\n}\n\nexport const StockDepositResultTable: React.SFC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTableContainer>\n    <DataTable items={stockItems} heightStretch={false}>\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererSelect}\n        columnData={{ onSelect }}\n      />\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n      <Column\n        dataKey=\"code\"\n        width={100}\n        label={i18n.t`Card code`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Card name`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n    </DataTable>\n  </DataTableContainer>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <TouchButton\n      iconName=\"done\"\n      width={Spacing.ButtonHeight}\n      height={Spacing.ButtonHeight}\n      onClick={() => onSelect(rowData)}\n    />\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import React from 'react'\n\nimport { GMenuStockDeposit } from '../../../graph/types'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport {\n  ChangeMenuStockQuantity,\n  QueryMenuStockDeposit,\n} from './StockDepositLoader.graphql'\n\nexport type TStockItem = GMenuStockDeposit.StockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader: React.SFC<IProps> = ({ children }) => (\n  <ChangeMenuStockQuantity\n    render={execute => {\n      const onDeposit: TDepositFn = (stockItem, quantity) => {\n        execute({\n          variables: { stockItem: stockItem.id, quantityChange: quantity },\n        })\n      }\n      return (\n        <WithSettings\n          render={settings => (\n            <QueryMenuStockDeposit\n              {...settings.queryProps}\n              render={({ stockItems }) => children(stockItems, onDeposit)}\n            />\n          )}\n        />\n      )\n    }}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildMutation } from '../../../graph/buildMutation'\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  GChangeMenuStockQuantity,\n  GMenuStockDeposit,\n} from '../../../graph/types'\nimport { WareUnitFragment } from '../graph/WareUnitFragment.graphql'\n\nconst MenuStockDepositQuery = gql`\n  query GMenuStockDeposit($branchId: ID!) {\n    stockItems(companyBranch: $branchId) {\n      id\n      code\n      plu\n      nameLabel: label\n      note\n      quantity\n      wareUnit {\n        ...GWareUnit\n      }\n    }\n  }\n  ${WareUnitFragment}\n`\n\nconst ChangeMenuStockQuantityMutation = gql`\n  mutation GChangeMenuStockQuantity($stockItem: ID!, $quantityChange: Float!) {\n    changeAmountStockItem(id: $stockItem, amountOffset: $quantityChange) {\n      id\n      quantity\n    }\n  }\n`\n\nexport const ChangeMenuStockQuantity = buildMutation<\n  GChangeMenuStockQuantity.Mutation,\n  GChangeMenuStockQuantity.Variables\n>(ChangeMenuStockQuantityMutation)\n\nexport const QueryMenuStockDeposit = buildQuery<\n  GMenuStockDeposit.Query,\n  GMenuStockDeposit.Variables\n>(MenuStockDepositQuery)\n","import { DocumentNode } from 'graphql'\nimport React from 'react'\nimport { Mutation, MutationFn, MutationProps } from 'react-apollo'\n\nexport function buildMutation<TData, TVariables>(mutation: DocumentNode) {\n  interface IProps\n    extends Omit<MutationProps<TData, TVariables>, 'mutation' | 'children'> {\n    render(result: MutationFn<TData, TVariables>): ReactNode\n  }\n  const GMutation: React.SFC<IProps> = ({ render, children, ...props }) => (\n    <Mutation mutation={mutation} {...props}>\n      {render}\n    </Mutation>\n  )\n  return GMutation\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\n\nexport const MenuStockListPage: React.SFC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"stock\" />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createStockItem\">\n          <CreateButton routeTo=\"create\" />\n        </CanMutate>\n        <DataTableContainer>\n          <StockListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GMenuStockList } from '../../../graph/types'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuStockListQuery } from './StockList.graphql'\nimport { StockListTable } from './StockListTable'\n\nexport const StockListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQuery<\n    GMenuStockList.Query,\n    GMenuStockList.Variables\n  >(MenuStockListQuery, {\n    ...settings.queryProps,\n    suspend: false,\n  })\n\n  const filteredItems = useComputed(\n    () => {\n      if (!data || !data.stockItems || data.stockItems.length === 0) {\n        return []\n      }\n      const searchValue = settings.menu.stock.filterInput\n      const partialMatch = isPartialMatch(searchValue)\n      return data.stockItems.filter(\n        RM.cond([\n          [RM.propEq('plu', searchValue), RM.T],\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.stockItems],\n  )\n\n  return <StockListTable stockItems={filteredItems} isLoading={loading} />\n})\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { GMenuStockList } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\n\ntype TStockItem = GMenuStockList.StockItems\n\ninterface IProps {\n  stockItems: TStockItem[]\n  isLoading: boolean\n}\n\nexport const StockListTable: React.SFC<IProps> = ({\n  stockItems,\n  isLoading,\n}) => (\n  <DataTable\n    items={stockItems}\n    heightStretch={true}\n    noRowsRenderer={() =>\n      isLoading ? (\n        <Loading />\n      ) : (\n        <h3>\n          <Trans>Selected branch has no stock cards</Trans>\n        </h3>\n      )\n    }\n  >\n    <Column\n      dataKey=\"id\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={checkColumnAccess(\n        { canQuery: 'stockItem' },\n        ColumnRendererEdit,\n      )}\n    />\n    <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      minWidth={30}\n      flexGrow={2}\n      label={i18n.t`Card name`}\n    />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"allowNegative\"\n      width={300}\n      label={i18n.t`Negative stock`}\n      cellRenderer={stockAllowNegative}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const MenuStockPage: React.SFC<IProps> = ({ stockId }) => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock card`}\n    hideLogoutWidget={true}\n    useBackButton={true}\n  >\n    <StockFormLoader stockId={stockId}>\n      <>\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              stockId === null ? 'createStockItem' : 'updateStockItem'\n            }\n          >\n            <SubmitButton isCreate={stockId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n        <Card>\n          <StockFormMain />\n          <CanQuery queryName=\"recipes\">\n            <StockRecipesView stockId={stockId} />\n          </CanQuery>\n        </Card>\n      </>\n    </StockFormLoader>\n  </FullPageLayout>\n)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  GMenuStockDefaults,\n  GMenuStockForm,\n  WareUnitEnum,\n} from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.SFC<IProps> = ({ stockId, children }) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={stockId === null}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId: stockId! },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GMenuStockForm } from '../../../graph/types'\nimport { AllergenFragment } from '../graph/AllergenFragment.graphql'\nimport { WareUnitFragment } from '../graph/WareUnitFragment.graphql'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...GWareUnit\n      }\n      allergens {\n        ...GAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${AllergenFragment}\n  ${WareUnitFragment}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.SFC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <CardDock position=\"BottomRight\">\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </CardDock>\n  </FormContainer>\n)\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n  icon?: string\n}\n\nexport const FormInputAllergens: React.SFC<IProps> = ({\n  field = 'allergens',\n  icon = 'error_outline',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={icon} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/react'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.SFC<IProps> = ({}) => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputPlu: React.SFC<IProps> = ({\n  field = 'plu',\n  icon = 'fingerprint',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {\n  icon?: string\n}\n\nexport const FormInputWareUnit: React.SFC<IProps> = ({\n  field = 'wareUnit',\n  icon = 'select_all',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={icon} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport {\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n  NoteText,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { i18n } from '../../../i18n'\nimport { QueryStockRecipes } from './StockRecipesView.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const StockRecipesView: React.SFC<IProps> = ({ stockId }) =>\n  stockId === null ? null : (\n    <QueryStockRecipes\n      variables={{ stockId }}\n      render={({ stockItem: { ingredients } }) =>\n        ingredients.length > 0 ? (\n          <>\n            <Headline>\n              <Trans>Recipes using this card</Trans>\n            </Headline>\n\n            <DataTable items={[...ingredients]}>\n              <Column\n                dataKey=\"\"\n                cellDataGetter={({ rowData }) => ({\n                  pathname: `/settings/menu/recipe/${rowData.recipe.id}`,\n                  state: { recipeType: rowData.recipe.recipeType.enum },\n                })}\n                cellRenderer={ColumnRendererEdit}\n                width={100}\n              />\n              <Column\n                dataKey=\"recipe\"\n                width={300}\n                label={i18n.t`Name`}\n                cellRenderer={({ rowData }) => (\n                  <>\n                    {rowData.recipe.nameLabel}\n                    <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n                  </>\n                )}\n              />\n            </DataTable>\n          </>\n        ) : null\n      }\n    />\n  )\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GStockRecipes } from '../../../graph/types'\n\nexport const StockRecipesQuery = gql`\n  query GStockRecipes($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      ingredients {\n        id\n        recipe {\n          id\n          nameLabel\n          descriptionLabel\n          recipeType: wareCategoryType {\n            enum\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const QueryStockRecipes = buildQuery<\n  GStockRecipes.Query,\n  GStockRecipes.Variables\n>(StockRecipesQuery)\n"],"sourceRoot":""}