{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/Sizer.tsx","atoms/Headline.tsx","atoms/ShowFeedbackButton.tsx","hooks/useMutationGuard.ts","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/CanQuery.tsx","atoms/HorizontalSeparator.tsx","atoms/Price.tsx","atoms/FlexColumn.tsx","atoms/SelectControlFlat.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/MarginBox.tsx","hooks/useExecutableQuery.ts","atoms/TimeBadge.tsx","atoms/CardListTitle.tsx","segments/order/atoms/CustomerIdentity.tsx","hooks/useGuardedMutation.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","atoms/RelativeLink.tsx","atoms/DeliveryMinutes.tsx","molecules/DeliveryTimeDialog.tsx","atoms/FormInputDateTime.tsx","atoms/FlexAutoHeight.tsx","segments/order/molecules/OrderTicker.graphql.ts","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","atoms/ObserverWhen.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderWarePriceLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderIdLine.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/atoms/OrderTimeLabel.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareLine.tsx","segments/order/molecules/OrderWareList.tsx","segments/order/organisms/OrderDetail.graphql.ts","molecules/ConfirmButton.tsx","segments/order/molecules/OrderCancelButton.tsx","segments/order/molecules/OrderDeliveryToPickup.tsx","segments/order/molecules/OrderStateButton.tsx","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.graphql.ts","segments/order/organisms/OrderStateFlow.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/atoms/OrderBox.tsx","segments/overview/molecules/ClosureHistoryFilter.tsx","segments/overview/organisms/ClosureHistoryLoader.graphql.ts","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/pages/ClosureHistoryPage.tsx","atoms/MonospaceOutput.tsx","segments/overview/organisms/ClosureStatisticsContent.graphql.ts","segments/overview/organisms/ClosureStatisticsContent.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/pages/ClosurePage.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/molecules/StatisticsFilter.tsx","segments/overview/hooks/createStatisticsQuery.ts","segments/overview/organisms/DailyStatisticsLoader.graphql.ts","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/organisms/DailyStatisticsContent.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/organisms/OrdersStatisticsList.graphql.ts","segments/overview/organisms/OrdersStatisticsLoader.graphql.ts","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/organisms/OrdersStatisticsList.tsx","segments/overview/organisms/OrdersStatisticsSummary.tsx","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/routes/OverviewRoutes.tsx"],"names":["IconLineWrap","styled","div","withConfig","displayName","componentId","DescriptionContainer","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","mutationName","user","useRoot","useObserver","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","SizerContainer","_ref$widthUnit","widthUnit","height","_ref2$heightUnit","heightUnit","Sizer","_ref3$widthUnit","_ref3$heightUnit","className","wrap","_MarginBox__WEBPACK_IMPORTED_MODULE_4__","Headline","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","ShowFeedbackButton","react_default","TouchButton","onClick","Raven","showReportDialog","_lingui_react","id","useMutationGuard","mutate","options","defaultMessage","i18n","_","_useSnackBar","useSnackBar","enqueueSnackbar","enqueueError","enqueueWarning","handleUserErrors","userErrors","forEach","handleGraphQLErrors","errors","filter","RM","pathEq","map","prop","handleError","err","isApolloError","networkError","graphQLErrors","reportError","action","key","asyncToGenerator","regenerator_default","mark","_callee","variables","mutateOptions","result","_args","_context","prev","next","sent","abrupt","data","getUserErrors","t0","stop","this","_x","apply","NoAccess","PageLayoutFullHeightItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","FlexRowSingle","_ref$justify","justify","CanQuery","queryName","canQuery","HorizontalSeparator","_styling__WEBPACK_IMPORTED_MODULE_2__","HorizontalSeparatorStyled","_ref$visible","visible","Price","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","formatPrice","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_6___default","hasSelection","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","idx","Component","defaultProps","getItemValue","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","react","placeholder","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","FormSubmit","react_form__WEBPACK_IMPORTED_MODULE_2__","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","keys","fieldName","isEmpty","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","utils","MomentUtils","cancelIconPadding","_templateObject","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","MarginBox","useExecutableQuery","query","client","useApolloClient","useObservable","loading","wasExecuted","hasAnyError","Boolean","error","execute","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","queryResult","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","runInAction","reportFailingQuery","getOperationName","reset","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","red","orange","bigNumberStyle","dashStyle","_templateObject2","clickable","_templateObject3","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","CardListTitle","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","useGuardedMutation","_speedlo_graphql__WEBPACK_IMPORTED_MODULE_0__","_useMutationGuard__WEBPACK_IMPORTED_MODULE_1__","mutation","useMutation","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","companyBranch","_atoms_DeliveryTimeBadge__WEBPACK_IMPORTED_MODULE_10__","Date","orderStateCategory","OrderStateCategoryEnum","Cancel","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","formatAddress","address","_atoms_CustomerIdentity__WEBPACK_IMPORTED_MODULE_9__","_atoms_Price__WEBPACK_IMPORTED_MODULE_5__","totalSum","currency","code","isPaidWithCard","NoteLine","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_2__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_i18n__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","CurrentNoteStyled","span","PreviousNoteStyled","note","previousNote","RelativeLink","from","linkProps","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","deliveryMinutes","pickupMinutes","MinutesContainer","MinutesItem","DeliveryMinutes","onMinuteClick","initialMinutes","_React$useState","useState","_React$useState2","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setSelected","getMinutesForDeliveryType","yellow","type","DeliveryTimeDialog","onConfirm","onCancel","cancelText","refApi","_useState","_useState2","isOpen","setOpen","openDialog","closeDialog","current","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","open","onClose","_atoms_DeliveryMinutes__WEBPACK_IMPORTED_MODULE_4__","_TouchButton__WEBPACK_IMPORTED_MODULE_5__","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","FormInputDateTime","field","_ref$inline","inline","pickerProps","Picker","InlineDateTimePicker","DateTimePicker","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_6__","react_form__WEBPACK_IMPORTED_MODULE_4__","render","fieldApi","setValue","onOpen","setTouched","format","ampm","showTabs","maxDateMessage","_i18n__WEBPACK_IMPORTED_MODULE_5__","minDateMessage","AutoHeight","OrderTickerFragment","gql","FAddressFragmentDoc","FCustomerFragmentDoc","FormInputDate","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_5__","react_form__WEBPACK_IMPORTED_MODULE_3__","okLabel","cancelLabel","clearLabel","todayLabel","FlexRow","ObserverWhen","test","renderSuccess","renderFailure","ContactLines","phones","emails","renderContact","contact","description","isMail","href","replace","renderClickableLink","email","OrderCountLine","total","values","OrderWareLineWrap","NameContainerStyled","OrderWarePriceLine","_ref$highlight","highlight","OrderCartTotalsContainer","OrderDetailTotals","OrderWarePriceLine_OrderWarePriceLine","transportFee","coverPrice","totalDiscount","OrderOriginLabel","orderOrigin","OrderOriginEnum","DameJidlo","OrderIdLine","displayedId","OrderRuleLines","rules","join","OrderTimeLabel","DelayedDeliveryTimeLabel","DelayedOrderTimeLabel","OrderStats","stats","formatTimeWithoutTodayDate","driver","_order$driver$user","Timelapse","labelMap","_labelMap","defineProperty","NewOrders","i18nMark","Preparing","ReadyToDeliver","OnWay","Finished","OrderTimeLine","orderTiming","reject","createdAt","timing","CodeContainerStyled","OrderWareLine","OrderWareLine_OrderWareLineWrap","OrderWareLine_NameContainerStyled","OrderWareLine_PriceContainerStyled","OrderWareList","orderWares","orderWare","OrderWareLine_OrderWareLine","recipe","nameLabel","sidedishes","sidedish","QueryOrderDetail","buildQuery","FPriceFragmentDoc","FEmailFragmentDoc","FPhoneFragmentDoc","OrderDriverFragment","ConfirmButton","confirmNode","_ref$initialColor","initialColor","_ref$confirmColor","confirmColor","_ref$confirmDisableMs","confirmDisableMs","_ref$resetToInitialMs","resetToInitialMs","SECOND","slicedToArray","needConfirm","setNeedConfirm","buttonRef","useRef","useEffect","timer","setTimeout","clearTimeout","OrderCancelButton","orderId","cancelOrder","MCancelOrderDocument","ConfirmButton_ConfirmButton","OrderDeliveryToPickup","isDelivery","changeToPickup","ChangeOrderToPickupMutation","text","stateLabels","_stateLabels","OrderStateEnum","Accepted","OrderStateButton","nextState","stateModel","updateOrderState","DriverName","backgroundColor","background","ButtonHeight","borderWidth","borderRadius","Button","valueContainer","singleValue","fontSize","OrderDriverSelect","drivers","selectedDriver","isLoading","onSelect","onClear","onReload","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","Icon","react_select_esm","DropdownIndicator","OrderStateDeliver","branchId","OrderStateDeliver_graphql","fetchPolicy","orderDriver","refetch","OrderDriverSelect_OrderDriverSelect","removeDriver","selectDriver","deliverOrder","OrderStateFlowContainerWrapper","Control","OrderStateFlowContainer","Children","child","OrderStateTimeNotification","Messenger","sendTimeNotification","QueryOrderState","OrderStateFlow_graphql_templateObject","OrderStateCategoryFragment","OrderStateNewOrder","OrderStateFlowContainer_OrderStateFlowContainer","canCancel","OrderCancelButton_OrderCancelButton","OrderDeliveryToPickup_OrderDeliveryToPickup","OrderStateTimeNotification_OrderStateTimeNotification","OrderStateButton_OrderStateButton","OrderStateAcceptedOrder","canDeliver","OrderStateDeliver_OrderStateDeliver","OrderStateReadyToDeliverOrder","OrderStateOnWayOrder","OrderStateFinishedOrder","OrderStateFlow","allowedCategories","VError","isCancelable","stateProps","OrderStateFlow_OrderStateNewOrder","OrderStateFlow_OrderStateAcceptedOrder","OrderStateFlow_OrderStateReadyToDeliverOrder","OrderStateFlow_OrderStateOnWayOrder","OrderStateFlow_OrderStateFinishedOrder","OrderDetailContainerStyled","OrderDetail","OrderWareList_OrderWareList","OrderDetailTotals_OrderDetailTotals","OrderRuleLines_OrderRuleLines","allAppliedRules","OrderCountLine_OrderCountLine","customerOrdersCountCurrent","customerOrdersCountTotal","ContactLines_ContactLines","OrderIdLine_OrderIdLine","OrderTimeLine_OrderTimeLine","OrderStats_OrderStats","OrderStateFlow_OrderStateFlow","OrderBox_OrderBox","OrderBoxStyled","OrderBox","toggleOrderDetail","isOrderDetailOpen","ObserverWhen_ObserverWhen","OrderDetail_OrderDetail","ClosureHistoryFilter","autoOk","ClosureHistoryQuery","context","createContext","ClosureHistoryLoader","statistics","_useExecutableQuery","es","onSubmit","formValues","closureBranch","dateFrom","formatDateISO","dateTo","defaultValues","subDays","ClosureHistoryLoader_context","Provider","ClosureHistoryTable","observer","_useClosureHistory","useContext","Loading","financialReports","report","reportSequence","reportDatetime","index_es","ClosureCurrentButton","react_router_dom","ButtonToRight","ClosureStatisticsFilter","showCurrent","setClosureBranch","ClosureCurrentButton_ClosureCurrentButton","ClosureHistoryPage","ClosureHistoryLoader_ClosureHistoryLoader","FullPageLayout","pageTitle","useBackButton","backRoute","ClosureHistoryFilter_ClosureHistoryFilter","MonospaceOutputStyled","p","MonospaceOutput","RegExp","FinancialReport","ClosureStatisticsContent_graphql_templateObject","QueryFinancialReport","ClosureStatisticsContent","_ref$reportId","reportId","WithRoot","showReport","renderLoading","_ref4","lastReport","MonospaceOutput_MonospaceOutput","plainData","ClosureHistoryButton","ClosureSubmitButton","ClosureStatisticsControl","enqueueSuccess","history","useRouterContext","createClosure","CreateFinancialReport","useCallback","companyBranchId","ClosureSubmitButton_ClosureSubmitButton","ClosureStatisticsControl_ButtonToRight","ClosureHistoryButton_ClosureHistoryButton","ClosurePage","match","ClosureStatisticsControl_ClosureStatisticsControl","params","ClosureStatisticsContent_ClosureStatisticsContent","StatisticsBranchFilter","setBranchFilter","clearBranchFilter","StatisticsFilter","0","branchesFilter","getInitialResult","createStatisticsQuery","useStatisticsQuery","dateTimeFrom","dateTimeTo","executeFilter","isoDate","resetResult","DailyStatisticsLoader_graphql_templateObject","DailyStatisticsLoader","_useStatisticsQuery","updateFilter","DailyStatisticsLoader_context","DailyStatisticsContent","_useDailyStatistics","dailyStatisticsPlain","categoryStatisticsPlain","deliveryStatisticsPlain","driversStatisticsPlain","DailyStatisticsPage","DailyStatisticsLoader_DailyStatisticsLoader","StatisticsBranchFilter_StatisticsBranchFilter","StatisticsFilter_StatisticsFilter","OrdersStatisticsListQuery","OrdersStatisticsList_graphql_templateObject","OrdersStatisticsLoader_graphql_templateObject","useOrderStatistics","OrdersStatisticsLoader","OrdersStatisticsLoader_context","OrdersStatisticsList","_useRoot","orderModel","_useOrderStatistics","loaderRef","orders","Map","measureCache","useMemo","CellMeasurerCache","defaultHeight","minHeight","clear","clearAll","resetLoadMoreRowsCache","queryMoreOrders","startIndex","stopIndex","list","index","pagination","fromIndex","toIndex","toConsumableArray","set","shift","totalCount","_data$stats$finishedO","finishedOrders","finishedCount","cancelledCount","dist_es","rowCount","isRowLoaded","has","loadMoreRows","_ref5","onRowsRendered","registerChild","rowHeight","deferredMeasurementCache","noRowsRenderer","rowRenderer","_ref6","parent","get","columnIndex","rowIndex","cache","_ref7","measure","o","StatPanel","StatLabel","h1","StatValue","OrdersStatisticsSummary","onlinePayments","fees","orderStatisticsPlain","OrdersStatisticsPage","OrdersStatisticsLoader_OrdersStatisticsLoader","FlexAutoHeight","PageLayout","layouts","i","x","y","w","h","showSoundControl","scrollPageTitle","ClosureButton","DailyStatisticsButton","OrdersStatisticsButton","OverviewPage","OverviewRoutes_OverviewRoutes","OverviewRoutes","PageTitle","react_router","SecureRoute","exact","path","NotFoundPage"],"mappings":"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","file":"static/js/173.36148e27.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../styling'\nimport { MarginBox } from './MarginBox'\n\ninterface IProps {\n  width?: number\n  widthUnit?: string\n  height?: number\n  heightUnit?: string\n  margin?: string\n  className?: string\n}\n\nconst widthProperty = ({\n  width: width,\n  widthUnit: widthUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (width === undefined) {\n    return ''\n  } else {\n    return `width: ${width}${widthUnit}`\n  }\n}\n\nconst heightProperty = ({\n  height: height,\n  heightUnit: heightUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (height === undefined) {\n    return ''\n  } else {\n    return `height: ${height}${heightUnit}`\n  }\n}\n\nconst SizerContainer = styled('div')`\n  ${widthProperty};\n  ${heightProperty};\n`\n\nexport const Sizer: React.FC<IProps> = ({\n  width,\n  widthUnit = Spacing.DefaultSizeUnit,\n  height,\n  heightUnit = Spacing.DefaultSizeUnit,\n  margin,\n  children,\n  className,\n  ...props\n}) => {\n  const wrap = (\n    <SizerContainer\n      width={width}\n      widthUnit={widthUnit}\n      height={height}\n      heightUnit={heightUnit}\n      className={className}\n      {...props}\n    >\n      {children}\n    </SizerContainer>\n  )\n\n  return margin === undefined ? (\n    wrap\n  ) : (\n    <MarginBox margin={margin}>{wrap}</MarginBox>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import { Trans } from '@lingui/macro'\nimport Raven from 'raven-js'\nimport React from 'react'\n\nimport { TouchButton } from '../molecules/TouchButton'\n\nexport function ShowFeedbackButton() {\n  return (\n    <TouchButton onClick={() => Raven.showReportDialog()}>\n      <Trans> Submit feedback </Trans>\n    </TouchButton>\n  )\n}\n","import { MutationFn, MutationHookOptions } from '@speedlo/graphql'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { GraphQLError } from 'graphql'\nimport React from 'react'\n\nimport { ShowFeedbackButton } from '../atoms/ShowFeedbackButton'\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\nimport { useSnackBar } from './useSnackBar'\n\ninterface IMutationGuardOptions<TData> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useMutationGuard<TData, TVariables>(\n  mutate: MutationFn<TData, TVariables>,\n  options: IMutationGuardOptions<TData> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const { enqueueSnackbar, enqueueError, enqueueWarning } = useSnackBar()\n\n  const handleUserErrors = (userErrors: ReadonlyArray<string>) => {\n    userErrors.forEach(enqueueWarning)\n  }\n\n  const handleGraphQLErrors = (errors: ReadonlyArray<GraphQLError>) => {\n    const userErrors = errors.filter(\n      RM.pathEq(['extensions', 'showToUser'], true),\n    )\n    if (userErrors.length === 0) {\n      enqueueError(defaultMessage)\n    } else {\n      handleUserErrors(userErrors.map(RM.prop('message')))\n    }\n  }\n\n  const handleError = (err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        enqueueError(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n    enqueueSnackbar(defaultMessage, {\n      action: [React.createElement(ShowFeedbackButton, { key: 'feedback' })],\n    })\n  }\n\n  return async (\n    variables: TVariables,\n    mutateOptions: MutationHookOptions<TData, TVariables> = {},\n  ) => {\n    try {\n      const result = await mutate(variables, mutateOptions)\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      if (options.getUserErrors) {\n        const userErrors = options.getUserErrors(result.data)\n        if (userErrors !== null) {\n          handleUserErrors(userErrors)\n        }\n      }\n      return result.data\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import styled from 'styled-components'\n\nexport interface IProps {\n  margin: string\n  className?: string\n}\n\nexport const MarginBox = styled('div')`\n  margin: ${(props: IProps) => props.margin};\n`\n","import { ApolloError, QueryOptions } from 'apollo-client'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { getOperationName } from 'apollo-utilities'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\nimport { useApolloClient } from 'react-apollo-hooks'\n\nimport { reportError, reportFailingQuery } from '../helpers/sentry'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  errors?: ReadonlyArray<GraphQLError>\n  error?: ApolloError\n  hasAnyError: boolean\n  wasExecuted: boolean\n}\n\nexport function useExecutableQuery<TData, TVariables>(\n  query: DocumentNode,\n  options: Partial<QueryOptions<TVariables>> = {},\n) {\n  const client = useApolloClient()\n  const result: IQueryResult<TData> = useObservable({\n    data: null,\n    loading: false,\n    wasExecuted: false,\n    get hasAnyError() {\n      return Boolean((result.errors && result.errors.length) || result.error)\n    },\n  })\n  const execute = async (variables: TVariables) => {\n    result.loading = true\n    try {\n      const queryResult = await client.query<TData, TVariables>({\n        ...options,\n        query,\n        variables,\n      })\n      runInAction(() => {\n        result.wasExecuted = true\n        result.data = queryResult.data\n        result.errors = queryResult.errors\n        result.loading = false\n      })\n    } catch (err) {\n      if (isApolloError(err)) {\n        runInAction(() => {\n          result.error = err\n          result.errors = err.graphQLErrors\n          result.loading = false\n        })\n      } else {\n        runInAction(() => {\n          result.error = err\n          result.loading = false\n        })\n        reportError(err)\n      }\n    }\n    if (result.errors) {\n      reportFailingQuery(result.errors, {\n        query: getOperationName(query),\n        variables,\n      })\n    }\n    return result\n  }\n  const reset = () => {\n    runInAction(() => {\n      result.wasExecuted = false\n      result.data = null\n      result.error = undefined\n      result.errors = undefined\n      result.loading = false\n    })\n  }\n  return { result, execute, reset }\n}\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n`\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { MutationHookOptions, useMutation } from '@speedlo/graphql'\nimport { DocumentNode } from 'graphql'\n\nimport { useMutationGuard } from './useMutationGuard'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  return useMutationGuard<TData, TVariables>(useMutation(mutation, options), {\n    getUserErrors: options.getUserErrors,\n  })\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { GOrderListTicker, GOrderStateCategory } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={\n              order.orderStateCategory === OrderStateCategoryEnum.Cancel\n            }\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          <Price\n            price={order.totalSum.value}\n            currencyCode={order.totalSum.currency.code}\n          />\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  initialMinutes?: number\n  deliveryType: DeliveryTypeEnum\n  onMinuteClick(minute: number): void\n}\n\nconst deliveryMinutes = [20, 30, 45, 60, 75, 90, 105, 120]\nconst pickupMinutes = [10, 20, 30, 45, 60, 75, 90]\n\nconst MinutesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst MinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport const DeliveryMinutes: React.FC<IProps> = ({\n  deliveryType,\n  onMinuteClick,\n  initialMinutes,\n}) => {\n  const [selected, setSelected] = React.useState(initialMinutes)\n  const options = getMinutesForDeliveryType(deliveryType)\n  return (\n    <MinutesContainer>\n      {options.map(minutes => (\n        <MinutesItem key={minutes}>\n          <TouchButton\n            onClick={() => {\n              setSelected(minutes)\n              onMinuteClick(minutes)\n            }}\n            color={selected === minutes ? Colors.yellow : Colors.green}\n          >\n            {minutes}\n          </TouchButton>\n        </MinutesItem>\n      ))}\n    </MinutesContainer>\n  )\n}\n\nexport function getMinutesForDeliveryType(type: DeliveryTypeEnum) {\n  return type === DeliveryTypeEnum.Pickup ? pickupMinutes : deliveryMinutes\n}\n","import { Trans } from '@lingui/macro'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport React, { MutableRefObject, useState } from 'react'\n\nimport { DeliveryMinutes } from '../atoms/DeliveryMinutes'\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  title: string\n  deliveryType: DeliveryTypeEnum\n  cancelText?: string\n  onConfirm(minutes: number): void\n  onCancel?(): void\n  refApi?: MutableRefObject<Maybe<IDeliveryTimeDialogApi>>\n  children?(props: IDeliveryTimeDialogApi): React.ReactElement<{}>\n}\n\nexport interface IDeliveryTimeDialogApi {\n  openDialog(): void\n  closeDialog(): void\n}\n\nexport const DeliveryTimeDialog: React.FC<IProps> = ({\n  title,\n  deliveryType,\n  onConfirm,\n  onCancel,\n  children,\n  cancelText,\n  refApi,\n}) => {\n  const [isOpen, setOpen] = useState(false)\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  if (refApi) {\n    refApi.current = { openDialog, closeDialog }\n  }\n\n  return (\n    <>\n      {children && children({ openDialog, closeDialog })}\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DeliveryMinutes\n            deliveryType={deliveryType}\n            onMinuteClick={minutes => {\n              closeDialog()\n              onConfirm(minutes)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <TouchButton\n            onClick={() => {\n              closeDialog()\n              if (onCancel) {\n                onCancel()\n              }\n            }}\n          >\n            {cancelText ? cancelText : <Trans>Cancel</Trans>}\n          </TouchButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import {\n  DateTimePicker,\n  DateTimePickerProps,\n  InlineDateTimePicker,\n} from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DateTimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n  inline?: boolean\n}\n\nexport const FormInputDateTime: React.FC<IProps> = ({\n  field,\n  inline = true,\n  ...pickerProps\n}) => {\n  const Picker = inline ? InlineDateTimePicker : DateTimePicker\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi =>\n          React.createElement(Picker, {\n            value: fieldApi.value,\n            onChange: value => fieldApi.setValue(value),\n            onOpen: () => fieldApi.setTouched(true),\n            format: 'lll',\n            ampm: false,\n            showTabs: false,\n            maxDateMessage: i18n.t`Date is too much in the future`,\n            minDateMessage: i18n.t`Date is too much in the past`,\n            ...pickerProps,\n          })\n        }\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nexport const AutoHeight = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import gql from 'graphql-tag'\n\nimport {\n  FAddressFragmentDoc,\n  FCustomerFragmentDoc,\n} from '../../../graph/generated'\n\nexport const OrderTickerFragment = gql`\n  fragment GOrderListTicker on Order {\n    id\n    createdAt\n    isPaidWithCard\n    deliveryType {\n      enum\n    }\n    deliverAt\n    deliverAtWorst\n    deliveredAt\n    delayedDeliveryTime\n    companyBranch {\n      id\n      name\n      oldOrderThreshold\n    }\n    address {\n      ...FAddress\n    }\n    customer {\n      ...FCustomer\n    }\n    totalSum {\n      value\n      currency {\n        code\n      }\n    }\n  }\n  ${FAddressFragmentDoc}\n  ${FCustomerFragmentDoc}\n`\n","import { DatePickerProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineDatePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"ll\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            todayLabel={i18n.t`Today`}\n            maxDateMessage={i18n.t`Date is too much in the future`}\n            minDateMessage={i18n.t`Date is too much in the past`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\ninterface IObserverWhenProps {\n  test(): boolean\n  renderSuccess(): ReactNode\n  renderFailure?(): ReactNode\n}\n\nexport const ObserverWhen: React.FC<IObserverWhenProps> = ({\n  test,\n  renderSuccess,\n  renderFailure,\n}) =>\n  useObserver(\n    () => (test() ? renderSuccess() : renderFailure ? renderFailure() : null),\n  )\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { FEmailFragment, FPhoneFragment } from '../../../graph/generated'\n\ninterface IContactLinesProps {\n  phones: ReadonlyArray<FPhoneFragment>\n  emails: ReadonlyArray<FEmailFragment>\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (FPhoneFragment | FEmailFragment)\n\nexport const ContactLines: React.FC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import { Plural, SelectOrdinal, Trans } from '@lingui/react'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.FC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  label: string\n  price: number\n  highlight?: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\n\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWarePriceLine: React.FC<IProps> = ({\n  label,\n  price,\n  highlight = false,\n}) => (\n  <OrderWareLineWrap>\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      {highlight ? (\n        <b>\n          <Price price={price} />\n        </b>\n      ) : (\n        <Price price={price} />\n      )}\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { OrderWarePriceLine } from './OrderWarePriceLine'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nconst OrderCartTotalsContainer = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.FC<IProps> = ({ order }) => (\n  <OrderCartTotalsContainer>\n    <OrderWarePriceLine\n      label={i18n.t`Transport fee`}\n      price={order.transportFee.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Covers price`}\n      price={order.coverPrice.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Discount total`}\n      price={order.totalDiscount.value * -1}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Total price`}\n      price={order.totalSum.value}\n      highlight={true}\n    />\n  </OrderCartTotalsContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  GOrderDetailOrderOrigin,\n  OrderOriginEnum,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  displayedId: string\n  orderOrigin: GOrderDetailOrderOrigin\n}\n\nconst orderColorAccordingOrigin = ({ orderOrigin }: IProps) => {\n  switch (orderOrigin.enum) {\n    case OrderOriginEnum.DameJidlo:\n      return Colors.orange\n    default:\n      return Colors.greyLight\n  }\n}\n\nconst OrderOriginLabel = styled.div`\n  display: inline-block;\n  background: ${orderColorAccordingOrigin};\n  border-radius: 0.7rem;\n  margin: 0 0 0 1rem;\n  padding: 0.1rem 0.8rem;\n`\n\nexport const OrderIdLine: React.FC<IProps> = ({ displayedId, orderOrigin }) => (\n  <IconLine icon=\"format_list_numbered\" labelMargin=\"0\">\n    {displayedId}\n    <OrderOriginLabel orderOrigin={orderOrigin} displayedId={displayedId}>\n      {orderOrigin.code}\n    </OrderOriginLabel>\n  </IconLine>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: ReadonlyArray<string>\n}\n\nexport const OrderRuleLines: React.FC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import styled from 'styled-components'\n\nimport { Colors } from '../../../styling'\n\nexport const OrderTimeLabel = styled.div`\n  margin-left: 1rem;\n  display: inline-block;\n  color: ${Colors.greyMiddle};\n`\n","import { Trans } from '@lingui/macro'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GOrderDetailOrder } from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  order: GOrderDetailOrder\n}\n\nconst DelayedDeliveryTimeLabel = styled.span`\n  font-weight: bold;\n  color: ${Colors.orange};\n`\nconst DelayedOrderTimeLabel = styled(OrderTimeLabel)`\n  color: ${Colors.orange};\n`\n\nexport const OrderStats: React.FC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.delayedDeliveryTime) {\n    stats.push(\n      <div key=\"delayedDeliveryTime\">\n        <DelayedDeliveryTimeLabel>\n          {formatTimeWithoutTodayDate(order.delayedDeliveryTime)}\n        </DelayedDeliveryTimeLabel>\n        <DelayedOrderTimeLabel>\n          <Trans>Deliver at time</Trans>\n        </DelayedOrderTimeLabel>\n      </div>,\n    )\n  } else if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <OrderTimeLabel>\n          <Trans>Deliver on time</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <OrderTimeLabel>\n          <Trans>Driver</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { GOrderDetail } from '../../../graph/types'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  orderTiming: ReadonlyArray<GOrderDetail.OrderTiming>\n}\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NewOrders]: i18nMark('Created'),\n  [OrderStateCategoryEnum.Preparing]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.OnWay]: i18nMark('On way'),\n  [OrderStateCategoryEnum.Finished]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.FC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <OrderTimeLabel>\n          {i18n._(labelMap[timing.orderStateCategory])}\n        </OrderTimeLabel>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.black};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.FC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React, { Fragment } from 'react'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: ReadonlyArray<GOrderDetail.Items>\n}\n\nexport const OrderWareList: React.FC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: GOrderDetail.Items) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FEmailFragmentDoc,\n  FPhoneFragmentDoc,\n  FPriceFragmentDoc,\n} from '../../../graph/generated'\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderDriverFragment } from '../molecules/OrderStateDeliver.graphql'\n\nexport const QueryOrderDetail = buildQuery<\n  GOrderDetail.Query,\n  GOrderDetail.Variables\n>(gql`\n  query GOrderDetail($id: ID!) {\n    order(id: $id) {\n      id\n      createdAt\n      deliverAt\n      delayedDeliveryTime\n      companyBranch {\n        id\n      }\n      customer {\n        emails {\n          ...FEmail\n        }\n        phones {\n          ...FPhone\n        }\n      }\n      customerOrdersCountCurrent\n      customerOrdersCountTotal\n      note\n      previousNote\n      allAppliedRules\n      items {\n        ...GOrderDetailWare\n        sidedishes: sideDishes {\n          ...GOrderDetailWare\n        }\n      }\n      totalSum {\n        ...FPrice\n      }\n      transportFee {\n        ...FPrice\n      }\n      coverPrice {\n        ...FPrice\n      }\n      totalDiscount {\n        ...FPrice\n      }\n      orderOrigin {\n        code\n        enum\n      }\n      orderTiming: orderStateCategoryRelations {\n        createdAt\n        orderStateCategory\n      }\n      ...GOrderDriver\n    }\n  }\n\n  fragment GOrderDetailWare on OrderRecipe {\n    id\n    recipe {\n      id\n      code\n      nameLabel\n    }\n    price {\n      ...FPrice\n    }\n  }\n  ${FPriceFragmentDoc}\n  ${FEmailFragmentDoc}\n  ${FPhoneFragmentDoc}\n  ${OrderDriverFragment}\n`)\n","import { SECOND } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { Colors } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  confirmNode: ReactNode | string\n  initialColor?: Colors\n  confirmColor?: Colors\n  confirmDisableMs?: number\n  resetToInitialMs?: number\n  onConfirm(): void\n}\n\nexport const ConfirmButton: React.FC<IProps> = ({\n  confirmNode,\n  initialColor = Colors.greyMiddle,\n  confirmColor = Colors.red,\n  confirmDisableMs = 300,\n  resetToInitialMs = 3 * SECOND,\n  children,\n  onConfirm,\n}) => {\n  const [needConfirm, setNeedConfirm] = React.useState(false)\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const onClick = () => {\n    if (needConfirm === false) {\n      buttonRef.current!.disabled = true\n      setNeedConfirm(true)\n      setTimeout(() => {\n        if (buttonRef.current) {\n          buttonRef.current.disabled = false\n        }\n      }, confirmDisableMs)\n    } else {\n      onConfirm()\n    }\n  }\n\n  React.useEffect(\n    () => {\n      if (needConfirm) {\n        const timer = setTimeout(() => {\n          setNeedConfirm(false)\n        }, resetToInitialMs)\n        return () => {\n          clearTimeout(timer)\n        }\n      }\n      return undefined\n    },\n    [resetToInitialMs, needConfirm],\n  )\n\n  return (\n    <TouchButton\n      ref={buttonRef}\n      onClick={onClick}\n      color={needConfirm ? confirmColor : initialColor}\n    >\n      {needConfirm ? confirmNode : children}\n    </TouchButton>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  MCancelOrderDocument,\n  MCancelOrderMutation,\n  MCancelOrderVariables,\n} from '../../../graph/generated'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderCancelButton: React.FC<IProps> = ({ orderId }) => {\n  const cancelOrder = useGuardedMutation<\n    MCancelOrderMutation,\n    MCancelOrderVariables\n  >(MCancelOrderDocument)\n\n  return (\n    <CardDock position=\"BottomLeft\">\n      <Sizer width={7.375}>\n        <ConfirmButton\n          confirmNode={<Trans>Really cancel?</Trans>}\n          onConfirm={() => {\n            cancelOrder({ orderId })\n          }}\n        >\n          <Trans>Cancel order</Trans>\n        </ConfirmButton>\n      </Sizer>\n    </CardDock>\n  )\n}\n","import React from 'react'\nimport { useMutation } from 'react-apollo-hooks'\n\nimport { MChangeOrderToPickup } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { ChangeOrderToPickupMutation } from '../models/OrderStateModel.graphql'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderDeliveryToPickup: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const changeToPickup = useMutation<\n    MChangeOrderToPickup.Mutation,\n    MChangeOrderToPickup.Variables\n  >(ChangeOrderToPickupMutation, { variables: { orderId } })\n  if (!isDelivery) {\n    return null\n  }\n  return (\n    <TouchButton\n      text={i18n.t`Change to pickup`}\n      onClick={() => {\n        changeToPickup()\n      }}\n    />\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { OrderStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { TOrderStateModel } from '../models/OrderStateModel'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n  stateModel: TOrderStateModel\n}\n\nconst stateLabels = {\n  [OrderStateEnum.Accepted]: i18nMark('Accept order'),\n  [OrderStateEnum.Finished]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.FC<IProps> = ({\n  orderId,\n  nextState,\n  stateModel,\n}) => {\n  return (\n    <TouchButton\n      text={i18n._(stateLabels[nextState])}\n      width=\"7.375rem\"\n      onClick={() => {\n        stateModel.updateOrderState(orderId, nextState)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { GDriver } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = GDriver.Fragment\n\ninterface IProps {\n  drivers: ReadonlyArray<TDriver>\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst DriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst backgroundColor = {\n  background: Colors.greyMiddle,\n}\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...backgroundColor,\n    ...textColor,\n    height: Spacing.ButtonHeight,\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    ...backgroundColor,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n}\n\nexport const OrderDriverSelect: React.FC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers as TDriver[]}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver => {\n      if (driver === null) {\n        onClear()\n      } else {\n        onSelect(driver as TDriver)\n      }\n    }}\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <DriverName>{`${driver.firstName} ${driver.lastName}`}</DriverName>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { QueryDriverSelection } from './OrderStateDeliver.graphql'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n  stateModel: TOrderStateModel\n}\n\nexport const OrderStateDeliver: React.FC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n  stateModel,\n}) => (\n  <QueryDriverSelection\n    fetchPolicy=\"network-only\"\n    variables={{ branchId: [branchId], orderId }}\n    render={(\n      { drivers, order: { driver: orderDriver } },\n      { loading, refetch },\n    ) => (\n      <OrderDriverSelect\n        drivers={drivers}\n        selectedDriver={orderDriver ? orderDriver.user : null}\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          if (orderDriver) {\n            stateModel.removeDriver(orderDriver.id)\n          }\n        }}\n        onSelect={driver => {\n          stateModel.selectDriver(orderId, driver.id)\n          if (orderStateCategory !== OrderStateCategoryEnum.OnWay) {\n            stateModel.deliverOrder(orderId)\n          }\n        }}\n      />\n    )}\n  />\n)\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst OrderStateFlowContainerWrapper = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n  height: ${Spacing.ButtonHeight};\n`\n\nconst Control = styled.div`\n  margin: 0 0 0 0.5rem;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.FC<IProps> = ({ children }) => (\n  <OrderStateFlowContainerWrapper>\n    {Children.map(children, (child, idx) => (\n      <Control key={idx}>{child}</Control>\n    ))}\n  </OrderStateFlowContainerWrapper>\n)\n","import React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { DeliveryTimeDialog } from '../../../molecules/DeliveryTimeDialog'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderStateTimeNotification: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const { order } = useRoot()\n\n  return (\n    <DeliveryTimeDialog\n      title={\n        isDelivery\n          ? i18n.t`Send expected time of delivery to customer (in minutes)`\n          : i18n.t`Send expected time of pickup to customer (in minutes)`\n      }\n      deliveryType={\n        isDelivery ? DeliveryTypeEnum.Messenger : DeliveryTypeEnum.Pickup\n      }\n      onConfirm={minutes => {\n        order.state.sendTimeNotification(orderId, minutes)\n      }}\n    >\n      {({ openDialog }) => (\n        <TouchButton iconName=\"schedule\" onClick={openDialog} />\n      )}\n    </DeliveryTimeDialog>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GOrderState } from '../../../graph/types'\nimport { OrderStateCategoryFragment } from '../models/OrderStateModel.graphql'\n\nexport const QueryOrderState = buildQuery<\n  GOrderState.Query,\n  GOrderState.Variables\n>(gql`\n  query GOrderState($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      deliveryType {\n        enum\n      }\n      isCancelable\n      ...GOrderStateCategory\n    }\n    companyBranch(id: $branchId) {\n      id\n      allowedCategories\n    }\n  }\n  ${OrderStateCategoryFragment}\n`)\n","import React from 'react'\nimport { VError } from 'verror'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n} from '../../../graph/generated'\nimport { reportError } from '../../../helpers/sentry'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { OrderCancelButton } from '../molecules/OrderCancelButton'\nimport { OrderDeliveryToPickup } from '../molecules/OrderDeliveryToPickup'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\nimport { QueryOrderState } from './OrderStateFlow.graphql'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  stateModel: TOrderStateModel\n  orderStateCategory: OrderStateCategoryEnum\n  canCancel: boolean\n  canDeliver: boolean\n  isDelivery: boolean\n}\n\nconst OrderStateNewOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderDeliveryToPickup {...props} />\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Accepted} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderDeliveryToPickup {...props} />\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateReadyToDeliverOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    {props.isDelivery ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateFinishedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.FC<IProps> = ({ orderId, branchId }) => {\n  const {\n    order: { state: stateModel },\n  } = useRoot()\n  return (\n    <QueryOrderState\n      variables={{ orderId, branchId }}\n      render={({ order, companyBranch: { allowedCategories } }) => {\n        const { orderStateCategory } = order\n        if (!orderStateCategory) {\n          reportError(new VError('Order %s has got no state categories'))\n          return null\n        }\n        const isDelivery =\n          order.deliveryType !== null &&\n          order.deliveryType.enum !== DeliveryTypeEnum.Pickup\n\n        const canDeliver =\n          isDelivery &&\n          (allowedCategories.includes(OrderStateCategoryEnum.OnWay) ||\n            allowedCategories.includes(OrderStateCategoryEnum.ReadyToDeliver))\n\n        const canCancel = order.isCancelable\n\n        const stateProps: IStateProps = {\n          orderId,\n          branchId,\n          stateModel,\n          orderStateCategory,\n          canCancel,\n          canDeliver,\n          isDelivery,\n        }\n        switch (orderStateCategory) {\n          case OrderStateCategoryEnum.NewOrders:\n            return <OrderStateNewOrder {...stateProps} />\n          case OrderStateCategoryEnum.Preparing:\n            return <OrderStateAcceptedOrder {...stateProps} />\n          case OrderStateCategoryEnum.ReadyToDeliver:\n            return <OrderStateReadyToDeliverOrder {...stateProps} />\n          case OrderStateCategoryEnum.OnWay:\n            return <OrderStateOnWayOrder {...stateProps} />\n          case OrderStateCategoryEnum.Finished:\n            return <OrderStateFinishedOrder {...stateProps} />\n          default:\n            return null\n        }\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderIdLine } from '../molecules/OrderIdLine'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { QueryOrderDetail } from './OrderDetail.graphql'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IOrderDetailProps {\n  orderId: string\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail: React.FC<IOrderDetailProps> = ({ orderId }) => (\n  <QueryOrderDetail\n    variables={{ id: orderId }}\n    fetchPolicy=\"cache-and-network\"\n    render={({ order }) => (\n      <>\n        <OrderDetailContainerStyled>\n          <HorizontalSeparator />\n          <OrderWareList orderWares={order.items} />\n          <OrderDetailTotals order={order} />\n          <OrderRuleLines rules={order.allAppliedRules}>\n            <OrderCountLine\n              current={order.customerOrdersCountCurrent}\n              total={order.customerOrdersCountTotal}\n            />\n          </OrderRuleLines>\n          <ContactLines\n            phones={order.customer.phones}\n            emails={order.customer.emails}\n          />\n          <NoteLine note={order.note} previousNote={order.previousNote} />\n          <HorizontalSeparator />\n          <OrderIdLine displayedId={order.id} orderOrigin={order.orderOrigin} />\n          <HorizontalSeparator />\n          <OrderTimeLine orderTiming={order.orderTiming} />\n          <OrderStats order={order} />\n        </OrderDetailContainerStyled>\n        <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ObserverWhen } from '../../../atoms/ObserverWhen'\nimport { GOrderListTicker, GOrderStateCategory } from '../../../graph/types'\nimport { Colors, Radiuses } from '../../../styling'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ntype TOrder = GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n\ninterface IProps {\n  order: TOrder\n  showBranch: boolean\n  toggleOrderDetail(orderId: ID): void\n  isOrderDetailOpen(orderId: ID): boolean\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox: React.FC<IProps> = ({\n  order,\n  showBranch,\n  toggleOrderDetail,\n  isOrderDetailOpen,\n}) => (\n  <OrderBoxStyled id={`order-${order.id}`}>\n    <OrderTicker\n      order={order}\n      showBranch={showBranch}\n      onClick={() => toggleOrderDetail(order.id)}\n    />\n    <ObserverWhen\n      test={() => isOrderDetailOpen(order.id)}\n      renderSuccess={() => <OrderDetail orderId={order.id} />}\n    />\n  </OrderBoxStyled>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const ClosureHistoryFilter = () => {\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateFrom\"\n          label={<Trans>From date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateTo\"\n          label={<Trans>To date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Trans>Show history for branch</Trans>\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const ClosureHistoryQuery = gql`\n  query GClosureHistory($branchId: ID!, $dateFrom: Date!, $dateTo: Date!) {\n    financialReports(\n      companyBranchId: $branchId\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      id\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n","import { subDays } from 'date-fns'\nimport React, { createContext, useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GClosureHistory } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\nimport { ClosureHistoryQuery } from './ClosureHistoryLoader.graphql'\n\nexport type TReports = GClosureHistory.FinancialReports\n\nconst context = createContext<IQueryResult<GClosureHistory.Query> | null>(null)\n\nexport const useClosureHistory = () => useContext(context)!\n\nexport const ClosureHistoryLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery<\n    GClosureHistory.Query,\n    GClosureHistory.Variables\n  >(ClosureHistoryQuery)\n\n  return (\n    <Form\n      onSubmit={(formValues: { dateFrom: Date; dateTo: Date }) => {\n        if (statistics.closureBranch) {\n          execute({\n            branchId: statistics.closureBranch,\n            dateFrom: formatDateISO(formValues.dateFrom),\n            dateTo: formatDateISO(formValues.dateTo),\n          })\n        }\n      }}\n      defaultValues={{ dateFrom: subDays(new Date(), 1), dateTo: new Date() }}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Typography } from '@material-ui/core'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Spacing } from '../../../styling'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading, wasExecuted } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (!wasExecuted) {\n    return (\n      <Typography variant=\"subheading\">\n        <em>\n          <Trans>Use the filter</Trans>\n        </em>\n      </Typography>\n    )\n  }\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (data && data.financialReports.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data &&\n        data.financialReports.map(report => (\n          <FlexRow key={report.id}>\n            <FlexColumn fixedWidth={true}>\n              <RelativeLink to={`../${report.id}`}>\n                <TouchButton\n                  iconName=\"mode_edit\"\n                  width={Spacing.ButtonHeight}\n                  height={Spacing.ButtonHeight}\n                />\n              </RelativeLink>\n            </FlexColumn>\n            <FlexColumn widthGrowIndex={1}>\n              {`[${report.reportSequence}] ${formatDateISO(\n                report.reportDatetime,\n              )}`}\n            </FlexColumn>\n          </FlexRow>\n        ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryFilter } from '../molecules/ClosureHistoryFilter'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.FC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <ClosureHistoryFilter />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n}\n\nconst MonospaceOutputStyled = styled.p`\n  color: white;\n  font-family: 'Lucida Console', Monaco, monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 1rem;\n  line-height: 1.8rem;\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nexport const MonospaceOutput: React.FC<IProps> = ({ text }) => (\n  <MonospaceOutputStyled>{formatOutput(text)}</MonospaceOutputStyled>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GClosureReportQuery } from '../../../graph/types'\n\nexport const FinancialReport = gql`\n  query GClosureReportQuery(\n    $branchId: ID!\n    $reportId: ID!\n    $showReport: Boolean!\n  ) {\n    lastReport: lastFinancialReport(companyBranchId: $branchId)\n      @skip(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n    report: financialReport(report: $reportId) @include(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n\nexport const QueryFinancialReport = buildQuery<\n  GClosureReportQuery.Query,\n  GClosureReportQuery.Variables\n>(FinancialReport)\n","import React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryFinancialReport } from './ClosureStatisticsContent.graphql'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent: React.FC<IProps> = ({\n  reportId = '',\n}) => (\n  <WithRoot\n    render={({ statistics }) =>\n      statistics.closureBranch ? (\n        <QueryFinancialReport\n          variables={{\n            branchId: statistics.closureBranch,\n            reportId,\n            showReport: Boolean(reportId),\n          }}\n          fetchPolicy=\"cache-and-network\"\n          renderLoading={false}\n          render={({ report, lastReport }, { loading }) =>\n            loading ? (\n              <MonospaceOutput text={i18n.t`Computing`} />\n            ) : (\n              <MonospaceOutput\n                text={reportId ? report!.plainData : lastReport.plainData}\n              />\n            )\n          }\n        />\n      ) : null\n    }\n  />\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick?(e: MouseEvent<HTMLButtonElement>): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.FC<IProps> = props => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <TouchButton\n      text={i18n.t`Create closure`}\n      color={Colors.green}\n      width=\"12rem\"\n      {...props}\n    />\n  </CanMutate>\n)\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GCreateFinancialReport } from '../../../graph/types'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\nimport { CreateFinancialReport } from './ClosureStatisticsControl.graphql'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nconst ButtonToRight = styled.div`\n  float: right;\n`\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const createClosure = useGuardedMutation<\n    GCreateFinancialReport.Mutation,\n    GCreateFinancialReport.Variables\n  >(CreateFinancialReport)\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      companyBranchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <>\n      {showCurrent ? (\n        <ClosureCurrentButton />\n      ) : (\n        <ClosureSubmitButton\n          onClick={onSubmit}\n          disabled={!statistics.closureBranch}\n        />\n      )}\n      <ButtonToRight>\n        <ClosureHistoryButton />\n      </ButtonToRight>\n    </>\n  ))\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsContent } from '../organisms/ClosureStatisticsContent'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.FC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(statistics.branches)}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n    />\n  ))\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDateTime } from '../../../atoms/FormInputDateTime'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const StatisticsFilter = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeFrom\"\n          label={<Trans>From</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeTo\"\n          label={<Trans>To</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Plural\n            value={statistics.branchesFilter.length}\n            one=\"Show for one branch\"\n            few=\"Show for # branches\"\n            other=\"Show for # branches\"\n          />\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  ))\n}\n","import { isoDate } from '@speedlo/graphql'\nimport { DocumentNode } from 'graphql'\nimport { createContext } from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { DateTime } from '../../../graph/generated'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\n\ninterface IVariables {\n  readonly dateTimeFrom: DateTime\n  readonly dateTimeTo: DateTime\n  readonly branches: ReadonlyArray<string>\n}\n\nconst getInitialResult = () => ({\n  data: null,\n  loading: false,\n  hasAnyError: false,\n  wasExecuted: false,\n})\n\nexport function createStatisticsQuery<TData, TVariables extends IVariables>(\n  query: DocumentNode,\n) {\n  const context = createContext<IQueryResult<TData>>(getInitialResult())\n  const useStatisticsQuery = () => {\n    const { statistics } = useRoot()\n    const { result, execute, reset } = useExecutableQuery<TData, IVariables>(\n      query,\n    )\n    const executeFilter = () => {\n      reset()\n      execute({\n        branches: statistics.branchesFilter,\n        dateTimeFrom: isoDate(statistics.dateTimeFrom),\n        dateTimeTo: isoDate(statistics.dateTimeTo),\n      })\n    }\n    const defaultValues = {\n      dateTimeFrom: statistics.dateTimeFrom,\n      dateTimeTo: statistics.dateTimeTo,\n    }\n    return { result, executeFilter, resetResult: reset, defaultValues }\n  }\n  return {\n    context,\n    useStatisticsQuery,\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const DailyStatisticsQuery = gql`\n  query GDailyStatistics(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      categoryStatisticsPlain\n      dailyStatisticsPlain\n      deliveryStatisticsPlain\n      driversStatisticsPlain\n    }\n  }\n`\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GDailyStatistics } from '../../../graph/types'\nimport { createStatisticsQuery } from '../hooks/createStatisticsQuery'\nimport { DailyStatisticsQuery } from './DailyStatisticsLoader.graphql'\n\nexport type TOrdersStats = GDailyStatistics.Stats\n\nconst { useStatisticsQuery, context } = createStatisticsQuery<\n  GDailyStatistics.Query,\n  GDailyStatistics.Variables\n>(DailyStatisticsQuery)\n\nexport const useDailyStatistics = () => React.useContext(context)\n\nexport const DailyStatisticsLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, executeFilter, defaultValues } = useStatisticsQuery()\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n      defaultValues={defaultValues}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { i18n } from '../../../i18n'\nimport { useDailyStatistics } from './DailyStatisticsLoader'\n\nexport const DailyStatisticsContent = observer(() => {\n  const { data, loading } = useDailyStatistics()\n  if (!data) {\n    return null\n  }\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n  const { stats } = data\n  return (\n    <>\n      <Headline light={true}>\n        <Trans>Daily statistics</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.dailyStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By category</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.categoryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By type</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.deliveryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By driver</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.driversStatisticsPlain} />\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { DailyStatisticsContent } from '../organisms/DailyStatisticsContent'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import gql from 'graphql-tag'\n\nimport { OrderTickerFragment } from '../../../segments/order/molecules/OrderTicker.graphql'\nimport { OrderStateCategoryFragment } from '../../order/models/OrderStateModel.graphql'\n\nexport const OrdersStatisticsListQuery = gql`\n  query GOrdersStatisticsList(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n    $pagination: InputPaginationParams!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      orders: finishedOrders {\n        list: orders(includeCanceled: true, pagination: $pagination) {\n          ...GOrderListTicker\n          ...GOrderStateCategory\n        }\n      }\n    }\n  }\n\n  ${OrderTickerFragment}\n  ${OrderStateCategoryFragment}\n`\n","import gql from 'graphql-tag'\n\nexport const OrdersStatisticsQuery = gql`\n  query GOrdersStatistics(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      finishedOrders {\n        fees {\n          ...GStatsPrice\n        }\n        onlinePayments {\n          ...GStatsPrice\n        }\n        total {\n          ...GStatsPrice\n        }\n        finishedCount: ordersCount\n        cancelledCount: ordersCanceledCount\n      }\n      orderStatisticsPlain\n    }\n  }\n\n  fragment GStatsPrice on PriceConverted {\n    value\n    currency {\n      code\n    }\n  }\n`\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GOrdersStatistics } from '../../../graph/types'\nimport { createStatisticsQuery } from '../hooks/createStatisticsQuery'\nimport { OrdersStatisticsQuery } from './OrdersStatisticsLoader.graphql'\n\nexport type TOrdersStats = GOrdersStatistics.FinishedOrders\n\nconst { context, useStatisticsQuery } = createStatisticsQuery<\n  GOrdersStatistics.Query,\n  GOrdersStatistics.Variables\n>(OrdersStatisticsQuery)\n\nexport const useOrderStatistics = () => React.useContext(context)\n\nexport const OrdersStatisticsLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, executeFilter, defaultValues } = useStatisticsQuery()\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n      defaultValues={defaultValues}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { isoDate } from '@speedlo/graphql'\nimport { observer } from 'mobx-react-lite'\nimport React, { useEffect, useMemo, useRef } from 'react'\nimport { useApolloClient } from 'react-apollo-hooks'\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  IndexRange,\n  InfiniteLoader,\n  List,\n} from 'react-virtualized'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GOrdersStatisticsList } from '../../../graph/types'\nimport { OrderBox } from '../../../segments/order/atoms/OrderBox'\nimport { OrdersStatisticsListQuery } from './OrdersStatisticsList.graphql'\nimport { useOrderStatistics } from './OrdersStatisticsLoader'\n\nexport const OrdersStatisticsList = observer(() => {\n  const { statistics, order: orderModel } = useRoot()\n  const { data, wasExecuted } = useOrderStatistics()\n  const loaderRef = useRef<InfiniteLoader | null>(null)\n\n  const orders = useRef(new Map())\n\n  const measureCache = useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: 55,\n        minHeight: 55,\n      }),\n    [],\n  )\n\n  useEffect(\n    () => {\n      // whenever this turns to false it means that filter was executed again\n      // and everything should reset in here\n      if (wasExecuted === false) {\n        orders.current.clear()\n        measureCache.clearAll()\n        if (loaderRef.current) {\n          loaderRef.current.resetLoadMoreRowsCache(true)\n        }\n      }\n    },\n    [wasExecuted],\n  )\n\n  const client = useApolloClient()\n\n  const queryMoreOrders = async ({ startIndex, stopIndex }: IndexRange) => {\n    const result = await client.query<\n      GOrdersStatisticsList.Query,\n      GOrdersStatisticsList.Variables\n    >({\n      query: OrdersStatisticsListQuery,\n      variables: {\n        branches: statistics.branchesFilter,\n        dateTimeFrom: isoDate(statistics.dateTimeFrom),\n        dateTimeTo: isoDate(statistics.dateTimeTo),\n        pagination: { fromIndex: startIndex, toIndex: stopIndex },\n      },\n    })\n\n    const list = [...result.data.stats.orders.list]\n    for (let index = startIndex; index <= stopIndex; index++) {\n      orders.current.set(index, list.shift())\n    }\n  }\n\n  let totalCount = 0\n  if (data && data.stats) {\n    const { finishedCount, cancelledCount } = data.stats.finishedOrders\n    totalCount = finishedCount + cancelledCount\n  }\n\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <InfiniteLoader\n          rowCount={totalCount}\n          isRowLoaded={({ index }) => orders.current.has(index)}\n          loadMoreRows={queryMoreOrders}\n          ref={loaderRef}\n        >\n          {({ onRowsRendered, registerChild }) => (\n            <List\n              ref={registerChild}\n              onRowsRendered={onRowsRendered}\n              rowHeight={measureCache.rowHeight}\n              deferredMeasurementCache={measureCache}\n              rowCount={totalCount}\n              width={width}\n              height={height}\n              noRowsRenderer={() => (\n                <CardListTitle>\n                  {wasExecuted ? <Trans>No orders</Trans> : null}\n                </CardListTitle>\n              )}\n              rowRenderer={({ index, key, style, parent }) => {\n                const order = orders.current.get(index)\n                if (!order) {\n                  return (\n                    <div style={style} key={key}>\n                      ...\n                    </div>\n                  )\n                }\n                return (\n                  <CellMeasurer\n                    key={key}\n                    columnIndex={0}\n                    rowIndex={index}\n                    cache={measureCache}\n                    parent={parent}\n                  >\n                    {({ measure }) => (\n                      <div style={style}>\n                        <OrderBox\n                          order={order}\n                          toggleOrderDetail={o => {\n                            orderModel.list.toggleOrderDetail(o)\n                            setTimeout(measure, 500)\n                          }}\n                          isOrderDetailOpen={orderModel.list.isOrderDetailOpen}\n                          showBranch={statistics.branchesFilter.length > 1}\n                        />\n                      </div>\n                    )}\n                  </CellMeasurer>\n                )\n              }}\n            />\n          )}\n        </InfiniteLoader>\n      )}\n    </AutoSizer>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { Price } from '../../../atoms/Price'\nimport { useOrderStatistics } from '../organisms/OrdersStatisticsLoader'\n\nconst StatPanel = styled.div`\n  margin: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n`\n\nconst StatLabel = styled.h1`\n  font-size: 1.5rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nconst StatValue = styled.h2`\n  font-size: 4rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const { loading, data } = useOrderStatistics()\n  if (loading || !data) {\n    return null\n  }\n  const stats = data.stats.finishedOrders\n  return (\n    <>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total turnover</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Online payments</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Orders count</Trans>\n        </StatLabel>\n        <StatValue>{stats.finishedCount + stats.cancelledCount}</StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total commissions</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <MonospaceOutput text={data.stats.orderStatisticsPlain} />\n      </StatPanel>\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { AutoHeight } from '../../../atoms/FlexAutoHeight'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { OrdersStatisticsList } from '../organisms/OrdersStatisticsList'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\nimport { OrdersStatisticsSummary } from '../organisms/OrdersStatisticsSummary'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [{ i: 'summary', x: 0, y: 1, w: 7, h: 1 }]\n}\n\nexport const OrdersStatisticsPage: React.FC<IProps> = props => (\n  <OrdersStatisticsLoader>\n    <PageLayoutFullHeightItem\n      withScrollArea={false}\n      row={1}\n      column={7}\n      widthInColumns={9}\n    >\n      <AutoHeight>\n        <OrdersStatisticsList />\n      </AutoHeight>\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      layouts={getLayout()}\n      pageTitle={i18n.t`Orders statistics`}\n      showSoundControl={false}\n      scrollPageTitle={false}\n      useBackButton={true}\n    >\n      <div key=\"summary\">\n        <Card>\n          <StatisticsBranchFilter />\n          <StatisticsFilter />\n        </Card>\n\n        <OrdersStatisticsSummary />\n      </div>\n    </PageLayout>\n  </OrdersStatisticsLoader>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'OrdersStatistics', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'DailyStatistics', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'Closure', x: 4, y: 1, w: 2, h: 2 },\n  ]\n}\n\nexport const OverviewPage: React.FC<IProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n"],"sourceRoot":""}