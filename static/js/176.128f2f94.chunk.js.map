{"version":3,"sources":["atoms/CanMutate.tsx","atoms/IconLine.tsx","atoms/SelectControl.tsx","atoms/Headline.tsx","atoms/CanQuery.tsx","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/HorizontalSeparator.tsx","atoms/SelectControlFlat.tsx","atoms/FlexColumn.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/Price.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","segments/order/hooks/useOrderListModel.ts","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","hooks/useExecutableQuery.ts","segments/order/molecules/NoteLine.tsx","segments/order/atoms/OrderStarIndicator.tsx","segments/order/molecules/OrderTicker.tsx","atoms/DeliveryMinutes.tsx","segments/order/hooks/useOrderModel.ts","molecules/DeliveryTimeDialog.tsx","atoms/RelativeLink.tsx","../node_modules/resolve-pathname/esm/resolve-pathname.js","atoms/FormInputDateTime.tsx","atoms/FlexAutoHeight.tsx","atoms/FlexRow.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderWarePriceLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderIdLine.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/atoms/OrderTimeLabel.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareLine.tsx","segments/order/molecules/OrderWareList.tsx","molecules/HamburgerMenu.tsx","molecules/ConfirmButton.tsx","segments/order/molecules/OrderCancelButton.tsx","segments/order/molecules/OrderDeliveryToPickup.tsx","segments/order/molecules/OrderStarButton.tsx","segments/order/molecules/OrderStateButton.tsx","hooks/useAccessGuard.ts","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/atoms/OrderBox.tsx","atoms/InputDate.tsx","atoms/FormInputDate.tsx","segments/overview/molecules/ClosureHistoryFilter.tsx","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/pages/ClosureHistoryPage.tsx","atoms/MonospaceOutput.tsx","segments/overview/molecules/ClosureStatisticsContent.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/pages/ClosurePage.tsx","segments/overview/hooks/useStatsFilter.tsx","segments/overview/molecules/DailyStatisticsContent.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/molecules/StatisticsFilter.tsx","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/molecules/OrdersStatisticsList.tsx","segments/overview/molecules/OrdersStatisticsSummary.tsx","segments/overview/molecules/StatisticsDriversFilter.tsx","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/routes/OverviewRoutes.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","_ref","mutationName","children","user","useRoot","useObserver","canMutate","a","createElement","Fragment","concat","IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","props","Object","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","Headline","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","CanQuery","queryName","canQuery","NoAccess","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","PageLayoutFullHeightItem","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_3__","id","FlexRowSingle","_ref$justify","justify","HorizontalSeparatorStyled","HorizontalSeparator","_ref$visible","visible","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","RM","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_7___default","hasSelection","onClick","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","map","idx","Component","defaultProps","prop","getItemValue","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","Price","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","className","formatPrice","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","react","placeholder","i18n","_","ButtonHeight","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","FormSubmit","react_form__WEBPACK_IMPORTED_MODULE_2__","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","errors","keys","fieldName","isEmpty","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","utils","MomentUtils","useOrderListModel","_useOrderModel__WEBPACK_IMPORTED_MODULE_0__","useOrderModel","list","cancelIconPadding","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","red","orange","_templateObject5","bigNumberStyle","_templateObject6","dashStyle","_templateObject7","clickable","_templateObject8","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","heartBeat","pulse","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","useExecutableQuery","query","client","useApolloClient","onError","useApolloDefender","result","useObservable","loading","error","wasExecuted","hasAnyError","Boolean","useReaction","makeError","err","variables","ApolloOperationError","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","execute","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","queryResult","wrap","_context","prev","next","sent","runInAction","ApolloError","graphQLErrors","t0","abrupt","stop","_x","reset","CurrentNoteStyled","span","PreviousNoteStyled","NoteLine","note","previousNote","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_3__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_4__","_i18n__WEBPACK_IMPORTED_MODULE_5__","StyledOrderStarIndicator","OrderStarIndicator","Icon","OrderTickerStyled","Element","OrderTicker_templateObject","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","_templateObject9","Radiuses","Card","ToPickupLabel","_templateObject10","violet","OrderTicker","order","showBranch","companyBranch","Date","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","formatAddress","address","isPriority","OrderStarIndicator_OrderStarIndicator","totalSum","formattedValue","isPaidWithCard","deliveryMinutes","pickupMinutes","MinutesContainer","MinutesItem","DeliveryMinutes","onMinuteClick","initialMinutes","_React$useState","useState","_React$useState2","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setSelected","getMinutesForDeliveryType","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_5__","yellow","type","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_0__","DeliveryTimeDialog","onConfirm","onCancel","cancelText","refApi","_useState","_useState2","isOpen","setOpen","openDialog","closeDialog","current","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","open","onClose","_atoms_DeliveryMinutes__WEBPACK_IMPORTED_MODULE_4__","_TouchButton__WEBPACK_IMPORTED_MODULE_5__","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","RelativeLink","from","linkProps","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","isAbsolute","charAt","spliceOne","index","i","k","pop","hasTrailingSlash","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","last","up","part","unshift","join","FormInputDateTime","field","_ref$inline","inline","pickerProps","Picker","InlineDateTimePicker","DateTimePicker","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_6__","react_form__WEBPACK_IMPORTED_MODULE_4__","render","fieldApi","setValue","onOpen","setTouched","format","ampm","showTabs","maxDateMessage","minDateMessage","AutoHeight","FlexRow","ContactLines","phones","emails","renderContact","contact","description","isMail","href","replace","renderClickableLink","email","OrderCountLine","total","_lingui_react","values","OrderWareLineWrap","NameContainerStyled","OrderWarePriceLine","_ref$highlight","highlight","StyledOrderDetailTotals","OrderDetailTotals_templateObject","OrderDetailTotals","totals","OrderWarePriceLine_OrderWarePriceLine","tip","transportFee","coverPrice","totalDiscount","OrderOriginLabel","OrderIdLine_templateObject","orderOrigin","OrderOriginEnum","DameJidlo","OrderIdLine","displayedId","code","OrderRuleLines","rules","OrderTimeLabel","OrderTimeLabel_templateObject","DelayedDeliveryTimeLabel","OrderStats_templateObject","DelayedOrderTimeLabel","OrderStats_templateObject2","OrderStats","stats","formatTimeWithoutTodayDate","driver","_order$driver$user","Timelapse","labelMap","_labelMap","defineProperty","OrderStateCategoryEnum","NewOrders","i18nMark","Preparing","ReadyToDeliver","OnWay","Finished","OrderTimeLine","orderTiming","reject","createdAt","orderStateCategory","timing","OrderWareLine_templateObject","CodeContainerStyled","OrderWareLine_templateObject2","OrderWareLine_templateObject3","OrderWareLine","OrderWareLine_OrderWareLineWrap","OrderWareLine_NameContainerStyled","OrderWareLine_PriceContainerStyled","OrderWareList","orderWares","orderWare","OrderWareLine_OrderWareLine","recipe","nameLabel","sidedishes","sidedish","StyledHamburgerMenu","HamburgerMenu_templateObject","PopupMenu","HamburgerMenu_templateObject2","Small","Middle","HamburgerMenu","slicedToArray","isOpened","setIsOpened","Children","count","SizerButton","TouchButton","ConfirmButton","confirmNode","_ref$initialColor","initialColor","_ref$confirmColor","confirmColor","_ref$confirmDisableMs","confirmDisableMs","_ref$resetToInitialMs","resetToInitialMs","SECOND","needConfirm","setNeedConfirm","buttonRef","useRef","useEffect","timer","setTimeout","clearTimeout","OrderCancelButton","orderId","_useMCancelOrder","useMCancelOrder","cancelOrder","Sizer","ConfirmButton_ConfirmButton","OrderDeliveryToPickup","isDelivery","_useMOrderChangeToPic","useMOrderChangeToPickup","changeToPickup","OrderStarButton","_useMSetPriorityOrder","useMSetPriorityOrder","setPriorityOrder","iconColor","stateLabels","_stateLabels","OrderStateEnum","Accepted","OrderStateButton","nextState","_useMOrderState","useMOrderState","updateOrderState","text","useAccessGuard","queries","mutations","every","DriverName","OrderDriverSelect_templateObject","backgroundColor","background","height","borderWidth","borderRadius","Button","singleValue","fontSize","OrderDriverSelect","drivers","selectedDriver","isLoading","onSelect","onClear","onReload","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","react_select_esm","DropdownIndicator","OrderStateDeliver","branchId","canRead","_len","_key","useCanQuery","deliverOrder","_useMSelectOrderDrive","useMSelectOrderDriver","selectDriver","_useMRemoveOrderDrive","useMRemoveOrderDriver","removeDriver","_useQOrderDrivers","useQOrderDrivers","skip","refetch","OrderDriverSelect_OrderDriverSelect","orderDriver","orderDriverId","driverId","OrderStateFlowContainerWrapper","OrderStateFlowContainer_templateObject","Control","OrderStateFlowContainer_templateObject2","OrderStateFlowContainer","child","OrderStateTimeNotification","_useMOrderTimeNotific","useMOrderTimeNotification","sendTimeNotification","Messenger","HamburgerMenuAtLeft","HamburgerMenu_HamburgerMenu","OrderStateNewOrder","OrderStateFlowContainer_OrderStateFlowContainer","OrderStateFlow_HamburgerMenuAtLeft","canCancel","OrderCancelButton_OrderCancelButton","OrderDeliveryToPickup_OrderDeliveryToPickup","OrderStateTimeNotification_OrderStateTimeNotification","OrderStateButton_OrderStateButton","OrderStateAcceptedOrder","OrderStarButton_OrderStarButton","canDeliver","OrderStateDeliver_OrderStateDeliver","OrderStateReadyToDeliverOrder","OrderStateOnWayOrder","OrderStateFinishedOrder","OrderStateFlow","_useQOrderState","useQOrderState","allowedCategories","isCancelable","stateProps","OrderStateFlow_OrderStateNewOrder","OrderStateFlow_OrderStateAcceptedOrder","OrderStateFlow_OrderStateReadyToDeliverOrder","OrderStateFlow_OrderStateOnWayOrder","OrderStateFlow_OrderStateFinishedOrder","StyledOrderDetail","OrderDetail_templateObject","OrderDetail","memo","_useQOrderDetail","useQOrderDetail","Loading","OrderWareList_OrderWareList","OrderDetailTotals_OrderDetailTotals","OrderRuleLines_OrderRuleLines","allAppliedRules","OrderCountLine_OrderCountLine","customerOrdersCountCurrent","customerOrdersCountTotal","ContactLines_ContactLines","OrderIdLine_OrderIdLine","OrderTimeLine_OrderTimeLine","OrderStats_OrderStats","OrderStateFlow_OrderStateFlow","OrderBoxStyled","OrderBox_templateObject","OrderBox","observer","onToggleDetail","orderListModel","useCallback","toggleOrderDetail","isDetailOpen","isOrderDetailOpen","InputDate","material_ui_pickers_esm","core","FormInputDate","es","InputDate_InputDate","ClosureHistoryFilter","autoOk","context","createContext","ClosureHistoryLoader","statistics","_useExecutableQuery","QClosureHistoryDocument","onSubmit","formValues","closureBranch","dateFrom","formatDateISO","dateTo","defaultValues","subDays","Provider","ClosureHistoryTable","_useClosureHistory","useContext","history","report","reportSequence","reportDatetime","ClosureCurrentButton","react_router_dom","ButtonToRight","ClosureStatisticsFilter","showCurrent","setClosureBranch","ClosureCurrentButton_ClosureCurrentButton","ClosureHistoryPage","ClosureHistoryLoader_ClosureHistoryLoader","FullPageLayout","pageTitle","useBackButton","backRoute","ClosureHistoryFilter_ClosureHistoryFilter","MonospaceOutputStyled","p","MonospaceOutput_templateObject","MonospaceOutput","RegExp","ClosureStatisticsContent","_ref$reportId","reportId","_useQClosureReport","useQClosureReport","showReport","MonospaceOutput_MonospaceOutput","plainData","lastReport","ClosureHistoryButton","ClosureSubmitButton","ClosureStatisticsControl_templateObject","ClosureStatisticsControl","enqueueSuccess","useSnackBar","useRouterContext","_useMFinancialReportC","useMFinancialReportCreate","createClosure","asyncToGenerator","regenerator_default","ClosureSubmitButton_ClosureSubmitButton","ClosureStatisticsControl_ButtonToRight","ClosureHistoryButton_ClosureHistoryButton","ClosurePage","match","ClosureStatisticsControl_ClosureStatisticsControl","params","useStatsFilterCurrent","useStatsFilter","setFilter","executeFilter","toConsumableArray","branchesFilter","dateTimeFrom","isoDate","dateTimeTo","renderForm","updateFilter","useStatsFilter_context","StatsDisplay","plain","DailyStatisticsContent","_useQStatsDaily","useQStatsDaily","DailyStatisticsContent_StatsDisplay","daily","category","delivery","StatisticsBranchFilter","setBranchFilter","clearBranchFilter","StatisticsFilter","0","DailyStatisticsLoader","DailyStatisticsPage","DailyStatisticsLoader_DailyStatisticsLoader","StatisticsBranchFilter_StatisticsBranchFilter","StatisticsFilter_StatisticsFilter","DailyStatisticsContent_DailyStatisticsContent","OrdersStatisticsList","orders","Map","loaderRef","measureCache","useMemo","CellMeasurerCache","defaultHeight","minHeight","_useQStatsOrdersCount","useQStatsOrdersCounts","countsData","countsLoading","clear","clearAll","resetLoadMoreRowsCache","JSON","stringify","executeList","QStatsOrdersListDocument","queryMoreOrders","startIndex","stopIndex","pagination","fromIndex","toIndex","shift","set","isRowLoaded","get","rowRenderer","_ref4","parent","dist_es","columnIndex","rowIndex","cache","_ref5","measure","Cancel","_countsData$stats$cou","counts","totalCount","finished","cancelled","_ref6","rowCount","loadMoreRows","_ref7","onRowsRendered","registerChild","rowHeight","deferredMeasurementCache","StatPanel","OrdersStatisticsSummary_templateObject","StatLabel","h1","StatValue","OrdersStatisticsSummary","_useQStatsOrders","useQStatsOrders","finishedOrders","currency","onlinePayments","finishedCount","cancelledCount","fees","orderStatisticsPlain","StatisticsDriversFilter","_useQAllDrivers","useQAllDrivers","setDriversFilter","intersection","option","formatFullName","OrdersStatisticsLoader","autoFilter","_useStatsFilter","OrdersStatisticsPage","setTodayOrdersFilter","OrdersStatisticsLoader_OrdersStatisticsLoader","FlexAutoHeight","OrdersStatisticsList_OrdersStatisticsList","PageLayout","layouts","x","y","w","h","showSoundControl","scrollPageTitle","ClosureButton","DailyStatisticsButton","OrdersStatisticsButton","OverviewPage","OverviewRoutes_OverviewRoutes","OverviewRoutes","PageTitle","react_router","SecureRoute","exact","path","NotFoundPage"],"mappings":"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","file":"static/js/176.128f2f94.chunk.js","sourcesContent":["import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { useOrderModel } from './useOrderModel'\n\nexport function useOrderListModel() {\n  const { list } = useOrderModel()\n  return list\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames = ['animated']\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant\n      key={minutes}\n      onClick={onClick}\n      className={cx(\n        className,\n        {\n          heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n          pulse: variant === ETimeBadgeVariant.WARNING,\n        },\n        ...extraClassNames,\n      )}\n    >\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import {\n  ApolloOperationError,\n  useApolloClient,\n  useApolloDefender,\n} from '@speedlo/graphql'\nimport { useReaction } from '@speedlo/hooks'\nimport { ApolloError, QueryOptions } from 'apollo-client'\nimport { DocumentNode } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  error?: ApolloError\n  hasAnyError: boolean\n  wasExecuted: boolean\n}\n\nexport function useExecutableQuery<TData, TVariables>(\n  query: DocumentNode,\n  options: Partial<QueryOptions<TVariables>> = {},\n) {\n  const client = useApolloClient()\n  const { onError } = useApolloDefender()\n  const result: IQueryResult<TData> = useObservable({\n    data: null,\n    loading: false,\n    error: undefined,\n    wasExecuted: false,\n    get hasAnyError() {\n      return Boolean(result.error)\n    },\n  })\n  useReaction(\n    () => result.error,\n    error => {\n      if (error) {\n        onError(error)\n      }\n    },\n  )\n  const makeError = (err: ApolloError, variables: TVariables) => {\n    return new ApolloOperationError(err, query, { ...options, variables })\n  }\n  const execute = async (variables: TVariables) => {\n    result.loading = true\n    try {\n      const queryResult = await client.query<TData, TVariables>({\n        ...options,\n        query,\n        variables,\n      })\n      runInAction(() => {\n        result.wasExecuted = true\n        result.data = queryResult.data\n        result.loading = false\n        if (queryResult.errors && queryResult.errors.length > 0) {\n          result.error = makeError(\n            new ApolloError({ graphQLErrors: queryResult.errors }),\n            variables,\n          )\n        }\n      })\n    } catch (err) {\n      runInAction(() => {\n        result.error = makeError(err, variables)\n        result.loading = false\n      })\n    }\n    return result\n  }\n  const reset = () => {\n    runInAction(() => {\n      result.wasExecuted = false\n      result.data = null\n      result.error = undefined\n      result.loading = false\n    })\n  }\n  return { result, execute, reset }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nconst StyledOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 3.8rem;\n  top: 0;\n`\n\nexport const OrderStarIndicator: React.FC<IProps> = props => {\n  return (\n    <StyledOrderStarIndicator>\n      <Icon iconName=\"star\" color={Colors.orange} />\n    </StyledOrderStarIndicator>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport {\n  DeliveryTypeEnum,\n  FOrderTickerFragment,\n} from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\nimport { OrderStarIndicator } from '../atoms/OrderStarIndicator'\n\ninterface IOrderTickerProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onClick(): void\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  isCancelled,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={isCancelled}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          {order.isPriority && <OrderStarIndicator />}\n          {order.totalSum.formattedValue}\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  initialMinutes?: number\n  deliveryType: DeliveryTypeEnum\n  onMinuteClick(minute: number): void\n}\n\nconst deliveryMinutes = [20, 30, 45, 60, 75, 90, 105, 120]\nconst pickupMinutes = [10, 20, 30, 45, 60, 75, 90]\n\nconst MinutesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst MinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport const DeliveryMinutes: React.FC<IProps> = ({\n  deliveryType,\n  onMinuteClick,\n  initialMinutes,\n}) => {\n  const [selected, setSelected] = React.useState(initialMinutes)\n  const options = getMinutesForDeliveryType(deliveryType)\n  return (\n    <MinutesContainer>\n      {options.map(minutes => (\n        <MinutesItem key={minutes}>\n          <TouchButton\n            onClick={() => {\n              setSelected(minutes)\n              onMinuteClick(minutes)\n            }}\n            color={selected === minutes ? Colors.yellow : Colors.green}\n          >\n            {minutes}\n          </TouchButton>\n        </MinutesItem>\n      ))}\n    </MinutesContainer>\n  )\n}\n\nexport function getMinutesForDeliveryType(type: DeliveryTypeEnum) {\n  return type === DeliveryTypeEnum.Pickup ? pickupMinutes : deliveryMinutes\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useOrderModel() {\n  const { order } = useRoot()\n  return order\n}\n","import { Trans } from '@lingui/macro'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport React, { MutableRefObject, useState } from 'react'\n\nimport { DeliveryMinutes } from '../atoms/DeliveryMinutes'\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  title: string\n  deliveryType: DeliveryTypeEnum\n  cancelText?: string\n  onConfirm(minutes: number): void\n  onCancel?(): void\n  refApi?: MutableRefObject<Maybe<IDeliveryTimeDialogApi>>\n  children?(props: IDeliveryTimeDialogApi): React.ReactElement<{}>\n}\n\nexport interface IDeliveryTimeDialogApi {\n  openDialog(): void\n  closeDialog(): void\n}\n\nexport const DeliveryTimeDialog: React.FC<IProps> = ({\n  title,\n  deliveryType,\n  onConfirm,\n  onCancel,\n  children,\n  cancelText,\n  refApi,\n}) => {\n  const [isOpen, setOpen] = useState(false)\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  if (refApi) {\n    refApi.current = { openDialog, closeDialog }\n  }\n\n  return (\n    <>\n      {children && children({ openDialog, closeDialog })}\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DeliveryMinutes\n            deliveryType={deliveryType}\n            onMinuteClick={minutes => {\n              closeDialog()\n              onConfirm(minutes)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <TouchButton\n            onClick={() => {\n              closeDialog()\n              if (onCancel) {\n                onCancel()\n              }\n            }}\n          >\n            {cancelText ? cancelText : <Trans>Cancel</Trans>}\n          </TouchButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","import {\n  DateTimePicker,\n  DateTimePickerProps,\n  InlineDateTimePicker,\n} from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DateTimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n  inline?: boolean\n}\n\nexport const FormInputDateTime: React.FC<IProps> = ({\n  field,\n  inline = true,\n  ...pickerProps\n}) => {\n  const Picker = inline ? InlineDateTimePicker : DateTimePicker\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi =>\n          React.createElement(Picker, {\n            value: fieldApi.value,\n            onChange: value => fieldApi.setValue(value),\n            onOpen: () => fieldApi.setTouched(true),\n            format: 'lll',\n            ampm: false,\n            showTabs: false,\n            maxDateMessage: i18n.t`Date is too much in the future`,\n            minDateMessage: i18n.t`Date is too much in the past`,\n            ...pickerProps,\n          })\n        }\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nexport const AutoHeight = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { FEmailFragment, FPhoneFragment } from '../../../graph/generated'\n\ninterface IContactLinesProps {\n  phones: ReadonlyArray<FPhoneFragment>\n  emails: ReadonlyArray<FEmailFragment>\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (FPhoneFragment | FEmailFragment)\n\nexport const ContactLines: React.FC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import { Plural, SelectOrdinal, Trans } from '@lingui/react'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.FC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  label: string\n  price: number\n  highlight?: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\n\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWarePriceLine: React.FC<IProps> = ({\n  label,\n  price,\n  highlight = false,\n}) => (\n  <OrderWareLineWrap>\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      {highlight ? (\n        <b>\n          <Price price={price} />\n        </b>\n      ) : (\n        <Price price={price} />\n      )}\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FOrderTotalsFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { OrderWarePriceLine } from './OrderWarePriceLine'\n\ninterface IProps {\n  totals: FOrderTotalsFragment\n}\n\nconst StyledOrderDetailTotals = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.FC<IProps> = ({ totals }) => (\n  <StyledOrderDetailTotals>\n    <OrderWarePriceLine label={i18n.t`Tips`} price={totals.tip.value} />\n    <OrderWarePriceLine\n      label={i18n.t`Transport fee`}\n      price={totals.transportFee.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Covers price`}\n      price={totals.coverPrice.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Discount total`}\n      price={totals.totalDiscount.value * -1}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Total price`}\n      price={totals.totalSum.value}\n      highlight={true}\n    />\n  </StyledOrderDetailTotals>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  OrderOriginEnum,\n  QOrderDetailOrderOrigin,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  displayedId: string\n  orderOrigin: QOrderDetailOrderOrigin\n}\n\nconst orderColorAccordingOrigin = ({ orderOrigin }: IProps) => {\n  switch (orderOrigin.enum) {\n    case OrderOriginEnum.DameJidlo:\n      return Colors.orange\n    default:\n      return Colors.greyLight\n  }\n}\n\nconst OrderOriginLabel = styled.div`\n  display: inline-block;\n  background: ${orderColorAccordingOrigin};\n  border-radius: 0.7rem;\n  margin: 0 0 0 1rem;\n  padding: 0.1rem 0.8rem;\n`\n\nexport const OrderIdLine: React.FC<IProps> = ({ displayedId, orderOrigin }) => (\n  <IconLine icon=\"format_list_numbered\" labelMargin=\"0\">\n    {displayedId}\n    <OrderOriginLabel orderOrigin={orderOrigin} displayedId={displayedId}>\n      {orderOrigin.code}\n    </OrderOriginLabel>\n  </IconLine>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: ReadonlyArray<string>\n}\n\nexport const OrderRuleLines: React.FC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import styled from 'styled-components'\n\nimport { Colors } from '../../../styling'\n\nexport const OrderTimeLabel = styled.div`\n  margin-left: 1rem;\n  display: inline-block;\n  color: ${Colors.greyMiddle};\n`\n","import { Trans } from '@lingui/macro'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { QOrderDetailOrder } from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  order: QOrderDetailOrder\n}\n\nconst DelayedDeliveryTimeLabel = styled.span`\n  font-weight: bold;\n  color: ${Colors.orange};\n`\n\nconst DelayedOrderTimeLabel = styled(OrderTimeLabel)`\n  color: ${Colors.orange};\n`\n\nexport const OrderStats: React.FC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.delayedDeliveryTime) {\n    stats.push(\n      <div key=\"delayedDeliveryTime\">\n        <DelayedDeliveryTimeLabel>\n          {formatTimeWithoutTodayDate(order.delayedDeliveryTime)}\n        </DelayedDeliveryTimeLabel>\n        <DelayedOrderTimeLabel>\n          <Trans>Deliver at time</Trans>\n        </DelayedOrderTimeLabel>\n      </div>,\n    )\n  } else if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <OrderTimeLabel>\n          <Trans>Deliver on time</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <OrderTimeLabel>\n          <Trans>Driver</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  FOrderTimingOrderTiming,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  orderTiming: ReadonlyArray<FOrderTimingOrderTiming>\n}\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NewOrders]: i18nMark('Created'),\n  [OrderStateCategoryEnum.Preparing]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.OnWay]: i18nMark('On way'),\n  [OrderStateCategoryEnum.Finished]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.FC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <OrderTimeLabel>\n          {i18n._(labelMap[timing.orderStateCategory])}\n        </OrderTimeLabel>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.black};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.FC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React, { Fragment } from 'react'\n\nimport { QOrderDetailItems } from '../../../graph/generated'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: ReadonlyArray<QOrderDetailItems>\n}\n\nexport const OrderWareList: React.FC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: QOrderDetailItems) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { Colors, Radiuses, Spacing } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {}\n\nconst StyledHamburgerMenu = styled.div`\n  position: relative;\n`\n\nconst PopupMenu = styled.div`\n  position: absolute;\n  bottom: 4rem;\n  left: 0;\n  background: ${Colors.white};\n  padding: ${Spacing.Small};\n  border: solid 1px ${Colors.greyLight};\n  border-radius: ${Radiuses.Card};\n  box-shadow: 2px 6px 21px -2px rgba(0, 0, 0, 0.75);\n  & div:not(:last-child) {\n    margin-bottom: ${Spacing.Middle};\n  }\n`\n\nexport const HamburgerMenu: React.FC<IProps> = ({ children }) => {\n  const [isOpened, setIsOpened] = React.useState(false)\n  return React.Children.count(children) ? (\n    <StyledHamburgerMenu>\n      <SizerButton>\n        <TouchButton\n          iconName=\"menu\"\n          disabled={children === null}\n          onClick={() => setIsOpened(!isOpened)}\n        />\n      </SizerButton>\n      {isOpened && <PopupMenu>{children}</PopupMenu>}\n    </StyledHamburgerMenu>\n  ) : null\n}\n","import { SECOND } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { Colors } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  confirmNode: ReactNode | string\n  initialColor?: Colors\n  confirmColor?: Colors\n  confirmDisableMs?: number\n  resetToInitialMs?: number\n  onConfirm(): void\n}\n\nexport const ConfirmButton: React.FC<IProps> = ({\n  confirmNode,\n  initialColor = Colors.greyMiddle,\n  confirmColor = Colors.red,\n  confirmDisableMs = 300,\n  resetToInitialMs = 3 * SECOND,\n  children,\n  onConfirm,\n}) => {\n  const [needConfirm, setNeedConfirm] = React.useState(false)\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const onClick = () => {\n    if (needConfirm === false) {\n      buttonRef.current!.disabled = true\n      setNeedConfirm(true)\n      setTimeout(() => {\n        if (buttonRef.current) {\n          buttonRef.current.disabled = false\n        }\n      }, confirmDisableMs)\n    } else {\n      onConfirm()\n    }\n  }\n\n  React.useEffect(\n    () => {\n      if (needConfirm) {\n        const timer = setTimeout(() => {\n          setNeedConfirm(false)\n        }, resetToInitialMs)\n        return () => {\n          clearTimeout(timer)\n        }\n      }\n      return undefined\n    },\n    [resetToInitialMs, needConfirm],\n  )\n\n  return (\n    <TouchButton\n      ref={buttonRef}\n      onClick={onClick}\n      color={needConfirm ? confirmColor : initialColor}\n    >\n      {needConfirm ? confirmNode : children}\n    </TouchButton>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Sizer } from '../../../atoms/Sizer'\nimport { useMCancelOrder } from '../../../graph/generated'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderCancelButton: React.FC<IProps> = ({ orderId }) => {\n  const [cancelOrder] = useMCancelOrder()\n\n  return (\n    <Sizer width={7.375}>\n      <ConfirmButton\n        confirmNode={<Trans>Really cancel?</Trans>}\n        onConfirm={() => {\n          cancelOrder({ orderId })\n        }}\n      >\n        <Trans>Cancel order</Trans>\n      </ConfirmButton>\n    </Sizer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { useMOrderChangeToPickup } from '../../../graph/generated'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderDeliveryToPickup: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [changeToPickup] = useMOrderChangeToPickup()\n  if (!isDelivery) {\n    return null\n  }\n  return (\n    <CanMutate mutationName=\"updateOrderDeliveryToPickup\">\n      <ConfirmButton\n        confirmNode={<Trans>Really change?</Trans>}\n        onConfirm={() => {\n          changeToPickup({ orderId })\n        }}\n      >\n        <Trans>Change to pickup</Trans>\n      </ConfirmButton>\n    </CanMutate>\n  )\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { useMSetPriorityOrder } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  orderId: ID\n  isPriority: boolean\n}\n\nexport const OrderStarButton: React.FC<IProps> = ({ orderId, isPriority }) => {\n  const [setPriorityOrder] = useMSetPriorityOrder()\n\n  return (\n    <CanMutate mutationName=\"setPriorityOrder\">\n      <SizerButton>\n        <TouchButton\n          iconName=\"star\"\n          iconColor={isPriority ? Colors.orange : Colors.white}\n          onClick={() => setPriorityOrder({ orderId, isPriority: !isPriority })}\n        />\n        >\n      </SizerButton>\n    </CanMutate>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n}\n\nconst stateLabels = {\n  [OrderStateEnum.Accepted]: i18nMark('Accept order'),\n  [OrderStateEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateEnum.Finished]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.FC<IProps> = ({ orderId, nextState }) => {\n  const [updateOrderState] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        text={i18n._(stateLabels[nextState])}\n        width=\"7.375rem\"\n        onClick={() => {\n          updateOrderState({ orderId, state: nextState })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import { useRoot } from '../atoms/RootProvider'\n\nexport function useAccessGuard(\n  queries: string[],\n  mutations: string[],\n): boolean {\n  const { user } = useRoot()\n  return queries.every(user.canQuery) && mutations.every(user.canMutate)\n}\n\nexport function useCanQuery(...queries: string[]) {\n  return useAccessGuard(queries, [])\n}\n\nexport function useCanMutate(...mutations: string[]) {\n  return useAccessGuard([], mutations)\n}\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = FDriverFragment\n\ninterface IProps {\n  drivers: ReadonlyArray<TDriver>\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst DriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst backgroundColor = {\n  background: Colors.greyMiddle,\n}\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...backgroundColor,\n    ...textColor,\n    height: Spacing.ButtonHeight + Spacing.DefaultSizeUnit,\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    ...backgroundColor,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n}\n\nexport const OrderDriverSelect: React.FC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers as TDriver[]}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver => {\n      if (driver === null) {\n        onClear()\n      } else {\n        onSelect(driver as TDriver)\n      }\n    }}\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <DriverName>{`${driver.firstName} ${driver.lastName}`}</DriverName>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useMOrderState,\n  useMRemoveOrderDriver,\n  useMSelectOrderDriver,\n  useQOrderDrivers,\n} from '../../../graph/generated'\nimport { useCanQuery } from '../../../hooks/useAccessGuard'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n}\n\nexport const OrderStateDeliver: React.FC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n}) => {\n  const canRead = useCanQuery('drivers')\n\n  const [deliverOrder] = useMOrderState()\n  const [selectDriver] = useMSelectOrderDriver()\n  const [removeDriver] = useMRemoveOrderDriver()\n\n  const { data, loading, refetch } = useQOrderDrivers(\n    {\n      branchId: [branchId],\n      orderId,\n    },\n    {\n      skip: !canRead,\n    },\n  )\n  return (\n    <CanMutate mutationName=\"createUserDeliveringOrder\">\n      <OrderDriverSelect\n        drivers={loading || !canRead ? [] : data.drivers}\n        selectedDriver={\n          loading ? null : data.order.driver && data.order.driver.user\n        }\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          const orderDriver = data.order.driver\n          if (orderDriver) {\n            removeDriver({ orderDriverId: orderDriver.id })\n          }\n        }}\n        onSelect={driver => {\n          selectDriver({ orderId, driverId: driver.id })\n          if (orderStateCategory !== OrderStateCategoryEnum.OnWay) {\n            deliverOrder({ orderId, state: OrderStateEnum.OnWay })\n          }\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst OrderStateFlowContainerWrapper = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n  height: ${Spacing.ButtonHeight + Spacing.DefaultSizeUnit};\n`\n\nconst Control = styled.div`\n  margin: 0 0 0 0.5rem;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.FC<IProps> = ({ children }) => (\n  <OrderStateFlowContainerWrapper>\n    {Children.map(children, (child, idx) => (\n      <Control key={idx}>{child}</Control>\n    ))}\n  </OrderStateFlowContainerWrapper>\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport {\n  DeliveryTypeEnum,\n  useMOrderTimeNotification,\n} from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { DeliveryTimeDialog } from '../../../molecules/DeliveryTimeDialog'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderStateTimeNotification: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const [sendTimeNotification] = useMOrderTimeNotification()\n\n  return (\n    <CanMutate mutationName=\"orderNotifyCustomer\">\n      <DeliveryTimeDialog\n        title={\n          isDelivery\n            ? i18n.t`Send expected time of delivery to customer (in minutes)`\n            : i18n.t`Send expected time of pickup to customer (in minutes)`\n        }\n        deliveryType={\n          isDelivery ? DeliveryTypeEnum.Messenger : DeliveryTypeEnum.Pickup\n        }\n        onConfirm={minutes => {\n          sendTimeNotification({ orderId, minutes })\n        }}\n      >\n        {({ openDialog }) => (\n          <TouchButton iconName=\"schedule\" onClick={openDialog} />\n        )}\n      </DeliveryTimeDialog>\n    </CanMutate>\n  )\n}\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n  useQOrderState,\n} from '../../../graph/generated'\nimport { HamburgerMenu } from '../../../molecules/HamburgerMenu'\nimport { OrderCancelButton } from '../molecules/OrderCancelButton'\nimport { OrderDeliveryToPickup } from '../molecules/OrderDeliveryToPickup'\nimport { OrderStarButton } from '../molecules/OrderStarButton'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  orderStateCategory: OrderStateCategoryEnum\n  canCancel: boolean\n  canDeliver: boolean\n  isDelivery: boolean\n  isPriority: boolean\n}\n\nconst HamburgerMenuAtLeft: React.FC = ({ children }) => {\n  return (\n    <CardDock position=\"BottomLeft\">\n      <HamburgerMenu>{children}</HamburgerMenu>\n    </CardDock>\n  )\n}\n\nconst OrderStateNewOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n      <OrderDeliveryToPickup {...props} />\n    </HamburgerMenuAtLeft>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Accepted} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n      <OrderDeliveryToPickup {...props} />\n    </HamburgerMenuAtLeft>\n\n    <OrderStarButton {...props} />\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver && (\n      <OrderStateButton nextState={OrderStateEnum.ReadyToDeliver} {...props} />\n    )}\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateReadyToDeliverOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n    <OrderStarButton {...props} />\n    {props.isDelivery ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateFinishedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <HamburgerMenuAtLeft>\n      {props.canCancel && <OrderCancelButton {...props} />}\n    </HamburgerMenuAtLeft>\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.FC<IProps> = ({ orderId, branchId }) => {\n  const { data, loading } = useQOrderState({\n    orderId,\n    branchId,\n  })\n\n  if (loading) {\n    return null\n  }\n\n  const {\n    order,\n    companyBranch: { allowedCategories },\n  } = data\n\n  const isDelivery =\n    order.deliveryType !== null &&\n    order.deliveryType.enum !== DeliveryTypeEnum.Pickup\n\n  const canDeliver =\n    isDelivery &&\n    (allowedCategories.includes(OrderStateCategoryEnum.OnWay) ||\n      allowedCategories.includes(OrderStateCategoryEnum.ReadyToDeliver))\n\n  const canCancel = order.isCancelable\n\n  const isPriority = order.isPriority\n\n  const stateProps: IStateProps = {\n    orderId,\n    branchId,\n    orderStateCategory: order.orderStateCategory,\n    canCancel,\n    canDeliver,\n    isDelivery,\n    isPriority,\n  }\n  switch (order.orderStateCategory) {\n    case OrderStateCategoryEnum.NewOrders:\n      return <OrderStateNewOrder {...stateProps} />\n    case OrderStateCategoryEnum.Preparing:\n      return <OrderStateAcceptedOrder {...stateProps} />\n    case OrderStateCategoryEnum.ReadyToDeliver:\n      return <OrderStateReadyToDeliverOrder {...stateProps} />\n    case OrderStateCategoryEnum.OnWay:\n      return <OrderStateOnWayOrder {...stateProps} />\n    case OrderStateCategoryEnum.Finished:\n      return <OrderStateFinishedOrder {...stateProps} />\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { Loading } from '../../../atoms/Loading'\nimport { useQOrderDetail } from '../../../graph/generated'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderIdLine } from '../molecules/OrderIdLine'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IProps {\n  orderId: string\n}\n\nconst StyledOrderDetail = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail = React.memo<IProps>(({ orderId }) => {\n  const { data, loading } = useQOrderDetail({\n    orderId,\n  })\n\n  if (loading) {\n    return <Loading />\n  }\n\n  const { order } = data\n\n  return (\n    <>\n      <StyledOrderDetail>\n        <HorizontalSeparator />\n        <OrderWareList orderWares={order.items} />\n        <OrderDetailTotals totals={order} />\n        <OrderRuleLines rules={order.allAppliedRules}>\n          <OrderCountLine\n            current={order.customerOrdersCountCurrent}\n            total={order.customerOrdersCountTotal}\n          />\n        </OrderRuleLines>\n        <ContactLines\n          phones={order.customer.phones}\n          emails={order.customer.emails}\n        />\n        <NoteLine note={order.note} previousNote={order.previousNote} />\n        <HorizontalSeparator />\n        <OrderIdLine displayedId={order.id} orderOrigin={order.orderOrigin} />\n        <HorizontalSeparator />\n        <OrderTimeLine orderTiming={order.orderTiming} />\n        <OrderStats order={order} />\n      </StyledOrderDetail>\n      <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n    </>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FOrderTickerFragment } from '../../../graph/generated'\nimport { Colors, Radiuses } from '../../../styling'\nimport { useOrderListModel } from '../hooks/useOrderListModel'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ninterface IProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onToggleDetail?(): void\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox = observer<IProps>(\n  ({ order, showBranch, isCancelled, onToggleDetail }) => {\n    const orderListModel = useOrderListModel()\n\n    const orderId = order.id\n\n    const onClick = React.useCallback(() => {\n      orderListModel.toggleOrderDetail(orderId)\n      if (onToggleDetail) {\n        onToggleDetail()\n      }\n    }, [orderId])\n\n    const isDetailOpen = orderListModel.isOrderDetailOpen(orderId)\n\n    return (\n      <OrderBoxStyled id={`order-${orderId}`}>\n        <OrderTicker\n          order={order}\n          showBranch={showBranch}\n          isCancelled={isCancelled}\n          onClick={onClick}\n        />\n        {isDetailOpen && <OrderDetail orderId={orderId} />}\n      </OrderBoxStyled>\n    )\n  },\n)\n","import { i18n } from '@lingui/core'\nimport { DatePickerInlineProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\n\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends DatePickerInlineProps {}\n\nexport const InputDate: React.FC<IProps> = props => {\n  return (\n    <DateTimeFormatProvider>\n      <InlineDatePicker\n        format=\"ll\"\n        maxDateMessage={i18n.t`Date is too much in the future`}\n        minDateMessage={i18n.t`Date is too much in the past`}\n        {...props}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import { DatePickerProps } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { InputDate } from './InputDate'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <Field\n      field={field}\n      render={fieldApi => (\n        <InputDate\n          value={fieldApi.value}\n          onChange={value => fieldApi.setValue(value)}\n          onOpen={() => fieldApi.setTouched(true)}\n          {...pickerProps}\n        />\n      )}\n    />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const ClosureHistoryFilter = () => {\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateFrom\"\n          label={<Trans>From date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateTo\"\n          label={<Trans>To date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Trans>Show history for branch</Trans>\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import { subDays } from 'date-fns'\nimport React, { createContext, useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QClosureHistoryDocument,\n  QClosureHistoryHistory,\n  QClosureHistoryQuery,\n  QClosureHistoryVariables,\n} from '../../../graph/generated'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\n\nexport type TReports = QClosureHistoryHistory\n\nconst context = createContext<IQueryResult<QClosureHistoryQuery> | null>(null)\n\nexport const useClosureHistory = () => useContext(context)!\n\nexport const ClosureHistoryLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery<\n    QClosureHistoryQuery,\n    QClosureHistoryVariables\n  >(QClosureHistoryDocument)\n\n  return (\n    <Form\n      onSubmit={(formValues: { dateFrom: Date; dateTo: Date }) => {\n        if (statistics.closureBranch) {\n          execute({\n            branchId: statistics.closureBranch,\n            dateFrom: formatDateISO(formValues.dateFrom),\n            dateTo: formatDateISO(formValues.dateTo),\n          })\n        }\n      }}\n      defaultValues={{ dateFrom: subDays(new Date(), 1), dateTo: new Date() }}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading, wasExecuted } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (!wasExecuted) {\n    return null\n  }\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (data && data.history.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data &&\n        data.history.map(report => (\n          <FlexRow key={report.id}>\n            <FlexColumn fixedWidth={true}>\n              <RelativeLink to={`../${report.id}`}>\n                <SizerButton>\n                  <TouchButton iconName=\"mode_edit\" />\n                </SizerButton>\n              </RelativeLink>\n            </FlexColumn>\n            <FlexColumn widthGrowIndex={1}>\n              {`[${report.reportSequence}] ${formatDateISO(\n                report.reportDatetime,\n              )}`}\n            </FlexColumn>\n          </FlexRow>\n        ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryFilter } from '../molecules/ClosureHistoryFilter'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.FC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <ClosureHistoryFilter />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n}\n\nconst MonospaceOutputStyled = styled.p`\n  color: white;\n  font-family: 'Lucida Console', Monaco, monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 1rem;\n  line-height: 1.8rem;\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nexport const MonospaceOutput: React.FC<IProps> = ({ text }) => (\n  <MonospaceOutputStyled>{formatOutput(text)}</MonospaceOutputStyled>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQClosureReport } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent = observer<IProps>(\n  ({ reportId = '' }) => {\n    const { statistics } = useRoot()\n    const skip = !statistics.closureBranch\n    const { data, loading } = useQClosureReport(\n      {\n        branchId: statistics.closureBranch!,\n        reportId,\n        showReport: Boolean(reportId),\n      },\n      { skip },\n    )\n\n    if (skip) {\n      return <MonospaceOutput text={i18n.t`Select a branch`} />\n    }\n\n    if (loading) {\n      return <MonospaceOutput text={i18n.t`Computing`} />\n    }\n\n    return (\n      <MonospaceOutput\n        text={reportId ? data.report!.plainData : data.lastReport.plainData}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick?(e: MouseEvent<HTMLButtonElement>): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.FC<IProps> = props => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <TouchButton\n      text={i18n.t`Create closure`}\n      color={Colors.green}\n      width=\"12rem\"\n      {...props}\n    />\n  </CanMutate>\n)\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useMFinancialReportCreate } from '../../../graph/generated'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nconst ButtonToRight = styled.div`\n  float: right;\n`\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const [createClosure] = useMFinancialReportCreate()\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      branchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <>\n      {showCurrent ? (\n        <ClosureCurrentButton />\n      ) : (\n        <ClosureSubmitButton\n          onClick={onSubmit}\n          disabled={!statistics.closureBranch}\n        />\n      )}\n      <ButtonToRight>\n        <ClosureHistoryButton />\n      </ButtonToRight>\n    </>\n  ))\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsContent } from '../molecules/ClosureStatisticsContent'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.FC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import { isoDate } from '@speedlo/graphql'\nimport React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { InputStatisticCreate } from '../../../graph/types'\n\nconst context = React.createContext<InputStatisticCreate | undefined>(undefined)\n\nexport const useStatsFilterCurrent = () => React.useContext(context)\n\nexport function useStatsFilter() {\n  const { statistics } = useRoot()\n  const [filter, setFilter] = React.useState<InputStatisticCreate | undefined>()\n\n  const executeFilter = () => {\n    setFilter({\n      branches: [...statistics.branchesFilter],\n      drivers: [...statistics.drivers],\n      dateTimeFrom: isoDate(statistics.dateTimeFrom),\n      dateTimeTo: isoDate(statistics.dateTimeTo),\n    })\n  }\n\n  const defaultValues = {\n    dateTimeFrom: statistics.dateTimeFrom,\n    dateTimeTo: statistics.dateTimeTo,\n  }\n\n  const renderForm = (children: ReactNode | ReactNode[]) => {\n    return (\n      <Form\n        onSubmit={executeFilter}\n        onChange={({ values }) => statistics.updateFilter(values)}\n        defaultValues={defaultValues}\n      >\n        <context.Provider value={filter}>{children}</context.Provider>\n      </Form>\n    )\n  }\n\n  return {\n    filter,\n    executeFilter,\n    renderForm,\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { InputStatisticCreate, useQStatsDaily } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nconst StatsDisplay: React.FC<{ plain: string }> = ({ plain, children }) => {\n  return (\n    <>\n      <Headline light={true}>{children}</Headline>\n      <MonospaceOutput text={plain} />\n    </>\n  )\n}\n\nexport const DailyStatisticsContent: React.FC = () => {\n  const filter = useStatsFilterCurrent()\n  const getRelevantFilter = (): InputStatisticCreate => {\n    if (!filter) {\n      return { branches: [] }\n    }\n    return {\n      branches: filter.branches,\n      dateTimeFrom: filter.dateTimeFrom,\n      dateTimeTo: filter.dateTimeTo,\n    }\n  }\n  const { data, loading } = useQStatsDaily(\n    {\n      filter: getRelevantFilter(),\n    },\n    { skip: !filter },\n  )\n\n  if (!filter) {\n    return null\n  }\n\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n\n  const { stats } = data\n  return (\n    <>\n      <StatsDisplay plain={stats.daily}>\n        <Trans>Daily statistics</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.category}>\n        <Trans>By category</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.delivery}>\n        <Trans>By type</Trans>\n      </StatsDisplay>\n\n      <StatsDisplay plain={stats.drivers}>\n        <Trans>By driver</Trans>\n      </StatsDisplay>\n    </>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(statistics.branches)}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n    />\n  ))\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDateTime } from '../../../atoms/FormInputDateTime'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const StatisticsFilter = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeFrom\"\n          label={<Trans>From</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeTo\"\n          label={<Trans>To</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Plural\n            value={statistics.branchesFilter.length}\n            one=\"Show for one branch\"\n            few=\"Show for # branches\"\n            other=\"Show for # branches\"\n          />\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  ))\n}\n","import React from 'react'\n\nimport { useStatsFilter } from '../hooks/useStatsFilter'\n\ninterface IProps {\n  children: ReactNode | ReactNode[]\n}\n\nexport const DailyStatisticsLoader: React.FC<IProps> = ({ children }) => {\n  const { renderForm } = useStatsFilter()\n  return renderForm(children)\n}\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { DailyStatisticsContent } from '../molecules/DailyStatisticsContent'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  IndexRange,\n  InfiniteLoader,\n  List,\n} from 'react-virtualized'\n\nimport { Loading } from '../../../atoms/Loading'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  OrderStateCategoryEnum,\n  QStatsOrdersListDocument,\n  QStatsOrdersListList,\n  QStatsOrdersListQuery,\n  QStatsOrdersListVariables,\n  useQStatsOrdersCounts,\n} from '../../../graph/generated'\nimport { useExecutableQuery } from '../../../hooks/useExecutableQuery'\nimport { OrderBox } from '../../order/atoms/OrderBox'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nexport const OrdersStatisticsList: React.FC = () => {\n  const { statistics } = useRoot()\n  const filter = useStatsFilterCurrent()\n\n  const orders = React.useRef(new Map<number, QStatsOrdersListList>())\n  const loaderRef = React.useRef<InfiniteLoader | null>(null)\n  const measureCache = React.useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: 55,\n        minHeight: 55,\n      }),\n    [],\n  )\n\n  const { data: countsData, loading: countsLoading } = useQStatsOrdersCounts(\n    { filter: filter! },\n    { skip: !filter },\n  )\n\n  React.useEffect(() => {\n    orders.current.clear()\n    measureCache.clearAll()\n    if (loaderRef.current) {\n      loaderRef.current.resetLoadMoreRowsCache(true)\n    }\n  }, [JSON.stringify(filter)])\n\n  const { execute: executeList } = useExecutableQuery<\n    QStatsOrdersListQuery,\n    QStatsOrdersListVariables\n  >(QStatsOrdersListDocument)\n\n  const queryMoreOrders = React.useCallback(\n    async ({ startIndex, stopIndex }: IndexRange) => {\n      if (filter) {\n        const result = await executeList({\n          filter,\n          pagination: {\n            fromIndex: startIndex,\n            toIndex: stopIndex,\n          },\n        })\n\n        if (result.data) {\n          const list = [...result.data.stats.orders.list]\n          for (let index = startIndex; index <= stopIndex; index++) {\n            const order = list.shift()\n            if (order) {\n              orders.current.set(index, order)\n            }\n          }\n        }\n      }\n    },\n    [filter],\n  )\n\n  const isRowLoaded = React.useCallback(\n    ({ index }) => orders.current.get(index) !== undefined,\n    [],\n  )\n\n  const rowRenderer = React.useCallback(({ index, key, style, parent }) => {\n    const order = orders.current.get(index)\n    if (order === undefined) {\n      return (\n        <div style={style} key={key}>\n          ...\n        </div>\n      )\n    }\n    return (\n      <CellMeasurer\n        key={key}\n        columnIndex={0}\n        rowIndex={index}\n        cache={measureCache}\n        parent={parent}\n      >\n        {({ measure }) => (\n          <div style={style}>\n            <OrderBox\n              order={order}\n              showBranch={statistics.branchesFilter.length > 1}\n              isCancelled={\n                order.orderStateCategory === OrderStateCategoryEnum.Cancel\n              }\n              onToggleDetail={() => {\n                setTimeout(measure, 500)\n              }}\n            />\n          </div>\n        )}\n      </CellMeasurer>\n    )\n  }, [])\n\n  if (!filter) {\n    return null\n  }\n\n  if (countsLoading) {\n    return <Loading />\n  }\n\n  const { finished, cancelled } = countsData.stats.counts\n  const totalCount = finished + cancelled\n\n  if (totalCount === 0) {\n    return <Trans>No orders</Trans>\n  }\n\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <InfiniteLoader\n          rowCount={totalCount}\n          isRowLoaded={isRowLoaded}\n          loadMoreRows={queryMoreOrders}\n          ref={loaderRef}\n        >\n          {({ onRowsRendered, registerChild }) => (\n            <List\n              ref={registerChild}\n              onRowsRendered={onRowsRendered}\n              rowHeight={measureCache.rowHeight}\n              deferredMeasurementCache={measureCache}\n              rowCount={totalCount}\n              width={width}\n              height={height}\n              rowRenderer={rowRenderer}\n            />\n          )}\n        </InfiniteLoader>\n      )}\n    </AutoSizer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { Price } from '../../../atoms/Price'\nimport { useQStatsOrders } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { useStatsFilterCurrent } from '../hooks/useStatsFilter'\n\nconst StatPanel = styled.div`\n  margin: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n`\n\nconst StatLabel = styled.h1`\n  font-size: 1.5rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nconst StatValue = styled.h2`\n  font-size: 4rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const filter = useStatsFilterCurrent()\n  const { data, loading } = useQStatsOrders(\n    { filter: filter! },\n    { skip: !filter },\n  )\n\n  if (!filter) {\n    return null\n  }\n\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n\n  const stats = data.stats.finishedOrders\n\n  return (\n    <>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total turnover</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Online payments</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Orders count</Trans>\n        </StatLabel>\n        <StatValue>{stats.finishedCount + stats.cancelledCount}</StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total commissions</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <MonospaceOutput text={data.stats.orderStatisticsPlain} />\n      </StatPanel>\n    </>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { FDriverFragment, useQAllDrivers } from '../../../graph/generated'\nimport { formatFullName } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ntype TDriver = FDriverFragment\n\nexport const StatisticsDriversFilter = observer(() => {\n  const { statistics } = useRoot()\n  const { data, loading } = useQAllDrivers({\n    branches: statistics.branchesFilter,\n  })\n  React.useEffect(\n    () => {\n      if (!loading) {\n        statistics.setDriversFilter(\n          RM.intersection(statistics.drivers, data.drivers.map(RM.prop('id'))),\n        )\n      }\n    },\n    [loading],\n  )\n  return (\n    <SelectControl<FDriverFragment>\n      isMulti={true}\n      isClearable={true}\n      isSearchable={true}\n      filterOption={(option, rawInput) =>\n        rawInput.length === 0 ||\n        formatFullName(option.data)\n          .toLocaleLowerCase()\n          .includes(rawInput.toLocaleLowerCase())\n      }\n      placeholder={i18n.t`Filter by drivers`}\n      isLoading={loading}\n      options={loading ? [] : [...data.drivers]}\n      value={\n        loading\n          ? []\n          : data.drivers.filter(driver =>\n              statistics.drivers.includes(driver.id),\n            )\n      }\n      formatOptionLabel={formatFullName}\n      getOptionValue={RM.prop('id')}\n      onChange={value => {\n        if (!value) {\n          statistics.setDriversFilter([])\n        } else {\n          statistics.setDriversFilter((value as TDriver[]).map(RM.prop('id')))\n        }\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useStatsFilter } from '../hooks/useStatsFilter'\n\ninterface IProps {\n  autoFilter?: string\n  children: ReactNode | ReactNode[]\n}\n\nexport const OrdersStatisticsLoader: React.FC<IProps> = ({\n  children,\n  autoFilter,\n}) => {\n  const { executeFilter, renderForm } = useStatsFilter()\n\n  React.useEffect(\n    () => {\n      if (autoFilter) {\n        executeFilter()\n      }\n    },\n    [autoFilter],\n  )\n\n  return renderForm(children)\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { AutoHeight } from '../../../atoms/FlexAutoHeight'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { OrdersStatisticsList } from '../molecules/OrdersStatisticsList'\nimport { OrdersStatisticsSummary } from '../molecules/OrdersStatisticsSummary'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsDriversFilter } from '../molecules/StatisticsDriversFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\n\ninterface IProps extends RouteComponentProps<{ filter?: string }> {}\n\nfunction getLayout() {\n  return [{ i: 'summary', x: 0, y: 1, w: 7, h: 1 }]\n}\n\nexport const OrdersStatisticsPage: React.FC<IProps> = ({ match }) => {\n  const { statistics } = useRoot()\n  if (match.params.filter === 'today') {\n    statistics.setTodayOrdersFilter()\n  }\n  return (\n    <OrdersStatisticsLoader autoFilter={match.params.filter}>\n      <PageLayoutFullHeightItem\n        withScrollArea={false}\n        row={1}\n        column={7}\n        widthInColumns={9}\n      >\n        <AutoHeight>\n          <OrdersStatisticsList />\n        </AutoHeight>\n      </PageLayoutFullHeightItem>\n\n      <PageLayout\n        layouts={getLayout()}\n        pageTitle={i18n.t`Orders statistics`}\n        showSoundControl={false}\n        scrollPageTitle={false}\n        useBackButton={true}\n      >\n        <div key=\"summary\">\n          <Card>\n            <StatisticsBranchFilter />\n            <StatisticsDriversFilter />\n            <StatisticsFilter />\n          </Card>\n\n          <OrdersStatisticsSummary />\n        </div>\n      </PageLayout>\n    </OrdersStatisticsLoader>\n  )\n}\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'OrdersStatistics', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'DailyStatistics', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'Closure', x: 4, y: 1, w: 2, h: 2 },\n  ]\n}\n\nexport const OverviewPage: React.FC<IProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders/:filter?`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n"],"sourceRoot":""}