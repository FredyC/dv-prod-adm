{"version":3,"sources":["atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/SelectControl.tsx","atoms/Sizer.tsx","atoms/Headline.tsx","atoms/ShowFeedbackButton.tsx","hooks/useMutationGuard.ts","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/CanQuery.tsx","atoms/HorizontalSeparator.tsx","atoms/Price.tsx","atoms/FlexColumn.tsx","atoms/SelectControlFlat.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","molecules/FormSubmit.tsx","helpers/form.ts","atoms/DateTimeFormatProvider.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/MarginBox.tsx","hooks/useExecutableQuery.ts","atoms/TimeBadge.tsx","atoms/CardListTitle.tsx","segments/order/atoms/CustomerIdentity.tsx","hooks/useGuardedMutation.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/molecules/NoteLine.tsx","atoms/RelativeLink.tsx","atoms/DeliveryMinutes.tsx","molecules/DeliveryTimeDialog.tsx","atoms/FormInputDateTime.tsx","atoms/FlexAutoHeight.tsx","segments/order/molecules/OrderTicker.graphql.ts","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","atoms/ObserverWhen.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderWarePriceLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderIdLine.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/atoms/OrderTimeLabel.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareLine.tsx","segments/order/molecules/OrderWareList.tsx","segments/order/organisms/OrderDetail.graphql.ts","molecules/ConfirmButton.tsx","segments/order/molecules/OrderCancelButton.tsx","segments/order/molecules/OrderDeliveryToPickup.tsx","segments/order/molecules/OrderStateButton.tsx","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.graphql.ts","segments/order/organisms/OrderStateFlow.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/atoms/OrderBox.tsx","segments/overview/molecules/ClosureHistoryFilter.tsx","segments/overview/organisms/ClosureHistoryLoader.graphql.ts","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/pages/ClosureHistoryPage.tsx","atoms/MonospaceOutput.tsx","segments/overview/organisms/ClosureStatisticsContent.graphql.ts","segments/overview/organisms/ClosureStatisticsContent.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/pages/ClosurePage.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/molecules/StatisticsFilter.tsx","segments/overview/hooks/createStatisticsQuery.ts","segments/overview/organisms/DailyStatisticsLoader.graphql.ts","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/organisms/DailyStatisticsContent.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/organisms/OrdersStatisticsList.graphql.ts","segments/overview/organisms/OrdersStatisticsLoader.graphql.ts","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/organisms/OrdersStatisticsList.tsx","segments/overview/organisms/OrdersStatisticsSummary.tsx","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/routes/OverviewRoutes.tsx"],"names":["IconLineWrap","styled","div","withConfig","displayName","componentId","DescriptionContainer","_ref2","_ref2$labelMargin","labelMargin","_ref","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","IconLine","_ref3","iconComponent","icon","label","children","props","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Icon__WEBPACK_IMPORTED_MODULE_4__","iconName","color","Colors","greyDark","React","nativeColor","__webpack_require__","d","__webpack_exports__","CanMutate","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_1__","_RootProvider__WEBPACK_IMPORTED_MODULE_2__","mutationName","useRoot","user","canMutate","Fragment","concat","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","SizerContainer","_ref$widthUnit","widthUnit","height","_ref2$heightUnit","heightUnit","Sizer","_ref3$widthUnit","_ref3$heightUnit","className","wrap","_MarginBox__WEBPACK_IMPORTED_MODULE_4__","Headline","styled_components__WEBPACK_IMPORTED_MODULE_0__","_styling__WEBPACK_IMPORTED_MODULE_1__","h2","_ref3$light","light","greyLight","greyDarkest","_ref$margin","size","ShowFeedbackButton","react_default","TouchButton","onClick","Raven","showReportDialog","_lingui_react","id","useMutationGuard","mutate","options","defaultMessage","i18n","_","_useSnackBar","useSnackBar","enqueueSnackbar","enqueueError","enqueueWarning","handleUserErrors","userErrors","forEach","handleGraphQLErrors","errors","filter","RM","pathEq","map","prop","handleError","err","isApolloError","networkError","graphQLErrors","reportError","action","key","asyncToGenerator","regenerator_default","mark","_callee","variables","mutateOptions","result","_data","_args","_context","prev","next","sent","abrupt","data","getUserErrors","t0","stop","this","_x","apply","NoAccess","PageLayoutFullHeightItem","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","FlexRowSingle","_ref$justify","justify","CanQuery","queryName","canQuery","HorizontalSeparator","_styling__WEBPACK_IMPORTED_MODULE_2__","HorizontalSeparatorStyled","_ref$visible","visible","Price","_helpers_formats__WEBPACK_IMPORTED_MODULE_1__","price","currencyCode","formatPrice","FlexColumn","_ref$fixedWidth","fixedWidth","_ref$widthGrowIndex","widthGrowIndex","_ref2$padding","padding","_ref3$margin","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_6___default","hasSelection","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","idx","Component","defaultProps","getItemValue","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","react","placeholder","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","FormSubmit","react_form__WEBPACK_IMPORTED_MODULE_2__","form","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","validateIsRequired","validator__WEBPACK_IMPORTED_MODULE_0__","_i18n__WEBPACK_IMPORTED_MODULE_1__","formState","keys","fieldName","isEmpty","DateTimeFormatProvider","_date_io_moment__WEBPACK_IMPORTED_MODULE_0__","material_ui_pickers__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","utils","MomentUtils","cancelIconPadding","_templateObject","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","MarginBox","useExecutableQuery","query","client","useApolloClient","useObservable","loading","wasExecuted","hasAnyError","Boolean","error","execute","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","queryResult","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","runInAction","reportFailingQuery","getOperationName","reset","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","red","orange","bigNumberStyle","dashStyle","_templateObject2","clickable","_templateObject3","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","CardListTitle","CustomerIdentity","customer","lastName","firstName","defaultPhone","phone","useGuardedMutation","_speedlo_graphql__WEBPACK_IMPORTED_MODULE_0__","_useMutationGuard__WEBPACK_IMPORTED_MODULE_1__","mutation","useMutation","OrderTickerStyled","Element","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","Radiuses","Card","ToPickupLabel","violet","OrderTicker","order","showBranch","companyBranch","_atoms_DeliveryTimeBadge__WEBPACK_IMPORTED_MODULE_10__","Date","orderStateCategory","OrderStateCategoryEnum","Cancel","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","formatAddress","address","_atoms_CustomerIdentity__WEBPACK_IMPORTED_MODULE_9__","_atoms_Price__WEBPACK_IMPORTED_MODULE_5__","totalSum","currency","code","isPaidWithCard","NoteLine","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_2__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_3__","_i18n__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","CurrentNoteStyled","span","PreviousNoteStyled","note","previousNote","RelativeLink","from","linkProps","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","deliveryMinutes","pickupMinutes","MinutesContainer","MinutesItem","DeliveryMinutes","onMinuteClick","initialMinutes","_React$useState","useState","_React$useState2","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setSelected","getMinutesForDeliveryType","yellow","type","DeliveryTimeDialog","onConfirm","onCancel","cancelText","refApi","_useState","_useState2","isOpen","setOpen","openDialog","closeDialog","current","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","open","onClose","_atoms_DeliveryMinutes__WEBPACK_IMPORTED_MODULE_4__","_TouchButton__WEBPACK_IMPORTED_MODULE_5__","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","FormInputDateTime","field","_ref$inline","inline","pickerProps","Picker","InlineDateTimePicker","DateTimePicker","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_6__","react_form__WEBPACK_IMPORTED_MODULE_4__","render","fieldApi","setValue","onOpen","setTouched","format","ampm","showTabs","maxDateMessage","_i18n__WEBPACK_IMPORTED_MODULE_5__","minDateMessage","AutoHeight","OrderTickerFragment","gql","FAddressFragmentDoc","FCustomerFragmentDoc","FormInputDate","_DateTimeFormatProvider__WEBPACK_IMPORTED_MODULE_5__","react_form__WEBPACK_IMPORTED_MODULE_3__","okLabel","cancelLabel","clearLabel","todayLabel","FlexRow","ObserverWhen","test","renderSuccess","renderFailure","index_module","ContactLines","phones","emails","renderContact","contact","description","isMail","href","replace","renderClickableLink","email","OrderCountLine","total","values","OrderWareLineWrap","NameContainerStyled","OrderWarePriceLine","_ref$highlight","highlight","OrderCartTotalsContainer","OrderDetailTotals","OrderWarePriceLine_OrderWarePriceLine","transportFee","coverPrice","totalDiscount","OrderOriginLabel","orderOrigin","OrderOriginEnum","DameJidlo","OrderIdLine","displayedId","OrderRuleLines","rules","join","OrderTimeLabel","DelayedDeliveryTimeLabel","DelayedOrderTimeLabel","OrderStats","stats","formatTimeWithoutTodayDate","driver","_order$driver$user","Timelapse","labelMap","_labelMap","defineProperty","NewOrders","i18nMark","Preparing","ReadyToDeliver","OnWay","Finished","OrderTimeLine","orderTiming","reject","createdAt","timing","CodeContainerStyled","OrderWareLine","OrderWareLine_OrderWareLineWrap","OrderWareLine_NameContainerStyled","OrderWareLine_PriceContainerStyled","OrderWareList","orderWares","orderWare","OrderWareLine_OrderWareLine","recipe","nameLabel","sidedishes","sidedish","QueryOrderDetail","buildQuery","FPriceFragmentDoc","FEmailFragmentDoc","FPhoneFragmentDoc","OrderDriverFragment","ConfirmButton","confirmNode","_ref$initialColor","initialColor","_ref$confirmColor","confirmColor","_ref$confirmDisableMs","confirmDisableMs","_ref$resetToInitialMs","resetToInitialMs","SECOND","slicedToArray","needConfirm","setNeedConfirm","buttonRef","useRef","useEffect","timer","setTimeout","clearTimeout","OrderCancelButton","orderId","cancelOrder","MCancelOrderDocument","ConfirmButton_ConfirmButton","OrderDeliveryToPickup","isDelivery","changeToPickup","ChangeOrderToPickupMutation","text","stateLabels","_stateLabels","OrderStateEnum","Accepted","OrderStateButton","nextState","stateModel","updateOrderState","DriverName","backgroundColor","background","ButtonHeight","borderWidth","borderRadius","Button","valueContainer","singleValue","fontSize","OrderDriverSelect","drivers","selectedDriver","isLoading","onSelect","onClear","onReload","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","Icon","react_select_esm","DropdownIndicator","OrderStateDeliver","branchId","OrderStateDeliver_graphql","fetchPolicy","orderDriver","refetch","OrderDriverSelect_OrderDriverSelect","removeDriver","selectDriver","deliverOrder","OrderStateFlowContainerWrapper","Control","OrderStateFlowContainer","Children","child","OrderStateTimeNotification","Messenger","sendTimeNotification","QueryOrderState","OrderStateFlow_graphql_templateObject","OrderStateCategoryFragment","OrderStateNewOrder","OrderStateFlowContainer_OrderStateFlowContainer","canCancel","OrderCancelButton_OrderCancelButton","OrderDeliveryToPickup_OrderDeliveryToPickup","OrderStateTimeNotification_OrderStateTimeNotification","OrderStateButton_OrderStateButton","OrderStateAcceptedOrder","canDeliver","OrderStateDeliver_OrderStateDeliver","OrderStateReadyToDeliverOrder","OrderStateOnWayOrder","OrderStateFinishedOrder","OrderStateFlow","allowedCategories","VError","isCancelable","stateProps","OrderStateFlow_OrderStateNewOrder","OrderStateFlow_OrderStateAcceptedOrder","OrderStateFlow_OrderStateReadyToDeliverOrder","OrderStateFlow_OrderStateOnWayOrder","OrderStateFlow_OrderStateFinishedOrder","OrderDetailContainerStyled","OrderDetail","OrderWareList_OrderWareList","OrderDetailTotals_OrderDetailTotals","OrderRuleLines_OrderRuleLines","allAppliedRules","OrderCountLine_OrderCountLine","customerOrdersCountCurrent","customerOrdersCountTotal","ContactLines_ContactLines","OrderIdLine_OrderIdLine","OrderTimeLine_OrderTimeLine","OrderStats_OrderStats","OrderStateFlow_OrderStateFlow","OrderBox_OrderBox","OrderBoxStyled","OrderBox","toggleOrderDetail","isOrderDetailOpen","ObserverWhen_ObserverWhen","OrderDetail_OrderDetail","ClosureHistoryFilter","autoOk","ClosureHistoryQuery","context","createContext","ClosureHistoryLoader","statistics","_useExecutableQuery","es","onSubmit","formValues","closureBranch","dateFrom","formatDateISO","dateTo","defaultValues","subDays","ClosureHistoryLoader_context","Provider","ClosureHistoryTable","observer","_useClosureHistory","useContext","Loading","financialReports","report","reportSequence","reportDatetime","index_es","ClosureCurrentButton","react_router_dom","ButtonToRight","ClosureStatisticsFilter","showCurrent","setClosureBranch","ClosureCurrentButton_ClosureCurrentButton","ClosureHistoryPage","ClosureHistoryLoader_ClosureHistoryLoader","FullPageLayout","pageTitle","useBackButton","backRoute","ClosureHistoryFilter_ClosureHistoryFilter","MonospaceOutputStyled","p","MonospaceOutput","RegExp","FinancialReport","ClosureStatisticsContent_graphql_templateObject","QueryFinancialReport","ClosureStatisticsContent","_ref$reportId","reportId","WithRoot","showReport","renderLoading","_ref4","lastReport","MonospaceOutput_MonospaceOutput","plainData","ClosureHistoryButton","ClosureSubmitButton","ClosureStatisticsControl","enqueueSuccess","history","useRouterContext","createClosure","CreateFinancialReport","useCallback","companyBranchId","useObserver","ClosureSubmitButton_ClosureSubmitButton","ClosureStatisticsControl_ButtonToRight","ClosureHistoryButton_ClosureHistoryButton","ClosurePage","match","ClosureStatisticsControl_ClosureStatisticsControl","params","ClosureStatisticsContent_ClosureStatisticsContent","StatisticsBranchFilter","setBranchFilter","clearBranchFilter","StatisticsFilter","0","branchesFilter","getInitialResult","createStatisticsQuery","useStatisticsQuery","dateTimeFrom","dateTimeTo","executeFilter","isoDate","resetResult","DailyStatisticsLoader_graphql_templateObject","DailyStatisticsLoader","_useStatisticsQuery","updateFilter","DailyStatisticsLoader_context","DailyStatisticsContent","_useDailyStatistics","dailyStatisticsPlain","categoryStatisticsPlain","deliveryStatisticsPlain","driversStatisticsPlain","DailyStatisticsPage","DailyStatisticsLoader_DailyStatisticsLoader","StatisticsBranchFilter_StatisticsBranchFilter","StatisticsFilter_StatisticsFilter","OrdersStatisticsListQuery","OrdersStatisticsList_graphql_templateObject","OrdersStatisticsLoader_graphql_templateObject","useOrderStatistics","OrdersStatisticsLoader","OrdersStatisticsLoader_context","OrdersStatisticsList","_useRoot","orderModel","_useOrderStatistics","loaderRef","orders","Map","measureCache","useMemo","CellMeasurerCache","defaultHeight","minHeight","clear","clearAll","resetLoadMoreRowsCache","queryMoreOrders","startIndex","stopIndex","list","index","pagination","fromIndex","toIndex","toConsumableArray","set","shift","totalCount","_data$stats$finishedO","finishedOrders","finishedCount","cancelledCount","dist_es","rowCount","isRowLoaded","has","loadMoreRows","_ref5","onRowsRendered","registerChild","rowHeight","deferredMeasurementCache","noRowsRenderer","rowRenderer","_ref6","parent","get","columnIndex","rowIndex","cache","_ref7","measure","o","StatPanel","StatLabel","h1","StatValue","OrdersStatisticsSummary","onlinePayments","fees","orderStatisticsPlain","OrdersStatisticsPage","OrdersStatisticsLoader_OrdersStatisticsLoader","FlexAutoHeight","PageLayout","layouts","i","x","y","w","h","showSoundControl","scrollPageTitle","ClosureButton","DailyStatisticsButton","OrdersStatisticsButton","OverviewPage","OverviewRoutes_OverviewRoutes","OverviewRoutes","PageTitle","react_router","SecureRoute","exact","path","NotFoundPage"],"mappings":"iLA2BMA,EAAeC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,mBAGlBD,EAAaI,YAAc,eAE3B,IAAME,EAAuBL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,6DATH,SAAAM,GAAsD,IAAAC,EAAAD,EAAnDE,YACxB,YAD2E,IAAAD,EAArC,uBAAqCA,GAPvD,SAAAE,GAGR,IAAAC,EAAAD,EAFZE,kBAEY,IAAAD,EAFC,EAEDA,EAAAE,EAAAH,EADZI,gBAEA,OAAOF,QADK,IAAAC,EADME,IAAQC,gBACdH,KAoBRI,EAAmBhB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,0DAKhBiB,EAAcjB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,8CAKjBgB,EAAiBb,YAAc,mBAExB,IAAMe,EAA6B,SAAAC,GAQpC,IACAC,EARJC,EAOIF,EAPJE,KACAC,EAMIH,EANJG,MACAX,EAKIQ,EALJR,WACAE,EAIIM,EAJJN,gBACAL,EAGIW,EAHJX,YACAe,EAEIJ,EAFJI,SACGC,EACCC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,0EAYJ,OAVIE,IAEAD,EADkB,kBAATC,EACOM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,SAAUV,EAAMW,MAAOC,IAAOC,WAEpCC,IAAMN,cAAcR,EAAM,CACxCe,YAAaH,IAAOC,YAMxBP,EAAAC,EAAAC,cAAC9B,EAAiByB,EAChBG,EAAAC,EAAAC,cAACxB,EAAD,CACEM,WAAYA,EACZE,gBAAiBA,EACjBL,YAAaA,GAEZY,EACAE,EAAQK,EAAAC,EAAAC,cAACZ,EAAD,KAAcK,GAAuB,MAEhDK,EAAAC,EAAAC,cAACb,EAAD,KAAmBO,wCCjFzBc,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,MAAAQ,EAAAR,EAAA,IASaG,EAA8B,SAAA/B,GAAgC,IAA7BqC,EAA6BrC,EAA7BqC,aAAcvB,EAAed,EAAfc,SAE1D,OADiBwB,cAATC,KACIC,UAAUH,GACpBJ,EAAAd,EAAAC,cAAAa,EAAAd,EAAAsB,SAAA,KAAG3B,GAEHmB,EAAAd,EAAAC,cAACe,EAAA,EAAD,8BAAAO,OAAoCL,sJCF3BM,EAA6B,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA6B,GAA7B,OAAA7B,OAAAgC,EAAA,EAAAhC,CAAA,GACrC4B,EADqC,CAExCK,QAAS,SAACC,EAAMC,GAAU,IAAAC,EAGpBD,EADFE,YAAeC,EAFOF,EAEPE,MAAOC,EAFAH,EAEAG,SAElBC,EAAaxC,OAAAgC,EAAA,EAAAhC,CAAA,GACdkC,EADc,CAEjBO,OAAM,aAAAf,OAAelB,IAAOkC,YAC5BC,OAAQtD,IAAQuD,2BAChBN,WAAiBP,IAAVO,EAAA,GAAAZ,OAAyBY,EAAzB,OAAsC,OAC7CC,cAAuBR,IAAbQ,EAAA,GAAAb,OAA4Ba,EAA5B,OAA4C,SAExD,OAAOX,EAAYK,QACfL,EAAYK,QAAQO,EAAeL,GACnCK,GAENK,KAAM,SAACX,EAAMC,GAAU,IAEJG,EACbH,EADFE,YAAeC,MAEXQ,EAAU9C,OAAAgC,EAAA,EAAAhC,CAAA,GACXkC,EADW,CAEda,OAAQ,GACRxC,MAAOC,IAAOwC,MACdV,WAAiBP,IAAVO,EAAA,GAAAZ,OAAyBY,EAAzB,OAAsC,SAE/C,OAAOV,EAAYiB,KAAOjB,EAAYiB,KAAKC,EAAYX,GAASW,MAI7D,SAASG,EACdlD,GAEA,OACEG,EAAAC,EAAAC,cAAC8C,EAAA,EAADlD,OAAAmD,OAAA,GACMpD,EADN,CAEEqD,OAAQzB,EAA2B5B,EAAMqD,qICZzCC,EAAiB9E,YAAO,OAAVE,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAGJ,CAAH,aAtBE,SAAAS,GAGR,IAFLsD,EAEKtD,EAFZsD,MAEYgB,EAAAtE,EADZuE,UAAWA,OACC,IAAAD,EADWjE,IAAQC,gBACnBgE,EACZ,YAAcvB,IAAVO,EACK,GAEP,UAAAZ,OAAiBY,GAAjBZ,OAAyB6B,IAIN,SAAA1E,GAGT,IAFJ2E,EAEI3E,EAFZ2E,OAEYC,EAAA5E,EADZ6E,WAAYA,OACA,IAAAD,EADapE,IAAQC,gBACrBmE,EACZ,YAAe1B,IAAXyB,EACK,GAEP,WAAA9B,OAAkB8B,GAAlB9B,OAA2BgC,KASlBC,EAA0B,SAAAjE,GASjC,IARJ4C,EAQI5C,EARJ4C,MAQIsB,EAAAlE,EAPJ6D,iBAOI,IAAAK,EAPQvE,IAAQC,gBAOhBsE,EANJJ,EAMI9D,EANJ8D,OAMIK,EAAAnE,EALJgE,kBAKI,IAAAG,EALSxE,IAAQC,gBAKjBuE,EAJJlB,EAIIjD,EAJJiD,OACA7C,EAGIJ,EAHJI,SACAgE,EAEIpE,EAFJoE,UACG/D,EACCC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,6EACEqE,EACJ7D,EAAAC,EAAAC,cAACiD,EAADrD,OAAAmD,OAAA,CACEb,MAAOA,EACPiB,UAAWA,EACXC,OAAQA,EACRE,WAAYA,EACZI,UAAWA,GACP/D,GAEHD,GAIL,YAAkBiC,IAAXY,EACLoB,EAEA7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAWrB,OAAQA,GAASoB,uCCpEhCnD,EAAAC,EAAAC,EAAA,sBAAAmD,IAAA,IAAAC,EAAAtD,EAAA,IAAAuD,EAAAvD,EAAA,IAiBaqD,EAAW1F,IAAO6F,GAAV3F,WAAA,CAAAC,YAAA,WAAAC,YAAA,eAAGJ,CAAH,4DAHJ,SAAAmB,GAAA,IAAA2E,EAAA3E,EAAG4E,MAAH,gBAAAD,KACP7D,IAAO+D,UAAY/D,IAAOgE,aALlB,SAAAxF,GAAA,IAAAyF,EAAAzF,EAAG2D,OAAH,gBAAA8B,EAAY,oBAAZA,GAEE,SAAA5F,GAAA,MAAuC,YAAvCA,EAAG6F,MAAiD,kICNjE,SAASC,IACd,OACEC,EAAAzE,EAAAC,cAACyE,EAAA,EAAD,CAAaC,QAAS,kBAAMC,IAAMC,qBAChCJ,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,0DCMC,SAASC,EACdC,GAEA,IADAC,EACAxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwC,GAElCyD,EAAiBC,EAAA,EAAIC,EAAA,4FAD3BC,EAG0DC,cAAlDC,EAHRF,EAGQE,gBAAiBC,EAHzBH,EAGyBG,aAAcC,EAHvCJ,EAGuCI,eAEjCC,EAAmB,SAACC,GACxBA,EAAWC,QAAQH,IAGfI,EAAsB,SAACC,GAC3B,IAAMH,EAAaG,EAAOC,OACxBC,IAAGC,OAAO,CAAC,aAAc,eAAe,IAEhB,IAAtBN,EAAWjE,OACb8D,EAAaN,GAEbQ,EAAiBC,EAAWO,IAAIF,IAAGG,KAAK,cAItCC,EAAc,SAACC,GACnB,GAAIC,YAAcD,GAAM,CACtB,GAAIA,EAAIE,aAIN,YAHAf,EACEL,EAAA,EAAIC,EAAA,wFAGD,GAAIiB,EAAIG,cAEb,YADAX,EAAoBQ,EAAIG,eAI5BC,YAAYJ,GACZd,EAAgBL,EAAgB,CAC9BwB,OAAQ,CAACpG,IAAMN,cAAcuE,EAAoB,CAAEoC,IAAK,iBAI5D,sBAAA/H,EAAAgB,OAAAgH,EAAA,EAAAhH,CAAAiH,EAAA9G,EAAA+G,KAAO,SAAAC,EACLC,GADK,IAAAC,EAAAC,EAAAC,EAAAxB,EAAAyB,EAAA3F,UAAA,OAAAoF,EAAA9G,EAAA4D,KAAA,SAAA0D,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAELN,EAFKG,EAAA1F,OAAA,QAAAC,IAAAyF,EAAA,GAAAA,EAAA,GAEmD,GAFnDC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKkBvC,EAAOgC,EAAWC,GALpC,YAKGC,EALHG,EAAAG,MAMQ1B,OANR,CAAAuB,EAAAE,KAAA,eAOD1B,EAAoBqB,EAAOpB,QAP1BuB,EAAAI,OAAA,SAQM,MARN,UAUEP,EAAOQ,KAVT,CAAAL,EAAAE,KAAA,gBAAAF,EAAAI,OAAA,SAWM,MAXN,eAaGC,EAAOR,EAAOQ,KAChBzC,EAAQ0C,eAES,QADbhC,EAAaV,EAAQ0C,cAAcD,KAEvChC,EAAiBC,GAjBlB0B,EAAAI,OAAA,SAoBIC,GApBJ,eAAAL,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAsBHjB,EAAWiB,EAAAO,IAtBRP,EAAAI,OAAA,SAuBI,MAvBJ,yBAAAJ,EAAAQ,SAAAd,EAAAe,KAAA,aAAP,gBAAAC,GAAA,OAAAnJ,EAAAoJ,MAAAF,KAAArG,YAAA,sECxDFjB,EAAAC,EAAAC,EAAA,sBAAAuH,IAAAzH,EAAA,OAQayH,EAA6B,SAAArJ,KAAGc,SAAH,OAKpC,yCCbNc,EAAAC,EAAAC,EAAA,sBAAAwH,IAAA,IAAAtH,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAuH,EAAA3H,EAAA,IAAA4H,EAAA5H,EAAA,MAAA6H,EAAA7H,EAAA,IAiEM8H,EAAgBnK,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0CAAAC,YAAA,gBAAGJ,CAAH,6DAjCS,SAACwB,GAC3B,YAA6BgC,IAAzBhC,EAAM4I,eAEN,SACA5I,EAAM4I,eACN,gBAGAtJ,IAAQuJ,qBACR,IAGK,qBAAuBvJ,IAAQuJ,qBAAuB,MA3B3C,SAAC7I,GACrB,YAAqBgC,IAAjBhC,EAAM8I,OAEN,SACA9I,EAAM8I,OACN,gBAGAxJ,IAAQuJ,qBACR,IAGKvJ,IAAQuJ,sBAkBE,SAAC7I,GACpB,YAAkBgC,IAAdhC,EAAM+I,IAEN,SACA/I,EAAM+I,IACN,mBAGAzJ,IAAQuJ,qBACR,IAIA,oBAAqCvJ,IAAQuJ,qBAAuB,MAapEG,EAAsBxK,IAAOC,IAAVC,WAAA,CAAAC,YAAA,gDAAAC,YAAA,gBAAGJ,CAAH,kBAIZ+J,EAET,SAAAtJ,GAAA,IACFc,EADEd,EACFc,SADEkJ,EAAAhK,EAEF8J,WAFE,IAAAE,EAEI,EAFJA,EAAAC,EAAAjK,EAGF6J,cAHE,IAAAI,EAGO,EAHPA,EAAAC,EAAAlK,EAIF2J,sBAJE,IAAAO,EAIe,GAJfA,EAAAC,EAAAnK,EAKFoK,sBALE,IAAAD,KAMFE,EANErK,EAMFqK,aANE,OAQFpI,EAAAd,EAAAC,cAACsI,EAAD,CACEG,OAAQA,EACRC,IAAKA,EACLH,eAAgBA,EAChBS,eAAgBA,GAEfA,EACCnI,EAAAd,EAAAC,cAACoI,EAAA,EAAD,CAAYtD,GAAImE,GAAevJ,GAE/BmB,EAAAd,EAAAC,cAAC2I,EAAD,KAAsBjJ,wCChG5Bc,EAAAC,EAAAC,EAAA,sBAAAwI,IAAA,IAEaA,EAFb1I,EAAA,IAE6BrC,EAAOC,IAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,yDAGL,SAAAS,GAAA,IAAAuK,EAAAvK,EAAGwK,QAAH,gBAAAD,EAAa,gBAAbA,uCCLrB3I,EAAAC,EAAAC,EAAA,sBAAA2I,IAAA,IAAAzI,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,MAAAQ,EAAAR,EAAA,IASa6I,EAA6B,SAAAzK,GAA6B,IAA1B0K,EAA0B1K,EAA1B0K,UAAW5J,EAAed,EAAfc,SAEtD,OADiBwB,cAATC,KACIoI,SAASD,GACnBzI,EAAAd,EAAAC,cAAAa,EAAAd,EAAAsB,SAAA,KAAG3B,GAEHmB,EAAAd,EAAAC,cAACe,EAAA,EAAD,2BAAAO,OAAiCgI,wCCdrC9I,EAAAC,EAAAC,EAAA,sBAAA8I,IAAA,IAAA5I,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAuH,EAAA3H,EAAA,IAAAiJ,EAAAjJ,EAAA,IASMkJ,EAA4BvL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iDAAAC,YAAA,gBAAGJ,CAAH,kDACLiC,IAAO+D,WAIpBqF,EAAwC,SAAA5K,GAAA,IAAA+K,EAAA/K,EAAGgL,QAAH,gBAAAD,KACzC9I,EAAAd,EAAAC,cAAC0J,EAAD,MAAgC,yCCf5ClJ,EAAAC,EAAAC,EAAA,sBAAAmJ,IAAA,IAAAjJ,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAkJ,EAAAtJ,EAAA,KAUaqJ,EAA+B,SAAAjL,GAAA,IAC1CmL,EAD0CnL,EAC1CmL,MACAC,EAF0CpL,EAE1CoL,aACAtG,EAH0C9E,EAG1C8E,UAH0C,OAK1C7C,EAAAd,EAAAC,cAAA,QAAM0D,UAAWA,GACdsG,EAAY,GAAA1I,OACN2I,YAAYF,GADN,KAAAzI,OACgB0I,GACzBC,YAAYF,wCClBpBvJ,EAAAC,EAAAC,EAAA,sBAAAwJ,IAAA,IAUaA,EAVb1J,EAAA,IAU0BrC,EAAOC,IAAVC,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGJ,CAAH,qCAMvB,SAAAS,GAIqB,IAAAuL,EAAAvL,EAHnBwL,kBAGmB,IAAAD,KAFnBjI,EAEmBtD,EAFnBsD,MAEmBmI,EAAAzL,EADnB0L,sBACmB,IAAAD,EADF,EACEA,EACnB,OAAOD,EAAclI,EAAK,OAAAZ,OAAUY,GAAU,MAA7B,GAAAZ,OAAyCgJ,EAAzC,OAGnB,SAAA7L,GAA+D,IAAA8L,EAAA9L,EAAzC+L,QACpB,YAD6D,IAAAD,EAA/B,UAA+BA,GAI/D,SAAAjL,GAAsD,IAAAmL,EAAAnL,EAAjCiD,OACnB,YADoD,IAAAkI,EAAxB,GAAwBA,+JCHhDC,EAAavM,IAAOC,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGJ,CAAH,4EAIL,SAAAS,GAAA,OAAAA,EAAG+L,WAmGd,SAAArL,GACE,IADuDA,EAA1BsL,WAE3B,MAAO,GAET,OAAOC,YAAP,qDAnGIC,EAAiB3M,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAAGJ,CAAH,gBACR,SAAAM,GAAA,OACM,IADNA,EAAGsM,UACU,gBAAkB,SAG9BC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAApL,OAAAsL,EAAA,EAAAtL,CAAAkI,KAAAkD,GAAApL,OAAAuL,EAAA,EAAAvL,CAAAkI,KAAAlI,OAAAwL,EAAA,EAAAxL,CAAAoL,GAAAhD,MAAAF,KAAArG,YAAA,OAAA7B,OAAAyL,EAAA,EAAAzL,CAAAoL,EAAAC,GAAArL,OAAA0L,EAAA,EAAA1L,CAAAoL,EAAA,EAAArE,IAAA,eAAA4E,MAAA,WAOiB,IAAAC,EACoC1D,KAAKnI,MAA9C8L,EADKD,EACLC,QAASC,EADJF,EACIE,aAAcC,EADlBH,EACkBG,cAC/B,OAAIF,EACKG,MAAMC,QAAQF,IAAkBA,EAAcjK,OAAS,EAExC,OAAjBgK,QAA0C/J,IAAjB+J,IAZpC,CAAA/E,IAAA,iBAAA4E,MAAA,SAciBO,GAAgB,IAAAC,EACoBjE,KAAKnI,MAA9C8L,EADqBM,EACrBN,QAASC,EADYK,EACZL,aAAcC,EADFI,EACEJ,cAC/B,OAAIF,GAAWG,MAAMC,QAAQF,GACpB3F,IAAGgG,SAASF,EAAMH,GAEpB3F,IAAGiG,OAAOP,EAAcI,KAnBnC,CAAAnF,IAAA,kBAAA4E,MAAA,SAqBkBO,GAAuB,IAAAI,EAMjCpE,KAAKnI,MAJP8L,EAFmCS,EAEnCT,QAFmCU,EAAAD,EAGnCP,qBAHmC,IAAAQ,EAGnB,GAHmBA,EAInCC,EAJmCF,EAInCE,kBACAC,EALmCH,EAKnCG,iBAEW,OAATP,EACEL,GAAWY,EACbA,EAAiB,IACRD,GACTA,EAAkB,MAEXX,GAAWY,EAChBvE,KAAKwE,eAAeR,GACtBO,EACET,MAAMC,QAAQF,GACV3F,IAAGuG,QAAQ,CAACT,GAAOH,GACnB,CAACG,IAGPO,EACET,MAAMC,QAAQF,GAAiB3F,IAAG1E,OAAOqK,EAAe,CAACG,IAAS,IAG7DM,GACTA,EAAkBN,KA/CxB,CAAAnF,IAAA,SAAA4E,MAAA,WAkDW,IAAAiB,EAAA1E,KAAA2E,EAOH3E,KAAKnI,MALP+M,EAFKD,EAELC,MACAC,EAHKF,EAGLE,YAHKC,EAAAH,EAIL1B,iBAJK,IAAA6B,KAAAC,EAAAJ,EAKL9B,iBALK,IAAAkC,EAKO,UALPA,EAMLC,EANKL,EAMLK,WAEF,OACEC,EAAAhN,EAAAC,cAAC8K,EAAD,CAAgBC,UAAWA,GACxB4B,GACCI,EAAAhN,EAAAC,cAAC0K,EAAD,CACEE,YAAa9C,KAAKkF,eAClBrC,UAAWA,EACXjG,QAAS,WACP8H,EAAKS,gBAAgB,QAGvBF,EAAAhN,EAAAC,cAACkN,EAAA,MAAD,CAAOpI,GAAG,iCAGb4H,EAAMxG,IAAI,SAAC4F,EAAMqB,GAChB,OACEJ,EAAAhN,EAAAC,cAAC0K,EAAD,CACE/D,IAAKwG,EACLvC,WAAY4B,EAAKF,eAAeR,GAChCnB,UAAWA,EACXjG,QAAS,WACP8H,EAAKS,gBAAgBnB,KAGtBgB,EAAYhB,WAjF3Bd,EAAA,CAEU1K,IAAM8M,WAFHpC,EAGJqC,aAAe,CACpBP,WAAY9G,IAAGG,KAAK,eACpBmH,aAActH,IAAGG,KAAK,0CC3C1B3F,EAAAC,EAAAC,EAAA,sBAAA6M,IAAA,IAEaA,EAFb/M,EAAA,IAE0BrC,EAAOC,IAAVC,WAAA,CAAAC,YAAA,aAAAC,YAAA,YAAGJ,CAAH,sGCFvBqC,EAAAC,EAAAC,EAAA,sBAAA8M,IAAA,IAAA1J,EAAAtD,EAAA,IAkBagN,EAAWrP,YAAO,OAAVE,WAAA,CAAAC,YAAA,WAAAC,YAAA,gBAAGJ,CAAH,+BANK,SAAAM,GAA0C,IAAAgP,EAAAhP,EAAvCiP,gBAAuC,IAAAD,EAA5B,cAA4BA,EAClE,MAAoB,eAAbC,GAA0C,YAAbA,EAChC,UACA,YAToB,SAAA9O,GAA0C,IAAA+O,EAAA/O,EAAvC8O,gBAAuC,IAAAC,EAA5B,cAA4BA,EAClE,MAAoB,gBAAbD,GAA2C,eAAbA,EACjC,YACA,sHCFOE,EAA8D,SAAAhP,GAAA,IACzEiP,EADyEjP,EACzEiP,SACAC,EAFyElP,EAEzEkP,eACAC,EAHyEnP,EAGzEmP,iBAHyEC,EAAApP,EAIzE+L,iBAJyE,IAAAqD,EAI7D5N,IAAOwC,MAJsDoL,EAKtErO,EALsEC,OAAAqO,EAAA,EAAArO,CAAAhB,EAAA,qEAOzE4F,EAAAzE,EAAAC,cAACgL,EAAA,EAADpL,OAAAmD,OAAA,CACE2J,MAAOmB,EACPnC,aAAcoC,EACdnC,cAAeoC,EACfpD,UAAWA,EACXmC,WAAY,SAAAhB,GAAI,OAAItH,EAAAzE,EAAAC,cAAA,QAAMkO,MAAOpC,EAAKqC,MAAMC,MAAOtC,EAAKsC,QACpDzO,KCpBRa,EAAAC,EAAAC,EAAA,sBAAA2N,IAmCO,IAAMC,EAA2D,SAAA1P,GASlE,IAAA2P,EAAA3P,EARJ4P,kBAQI,IAAAD,EARS,EAQTA,EAAAE,EAAA7P,EAPJmP,wBAOI,IAAAU,EAPe,GAOfA,EAAAC,EAAA9P,EANJ6M,eAMI,IAAAiD,KAAAC,EAAA/P,EALJ+N,mBAKI,IAAAgC,KAJJhE,EAII/L,EAJJ+L,UACAiE,EAGIhQ,EAHJgQ,kBACAC,EAEIjQ,EAFJiQ,iBAEIC,EAAAlQ,EADJmQ,wBACI,IAAAD,EADe,iBAAO,IACtBA,EACI3N,EAASD,cAATC,KACFyJ,EAAa,SAAAoE,GAAM,OAAIjB,EAAiBkB,SAASD,EAAOlK,KACxDnF,EAAkC,CACtCgL,YACAgC,cACAlB,UACAoC,SAAU1M,EAAK0M,SACfC,eAAgB3M,EAAK0M,SAASqB,KAAKtE,GACnCmD,iBAAkB5M,EAAK0M,SAAS9H,OAAO6E,GACvCwB,kBAPsC,SAOpB+C,GACC,OAAbA,GAAqBN,EACvBA,IACsB,OAAbM,GAAqBP,GAC9BA,EAAkB,CAACO,EAASrK,IAAK,CAACqK,KAGtC9C,iBAdsC,SAcrB8C,GACS,IAApBA,EAASzN,QAAgBmN,EAC3BA,IACSM,EAASzN,QAAUkN,GAC5BA,EAAkBO,EAASjJ,IAAIF,IAAGG,KAAK,OAAQgJ,KAIrD,OAAIhO,EAAK0M,SAASnM,OAAS8M,EAClBhK,EAAAzE,EAAAC,cAACoP,EAA4BzP,GAE/B6E,EAAAzE,EAAAC,cAACqP,EAAA,EAADzP,OAAAmD,OAAA,GAA2BpD,EAAWoP,sFCpElCO,QAAkBnR,EAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,gBAChB,SAAAS,GAAA,IAAA2Q,EAAA3Q,EAAG4Q,OAAH,gBAAAD,EAAY,UAAZA,ICOCE,EAA+C,SAAA7Q,GAAA,IAC1DoQ,EAD0DpQ,EAC1DoQ,OACAtK,EAF0D9F,EAE1D8F,QAF0DgL,EAAA9Q,EAG1D+Q,aAH0D,IAAAD,KAAAE,EAAAhR,EAI1DiR,iBAJ0D,IAAAD,KAAA,OAM1DE,EAAA/P,EAAAC,cAACsP,EAAD,CAAiBE,OAAO,UAAU9K,QAASA,GACxCiL,EACCX,EAAOZ,KAAK2B,OAAO,EAAG,GAEtBD,EAAA/P,EAAAC,cAAA8P,EAAA/P,EAAAsB,SAAA,KACEyO,EAAA/P,EAAAC,cAAA,YAAOgP,EAAOZ,MACbyB,GAAaC,EAAA/P,EAAAC,cAAA,iBAAAsB,OAAY0N,EAAOb,MAAMC,KAAzB,mECHtB,IAAM4B,EAAiB,SAAArQ,GAAS,IAE5BsQ,EAEEtQ,EAFFsQ,UAF4BC,EAI1BvQ,EADFwQ,WAAcC,EAHcF,EAGdE,IAAQC,EAHMzQ,OAAAqO,EAAA,EAAArO,CAAAsQ,EAAA,SAK9B,OACEJ,EAAA/P,EAAAC,cAAA,MAAAJ,OAAAmD,OAAA,GACMsN,EADN,CAEED,IAAKA,EACLE,MAAOL,EAAU,iBAAkBtQ,KAEnCmQ,EAAA/P,EAAAC,cAAA,OAAKsQ,MAAO,CAAE9F,QAAS,YACrBsF,EAAA/P,EAAAC,cAACuQ,EAAA,MAAD,CAAAzL,GAAA,WAMKuK,EAA0C,SAAAzQ,GAAA,IACrDiP,EADqDjP,EACrDiP,SACAC,EAFqDlP,EAErDkP,eACA1B,EAHqDxN,EAGrDwN,kBACA2B,EAJqDnP,EAIrDmP,iBACA1B,EALqDzN,EAKrDyN,iBACG1M,EANkDC,OAAAqO,EAAA,EAAArO,CAAAhB,EAAA,gGAQrDkR,EAAA/P,EAAAC,cAAC6C,EAAA,EAADjD,OAAAmD,OAAA,CACEwI,MAAO5L,EAAM8L,QAAUsC,EAAmBD,EAC1C0C,YACE7Q,EAAM8L,QAAUtG,EAAA,EAAIC,EAAA,sBAAyBD,EAAA,EAAIC,EAAA,mBAEnDH,QAAS4I,EACT4C,eAAgBzK,IAAGG,KAAK,MACxBuK,kBAAmB,SAAA1B,GAAM,OAAIc,EAAA/P,EAAAC,cAAC2Q,EAAD,CAAe3B,OAAQA,KACpD4B,aAAc,SAAC5B,EAAQ6B,GAAT,OACZ7B,EAAOtH,KAAK0G,KACT0C,oBACA7B,SAAS4B,EAASC,sBAEvBC,mBAAoBpR,EAAM8L,QAC1BuF,WAAY,CACVhB,kBAEFhN,OAAQ,CACNiO,eAAgB,SAAAnP,GAAI,OAAAlC,OAAAsR,EAAA,EAAAtR,CAAA,GACfkC,EADe,CAElB0N,OAAQ,cAGZ2B,SAAU,SAAAC,GACJzR,EAAM8L,SAAWY,GAAoBT,MAAMC,QAAQuF,IACrD/E,EAAiB+E,IAEdzR,EAAM8L,SAAWW,IAChBR,MAAMC,QAAQuF,GAChBhF,EAAkBpG,IAAGqL,KAAKD,IAAc,MAExChF,EAAkBgF,GAAa,SAIjCzR,yICzEK2R,EAA+B,SAAA1S,GAAA,IAAGc,EAAHd,EAAGc,SAAaC,EAAhBC,OAAAC,EAAA,EAAAD,CAAAhB,EAAA,qBAC1CkB,EAAAC,EAAAC,cAACuR,EAAA,QAAD,KACG,SAAAC,GAAI,OACH1R,EAAAC,EAAAC,cAACyR,EAAA,EAAD7R,OAAAmD,OAAA,CACE5C,MAAOC,IAAOsR,MACdC,UAAWC,YAAYJ,IAASA,EAAKK,WACrCnN,QAAS,SAAAoN,GACPA,EAAEC,iBACFP,EAAKQ,WAAWF,KAEdnS,GAEHD,yCCpBTc,EAAAC,EAAAC,EAAA,sBAAAkR,IAAApR,EAAAC,EAAAC,EAAA,sBAAAuR,IAAA,IAAAC,EAAA1R,EAAA,MAAA2R,EAAA3R,EAAA,IAIO,SAASoR,EAAYQ,GAC1B,OAAQA,EAAUtM,QAAmD,IAAzClG,OAAOyS,KAAKD,EAAUtM,QAAQpE,OAGrD,SAASuQ,EAAmBK,GACjC,OAAO,SAAC/G,GAAD,OACLgH,kBAAQhH,EAAQ,IAAM4G,EAAA,EAAI/M,EAAA,+BAAKkN,cAA8B,0CCXjE9R,EAAAC,EAAAC,EAAA,sBAAA8R,IAAA,IAAAC,EAAAjS,EAAA,MAAAkS,EAAAlS,EAAA,MAAAmS,EAAAnS,EAAA,GAAAoS,EAAApS,EAAAM,EAAA6R,GAIaH,EAAmC,SAAA5T,GAAkB,IAAfc,EAAed,EAAfc,SACjD,OACEkT,EAAA7S,EAAAC,cAAC0S,EAAA,EAAD,CAAyBG,MAAOC,KAC7BpT,8QCWP,IAAMqT,EAAoBlI,YAAHmI,KAGjBC,EAAkB9U,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,YAAGJ,CAAH,2GACLiC,IAAO8S,MACD9S,IAAOkC,YAOhB6Q,EAAuD,SAAAvU,GAM9D,IALJwU,EAKIxU,EALJwU,UACAC,EAIIzU,EAJJyU,YAIIC,EAAA1U,EAHJ2U,mBAGI,IAAAD,KAAAE,EAAA5U,EAFJ6U,iBAEI,IAAAD,KADJ9O,EACI9F,EADJ8F,QAEMgP,IAAiBL,GAAeE,GAChCI,EAAMC,mBAAS,CAAEC,SAAUC,SAAQC,QAASL,IAE9CM,EAAUC,IAAkBC,QAEhC,GAAIX,EACF,OACEY,EAAApU,EAAAC,cAACoU,EAAA,EAAD,CAAWJ,QAASA,EAAStQ,UAAWqP,GACtCoB,EAAApU,EAAAC,cAACqU,EAAA,EAAD,OAKN,IAAKjB,EACH,OAAOe,EAAApU,EAAAC,cAACoU,EAAA,EAAD,CAAWJ,QAASA,GAApB,UAGT,IAAMM,EAAUC,8BAAoBnB,EAAWC,GAAeM,GAU9D,OAPEK,EADEM,EAAU,GACFL,IAAkBO,OACnBF,EAAU,EACTL,IAAkBQ,QAElBR,IAAkBS,SAI5BP,EAAApU,EAAAC,cAAAmU,EAAApU,EAAAsB,SAAA,KACGoS,GAAaU,EAAApU,EAAAC,cAACiT,EAAD,MACdkB,EAAApU,EAAAC,cAACoU,EAAA,EAAD,CAAWE,QAASA,EAASN,QAASA,EAAStP,QAASA,iICtDjDiQ,EAAiD,SAAA/V,GAMxD,IALJgW,EAKIhW,EALJgW,MACAC,EAIIjW,EAJJiW,UACAtL,EAGI3K,EAHJ2K,SACAnI,EAEIxC,EAFJwC,UACGzB,EACCC,OAAAC,EAAA,EAAAD,CAAAhB,EAAA,8CACAkW,EAAaF,EACf9U,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAMC,GAAIJ,GAAQ5U,wBAAc6U,IAEhC7U,wBAAc6U,GAShB,OANItL,IACFuL,EAAahV,EAAAC,EAAAC,cAACiV,EAAA,EAAD,CAAU3L,UAAWC,GAAWuL,IAE3C1T,IACF0T,EAAahV,EAAAC,EAAAC,cAACkV,EAAA,EAAD,CAAWjU,aAAcG,GAAY0T,IAE7ChV,EAAAC,EAAAC,cAAA,MAASL,EAAQmV,uCChC1BtU,EAAAC,EAAAC,EAAA,sBAAAyU,IAAA,IAEaA,EAFb3U,EAAA,IAE0BrC,EAAO4B,EAAV1B,WAAA,CAAAC,YAAA,aAAAC,YAAA,YAAGJ,CAAH,+LCFvBqC,EAAAC,EAAAC,EAAA,sBAAA0U,IAAA,IAAAtR,EAAAtD,EAAA,IAOa4U,EAAYjX,YAAO,OAAVE,WAAA,CAAAC,YAAA,YAAAC,YAAA,YAAGJ,CAAH,gBACV,SAACwB,GAAD,OAAmBA,EAAM4C,+JCW9B,SAAS8S,EACdC,GAEA,IADArQ,EACAxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD6C,GAEvC8T,EAASC,cACTtO,EAA8BuO,YAAc,CAChD/N,KAAM,KACNgO,SAAS,EACTC,aAAa,EACbC,kBACE,OAAOC,QAAS3O,EAAOpB,QAAUoB,EAAOpB,OAAOpE,QAAWwF,EAAO4O,UAG/DC,EAAO,eAAAnX,EAAAgB,OAAAoW,EAAA,EAAApW,CAAAqW,EAAAlW,EAAA+G,KAAG,SAAAC,EAAOC,GAAP,IAAAkP,EAAA,OAAAD,EAAAlW,EAAA4D,KAAA,SAAA0D,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdL,EAAOwO,SAAU,EADHrO,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGcgO,EAAOD,MAAP1V,OAAAuW,EAAA,EAAAvW,CAAA,GACrBqF,EADqB,CAExBqQ,QACAtO,eANU,OAGNkP,EAHM7O,EAAAG,KAQZ4O,sBAAY,WACVlP,EAAOyO,aAAc,EACrBzO,EAAOQ,KAAOwO,EAAYxO,KAC1BR,EAAOpB,OAASoQ,EAAYpQ,OAC5BoB,EAAOwO,SAAU,IAZPrO,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAeRf,YAAae,EAAAO,IACfwO,sBAAY,WACVlP,EAAO4O,MAAPzO,EAAAO,GACAV,EAAOpB,OAASuB,EAAAO,GAAIpB,cACpBU,EAAOwO,SAAU,KAGnBU,sBAAY,WACVlP,EAAO4O,MAAPzO,EAAAO,GACAV,EAAOwO,SAAU,IAEnBjP,YAAWY,EAAAO,KA1BD,eA6BVV,EAAOpB,QACTuQ,YAAmBnP,EAAOpB,OAAQ,CAChCwP,MAAOgB,YAAiBhB,GACxBtO,cAhCUK,EAAAI,OAAA,SAmCPP,GAnCO,yBAAAG,EAAAQ,SAAAd,EAAAe,KAAA,YAAH,gBAAAC,GAAA,OAAAnJ,EAAAoJ,MAAAF,KAAArG,YAAA,GA8Cb,MAAO,CAAEyF,SAAQ6O,UAASQ,MATZ,WACZH,sBAAY,WACVlP,EAAOyO,aAAc,EACrBzO,EAAOQ,KAAO,KACdR,EAAO4O,WAAQnU,EACfuF,EAAOpB,YAASnE,EAChBuF,EAAOwO,SAAU,gHCrEXzB,meAeZ,IAAMuC,EAAkBrY,IAAOC,IAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,YAAGJ,CAAH,oLAOViC,IAAO8S,MACF9S,IAAOkC,YAKjBmU,GAAQC,EAAA,GAAA9W,OAAA+W,EAAA,EAAA/W,CAAA8W,EACXzC,EAAkBC,QAAU/V,YAAOqY,GADxBnY,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YACiBJ,CADjB,OAAAyB,OAAA+W,EAAA,EAAA/W,CAAA8W,EAEXzC,EAAkBS,SAAWvW,YAAOqY,GAFzBnY,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAEkBJ,CAFlB,oBAGIiC,IAAOwW,MAHXhX,OAAA+W,EAAA,EAAA/W,CAAA8W,EAKXzC,EAAkBQ,QAAUtW,YAAOqY,GALxBnY,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAKiBJ,CALjB,+CAMIiC,IAAOyW,OACZzW,IAAOwC,QAPNhD,OAAA+W,EAAA,EAAA/W,CAAA8W,EAUXzC,EAAkBO,OAASrW,YAAOqY,GAVvBnY,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAUgBJ,CAVhB,oBAWIiC,IAAOsR,QAXXgF,GAeRI,EAAiBjM,YAAHmI,KAGd+D,EAAYlM,YAAHmM,KAITC,EAAYpM,YAAHqM,KAIFC,EAAuC,SAAAvY,GAM9C,IALJ0V,EAKI1V,EALJ0V,QACA5Q,EAII9E,EAJJ8E,UACAhE,EAGId,EAHJc,SACAsU,EAEIpV,EAFJoV,QACAtP,EACI9F,EADJ8F,QAEM0S,EAAUX,EAASzC,GACrBqD,EAAS3X,EACP4X,EAA4B,GAelC,YAdgB3V,IAAZ2S,KACEA,EAAU,IAAMA,GAAW,IAC7BgD,EAAgBC,KAAKT,GAEnBxC,GAAW,IACb+C,EAAS,SACTC,EAAgBC,KAAKR,IAErBM,EAAS/C,EAAQkD,YAGjB9S,GACF4S,EAAgBC,KAAKN,GAGrBQ,EAAA1X,EAAAC,cAACoX,EAAD,CAAS1S,QAASA,EAAShB,UAAWgU,IAAE1P,WAAF,GAAGtE,GAAHpC,OAAiBgW,KACpDD,uCCtFP7W,EAAAC,EAAAC,EAAA,sBAAAiX,IAAA,IAAA7T,EAAAtD,EAAA,IAAAuD,EAAAvD,EAAA,IAIamX,EAAgBxZ,IAAO6F,GAAV3F,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,kFACfiC,IAAO+D,8CCLlB3D,EAAAC,EAAAC,EAAA,sBAAAkX,IAAA,IAAAhX,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAQagX,EAAiD,SAAAhZ,GAAA,IAAGiZ,EAAHjZ,EAAGiZ,SAAH,OAC5DA,EACEhX,EAAAd,EAAAC,cAAA,eAAAsB,OACEuW,EAASC,SAAT,GAAAxW,OACOuW,EAASE,UADhB,KAAAzW,OAC6BuW,EAASC,UAClCD,EAASG,aACPH,EAASG,aAAaC,MADxB,KAKNpX,EAAAd,EAAAC,cAAA,wDClBJQ,EAAAC,EAAAC,EAAA,sBAAAwX,IAAA,IAAAC,EAAA3X,EAAA,GAAA4X,EAAA5X,EAAA,MAUO,SAAS0X,EACdG,GAEA,IADApT,EACAxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsD,GAEtD,OAAOsD,YAAoCuT,sBAAYD,EAAUpT,GAAU,CACzE0C,cAAe1C,EAAQ0C,0OCQrB4Q,EAAoBpa,YAAOqa,WAAVna,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,iGAICsa,IAAMrY,IAAOsY,WAC9BC,MAAM,KACNC,SAGiBH,IAAMrY,IAAOsY,WAC9BC,MAAM,IACNC,UAIDC,EAA+B1a,IAAOC,IAAVC,WAAA,CAAAC,YAAA,4CAAAC,YAAA,gBAAGJ,CAAH,iFAO5B2a,EAAmC3a,IAAOC,IAAVC,WAAA,CAAAC,YAAA,gDAAAC,YAAA,gBAAGJ,CAAH,oBAGhC4a,EAAgC5a,IAAOC,IAAVC,WAAA,CAAAC,YAAA,6CAAAC,YAAA,gBAAGJ,CAAH,oCAI7B6a,EAAkC7a,IAAOC,IAAVC,WAAA,CAAAC,YAAA,+CAAAC,YAAA,gBAAGJ,CAAH,oCAI/B8a,EAAuB9a,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAAGJ,CAAH,yDAKpB+a,EAAiB/a,IAAOC,IAAVC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGJ,CAAH,kOAcQiC,IAAOyW,QAM7BsC,EAAiBhb,IAAOC,IAAVC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGJ,CAAH,eACTiC,IAAOyW,QAGLuC,EAA0Bjb,IAAOC,IAAVC,WAAA,CAAAC,YAAA,uCAAAC,YAAA,gBAAGJ,CAAH,0GAGRkb,IAASC,KACflZ,IAAOsR,MAClBtR,IAAO8S,OAGZqG,EAAgBpb,IAAOC,IAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,iCAERiC,IAAOoZ,QAGLC,EAA2C,SAAA7a,GAIlD,IAHJ8a,EAGI9a,EAHJ8a,MACAC,EAEI/a,EAFJ+a,WACAjV,EACI9F,EADJ8F,QAgBA,OACEkO,EAAA7S,EAAAC,cAACuY,EAAD,CAAmB7T,QAASA,EAAS0J,KAAI,SAAA9M,OAAWoY,EAAM5U,KACvD6U,GACC/G,EAAA7S,EAAAC,cAACoZ,EAAD,KACGM,EAAME,cAAcxL,MAIzBwE,EAAA7S,EAAAC,cAAC6Y,EAAD,KACEjG,EAAA7S,EAAAC,cAAC8Y,EAAD,KACElG,EAAA7S,EAAAC,cAAC6Z,EAAA,EAAD,CACEzG,UAAWsG,EAAMtG,UAAY,IAAI0G,KAAKJ,EAAMtG,WAAa,KACzDC,YAAaqG,EAAMrG,YAAc,IAAIyG,KAAKJ,EAAMrG,aAAe,KAC/DE,YACEmG,EAAMK,qBAAuBC,IAAuBC,OAEtDxG,UAAyC,OAA9BiG,EAAMQ,uBAIrBtH,EAAA7S,EAAAC,cAAC+Y,EAAD,KAhCFW,EAAMS,cACNT,EAAMS,aAAaC,OAASC,IAAiBC,OAG3C1H,EAAA7S,EAAAC,cAACuZ,EAAD,KACE3G,EAAA7S,EAAAC,cAACua,EAAA,MAAD,CAAAzV,GAAA,eAIC0V,YAAcd,EAAMe,UA2BvB7H,EAAA7S,EAAAC,cAACgZ,EAAD,KACEpG,EAAA7S,EAAAC,cAAC0a,EAAA,EAAD,CAAkB7C,SAAU6B,EAAM7B,YAGpCjF,EAAA7S,EAAAC,cAACiZ,EAAD,KACErG,EAAA7S,EAAAC,cAAC2a,EAAA,EAAD,CACE5Q,MAAO2P,EAAMkB,SAASrP,MACtBvB,aAAc0P,EAAMkB,SAASC,SAASC,OAEvCpB,EAAMqB,gBACLnI,EAAA7S,EAAAC,cAAA4S,EAAA7S,EAAAsB,SAAA,KACEuR,EAAA7S,EAAAC,cAACkZ,EAAD,MACAtG,EAAA7S,EAAAC,cAACmZ,EAAD,KACEvG,EAAA7S,EAAAC,cAACua,EAAA,MAAD,CAAAzV,GAAA,kDC1JhBtE,EAAAC,EAAAC,EAAA,sBAAAsa,IAAA,IAAApa,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAuH,EAAA3H,EAAA,IAAAya,EAAAza,EAAA,MAAA0a,EAAA1a,EAAA,MAAA2a,EAAA3a,EAAA,IAAA4a,EAAA5a,EAAA,IAaM6a,EAAoBld,IAAOmd,KAAVjd,WAAA,CAAAC,YAAA,8BAAAC,YAAA,YAAGJ,CAAH,eACZiC,IAAOyW,QAEZ0E,EAAqBpd,IAAOmd,KAAVjd,WAAA,CAAAC,YAAA,+BAAAC,YAAA,YAAGJ,CAAH,kCACbiC,IAAOC,UAIL2a,EAAqC,SAAApc,GAAA,IAAG4c,EAAH5c,EAAG4c,KAAMC,EAAT7c,EAAS6c,aAAT,OAChDD,GAAQC,EACN5a,EAAAd,EAAAC,cAAAa,EAAAd,EAAAsB,SAAA,KACER,EAAAd,EAAAC,cAACib,EAAA,EAAD,MACApa,EAAAd,EAAAC,cAACkb,EAAA,EAAD,CAAU1b,KAAK,OAAOb,YAAY,KAChCkC,EAAAd,EAAAC,cAACqb,EAAD,KACGG,GAAQL,EAAA,EAAI/V,EAAA,gBAAiB0L,qBAEhCjQ,EAAAd,EAAAC,cAACub,EAAD,KAAqBE,KAGvB,sKCtBOC,EAA6C,SAAA9c,GAAA,IACxDoW,EADwDpW,EACxDoW,GACA2G,EAFwD/c,EAExD+c,KACGC,EAHqDhc,OAAAic,EAAA,EAAAjc,CAAAhB,EAAA,sBAKxDgU,EAAA7S,EAAAC,cAAC8b,EAAA,MAAD,CACEpc,SAAU,SAAAjB,GAAA,IAAGsd,EAAHtd,EAAGsd,SAAH,OACRnJ,EAAA7S,EAAAC,cAACgc,EAAA,EAADpc,OAAAmD,OAAA,CACEiS,GAAIiH,EAAgBjH,EAAI2G,GAAI,GAAAra,OAAOya,EAASG,SAAhB,OACxBN,QAML,SAASK,EAAgBjH,EAAwB2G,GACtD,GAAkB,kBAAP3G,EACT,OAAOmH,YAAgBnH,EAAI2G,GAE7B,IAAMS,EAAWD,YAAgBnH,EAAGkH,UAAY,GAAIP,GACpD,OAAO/b,OAAAgC,EAAA,EAAAhC,CAAA,GAAKoV,EAAZ,CAAgBkH,SAAUE,sKCjBtBC,EAAkB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAChDC,EAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEzCC,EAAmBpe,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oCAAAC,YAAA,YAAGJ,CAAH,0CAIhBqe,EAAcre,IAAOC,IAAVC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,YAAGJ,CAAH,2BAIJse,EAAoC,SAAA7d,GAI3C,IAHJub,EAGIvb,EAHJub,aACAuC,EAEI9d,EAFJ8d,cACAC,EACI/d,EADJ+d,eACIC,EAC4Btc,IAAMuc,SAASF,GAD3CG,EAAAld,OAAAmd,EAAA,EAAAnd,CAAAgd,EAAA,GACGzN,EADH2N,EAAA,GACaE,EADbF,EAAA,GAEE7X,EAAUgY,EAA0B9C,GAC1C,OACEra,EAAAC,EAAAC,cAACuc,EAAD,KACGtX,EAAQiB,IAAI,SAAAoO,GAAO,OAClBxU,EAAAC,EAAAC,cAACwc,EAAD,CAAa7V,IAAK2N,GAChBxU,EAAAC,EAAAC,cAACyR,EAAA,EAAD,CACE/M,QAAS,WACPsY,EAAY1I,GACZoI,EAAcpI,IAEhBnU,MAAOgP,IAAamF,EAAUlU,IAAO8c,OAAS9c,IAAOsR,OAEpD4C,QAQN,SAAS2I,EAA0BE,GACxC,OAAOA,IAAS9C,IAAiBC,OAASgC,EAAgBD,sICvB/Ce,EAAuC,SAAAxe,GAQ9C,IAPJsP,EAOItP,EAPJsP,MACAiM,EAMIvb,EANJub,aACAkD,EAKIze,EALJye,UACAC,EAII1e,EAJJ0e,SACA5d,EAGId,EAHJc,SACA6d,EAEI3e,EAFJ2e,WACAC,EACI5e,EADJ4e,OACIC,EACsBZ,oBAAS,GAD/Ba,EAAA9d,OAAAmd,EAAA,EAAAnd,CAAA6d,EAAA,GACGE,EADHD,EAAA,GACWE,EADXF,EAAA,GAGEG,EAAa,kBAAMD,GAAQ,IAC3BE,EAAc,kBAAMF,GAAQ,IAMlC,OAJIJ,IACFA,EAAOO,QAAU,CAAEF,aAAYC,gBAI/BrG,EAAA1X,EAAAC,cAAAyX,EAAA1X,EAAAsB,SAAA,KACG3B,GAAYA,EAAS,CAAEme,aAAYC,gBACpCrG,EAAA1X,EAAAC,cAACge,EAAA,EAAD,CAAQC,KAAMN,EAAQO,QAASJ,GAC7BrG,EAAA1X,EAAAC,cAACge,EAAA,EAAD,KAAc9P,GACduJ,EAAA1X,EAAAC,cAACge,EAAA,EAAD,KACEvG,EAAA1X,EAAAC,cAACme,EAAA,EAAD,CACEhE,aAAcA,EACduC,cAAe,SAAApI,GACbwJ,IACAT,EAAU/I,OAIhBmD,EAAA1X,EAAAC,cAACge,EAAA,EAAD,KACEvG,EAAA1X,EAAAC,cAACoe,EAAA,EAAD,CACE1Z,QAAS,WACPoZ,IACIR,GACFA,MAIHC,GAA0B9F,EAAA1X,EAAAC,cAACqe,EAAA,MAAD,CAAAvZ,GAAA,6JCrD1BwZ,EAAsC,SAAA1f,GAI7C,IAHJ2f,EAGI3f,EAHJ2f,MAGIC,EAAA5f,EAFJ6f,cAEI,IAAAD,KADDE,EACC9e,OAAAic,EAAA,EAAAjc,CAAAhB,EAAA,oBACE+f,EAASF,EAASG,IAAuBC,IAC/C,OACEpH,EAAA1X,EAAAC,cAAC8e,EAAA,EAAD,KACErH,EAAA1X,EAAAC,cAAC+e,EAAA,MAAD,CACER,MAAOA,EACPS,OAAQ,SAAAC,GAAQ,OACd3e,IAAMN,cAAc2e,EAApB/e,OAAAgC,EAAA,EAAAhC,CAAA,CACE2L,MAAO0T,EAAS1T,MAChB4F,SAAU,SAAA5F,GAAK,OAAI0T,EAASC,SAAS3T,IACrC4T,OAAQ,kBAAMF,EAASG,YAAW,IAClCC,OAAQ,MACRC,MAAM,EACNC,UAAU,EACVC,eAAgBC,EAAA,EAAIra,EAAA,kCACpBsa,eAAgBD,EAAA,EAAIra,EAAA,iCACjBsZ,4CCpCfle,EAAAC,EAAAC,EAAA,sBAAAif,IAAA,IAEaA,EAFbnf,EAAA,IAE0BrC,EAAOC,IAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,wqBCKhB,IAAMyhB,EAAsBC,IAAH7M,IA8B5B8M,IACAC,0IC3BSC,EAAkC,SAAAphB,GAA+B,IAA5B2f,EAA4B3f,EAA5B2f,MAAUG,EAAkB9e,OAAAC,EAAA,EAAAD,CAAAhB,EAAA,WAC5E,OACEgU,EAAA7S,EAAAC,cAACigB,EAAA,EAAD,KACErN,EAAA7S,EAAAC,cAACkgB,EAAA,MAAD,CACE3B,MAAOA,EACPS,OAAQ,SAAAC,GAAQ,OACdrM,EAAA7S,EAAAC,cAAC0S,EAAA,EAAD9S,OAAAmD,OAAA,CACEwI,MAAO0T,EAAS1T,MAChB4F,SAAU,SAAA5F,GAAK,OAAI0T,EAASC,SAAS3T,IACrC4T,OAAQ,kBAAMF,EAASG,YAAW,IAClCC,OAAO,KACPC,MAAM,EACNa,QAAShF,EAAA,EAAI/V,EAAA,MACbgb,YAAajF,EAAA,EAAI/V,EAAA,UACjBib,WAAYlF,EAAA,EAAI/V,EAAA,SAChBkb,WAAYnF,EAAA,EAAI/V,EAAA,SAChBoa,eAAgBrE,EAAA,EAAI/V,EAAA,kCACpBsa,eAAgBvE,EAAA,EAAI/V,EAAA,iCAChBsZ,4CC7BhBle,EAAAC,EAAAC,EAAA,sBAAA6f,IAAA,IAAAzc,EAAAtD,EAAA,IAAAuD,EAAAvD,EAAA,IAIa+f,EAAUpiB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAGJ,CAAH,yHAISiC,IAAOkC,sFCCvBke,EAA6C,SAAA5hB,GAAA,IACxD6hB,EADwD7hB,EACxD6hB,KACAC,EAFwD9hB,EAExD8hB,cACAC,EAHwD/hB,EAGxD+hB,cAHwD,OAKxDnc,EAAAzE,EAAAC,cAAC4gB,EAAA,EAAD,CACE5B,OAAQ,kBACNyB,IAASC,IAAkBC,EAAgBA,IAAkB,iECEtDE,EAA6C,SAAAjiB,GAGpD,IAFJkiB,EAEIliB,EAFJkiB,OACAC,EACIniB,EADJmiB,OAWMC,EAAgB,SAACC,GAAD,OACpBzc,EAAAzE,EAAAC,cAACX,EAAA,EAAD,CAAUG,KAAMyhB,EAAQzhB,KAAMmH,IAAKsa,EAAQ1V,MAAO5M,YAAY,KAC5D6F,EAAAzE,EAAAC,cAAA,OAAKkO,MAAO+S,EAAQC,aAAe,IAXX,SAACD,GAAD,OAC1BA,EAAQE,OACN3c,EAAAzE,EAAAC,cAACmV,EAAA,EAAD,CAAYiM,KAAI,UAAA9f,OAAY2f,EAAQ1V,QAAU0V,EAAQ1V,OAEtD/G,EAAAzE,EAAAC,cAACmV,EAAA,EAAD,CAAYiM,KAAI,OAAA9f,OAAS2f,EAAQ1V,MAAM8V,QAAQ,OAAQ,MACpDJ,EAAQ1V,OAOR+V,CAAoBL,MAI3B,OACEzc,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,MACIyf,EAAOpf,OAAS,GAAKqf,EAAOrf,OAAS,IAAM8C,EAAAzE,EAAAC,cAACwJ,EAAA,EAAD,MAC5CsX,EAAO5a,IAAI,SAAA+R,GAAK,OACf+I,EAAcphB,OAAAsR,EAAA,EAAAtR,CAAA,CACZJ,KAAM,QACN2hB,QAAQ,EACR5V,MAAO0M,EAAMA,OACVA,MAGN8I,EAAO7a,IAAI,SAAAqb,GAAK,OACfP,EAAcphB,OAAAsR,EAAA,EAAAtR,CAAA,CACZJ,KAAM,eACN2hB,QAAQ,EACR5V,MAAOgW,EAAMA,OACVA,0BC9CAC,EAAmC,SAAA5iB,GAAA,IAAGmf,EAAHnf,EAAGmf,QAAS0D,EAAZ7iB,EAAY6iB,MAAZ,OAC9Cjd,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,mJAAA4c,OAAA,CAEwB3D,UACD0D,8BCAnBE,EAAoBxjB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wCAAAC,YAAA,gBAAGJ,CAAH,mEAMjByjB,EAAsBzjB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0CAAAC,YAAA,gBAAGJ,CAAH,wBAEdiC,IAAOkC,YAEZ2W,EAAuB9a,IAAOC,IAAVC,WAAA,CAAAC,YAAA,2CAAAC,YAAA,gBAAGJ,CAAH,gDAGfiC,IAAOkC,YAGLuf,EAAuC,SAAAjjB,GAAA,IAClDa,EADkDb,EAClDa,MACAsK,EAFkDnL,EAElDmL,MAFkD+X,EAAAljB,EAGlDmjB,iBAHkD,IAAAD,KAAA,OAKlDtd,EAAAzE,EAAAC,cAAC2hB,EAAD,KACEnd,EAAAzE,EAAAC,cAAC4hB,EAAD,KAAsBniB,GACtB+E,EAAAzE,EAAAC,cAACiZ,EAAD,KACG8I,EACCvd,EAAAzE,EAAAC,cAAA,SACEwE,EAAAzE,EAAAC,cAAC6J,EAAA,EAAD,CAAOE,MAAOA,KAGhBvF,EAAAzE,EAAAC,cAAC6J,EAAA,EAAD,CAAOE,MAAOA,OC9BhBiY,EAA2B7jB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,8CAAAC,YAAA,gBAAGJ,CAAH,qDAMjB8jB,EAAsC,SAAArjB,GAAA,IAAG8a,EAAH9a,EAAG8a,MAAH,OACjDlV,EAAAzE,EAAAC,cAACgiB,EAAD,KACExd,EAAAzE,EAAAC,cAACkiB,EAAD,CACEziB,MAAO0F,EAAA,EAAIC,EAAA,iBACX2E,MAAO2P,EAAMyI,aAAa5W,QAE5B/G,EAAAzE,EAAAC,cAACkiB,EAAD,CACEziB,MAAO0F,EAAA,EAAIC,EAAA,gBACX2E,MAAO2P,EAAM0I,WAAW7W,QAE1B/G,EAAAzE,EAAAC,cAACkiB,EAAD,CACEziB,MAAO0F,EAAA,EAAIC,EAAA,kBACX2E,OAAoC,EAA7B2P,EAAM2I,cAAc9W,QAE7B/G,EAAAzE,EAAAC,cAACkiB,EAAD,CACEziB,MAAO0F,EAAA,EAAIC,EAAA,eACX2E,MAAO2P,EAAMkB,SAASrP,MACtBwW,WAAW,cCVXO,EAAmBnkB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,YAAGJ,CAAH,sGATY,SAAAS,GAChC,OAD6DA,EAA1B2jB,YACfnI,MAClB,KAAKoI,IAAgBC,UACnB,OAAOriB,IAAOyW,OAChB,QACE,OAAOzW,IAAO+D,aAYPue,EAAgC,SAAAjkB,GAAA,IAAGkkB,EAAHlkB,EAAGkkB,YAAaJ,EAAhB9jB,EAAgB8jB,YAAhB,OAC3C/d,EAAAzE,EAAAC,cAACX,EAAA,EAAD,CAAUG,KAAK,uBAAuBb,YAAY,KAC/CgkB,EACDne,EAAAzE,EAAAC,cAACsiB,EAAD,CAAkBC,YAAaA,EAAaI,YAAaA,GACtDJ,EAAYzH,QC3BN8H,EAAiD,SAAAhkB,GAAA,IAC5DikB,EAD4DjkB,EAC5DikB,MACAnjB,EAF4Dd,EAE5Dc,SAF4D,OAI5DmjB,EAAMnhB,OAAS,GAAKhC,EAClB8E,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACEmD,EAAAzE,EAAAC,cAACwJ,EAAA,EAAD,MACAhF,EAAAzE,EAAAC,cAACX,EAAA,EAAD,CAAUG,KAAK,eAAeb,YAAY,KACvCe,EACD8E,EAAAzE,EAAAC,cAAA,WACC6iB,EAAMC,KAAK,QAGd,wBClBOC,EAAiB5kB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,qDAGhBiC,IAAOkC,YCQZ0gB,EAA2B7kB,IAAOmd,KAAVjd,WAAA,CAAAC,YAAA,uCAAAC,YAAA,gBAAGJ,CAAH,gCAEnBiC,IAAOyW,QAEZoM,EAAwB9kB,YAAO4kB,GAAV1kB,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAAGJ,CAAH,eAChBiC,IAAOyW,QAGLqM,EAA+B,SAAAtkB,GAAe,IAAZ8a,EAAY9a,EAAZ8a,MACvCyJ,EAAqB,GAuB3B,GAtBIzJ,EAAMQ,oBACRiJ,EAAM5L,KACJ/S,EAAAzE,EAAAC,cAAA,OAAK2G,IAAI,uBACPnC,EAAAzE,EAAAC,cAACgjB,EAAD,KACGI,YAA2B1J,EAAMQ,sBAEpC1V,EAAAzE,EAAAC,cAACijB,EAAD,KACEze,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,uBAIG4U,EAAMtG,WACf+P,EAAM5L,KACJ/S,EAAAzE,EAAAC,cAAA,OAAK2G,IAAI,aACNyc,YAA2B1J,EAAMtG,WAClC5O,EAAAzE,EAAAC,cAAC+iB,EAAD,KACEve,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,uBAMJ4U,EAAM2J,OAAQ,KAAAC,EACgB5J,EAAM2J,OAAOliB,KAArC4W,EADQuL,EACRvL,UAAWD,EADHwL,EACGxL,SACnBqL,EAAM5L,KACJ/S,EAAAzE,EAAAC,cAAA,OAAK2G,IAAI,UAAT,GAAArF,OACMyW,EADN,KAAAzW,OACmBwW,GACjBtT,EAAAzE,EAAAC,cAAC+iB,EAAD,KACEve,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,cAKR,OAAqB,IAAjBqe,EAAMzhB,OACD,KAGP8C,EAAAzE,EAAAC,cAACX,EAAA,EAAD,CAAUG,KAAM+jB,IAAW5kB,YAAY,KACpCwkB,8BChDDK,GAAQC,EAAA,GAAA7jB,OAAA8jB,EAAA,EAAA9jB,CAAA6jB,EACXzJ,IAAuB2J,UAAYC,mBAAS,YADjChkB,OAAA8jB,EAAA,EAAA9jB,CAAA6jB,EAEXzJ,IAAuB6J,UAAYD,mBAAS,cAFjChkB,OAAA8jB,EAAA,EAAA9jB,CAAA6jB,EAGXzJ,IAAuB8J,eAAiBF,mBAAS,qBAHtChkB,OAAA8jB,EAAA,EAAA9jB,CAAA6jB,EAIXzJ,IAAuB+J,MAAQH,mBAAS,WAJ7BhkB,OAAA8jB,EAAA,EAAA9jB,CAAA6jB,EAKXzJ,IAAuBgK,SAAWJ,mBAAS,aALhCH,GAQDQ,EAAkC,SAAArlB,GAAA,IAAGslB,EAAHtlB,EAAGslB,YAAH,OAC7C1f,EAAAzE,EAAAC,cAACX,EAAA,EAAD,CAAUG,KAAK,cAAcb,YAAY,KACtCqH,IAAGme,OACF,SAAA1lB,GAAA,IAAG2lB,EAAH3lB,EAAG2lB,UAAWrK,EAAdtb,EAAcsb,mBAAd,OACgB,OAAdqK,IAAuBZ,EAASzJ,IAClCmK,GACAhe,IAAI,SAAAme,GAAM,OACV7f,EAAAzE,EAAAC,cAAA,OAAK2G,IAAK0d,EAAOtK,oBACdqJ,YAA2BiB,EAAOD,WACnC5f,EAAAzE,EAAAC,cAAC+iB,EAAD,KACG5d,IAAKC,EAAEoe,EAASa,EAAOtK,2BCrB5B4H,EAAoBxjB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,YAAGJ,CAAH,mEAKjBmmB,EAAsBnmB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,YAAGJ,CAAH,oBAGnByjB,EAAsBzjB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,YAAGJ,CAAH,wBAEdiC,IAAOwC,OAEZqW,EAAuB9a,IAAOC,IAAVC,WAAA,CAAAC,YAAA,sCAAAC,YAAA,YAAGJ,CAAH,gDAGfiC,IAAOkC,YAGLiiB,EAA+C,SAAA3lB,GAAA,IAC1Dkc,EAD0Dlc,EAC1Dkc,KACArb,EAF0Db,EAE1Da,MACAsK,EAH0DnL,EAG1DmL,MAH0D,OAK1DvF,EAAAzE,EAAAC,cAACwkB,EAAD,KACEhgB,EAAAzE,EAAAC,cAACskB,EAAD,KAAsBxJ,GAEtBtW,EAAAzE,EAAAC,cAACykB,EAAD,KAAsBhlB,GACtB+E,EAAAzE,EAAAC,cAAC0kB,EAAD,KACElgB,EAAAzE,EAAAC,cAAC6J,EAAA,EAAD,CAAOE,MAAOA,OC/BP4a,EAA+C,SAAA/lB,GAEtD,IADJgmB,EACIhmB,EADJgmB,WAqBA,OAAOpgB,EAAAzE,EAAAC,cAAA,WAAM4kB,EAAW1e,IAnBL,SAAC2e,GAAD,OACjBrgB,EAAAzE,EAAAC,cAACuQ,EAAA,SAAD,CAAU5J,IAAKke,EAAU/f,IACvBN,EAAAzE,EAAAC,cAAC8kB,EAAD,CACEhK,KAAM+J,EAAUE,OAAOjK,KACvBrb,MAAOolB,EAAUE,OAAOC,UACxBjb,MAAO8a,EAAU9a,MAAMwB,QAEzB/G,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACGwjB,EAAUI,WAAW/e,IAAI,SAAAgf,GAAQ,OAChC1gB,EAAAzE,EAAAC,cAAC8kB,EAAD,CACEne,IAAKue,EAASpgB,GACdgW,KAAI,IAAAxZ,OAAM4jB,EAASH,OAAOjK,MAC1Brb,MAAOylB,EAASH,OAAOC,UACvBjb,MAAOmb,EAASnb,MAAMwB,uuCCd3B,OAAM4Z,GAAmBC,YAG9BvF,IAHwC7M,IAmEtCqS,IACAC,IACAC,IACAC,+FClESC,GAAkC,SAAA7mB,GAQzC,IAPJ8mB,EAOI9mB,EAPJ8mB,YAOIC,EAAA/mB,EANJgnB,oBAMI,IAAAD,EANWvlB,IAAOkC,WAMlBqjB,EAAAE,EAAAjnB,EALJknB,oBAKI,IAAAD,EALWzlB,IAAOwW,IAKlBiP,EAAAE,EAAAnnB,EAJJonB,wBAII,IAAAD,EAJe,IAIfA,EAAAE,EAAArnB,EAHJsnB,wBAGI,IAAAD,EAHe,EAAIE,UAGnBF,EAFJvmB,EAEId,EAFJc,SACA2d,EACIze,EADJye,UACIT,EACkCtc,IAAMuc,UAAS,GADjDC,EAAAld,OAAAwmB,GAAA,EAAAxmB,CAAAgd,EAAA,GACGyJ,EADHvJ,EAAA,GACgBwJ,EADhBxJ,EAAA,GAEEyJ,EAAYjmB,IAAMkmB,OAAiC,MA+BzD,OAfAlmB,IAAMmmB,UACJ,WACE,GAAIJ,EAAa,CACf,IAAMK,EAAQC,WAAW,WACvBL,GAAe,IACdJ,GACH,OAAO,WACLU,aAAaF,MAKnB,CAACR,EAAkBG,IAInB7hB,EAAAzE,EAAAC,cAACyE,GAAA,EAAD,CACE2L,IAAKmW,EACL7hB,QAhCY,YACM,IAAhB2hB,GACFE,EAAUxI,QAASpM,UAAW,EAC9B2U,GAAe,GACfK,WAAW,WACLJ,EAAUxI,UACZwI,EAAUxI,QAAQpM,UAAW,IAE9BqU,IAEH3I,KAuBAld,MAAOkmB,EAAcP,EAAeF,GAEnCS,EAAcX,EAAchmB,IC7CtBmnB,GAAsC,SAAAjoB,GAAiB,IAAdkoB,EAAcloB,EAAdkoB,QAC9CC,EAAc7O,aAGlB8O,KAEF,OACExiB,EAAAzE,EAAAC,cAACwN,GAAA,EAAD,CAAUE,SAAS,cACjBlJ,EAAAzE,EAAAC,cAACuD,GAAA,EAAD,CAAOrB,MAAO,OACZsC,EAAAzE,EAAAC,cAACinB,GAAD,CACEvB,YAAalhB,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,mBACbuY,UAAW,WACT0J,EAAY,CAAED,cAGhBtiB,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,yCCnBGoiB,GAA0C,SAAAtoB,GAGjD,IAFJkoB,EAEIloB,EAFJkoB,QACAK,EACIvoB,EADJuoB,WAEMC,EAAiB9O,aAGrB+O,KAA6B,CAAErgB,UAAW,CAAE8f,aAC9C,OAAKK,EAIH3iB,EAAAzE,EAAAC,cAACyE,GAAA,EAAD,CACE6iB,KAAMniB,EAAA,EAAIC,EAAA,oBACVV,QAAS,WACP0iB,OANG,MCRLG,IAAWC,GAAA,GAAA5nB,OAAA8jB,EAAA,EAAA9jB,CAAA4nB,GACdC,IAAeC,SAAW9D,mBAAS,iBADrBhkB,OAAA8jB,EAAA,EAAA9jB,CAAA4nB,GAEdC,IAAezD,SAAWJ,mBAAS,iBAFrB4D,IAKJG,GAAqC,SAAA/oB,GAI5C,IAHJkoB,EAGIloB,EAHJkoB,QACAc,EAEIhpB,EAFJgpB,UACAC,EACIjpB,EADJipB,WAEA,OACErjB,EAAAzE,EAAAC,cAACyE,GAAA,EAAD,CACE6iB,KAAMniB,IAAKC,EAAEmiB,GAAYK,IACzB1lB,MAAM,WACNwC,QAAS,WACPmjB,EAAWC,iBAAiBhB,EAASc,sCCNvCG,GAAa5pB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,YAAGJ,CAAH,4FAOV6pB,GAAkB,CACtBC,WAAY7nB,IAAOkC,YAEfqI,GAAY,CAAExK,MAAOC,IAAO8S,OAE5BlQ,GAAuB,CAC3BnB,QAAS,SAAAC,GAAI,OAAAlC,OAAAsR,EAAA,EAAAtR,CAAA,GACRkC,EACAkmB,GACArd,GAHQ,CAIXvH,OAAQnE,IAAQipB,aAChBC,YAAa,EACbC,aAAc/O,IAASgP,OACvB9lB,OAAQ,KAEVE,KAAM,SAAAX,GAAI,OAAAlC,OAAAsR,EAAA,EAAAtR,CAAA,GACLkC,EACAkmB,KAELM,eAAgB,SAAAxmB,GAAI,OAAAlC,OAAAsR,EAAA,EAAAtR,CAAA,GACfkC,EACA6I,KAEL4d,YAAa,SAAAzmB,GAAI,OAAAlC,OAAAsR,EAAA,EAAAtR,CAAA,GACZkC,EACA6I,KAEL6F,YAAa,SAAA1O,GAAI,OAAAlC,OAAAsR,EAAA,EAAAtR,CAAA,GACZkC,EACA6I,GAFY,CAGf6d,SAAU,aAIDC,GAAsC,SAAA7pB,GAAA,IACjD8pB,EADiD9pB,EACjD8pB,QACAC,EAFiD/pB,EAEjD+pB,eACAC,EAHiDhqB,EAGjDgqB,UACAC,EAJiDjqB,EAIjDiqB,SACAC,EALiDlqB,EAKjDkqB,QACAC,EANiDnqB,EAMjDmqB,SANiD,OAQjDvkB,EAAAzE,EAAAC,cAAC6C,GAAA,EAAD,CACEoC,QAASyjB,EACTnd,MAAOod,EACPlY,eAAgBzK,IAAGG,KAAK,MACxByiB,UAAWA,EACXI,cAAc,EACdrc,aAAa,EACb6D,YAAY,gBACZtO,MAAO,GACPc,OAAQA,GACRimB,iBAAkB,kBAAM9jB,EAAA,EAAIC,EAAA,yBAC5B+L,SAAU,SAAAkS,GACO,OAAXA,EACFyF,IAEAD,EAASxF,IAGb6F,WAAYH,EACZ/X,WAAY,CACVmY,eAAgB,SAAAxpB,GAAK,OACnB6E,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACEmD,EAAAzE,EAAAC,cAACopB,GAAA,EAAD,CAAMlpB,SAAS,iBAAiBsoB,SAAU,EAAGroB,MAAOC,IAAO8S,QAC3D1O,EAAAzE,EAAAC,cAACqpB,GAAA,EAAWF,eAAmBxpB,KAGnC2pB,kBAAmB,kBAAM,OAE3B5Y,kBAAmB,SAAA2S,GAAM,OACvB7e,EAAAzE,EAAAC,cAAC+nB,GAAD,QAAAzmB,OAAgB+hB,EAAOtL,UAAvB,KAAAzW,OAAoC+hB,EAAOvL,eCvFpCyR,GAAsC,SAAA3qB,GAAA,IACjD4qB,EADiD5qB,EACjD4qB,SACA1C,EAFiDloB,EAEjDkoB,QACA/M,EAHiDnb,EAGjDmb,mBACA8N,EAJiDjpB,EAIjDipB,WAJiD,OAMjDrjB,EAAAzE,EAAAC,cAACypB,EAAA,EAAD,CACEC,YAAY,eACZ1iB,UAAW,CAAEwiB,SAAU,CAACA,GAAW1C,WACnC9H,OAAQ,SAAAvgB,EAAAa,GAAA,IACJopB,EADIjqB,EACJiqB,QAA0BiB,EADtBlrB,EACKib,MAAS2J,OAClB3N,EAFIpW,EAEJoW,QAASkU,EAFLtqB,EAEKsqB,QAFL,OAINplB,EAAAzE,EAAAC,cAAC6pB,GAAD,CACEnB,QAASA,EACTC,eAAgBgB,EAAcA,EAAYxoB,KAAO,KACjDynB,UAAWlT,EACXqT,SAAUa,EACVd,QAAS,WACHa,GACF9B,EAAWiC,aAAaH,EAAY7kB,KAGxC+jB,SAAU,SAAAxF,GACRwE,EAAWkC,aAAajD,EAASzD,EAAOve,IACpCiV,IAAuBC,IAAuB+J,OAChD8D,EAAWmC,aAAalD,UCjC9BmD,GAAiC9rB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0DAAAC,YAAA,eAAGJ,CAAH,mDAGxBc,IAAQipB,cAGdgC,GAAU/rB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,eAAGJ,CAAH,iGAQAgsB,GAA4C,SAAAvrB,GAAA,IAAGc,EAAHd,EAAGc,SAAH,OACvD8E,EAAAzE,EAAAC,cAACiqB,GAAD,KACGG,WAASlkB,IAAIxG,EAAU,SAAC2qB,EAAOld,GAAR,OACtB3I,EAAAzE,EAAAC,cAACkqB,GAAD,CAASvjB,IAAKwG,GAAMkd,kBCXbC,GAA+C,SAAA1rB,GAGtD,IAFJkoB,EAEIloB,EAFJkoB,QACAK,EACIvoB,EADJuoB,WAEQzN,EAAUxY,eAAVwY,MAER,OACElV,EAAAzE,EAAAC,cAACod,GAAA,EAAD,CACElP,MACEiZ,EACIhiB,EAAA,EAAIC,EAAA,2DACJD,EAAA,EAAIC,EAAA,yDAEV+U,aACEgN,EAAa9M,IAAiBkQ,UAAYlQ,IAAiBC,OAE7D+C,UAAW,SAAA/I,GACToF,EAAM3X,MAAMyoB,qBAAqB1D,EAASxS,KAG3C,SAAA7V,GAAA,IAAGof,EAAHpf,EAAGof,WAAH,OACCrZ,EAAAzE,EAAAC,cAACyE,GAAA,EAAD,CAAavE,SAAS,WAAWwE,QAASmZ,iWC5B3C,IAAM4M,GAAkBrF,YAG7BvF,IAHuC6K,KAiBrCC,OCSEC,GAA4C,SAAAjrB,GAAK,OACrD6E,EAAAzE,EAAAC,cAAC6qB,GAAD,KACGlrB,EAAMmrB,WAAatmB,EAAAzE,EAAAC,cAAC+qB,GAAsBprB,GAC3C6E,EAAAzE,EAAAC,cAACgrB,GAA0BrrB,GAC3B6E,EAAAzE,EAAAC,cAACirB,GAA+BtrB,GAChC6E,EAAAzE,EAAAC,cAACkrB,GAADtrB,OAAAmD,OAAA,CAAkB6kB,UAAWH,IAAeC,UAAc/nB,MAIxDwrB,GAAiD,SAAAxrB,GAAK,OAC1D6E,EAAAzE,EAAAC,cAAC6qB,GAAD,KACGlrB,EAAMmrB,WAAatmB,EAAAzE,EAAAC,cAAC+qB,GAAsBprB,GAC3C6E,EAAAzE,EAAAC,cAACgrB,GAA0BrrB,GAC3B6E,EAAAzE,EAAAC,cAACirB,GAA+BtrB,GAC/BA,EAAMyrB,WACL5mB,EAAAzE,EAAAC,cAACqrB,GAAsB1rB,GAEvB6E,EAAAzE,EAAAC,cAACkrB,GAADtrB,OAAAmD,OAAA,CAAkB6kB,UAAWH,IAAezD,UAAcrkB,MAK1D2rB,GAAuD,SAAA3rB,GAAK,OAChE6E,EAAAzE,EAAAC,cAAC6qB,GAAD,KACGlrB,EAAMmrB,WAAatmB,EAAAzE,EAAAC,cAAC+qB,GAAsBprB,GAC1CA,EAAMwnB,WACL3iB,EAAAzE,EAAAC,cAACqrB,GAAsB1rB,GAEvB6E,EAAAzE,EAAAC,cAACkrB,GAADtrB,OAAAmD,OAAA,CAAkB6kB,UAAWH,IAAezD,UAAcrkB,MAK1D4rB,GAA8C,SAAA5rB,GAAK,OACvD6E,EAAAzE,EAAAC,cAAC6qB,GAAD,KACGlrB,EAAMmrB,WAAatmB,EAAAzE,EAAAC,cAAC+qB,GAAsBprB,GAC3C6E,EAAAzE,EAAAC,cAACirB,GAA+BtrB,GAChC6E,EAAAzE,EAAAC,cAACqrB,GAAsB1rB,GACvB6E,EAAAzE,EAAAC,cAACkrB,GAADtrB,OAAAmD,OAAA,CAAkB6kB,UAAWH,IAAezD,UAAcrkB,MAIxD6rB,GAAiD,SAAA7rB,GAAK,OAC1D6E,EAAAzE,EAAAC,cAAC6qB,GAAD,KACGlrB,EAAMmrB,WAAatmB,EAAAzE,EAAAC,cAAC+qB,GAAsBprB,KAIlC8rB,GAAmC,SAAA7sB,GAA2B,IAAxBkoB,EAAwBloB,EAAxBkoB,QAAS0C,EAAe5qB,EAAf4qB,SAExC3B,EACd3mB,eADFwY,MAAS3X,MAEX,OACEyC,EAAAzE,EAAAC,cAACyqB,GAAD,CACEzjB,UAAW,CAAE8f,UAAS0C,YACtBxK,OAAQ,SAAAvgB,GAAqD,IAAlDib,EAAkDjb,EAAlDib,MAAwBgS,EAA0BjtB,EAA3Cmb,cAAiB8R,kBACzB3R,EAAuBL,EAAvBK,mBACR,IAAKA,EAEH,OADAtT,aAAY,IAAIklB,UAAO,yCAChB,KAET,IAAMxE,EACmB,OAAvBzN,EAAMS,cACNT,EAAMS,aAAaC,OAASC,IAAiBC,OAEzC8Q,EACJjE,IACCuE,EAAkBzc,SAAS+K,IAAuB+J,QACjD2H,EAAkBzc,SAAS+K,IAAuB8J,iBAEhDgH,EAAYpR,EAAMkS,aAElBC,EAA0B,CAC9B/E,UACA0C,WACA3B,aACA9N,qBACA+Q,YACAM,aACAjE,cAEF,OAAQpN,GACN,KAAKC,IAAuB2J,UAC1B,OAAOnf,EAAAzE,EAAAC,cAAC8rB,GAAuBD,GACjC,KAAK7R,IAAuB6J,UAC1B,OAAOrf,EAAAzE,EAAAC,cAAC+rB,GAA4BF,GACtC,KAAK7R,IAAuB8J,eAC1B,OAAOtf,EAAAzE,EAAAC,cAACgsB,GAAkCH,GAC5C,KAAK7R,IAAuB+J,MAC1B,OAAOvf,EAAAzE,EAAAC,cAACisB,GAAyBJ,GACnC,KAAK7R,IAAuBgK,SAC1B,OAAOxf,EAAAzE,EAAAC,cAACksB,GAA4BL,GACtC,QACE,OAAO,UCzGbM,GAA6BhuB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0CAAAC,YAAA,gBAAGJ,CAAH,qCAInBiuB,GAA2C,SAAAxtB,GAAA,IAAGkoB,EAAHloB,EAAGkoB,QAAH,OACtDtiB,EAAAzE,EAAAC,cAACmlB,GAAD,CACEne,UAAW,CAAElC,GAAIgiB,GACjB4C,YAAY,oBACZ1K,OAAQ,SAAAvgB,GAAA,IAAGib,EAAHjb,EAAGib,MAAH,OACNlV,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACEmD,EAAAzE,EAAAC,cAACmsB,GAAD,KACE3nB,EAAAzE,EAAAC,cAACwJ,EAAA,EAAD,MACAhF,EAAAzE,EAAAC,cAACqsB,EAAD,CAAezH,WAAYlL,EAAMhN,QACjClI,EAAAzE,EAAAC,cAACssB,EAAD,CAAmB5S,MAAOA,IAC1BlV,EAAAzE,EAAAC,cAACusB,EAAD,CAAgB1J,MAAOnJ,EAAM8S,iBAC3BhoB,EAAAzE,EAAAC,cAACysB,EAAD,CACE1O,QAASrE,EAAMgT,2BACfjL,MAAO/H,EAAMiT,4BAGjBnoB,EAAAzE,EAAAC,cAAC4sB,EAAD,CACE9L,OAAQpH,EAAM7B,SAASiJ,OACvBC,OAAQrH,EAAM7B,SAASkJ,SAEzBvc,EAAAzE,EAAAC,cAACgb,EAAA,EAAD,CAAUQ,KAAM9B,EAAM8B,KAAMC,aAAc/B,EAAM+B,eAChDjX,EAAAzE,EAAAC,cAACwJ,EAAA,EAAD,MACAhF,EAAAzE,EAAAC,cAAC6sB,EAAD,CAAalK,YAAajJ,EAAM5U,GAAIyd,YAAa7I,EAAM6I,cACvD/d,EAAAzE,EAAAC,cAACwJ,EAAA,EAAD,MACAhF,EAAAzE,EAAAC,cAAC8sB,EAAD,CAAe5I,YAAaxK,EAAMwK,cAClC1f,EAAAzE,EAAAC,cAAC+sB,EAAD,CAAYrT,MAAOA,KAErBlV,EAAAzE,EAAAC,cAACgtB,GAAD,CAAgBlG,QAASA,EAAS0C,SAAU9P,EAAME,cAAc9U,UCnDxEtE,EAAAC,EAAAC,EAAA,sBAAAusB,KAkBO,IAAMC,GAAiB/uB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAGJ,CAAH,6FACLiC,IAAO8S,MAClB9S,IAAOgE,YACCiV,IAASC,MAKf6T,GAA6B,SAAAvuB,GAAA,IACxC8a,EADwC9a,EACxC8a,MACAC,EAFwC/a,EAExC+a,WACAyT,EAHwCxuB,EAGxCwuB,kBACAC,EAJwCzuB,EAIxCyuB,kBAJwC,OAMxC7oB,EAAAzE,EAAAC,cAACktB,GAAD,CAAgBpoB,GAAE,SAAAxD,OAAWoY,EAAM5U,KACjCN,EAAAzE,EAAAC,cAACyZ,EAAA,EAAD,CACEC,MAAOA,EACPC,WAAYA,EACZjV,QAAS,kBAAM0oB,EAAkB1T,EAAM5U,OAEzCN,EAAAzE,EAAAC,cAACstB,EAAD,CACE7M,KAAM,kBAAM4M,EAAkB3T,EAAM5U,KACpC4b,cAAe,kBAAMlc,EAAAzE,EAAAC,cAACutB,GAAD,CAAazG,QAASpN,EAAM5U,oLChC1C0oB,EAAuB,WAClC,OACEhpB,EAAAzE,EAAAC,cAACkJ,EAAA,EAAD,CAAeE,QAAQ,cACrB5E,EAAAzE,EAAAC,cAACkK,EAAA,EAAD,CAAYE,YAAY,EAAMlI,MAAM,SAClCsC,EAAAzE,EAAAC,cAACggB,EAAA,EAAD,CACEzB,MAAM,WACN9e,MAAO+E,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,cACP2oB,QAAQ,KAGZjpB,EAAAzE,EAAAC,cAACkK,EAAA,EAAD,CAAYE,YAAY,EAAMlI,MAAM,SAClCsC,EAAAzE,EAAAC,cAACggB,EAAA,EAAD,CACEzB,MAAM,SACN9e,MAAO+E,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,YACP2oB,QAAQ,KAGZjpB,EAAAzE,EAAAC,cAACkK,EAAA,EAAD,KACE1F,EAAAzE,EAAAC,cAACsR,EAAA,EAAD,CAAYpP,MAAM,SAChBsC,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,sfCzBH,IAAM4oB,EAAsB7N,IAAH7M,KCa1B2a,EAAUC,wBAA0D,MAI7DC,EAAiC,SAAAjvB,GAAkB,IAAfc,EAAed,EAAfc,SACvCouB,EAAe5sB,cAAf4sB,WADsDC,EAElC1Y,YAG1BqY,GAHMxmB,EAFsD6mB,EAEtD7mB,OAAQ6O,EAF8CgY,EAE9ChY,QAKhB,OACEvR,EAAAzE,EAAAC,cAACguB,EAAA,KAAD,CACEC,SAAU,SAACC,GACLJ,EAAWK,eACbpY,EAAQ,CACNyT,SAAUsE,EAAWK,cACrBC,SAAUC,YAAcH,EAAWE,UACnCE,OAAQD,YAAcH,EAAWI,WAIvCC,cAAe,CAAEH,SAAUI,kBAAQ,IAAI1U,KAAQ,GAAIwU,OAAQ,IAAIxU,OAE/DtV,EAAAzE,EAAAC,cAACyuB,EAAQC,SAAT,CAAkBnjB,MAAOrE,GAASxH,KCvB3BivB,EAAsBC,YAAS,WAAM,IAAAC,EDCXC,qBAAWnB,GCAxCjmB,EADwCmnB,EACxCnnB,KAAMgO,EADkCmZ,EAClCnZ,QAASC,EADyBkZ,EACzBlZ,YACfmY,EAAe5sB,cAAf4sB,WACR,OAAKnY,EASDD,EAEAlR,EAAAzE,EAAAC,cAAC6D,EAAA,EAAD,KACEW,EAAAzE,EAAAC,cAAC+uB,EAAA,EAAD,OAIDjB,EAAWK,cAOZzmB,GAAyC,IAAjCA,EAAKsnB,iBAAiBttB,OAE9B8C,EAAAzE,EAAAC,cAAC6D,EAAA,EAAD,KACEW,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,uBAKJN,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACGqG,GACCA,EAAKsnB,iBAAiB9oB,IAAI,SAAA+oB,GAAM,OAC9BzqB,EAAAzE,EAAAC,cAACugB,EAAA,EAAD,CAAS5Z,IAAKsoB,EAAOnqB,IACnBN,EAAAzE,EAAAC,cAACkK,EAAA,EAAD,CAAYE,YAAY,GACtB5F,EAAAzE,EAAAC,cAAC0b,EAAA,EAAD,CAAc1G,GAAE,MAAA1T,OAAQ2tB,EAAOnqB,KAC7BN,EAAAzE,EAAAC,cAACyE,EAAA,EAAD,CACEvE,SAAS,YACTgC,MAAOjD,IAAQipB,aACf9kB,OAAQnE,IAAQipB,iBAItB1jB,EAAAzE,EAAAC,cAACkK,EAAA,EAAD,CAAYI,eAAgB,GAA5B,IAAAhJ,OACO2tB,EAAOC,eADd,MAAA5tB,OACiC+sB,YAC7BY,EAAOE,sBA5BjB3qB,EAAAzE,EAAAC,cAAC6D,EAAA,EAAD,KACEW,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,qBAjBFN,EAAAzE,EAAAC,cAACovB,EAAA,EAAD,CAAYpb,QAAQ,cAClBxP,EAAAzE,EAAAC,cAAA,UACEwE,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,oECbGuqB,EAAyC,SAAA1vB,GACpD,OACE6E,EAAAzE,EAAAC,cAACqJ,EAAA,EAAD,CAAUC,UAAU,uBAClB9E,EAAAzE,EAAAC,cAACsvB,EAAA,EAAD,CAAMta,GAAG,qBACPxQ,EAAAzE,EAAAC,cAACyE,EAAA,EAAD,CACE6iB,KAAMniB,EAAA,EAAIC,EAAA,mBACVjF,MAAOC,IAAOyW,OACd3U,MAAM,QACNkB,OAAQnE,IAAQipB,kBCVpBqH,EAAgBpxB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yCAAAC,YAAA,YAAGJ,CAAH,gCASNqxB,EAA0BZ,YAAiB,SAAAhwB,GAAqB,IAAlB6wB,EAAkB7wB,EAAlB6wB,YACjD3B,EAAe5sB,cAAf4sB,WACR,OACEtpB,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACEmD,EAAAzE,EAAAC,cAACsO,EAAA,EAAD,CACEP,iBACE+f,EAAWK,cAAgB,CAACL,EAAWK,eAAiB,GAE1Dvf,kBAAmB,SAAAnQ,GAAA,IAAEuQ,EAAFpP,OAAAwmB,EAAA,EAAAxmB,CAAAnB,EAAA,aAAcqvB,EAAW4B,iBAAiB1gB,IAC7DH,iBAAkB,kBAAMif,EAAW4B,iBAAiB,OACpD/iB,aAAa,IAEd8iB,GACCjrB,EAAAzE,EAAAC,cAACuvB,EAAD,KACE/qB,EAAAzE,EAAAC,cAAC2vB,EAAD,UCnBGC,EAAuC,SAAAjwB,GAAK,OACvD6E,EAAAzE,EAAAC,cAAC6vB,EAAD,KACErrB,EAAAzE,EAAAC,cAAC8vB,EAAA,EAAD,CACEC,UAAW5qB,EAAA,EAAIC,EAAA,mBACf4qB,eAAe,EACfC,UAAU,aAEVzrB,EAAAzE,EAAAC,cAACsZ,EAAA,EAAD,KACE9U,EAAAzE,EAAAC,cAACwvB,EAAD,CAAyBC,aAAa,IACtCjrB,EAAAzE,EAAAC,cAACkwB,EAAD,OAEF1rB,EAAAzE,EAAAC,cAACsZ,EAAA,EAAD,KACE9U,EAAAzE,EAAAC,cAAC2uB,EAAD,UCjBFwB,EAAwBhyB,IAAOiyB,EAAV/xB,WAAA,CAAAC,YAAA,yCAAAC,YAAA,YAAGJ,CAAH,yIAWdkyB,EAAoC,SAAAzxB,GAAA,IAAG0oB,EAAH1oB,EAAG0oB,KAAH,OAC/C9iB,EAAAzE,EAAAC,cAACmwB,EAAD,KAAqC7I,EAH9BjG,QAAQ,IAAIiP,OAAO,KAAM,KAAM,igBCXjC,IAAMC,EAAkB1Q,IAAH2Q,KAoBfC,GAAuBrL,YAGlCmL,GCjBWG,GAA6C,SAAA9xB,GAAA,IAAA+xB,EAAA/xB,EACxDgyB,gBADwD,IAAAD,EAC7C,GAD6CA,EAAA,OAGxDnsB,EAAAzE,EAAAC,cAAC6wB,EAAA,EAAD,CACE7R,OAAQ,SAAAvgB,GAAA,IAAGqvB,EAAHrvB,EAAGqvB,WAAH,OACNA,EAAWK,cACT3pB,EAAAzE,EAAAC,cAACywB,GAAD,CACEzpB,UAAW,CACTwiB,SAAUsE,EAAWK,cACrByC,WACAE,WAAYjb,QAAQ+a,IAEtBlH,YAAY,oBACZqH,eAAe,EACf/R,OAAQ,SAAA1f,EAAA0xB,GAAA,IAAG/B,EAAH3vB,EAAG2vB,OAAQgC,EAAX3xB,EAAW2xB,WAAX,OAAAD,EAA2Btb,QAE/BlR,EAAAzE,EAAAC,cAACkxB,EAAD,CAAiB5J,KAAMniB,EAAA,EAAIC,EAAA,eAE3BZ,EAAAzE,EAAAC,cAACkxB,EAAD,CACE5J,KAAMsJ,EAAW3B,EAAQkC,UAAYF,EAAWE,eAKtD,mECzBGC,GAAyC,SAAAzxB,GACpD,OACE6E,EAAAzE,EAAAC,cAACqJ,EAAA,EAAD,CAAUC,UAAU,oBAClB9E,EAAAzE,EAAAC,cAACsvB,EAAA,EAAD,CAAMta,GAAG,6BACPxQ,EAAAzE,EAAAC,cAACyE,EAAA,EAAD,CACE6iB,KAAMniB,EAAA,EAAIC,EAAA,mBACVjF,MAAOC,IAAOC,SACd6B,MAAM,QACNkB,OAAQnE,IAAQipB,6BCNbmJ,GAAwC,SAAA1xB,GAAK,OACxD6E,EAAAzE,EAAAC,cAACW,GAAA,EAAD,CAAWM,aAAa,yBACtBuD,EAAAzE,EAAAC,cAACyE,EAAA,EAAD7E,OAAAmD,OAAA,CACEukB,KAAMniB,EAAA,EAAIC,EAAA,kBACVjF,MAAOC,IAAOsR,MACdxP,MAAM,SACFvC,gBCCJ4vB,GAAgBpxB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0CAAAC,YAAA,YAAGJ,CAAH,kBAINmzB,GAA6C,SAAA1yB,GAAqB,IAAlB6wB,EAAkB7wB,EAAlB6wB,YACnD3B,EAAe5sB,cAAf4sB,WACAyD,EAAmBjsB,eAAnBisB,eACAC,EAAYC,8BAAZD,QAEFE,EAAgBxZ,aAGpByZ,MAEI1D,EAAW2D,sBAAWhyB,OAAAgH,GAAA,EAAAhH,CAAAiH,GAAA9G,EAAA+G,KAAC,SAAAC,IAAA,IAAAW,EAAA5C,EAAA,OAAA+B,GAAA9G,EAAA4D,KAAA,SAAA0D,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACtBumB,EAAWK,cADW,CAAA9mB,EAAAE,KAAA,eAAAF,EAAAI,OAAA,wBAAAJ,EAAAE,KAAA,EAIRmqB,EAAc,CAC/BG,gBAAiB/D,EAAWK,gBALH,QAIrBzmB,EAJqBL,EAAAG,QAQjB1C,EAAO4C,EAAKR,OAAZpC,GACR0sB,EAAQja,KAAR,qBAAAjW,OAAkCwD,IAClCysB,EAAepsB,EAAA,EAAIC,EAAA,8BAVM,wBAAAiC,EAAAQ,SAAAd,EAAAe,SAY1B,IAEH,OAAOgqB,YAAY,kBACjBttB,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACGouB,EACCjrB,EAAAzE,EAAAC,cAAC2vB,EAAD,MAEAnrB,EAAAzE,EAAAC,cAAC+xB,GAAD,CACErtB,QAASupB,EACTtc,UAAWmc,EAAWK,gBAG1B3pB,EAAAzE,EAAAC,cAACgyB,GAAD,KACExtB,EAAAzE,EAAAC,cAACiyB,GAAD,WC1CKC,GAAgC,SAAAtzB,GAAA,IAAGuzB,EAAHvzB,EAAGuzB,MAAH,OAC3C3tB,EAAAzE,EAAAC,cAAC8vB,EAAA,EAAD,CACEC,UAAW5qB,EAAA,EAAIC,EAAA,WACf4qB,eAAe,EACfC,UAAU,aAEVzrB,EAAAzE,EAAAC,cAACsZ,EAAA,EAAD,KACE9U,EAAAzE,EAAAC,cAACwvB,EAAD,CAAyBC,aAAa,IACtCjrB,EAAAzE,EAAAC,cAACoyB,GAAD,CAA0B3C,YAAa5Z,QAAQsc,EAAME,OAAOzB,aAE9DpsB,EAAAzE,EAAAC,cAACsyB,GAAD,CAA0B1B,SAAUuB,EAAME,OAAOzB,aClBxC2B,GAA2C,WAAM,IACpDzE,EAAe5sB,cAAf4sB,WACR,OAAOgE,YAAY,kBACjBttB,EAAAzE,EAAAC,cAACsO,EAAA,EAAD,CACEP,iBAAkBnC,MAAM+P,KAAKmS,EAAWjgB,UACxCe,kBAAmBkf,EAAW0E,gBAC9B3jB,iBAAkBif,EAAW2E,kBAC7BhnB,SAAS,kBCLFinB,GAAmB,WAAM,IAC5B5E,EAAe5sB,cAAf4sB,WACR,OAAOgE,YAAY,kBACjBttB,EAAAzE,EAAAC,cAACkJ,EAAA,EAAD,CAAeE,QAAQ,cACrB5E,EAAAzE,EAAAC,cAACkK,EAAA,EAAD,CAAYE,YAAY,EAAMlI,MAAM,SAClCsC,EAAAzE,EAAAC,cAACse,GAAA,EAAD,CACEC,MAAM,eACN9e,MAAO+E,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,SACP2oB,QAAQ,KAGZjpB,EAAAzE,EAAAC,cAACkK,EAAA,EAAD,CAAYE,YAAY,EAAMlI,MAAM,SAClCsC,EAAAzE,EAAAC,cAACse,GAAA,EAAD,CACEC,MAAM,aACN9e,MAAO+E,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,OACP2oB,QAAQ,KAGZjpB,EAAAzE,EAAAC,cAACkK,EAAA,EAAD,KACE1F,EAAAzE,EAAAC,cAACsR,EAAA,EAAD,CAAYpP,MAAM,SAChBsC,EAAAzE,EAAAC,cAAA6E,EAAA,OAAAC,GAAA,+FAAA4c,OAAA,CAAAiR,EACS7E,EAAW8E,eAAelxB,wBCfvCmxB,GAAmB,iBAAO,CAC9BnrB,KAAM,KACNgO,SAAS,EACTE,aAAa,EACbD,aAAa,IAGR,SAASmd,GACdxd,GAsBA,MAAO,CACLqY,QArBcC,wBAAmCiF,MAsBjDE,mBArByB,WAAM,IACvBjF,EAAe5sB,cAAf4sB,WADuBC,EAEI1Y,YACjCC,GADMpO,EAFuB6mB,EAEvB7mB,OAAQ6O,EAFegY,EAEfhY,QAASQ,EAFMwX,EAENxX,MAWnBgY,EAAgB,CACpByE,aAAclF,EAAWkF,aACzBC,WAAYnF,EAAWmF,YAEzB,MAAO,CAAE/rB,SAAQgsB,cAZK,WACpB3c,IACAR,EAAQ,CACNlI,SAAUigB,EAAW8E,eACrBI,aAAcG,mBAAQrF,EAAWkF,cACjCC,WAAYE,mBAAQrF,EAAWmF,eAOHG,YAAa7c,EAAOgY,idC1CjD,OCQiCuE,GDRJjT,IAAHwT,OCQzBN,yBAAoBpF,cAOf2F,GAAkC,SAAA10B,GAAkB,IAAfc,EAAed,EAAfc,SACxCouB,EAAe5sB,cAAf4sB,WADuDyF,EAEdR,KAAzC7rB,EAFuDqsB,EAEvDrsB,OAAQgsB,EAF+CK,EAE/CL,cAAe3E,EAFgCgF,EAEhChF,cAE/B,OACE/pB,EAAAzE,EAAAC,cAACguB,EAAA,KAAD,CACEC,SAAUiF,EACV/hB,SAAU,SAAA1S,GAAA,IAAGijB,EAAHjjB,EAAGijB,OAAH,OAAgBoM,EAAW0F,aAAa9R,IAClD6M,cAAeA,GAEf/pB,EAAAzE,EAAAC,cAACyzB,GAAQ/E,SAAT,CAAkBnjB,MAAOrE,GAASxH,KClB3Bg0B,GAAyB9E,YAAS,WAAM,IAAA+E,EDMbrzB,IAAMwuB,WAAWnB,ICL/CjmB,EAD2CisB,EAC3CjsB,KAAMgO,EADqCie,EACrCje,QACd,IAAKhO,EACH,OAAO,KAET,GAAIgO,EACF,OAAOlR,EAAAzE,EAAAC,cAACkxB,EAAD,CAAiB5J,KAAMniB,EAAA,EAAIC,EAAA,eANe,IAQ3C+d,EAAUzb,EAAVyb,MACR,OACE3e,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACEmD,EAAAzE,EAAAC,cAAC6D,EAAA,EAAD,CAAUK,OAAO,GACfM,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,sBAEFN,EAAAzE,EAAAC,cAACkxB,EAAD,CAAiB5J,KAAMnE,EAAMyQ,uBAE7BpvB,EAAAzE,EAAAC,cAAC6D,EAAA,EAAD,CAAUK,OAAO,GACfM,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,iBAEFN,EAAAzE,EAAAC,cAACkxB,EAAD,CAAiB5J,KAAMnE,EAAM0Q,0BAE7BrvB,EAAAzE,EAAAC,cAAC6D,EAAA,EAAD,CAAUK,OAAO,GACfM,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,aAEFN,EAAAzE,EAAAC,cAACkxB,EAAD,CAAiB5J,KAAMnE,EAAM2Q,0BAE7BtvB,EAAAzE,EAAAC,cAAC6D,EAAA,EAAD,CAAUK,OAAO,GACfM,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,eAEFN,EAAAzE,EAAAC,cAACkxB,EAAD,CAAiB5J,KAAMnE,EAAM4Q,4BC5BtBC,GAAgC,kBAC3CxvB,EAAAzE,EAAAC,cAAC8vB,EAAA,EAAD,CAAgBC,UAAW5qB,EAAA,EAAIC,EAAA,oBAAsB4qB,eAAe,GAClExrB,EAAAzE,EAAAC,cAACi0B,GAAD,KACEzvB,EAAAzE,EAAAC,cAACsZ,EAAA,EAAD,KACE9U,EAAAzE,EAAAC,cAACk0B,GAAD,MACA1vB,EAAAzE,EAAAC,cAACm0B,GAAD,OAEF3vB,EAAAzE,EAAAC,cAAC0zB,GAAD,mrBCZC,IAAMU,GAA4BvU,IAAHwU,KAqBlCzU,KACA+K,suBCzBG,OCQiCmI,GDRHjT,IAAHyU,OCQ1B3G,cAASoF,yBAKJwB,GAAqB,kBAAMj0B,IAAMwuB,WAAWnB,KAE5C6G,GAAmC,SAAA51B,GAAkB,IAAfc,EAAed,EAAfc,SACzCouB,EAAe5sB,cAAf4sB,WADwDyF,EAEfR,KAAzC7rB,EAFwDqsB,EAExDrsB,OAAQgsB,EAFgDK,EAEhDL,cAAe3E,EAFiCgF,EAEjChF,cAE/B,OACE/pB,EAAAzE,EAAAC,cAACguB,EAAA,KAAD,CACEC,SAAUiF,EACV/hB,SAAU,SAAA1S,GAAA,IAAGijB,EAAHjjB,EAAGijB,OAAH,OAAgBoM,EAAW0F,aAAa9R,IAClD6M,cAAeA,GAEf/pB,EAAAzE,EAAAC,cAACy0B,GAAQ/F,SAAT,CAAkBnjB,MAAOrE,GAASxH,KCN3Bg1B,GAAuB9F,YAAS,WAAM,IAAA+F,EACPzzB,cAAlC4sB,EADyC6G,EACzC7G,WAAmB8G,EADsBD,EAC7Bjb,MAD6Bmb,EAEnBN,KAAtB7sB,EAFyCmtB,EAEzCntB,KAAMiO,EAFmCkf,EAEnClf,YACRmf,EAAYtO,iBAA8B,MAE1CuO,EAASvO,iBAAO,IAAIwO,KAEpBC,EAAeC,kBACnB,kBACE,IAAIC,KAAkB,CACpB/qB,YAAY,EACZgrB,cAAe,GACfC,UAAW,MAEf,IAGF5O,oBACE,YAGsB,IAAhB9Q,IACFof,EAAOhX,QAAQuX,QACfL,EAAaM,WACTT,EAAU/W,SACZ+W,EAAU/W,QAAQyX,wBAAuB,KAI/C,CAAC7f,IAGH,IAAMJ,EAASC,eAETigB,EAAe,eAAAh3B,EAAAmB,OAAAgH,GAAA,EAAAhH,CAAAiH,GAAA9G,EAAA+G,KAAG,SAAAC,EAAAnI,GAAA,IAAA82B,EAAAC,EAAAzuB,EAAA0uB,EAAAC,EAAA,OAAAhvB,GAAA9G,EAAA4D,KAAA,SAAA0D,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAASmuB,EAAT92B,EAAS82B,WAAYC,EAArB/2B,EAAqB+2B,UAArBtuB,EAAAE,KAAA,EACDgO,EAAOD,MAG1B,CACAA,MAAO8e,GACPptB,UAAW,CACT6G,SAAUigB,EAAW8E,eACrBI,aAAc3E,YAAcP,EAAWkF,cACvCC,WAAY5E,YAAcP,EAAWmF,YACrC6C,WAAY,CAAEC,UAAWL,EAAYM,QAASL,MAV5B,OAetB,IAdMzuB,EADgBG,EAAAG,KAchBouB,EAdgBh2B,OAAAq2B,GAAA,EAAAr2B,CAcLsH,EAAOQ,KAAKyb,MAAM4R,OAAOa,MACjCC,EAAQH,EAAYG,GAASF,EAAWE,IAC/Cd,EAAOhX,QAAQmY,IAAIL,EAAOD,EAAKO,SAhBX,wBAAA9uB,EAAAQ,SAAAd,EAAAe,SAAH,gBAAAC,GAAA,OAAAtJ,EAAAuJ,MAAAF,KAAArG,YAAA,GAoBjB20B,EAAa,EACjB,GAAI1uB,GAAQA,EAAKyb,MAAO,KAAAkT,EACoB3uB,EAAKyb,MAAMmT,eAA7CC,EADcF,EACdE,cAAeC,EADDH,EACCG,eACvBJ,EAAaG,EAAgBC,EAG/B,OACEhyB,EAAAzE,EAAAC,cAACy2B,GAAA,EAAD,KACG,SAAAn3B,GAAA,IAAG4C,EAAH5C,EAAG4C,MAAOkB,EAAV9D,EAAU8D,OAAV,OACCoB,EAAAzE,EAAAC,cAACy2B,GAAA,EAAD,CACEC,SAAUN,EACVO,YAAa,SAAA3F,GAAA,IAAG6E,EAAH7E,EAAG6E,MAAH,OAAed,EAAOhX,QAAQ6Y,IAAIf,IAC/CgB,aAAcpB,EACdrlB,IAAK0kB,GAEJ,SAAAgC,GAAA,IAAGC,EAAHD,EAAGC,eAAgBC,EAAnBF,EAAmBE,cAAnB,OACCxyB,EAAAzE,EAAAC,cAACy2B,GAAA,EAAD,CACErmB,IAAK4mB,EACLD,eAAgBA,EAChBE,UAAWhC,EAAagC,UACxBC,yBAA0BjC,EAC1ByB,SAAUN,EACVl0B,MAAOA,EACPkB,OAAQA,EACR+zB,eAAgB,kBACd3yB,EAAAzE,EAAAC,cAAC2X,GAAA,EAAD,KACGhC,EAAcnR,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,cAA2B,OAG9CsyB,YAAa,SAAAC,GAAmC,IAAhCxB,EAAgCwB,EAAhCxB,MAAOlvB,EAAyB0wB,EAAzB1wB,IAAK2J,EAAoB+mB,EAApB/mB,MAAOgnB,EAAaD,EAAbC,OAC3B5d,EAAQqb,EAAOhX,QAAQwZ,IAAI1B,GACjC,OAAKnc,EAQHlV,EAAAzE,EAAAC,cAACy2B,GAAA,EAAD,CACE9vB,IAAKA,EACL6wB,YAAa,EACbC,SAAU5B,EACV6B,MAAOzC,EACPqC,OAAQA,GAEP,SAAAK,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OACCpzB,EAAAzE,EAAAC,cAAA,OAAKsQ,MAAOA,GACV9L,EAAAzE,EAAAC,cAACmtB,GAAA,EAAD,CACEzT,MAAOA,EACP0T,kBAAmB,SAAAyK,GACjBjD,EAAWgB,KAAKxI,kBAAkByK,GAClClR,WAAWiR,EAAS,MAEtBvK,kBAAmBuH,EAAWgB,KAAKvI,kBACnC1T,WAAYmU,EAAW8E,eAAelxB,OAAS,OAtBrD8C,EAAAzE,EAAAC,cAAA,OAAKsQ,MAAOA,EAAO3J,IAAKA,GAAxB,2BCnGdmxB,GAAY35B,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,YAAGJ,CAAH,uDAKT45B,GAAY55B,IAAO65B,GAAV35B,WAAA,CAAAC,YAAA,qCAAAC,YAAA,YAAGJ,CAAH,mDAMT85B,GAAY95B,IAAO6F,GAAV3F,WAAA,CAAAC,YAAA,qCAAAC,YAAA,YAAGJ,CAAH,iDAMF+5B,GAA0BtJ,YAAS,WAAM,IAAAiG,EAC1BN,KAAlB7e,EAD4Cmf,EAC5Cnf,QAAShO,EADmCmtB,EACnCntB,KACjB,GAAIgO,IAAYhO,EACd,OAAO,KAET,IAAMyb,EAAQzb,EAAKyb,MAAMmT,eACzB,OACE9xB,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACEmD,EAAAzE,EAAAC,cAAC83B,GAAD,KACEtzB,EAAAzE,EAAAC,cAAC+3B,GAAD,KACEvzB,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,oBAEFN,EAAAzE,EAAAC,cAACi4B,GAAD,KACEzzB,EAAAzE,EAAAC,cAAC6J,GAAA,EAAD,CACEE,MAAOoZ,EAAM1B,MAAMlW,MACnBvB,aAAcmZ,EAAM1B,MAAM5G,SAASC,SAIzCtW,EAAAzE,EAAAC,cAAC83B,GAAD,KACEtzB,EAAAzE,EAAAC,cAAC+3B,GAAD,KACEvzB,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,qBAEFN,EAAAzE,EAAAC,cAACi4B,GAAD,KACEzzB,EAAAzE,EAAAC,cAAC6J,GAAA,EAAD,CACEE,MAAOoZ,EAAMgV,eAAe5sB,MAC5BvB,aAAcmZ,EAAMgV,eAAetd,SAASC,SAIlDtW,EAAAzE,EAAAC,cAAC83B,GAAD,KACEtzB,EAAAzE,EAAAC,cAAC+3B,GAAD,KACEvzB,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,kBAEFN,EAAAzE,EAAAC,cAACi4B,GAAD,KAAY9U,EAAMoT,cAAgBpT,EAAMqT,iBAE1ChyB,EAAAzE,EAAAC,cAAC83B,GAAD,KACEtzB,EAAAzE,EAAAC,cAAC+3B,GAAD,KACEvzB,EAAAzE,EAAAC,cAAC6E,EAAA,MAAD,CAAAC,GAAA,uBAEFN,EAAAzE,EAAAC,cAACi4B,GAAD,KACEzzB,EAAAzE,EAAAC,cAAC6J,GAAA,EAAD,CACEE,MAAOoZ,EAAMiV,KAAK7sB,MAClBvB,aAAcmZ,EAAMiV,KAAKvd,SAASC,SAIxCtW,EAAAzE,EAAAC,cAAC83B,GAAD,KACEtzB,EAAAzE,EAAAC,cAACkxB,EAAD,CAAiB5J,KAAM5f,EAAKyb,MAAMkV,2BCvDnC,IAAMC,GAAyC,SAAA34B,GAAK,OACzD6E,EAAAzE,EAAAC,cAACu4B,GAAD,KACE/zB,EAAAzE,EAAAC,cAACkI,GAAA,EAAD,CACEc,gBAAgB,EAChBN,IAAK,EACLD,OAAQ,EACRF,eAAgB,GAEhB/D,EAAAzE,EAAAC,cAACw4B,GAAA,EAAD,KACEh0B,EAAAzE,EAAAC,cAAC00B,GAAD,QAIJlwB,EAAAzE,EAAAC,cAACy4B,GAAA,EAAD,CACEC,QAjBG,CAAC,CAAEC,EAAG,UAAWC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAkBzChJ,UAAW5qB,EAAA,EAAIC,EAAA,qBACf4zB,kBAAkB,EAClBC,iBAAiB,EACjBjJ,eAAe,GAEfxrB,EAAAzE,EAAAC,cAAA,OAAK2G,IAAI,WACPnC,EAAAzE,EAAAC,cAACsZ,EAAA,EAAD,KACE9U,EAAAzE,EAAAC,cAACk0B,GAAD,MACA1vB,EAAAzE,EAAAC,cAACm0B,GAAD,OAGF3vB,EAAAzE,EAAAC,cAACk4B,GAAD,qBCvCKgB,GAA0B,SAAAv5B,GAAK,OAC1C6E,EAAAzE,EAAAC,cAACyE,EAAA,EAAD,CACE6iB,KAAMniB,EAAA,EAAIC,EAAA,WACVlF,SAAS,aACTC,MAAOC,IAAOsY,aCJLygB,GAAkC,SAAAx5B,GAAK,OAClD6E,EAAAzE,EAAAC,cAACyE,EAAA,EAAD,CACE6iB,KAAMniB,EAAA,EAAIC,EAAA,oBACVlF,SAAS,aACTC,MAAOC,IAAOsY,aCJL0gB,GAAmC,SAAAz5B,GAAK,OACnD6E,EAAAzE,EAAAC,cAACyE,EAAA,EAAD,CACE6iB,KAAMniB,EAAA,EAAIC,EAAA,qBACVlF,SAAS,aACTC,MAAOC,IAAOsY,aCQX,IAAM2gB,GAAiC,SAAA15B,GAAK,OACjD6E,EAAAzE,EAAAC,cAACy4B,GAAA,EAAD,CAAYC,QARL,CACL,CAAEC,EAAG,mBAAoBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9C,CAAEJ,EAAG,kBAAmBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC7C,CAAEJ,EAAG,UAAWC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,KAMrCv0B,EAAAzE,EAAAC,cAAC2U,GAAA,EAAD,CACEhO,IAAI,mBACJiO,MAAM,mBACNC,UAAWukB,GACX7vB,SAAS,eAEX/E,EAAAzE,EAAAC,cAAC2U,GAAA,EAAD,CACEhO,IAAI,kBACJiO,MAAM,uBACNC,UAAWskB,GACX5vB,SAAS,eAEX/E,EAAAzE,EAAAC,cAAC2U,GAAA,EAAD,CACEhO,IAAI,UACJiO,MAAM,oBACNC,UAAWqkB,GACX3vB,SAAS,0BCpCf/I,EAAAC,EAAAC,EAAA,mCAAA44B,KAeO,IAAMC,GAAiD,SAAA36B,GAAA,IAAGuzB,EAAHvzB,EAAGuzB,MAAH,OAC5D3tB,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAAsB,SAAA,KACEmD,EAAAzE,EAAAC,cAACw5B,EAAA,EAAD,CAAWtrB,MAAO/I,EAAA,EAAIC,EAAA,cACtBZ,EAAAzE,EAAAC,cAACy5B,EAAA,OAAD,KACEj1B,EAAAzE,EAAAC,cAAC05B,EAAA,EAAD,CAAaC,OAAO,EAAMC,KAAMzH,EAAMyH,KAAM/kB,UAAWwkB,KACvD70B,EAAAzE,EAAAC,cAAC05B,EAAA,EAAD,CACEE,KAAI,GAAAt4B,OAAK6wB,EAAMyH,KAAX,oBACJ/kB,UAAW+a,IAEbprB,EAAAzE,EAAAC,cAAC05B,EAAA,EAAD,CACEE,KAAI,GAAAt4B,OAAK6wB,EAAMyH,KAAX,uBACJ/kB,UAAWqd,KAEb1tB,EAAAzE,EAAAC,cAAC05B,EAAA,EAAD,CACEE,KAAI,GAAAt4B,OAAK6wB,EAAMyH,KAAX,eACJ/kB,UAAWmf,KAEbxvB,EAAAzE,EAAAC,cAAC05B,EAAA,EAAD,CACEE,KAAI,GAAAt4B,OAAK6wB,EAAMyH,KAAX,WACJ/kB,UAAWyjB,KAEb9zB,EAAAzE,EAAAC,cAACy5B,EAAA,MAAD,CAAO5kB,UAAWglB,SAKTN","file":"static/js/173.5d49983e.chunk.js","sourcesContent":["import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return user.canMutate(mutationName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../styling'\nimport { MarginBox } from './MarginBox'\n\ninterface IProps {\n  width?: number\n  widthUnit?: string\n  height?: number\n  heightUnit?: string\n  margin?: string\n  className?: string\n}\n\nconst widthProperty = ({\n  width: width,\n  widthUnit: widthUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (width === undefined) {\n    return ''\n  } else {\n    return `width: ${width}${widthUnit}`\n  }\n}\n\nconst heightProperty = ({\n  height: height,\n  heightUnit: heightUnit = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  if (height === undefined) {\n    return ''\n  } else {\n    return `height: ${height}${heightUnit}`\n  }\n}\n\nconst SizerContainer = styled('div')`\n  ${widthProperty};\n  ${heightProperty};\n`\n\nexport const Sizer: React.FC<IProps> = ({\n  width,\n  widthUnit = Spacing.DefaultSizeUnit,\n  height,\n  heightUnit = Spacing.DefaultSizeUnit,\n  margin,\n  children,\n  className,\n  ...props\n}) => {\n  const wrap = (\n    <SizerContainer\n      width={width}\n      widthUnit={widthUnit}\n      height={height}\n      heightUnit={heightUnit}\n      className={className}\n      {...props}\n    >\n      {children}\n    </SizerContainer>\n  )\n\n  return margin === undefined ? (\n    wrap\n  ) : (\n    <MarginBox margin={margin}>{wrap}</MarginBox>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import { Trans } from '@lingui/macro'\nimport Raven from 'raven-js'\nimport React from 'react'\n\nimport { TouchButton } from '../molecules/TouchButton'\n\nexport function ShowFeedbackButton() {\n  return (\n    <TouchButton onClick={() => Raven.showReportDialog()}>\n      <Trans> Submit feedback </Trans>\n    </TouchButton>\n  )\n}\n","import { MutationFn, MutationHookOptions } from '@speedlo/graphql'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { GraphQLError } from 'graphql'\nimport React from 'react'\n\nimport { ShowFeedbackButton } from '../atoms/ShowFeedbackButton'\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\nimport { useSnackBar } from './useSnackBar'\n\ninterface IMutationGuardOptions<TData> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useMutationGuard<TData, TVariables>(\n  mutate: MutationFn<TData, TVariables>,\n  options: IMutationGuardOptions<TData> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const { enqueueSnackbar, enqueueError, enqueueWarning } = useSnackBar()\n\n  const handleUserErrors = (userErrors: ReadonlyArray<string>) => {\n    userErrors.forEach(enqueueWarning)\n  }\n\n  const handleGraphQLErrors = (errors: ReadonlyArray<GraphQLError>) => {\n    const userErrors = errors.filter(\n      RM.pathEq(['extensions', 'showToUser'], true),\n    )\n    if (userErrors.length === 0) {\n      enqueueError(defaultMessage)\n    } else {\n      handleUserErrors(userErrors.map(RM.prop('message')))\n    }\n  }\n\n  const handleError = (err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        enqueueError(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n    enqueueSnackbar(defaultMessage, {\n      action: [React.createElement(ShowFeedbackButton, { key: 'feedback' })],\n    })\n  }\n\n  return async (\n    variables: TVariables,\n    mutateOptions: MutationHookOptions<TData, TVariables> = {},\n  ) => {\n    try {\n      const result = await mutate(variables, mutateOptions)\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      const data = result.data as TData\n      if (options.getUserErrors) {\n        const userErrors = options.getUserErrors(data)\n        if (userErrors !== null) {\n          handleUserErrors(userErrors)\n        }\n      }\n      return data\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return user.canQuery(queryName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.FC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.FC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport React from 'react'\n\nexport const DateTimeFormatProvider: React.FC = ({ children }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      {children}\n    </MuiPickersUtilsProvider>\n  )\n}\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import styled from 'styled-components'\n\nexport interface IProps {\n  margin: string\n  className?: string\n}\n\nexport const MarginBox = styled('div')`\n  margin: ${(props: IProps) => props.margin};\n`\n","import { ApolloError, QueryOptions } from 'apollo-client'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { getOperationName } from 'apollo-utilities'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\nimport { useApolloClient } from 'react-apollo-hooks'\n\nimport { reportError, reportFailingQuery } from '../helpers/sentry'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  errors?: GraphQLError[]\n  error?: ApolloError\n  hasAnyError: boolean\n  wasExecuted: boolean\n}\n\nexport function useExecutableQuery<TData, TVariables>(\n  query: DocumentNode,\n  options: Partial<QueryOptions<TVariables>> = {},\n) {\n  const client = useApolloClient()\n  const result: IQueryResult<TData> = useObservable({\n    data: null,\n    loading: false,\n    wasExecuted: false,\n    get hasAnyError() {\n      return Boolean((result.errors && result.errors.length) || result.error)\n    },\n  })\n  const execute = async (variables: TVariables) => {\n    result.loading = true\n    try {\n      const queryResult = await client.query<TData, TVariables>({\n        ...options,\n        query,\n        variables,\n      })\n      runInAction(() => {\n        result.wasExecuted = true\n        result.data = queryResult.data\n        result.errors = queryResult.errors\n        result.loading = false\n      })\n    } catch (err) {\n      if (isApolloError(err)) {\n        runInAction(() => {\n          result.error = err\n          result.errors = err.graphQLErrors\n          result.loading = false\n        })\n      } else {\n        runInAction(() => {\n          result.error = err\n          result.loading = false\n        })\n        reportError(err)\n      }\n    }\n    if (result.errors) {\n      reportFailingQuery(result.errors, {\n        query: getOperationName(query),\n        variables,\n      })\n    }\n    return result\n  }\n  const reset = () => {\n    runInAction(() => {\n      result.wasExecuted = false\n      result.data = null\n      result.error = undefined\n      result.errors = undefined\n      result.loading = false\n    })\n  }\n  return { result, execute, reset }\n}\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n`\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { MutationHookOptions, useMutation } from '@speedlo/graphql'\nimport { DocumentNode } from 'graphql'\n\nimport { useMutationGuard } from './useMutationGuard'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  return useMutationGuard<TData, TVariables>(useMutation(mutation, options), {\n    getUserErrors: options.getUserErrors,\n  })\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { GOrderListTicker, GOrderStateCategory } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={\n              order.orderStateCategory === OrderStateCategoryEnum.Cancel\n            }\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          <Price\n            price={order.totalSum.value}\n            currencyCode={order.totalSum.currency.code}\n          />\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  initialMinutes?: number\n  deliveryType: DeliveryTypeEnum\n  onMinuteClick(minute: number): void\n}\n\nconst deliveryMinutes = [20, 30, 45, 60, 75, 90, 105, 120]\nconst pickupMinutes = [10, 20, 30, 45, 60, 75, 90]\n\nconst MinutesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst MinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport const DeliveryMinutes: React.FC<IProps> = ({\n  deliveryType,\n  onMinuteClick,\n  initialMinutes,\n}) => {\n  const [selected, setSelected] = React.useState(initialMinutes)\n  const options = getMinutesForDeliveryType(deliveryType)\n  return (\n    <MinutesContainer>\n      {options.map(minutes => (\n        <MinutesItem key={minutes}>\n          <TouchButton\n            onClick={() => {\n              setSelected(minutes)\n              onMinuteClick(minutes)\n            }}\n            color={selected === minutes ? Colors.yellow : Colors.green}\n          >\n            {minutes}\n          </TouchButton>\n        </MinutesItem>\n      ))}\n    </MinutesContainer>\n  )\n}\n\nexport function getMinutesForDeliveryType(type: DeliveryTypeEnum) {\n  return type === DeliveryTypeEnum.Pickup ? pickupMinutes : deliveryMinutes\n}\n","import { Trans } from '@lingui/macro'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport React, { MutableRefObject, useState } from 'react'\n\nimport { DeliveryMinutes } from '../atoms/DeliveryMinutes'\nimport { DeliveryTypeEnum } from '../graph/generated'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  title: string\n  deliveryType: DeliveryTypeEnum\n  cancelText?: string\n  onConfirm(minutes: number): void\n  onCancel?(): void\n  refApi?: MutableRefObject<Maybe<IDeliveryTimeDialogApi>>\n  children?(props: IDeliveryTimeDialogApi): React.ReactElement<{}>\n}\n\nexport interface IDeliveryTimeDialogApi {\n  openDialog(): void\n  closeDialog(): void\n}\n\nexport const DeliveryTimeDialog: React.FC<IProps> = ({\n  title,\n  deliveryType,\n  onConfirm,\n  onCancel,\n  children,\n  cancelText,\n  refApi,\n}) => {\n  const [isOpen, setOpen] = useState(false)\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  if (refApi) {\n    refApi.current = { openDialog, closeDialog }\n  }\n\n  return (\n    <>\n      {children && children({ openDialog, closeDialog })}\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DeliveryMinutes\n            deliveryType={deliveryType}\n            onMinuteClick={minutes => {\n              closeDialog()\n              onConfirm(minutes)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <TouchButton\n            onClick={() => {\n              closeDialog()\n              if (onCancel) {\n                onCancel()\n              }\n            }}\n          >\n            {cancelText ? cancelText : <Trans>Cancel</Trans>}\n          </TouchButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import {\n  DateTimePicker,\n  DateTimePickerProps,\n  InlineDateTimePicker,\n} from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DateTimePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n  inline?: boolean\n}\n\nexport const FormInputDateTime: React.FC<IProps> = ({\n  field,\n  inline = true,\n  ...pickerProps\n}) => {\n  const Picker = inline ? InlineDateTimePicker : DateTimePicker\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi =>\n          React.createElement(Picker, {\n            value: fieldApi.value,\n            onChange: value => fieldApi.setValue(value),\n            onOpen: () => fieldApi.setTouched(true),\n            format: 'lll',\n            ampm: false,\n            showTabs: false,\n            maxDateMessage: i18n.t`Date is too much in the future`,\n            minDateMessage: i18n.t`Date is too much in the past`,\n            ...pickerProps,\n          })\n        }\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nexport const AutoHeight = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import gql from 'graphql-tag'\n\nimport {\n  FAddressFragmentDoc,\n  FCustomerFragmentDoc,\n} from '../../../graph/generated'\n\nexport const OrderTickerFragment = gql`\n  fragment GOrderListTicker on Order {\n    id\n    createdAt\n    isPaidWithCard\n    deliveryType {\n      enum\n    }\n    deliverAt\n    deliverAtWorst\n    deliveredAt\n    delayedDeliveryTime\n    companyBranch {\n      id\n      name\n      oldOrderThreshold\n    }\n    address {\n      ...FAddress\n    }\n    customer {\n      ...FCustomer\n    }\n    totalSum {\n      value\n      currency {\n        code\n      }\n    }\n  }\n  ${FAddressFragmentDoc}\n  ${FCustomerFragmentDoc}\n`\n","import { DatePickerProps, InlineDatePicker } from 'material-ui-pickers'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { i18n } from '../i18n'\nimport { DateTimeFormatProvider } from './DateTimeFormatProvider'\n\ninterface IProps extends Omit<DatePickerProps, 'value' | 'onChange'> {\n  field: FieldType\n}\n\nexport const FormInputDate: React.FC<IProps> = ({ field, ...pickerProps }) => {\n  return (\n    <DateTimeFormatProvider>\n      <Field\n        field={field}\n        render={fieldApi => (\n          <InlineDatePicker\n            value={fieldApi.value}\n            onChange={value => fieldApi.setValue(value)}\n            onOpen={() => fieldApi.setTouched(true)}\n            format=\"ll\"\n            ampm={false}\n            okLabel={i18n.t`Ok`}\n            cancelLabel={i18n.t`Cancel`}\n            clearLabel={i18n.t`Clear`}\n            todayLabel={i18n.t`Today`}\n            maxDateMessage={i18n.t`Date is too much in the future`}\n            minDateMessage={i18n.t`Date is too much in the past`}\n            {...pickerProps}\n          />\n        )}\n      />\n    </DateTimeFormatProvider>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { Observer } from 'mobx-react'\nimport React from 'react'\n\ninterface IObserverWhenProps {\n  test(): boolean\n  renderSuccess(): ReactNode\n  renderFailure?(): ReactNode\n}\n\nexport const ObserverWhen: React.FC<IObserverWhenProps> = ({\n  test,\n  renderSuccess,\n  renderFailure,\n}) => (\n  <Observer\n    render={() =>\n      test() ? renderSuccess() : renderFailure ? renderFailure() : null\n    }\n  />\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { FEmailFragment, FPhoneFragment } from '../../../graph/generated'\n\ninterface IContactLinesProps {\n  phones: ReadonlyArray<FPhoneFragment>\n  emails: ReadonlyArray<FEmailFragment>\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (FPhoneFragment | FEmailFragment)\n\nexport const ContactLines: React.FC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import { Plural, SelectOrdinal, Trans } from '@lingui/react'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.FC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  label: string\n  price: number\n  highlight?: boolean\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\n\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWarePriceLine: React.FC<IProps> = ({\n  label,\n  price,\n  highlight = false,\n}) => (\n  <OrderWareLineWrap>\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      {highlight ? (\n        <b>\n          <Price price={price} />\n        </b>\n      ) : (\n        <Price price={price} />\n      )}\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { OrderWarePriceLine } from './OrderWarePriceLine'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nconst OrderCartTotalsContainer = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.FC<IProps> = ({ order }) => (\n  <OrderCartTotalsContainer>\n    <OrderWarePriceLine\n      label={i18n.t`Transport fee`}\n      price={order.transportFee.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Covers price`}\n      price={order.coverPrice.value}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Discount total`}\n      price={order.totalDiscount.value * -1}\n    />\n    <OrderWarePriceLine\n      label={i18n.t`Total price`}\n      price={order.totalSum.value}\n      highlight={true}\n    />\n  </OrderCartTotalsContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport {\n  GOrderDetailOrderOrigin,\n  OrderOriginEnum,\n} from '../../../graph/generated'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  displayedId: string\n  orderOrigin: GOrderDetailOrderOrigin\n}\n\nconst orderColorAccordingOrigin = ({ orderOrigin }: IProps) => {\n  switch (orderOrigin.enum) {\n    case OrderOriginEnum.DameJidlo:\n      return Colors.orange\n    default:\n      return Colors.greyLight\n  }\n}\n\nconst OrderOriginLabel = styled.div`\n  display: inline-block;\n  background: ${orderColorAccordingOrigin};\n  border-radius: 0.7rem;\n  margin: 0 0 0 1rem;\n  padding: 0.1rem 0.8rem;\n`\n\nexport const OrderIdLine: React.FC<IProps> = ({ displayedId, orderOrigin }) => (\n  <IconLine icon=\"format_list_numbered\" labelMargin=\"0\">\n    {displayedId}\n    <OrderOriginLabel orderOrigin={orderOrigin} displayedId={displayedId}>\n      {orderOrigin.code}\n    </OrderOriginLabel>\n  </IconLine>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: ReadonlyArray<string>\n}\n\nexport const OrderRuleLines: React.FC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import styled from 'styled-components'\n\nimport { Colors } from '../../../styling'\n\nexport const OrderTimeLabel = styled.div`\n  margin-left: 1rem;\n  display: inline-block;\n  color: ${Colors.greyMiddle};\n`\n","import { Trans } from '@lingui/macro'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GOrderDetailOrder } from '../../../graph/generated'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  order: GOrderDetailOrder\n}\n\nconst DelayedDeliveryTimeLabel = styled.span`\n  font-weight: bold;\n  color: ${Colors.orange};\n`\nconst DelayedOrderTimeLabel = styled(OrderTimeLabel)`\n  color: ${Colors.orange};\n`\n\nexport const OrderStats: React.FC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.delayedDeliveryTime) {\n    stats.push(\n      <div key=\"delayedDeliveryTime\">\n        <DelayedDeliveryTimeLabel>\n          {formatTimeWithoutTodayDate(order.delayedDeliveryTime)}\n        </DelayedDeliveryTimeLabel>\n        <DelayedOrderTimeLabel>\n          <Trans>Deliver at time</Trans>\n        </DelayedOrderTimeLabel>\n      </div>,\n    )\n  } else if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <OrderTimeLabel>\n          <Trans>Deliver on time</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <OrderTimeLabel>\n          <Trans>Driver</Trans>\n        </OrderTimeLabel>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { GOrderDetail } from '../../../graph/types'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { OrderTimeLabel } from '../atoms/OrderTimeLabel'\n\ninterface IProps {\n  orderTiming: ReadonlyArray<GOrderDetail.OrderTiming>\n}\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NewOrders]: i18nMark('Created'),\n  [OrderStateCategoryEnum.Preparing]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.OnWay]: i18nMark('On way'),\n  [OrderStateCategoryEnum.Finished]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.FC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <OrderTimeLabel>\n          {i18n._(labelMap[timing.orderStateCategory])}\n        </OrderTimeLabel>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.black};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.FC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import React, { Fragment } from 'react'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: ReadonlyArray<GOrderDetail.Items>\n}\n\nexport const OrderWareList: React.FC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: GOrderDetail.Items) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FEmailFragmentDoc,\n  FPhoneFragmentDoc,\n  FPriceFragmentDoc,\n} from '../../../graph/generated'\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderDriverFragment } from '../molecules/OrderStateDeliver.graphql'\n\nexport const QueryOrderDetail = buildQuery<\n  GOrderDetail.Query,\n  GOrderDetail.Variables\n>(gql`\n  query GOrderDetail($id: ID!) {\n    order(id: $id) {\n      id\n      createdAt\n      deliverAt\n      delayedDeliveryTime\n      companyBranch {\n        id\n      }\n      customer {\n        emails {\n          ...FEmail\n        }\n        phones {\n          ...FPhone\n        }\n      }\n      customerOrdersCountCurrent\n      customerOrdersCountTotal\n      note\n      previousNote\n      allAppliedRules\n      items {\n        ...GOrderDetailWare\n        sidedishes: sideDishes {\n          ...GOrderDetailWare\n        }\n      }\n      totalSum {\n        ...FPrice\n      }\n      transportFee {\n        ...FPrice\n      }\n      coverPrice {\n        ...FPrice\n      }\n      totalDiscount {\n        ...FPrice\n      }\n      orderOrigin {\n        code\n        enum\n      }\n      orderTiming: orderStateCategoryRelations {\n        createdAt\n        orderStateCategory\n      }\n      ...GOrderDriver\n    }\n  }\n\n  fragment GOrderDetailWare on OrderRecipe {\n    id\n    recipe {\n      id\n      code\n      nameLabel\n    }\n    price {\n      ...FPrice\n    }\n  }\n  ${FPriceFragmentDoc}\n  ${FEmailFragmentDoc}\n  ${FPhoneFragmentDoc}\n  ${OrderDriverFragment}\n`)\n","import { SECOND } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { Colors } from '../styling'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  confirmNode: ReactNode | string\n  initialColor?: Colors\n  confirmColor?: Colors\n  confirmDisableMs?: number\n  resetToInitialMs?: number\n  onConfirm(): void\n}\n\nexport const ConfirmButton: React.FC<IProps> = ({\n  confirmNode,\n  initialColor = Colors.greyMiddle,\n  confirmColor = Colors.red,\n  confirmDisableMs = 300,\n  resetToInitialMs = 3 * SECOND,\n  children,\n  onConfirm,\n}) => {\n  const [needConfirm, setNeedConfirm] = React.useState(false)\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n\n  const onClick = () => {\n    if (needConfirm === false) {\n      buttonRef.current!.disabled = true\n      setNeedConfirm(true)\n      setTimeout(() => {\n        if (buttonRef.current) {\n          buttonRef.current.disabled = false\n        }\n      }, confirmDisableMs)\n    } else {\n      onConfirm()\n    }\n  }\n\n  React.useEffect(\n    () => {\n      if (needConfirm) {\n        const timer = setTimeout(() => {\n          setNeedConfirm(false)\n        }, resetToInitialMs)\n        return () => {\n          clearTimeout(timer)\n        }\n      }\n      return undefined\n    },\n    [resetToInitialMs, needConfirm],\n  )\n\n  return (\n    <TouchButton\n      ref={buttonRef}\n      onClick={onClick}\n      color={needConfirm ? confirmColor : initialColor}\n    >\n      {needConfirm ? confirmNode : children}\n    </TouchButton>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  MCancelOrderDocument,\n  MCancelOrderMutation,\n  MCancelOrderVariables,\n} from '../../../graph/generated'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport { ConfirmButton } from '../../../molecules/ConfirmButton'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderCancelButton: React.FC<IProps> = ({ orderId }) => {\n  const cancelOrder = useGuardedMutation<\n    MCancelOrderMutation,\n    MCancelOrderVariables\n  >(MCancelOrderDocument)\n\n  return (\n    <CardDock position=\"BottomLeft\">\n      <Sizer width={7.375}>\n        <ConfirmButton\n          confirmNode={<Trans>Really cancel?</Trans>}\n          onConfirm={() => {\n            cancelOrder({ orderId })\n          }}\n        >\n          <Trans>Cancel order</Trans>\n        </ConfirmButton>\n      </Sizer>\n    </CardDock>\n  )\n}\n","import React from 'react'\nimport { useMutation } from 'react-apollo-hooks'\n\nimport { MChangeOrderToPickup } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { ChangeOrderToPickupMutation } from '../models/OrderStateModel.graphql'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderDeliveryToPickup: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const changeToPickup = useMutation<\n    MChangeOrderToPickup.Mutation,\n    MChangeOrderToPickup.Variables\n  >(ChangeOrderToPickupMutation, { variables: { orderId } })\n  if (!isDelivery) {\n    return null\n  }\n  return (\n    <TouchButton\n      text={i18n.t`Change to pickup`}\n      onClick={() => {\n        changeToPickup()\n      }}\n    />\n  )\n}\n","import { i18nMark } from '@lingui/core'\nimport React from 'react'\n\nimport { OrderStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { TOrderStateModel } from '../models/OrderStateModel'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n  stateModel: TOrderStateModel\n}\n\nconst stateLabels = {\n  [OrderStateEnum.Accepted]: i18nMark('Accept order'),\n  [OrderStateEnum.Finished]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.FC<IProps> = ({\n  orderId,\n  nextState,\n  stateModel,\n}) => {\n  return (\n    <TouchButton\n      text={i18n._(stateLabels[nextState])}\n      width=\"7.375rem\"\n      onClick={() => {\n        stateModel.updateOrderState(orderId, nextState)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { GDriver } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = GDriver.Fragment\n\ninterface IProps {\n  drivers: ReadonlyArray<TDriver>\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst DriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst backgroundColor = {\n  background: Colors.greyMiddle,\n}\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...backgroundColor,\n    ...textColor,\n    height: Spacing.ButtonHeight,\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    ...backgroundColor,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n}\n\nexport const OrderDriverSelect: React.FC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers as TDriver[]}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver => {\n      if (driver === null) {\n        onClear()\n      } else {\n        onSelect(driver as TDriver)\n      }\n    }}\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <DriverName>{`${driver.firstName} ${driver.lastName}`}</DriverName>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { QueryDriverSelection } from './OrderStateDeliver.graphql'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n  stateModel: TOrderStateModel\n}\n\nexport const OrderStateDeliver: React.FC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n  stateModel,\n}) => (\n  <QueryDriverSelection\n    fetchPolicy=\"network-only\"\n    variables={{ branchId: [branchId], orderId }}\n    render={(\n      { drivers, order: { driver: orderDriver } },\n      { loading, refetch },\n    ) => (\n      <OrderDriverSelect\n        drivers={drivers}\n        selectedDriver={orderDriver ? orderDriver.user : null}\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          if (orderDriver) {\n            stateModel.removeDriver(orderDriver.id)\n          }\n        }}\n        onSelect={driver => {\n          stateModel.selectDriver(orderId, driver.id)\n          if (orderStateCategory !== OrderStateCategoryEnum.OnWay) {\n            stateModel.deliverOrder(orderId)\n          }\n        }}\n      />\n    )}\n  />\n)\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst OrderStateFlowContainerWrapper = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n  height: ${Spacing.ButtonHeight};\n`\n\nconst Control = styled.div`\n  margin: 0 0 0 0.5rem;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.FC<IProps> = ({ children }) => (\n  <OrderStateFlowContainerWrapper>\n    {Children.map(children, (child, idx) => (\n      <Control key={idx}>{child}</Control>\n    ))}\n  </OrderStateFlowContainerWrapper>\n)\n","import React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { DeliveryTimeDialog } from '../../../molecules/DeliveryTimeDialog'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n  isDelivery: boolean\n}\n\nexport const OrderStateTimeNotification: React.FC<IProps> = ({\n  orderId,\n  isDelivery,\n}) => {\n  const { order } = useRoot()\n\n  return (\n    <DeliveryTimeDialog\n      title={\n        isDelivery\n          ? i18n.t`Send expected time of delivery to customer (in minutes)`\n          : i18n.t`Send expected time of pickup to customer (in minutes)`\n      }\n      deliveryType={\n        isDelivery ? DeliveryTypeEnum.Messenger : DeliveryTypeEnum.Pickup\n      }\n      onConfirm={minutes => {\n        order.state.sendTimeNotification(orderId, minutes)\n      }}\n    >\n      {({ openDialog }) => (\n        <TouchButton iconName=\"schedule\" onClick={openDialog} />\n      )}\n    </DeliveryTimeDialog>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GOrderState } from '../../../graph/types'\nimport { OrderStateCategoryFragment } from '../models/OrderStateModel.graphql'\n\nexport const QueryOrderState = buildQuery<\n  GOrderState.Query,\n  GOrderState.Variables\n>(gql`\n  query GOrderState($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      deliveryType {\n        enum\n      }\n      isCancelable\n      ...GOrderStateCategory\n    }\n    companyBranch(id: $branchId) {\n      id\n      allowedCategories\n    }\n  }\n  ${OrderStateCategoryFragment}\n`)\n","import React from 'react'\nimport { VError } from 'verror'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n} from '../../../graph/generated'\nimport { reportError } from '../../../helpers/sentry'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { OrderCancelButton } from '../molecules/OrderCancelButton'\nimport { OrderDeliveryToPickup } from '../molecules/OrderDeliveryToPickup'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\nimport { QueryOrderState } from './OrderStateFlow.graphql'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  stateModel: TOrderStateModel\n  orderStateCategory: OrderStateCategoryEnum\n  canCancel: boolean\n  canDeliver: boolean\n  isDelivery: boolean\n}\n\nconst OrderStateNewOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderDeliveryToPickup {...props} />\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Accepted} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderDeliveryToPickup {...props} />\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateReadyToDeliverOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    {props.isDelivery ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateFinishedOrder: React.FC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    {props.canCancel && <OrderCancelButton {...props} />}\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.FC<IProps> = ({ orderId, branchId }) => {\n  const {\n    order: { state: stateModel },\n  } = useRoot()\n  return (\n    <QueryOrderState\n      variables={{ orderId, branchId }}\n      render={({ order, companyBranch: { allowedCategories } }) => {\n        const { orderStateCategory } = order\n        if (!orderStateCategory) {\n          reportError(new VError('Order %s has got no state categories'))\n          return null\n        }\n        const isDelivery =\n          order.deliveryType !== null &&\n          order.deliveryType.enum !== DeliveryTypeEnum.Pickup\n\n        const canDeliver =\n          isDelivery &&\n          (allowedCategories.includes(OrderStateCategoryEnum.OnWay) ||\n            allowedCategories.includes(OrderStateCategoryEnum.ReadyToDeliver))\n\n        const canCancel = order.isCancelable\n\n        const stateProps: IStateProps = {\n          orderId,\n          branchId,\n          stateModel,\n          orderStateCategory,\n          canCancel,\n          canDeliver,\n          isDelivery,\n        }\n        switch (orderStateCategory) {\n          case OrderStateCategoryEnum.NewOrders:\n            return <OrderStateNewOrder {...stateProps} />\n          case OrderStateCategoryEnum.Preparing:\n            return <OrderStateAcceptedOrder {...stateProps} />\n          case OrderStateCategoryEnum.ReadyToDeliver:\n            return <OrderStateReadyToDeliverOrder {...stateProps} />\n          case OrderStateCategoryEnum.OnWay:\n            return <OrderStateOnWayOrder {...stateProps} />\n          case OrderStateCategoryEnum.Finished:\n            return <OrderStateFinishedOrder {...stateProps} />\n          default:\n            return null\n        }\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderIdLine } from '../molecules/OrderIdLine'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { QueryOrderDetail } from './OrderDetail.graphql'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IOrderDetailProps {\n  orderId: string\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail: React.FC<IOrderDetailProps> = ({ orderId }) => (\n  <QueryOrderDetail\n    variables={{ id: orderId }}\n    fetchPolicy=\"cache-and-network\"\n    render={({ order }) => (\n      <>\n        <OrderDetailContainerStyled>\n          <HorizontalSeparator />\n          <OrderWareList orderWares={order.items} />\n          <OrderDetailTotals order={order} />\n          <OrderRuleLines rules={order.allAppliedRules}>\n            <OrderCountLine\n              current={order.customerOrdersCountCurrent}\n              total={order.customerOrdersCountTotal}\n            />\n          </OrderRuleLines>\n          <ContactLines\n            phones={order.customer.phones}\n            emails={order.customer.emails}\n          />\n          <NoteLine note={order.note} previousNote={order.previousNote} />\n          <HorizontalSeparator />\n          <OrderIdLine displayedId={order.id} orderOrigin={order.orderOrigin} />\n          <HorizontalSeparator />\n          <OrderTimeLine orderTiming={order.orderTiming} />\n          <OrderStats order={order} />\n        </OrderDetailContainerStyled>\n        <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ObserverWhen } from '../../../atoms/ObserverWhen'\nimport { GOrderListTicker, GOrderStateCategory } from '../../../graph/types'\nimport { Colors, Radiuses } from '../../../styling'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ntype TOrder = GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n\ninterface IProps {\n  order: TOrder\n  showBranch: boolean\n  toggleOrderDetail(orderId: ID): void\n  isOrderDetailOpen(orderId: ID): boolean\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox: React.FC<IProps> = ({\n  order,\n  showBranch,\n  toggleOrderDetail,\n  isOrderDetailOpen,\n}) => (\n  <OrderBoxStyled id={`order-${order.id}`}>\n    <OrderTicker\n      order={order}\n      showBranch={showBranch}\n      onClick={() => toggleOrderDetail(order.id)}\n    />\n    <ObserverWhen\n      test={() => isOrderDetailOpen(order.id)}\n      renderSuccess={() => <OrderDetail orderId={order.id} />}\n    />\n  </OrderBoxStyled>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const ClosureHistoryFilter = () => {\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateFrom\"\n          label={<Trans>From date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDate\n          field=\"dateTo\"\n          label={<Trans>To date</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Trans>Show history for branch</Trans>\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const ClosureHistoryQuery = gql`\n  query GClosureHistory($branchId: ID!, $dateFrom: Date!, $dateTo: Date!) {\n    financialReports(\n      companyBranchId: $branchId\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      id\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n","import { subDays } from 'date-fns'\nimport React, { createContext, useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GClosureHistory } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\nimport { ClosureHistoryQuery } from './ClosureHistoryLoader.graphql'\n\nexport type TReports = GClosureHistory.FinancialReports\n\nconst context = createContext<IQueryResult<GClosureHistory.Query> | null>(null)\n\nexport const useClosureHistory = () => useContext(context)!\n\nexport const ClosureHistoryLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery<\n    GClosureHistory.Query,\n    GClosureHistory.Variables\n  >(ClosureHistoryQuery)\n\n  return (\n    <Form\n      onSubmit={(formValues: { dateFrom: Date; dateTo: Date }) => {\n        if (statistics.closureBranch) {\n          execute({\n            branchId: statistics.closureBranch,\n            dateFrom: formatDateISO(formValues.dateFrom),\n            dateTo: formatDateISO(formValues.dateTo),\n          })\n        }\n      }}\n      defaultValues={{ dateFrom: subDays(new Date(), 1), dateTo: new Date() }}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Typography } from '@material-ui/core'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Spacing } from '../../../styling'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading, wasExecuted } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (!wasExecuted) {\n    return (\n      <Typography variant=\"subheading\">\n        <em>\n          <Trans>Use the filter</Trans>\n        </em>\n      </Typography>\n    )\n  }\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (data && data.financialReports.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data &&\n        data.financialReports.map(report => (\n          <FlexRow key={report.id}>\n            <FlexColumn fixedWidth={true}>\n              <RelativeLink to={`../${report.id}`}>\n                <TouchButton\n                  iconName=\"mode_edit\"\n                  width={Spacing.ButtonHeight}\n                  height={Spacing.ButtonHeight}\n                />\n              </RelativeLink>\n            </FlexColumn>\n            <FlexColumn widthGrowIndex={1}>\n              {`[${report.reportSequence}] ${formatDateISO(\n                report.reportDatetime,\n              )}`}\n            </FlexColumn>\n          </FlexRow>\n        ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryFilter } from '../molecules/ClosureHistoryFilter'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.FC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <ClosureHistoryFilter />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n}\n\nconst MonospaceOutputStyled = styled.p`\n  color: white;\n  font-family: 'Lucida Console', Monaco, monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 1rem;\n  line-height: 1.8rem;\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nexport const MonospaceOutput: React.FC<IProps> = ({ text }) => (\n  <MonospaceOutputStyled>{formatOutput(text)}</MonospaceOutputStyled>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GClosureReportQuery } from '../../../graph/types'\n\nexport const FinancialReport = gql`\n  query GClosureReportQuery(\n    $branchId: ID!\n    $reportId: ID!\n    $showReport: Boolean!\n  ) {\n    lastReport: lastFinancialReport(companyBranchId: $branchId)\n      @skip(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n    report: financialReport(report: $reportId) @include(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n\nexport const QueryFinancialReport = buildQuery<\n  GClosureReportQuery.Query,\n  GClosureReportQuery.Variables\n>(FinancialReport)\n","import React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryFinancialReport } from './ClosureStatisticsContent.graphql'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent: React.FC<IProps> = ({\n  reportId = '',\n}) => (\n  <WithRoot\n    render={({ statistics }) =>\n      statistics.closureBranch ? (\n        <QueryFinancialReport\n          variables={{\n            branchId: statistics.closureBranch,\n            reportId,\n            showReport: Boolean(reportId),\n          }}\n          fetchPolicy=\"cache-and-network\"\n          renderLoading={false}\n          render={({ report, lastReport }, { loading }) =>\n            loading ? (\n              <MonospaceOutput text={i18n.t`Computing`} />\n            ) : (\n              <MonospaceOutput\n                text={reportId ? report!.plainData : lastReport.plainData}\n              />\n            )\n          }\n        />\n      ) : null\n    }\n  />\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.FC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick?(e: MouseEvent<HTMLButtonElement>): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.FC<IProps> = props => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <TouchButton\n      text={i18n.t`Create closure`}\n      color={Colors.green}\n      width=\"12rem\"\n      {...props}\n    />\n  </CanMutate>\n)\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GCreateFinancialReport } from '../../../graph/types'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\nimport { CreateFinancialReport } from './ClosureStatisticsControl.graphql'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nconst ButtonToRight = styled.div`\n  float: right;\n`\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const createClosure = useGuardedMutation<\n    GCreateFinancialReport.Mutation,\n    GCreateFinancialReport.Variables\n  >(CreateFinancialReport)\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      companyBranchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <>\n      {showCurrent ? (\n        <ClosureCurrentButton />\n      ) : (\n        <ClosureSubmitButton\n          onClick={onSubmit}\n          disabled={!statistics.closureBranch}\n        />\n      )}\n      <ButtonToRight>\n        <ClosureHistoryButton />\n      </ButtonToRight>\n    </>\n  ))\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsContent } from '../organisms/ClosureStatisticsContent'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.FC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(statistics.branches)}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n    />\n  ))\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDateTime } from '../../../atoms/FormInputDateTime'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\nexport const StatisticsFilter = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeFrom\"\n          label={<Trans>From</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"12rem\">\n        <FormInputDateTime\n          field=\"dateTimeTo\"\n          label={<Trans>To</Trans>}\n          autoOk={true}\n        />\n      </FlexColumn>\n      <FlexColumn>\n        <FormSubmit width=\"15rem\">\n          <Plural\n            value={statistics.branchesFilter.length}\n            one=\"Show for one branch\"\n            few=\"Show for # branches\"\n            other=\"Show for # branches\"\n          />\n        </FormSubmit>\n      </FlexColumn>\n    </FlexRowSingle>\n  ))\n}\n","import { isoDate } from '@speedlo/graphql'\nimport { DocumentNode } from 'graphql'\nimport { createContext } from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\n\ninterface IVariables {\n  readonly dateTimeFrom: string\n  readonly dateTimeTo: string\n  readonly branches: ReadonlyArray<string>\n}\n\nconst getInitialResult = () => ({\n  data: null,\n  loading: false,\n  hasAnyError: false,\n  wasExecuted: false,\n})\n\nexport function createStatisticsQuery<TData, TVariables extends IVariables>(\n  query: DocumentNode,\n) {\n  const context = createContext<IQueryResult<TData>>(getInitialResult())\n  const useStatisticsQuery = () => {\n    const { statistics } = useRoot()\n    const { result, execute, reset } = useExecutableQuery<TData, IVariables>(\n      query,\n    )\n    const executeFilter = () => {\n      reset()\n      execute({\n        branches: statistics.branchesFilter,\n        dateTimeFrom: isoDate(statistics.dateTimeFrom),\n        dateTimeTo: isoDate(statistics.dateTimeTo),\n      })\n    }\n    const defaultValues = {\n      dateTimeFrom: statistics.dateTimeFrom,\n      dateTimeTo: statistics.dateTimeTo,\n    }\n    return { result, executeFilter, resetResult: reset, defaultValues }\n  }\n  return {\n    context,\n    useStatisticsQuery,\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const DailyStatisticsQuery = gql`\n  query GDailyStatistics(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      categoryStatisticsPlain\n      dailyStatisticsPlain\n      deliveryStatisticsPlain\n      driversStatisticsPlain\n    }\n  }\n`\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GDailyStatistics } from '../../../graph/types'\nimport { createStatisticsQuery } from '../hooks/createStatisticsQuery'\nimport { DailyStatisticsQuery } from './DailyStatisticsLoader.graphql'\n\nexport type TOrdersStats = GDailyStatistics.Stats\n\nconst { useStatisticsQuery, context } = createStatisticsQuery<\n  GDailyStatistics.Query,\n  GDailyStatistics.Variables\n>(DailyStatisticsQuery)\n\nexport const useDailyStatistics = () => React.useContext(context)\n\nexport const DailyStatisticsLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, executeFilter, defaultValues } = useStatisticsQuery()\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n      defaultValues={defaultValues}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { i18n } from '../../../i18n'\nimport { useDailyStatistics } from './DailyStatisticsLoader'\n\nexport const DailyStatisticsContent = observer(() => {\n  const { data, loading } = useDailyStatistics()\n  if (!data) {\n    return null\n  }\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n  const { stats } = data\n  return (\n    <>\n      <Headline light={true}>\n        <Trans>Daily statistics</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.dailyStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By category</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.categoryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By type</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.deliveryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By driver</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.driversStatisticsPlain} />\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { DailyStatisticsContent } from '../organisms/DailyStatisticsContent'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import gql from 'graphql-tag'\n\nimport { OrderTickerFragment } from '../../../segments/order/molecules/OrderTicker.graphql'\nimport { OrderStateCategoryFragment } from '../../order/models/OrderStateModel.graphql'\n\nexport const OrdersStatisticsListQuery = gql`\n  query GOrdersStatisticsList(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n    $pagination: InputPaginationParams!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      orders: finishedOrders {\n        list: orders(includeCanceled: true, pagination: $pagination) {\n          ...GOrderListTicker\n          ...GOrderStateCategory\n        }\n      }\n    }\n  }\n\n  ${OrderTickerFragment}\n  ${OrderStateCategoryFragment}\n`\n","import gql from 'graphql-tag'\n\nexport const OrdersStatisticsQuery = gql`\n  query GOrdersStatistics(\n    $branches: [ID!]!\n    $dateTimeFrom: DateTime!\n    $dateTimeTo: DateTime!\n  ) {\n    stats: statistics(\n      branches: $branches\n      dateTimeFrom: $dateTimeFrom\n      dateTimeTo: $dateTimeTo\n    ) {\n      finishedOrders {\n        fees {\n          ...GStatsPrice\n        }\n        onlinePayments {\n          ...GStatsPrice\n        }\n        total {\n          ...GStatsPrice\n        }\n        finishedCount: ordersCount\n        cancelledCount: ordersCanceledCount\n      }\n      orderStatisticsPlain\n    }\n  }\n\n  fragment GStatsPrice on PriceConverted {\n    value\n    currency {\n      code\n    }\n  }\n`\n","import React from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GOrdersStatistics } from '../../../graph/types'\nimport { createStatisticsQuery } from '../hooks/createStatisticsQuery'\nimport { OrdersStatisticsQuery } from './OrdersStatisticsLoader.graphql'\n\nexport type TOrdersStats = GOrdersStatistics.FinishedOrders\n\nconst { context, useStatisticsQuery } = createStatisticsQuery<\n  GOrdersStatistics.Query,\n  GOrdersStatistics.Variables\n>(OrdersStatisticsQuery)\n\nexport const useOrderStatistics = () => React.useContext(context)\n\nexport const OrdersStatisticsLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, executeFilter, defaultValues } = useStatisticsQuery()\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n      defaultValues={defaultValues}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React, { useEffect, useMemo, useRef } from 'react'\nimport { useApolloClient } from 'react-apollo-hooks'\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  IndexRange,\n  InfiniteLoader,\n  List,\n} from 'react-virtualized'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GOrdersStatisticsList } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { OrderBox } from '../../../segments/order/atoms/OrderBox'\nimport { OrdersStatisticsListQuery } from './OrdersStatisticsList.graphql'\nimport { useOrderStatistics } from './OrdersStatisticsLoader'\n\nexport const OrdersStatisticsList = observer(() => {\n  const { statistics, order: orderModel } = useRoot()\n  const { data, wasExecuted } = useOrderStatistics()\n  const loaderRef = useRef<InfiniteLoader | null>(null)\n\n  const orders = useRef(new Map())\n\n  const measureCache = useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: 55,\n        minHeight: 55,\n      }),\n    [],\n  )\n\n  useEffect(\n    () => {\n      // whenever this turns to false it means that filter was executed again\n      // and everything should reset in here\n      if (wasExecuted === false) {\n        orders.current.clear()\n        measureCache.clearAll()\n        if (loaderRef.current) {\n          loaderRef.current.resetLoadMoreRowsCache(true)\n        }\n      }\n    },\n    [wasExecuted],\n  )\n\n  const client = useApolloClient()\n\n  const queryMoreOrders = async ({ startIndex, stopIndex }: IndexRange) => {\n    const result = await client.query<\n      GOrdersStatisticsList.Query,\n      GOrdersStatisticsList.Variables\n    >({\n      query: OrdersStatisticsListQuery,\n      variables: {\n        branches: statistics.branchesFilter,\n        dateTimeFrom: formatDateISO(statistics.dateTimeFrom),\n        dateTimeTo: formatDateISO(statistics.dateTimeTo),\n        pagination: { fromIndex: startIndex, toIndex: stopIndex },\n      },\n    })\n\n    const list = [...result.data.stats.orders.list]\n    for (let index = startIndex; index <= stopIndex; index++) {\n      orders.current.set(index, list.shift())\n    }\n  }\n\n  let totalCount = 0\n  if (data && data.stats) {\n    const { finishedCount, cancelledCount } = data.stats.finishedOrders\n    totalCount = finishedCount + cancelledCount\n  }\n\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <InfiniteLoader\n          rowCount={totalCount}\n          isRowLoaded={({ index }) => orders.current.has(index)}\n          loadMoreRows={queryMoreOrders}\n          ref={loaderRef}\n        >\n          {({ onRowsRendered, registerChild }) => (\n            <List\n              ref={registerChild}\n              onRowsRendered={onRowsRendered}\n              rowHeight={measureCache.rowHeight}\n              deferredMeasurementCache={measureCache}\n              rowCount={totalCount}\n              width={width}\n              height={height}\n              noRowsRenderer={() => (\n                <CardListTitle>\n                  {wasExecuted ? <Trans>No orders</Trans> : null}\n                </CardListTitle>\n              )}\n              rowRenderer={({ index, key, style, parent }) => {\n                const order = orders.current.get(index)\n                if (!order) {\n                  return (\n                    <div style={style} key={key}>\n                      ...\n                    </div>\n                  )\n                }\n                return (\n                  <CellMeasurer\n                    key={key}\n                    columnIndex={0}\n                    rowIndex={index}\n                    cache={measureCache}\n                    parent={parent}\n                  >\n                    {({ measure }) => (\n                      <div style={style}>\n                        <OrderBox\n                          order={order}\n                          toggleOrderDetail={o => {\n                            orderModel.list.toggleOrderDetail(o)\n                            setTimeout(measure, 500)\n                          }}\n                          isOrderDetailOpen={orderModel.list.isOrderDetailOpen}\n                          showBranch={statistics.branchesFilter.length > 1}\n                        />\n                      </div>\n                    )}\n                  </CellMeasurer>\n                )\n              }}\n            />\n          )}\n        </InfiniteLoader>\n      )}\n    </AutoSizer>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { Price } from '../../../atoms/Price'\nimport { useOrderStatistics } from '../organisms/OrdersStatisticsLoader'\n\nconst StatPanel = styled.div`\n  margin: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n`\n\nconst StatLabel = styled.h1`\n  font-size: 1.5rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nconst StatValue = styled.h2`\n  font-size: 4rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const { loading, data } = useOrderStatistics()\n  if (loading || !data) {\n    return null\n  }\n  const stats = data.stats.finishedOrders\n  return (\n    <>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total turnover</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Online payments</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Orders count</Trans>\n        </StatLabel>\n        <StatValue>{stats.finishedCount + stats.cancelledCount}</StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total commissions</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <MonospaceOutput text={data.stats.orderStatisticsPlain} />\n      </StatPanel>\n    </>\n  )\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { AutoHeight } from '../../../atoms/FlexAutoHeight'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsFilter } from '../molecules/StatisticsFilter'\nimport { OrdersStatisticsList } from '../organisms/OrdersStatisticsList'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\nimport { OrdersStatisticsSummary } from '../organisms/OrdersStatisticsSummary'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [{ i: 'summary', x: 0, y: 1, w: 7, h: 1 }]\n}\n\nexport const OrdersStatisticsPage: React.FC<IProps> = props => (\n  <OrdersStatisticsLoader>\n    <PageLayoutFullHeightItem\n      withScrollArea={false}\n      row={1}\n      column={7}\n      widthInColumns={9}\n    >\n      <AutoHeight>\n        <OrdersStatisticsList />\n      </AutoHeight>\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      layouts={getLayout()}\n      pageTitle={i18n.t`Orders statistics`}\n      showSoundControl={false}\n      scrollPageTitle={false}\n      useBackButton={true}\n    >\n      <div key=\"summary\">\n        <Card>\n          <StatisticsBranchFilter />\n          <StatisticsFilter />\n        </Card>\n\n        <OrdersStatisticsSummary />\n      </div>\n    </PageLayout>\n  </OrdersStatisticsLoader>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.FC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'OrdersStatistics', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'DailyStatistics', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'Closure', x: 4, y: 1, w: 2, h: 2 },\n  ]\n}\n\nexport const OverviewPage: React.FC<IProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.FC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n"],"sourceRoot":""}