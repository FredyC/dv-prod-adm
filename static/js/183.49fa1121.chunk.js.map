{"version":3,"sources":["atoms/CanMutate.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","atoms/TouchButtonBadge.tsx","segments/main/molecules/CreateOrderButton.tsx","segments/main/molecules/OrderButton.tsx","segments/main/molecules/CallMeButton.tsx","segments/main/molecules/KitchenButton.tsx","segments/main/molecules/KitchenCompletionButton.tsx","segments/main/molecules/MapViewButton.tsx","segments/main/molecules/OverviewButton.tsx","segments/main/molecules/SettingsButton.tsx","segments/main/molecules/SupportButton.tsx","segments/main/pages/MainDashboardPage.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","_ref","mutationName","children","user","useRoot","useObserver","canMutate","a","createElement","Fragment","concat","NoAccess","CanQuery","queryName","canQuery","TouchButtonBadge","styled","div","_templateObject","Colors","red","CreateOrderButton","_material_ui_icons__WEBPACK_IMPORTED_MODULE_0__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_atoms_TouchButtonBadge__WEBPACK_IMPORTED_MODULE_3__","_graph_generated__WEBPACK_IMPORTED_MODULE_4__","_i18n__WEBPACK_IMPORTED_MODULE_5__","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_6__","_styling__WEBPACK_IMPORTED_MODULE_7__","_ref$showOnlyText","showOnlyText","data","useSOrderCall","location","pathname","state","call","to","text","_","iconName","undefined","color","turquoise","badge","isRinging","OrderButton","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_atoms_TouchButtonBadge__WEBPACK_IMPORTED_MODULE_2__","_i18n__WEBPACK_IMPORTED_MODULE_3__","_molecules_TouchButton__WEBPACK_IMPORTED_MODULE_4__","_styling__WEBPACK_IMPORTED_MODULE_5__","count","yellow","CallMeButton","props","KitchenButton","react_default","react_router_dom","TouchButton","i18n","blue","KitchenCompletionButton","MapViewButton","greyMiddle","OverviewButton","greyDark","SettingsButton","SupportButton","green","StyledDashboardButton","PageLayoutGridItem","withConfig","displayName","componentId","Spacing","DashboardButtonHeight","DefaultSizeUnit","MainDashboardPage","PageLayoutResponsive","pageTitle","showSoundControl","isForIconDashboard","gridColumn","gridColumnSpan","gridRow","MapViewButton_MapViewButton","CallMeButton_CallMeButton","KitchenButton_KitchenButton","KitchenCompletionButton_KitchenCompletionButton","SettingsButton_SettingsButton","OverviewButton_OverviewButton","SupportButton_SupportButton"],"mappings":"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","file":"static/js/183.49fa1121.chunk.js","sourcesContent":["import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const TouchButtonBadge = styled.div`\n  min-height: 1.8rem;\n  line-height: 1.8rem;\n  min-width: 1.8rem;\n  font-size: 1.2rem;\n  margin: 0;\n  background-color: ${Colors.red};\n  color: white;\n  position: absolute;\n  right: -0.25rem;\n  top: -0.25rem;\n  border-radius: 1.8rem;\n  text-align: center;\n  vertical-align: middle;\n  padding: 0;\n`\n","import { RingVolume } from '@material-ui/icons'\nimport { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { TouchButtonBadge } from '../../../atoms/TouchButtonBadge'\nimport { useSOrderCall } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface INewOrderButtonProps {\n  showOnlyText?: boolean\n}\n\nexport const CreateOrderButton: React.FC<INewOrderButtonProps> = ({\n  showOnlyText = false,\n}) => {\n  const { data } = useSOrderCall()\n\n  const location: LocationDescriptor = {\n    pathname: '/order/create',\n    state: data ? data.call : null,\n  }\n\n  return (\n    <Link to={location}>\n      <TouchButton\n        text={i18n.t`Create order`}\n        iconName={showOnlyText ? undefined : 'add_circle'}\n        color={Colors.turquoise}\n        badge={\n          data && data.call && data.call.isRinging ? (\n            <TouchButtonBadge>\n              <RingVolume />\n            </TouchButtonBadge>\n          ) : null\n        }\n      />\n    </Link>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { TouchButtonBadge } from '../../../atoms/TouchButtonBadge'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  count?: Maybe<number>\n}\n\nexport const OrderButton: React.FC<IProps> = ({ count }) => (\n  <Link to=\"/order\">\n    <TouchButton\n      text={i18n.t`Orders`}\n      iconName=\"assignment_returned\"\n      badge={\n        count && count > 0 ? <TouchButtonBadge>{count}</TouchButtonBadge> : null\n      }\n      color={Colors.yellow}\n    />\n  </Link>\n)\n","import { useRouterContext } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nexport const CallMeButton: React.FC<IProps> = props => {\n  if (process.env.REACT_APP_STAGE === 'prod') {\n    return null\n  }\n  const { history } = useRouterContext()\n  const makeCall = useCallback((ev: React.MouseEvent<HTMLButtonElement>) => {\n    const phone = window.prompt(\n      'Zadej telefonní číslo, které ti bude volat (bez předvolby)',\n    )\n    if (phone === null) {\n      return\n    }\n    let eventId: MaybeID = null\n    if (ev.shiftKey) {\n      eventId = window.prompt('A teď ještě eventId, jestli víš co děláš ;)')\n    }\n    history.push({\n      pathname: `/order/create`,\n      state: {\n        eventId,\n        phone,\n      },\n    })\n  }, [])\n  return (\n    <TouchButton\n      text=\"Zavolej mi [DEV]\"\n      iconName=\"ring_volume\"\n      color={Colors.turquoise}\n      onClick={makeCall}\n    />\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nexport const KitchenButton: React.FC<IProps> = () => (\n  <Link to=\"/kitchen\">\n    <TouchButton\n      text={i18n.t`Kitchen`}\n      iconName=\"restaurant_menu\"\n      color={Colors.blue}\n    />\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nexport const KitchenCompletionButton: React.FC<IProps> = () => (\n  <Link to=\"/kitchen/completion\">\n    <TouchButton\n      text={i18n.t`Completion`}\n      iconName=\"move_to_inbox\"\n      color={Colors.blue}\n    />\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IMapViewButtonProps {}\n\nexport const MapViewButton: React.FC<IMapViewButtonProps> = ({ children }) => (\n  <Link to=\"/order/map\">\n    <TouchButton text={i18n.t`Map`} iconName=\"map\" color={Colors.greyMiddle}>\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IOverviewButtonProps {}\n\nexport const OverviewButton: React.FC<IOverviewButtonProps> = ({\n  children,\n}) => (\n  <Link to=\"/overview\">\n    <TouchButton\n      text={i18n.t`Overview`}\n      iconName=\"trending_up\"\n      color={Colors.greyDark}\n    >\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface ISettingsButtonProps {}\n\nexport const SettingsButton: React.FC<ISettingsButtonProps> = ({\n  children,\n}) => (\n  <Link to=\"/settings\">\n    <TouchButton\n      text={i18n.t`Settings`}\n      iconName=\"settings\"\n      color={Colors.greyDark}\n    >\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface ISupportButtonProps {}\n\nexport const SupportButton: React.FC<ISupportButtonProps> = ({ children }) => (\n  <Link to=\"/support\">\n    <TouchButton text={i18n.t`Support`} iconName=\"help\" color={Colors.green}>\n      {children}\n    </TouchButton>\n  </Link>\n)\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { PageLayoutGridItem } from '../../../atoms/PageLayoutGridItem'\nimport { i18n } from '../../../i18n'\nimport { PageLayoutResponsive } from '../../../molecules/PageLayoutResponsive'\nimport { Spacing } from '../../../styling'\nimport { CallMeButton } from '../molecules/CallMeButton'\nimport { CreateOrderButton } from '../molecules/CreateOrderButton'\nimport { KitchenButton } from '../molecules/KitchenButton'\nimport { KitchenCompletionButton } from '../molecules/KitchenCompletionButton'\nimport { MapViewButton } from '../molecules/MapViewButton'\nimport { OrderButton } from '../molecules/OrderButton'\nimport { OverviewButton } from '../molecules/OverviewButton'\nimport { SettingsButton } from '../molecules/SettingsButton'\nimport { SupportButton } from '../molecules/SupportButton'\n\nconst StyledDashboardButton = styled(PageLayoutGridItem)`\n  height: ${Spacing.DashboardButtonHeight + Spacing.DefaultSizeUnit};\n`\n\nexport const MainDashboardPage: React.FC = props => (\n  <PageLayoutResponsive\n    pageTitle={i18n.t`Main menu`}\n    showSoundControl={true}\n    isForIconDashboard={true}\n  >\n    <StyledDashboardButton gridColumn={1} gridColumnSpan={2} gridRow={1}>\n      <CanQuery queryName=\"orders\">\n        <OrderButton />\n      </CanQuery>\n    </StyledDashboardButton>\n    <StyledDashboardButton gridColumn={3} gridColumnSpan={2} gridRow={1}>\n      <CanQuery queryName=\"orders\">\n        <MapViewButton />\n      </CanQuery>\n    </StyledDashboardButton>\n    <StyledDashboardButton gridColumn={5} gridColumnSpan={2} gridRow={1}>\n      <CanMutate mutationName=\"createOrder\">\n        <CreateOrderButton />\n      </CanMutate>\n    </StyledDashboardButton>\n    <StyledDashboardButton gridColumn={9} gridColumnSpan={2} gridRow={1}>\n      <CanMutate mutationName=\"createOrder\">\n        <CallMeButton />\n      </CanMutate>\n    </StyledDashboardButton>\n    <StyledDashboardButton gridColumn={1} gridColumnSpan={2} gridRow={2}>\n      <CanQuery queryName=\"orders\">\n        <KitchenButton />\n      </CanQuery>\n    </StyledDashboardButton>\n    <StyledDashboardButton gridColumn={3} gridColumnSpan={2} gridRow={2}>\n      <CanQuery queryName=\"orders\">\n        <KitchenCompletionButton />\n      </CanQuery>\n    </StyledDashboardButton>\n    <StyledDashboardButton gridColumn={1} gridColumnSpan={2} gridRow={3}>\n      <SettingsButton />\n    </StyledDashboardButton>\n    <StyledDashboardButton gridColumn={3} gridColumnSpan={2} gridRow={3}>\n      <OverviewButton />\n    </StyledDashboardButton>\n    <StyledDashboardButton gridColumn={5} gridColumnSpan={2} gridRow={3}>\n      <SupportButton />\n    </StyledDashboardButton>\n  </PageLayoutResponsive>\n)\n\nexport default MainDashboardPage\n"],"sourceRoot":""}