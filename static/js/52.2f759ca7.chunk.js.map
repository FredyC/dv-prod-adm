{"version":3,"sources":["segments/overview/routes/OverviewRoutes.tsx","atoms/IconLine.tsx","atoms/CanMutate.tsx","atoms/Headline.tsx","atoms/SelectControl.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/NoAccess.tsx","atoms/CanQuery.tsx","atoms/HorizontalSeparator.tsx","atoms/FlexColumn.tsx","hooks/useSnackBar.ts","hooks/useRouterContext.ts","atoms/ScrollArea.tsx","atoms/Price.tsx","atoms/SelectControlFlat.tsx","molecules/FormSubmit.tsx","helpers/form.ts","organisms/CompanyBranchPicker.tsx","hooks/useGuardedMutation.tsx","molecules/CompanyBranchDropdown.tsx","hooks/useExecutableQuery.ts","segments/order/organisms/OrderListLoader.tsx","atoms/CardListTitle.tsx","molecules/DeliveryTimeDialog.tsx","atoms/CompanyBranch.tsx","atoms/CursorContainer.tsx","molecules/CompanyBranchFlatSelect.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","segments/order/molecules/OrderWareLine.tsx","atoms/RelativeLink.tsx","segments/order/molecules/OrderTicker.graphql.ts","segments/order/atoms/DeliveryTimeBadge.tsx","atoms/TimeBadge.tsx","helpers/moment.ts","../node_modules/react-content-loader/dist/react-content-loader.es.js","atoms/DeliveryMinutes.tsx","segments/order/organisms/OrderListLoader.graphql.ts","graph/buildSubscription.tsx","segments/order/molecules/OrderMapMarker.graphql.ts","segments/order/atoms/OrderBox.tsx","atoms/ObserverWhen.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/atoms/CustomerIdentity.tsx","segments/order/organisms/OrderDetail.tsx","segments/order/molecules/ContactLines.tsx","segments/order/molecules/NoteLine.tsx","segments/order/molecules/OrderCountLine.tsx","segments/order/molecules/OrderDetailTotals.tsx","segments/order/molecules/OrderRuleLines.tsx","segments/order/molecules/OrderStats.tsx","segments/order/molecules/OrderTimeLine.tsx","segments/order/molecules/OrderWareList.tsx","segments/order/organisms/OrderDetail.graphql.ts","segments/order/organisms/OrderStateFlow.tsx","segments/order/molecules/OrderStateButton.tsx","segments/order/molecules/OrderStateDeliver.tsx","segments/order/atoms/OrderDriverSelect.tsx","segments/order/molecules/OrderStateFlowContainer.tsx","segments/order/molecules/OrderStateTimeNotification.tsx","segments/order/organisms/OrderStateFlow.graphql.ts","atoms/FormInputDate.tsx","atoms/FlexRow.tsx","segments/overview/molecules/StatisticsDateRangeFilter.tsx","segments/overview/organisms/OrdersStatisticsLoader.tsx","segments/overview/organisms/ClosureHistoryLoader.tsx","segments/overview/molecules/ClosureStatisticsFilter.tsx","segments/overview/molecules/ClosureCurrentButton.tsx","atoms/MonospaceOutput.tsx","segments/overview/molecules/StatisticsBranchFilter.tsx","segments/overview/organisms/DailyStatisticsLoader.tsx","segments/overview/hooks/createStatisticsQuery.ts","segments/overview/pages/ClosureHistoryPage.tsx","segments/overview/molecules/ClosureHistoryTable.tsx","segments/overview/organisms/ClosureHistoryLoader.graphql.ts","segments/overview/pages/ClosurePage.tsx","segments/overview/organisms/ClosureStatisticsContent.tsx","segments/overview/organisms/ClosureStatisticsContent.graphql.ts","segments/overview/organisms/ClosureStatisticsControl.tsx","segments/overview/molecules/ClosureHistoryButton.tsx","segments/overview/molecules/ClosureSubmitButton.tsx","segments/overview/pages/DailyStatisticsPage.tsx","segments/overview/organisms/DailyStatisticsContent.tsx","segments/overview/organisms/DailyStatisticsLoader.graphql.ts","segments/overview/pages/OrdersStatisticsPage.tsx","segments/overview/organisms/OrdersStatisticsList.tsx","segments/overview/organisms/OrdersStatisticsLoader.graphql.ts","segments/overview/organisms/OrdersStatisticsSummary.tsx","segments/overview/pages/OverviewPage.tsx","segments/overview/molecules/ClosureButton.tsx","segments/overview/molecules/DailyStatisticsButton.tsx","segments/overview/molecules/OrdersStatisticsButton.tsx"],"names":["_react","__webpack_require__","_reactRouter","_PageTitle","_i18n","_NotFoundPage","_SecureRoute","_ClosureHistoryPage","_ClosurePage","_DailyStatisticsPage","_OrdersStatisticsPage","_OverviewPage","OverviewRoutes","match","default","createElement","Fragment","PageTitle","title","i18n","_","Switch","SecureRoute","exact","path","component","OverviewPage","ClosureHistoryPage","ClosurePage","DailyStatisticsPage","OrdersStatisticsPage","Route","NotFoundPage","_interopRequireDefault","_styledComponents","_styling","_Icon","IconLineWrap","div","withConfig","displayName","DescriptionContainer","labelMargin","labelWidth","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","LabelStyled","_a","icon","label","children","props","__rest","iconComponent","Icon","iconName","color","Colors","greyDark","nativeColor","_NoAccess","_RootProvider","mutationName","user","useRoot","canMutate","NoAccess","Headline","h2","light","greyLight","greyDarkest","margin","size","_reactSelect","_extends","styles","composeSelectControlStyles","outerStyles","Object","assign","control","base","state","selectProps","width","minWidth","controlStyles","border","greyMiddle","MarginAroundFormComponents","undefined","menu","menuStyles","zIndex","black","_ScrollArea","FullHeightDiv","widthInColumns","LayoutGridCellMargin","widthComputed","column","leftPos","row","topPos","FullHeightDivStyled","withScrollArea","scrollAreaId","ScrollArea","id","FlexRowSingle","justify","queryName","canQuery","HorizontalSeparatorStyled","visible","FlexColumn","fixedWidth","widthGrowIndex","padding","enqueueSnackbar","useContext","_SnackbarContext","SnackbarContextNext","enqueueSuccess","useCallback","errorMessage","successVariant","enqueueError","errorVariant","enqueueWarning","warningVariant","enqueueInfo","infoVariant","EVariant","variant","success","error","warning","info","Router","__RouterContext","_interopRequireWildcard","_formats","price","currencyCode","className","formatPrice","_react2","_ramda","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","Component","[object Object]","isMulti","selectedItem","selectedItems","this","Array","isArray","length","item","RM","contains","equals","onSingleSelection","onMultiSelection","isItemSelected","without","concat","items","isClearable","formatItem","hasSelection","onClick","updateSelection","Trans","map","idx","key","defaultProps","prop","getItemValue","_reactForm","_form","_TouchButton","FormApi","form","TouchButton","green","disabled","isFormValid","submitting","e","preventDefault","submitForm","formState","errors","keys","fieldName","value","_validator","isEmpty","_CompanyBranchDropdown","_CompanyBranchFlatSelect","breakpoint","selectedBranches","onSelectionChange","onSelectionClear","getDropdownProps","branch","includes","branches","selectedBranch","find","filter","selected","CompanyBranchFlatSelect","CompanyBranchDropdown","mutation","options","defaultMessage","_useSnackBar","useSnackBar","handleUserErrors","userErrors","forEach","handleGraphQLErrors","propEq","handleError","err","_ApolloError","isApolloError","networkError","graphQLErrors","_sentry","reportError","action","ShowFeedbackButton","mutate","_reactApolloHooks","useMutation","variables","__awaiter","result","data","getUserErrors","_ravenJs","showReportDialog","_CompanyBranch","_SelectControl","ClearIndicator","getStyles","innerProps","ref","restInnerProps","style","SelectControl","placeholder","getOptionValue","formatOptionLabel","CompanyBranch","filterOption","rawInput","name","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","cursor","onChange","selection","head","query","client","useApolloClient","_mobxReactLite","useObservable","loading","wasExecuted","hasAnyError","Boolean","execute","queryResult","_mobx","runInAction","reportFailingQuery","_apolloUtilities","getOperationName","_dateFns","_WithRoot","_types","_OrderListLoader","knownCategories","OrderStateCategoryEnum","NewOrders","Preparing","ReadyToDeliver","OnWay","Finished","getOrderState","order","orderStateCategory","handleSubscriptionUpdate","update","prev","updatedOrder","orderExists","orders","reject","isOldFinishedOrder","o","unshift","differenceInHours","Date","createdAt","companyBranch","oldOrderThreshold","includeOldFinished","WithRoot","render","root","list","hasBranchFilter","isLoading","noFilter","branchesFilter","categories","QueryOrderList","fetchPolicy","refetchOnConnectionLost","renderLoading","orderStateCategories","SubscribeOrderList","handleUpdate","categorizedOrders","reduce","category","push","categorizeOrders","enum","CardListTitle","_core","_DeliveryMinutes","onConfirm","onCancel","cancelText","refApi","isOpen","setOpen","useState","openDialog","closeDialog","current","Dialog","open","onClose","DialogTitle","DialogContent","DeliveryMinutes","onMinuteClick","minutes","DialogActions","_CursorContainer","short","showBrand","CursorContainer","substr","brand","_SelectControlFlat","_reactRouterDom","_CanMutate","_CanQuery","route","layoutItem","Link","to","CanQuery","CanMutate","LinkStyled","a","_Price","OrderWareLineWrap","CodeContainerStyled","NameContainerStyled","PriceContainerStyled","code","Price","_resolvePathname","resolveLocation","from","resolved","pathname","linkProps","location","_graphqlTag","_fragments","OrderTickerFragment","AddressFragment","CustomerFragment","_icons","_emotion","_TimeBadge","_useTimer","cancelIconPadding","deliverAt","deliveredAt","isCancelled","timerEnabled","now","useTimer","interval","MINUTE","enabled","ETimeBadgeVariant","UNKNOWN","TimeBadge","CancelOutlined","differenceInMinutes","NORMAL","WARNING","CRITICAL","exports","TimeBadgeStyled","white","variants","red","orange","bigNumberStyle","clickable","Variant","output","extraClassNames","toString","cx","_moment","cs","updateLocale","r","__webpack_exports__","d","FacebookStyle","InstagramStyle","CodeStyle","ListStyle","BulletListStyle","react__WEBPACK_IMPORTED_MODULE_0__","uid","Math","random","substring","Wrap","idClip","uniquekey","idGradient","animationValues","rtl","viewBox","height","preserveAspectRatio","fill","clipPath","x","y","offset","stopColor","primaryColor","stopOpacity","primaryOpacity","animate","attributeName","values","dur","speed","repeatCount","secondaryColor","secondaryOpacity","ContentLoader","rx","ry","cy","target","i","arguments","source","prototype","hasOwnProperty","call","InitialComponent","mergedProps","minutesOption","MinutesContainer","MinutesItem","_buildQuery","_buildSubscription","_OrderStateModel","_OrderMapMarker","_OrderTicker","OrderListQuery","OrderStateCategoryFragment","OrderMapMarkerFragment","OrderListSubscription","buildQuery","buildSubscription","subscription","_useEffectOnce","useEffectOnce","subscribeToMore","document","updateQuery","subscriptionData","GeoPointFragment","_ObserverWhen","_OrderDetail","OrderBoxStyled","Radiuses","Card","showBranch","toggleOrderDetail","isOrderDetailOpen","OrderTicker","ObserverWhen","test","renderSuccess","OrderDetail","orderId","_mobxReact","renderFailure","Observer","_color","_reactScroll","_CustomerIdentity","_DeliveryTimeBadge","OrderTickerStyled","Element","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","DeliveryTimeBadge","Cancel","formatAddress","address","CustomerIdentity","customer","totalSum","isPaidWithCard","lastName","firstName","defaultPhone","phone","_HorizontalSeparator","_ContactLines","_NoteLine","_OrderCountLine","_OrderDetailTotals","_OrderRuleLines","_OrderStats","_OrderTimeLine","_OrderWareList","_OrderStateFlow","OrderDetailContainerStyled","QueryOrderDetail","HorizontalSeparator","OrderWareList","orderWares","OrderDetailTotals","OrderRuleLines","rules","allAppliedRules","OrderCountLine","customerOrdersCountCurrent","total","customerOrdersCountTotal","ContactLines","phones","emails","NoteLine","note","previousNote","OrderTimeLine","orderTiming","OrderStats","OrderStateFlow","branchId","_IconLine","_LinkStyled","renderContact","contact","IconLine","description","isMail","href","replace","renderClickableLink","email","CurrentNoteStyled","span","PreviousNoteStyled","_OrderWareLine","OrderCartTotalsContainer","OrderWareLine","transportFee","coverPrice","totalDiscount","join","stats","formatTimeWithoutTodayDate","driver","Timelapse","labelMap","i18nMark","timing","orderWare","recipe","nameLabel","sidedishes","sidedish","_OrderStateDeliver","PriceFragment","EmailFragment","PhoneFragment","OrderDriverFragment","_verror","_OrderStateButton","_OrderStateFlowContainer","_OrderStateTimeNotification","OrderStateNewOrder","OrderStateFlowContainer","OrderStateTimeNotification","OrderStateButton","nextState","OrderStateEnum","Accepted","OrderStateAcceptedOrder","canDeliver","OrderStateDeliver","OrderStateOnWayOrder","observe","stateModel","QueryOrderState","allowedCategories","VError","deliveryType","DeliveryTypeEnum","Pickup","stateProps","stateLabels","text","updateOrderState","_OrderDriverSelect","QueryDriverSelection","drivers","orderDriver","refetch","OrderDriverSelect","selectedDriver","onReload","onClear","removeDriver","onSelect","selectDriver","deliverOrder","DriverName","backgroundColor","background","ButtonHeight","borderWidth","borderRadius","Button","valueContainer","singleValue","fontSize","isSearchable","noOptionsMessage","onMenuOpen","ValueContainer","DropdownIndicator","OrderStateFlowContainerWrapper","Control","Children","child","_DeliveryTimeDialog","DeliveryTimeDialog","sendTimeNotification","_reactDatepicker2","FormInputDateContainer","field","defaultValue","inputWidth","minDate","Field","fieldApi","date","setValue","FlexRow","_FlexColumn","_FlexRowSingle","_FormInputDate","_FormSubmit","StatisticsDateRangeFilter","observer","submitButton","statistics","FormInputDate","dateFrom","dateTo","FormSubmit","0","_createStatisticsQuery","_OrdersStatisticsLoader","context","useStatisticsQuery","createStatisticsQuery","OrdersStatisticsQuery","executeFilter","Form","onSubmit","updateFilter","Provider","_useExecutableQuery","_ClosureHistoryLoader","createContext","useExecutableQuery","ClosureHistoryQuery","closureBranch","formatDateISO","_CompanyBranchPicker","_ClosureCurrentButton","ButtonToRight","ClosureStatisticsFilter","showCurrent","CompanyBranchPicker","setClosureBranch","ClosureCurrentButton","MonospaceOutputStyled","p","RegExp","formatOutput","useObserver","setBranchFilter","clearBranchFilter","_DailyStatisticsLoader","DailyStatisticsQuery","_Card","_FullPageLayout","_ClosureHistoryTable","_ClosureStatisticsFilter","_StatisticsDateRangeFilter","ClosureHistoryLoader","FullPageLayout","pageTitle","useBackButton","backRoute","ClosureHistoryTable","_FlexRow","_Headline","_Loading","_RelativeLink","useClosureHistory","Loading","financialReports","report","RelativeLink","reportSequence","reportDatetime","_ClosureStatisticsContent","_ClosureStatisticsControl","ClosureStatisticsControl","params","reportId","ClosureStatisticsContent","_MonospaceOutput","QueryFinancialReport","showReport","lastReport","MonospaceOutput","plainData","FinancialReport","_useGuardedMutation","_useRouterContext","_ClosureHistoryButton","_ClosureSubmitButton","history","createClosure","useGuardedMutation","CreateFinancialReport","companyBranchId","ClosureSubmitButton","ClosureHistoryButton","_StatisticsBranchFilter","_DailyStatisticsContent","DailyStatisticsLoader","StatisticsBranchFilter","DailyStatisticsContent","useDailyStatistics","dailyStatisticsPlain","categoryStatisticsPlain","deliveryStatisticsPlain","driversStatisticsPlain","_PageLayout","_PageLayoutFullHeightItem","_OrdersStatisticsList","_OrdersStatisticsSummary","OrdersStatisticsLoader","PageLayoutFullHeightItem","OrdersStatisticsList","PageLayout","layouts","w","h","showSoundControl","scrollPageTitle","OrdersStatisticsSummary","_reactContentLoader","_CardListTitle","_OrderBox","orderModel","useOrderStatistics","BulletList","finishedOrders","OrderBox","StatPanel","StatLabel","h1","StatValue","currency","onlinePayments","ordersCount","fees","_PageLayoutItem","_ClosureButton","_DailyStatisticsButton","_OrdersStatisticsButton","PageLayoutItem","OrdersStatisticsButton","DailyStatisticsButton","ClosureButton"],"mappings":"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","file":"static/js/52.2f759ca7.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router'\n\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { ClosureHistoryPage } from '../pages/ClosureHistoryPage'\nimport { ClosurePage } from '../pages/ClosurePage'\nimport { DailyStatisticsPage } from '../pages/DailyStatisticsPage'\nimport { OrdersStatisticsPage } from '../pages/OrdersStatisticsPage'\nimport { OverviewPage } from '../pages/OverviewPage'\n\ninterface ISettingsRoutesProps extends RouteComponentProps<{}> {}\n\nexport const OverviewRoutes: React.SFC<ISettingsRoutesProps> = ({ match }) => (\n  <>\n    <PageTitle title={i18n.t`Overview`} />\n    <Switch>\n      <SecureRoute exact={true} path={match.path} component={OverviewPage} />\n      <SecureRoute\n        path={`${match.path}/closure/history`}\n        component={ClosureHistoryPage}\n      />\n      <SecureRoute\n        path={`${match.path}/closure/:reportId?`}\n        component={ClosurePage}\n      />\n      <SecureRoute\n        path={`${match.path}/statistics`}\n        component={DailyStatisticsPage}\n      />\n      <SecureRoute\n        path={`${match.path}/orders`}\n        component={OrdersStatisticsPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n)\n\nexport default OverviewRoutes\n","import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.SFC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.SFC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return user.canMutate(mutationName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IHeadlineProps {\n  margin?: string\n  size?: 'smaller'\n  light?: boolean\n}\n\nconst getMargin = ({ margin = '0 0.5rem 0 0.5rem' }: IHeadlineProps) => margin\n\nconst getFontSize = ({ size }: IHeadlineProps) => size === 'smaller' && '1rem'\n\nconst getColor = ({ light = false }: IHeadlineProps) =>\n  light ? Colors.greyLight : Colors.greyDarkest\n\nexport const Headline = styled.h2`\n  color: ${getColor};\n  font-weight: lighter;\n  margin: ${getMargin};\n  font-size: ${getFontSize};\n`\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.SFC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.SFC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.SFC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return user.canQuery(queryName) ? (\n    <>{children}</>\n  ) : (\n    <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.SFC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import styled from 'styled-components'\n\ninterface IFlexColumnProps {\n  fixedWidth?: boolean\n  width?: string\n  widthGrowIndex?: number\n  padding?: string\n  margin?: string\n}\n\nexport const FlexColumn = styled.div`\n  flex: ${getFlexValue};\n  padding: ${getPadding};\n  margin: ${getMargin};\n`\n\nfunction getFlexValue({\n  fixedWidth = false,\n  width,\n  widthGrowIndex = 0,\n}: IFlexColumnProps) {\n  return fixedWidth ? (width ? `0 0 ${width}` : '0 0') : `${widthGrowIndex} 0`\n}\n\nfunction getPadding({ padding = '0.25rem' }: IFlexColumnProps) {\n  return padding\n}\n\nfunction getMargin({ margin = '' }: IFlexColumnProps) {\n  return margin\n}\n","import { SnackbarContextNext } from 'notistack/build/SnackbarContext'\nimport { useCallback, useContext } from 'react'\n\nenum EVariant {\n  default = 'default',\n  error = 'error',\n  success = 'success',\n  warning = 'warning',\n  info = 'info',\n}\n\ninterface IEnqueueOptions {\n  /** Type of the snackbar */\n  variant: EVariant\n  /** Event fired when user clicks on action button (if any) */\n  onClickAction(): void\n  /**\n   * You can pass material-ui Snackbar props here, and they will be applied to this individual snackbar.\n   * for example, this particular snackbar will be dismissed after 1sec.\n   */\n  autoHideDuration: number\n  action: ReactNode[]\n}\n\ninterface IEnqueueSnackbar {\n  (message: string, options?: Partial<IEnqueueOptions>)\n}\n\nconst successVariant = { variant: EVariant.success }\nconst errorVariant = { variant: EVariant.error }\nconst warningVariant = { variant: EVariant.warning }\nconst infoVariant = { variant: EVariant.info }\n\nexport function useSnackBar() {\n  const enqueueSnackbar: IEnqueueSnackbar = useContext(SnackbarContextNext)\n  const enqueueSuccess = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, successVariant),\n    [],\n  )\n  const enqueueError = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, errorVariant),\n    [],\n  )\n  const enqueueWarning = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, warningVariant),\n    [],\n  )\n  const enqueueInfo = useCallback(\n    (errorMessage: string) => enqueueSnackbar(errorMessage, infoVariant),\n    [],\n  )\n  return {\n    enqueueSnackbar,\n    enqueueSuccess,\n    enqueueError,\n    enqueueWarning,\n    enqueueInfo,\n  }\n}\n","import { useContext } from 'react'\nimport * as Router from 'react-router'\n\nexport default function useRouterContext<\n  Params extends { [K in keyof Params]?: string } = {}\n>(): Router.RouteComponentProps<Params> {\n  // @ts-ignore\n  return useContext(Router.__RouterContext)\n}\n\n// export default function useRouter<\n// Params extends { [K in keyof Params]?: string } = {}\n// >(): Router.RouteComponentProps<Params> {\n//   // @ts-ignore\n//   let context = useContext(Router.__RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n\n// }\n\n// export default function useRouter(options = {}) {\n//   invariant(\n//     typeof useContext === \"function\",\n//     \"The useRouter hook requires React 16.7 or greater\"\n//   );\n\n//   let context = useContext(RouterContext);\n//   let location = options.location || context.location;\n//   let match = options.path\n//     ? matchPath(location.pathname, options)\n//     : context.match;\n\n//   return { ...context, location, match };\n// }\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import React from 'react'\n\nimport { formatPrice } from '../helpers/formats'\n\ninterface IPriceProps {\n  price: number\n  currencyCode?: string\n  className?: string\n}\n\nexport const Price: React.SFC<IPriceProps> = ({\n  price,\n  currencyCode,\n  className,\n}) => (\n  <span className={className}>\n    {currencyCode\n      ? `${formatPrice(price)} ${currencyCode}`\n      : formatPrice(price)}\n  </span>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem != null\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import React from 'react'\nimport { FormApi } from 'react-form'\n\nimport { isFormValid } from '../helpers/form'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const FormSubmit: React.SFC<IProps> = ({ children, ...props }) => (\n  <FormApi>\n    {form => (\n      <TouchButton\n        color={Colors.green}\n        disabled={!isFormValid(form) || form.submitting}\n        onClick={e => {\n          e.preventDefault()\n          form.submitForm(e)\n        }}\n        {...props}\n      >\n        {children}\n      </TouchButton>\n    )}\n  </FormApi>\n)\n","import { IFormState } from 'react-form'\nimport { isEmpty } from 'validator'\n\nimport { i18n } from '../i18n'\n\nexport function isFormValid(formState: IFormState) {\n  return !formState.errors || Object.keys(formState.errors).length === 0\n}\n\nexport function validateIsRequired(fieldName: string) {\n  return (value: string) =>\n    isEmpty(value + '') ? i18n.t`${fieldName} must be entered` : null\n}\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = GCompanyBranch.Fragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import { Trans } from '@lingui/react'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport Raven from 'raven-js'\nimport React, { useCallback } from 'react'\nimport { MutationHookOptions, useMutation } from 'react-apollo-hooks'\n\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\nimport { TouchButton } from '../molecules/TouchButton'\nimport { useSnackBar } from './useSnackBar'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {\n  getUserErrors?(data: TData): ReadonlyArray<string> | null\n}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const { enqueueSnackbar, enqueueError, enqueueInfo } = useSnackBar()\n\n  const handleUserErrors = useCallback((userErrors: ReadonlyArray<string>) => {\n    userErrors.forEach(enqueueInfo)\n  }, [])\n\n  const handleGraphQLErrors = useCallback(\n    (errors: ReadonlyArray<GraphQLError>) => {\n      const userErrors = errors.filter(RM.propEq('showToUser', true))\n      if (userErrors.length === 0) {\n        enqueueError(defaultMessage)\n      } else {\n        handleUserErrors(userErrors.map(RM.prop('message')))\n      }\n    },\n    [],\n  )\n\n  const handleError = useCallback((err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        enqueueError(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n    enqueueSnackbar(defaultMessage, {\n      action: [<ShowFeedbackButton key=\"feedback\" />],\n    })\n  }, [])\n\n  const mutate = useMutation(mutation, options)\n  return async (variables: TVariables) => {\n    try {\n      const result = await mutate({ variables })\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      const data = result.data as TData\n      if (options.getUserErrors) {\n        const userErrors = options.getUserErrors(data)\n        if (userErrors !== null) {\n          handleUserErrors(userErrors)\n        }\n      }\n      return data\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n\nfunction ShowFeedbackButton() {\n  return (\n    <TouchButton onClick={() => Raven.showReportDialog()}>\n      <Trans> Submit feedback </Trans>\n    </TouchButton>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { GCompanyBranch } from '../graph/types'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<GCompanyBranch.Fragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<GCompanyBranch.Fragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.SFC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<GCompanyBranch.Fragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    options={branches as GCompanyBranch.Fragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import { ApolloError, QueryOptions } from 'apollo-client'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport { getOperationName } from 'apollo-utilities'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { runInAction } from 'mobx'\nimport { useObservable } from 'mobx-react-lite'\n\nimport { useApolloClient } from '../atoms/RootProvider'\nimport { reportError, reportFailingQuery } from '../helpers/sentry'\n\nexport interface IQueryResult<TData> {\n  data: Maybe<TData>\n  loading: boolean\n  errors?: GraphQLError[]\n  error?: ApolloError\n  hasAnyError: boolean\n  wasExecuted: boolean\n}\n\nexport function useExecutableQuery<TData, TVariables>(\n  query: DocumentNode,\n  options: Partial<QueryOptions<TVariables>> = {},\n) {\n  const client = useApolloClient()\n  const result: IQueryResult<TData> = useObservable({\n    data: null,\n    loading: false,\n    wasExecuted: false,\n    get hasAnyError() {\n      return Boolean((result.errors && result.errors.length) || result.error)\n    },\n  })\n  const execute = async (variables: TVariables) => {\n    result.loading = true\n    try {\n      const queryResult = await client.query<TData, TVariables>({\n        ...options,\n        query,\n        variables,\n      })\n      runInAction(() => {\n        result.wasExecuted = true\n        result.data = queryResult.data\n        result.errors = queryResult.errors\n        result.loading = false\n      })\n    } catch (err) {\n      if (isApolloError(err)) {\n        runInAction(() => {\n          result.error = err\n          result.errors = err.graphQLErrors\n          result.loading = false\n        })\n      } else {\n        runInAction(() => {\n          result.error = err\n          result.loading = false\n        })\n        reportError(err)\n      }\n    }\n    if (result.errors) {\n      reportFailingQuery(result.errors, {\n        query: getOperationName(query),\n        variables,\n      })\n    }\n    return result\n  }\n  return { result, execute }\n}\n","import { differenceInHours } from 'date-fns'\nimport React from 'react'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport {\n  GOrderList,\n  OrderStateCategoryEnum,\n  SOrderList,\n} from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { QueryOrderList, SubscribeOrderList } from './OrderListLoader.graphql'\n\nconst knownCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n  OrderStateCategoryEnum.OnWay,\n  OrderStateCategoryEnum.Finished,\n]\n\nexport type TOrder = GOrderList.Orders\n\nexport type TCategorizedOrders = { [state in OrderStateCategoryEnum]: TOrder[] }\n\nexport interface ILoaderProps {\n  isLoading: boolean\n  noFilter: boolean\n  orders?: ReadonlyArray<TOrder>\n  categorizedOrders?: TCategorizedOrders\n  categories?: ReadonlyArray<GOrderList.OrderStateCategories>\n}\n\ninterface IProps {\n  children(props: ILoaderProps): ReactNode\n  includeOldFinished?: boolean\n}\n\nexport const OrderListLoader: React.SFC<IProps> = ({\n  children,\n  includeOldFinished = false,\n}) => (\n  <WithRoot\n    render={root => {\n      if (!root.order.list.hasBranchFilter) {\n        return children({ isLoading: false, noFilter: true })\n      }\n      const variables: GOrderList.Variables = {\n        branches: root.order.list.branchesFilter,\n        categories: knownCategories,\n        includeOldFinished,\n      }\n      return (\n        <QueryOrderList\n          fetchPolicy=\"cache-and-network\"\n          refetchOnConnectionLost={true}\n          variables={variables}\n          renderLoading={false}\n          render={(\n            { orders = [], orderStateCategories: categories = [] },\n            result,\n          ) => {\n            return (\n              <SubscribeOrderList\n                queryResult={result}\n                variables={variables}\n                handleUpdate={handleSubscriptionUpdate}\n              >\n                {children({\n                  isLoading: result.loading,\n                  noFilter: false,\n                  orders,\n                  categorizedOrders: categorizeOrders(orders),\n                  categories: categories.filter(category =>\n                    knownCategories.includes(category.enum),\n                  ),\n                })}\n              </SubscribeOrderList>\n            )\n          }}\n        />\n      )\n    }}\n  />\n)\n\nexport function getOrderState(order: {\n  orderStateCategory: OrderStateCategoryEnum\n}) {\n  return order.orderStateCategory\n}\n\nfunction categorizeOrders(orders: ReadonlyArray<TOrder>) {\n  return orders.reduce(\n    (result, order) => {\n      const category = getOrderState(order)\n      if (!knownCategories.includes(category)) {\n        return result\n      }\n      if (!result[category]) {\n        result[category] = [order]\n      } else {\n        result[category].push(order)\n      }\n      return result\n    },\n    {} as TCategorizedOrders,\n  )\n}\n\nfunction handleSubscriptionUpdate(\n  update: SOrderList.Subscription,\n  prev: GOrderList.Query,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  let orderExists = false\n  const orders = RM.reject(isOldFinishedOrder, prev.orders).map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { ...prev, orders }\n}\n\nfunction isOldFinishedOrder(order: GOrderList.Orders) {\n  return (\n    order.orderStateCategory === OrderStateCategoryEnum.Finished &&\n    differenceInHours(new Date(), order.createdAt) >\n      order.companyBranch.oldOrderThreshold\n  )\n}\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const CardListTitle = styled.h2`\n  color: ${Colors.greyLight};\n  font-weight: lighter;\n  font-size: 1.2rem;\n  margin: 0.8rem 0 0.8rem 0.3rem;\n`\n","import { Trans } from '@lingui/react'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport React, { MutableRefObject, useState } from 'react'\n\nimport { DeliveryMinutes } from '../atoms/DeliveryMinutes'\nimport { TouchButton } from './TouchButton'\n\ninterface IProps {\n  title: string\n  cancelText?: string\n  onConfirm(minutes: number): void\n  onCancel?(): void\n  refApi?: MutableRefObject<Maybe<IDeliveryTimeDialogApi>>\n  children?(props: IDeliveryTimeDialogApi): React.ReactElement<{}>\n}\n\nexport interface IDeliveryTimeDialogApi {\n  openDialog(): void\n  closeDialog(): void\n}\n\nexport const DeliveryTimeDialog: React.FC<IProps> = ({\n  title,\n  onConfirm,\n  onCancel,\n  children,\n  cancelText,\n  refApi,\n}) => {\n  const [isOpen, setOpen] = useState(false)\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  if (refApi) {\n    refApi.current = { openDialog, closeDialog }\n  }\n\n  return (\n    <>\n      {children && children({ openDialog, closeDialog })}\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DeliveryMinutes\n            onMinuteClick={minutes => {\n              closeDialog()\n              onConfirm(minutes)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <TouchButton\n            onClick={() => {\n              closeDialog()\n              if (onCancel) {\n                onCancel()\n              }\n            }}\n          >\n            {cancelText ? cancelText : <Trans>Cancel</Trans>}\n          </TouchButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { GCompanyBranch } from '../graph/types'\n\ninterface ICompanyBranchProps {\n  branch: GCompanyBranch.Fragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.SFC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { GCompanyBranch } from '../graph/types'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.SFC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<GCompanyBranch.Fragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.SFC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { Colors } from '../../../styling'\n\ninterface IOrderWareLineProps {\n  code?: string\n  label: string\n  price: number\n}\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 3rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 5rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 4.5rem;\n  text-align: right;\n  color: ${Colors.greyMiddle};\n`\n\nexport const OrderWareLine: React.SFC<IOrderWareLineProps> = ({\n  code,\n  label,\n  price,\n}) => (\n  <OrderWareLineWrap>\n    <CodeContainerStyled>{code}</CodeContainerStyled>\n\n    <NameContainerStyled>{label}</NameContainerStyled>\n    <PriceContainerStyled>\n      <Price price={price} />\n    </PriceContainerStyled>\n  </OrderWareLineWrap>\n)\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.SFC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import gql from 'graphql-tag'\n\nimport { AddressFragment, CustomerFragment } from '../../../graph/fragments'\n\nexport const OrderTickerFragment = gql`\n  fragment GOrderListTicker on Order {\n    id\n    createdAt\n    isPaidWithCard\n    deliverAt\n    deliverAtWorst\n    deliveredAt\n    companyBranch {\n      id\n      name\n      oldOrderThreshold\n    }\n    address {\n      ...GAddress\n    }\n    customer {\n      ...GCustomer\n    }\n    totalSum {\n      value\n    }\n  }\n  ${AddressFragment}\n  ${CustomerFragment}\n`\n","import { CancelOutlined } from '@material-ui/icons'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { DateTime } from '../../../graph/types'\nimport { MINUTE, useTimer } from '../../../hooks/useTimer'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<DateTime>\n  deliveredAt: Maybe<DateTime>\n  isCancelled?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\n\nexport const DeliveryTimeBadge: React.SFC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n}\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 1.5rem;\n  width: 1.5rem;\n  padding: 0.4rem 0.3rem 0.1rem 0.3rem;\n  border: 1px solid white;\n  border-radius: 4rem;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n  padding: 0.6rem 0.3rem 0 0.3rem;\n`\n\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.SFC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames: string[] = []\n  if (minutes !== undefined) {\n    if (minutes < -99) {\n      output = '➖'\n    } else {\n      output = minutes.toString()\n    }\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant onClick={onClick} className={cx(className, ...extraClassNames)}>\n      {output}\n    </Variant>\n  )\n}\n","import moment from 'moment'\n\nconst cs = require('moment/locale/cs')\n\nmoment.updateLocale('cs', cs)\n\nexport default moment\n","import { createElement } from 'react';\n\nvar uid = function uid() {\n  return Math.random().toString(36).substring(2);\n};\n\nvar Wrap = function Wrap(props) {\n  var idClip = props.uniquekey ? props.uniquekey + \"-idClip\" : uid();\n  var idGradient = props.uniquekey ? props.uniquekey + \"-idGradient\" : uid();\n  var defautlAnimation = [\"-3; 1\", \"-2; 2\", \"-1; 3\"];\n  var rtlAnimation = [\"1; -3\", \"2; -2\", \"3; -1\"];\n  var animationValues = props.rtl ? rtlAnimation : defautlAnimation;\n  return createElement(\"svg\", {\n    viewBox: \"0 0 \" + props.width + \" \" + props.height,\n    style: props.style,\n    preserveAspectRatio: props.preserveAspectRatio,\n    className: props.className\n  }, createElement(\"rect\", {\n    style: {\n      fill: \"url(#\" + idGradient + \")\"\n    },\n    clipPath: \"url(#\" + idClip + \")\",\n    x: \"0\",\n    y: \"0\",\n    width: props.width,\n    height: props.height\n  }), createElement(\"defs\", null, createElement(\"clipPath\", {\n    id: idClip\n  }, props.children), createElement(\"linearGradient\", {\n    id: idGradient\n  }, createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: props.primaryColor,\n    stopOpacity: props.primaryOpacity\n  }, props.animate && createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: animationValues[0],\n    dur: props.speed + \"s\",\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: \"50%\",\n    stopColor: props.secondaryColor,\n    stopOpacity: props.secondaryOpacity\n  }, props.animate && createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: animationValues[1],\n    dur: props.speed + \"s\",\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: props.primaryColor,\n    stopOpacity: props.primaryOpacity\n  }, props.animate && createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: animationValues[2],\n    dur: props.speed + \"s\",\n    repeatCount: \"indefinite\"\n  })))));\n};\n\nvar FacebookStyle = function FacebookStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"rect\", {\n    x: \"70\",\n    y: \"15\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"117\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"70\",\n    y: \"35\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"85\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"80\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"350\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"100\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"380\",\n    height: \"6.4\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"120\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"201\",\n    height: \"6.4\"\n  }), createElement(\"circle\", {\n    cx: \"30\",\n    cy: \"30\",\n    r: \"30\"\n  }));\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar InstagramStyle = function InstagramStyle(props) {\n  return createElement(ContentLoader, _extends({}, props, {\n    height: 480\n  }), createElement(\"circle\", {\n    cx: \"30\",\n    cy: \"30\",\n    r: \"30\"\n  }), createElement(\"rect\", {\n    x: \"75\",\n    y: \"13\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"100\",\n    height: \"13\"\n  }), createElement(\"rect\", {\n    x: \"75\",\n    y: \"37\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"50\",\n    height: \"8\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"70\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"400\",\n    height: \"400\"\n  }));\n};\n\nvar CodeStyle = function CodeStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"70\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"80\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"100\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"190\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"10\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"15\",\n    y: \"20\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"130\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"155\",\n    y: \"20\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"130\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"15\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"90\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"115\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"60\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"185\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"60\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"60\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"30\",\n    height: \"10\"\n  }));\n};\n\nvar ListStyle = function ListStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"250\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"20\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"40\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"170\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"0\",\n    y: \"60\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"250\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"80\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"200\",\n    height: \"10\"\n  }), createElement(\"rect\", {\n    x: \"20\",\n    y: \"100\",\n    rx: \"3\",\n    ry: \"3\",\n    width: \"80\",\n    height: \"10\"\n  }));\n};\n\nvar BulletListStyle = function BulletListStyle(props) {\n  return createElement(ContentLoader, props, createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"20\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"15\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"50\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"45\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"80\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"75\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }), createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"110\",\n    r: \"8\"\n  }), createElement(\"rect\", {\n    x: \"25\",\n    y: \"105\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"220\",\n    height: \"10\"\n  }));\n};\n\nvar defaultProps = {\n  animate: true,\n  height: 130,\n  preserveAspectRatio: \"xMidYMid meet\",\n  primaryColor: \"#f0f0f0\",\n  primaryOpacity: 1,\n  rtl: false,\n  secondaryColor: \"#e0e0e0\",\n  secondaryOpacity: 1,\n  speed: 2,\n  width: 400\n};\n\nvar InitialComponent = function InitialComponent(props) {\n  return createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"5\",\n    ry: \"5\",\n    width: props.width,\n    height: props.height\n  });\n};\n\nvar ContentLoader = function ContentLoader(props) {\n  var mergedProps = _extends({}, defaultProps, props);\n\n  var children = props.children ? props.children : createElement(InitialComponent, mergedProps);\n  return createElement(Wrap, mergedProps, children);\n};\n\nexport { defaultProps, FacebookStyle as Facebook, InstagramStyle as Instagram, CodeStyle as Code, ListStyle as List, BulletListStyle as BulletList };\nexport default ContentLoader;","import React from 'react'\nimport styled from 'styled-components'\n\nimport { TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps {\n  onMinuteClick(minute: number): void\n}\n\nconst minutesOption = [20, 30, 45, 60, 75, 90, 105, 120]\n\nconst MinutesContainer = styled.div`\n  display: flex;\n  justify-content: 'center';\n  flex-wrap: 'wrap';\n  font-size: 2rem;\n`\nconst MinutesItem = styled.div`\n  margin: 1rem 1rem 0 0;\n`\n\nexport const DeliveryMinutes: React.FC<IProps> = ({ onMinuteClick }) => {\n  return (\n    <MinutesContainer>\n      {minutesOption.map(minutes => (\n        <MinutesItem key={minutes}>\n          <TouchButton\n            onClick={() => {\n              onMinuteClick(minutes)\n            }}\n            color={Colors.green}\n          >\n            {minutes}\n          </TouchButton>\n        </MinutesItem>\n      ))}\n    </MinutesContainer>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { buildSubscription } from '../../../graph/buildSubscription'\nimport { GOrderList, SOrderList } from '../../../graph/types'\nimport { OrderStateCategoryFragment } from '../models/OrderStateModel.graphql'\nimport { OrderMapMarkerFragment } from '../molecules/OrderMapMarker.graphql'\nimport { OrderTickerFragment } from '../molecules/OrderTicker.graphql'\n\nconst OrderListQuery = gql`\n  query GOrderList(\n    $branches: [ID!]\n    $categories: [OrderStateCategoryEnum!]\n    $includeOldFinished: Boolean\n  ) {\n    orders(\n      order: {\n        companyBranches: $branches\n        orderStateCategoriesOR: $categories\n        includeOldFinished: $includeOldFinished\n      }\n    ) {\n      id\n      ...GOrderStateCategory\n      ...GOrderListTicker\n      ...GOrderMapMarker\n    }\n    orderStateCategories {\n      code\n      enum\n    }\n  }\n\n  ${OrderStateCategoryFragment}\n  ${OrderMapMarkerFragment}\n  ${OrderTickerFragment}\n`\n\nconst OrderListSubscription = gql`\n  subscription SOrderList(\n    $branches: [ID!]\n    $categories: [OrderStateCategoryEnum!]\n  ) {\n    updatedOrder(\n      companyBranches: $branches\n      orderStateCategoriesOR: $categories\n    ) {\n      order {\n        id\n        ...GOrderStateCategory\n        ...GOrderListTicker\n        ...GOrderMapMarker\n      }\n    }\n  }\n  ${OrderStateCategoryFragment}\n  ${OrderMapMarkerFragment}\n  ${OrderTickerFragment}\n`\n\nexport const QueryOrderList = buildQuery<\n  GOrderList.Query,\n  GOrderList.Variables\n>(OrderListQuery)\n\nexport const SubscribeOrderList = buildSubscription<\n  SOrderList.Subscription,\n  SOrderList.Variables,\n  GOrderList.Query\n>(OrderListSubscription)\n","import { DocumentNode } from 'graphql'\nimport { QueryResult } from 'react-apollo'\n\nimport { useEffectOnce } from '../hooks/useEffectOnce'\n\nexport function buildSubscription<TSubscription, TVariables, TQuery = {}>(\n  subscription: DocumentNode,\n) {\n  type TResult = QueryResult<TQuery, TVariables>\n  interface IProps {\n    children: ReactNode\n    queryResult: TResult\n    variables: TVariables\n    handleUpdate(updatedData: TSubscription, prevData: TQuery): TQuery | void\n  }\n  function GSubscription(props: IProps) {\n    useEffectOnce(() => {\n      const { queryResult, variables, handleUpdate } = props\n      return queryResult.subscribeToMore({\n        document: subscription,\n        variables,\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!(subscriptionData && subscriptionData.data)) {\n            return prev\n          }\n          // @ts-ignore Bad typing of updateQuery using TQuery\n          return handleUpdate(subscriptionData.data, prev) || prev\n        },\n      })\n    })\n    return props.children\n  }\n  return GSubscription\n}\n","import gql from 'graphql-tag'\n\nimport { GeoPointFragment } from '../../../graph/fragments'\n\nexport const OrderMapMarkerFragment = gql`\n  fragment GOrderMapMarker on Order {\n    id\n    deliverAt\n    gps {\n      ...GGeoPoint\n    }\n  }\n  ${GeoPointFragment}\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ObserverWhen } from '../../../atoms/ObserverWhen'\nimport { GOrderListTicker, GOrderStateCategory } from '../../../graph/types'\nimport { Colors, Radiuses } from '../../../styling'\nimport { OrderTicker } from '../molecules/OrderTicker'\nimport { OrderDetail } from '../organisms/OrderDetail'\n\ntype TOrder = GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n\ninterface IProps {\n  order: TOrder\n  showBranch: boolean\n  toggleOrderDetail(order: TOrder): void\n  isOrderDetailOpen(orderId: string): boolean\n}\n\nexport const OrderBoxStyled = styled.div`\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: 0.5rem;\n  position: relative;\n`\n\nexport const OrderBox: React.SFC<IProps> = ({\n  order,\n  showBranch,\n  toggleOrderDetail,\n  isOrderDetailOpen,\n}) => (\n  <OrderBoxStyled id={`order-${order.id}`}>\n    <OrderTicker\n      order={order}\n      showBranch={showBranch}\n      onClick={() => toggleOrderDetail(order)}\n    />\n    <ObserverWhen\n      test={() => isOrderDetailOpen(order.id)}\n      renderSuccess={() => <OrderDetail orderId={order.id} />}\n    />\n  </OrderBoxStyled>\n)\n","import { Observer } from 'mobx-react'\nimport React from 'react'\n\ninterface IObserverWhenProps {\n  test(): boolean\n  renderSuccess(): ReactNode\n  renderFailure?(): ReactNode\n}\n\nexport const ObserverWhen: React.SFC<IObserverWhenProps> = ({\n  test,\n  renderSuccess,\n  renderFailure,\n}) => (\n  <Observer\n    render={() =>\n      test() ? renderSuccess() : renderFailure ? renderFailure() : null\n    }\n  />\n)\n","import { Trans } from '@lingui/react'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport {\n  GOrderListTicker,\n  GOrderStateCategory,\n  OrderStateCategoryEnum,\n} from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\n\ninterface IOrderTickerProps {\n  onClick(): void\n  order: GOrderListTicker.Fragment & GOrderStateCategory.Fragment\n  showBranch: boolean\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nconst ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nexport const OrderTicker: React.SFC<IOrderTickerProps> = ({\n  order,\n  showBranch,\n  onClick,\n}) => (\n  <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n    {showBranch && (\n      <ToBranchContainerStyled>\n        {order.companyBranch.name}\n      </ToBranchContainerStyled>\n    )}\n\n    <OrderTickerMainContentStyled>\n      <DeliveryTimeBadgeContainerStyled>\n        <DeliveryTimeBadge\n          deliverAt={order.deliverAt}\n          deliveredAt={order.deliveredAt}\n          isCancelled={\n            order.orderStateCategory === OrderStateCategoryEnum.Cancel\n          }\n        />\n      </DeliveryTimeBadgeContainerStyled>\n\n      <AddressDisplayContainerStyled>\n        {formatAddress(order.address)}\n      </AddressDisplayContainerStyled>\n\n      <CustomerIdentityContainerStyled>\n        <CustomerIdentity customer={order.customer} />\n      </CustomerIdentityContainerStyled>\n\n      <PriceContainerStyled>\n        <Price price={order.totalSum.value} />\n        {order.isPaidWithCard && (\n          <>\n            <PaidMarkStyled />\n            <PaidTextStyled>\n              <Trans>Paid</Trans>\n            </PaidTextStyled>\n          </>\n        )}\n      </PriceContainerStyled>\n    </OrderTickerMainContentStyled>\n  </OrderTickerStyled>\n)\n","import React from 'react'\n\nimport { GCustomer } from '../../../graph/types'\n\ninterface ICustomerNameProps {\n  customer: GCustomer.Fragment | null\n}\n\nexport const CustomerIdentity: React.SFC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { ContactLines } from '../molecules/ContactLines'\nimport { NoteLine } from '../molecules/NoteLine'\nimport { OrderCountLine } from '../molecules/OrderCountLine'\nimport { OrderDetailTotals } from '../molecules/OrderDetailTotals'\nimport { OrderRuleLines } from '../molecules/OrderRuleLines'\nimport { OrderStats } from '../molecules/OrderStats'\nimport { OrderTimeLine } from '../molecules/OrderTimeLine'\nimport { OrderWareList } from '../molecules/OrderWareList'\nimport { QueryOrderDetail } from './OrderDetail.graphql'\nimport { OrderStateFlow } from './OrderStateFlow'\n\ninterface IOrderDetailProps {\n  orderId: string\n}\n\nconst OrderDetailContainerStyled = styled.div`\n  padding: 0 0.5rem 0.5rem 1.1rem;\n`\n\nexport const OrderDetail: React.SFC<IOrderDetailProps> = ({ orderId }) => (\n  <QueryOrderDetail\n    variables={{ id: orderId }}\n    fetchPolicy=\"cache-and-network\"\n    render={({ order }) => (\n      <>\n        <OrderDetailContainerStyled>\n          <HorizontalSeparator />\n          <OrderWareList orderWares={order.items} />\n          <OrderDetailTotals order={order} />\n          <OrderRuleLines rules={order.allAppliedRules}>\n            <OrderCountLine\n              current={order.customerOrdersCountCurrent}\n              total={order.customerOrdersCountTotal}\n            />\n          </OrderRuleLines>\n          <ContactLines\n            phones={order.customer.phones}\n            emails={order.customer.emails}\n          />\n          <NoteLine note={order.note} previousNote={order.previousNote} />\n          <HorizontalSeparator />\n          <OrderTimeLine orderTiming={order.orderTiming} />\n          <OrderStats order={order} />\n        </OrderDetailContainerStyled>\n        <OrderStateFlow orderId={orderId} branchId={order.companyBranch.id} />\n      </>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { GEmail, GPhone } from '../../../graph/types'\n\ninterface IContactLinesProps {\n  phones: ReadonlyArray<GPhone.Fragment>\n  emails: ReadonlyArray<GEmail.Fragment>\n}\n\ntype Contact = {\n  icon: string\n  isMail: boolean\n  value: string\n} & (GPhone.Fragment | GEmail.Fragment)\n\nexport const ContactLines: React.SFC<IContactLinesProps> = ({\n  phones,\n  emails,\n}) => {\n  const renderClickableLink = (contact: Contact) =>\n    contact.isMail ? (\n      <LinkStyled href={`mailto:${contact.value}`}>{contact.value}</LinkStyled>\n    ) : (\n      <LinkStyled href={`tel:${contact.value.replace('/ /g', '')}`}>\n        {contact.value}\n      </LinkStyled>\n    )\n\n  const renderContact = (contact: Contact) => (\n    <IconLine icon={contact.icon} key={contact.value} labelMargin=\"0\">\n      <div title={contact.description || ''}>\n        {renderClickableLink(contact)}\n      </div>\n    </IconLine>\n  )\n  return (\n    <>\n      {(phones.length > 0 || emails.length > 0) && <HorizontalSeparator />}\n      {phones.map(phone =>\n        renderContact({\n          icon: 'phone',\n          isMail: false,\n          value: phone.phone,\n          ...phone,\n        }),\n      )}\n      {emails.map(email =>\n        renderContact({\n          icon: 'mail_outline',\n          isMail: true,\n          value: email.email,\n          ...email,\n        }),\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.SFC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import { Plural, SelectOrdinal, Trans } from '@lingui/react'\nimport React from 'react'\n\ninterface IProps {\n  current: number\n  total: number\n}\n\nexport const OrderCountLine: React.SFC<IProps> = ({ current, total }) => (\n  <Trans>\n    It's customer's{' '}\n    <SelectOrdinal value={current} one=\"#st\" two=\"#nd\" few=\"#rd\" other=\"#th\" />{' '}\n    order <Plural value={total} one=\"\" other=\"from total of # orders\" />\n  </Trans>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nconst OrderCartTotalsContainer = styled.div`\n  margin: 0 0 0 auto;\n  width: 20rem;\n  text-align: right;\n`\n\nexport const OrderDetailTotals: React.SFC<IProps> = ({ order }) => (\n  <OrderCartTotalsContainer>\n    <OrderWareLine\n      label={i18n.t`Transport fee`}\n      price={order.transportFee.value}\n    />\n    <OrderWareLine\n      label={i18n.t`Covers price`}\n      price={order.coverPrice.value}\n    />\n    <OrderWareLine\n      label={i18n.t`Discount total`}\n      price={order.totalDiscount.value * -1}\n    />\n    <b>\n      <OrderWareLine label={i18n.t`Total price`} price={order.totalSum.value} />\n    </b>\n  </OrderCartTotalsContainer>\n)\n","import React from 'react'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\n\ninterface IOrderRuleLinesProps {\n  rules: ReadonlyArray<string>\n}\n\nexport const OrderRuleLines: React.SFC<IOrderRuleLinesProps> = ({\n  rules,\n  children,\n}) =>\n  rules.length > 0 || children ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"announcement\" labelMargin=\"0\">\n        {children}\n        <br />\n        {rules.join(', ')}\n      </IconLine>\n    </>\n  ) : null\n","import { Trans } from '@lingui/react'\nimport { Timelapse } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GOrderDetail } from '../../../graph/types'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\n\ninterface IProps {\n  order: GOrderDetail.Order\n}\n\nconst LabelStyled = styled.i`\n  padding-left: 1rem;\n  font-size: 0.8rem;\n`\n\nexport const OrderStats: React.SFC<IProps> = ({ order }) => {\n  const stats: ReactNode[] = []\n  if (order.deliverAt) {\n    stats.push(\n      <div key=\"deliverAt\">\n        {formatTimeWithoutTodayDate(order.deliverAt)}\n        <LabelStyled>\n          <Trans>Deliver on time</Trans>\n        </LabelStyled>\n      </div>,\n    )\n  }\n  if (order.driver) {\n    const { firstName, lastName } = order.driver.user\n    stats.push(\n      <div key=\"driver\">\n        {`${firstName} ${lastName}`}\n        <LabelStyled>\n          <Trans>Driver</Trans>\n        </LabelStyled>\n      </div>,\n    )\n  }\n  if (stats.length === 0) {\n    return null\n  }\n  return (\n    <IconLine icon={Timelapse} labelMargin=\"0\">\n      {stats}\n    </IconLine>\n  )\n}\n","import { i18nMark } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GOrderDetail, OrderStateCategoryEnum } from '../../../graph/types'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  orderTiming: ReadonlyArray<GOrderDetail.OrderTiming>\n}\n\nconst LabelStyled = styled.i`\n  padding-left: 1rem;\n  font-size: 0.8rem;\n`\n\nconst labelMap = {\n  [OrderStateCategoryEnum.NewOrders]: i18nMark('Created'),\n  [OrderStateCategoryEnum.Preparing]: i18nMark('Preparing'),\n  [OrderStateCategoryEnum.ReadyToDeliver]: i18nMark('Ready to deliver'),\n  [OrderStateCategoryEnum.OnWay]: i18nMark('On way'),\n  [OrderStateCategoryEnum.Finished]: i18nMark('Finished'),\n}\n\nexport const OrderTimeLine: React.SFC<IProps> = ({ orderTiming }) => (\n  <IconLine icon=\"access_time\" labelMargin=\"0\">\n    {RM.reject(\n      ({ createdAt, orderStateCategory }) =>\n        createdAt === null || !labelMap[orderStateCategory],\n      orderTiming,\n    ).map(timing => (\n      <div key={timing.orderStateCategory}>\n        {formatTimeWithoutTodayDate(timing.createdAt)}\n        <LabelStyled>{i18n._(labelMap[timing.orderStateCategory])}</LabelStyled>\n      </div>\n    ))}\n  </IconLine>\n)\n","import React, { Fragment } from 'react'\n\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderWareLine } from './OrderWareLine'\n\ninterface IOrderWareListProps {\n  orderWares: ReadonlyArray<GOrderDetail.Items>\n}\n\nexport const OrderWareList: React.SFC<IOrderWareListProps> = ({\n  orderWares,\n}) => {\n  const renderWare = (orderWare: GOrderDetail.Items) => (\n    <Fragment key={orderWare.id}>\n      <OrderWareLine\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        price={orderWare.price.value}\n      />\n      <>\n        {orderWare.sidedishes.map(sidedish => (\n          <OrderWareLine\n            key={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            price={sidedish.price.value}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  EmailFragment,\n  PhoneFragment,\n  PriceFragment,\n} from '../../../graph/fragments'\nimport { GOrderDetail } from '../../../graph/types'\nimport { OrderDriverFragment } from '../molecules/OrderStateDeliver.graphql'\n\nexport const QueryOrderDetail = buildQuery<\n  GOrderDetail.Query,\n  GOrderDetail.Variables\n>(gql`\n  query GOrderDetail($id: ID!) {\n    order(id: $id) {\n      id\n      createdAt\n      deliverAt\n      companyBranch {\n        id\n      }\n      customer {\n        emails {\n          ...GEmail\n        }\n        phones {\n          ...GPhone\n        }\n      }\n      customerOrdersCountCurrent\n      customerOrdersCountTotal\n      note\n      previousNote\n      allAppliedRules\n      items {\n        ...GOrderDetailWare\n        sidedishes: sideDishes {\n          ...GOrderDetailWare\n        }\n      }\n      totalSum {\n        ...GPrice\n      }\n      transportFee {\n        ...GPrice\n      }\n      coverPrice {\n        ...GPrice\n      }\n      totalDiscount {\n        ...GPrice\n      }\n      orderTiming: orderStateCategoryRelations {\n        createdAt\n        orderStateCategory\n      }\n      ...GOrderDriver\n    }\n  }\n\n  fragment GOrderDetailWare on OrderRecipe {\n    id\n    recipe {\n      id\n      code\n      nameLabel\n    }\n    price {\n      ...GPrice\n    }\n  }\n  ${PriceFragment}\n  ${EmailFragment}\n  ${PhoneFragment}\n  ${OrderDriverFragment}\n`)\n","import React from 'react'\nimport { VError } from 'verror'\n\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n  OrderStateEnum,\n} from '../../../graph/types'\nimport { reportError } from '../../../helpers/sentry'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { OrderStateButton } from '../molecules/OrderStateButton'\nimport { OrderStateDeliver } from '../molecules/OrderStateDeliver'\nimport { OrderStateFlowContainer } from '../molecules/OrderStateFlowContainer'\nimport { OrderStateTimeNotification } from '../molecules/OrderStateTimeNotification'\nimport { getOrderState } from './OrderListLoader'\nimport { QueryOrderState } from './OrderStateFlow.graphql'\n\ninterface IProps {\n  orderId: ID\n  branchId: ID\n}\n\ninterface IStateProps extends IProps {\n  stateModel: TOrderStateModel\n  orderStateCategory: OrderStateCategoryEnum\n  canDeliver: boolean\n}\n\nconst OrderStateNewOrder: React.SFC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Accepted} {...props} />\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateAcceptedOrder: React.SFC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <OrderStateTimeNotification {...props} />\n    {props.canDeliver ? (\n      <OrderStateDeliver {...props} />\n    ) : (\n      <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n    )}\n  </OrderStateFlowContainer>\n)\n\nconst OrderStateOnWayOrder: React.SFC<IStateProps> = props => (\n  <OrderStateFlowContainer>\n    <OrderStateTimeNotification {...props} />\n    <OrderStateDeliver {...props} />\n    <OrderStateButton nextState={OrderStateEnum.Finished} {...props} />\n  </OrderStateFlowContainer>\n)\n\nexport const OrderStateFlow: React.SFC<IProps> = ({ orderId, branchId }) => (\n  <WithRoot\n    observe={false}\n    render={({ order: { state: stateModel } }) => (\n      <QueryOrderState\n        variables={{ orderId, branchId }}\n        render={({ order, companyBranch: { allowedCategories } }) => {\n          const orderStateCategory = getOrderState(order)\n          if (!orderStateCategory) {\n            reportError(new VError('Order %s has got no state categories'))\n            return null\n          }\n          const canDeliver =\n            allowedCategories.includes(OrderStateCategoryEnum.OnWay) &&\n            order.deliveryType != null &&\n            order.deliveryType.enum !== DeliveryTypeEnum.Pickup\n\n          const stateProps: IStateProps = {\n            orderId,\n            branchId,\n            stateModel,\n            orderStateCategory,\n            canDeliver,\n          }\n          switch (orderStateCategory) {\n            case OrderStateCategoryEnum.NewOrders:\n              return <OrderStateNewOrder {...stateProps} />\n            case OrderStateCategoryEnum.Preparing:\n              return <OrderStateAcceptedOrder {...stateProps} />\n            case OrderStateCategoryEnum.OnWay:\n              return <OrderStateOnWayOrder {...stateProps} />\n            default:\n              return null\n          }\n        }}\n      />\n    )}\n  />\n)\n","import { i18nMark } from '@lingui/react'\nimport React from 'react'\n\nimport { OrderStateEnum } from '../../../graph/types'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { TOrderStateModel } from '../models/OrderStateModel'\n\ninterface IProps {\n  orderId: ID\n  nextState: OrderStateEnum\n  stateModel: TOrderStateModel\n}\n\nconst stateLabels = {\n  [OrderStateEnum.Accepted]: i18nMark('Accept order'),\n  [OrderStateEnum.Finished]: i18nMark('Finish order'),\n}\n\nexport const OrderStateButton: React.FC<IProps> = ({\n  orderId,\n  nextState,\n  stateModel,\n}) => {\n  return (\n    <TouchButton\n      text={i18n._(stateLabels[nextState])}\n      width=\"7.375rem\"\n      onClick={() => {\n        stateModel.updateOrderState(orderId, nextState)\n      }}\n    />\n  )\n}\n","import React from 'react'\n\nimport { OrderStateCategoryEnum } from '../../../graph/types'\nimport { OrderDriverSelect } from '../atoms/OrderDriverSelect'\nimport { TOrderStateModel } from '../models/OrderStateModel'\nimport { QueryDriverSelection } from './OrderStateDeliver.graphql'\n\ninterface IProps {\n  branchId: ID\n  orderId: ID\n  orderStateCategory: OrderStateCategoryEnum\n  stateModel: TOrderStateModel\n}\n\nexport const OrderStateDeliver: React.SFC<IProps> = ({\n  branchId,\n  orderId,\n  orderStateCategory,\n  stateModel,\n}) => (\n  <QueryDriverSelection\n    fetchPolicy=\"network-only\"\n    variables={{ branchId: branchId, orderId }}\n    render={(\n      { drivers, order: { driver: orderDriver } },\n      { loading, refetch },\n    ) => (\n      <OrderDriverSelect\n        drivers={drivers}\n        selectedDriver={orderDriver ? orderDriver.user : null}\n        isLoading={loading}\n        onReload={refetch}\n        onClear={() => {\n          if (orderDriver) stateModel.removeDriver(orderDriver.id)\n        }}\n        onSelect={driver => {\n          stateModel.selectDriver(orderId, driver.id)\n          if (orderStateCategory !== OrderStateCategoryEnum.OnWay) {\n            stateModel.deliverOrder(orderId)\n          }\n        }}\n      />\n    )}\n  />\n)\n","import React from 'react'\nimport { components } from 'react-select'\nimport { StylesConfig } from 'react-select/lib/styles'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { GDriver } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Colors, Radiuses, Spacing } from '../../../styling'\n\ntype TDriver = GDriver.Fragment\n\ninterface IProps {\n  drivers: ReadonlyArray<TDriver>\n  selectedDriver: Maybe<TDriver>\n  isLoading: boolean\n  onSelect(driver: TDriver): void\n  onClear(): void\n  onReload(): void\n}\n\nconst DriverName = styled.div`\n  margin: 0.1rem 0 0rem 0.2rem;\n  display: inline-block;\n  vertical-align: top;\n  font-size: 1.25rem;\n`\n\nconst backgroundColor = {\n  background: Colors.greyMiddle,\n}\nconst textColor = { color: Colors.white }\n\nconst styles: StylesConfig = {\n  control: base => ({\n    ...base,\n    ...backgroundColor,\n    ...textColor,\n    height: Spacing.ButtonHeight,\n    borderWidth: 0,\n    borderRadius: Radiuses.Button,\n    margin: 0,\n  }),\n  menu: base => ({\n    ...base,\n    ...backgroundColor,\n  }),\n  valueContainer: base => ({\n    ...base,\n    ...textColor,\n  }),\n  singleValue: base => ({\n    ...base,\n    ...textColor,\n  }),\n  placeholder: base => ({\n    ...base,\n    ...textColor,\n    fontSize: '1.2rem',\n  }),\n}\n\nexport const OrderDriverSelect: React.SFC<IProps> = ({\n  drivers,\n  selectedDriver,\n  isLoading,\n  onSelect,\n  onClear,\n  onReload,\n}) => (\n  <SelectControl<TDriver>\n    options={drivers as TDriver[]}\n    value={selectedDriver}\n    getOptionValue={RM.prop('id')}\n    isLoading={isLoading}\n    isSearchable={false}\n    isClearable={true}\n    placeholder=\"Deliver order\"\n    width={16}\n    styles={styles}\n    noOptionsMessage={() => i18n.t`No drivers available`}\n    onChange={driver =>\n      driver === null ? onClear() : onSelect(driver as TDriver)\n    }\n    onMenuOpen={onReload}\n    components={{\n      ValueContainer: props => (\n        <>\n          <Icon iconName=\"directions_car\" fontSize={2} color={Colors.white} />\n          <components.ValueContainer {...props} />\n        </>\n      ),\n      DropdownIndicator: () => null,\n    }}\n    formatOptionLabel={driver => (\n      <DriverName>{`${driver.firstName} ${driver.lastName}`}</DriverName>\n    )}\n  />\n)\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nimport { Spacing } from '../../../styling'\n\ninterface IProps {}\n\nconst OrderStateFlowContainerWrapper = styled.div`\n  margin: 0 0 0 auto;\n  text-align: right;\n  height: ${Spacing.ButtonHeight};\n`\n\nconst Control = styled.div`\n  margin: 0 0 0 0.5rem;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  height: 100%;\n`\n\nexport const OrderStateFlowContainer: React.SFC<IProps> = ({ children }) => (\n  <OrderStateFlowContainerWrapper>\n    {Children.map(children, (child, idx) => (\n      <Control key={idx}>{child}</Control>\n    ))}\n  </OrderStateFlowContainerWrapper>\n)\n","import React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { DeliveryTimeDialog } from '../../../molecules/DeliveryTimeDialog'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const OrderStateTimeNotification: React.FC<IProps> = ({ orderId }) => {\n  const { order } = useRoot()\n\n  return (\n    <DeliveryTimeDialog\n      title={i18n.t`Send expected time of delivery to customer (in minutes)`}\n      onConfirm={minutes => {\n        order.state.sendTimeNotification(orderId, minutes)\n      }}\n    >\n      {({ openDialog }) => (\n        <TouchButton iconName=\"schedule\" onClick={openDialog} />\n      )}\n    </DeliveryTimeDialog>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GOrderState } from '../../../graph/types'\nimport { OrderStateCategoryFragment } from '../models/OrderStateModel.graphql'\n\nexport const QueryOrderState = buildQuery<\n  GOrderState.Query,\n  GOrderState.Variables\n>(gql`\n  query GOrderState($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      deliveryType {\n        enum\n      }\n      ...GOrderStateCategory\n    }\n    companyBranch(id: $branchId) {\n      id\n      allowedCategories\n    }\n  }\n  ${OrderStateCategoryFragment}\n`)\n","import 'react-datepicker/dist/react-datepicker.css'\n\nimport React from 'react'\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Field, FieldType } from 'react-form'\nimport styled from 'styled-components'\n\nimport moment from '../helpers/moment'\n\ninterface IProps\n  extends Omit<ReactDatePickerProps, 'onChange' | 'selected' | 'minDate'> {\n  field: FieldType\n  defaultValue?: Date\n  inputWidth?: string\n  minDate?: Date\n}\n\nconst FormInputDateContainer = styled.div`\n  & .react-datepicker-wrapper,\n  .react-datepicker__input-container,\n  .react-datepicker__input-container input {\n    width: ${({ width = '6rem' }: { width?: string }) => width};\n  }\n`\nFormInputDateContainer.displayName = 'FormInputDateContainer'\n\nexport const FormInputDate: React.SFC<IProps> = ({\n  field,\n  defaultValue,\n  inputWidth,\n  minDate,\n  ...props\n}) => (\n  <FormInputDateContainer width={inputWidth}>\n    <Field\n      field={field}\n      defaultValue={defaultValue}\n      render={fieldApi => (\n        <DatePicker\n          selected={moment(fieldApi.value || new Date())}\n          onChange={date => fieldApi.setValue(date)}\n          minDate={minDate === undefined ? undefined : moment(minDate)}\n          {...props}\n        />\n      )}\n    />\n  </FormInputDateContainer>\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.greyMiddle};\n  padding: 0.1rem 0 0.1rem 0;\n`\n","import { Plural, Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormInputDate } from '../../../atoms/FormInputDate'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  submitButton?: ReactNode\n}\n\nexport const StatisticsDateRangeFilter = observer<IProps>(\n  ({ submitButton }) => {\n    const { statistics } = useRoot()\n\n    return (\n      <FlexRowSingle justify=\"flex-start\">\n        <FlexColumn fixedWidth={true} width=\"10rem\">\n          <Trans>From date</Trans>\n          <FormInputDate field=\"dateFrom\" defaultValue={statistics.dateFrom} />\n        </FlexColumn>\n        <FlexColumn fixedWidth={true} width=\"10rem\">\n          <Trans>To date</Trans>\n          <FormInputDate field=\"dateTo\" defaultValue={statistics.dateTo} />\n        </FlexColumn>\n        <FlexColumn>\n          {submitButton || (\n            <FormSubmit width=\"15rem\">\n              <Plural\n                value={statistics.branchesFilter.length}\n                one=\"Show for one branch\"\n                few=\"Show for # branches\"\n                other=\"Show for # branches\"\n              />\n            </FormSubmit>\n          )}\n        </FlexColumn>\n      </FlexRowSingle>\n    )\n  },\n)\n","import React, { useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GOrdersStatistics } from '../../../graph/types'\nimport { createStatisticsQuery } from '../hooks/createStatisticsQuery'\nimport { OrdersStatisticsQuery } from './OrdersStatisticsLoader.graphql'\n\nexport type TOrdersStats = GOrdersStatistics.FinishedOrders\n\nconst { context, useStatisticsQuery } = createStatisticsQuery<\n  GOrdersStatistics.Query,\n  GOrdersStatistics.Variables\n>(OrdersStatisticsQuery)\n\nexport const useOrderStatistics = () => useContext(context)!\n\nexport const OrdersStatisticsLoader: React.FC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, executeFilter } = useStatisticsQuery()\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import React, { createContext, useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GClosureHistory } from '../../../graph/types'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\nimport { ClosureHistoryQuery } from './ClosureHistoryLoader.graphql'\n\nexport type TReports = GClosureHistory.FinancialReports\n\nconst context = createContext<IQueryResult<GClosureHistory.Query> | null>(null)\n\nexport const useClosureHistory = () => useContext(context)!\n\nexport const ClosureHistoryLoader: React.SFC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, execute } = useExecutableQuery<\n    GClosureHistory.Query,\n    GClosureHistory.Variables\n  >(ClosureHistoryQuery)\n\n  const onSubmit = () => {\n    if (statistics.closureBranch) {\n      execute({\n        branchId: statistics.closureBranch,\n        dateFrom: formatDateISO(statistics.dateFrom),\n        dateTo: formatDateISO(statistics.dateTo),\n      })\n    }\n  }\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onChange={({ values }) => statistics.updateFilter(values)}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { ClosureCurrentButton } from './ClosureCurrentButton'\n\nconst ButtonToRight = styled.div`\n  float: right;\n  margin: 0.5rem;\n`\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nexport const ClosureStatisticsFilter = observer<IProps>(({ showCurrent }) => {\n  const { statistics } = useRoot()\n  return (\n    <>\n      <CompanyBranchPicker\n        selectedBranches={\n          statistics.closureBranch ? [statistics.closureBranch] : []\n        }\n        onSelectionChange={([branch]) => statistics.setClosureBranch(branch)}\n        onSelectionClear={() => statistics.setClosureBranch(null)}\n        isClearable={false}\n      />\n      {showCurrent && (\n        <ButtonToRight>\n          <ClosureCurrentButton />\n        </ButtonToRight>\n      )}\n    </>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureCurrentButton: React.SFC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"lastFinancialReport\">\n      <Link to=\"/overview/closure\">\n        <TouchButton\n          text={i18n.t`Current closure`}\n          color={Colors.orange}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n}\n\nconst MonospaceOutputStyled = styled.p`\n  color: white;\n  font-family: 'Lucida Console', Monaco, monospace;\n  white-space: pre-wrap;\n  margin: 0.2rem 0.5rem 0.5rem 1rem;\n  line-height: 1.8rem;\n`\n\nconst formatOutput = (output: string) =>\n  output.replace(new RegExp('\\t', 'g'), '\\u0009')\n\nexport const MonospaceOutput: React.SFC<IProps> = ({ text }) => (\n  <MonospaceOutputStyled>{formatOutput(text)}</MonospaceOutputStyled>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\n\ninterface IProps {}\n\nexport const StatisticsBranchFilter: React.FC<IProps> = () => {\n  const { statistics } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(statistics.branches)}\n      onSelectionChange={statistics.setBranchFilter}\n      onSelectionClear={statistics.clearBranchFilter}\n      isMulti={true}\n    />\n  ))\n}\n","import React, { useContext } from 'react'\nimport { Form } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GDailyStatistics } from '../../../graph/types'\nimport { createStatisticsQuery } from '../hooks/createStatisticsQuery'\nimport { DailyStatisticsQuery } from './DailyStatisticsLoader.graphql'\n\nexport type TOrdersStats = GDailyStatistics.Stats\n\nconst { useStatisticsQuery, context } = createStatisticsQuery<\n  GDailyStatistics.Query,\n  GDailyStatistics.Variables\n>(DailyStatisticsQuery)\n\nexport const useDailyStatistics = () => useContext(context)!\n\nexport const DailyStatisticsLoader: React.SFC = ({ children }) => {\n  const { statistics } = useRoot()\n  const { result, executeFilter } = useStatisticsQuery()\n\n  return (\n    <Form\n      onSubmit={executeFilter}\n      onChange={({ values }) => statistics.updateFilter(values)}\n    >\n      <context.Provider value={result}>{children}</context.Provider>\n    </Form>\n  )\n}\n","import { DocumentNode } from 'graphql'\nimport { createContext } from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { formatDateISO } from '../../../helpers/formats'\nimport {\n  IQueryResult,\n  useExecutableQuery,\n} from '../../../hooks/useExecutableQuery'\n\ninterface IVariables {\n  readonly branches: ReadonlyArray<string>\n  readonly dateFrom: string\n  readonly dateTo: string\n}\n\nexport function createStatisticsQuery<TData, TVariables extends IVariables>(\n  query: DocumentNode,\n) {\n  const context = createContext<IQueryResult<TData>>({\n    data: null,\n    hasAnyError: false,\n    loading: false,\n    wasExecuted: false,\n  })\n  const useStatisticsQuery = () => {\n    const { statistics } = useRoot()\n    const { result, execute } = useExecutableQuery<TData, IVariables>(query)\n    const executeFilter = () => {\n      execute({\n        branches: statistics.branchesFilter,\n        dateFrom: formatDateISO(statistics.dateFrom),\n        dateTo: formatDateISO(statistics.dateTo),\n      })\n    }\n    return { result, executeFilter }\n  }\n  return {\n    context,\n    useStatisticsQuery,\n  }\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureHistoryTable } from '../molecules/ClosureHistoryTable'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { StatisticsDateRangeFilter } from '../molecules/StatisticsDateRangeFilter'\nimport { ClosureHistoryLoader } from '../organisms/ClosureHistoryLoader'\n\ninterface IProps {}\n\nexport const ClosureHistoryPage: React.SFC<IProps> = props => (\n  <ClosureHistoryLoader>\n    <FullPageLayout\n      pageTitle={i18n.t`Closure history`}\n      useBackButton={true}\n      backRoute=\"/overview\"\n    >\n      <Card>\n        <ClosureStatisticsFilter showCurrent={true} />\n        <StatisticsDateRangeFilter\n          submitButton={\n            <FormSubmit width=\"15rem\">\n              <Trans>Show history for branch</Trans>\n            </FormSubmit>\n          }\n        />\n      </Card>\n      <Card>\n        <ClosureHistoryTable />\n      </Card>\n    </FullPageLayout>\n  </ClosureHistoryLoader>\n)\n","import { Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRow } from '../../../atoms/FlexRow'\nimport { Headline } from '../../../atoms/Headline'\nimport { Loading } from '../../../atoms/Loading'\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { formatDateISO } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Spacing } from '../../../styling'\nimport { useClosureHistory } from '../organisms/ClosureHistoryLoader'\n\nexport const ClosureHistoryTable = observer(() => {\n  const { data, loading } = useClosureHistory()\n  const { statistics } = useRoot()\n  if (loading) {\n    return (\n      <Headline>\n        <Loading />\n      </Headline>\n    )\n  }\n  if (!statistics.closureBranch) {\n    return (\n      <Headline>\n        <Trans>Select a branch</Trans>\n      </Headline>\n    )\n  }\n  if (!data || data.financialReports.length === 0) {\n    return (\n      <Headline>\n        <Trans>No closures found</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      {data.financialReports.map(report => (\n        <FlexRow key={report.id}>\n          <FlexColumn fixedWidth={true}>\n            <RelativeLink to={`../${report.id}`}>\n              <TouchButton\n                iconName=\"mode_edit\"\n                width={Spacing.ButtonHeight}\n                height={Spacing.ButtonHeight}\n              />\n            </RelativeLink>\n          </FlexColumn>\n          <FlexColumn widthGrowIndex={1}>\n            {`[${report.reportSequence}] ${formatDateISO(\n              report.reportDatetime,\n            )}`}\n          </FlexColumn>\n        </FlexRow>\n      ))}\n    </>\n  )\n})\n","import gql from 'graphql-tag'\n\nexport const ClosureHistoryQuery = gql`\n  query GClosureHistory($branchId: ID!, $dateFrom: Date!, $dateTo: Date!) {\n    financialReports(\n      companyBranchId: $branchId\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      id\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { ClosureStatisticsFilter } from '../molecules/ClosureStatisticsFilter'\nimport { ClosureStatisticsContent } from '../organisms/ClosureStatisticsContent'\nimport { ClosureStatisticsControl } from '../organisms/ClosureStatisticsControl'\n\ninterface IRouteParams {\n  reportId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const ClosurePage: React.SFC<IProps> = ({ match }) => (\n  <FullPageLayout\n    pageTitle={i18n.t`Closure`}\n    useBackButton={true}\n    backRoute=\"/overview\"\n  >\n    <Card>\n      <ClosureStatisticsFilter showCurrent={false} />\n      <ClosureStatisticsControl showCurrent={Boolean(match.params.reportId)} />\n    </Card>\n    <ClosureStatisticsContent reportId={match.params.reportId} />\n  </FullPageLayout>\n)\n","import React from 'react'\n\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { WithRoot } from '../../../atoms/WithRoot'\nimport { i18n } from '../../../i18n'\nimport { QueryFinancialReport } from './ClosureStatisticsContent.graphql'\n\ninterface IProps {\n  reportId?: string\n}\n\nexport const ClosureStatisticsContent: React.SFC<IProps> = ({\n  reportId = '',\n}) => (\n  <WithRoot\n    render={({ statistics }) =>\n      statistics.closureBranch ? (\n        <QueryFinancialReport\n          variables={{\n            branchId: statistics.closureBranch,\n            reportId,\n            showReport: Boolean(reportId),\n          }}\n          fetchPolicy=\"cache-and-network\"\n          renderLoading={false}\n          render={({ report, lastReport }, { loading }) =>\n            loading ? (\n              <MonospaceOutput text={i18n.t`Computing`} />\n            ) : (\n              <MonospaceOutput\n                text={reportId ? report!.plainData : lastReport.plainData}\n              />\n            )\n          }\n        />\n      ) : null\n    }\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GClosureReportQuery } from '../../../graph/types'\n\nexport const FinancialReport = gql`\n  query GClosureReportQuery(\n    $branchId: ID!\n    $reportId: ID!\n    $showReport: Boolean!\n  ) {\n    lastReport: lastFinancialReport(companyBranchId: $branchId)\n      @skip(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n    report: financialReport(report: $reportId) @include(if: $showReport) {\n      plainData\n      reportDatetime\n      reportSequence\n    }\n  }\n`\n\nexport const QueryFinancialReport = buildQuery<\n  GClosureReportQuery.Query,\n  GClosureReportQuery.Variables\n>(FinancialReport)\n","import { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { GCreateFinancialReport } from '../../../graph/types'\nimport { useGuardedMutation } from '../../../hooks/useGuardedMutation'\nimport useRouterContext from '../../../hooks/useRouterContext'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { ClosureCurrentButton } from '../molecules/ClosureCurrentButton'\nimport { ClosureHistoryButton } from '../molecules/ClosureHistoryButton'\nimport { ClosureSubmitButton } from '../molecules/ClosureSubmitButton'\nimport { CreateFinancialReport } from './ClosureStatisticsControl.graphql'\n\ninterface IProps {\n  showCurrent: boolean\n}\n\nconst ButtonToRight = styled.div`\n  float: right;\n`\n\nexport const ClosureStatisticsControl: React.FC<IProps> = ({ showCurrent }) => {\n  const { statistics } = useRoot()\n  const { enqueueSuccess } = useSnackBar()\n  const { history } = useRouterContext()\n\n  const createClosure = useGuardedMutation<\n    GCreateFinancialReport.Mutation,\n    GCreateFinancialReport.Variables\n  >(CreateFinancialReport)\n\n  const onSubmit = useCallback(async () => {\n    if (!statistics.closureBranch) {\n      return\n    }\n    const data = await createClosure({\n      companyBranchId: statistics.closureBranch,\n    })\n    if (data) {\n      const { id } = data.result\n      history.push(`/overview/closure/${id}`)\n      enqueueSuccess(i18n.t`Closure has been created`)\n    }\n  }, [])\n\n  return useObserver(() => (\n    <>\n      {showCurrent ? (\n        <ClosureCurrentButton />\n      ) : (\n        <ClosureSubmitButton\n          onClick={onSubmit}\n          disabled={!statistics.closureBranch}\n        />\n      )}\n      <ButtonToRight>\n        <ClosureHistoryButton />\n      </ButtonToRight>\n    </>\n  ))\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {}\n\nexport const ClosureHistoryButton: React.SFC<IProps> = props => {\n  return (\n    <CanQuery queryName=\"financialReports\">\n      <Link to=\"/overview/closure/history\">\n        <TouchButton\n          text={i18n.t`Closure history`}\n          color={Colors.greyDark}\n          width=\"15rem\"\n          height={Spacing.ButtonHeight}\n        />\n      </Link>\n    </CanQuery>\n  )\n}\n","import React, { MouseEvent } from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport interface IProps {\n  onClick?(e: MouseEvent<HTMLButtonElement>): void\n  disabled: boolean\n}\n\nexport const ClosureSubmitButton: React.SFC<IProps> = props => (\n  <CanMutate mutationName=\"createFinancialReport\">\n    <TouchButton\n      text={i18n.t`Create closure`}\n      color={Colors.green}\n      width=\"12rem\"\n      {...props}\n    />\n  </CanMutate>\n)\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsDateRangeFilter } from '../molecules/StatisticsDateRangeFilter'\nimport { DailyStatisticsContent } from '../organisms/DailyStatisticsContent'\nimport { DailyStatisticsLoader } from '../organisms/DailyStatisticsLoader'\n\nexport const DailyStatisticsPage: React.FC = () => (\n  <FullPageLayout pageTitle={i18n.t`Sales statistics`} useBackButton={true}>\n    <DailyStatisticsLoader>\n      <Card>\n        <StatisticsBranchFilter />\n        <StatisticsDateRangeFilter />\n      </Card>\n      <DailyStatisticsContent />\n    </DailyStatisticsLoader>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { Headline } from '../../../atoms/Headline'\nimport { MonospaceOutput } from '../../../atoms/MonospaceOutput'\nimport { i18n } from '../../../i18n'\nimport { useDailyStatistics } from './DailyStatisticsLoader'\n\nexport const DailyStatisticsContent = observer(() => {\n  const { data, loading } = useDailyStatistics()\n  if (!data) {\n    return null\n  }\n  if (loading) {\n    return <MonospaceOutput text={i18n.t`Computing`} />\n  }\n  const { stats } = data\n  return (\n    <>\n      <Headline light={true}>\n        <Trans>Daily statistics</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.dailyStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By category</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.categoryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By type</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.deliveryStatisticsPlain} />\n\n      <Headline light={true}>\n        <Trans>By driver</Trans>\n      </Headline>\n      <MonospaceOutput text={stats.driversStatisticsPlain} />\n    </>\n  )\n})\n","import gql from 'graphql-tag'\n\nexport const DailyStatisticsQuery = gql`\n  query GDailyStatistics($branches: [ID!]!, $dateFrom: Date!, $dateTo: Date!) {\n    stats: statistics(\n      branches: $branches\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      categoryStatisticsPlain\n      dailyStatisticsPlain\n      deliveryStatisticsPlain\n      driversStatisticsPlain\n    }\n  }\n`\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { StatisticsBranchFilter } from '../molecules/StatisticsBranchFilter'\nimport { StatisticsDateRangeFilter } from '../molecules/StatisticsDateRangeFilter'\nimport { OrdersStatisticsList } from '../organisms/OrdersStatisticsList'\nimport { OrdersStatisticsLoader } from '../organisms/OrdersStatisticsLoader'\nimport { OrdersStatisticsSummary } from '../organisms/OrdersStatisticsSummary'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [{ i: 'summary', x: 0, y: 1, w: 7, h: 1 }]\n}\n\nexport const OrdersStatisticsPage: React.SFC<IProps> = props => (\n  <OrdersStatisticsLoader>\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={7}\n      widthInColumns={9}\n    >\n      <OrdersStatisticsList />\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      layouts={getLayout()}\n      pageTitle={i18n.t`Orders statistics`}\n      showSoundControl={false}\n      scrollPageTitle={false}\n      useBackButton={true}\n    >\n      <div key=\"summary\">\n        <Card>\n          <StatisticsBranchFilter />\n          <StatisticsDateRangeFilter />\n        </Card>\n\n        <OrdersStatisticsSummary />\n      </div>\n    </PageLayout>\n  </OrdersStatisticsLoader>\n)\n","import { Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { BulletList } from 'react-content-loader'\n\nimport { CardListTitle } from '../../../atoms/CardListTitle'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/types'\nimport { OrderBox } from '../../../segments/order/atoms/OrderBox'\nimport { useOrderStatistics } from './OrdersStatisticsLoader'\n\nexport const OrdersStatisticsList = observer(() => {\n  const { statistics, order: orderModel } = useRoot()\n  const { data, loading, wasExecuted } = useOrderStatistics()\n  if (!wasExecuted) {\n    return null\n  }\n  if (loading || !data) {\n    return <BulletList primaryOpacity={0.2} secondaryOpacity={0.2} />\n  }\n  const { orders } = data.stats.finishedOrders\n  if (orders.length === 0) {\n    return (\n      <CardListTitle>\n        <Trans>No orders</Trans>\n      </CardListTitle>\n    )\n  }\n  return (\n    <>\n      {orders.map(order => (\n        <OrderBox\n          key={order.id}\n          order={{\n            ...order,\n            orderStateCategory: OrderStateCategoryEnum.Finished,\n          }}\n          toggleOrderDetail={orderModel.list.toggleOrderDetail}\n          isOrderDetailOpen={orderModel.list.isOrderDetailOpen}\n          showBranch={statistics.branchesFilter.length > 1}\n        />\n      ))}\n    </>\n  )\n})\n","import gql from 'graphql-tag'\n\nimport { OrderTickerFragment } from '../../../segments/order/molecules/OrderTicker.graphql'\nimport { OrderStateCategoryFragment } from '../../order/models/OrderStateModel.graphql'\n\nexport const OrdersStatisticsQuery = gql`\n  query GOrdersStatistics($branches: [ID!]!, $dateFrom: Date!, $dateTo: Date!) {\n    stats: statistics(\n      branches: $branches\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n    ) {\n      finishedOrders {\n        fees {\n          ...GStatsPrice\n        }\n        onlinePayments {\n          ...GStatsPrice\n        }\n        total {\n          ...GStatsPrice\n        }\n        ordersCount\n        orders {\n          ...GOrderListTicker\n          ...GOrderStateCategory\n        }\n      }\n    }\n  }\n\n  fragment GStatsPrice on PriceConverted {\n    value\n    currency {\n      code\n    }\n  }\n\n  ${OrderTickerFragment}\n  ${OrderStateCategoryFragment}\n`\n","import { Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Price } from '../../../atoms/Price'\nimport { useOrderStatistics } from '../organisms/OrdersStatisticsLoader'\n\nconst StatPanel = styled.div`\n  margin: 1.4rem 4rem 0 0.5rem;\n  display: inline-block;\n`\n\nconst StatLabel = styled.h1`\n  font-size: 1.5rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nconst StatValue = styled.h2`\n  font-size: 4rem;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const OrdersStatisticsSummary = observer(() => {\n  const { loading, data } = useOrderStatistics()\n  if (loading || !data) {\n    return null\n  }\n  const stats = data.stats.finishedOrders\n  return (\n    <>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total turnover</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.total.value}\n            currencyCode={stats.total.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Online payments</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.onlinePayments.value}\n            currencyCode={stats.onlinePayments.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Orders count</Trans>\n        </StatLabel>\n        <StatValue>{stats.ordersCount}</StatValue>\n      </StatPanel>\n      <StatPanel>\n        <StatLabel>\n          <Trans>Total commissions</Trans>\n        </StatLabel>\n        <StatValue>\n          <Price\n            price={stats.fees.value}\n            currencyCode={stats.fees.currency.code}\n          />\n        </StatValue>\n      </StatPanel>\n    </>\n  )\n})\n","import React from 'react'\n\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { ClosureButton } from '../molecules/ClosureButton'\nimport { DailyStatisticsButton } from '../molecules/DailyStatisticsButton'\nimport { OrdersStatisticsButton } from '../molecules/OrdersStatisticsButton'\n\ninterface IProps {}\n\nfunction getLayout() {\n  return [\n    { i: 'OrdersStatistics', x: 0, y: 1, w: 2, h: 2 },\n    { i: 'DailyStatistics', x: 2, y: 1, w: 2, h: 2 },\n    { i: 'Closure', x: 4, y: 1, w: 2, h: 2 },\n  ]\n}\n\nexport const OverviewPage: React.SFC<IProps> = props => (\n  <PageLayout layouts={getLayout()}>\n    <PageLayoutItem\n      key=\"OrdersStatistics\"\n      route=\"/overview/orders\"\n      component={OrdersStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"DailyStatistics\"\n      route=\"/overview/statistics\"\n      component={DailyStatisticsButton}\n      canQuery=\"statistics\"\n    />\n    <PageLayoutItem\n      key=\"Closure\"\n      route=\"/overview/closure\"\n      component={ClosureButton}\n      canQuery=\"lastFinancialReport\"\n    />\n  </PageLayout>\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const ClosureButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Closure`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const DailyStatisticsButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Sales statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n","import React from 'react'\n\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const OrdersStatisticsButton: React.SFC = props => (\n  <TouchButton\n    text={i18n.t`Orders statistics`}\n    iconName=\"assignment\"\n    color={Colors.turquoise}\n  />\n)\n"],"sourceRoot":""}