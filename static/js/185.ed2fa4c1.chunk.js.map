{"version":3,"sources":["atoms/FormInputStyled.tsx","atoms/LoginPageBackground.tsx","assets/bg_login.jpg","assets/bg_login@2x.jpg","segments/login/organisms/PasswordResetForm.tsx","segments/login/pages/PasswordResetPage.tsx","segments/login/routes/PasswordResetRoute.tsx"],"names":["invalidInputStyle","css","_templateObject","fullWidthStyle","_templateObject2","FormInputStyled","styled","input","_templateObject3","Spacing","MarginAroundFormComponents","_ref","inputFullWidth","_ref2","invalid","LoginPageBackground","div","backgroundImage","backgroundImage2x","module","exports","__webpack_require__","p","PasswordResetForm","inputRef","React","useRef","_React$useState","useState","_React$useState2","Object","slicedToArray","isSubmitting","setSubmitting","_useSnackBar","useSnackBar","enqueueError","enqueueSuccess","recoverPassword","asyncToGenerator","regenerator_default","a","mark","_callee","success","message","wrap","_context","prev","next","requestRecovery","current","value","sent","i18n","_","stop","apply","this","arguments","react_default","createElement","Fragment","placeholder","ref","disabled","TouchButton","onClick","color","Colors","green","width","height","_lingui_react","id","_callee2","loginName","url","fetch","response","_context2","concat","appConfig","endpoint","window","headers","Accept","abrupt","json","t0","Sentry","withScope","scope","setLevel","Severity","Debug","setExtra","captureException","PasswordResetPage","PageTitle","title","GridLayout","layouts","i","x","y","w","h","key","Display","PasswordResetForm_PasswordResetForm","d","__webpack_exports__","PasswordResetRoute_PasswordResetRoute","PasswordResetRoute","useRoot","auth","isAuthenticatedUser","react_router","to","PasswordResetPage_PasswordResetPage"],"mappings":"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","file":"static/js/185.ed2fa4c1.chunk.js","sourcesContent":["import styled, { css } from 'styled-components'\n\nimport { Spacing } from '../styling'\n\ninterface IFormInputStyled {\n  invalid?: boolean\n  inputFullWidth?: boolean\n}\n\nexport const invalidInputStyle = css`\n  border: 1px red solid;\n`\n\nexport const fullWidthStyle = css`\n  width: 100%;\n`\n\nexport const FormInputStyled = styled.input`\n  margin: ${Spacing.MarginAroundFormComponents};\n  ${({ inputFullWidth }: IFormInputStyled) => inputFullWidth && fullWidthStyle};\n  ${({ invalid }: IFormInputStyled) => invalid && invalidInputStyle};\n`\n","import styled from 'styled-components'\n\nimport backgroundImage from '../assets/bg_login.jpg'\nimport backgroundImage2x from '../assets/bg_login@2x.jpg'\n\nexport const LoginPageBackground = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n\n  @media only screen and (-webkit-min-device-pixel-ratio: 1.3),\n    only screen and (min--moz-device-pixel-ratio: 1.3),\n    only screen and (-o-min-device-pixel-ratio: 2.6/2),\n    only screen and (min-device-pixel-ratio: 1.3),\n    only screen and (min-width: 1024px) {\n    background-image: url(${backgroundImage2x});\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/media/bg_login.382d98be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg_login@2x.35ab1818.jpg\";","import { Trans } from '@lingui/macro'\nimport { Sentry } from '@speedlo/sentry'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { appConfig } from '../../../config'\nimport { useSnackBar } from '../../../hooks/useSnackBar'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nexport const PasswordResetForm: React.FC = () => {\n  const inputRef = React.useRef<HTMLInputElement | null>(null)\n  const [isSubmitting, setSubmitting] = React.useState(false)\n  const { enqueueError, enqueueSuccess } = useSnackBar()\n  const recoverPassword = async () => {\n    setSubmitting(true)\n    const { success, message } = await requestRecovery(inputRef.current!.value)\n    if (success) {\n      enqueueSuccess(\n        i18n.t`Email to recover your password has been successfully sent.`,\n      )\n    } else {\n      enqueueError(message)\n    }\n    setSubmitting(false)\n  }\n  return (\n    <>\n      <FormInputStyled\n        placeholder={i18n.t`Login name`}\n        ref={inputRef}\n        disabled={isSubmitting}\n      />\n      <br />\n      <br />\n      <TouchButton\n        disabled={isSubmitting}\n        onClick={recoverPassword}\n        color={Colors.green}\n        width=\"auto\"\n        height=\"auto\"\n      >\n        <Trans>Recover password</Trans>\n      </TouchButton>\n    </>\n  )\n}\n\nasync function requestRecovery(loginName: string) {\n  const url = `${appConfig.endpoint}/users/reset_password?login=${loginName}`\n  const fetch: TFetch = window.fetch\n  try {\n    const response = await fetch(url, {\n      headers: {\n        Accept: 'application/json',\n      },\n    })\n    return response.json()\n  } catch (err) {\n    Sentry.withScope(scope => {\n      scope.setLevel(Sentry.Severity.Debug)\n      scope.setExtra('loginName', loginName)\n      Sentry.captureException(err)\n    })\n    return {\n      success: false,\n      message: i18n.t`Unknown error while requesting password recovery`,\n    }\n  }\n}\n","import React from 'react'\n\nimport { GridLayout } from '../../../atoms/GridLayout'\nimport { LoginPageBackground } from '../../../atoms/LoginPageBackground'\nimport { PageTitle } from '../../../atoms/PageTitle'\nimport { i18n } from '../../../i18n'\nimport { PasswordResetForm } from '../organisms/PasswordResetForm'\n\nfunction getLayout() {\n  return [\n    { i: 'title', x: 6, y: 2, w: 8, h: 1 },\n    { i: 'form', x: 6, y: 3, w: 8, h: 4 },\n  ]\n}\n\nexport const PasswordResetPage: React.FC = () => {\n  return (\n    <LoginPageBackground>\n      <PageTitle title={i18n.t`Password recovery`} />\n      <GridLayout layouts={getLayout()}>\n        <div key=\"title\">\n          <PageTitle.Display />\n        </div>\n        <div key=\"form\">\n          <PasswordResetForm />\n        </div>\n      </GridLayout>\n    </LoginPageBackground>\n  )\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { PasswordResetPage } from '../pages/PasswordResetPage'\n\nexport const PasswordResetRoute: React.FC = () => {\n  const { auth } = useRoot()\n  return auth.isAuthenticatedUser ? <Redirect to=\"/\" /> : <PasswordResetPage />\n}\n\nexport default PasswordResetRoute\n"],"sourceRoot":""}