{"version":3,"sources":["atoms/CanMutate.tsx","atoms/IconLine.tsx","atoms/SelectControl.tsx","atoms/CanQuery.tsx","atoms/NoAccess.tsx","molecules/PageLayoutFullHeightItem.tsx","atoms/HorizontalSeparator.tsx","atoms/SelectControlFlat.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","molecules/CompanyBranchFlatSelect.tsx","organisms/CompanyBranchPicker.tsx","atoms/CursorContainer.tsx","atoms/CompanyBranch.tsx","molecules/CompanyBranchDropdown.tsx","segments/order/atoms/DeliveryTimeBadge.tsx","molecules/PageLayoutItem.tsx","atoms/LinkStyled.tsx","atoms/TimeBadge.tsx","segments/order/atoms/CustomerIdentity.tsx","hooks/useOnConnectionRestored.ts","segments/order/molecules/NoteLine.tsx","segments/order/atoms/OrderStarIndicator.tsx","segments/order/molecules/OrderTicker.tsx","segments/order/organisms/OrderListBranchFilter.tsx","segments/kitchen/atoms/KitchenOrderAtSummary.tsx","segments/kitchen/atoms/TouchCheckButton.tsx","segments/kitchen/molecules/KitchenOrderWareLine.tsx","segments/kitchen/organisms/KitchenOrderWareList.tsx","segments/kitchen/molecules/KitchenAcceptButton.tsx","segments/kitchen/molecules/KitchenOrderStarIndicator.tsx","segments/kitchen/molecules/KitchenOrderDetail.tsx","segments/kitchen/molecules/KitchenOrderBox.tsx","segments/kitchen/organisms/KitchenOrderListLoader.tsx","segments/kitchen/organisms/KitchenOrderList.tsx","segments/kitchen/pages/KitchenOverviewPage.tsx","segments/kitchen/routes/KitchenRoutes.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CanMutate","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_NoAccess__WEBPACK_IMPORTED_MODULE_2__","_RootProvider__WEBPACK_IMPORTED_MODULE_3__","_ref","mutationName","children","user","useRoot","useObserver","canMutate","a","createElement","Fragment","concat","IconLineWrap","styled","div","_templateObject","displayName","DescriptionContainer","_templateObject2","_ref2","_ref2$labelMargin","labelMargin","_ref$labelWidth","labelWidth","_ref$labelWidthUnits","labelWidthUnits","Spacing","DefaultSizeUnit","IconLineChildren","_templateObject3","LabelStyled","_templateObject4","IconLine","_ref3","iconComponent","icon","label","props","Object","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","_Icon__WEBPACK_IMPORTED_MODULE_5__","iconName","color","Colors","greyDark","React","nativeColor","composeSelectControlStyles","outerStyles","arguments","length","undefined","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","control","base","state","_state$selectProps","selectProps","width","minWidth","controlStyles","border","greyMiddle","margin","MarginAroundFormComponents","menu","menuStyles","zIndex","black","valueContainer","maxHeight","valueContainerStyles","overflowY","SelectControl","react_select__WEBPACK_IMPORTED_MODULE_2__","assign","styles","CanQuery","queryName","canQuery","NoAccess","FullHeightDiv","widthInColumns","LayoutGridCellMargin","column","row","FullHeightDivStyled","PageLayoutFullHeightItem","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_3__","id","HorizontalSeparatorStyled","greyLight","HorizontalSeparator","_ref$visible","visible","ItemStyled","textColor","isSelected","css","SelectorStyled","isInvalid","SelectControlFlat","_React$Component","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","isMulti","selectedItem","selectedItems","Array","isArray","item","_this$props2","RM","contains","equals","_this$props3","_this$props3$selected","onSingleSelection","onMultiSelection","isItemSelected","without","_this","_this$props4","items","isClearable","_this$props4$isInvali","_this$props4$textColo","formatItem","react__WEBPACK_IMPORTED_MODULE_7___default","hasSelection","onClick","updateSelection","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","map","idx","Component","defaultProps","prop","getItemValue","ScrollArea","CardDock","_ref2$position","position","_ref$position","CompanyBranchFlatSelect","branches","selectedBranch","selectedBranches","_ref$textColor","objectWithoutProperties","react_default","title","brand","name","CompanyBranchPicker_CompanyBranchPicker","CompanyBranchPicker","_ref$breakpoint","breakpoint","_ref$selectedBranches","_ref$isMulti","_ref$isClearable","onSelectionChange","onSelectionClear","_ref$getDropdownProps","getDropdownProps","branch","includes","find","filter","selected","CompanyBranchFlatSelect_CompanyBranchFlatSelect","CompanyBranchDropdown","CursorContainer","_ref$cursor","cursor","CompanyBranch","_ref$short","short","_ref$showBrand","showBrand","node_modules_react_default","substr","ClearIndicator","getStyles","_props$innerProps","innerProps","ref","restInnerProps","style","padding","react","placeholder","i18n","_","ButtonHeight","options","getOptionValue","formatOptionLabel","CompanyBranch_CompanyBranch","filterOption","rawInput","data","toLocaleLowerCase","closeMenuOnSelect","components","clearIndicator","objectSpread","onChange","selection","head","cancelIconPadding","DelayedTimeMark","white","DeliveryTimeBadge","deliverAt","deliveredAt","_ref$isCancelled","isCancelled","_ref$isDelayed","isDelayed","timerEnabled","now","useTimer","interval","MINUTE","enabled","variant","ETimeBadgeVariant","UNKNOWN","react__WEBPACK_IMPORTED_MODULE_5___default","_atoms_TimeBadge__WEBPACK_IMPORTED_MODULE_7__","className","_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__","minutes","differenceInMinutes","NORMAL","WARNING","CRITICAL","PageLayoutItem","route","component","layoutItem","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","_atoms_CanQuery__WEBPACK_IMPORTED_MODULE_4__","_atoms_CanMutate__WEBPACK_IMPORTED_MODULE_3__","LinkStyled","TimeBadgeStyled","variants","_variants","D_workspace_deepvision_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","red","orange","_templateObject5","green","bigNumberStyle","_templateObject6","dashStyle","_templateObject7","clickable","_templateObject8","TimeBadge","Variant","output","extraClassNames","push","toString","react__WEBPACK_IMPORTED_MODULE_3___default","cx","heartBeat","pulse","CustomerIdentity","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","customer","lastName","firstName","defaultPhone","phone","useOnConnectionRestored","_helpers_offline__WEBPACK_IMPORTED_MODULE_1__","cb","useDisposable","whenGoingOnline","CurrentNoteStyled","span","PreviousNoteStyled","NoteLine","note","previousNote","_atoms_HorizontalSeparator__WEBPACK_IMPORTED_MODULE_3__","_atoms_IconLine__WEBPACK_IMPORTED_MODULE_4__","_i18n__WEBPACK_IMPORTED_MODULE_5__","StyledOrderStarIndicator","OrderStarIndicator","Icon","OrderTickerStyled","Element","OrderTicker_templateObject","Color","turquoise","alpha","string","OrderTickerMainContentStyled","DeliveryTimeBadgeContainerStyled","AddressDisplayContainerStyled","CustomerIdentityContainerStyled","PriceContainerStyled","PaidMarkStyled","PaidTextStyled","ToBranchContainerStyled","_templateObject9","Radiuses","Card","ToPickupLabel","_templateObject10","violet","OrderTicker","order","showBranch","companyBranch","Date","delayedDeliveryTime","deliveryType","enum","DeliveryTypeEnum","Pickup","formatAddress","address","isPriority","OrderStarIndicator_OrderStarIndicator","totalSum","formattedValue","isPaidWithCard","OrderListBranchFilter","_atoms_RootProvider__WEBPACK_IMPORTED_MODULE_2__","_organisms_CompanyBranchPicker__WEBPACK_IMPORTED_MODULE_3__","_styling__WEBPACK_IMPORTED_MODULE_4__","from","list","setBranchFilter","clearBranchFilter","Label","DeliveryTime","DeliverLabel","deliverType","_lingui_react","KitchenOrderAtSummary","deliverTime","AccessTime","KitchenOrderAtSummary_DeliverLabel","formatTimeWithoutTodayDate","Circle","TouchCheckButton_templateObject","Small","CheckedInner","TouchCheckButton_templateObject2","TouchCheckButton","isChecked","firstSideDishStyle","KitchenOrderWareLine_templateObject","OrderWareLineWrap","KitchenOrderWareLine_templateObject2","isFirstSidedish","IsDoneContainerStyled","CodeContainerStyled","FontSizes","CompactCardBig","NameContainerStyled","KitchenOrderWareLine","recipeId","code","isDone","isCheckable","_ref$isFirstSidedish","_useMKitchenRecipeSta","useMKitchenRecipeState","updateOrderRecipeState","slicedToArray","TouchCheckButton_TouchCheckButton","OrderRecipeStateEnum","Preparing","Cooked","KitchenOrderWareList","orderWares","orderWare","KitchenOrderWareLine_KitchenOrderWareLine","recipe","nameLabel","orderRecipeState","sidedishes","sidedish","index","KitchenAcceptButton","orderId","_useMOrderState","useMOrderState","acceptOrder","TouchButton","OrderStateEnum","InProduce","StyledKitchenOrderStarIndicator","KitchenOrderStarIndicator_templateObject","KitchenOrderStarIndicator","StyledOrderDetailContainer","KitchenOrderDetail_templateObject","KitchenOrderDetail","KitchenOrderStarIndicator_KitchenOrderStarIndicator","KitchenOrderWareList_KitchenOrderWareList","orderStateCategory","OrderStateCategoryEnum","ReadyToDeliver","KitchenOrderAtSummary_KitchenOrderAtSummary","NewOrders","KitchenAcceptButton_KitchenAcceptButton","OrderBoxStyled","KitchenOrderBox_templateObject","CompactCard","greyDarkest","Middle","KitchenOrderBox_templateObject2","KitchenOrderBox_templateObject3","KitchenOrderBox_templateObject4","KitchenOrderBox_templateObject5","KitchenOrderBox","href","replace","KitchenOrderDetail_KitchenOrderDetail","requiredCategories","loaderContext","createContext","loading","noFilter","orders","KitchenOrderListLoader","observer","orderModel","hasBranchFilter","_useQKitchenOrderList","useQKitchenOrderList","branchesFilter","categories","skip","updateQuery","refetch","sortByPriority","sortWith","descend","or","not","ascend","useSKitchenOrderList","Finished","onSubscriptionData","dataUpdate","subscriptionData","prev","update","updatedOrder","o","orderExists","unshift","handleSubscriptionUpdate","Provider","InfoMessage","KitchenOrderList_templateObject","KitchenOrderList","category","_useKitchenOrderList","useContext","categoryOrders","propEq","KitchenOrderBox_KitchenOrderBox","CategorySeparator","KitchenOverviewPage_templateObject","KitchenOverviewPage","PageLayout","pageTitle","useBackButton","layouts","i","x","y","w","h","KitchenRoutes_KitchenRoutes","KitchenRoutes","match","react_router","SecureRoute","exact","path"],"mappings":"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","file":"static/js/179.6959cf84.chunk.js","sourcesContent":["import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  mutationName: string\n}\n\nexport const CanMutate: React.FC<IProps> = ({ mutationName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canMutate(mutationName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to mutation ${mutationName}`}</NoAccess>\n  })\n}\n","import { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../styling'\nimport { Icon } from './Icon'\n\ninterface IProps {\n  icon?: string | React.ComponentType<SvgIconProps>\n  label?: string\n  labelWidth?: number\n  labelWidthUnits?: string\n  labelMargin?: string\n  className?: string\n}\n\nconst getLabelWidth = ({\n  labelWidth = 0,\n  labelWidthUnits = Spacing.DefaultSizeUnit,\n}: IProps) => {\n  return labelWidth + labelWidthUnits\n}\n\nconst getLabelMargin = ({ labelMargin = '0.5rem 0.2rem 0 auto' }: IProps) => {\n  return labelMargin\n}\n\nconst IconLineWrap = styled.div`\n  display: flex;\n`\nIconLineWrap.displayName = 'IconLineWrap'\n\nconst DescriptionContainer = styled.div`\n  margin: ${getLabelMargin};\n  min-width: ${getLabelWidth};\n  flex: 0 0 auto;\n  text-align: right;\n`\n\nconst IconLineChildren = styled.div`\n  margin-left: 0.5rem;\n  align-self: stretch;\n  flex: 1 1 auto;\n`\nconst LabelStyled = styled.div`\n  padding-top: 0.2rem;\n  display: inline-block;\n`\n\nIconLineChildren.displayName = 'IconLineChildren'\n\nexport const IconLine: React.FC<IProps> = ({\n  icon,\n  label,\n  labelWidth,\n  labelWidthUnits,\n  labelMargin,\n  children,\n  ...props\n}) => {\n  let iconComponent\n  if (icon) {\n    if (typeof icon === 'string') {\n      iconComponent = <Icon iconName={icon} color={Colors.greyDark} />\n    } else {\n      iconComponent = React.createElement(icon, {\n        nativeColor: Colors.greyDark,\n      })\n    }\n  }\n\n  return (\n    <IconLineWrap {...props}>\n      <DescriptionContainer\n        labelWidth={labelWidth}\n        labelWidthUnits={labelWidthUnits}\n        labelMargin={labelMargin}\n      >\n        {iconComponent}\n        {label ? <LabelStyled>{label}</LabelStyled> : null}\n      </DescriptionContainer>\n      <IconLineChildren>{children}</IconLineChildren>\n    </IconLineWrap>\n  )\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { Props } from 'react-select/lib/Select'\nimport { StylesConfig } from 'react-select/lib/styles'\n\nimport { Colors, Spacing } from '../styling'\n\nexport interface ISelectControlProps<OptionType> extends Props<OptionType> {\n  width?: number\n  minWidth?: number\n  maxHeight?: number\n}\n\nexport const composeSelectControlStyles = (outerStyles: StylesConfig = {}) => ({\n  ...outerStyles,\n  control: (base, state) => {\n    const {\n      selectProps: { width, minWidth },\n    } = state\n    const controlStyles = {\n      ...base,\n      border: `1px solid ${Colors.greyMiddle}`,\n      margin: Spacing.MarginAroundFormComponents,\n      width: width !== undefined ? `${width}rem` : '100%',\n      minWidth: minWidth !== undefined ? `${minWidth}rem` : '8rem',\n    }\n    return outerStyles.control\n      ? outerStyles.control(controlStyles, state)\n      : controlStyles\n  },\n  menu: (base, state) => {\n    const {\n      selectProps: { width },\n    } = state\n    const menuStyles = {\n      ...base,\n      zIndex: 20,\n      color: Colors.black,\n      width: width !== undefined ? `${width}rem` : '100%',\n    }\n    return outerStyles.menu ? outerStyles.menu(menuStyles, state) : menuStyles\n  },\n  valueContainer: (base, state) => {\n    const {\n      selectProps: { maxHeight },\n    } = state\n    const valueContainerStyles = {\n      ...base,\n      maxHeight: maxHeight !== undefined ? `${maxHeight}rem` : '100%',\n      overflowY: maxHeight !== undefined ? 'scroll' : 'hidden',\n    }\n    return outerStyles.valueContainer\n      ? outerStyles.valueContainer(valueContainerStyles, state)\n      : valueContainerStyles\n  },\n})\n\nexport function SelectControl<OptionType>(\n  props: ISelectControlProps<OptionType>,\n) {\n  return (\n    <Select<OptionType>\n      {...props}\n      styles={composeSelectControlStyles(props.styles)}\n    />\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { NoAccess } from './NoAccess'\nimport { useRoot } from './RootProvider'\n\ninterface IProps {\n  queryName: string\n}\n\nexport const CanQuery: React.FC<IProps> = ({ queryName, children }) => {\n  const { user } = useRoot()\n  return useObserver(() => {\n    if (user.canQuery(queryName)) {\n      return <>{children}</>\n    }\n    return <NoAccess>{`No access to query ${queryName}`}</NoAccess>\n  })\n}\n","import { Tooltip } from '@material-ui/core'\nimport { PanTool } from '@material-ui/icons'\nimport React from 'react'\n\ninterface IProps {\n  children: string\n}\n\nexport const NoAccess: React.FC<IProps> = ({ children }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <Tooltip title={children}>\n      <PanTool />\n    </Tooltip>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\ninterface IProps {\n  visible?: boolean\n}\n\nconst HorizontalSeparatorStyled = styled.div`\n  border-top: 1px solid ${Colors.greyLight};\n  margin: 0.25rem 0rem;\n`\n\nexport const HorizontalSeparator: React.FC<IProps> = ({ visible = true }) =>\n  visible ? <HorizontalSeparatorStyled /> : null\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { RM } from '../helpers/ramda'\n\nexport interface ISelectControlFlatProps<ItemType = unknown> {\n  items: ReadonlyArray<ItemType>\n  selectedItem?: Maybe<ItemType>\n  onSingleSelection?(selected: Maybe<ItemType>): void\n  selectedItems?: ReadonlyArray<ItemType>\n  onMultiSelection?(selected: ReadonlyArray<ItemType>): void\n  formatItem?: (item: ItemType) => string | ReactNode\n  isMulti?: boolean\n  isClearable?: boolean\n  isInvalid?: boolean\n  textColor?: string\n}\n\ninterface IItemProps {\n  isSelected: boolean\n  textColor: string\n  onClick(): void\n}\n\nconst ItemStyled = styled.div`\n  margin: 0.5rem 0.6rem;\n  display: inline-block;\n  cursor: pointer;\n  color: ${({ textColor }: IItemProps) => textColor};\n  ${applySelectionStyle};\n`\n\nconst SelectorStyled = styled.div`\n  border: ${({ isInvalid }: { isInvalid: boolean }) =>\n    isInvalid === true ? '1px red solid' : 'auto'};\n`\n\nexport class SelectControlFlat<\n  ItemType = { id: ID; displayName: string }\n> extends React.Component<ISelectControlFlatProps<ItemType>> {\n  static defaultProps = {\n    formatItem: RM.prop('displayName'),\n    getItemValue: RM.prop('id'),\n  }\n  hasSelection() {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti) {\n      return Array.isArray(selectedItems) && selectedItems.length > 0\n    }\n    return selectedItem !== null && selectedItem !== undefined\n  }\n  isItemSelected(item: ItemType) {\n    const { isMulti, selectedItem, selectedItems } = this.props\n    if (isMulti && Array.isArray(selectedItems)) {\n      return RM.contains(item, selectedItems)\n    }\n    return RM.equals(selectedItem, item)\n  }\n  updateSelection(item: Maybe<ItemType>) {\n    const {\n      isMulti,\n      selectedItems = [],\n      onSingleSelection,\n      onMultiSelection,\n    } = this.props\n    if (item === null) {\n      if (isMulti && onMultiSelection) {\n        onMultiSelection([])\n      } else if (onSingleSelection) {\n        onSingleSelection(null)\n      }\n    } else if (isMulti && onMultiSelection) {\n      if (this.isItemSelected(item)) {\n        onMultiSelection(\n          Array.isArray(selectedItems)\n            ? RM.without([item], selectedItems)\n            : [item],\n        )\n      } else {\n        onMultiSelection(\n          Array.isArray(selectedItems) ? RM.concat(selectedItems, [item]) : [],\n        )\n      }\n    } else if (onSingleSelection) {\n      onSingleSelection(item)\n    }\n  }\n  render() {\n    const {\n      items,\n      isClearable,\n      isInvalid = false,\n      textColor = 'inherit',\n      formatItem,\n    } = this.props\n    return (\n      <SelectorStyled isInvalid={isInvalid}>\n        {isClearable && (\n          <ItemStyled\n            isSelected={!this.hasSelection()}\n            textColor={textColor}\n            onClick={() => {\n              this.updateSelection(null)\n            }}\n          >\n            <Trans id=\"optionselector.clear-filter\">All</Trans>\n          </ItemStyled>\n        )}\n        {items.map((item, idx) => {\n          return (\n            <ItemStyled\n              key={idx}\n              isSelected={this.isItemSelected(item)}\n              textColor={textColor}\n              onClick={() => {\n                this.updateSelection(item)\n              }}\n            >\n              {formatItem!(item)}\n            </ItemStyled>\n          )\n        })}\n      </SelectorStyled>\n    )\n  }\n}\n\nfunction applySelectionStyle({ isSelected }: IItemProps) {\n  if (!isSelected) {\n    return ''\n  }\n  return css`\n    font-weight: bolder;\n    text-decoration: underline;\n  `\n}\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","import React from 'react'\n\nimport { SelectControlFlat } from '../atoms/SelectControlFlat'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Colors } from '../styling'\n\nexport const CompanyBranchFlatSelect: React.FC<ICompanyBranchPickerImpl> = ({\n  branches,\n  selectedBranch,\n  selectedBranches,\n  textColor = Colors.black,\n  ...props\n}) => (\n  <SelectControlFlat<FCompanyBranchFragment>\n    items={branches}\n    selectedItem={selectedBranch}\n    selectedItems={selectedBranches}\n    textColor={textColor}\n    formatItem={item => <span title={item.brand.name}>{item.name}</span>}\n    {...props}\n  />\n)\n","import React from 'react'\n\nimport { useRoot } from '../atoms/RootProvider'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport {\n  CompanyBranchDropdown,\n  ICompanyBranchDropdownProps,\n} from '../molecules/CompanyBranchDropdown'\nimport { CompanyBranchFlatSelect } from '../molecules/CompanyBranchFlatSelect'\n\ntype TBranch = FCompanyBranchFragment\n\ninterface ICompanyBranchPickerProps {\n  selectedBranches?: ID[]\n  onSelectionChange?(branchIds: ID[], branches: TBranch[]): void\n  onSelectionClear?(): void\n  breakpoint?: number\n  isMulti?: boolean\n  isClearable?: boolean\n  textColor?: string\n  getDropdownProps?(): Partial<ICompanyBranchDropdownProps>\n}\n\nexport interface ICompanyBranchPickerImpl {\n  branches: ReadonlyArray<TBranch>\n  isMulti?: boolean\n  isClearable?: boolean\n  selectedBranch?: Maybe<TBranch>\n  onSingleSelection?(branch: Maybe<TBranch>): void\n  selectedBranches?: TBranch[]\n  onMultiSelection?(branches: TBranch[]): void\n  textColor?: string\n}\n\nexport const CompanyBranchPicker: React.FC<ICompanyBranchPickerProps> = ({\n  breakpoint = 3,\n  selectedBranches = [],\n  isMulti = false,\n  isClearable = true,\n  textColor,\n  onSelectionChange,\n  onSelectionClear,\n  getDropdownProps = () => ({}),\n}) => {\n  const { user } = useRoot()\n  const isSelected = branch => selectedBranches.includes(branch.id)\n  const props: ICompanyBranchPickerImpl = {\n    textColor,\n    isClearable,\n    isMulti,\n    branches: user.branches,\n    selectedBranch: user.branches.find(isSelected),\n    selectedBranches: user.branches.filter(isSelected),\n    onSingleSelection(selected: TBranch) {\n      if (selected === null && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected !== null && onSelectionChange) {\n        onSelectionChange([selected.id], [selected])\n      }\n    },\n    onMultiSelection(selected: TBranch[]) {\n      if (selected.length === 0 && onSelectionClear) {\n        onSelectionClear()\n      } else if (selected.length && onSelectionChange) {\n        onSelectionChange(selected.map(RM.prop('id')), selected)\n      }\n    },\n  }\n  if (user.branches.length < breakpoint) {\n    return <CompanyBranchFlatSelect {...props} />\n  }\n  return <CompanyBranchDropdown {...props} {...getDropdownProps()} />\n}\n","import styled from 'styled-components'\n\ntype TCursor = 'pointer' | 'arrow' | 'default'\n\nexport const CursorContainer = styled.div`\n  cursor: ${({ cursor = 'default' }: { cursor?: TCursor }) => cursor};\n`\n","import React from 'react'\n\nimport { CursorContainer } from '../atoms/CursorContainer'\nimport { FCompanyBranchFragment } from '../graph/generated'\n\ninterface ICompanyBranchProps {\n  branch: FCompanyBranchFragment\n  onClick?: () => void\n  short?: boolean\n  showBrand?: boolean\n}\n\nexport const CompanyBranch: React.FC<ICompanyBranchProps> = ({\n  branch,\n  onClick,\n  short = false,\n  showBrand = true,\n}) => (\n  <CursorContainer cursor=\"pointer\" onClick={onClick}>\n    {short ? (\n      branch.name.substr(0, 8)\n    ) : (\n      <>\n        <span>{branch.name}</span>\n        {showBrand && <span>{` [${branch.brand.name}]`}</span>}\n      </>\n    )}\n  </CursorContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Props } from 'react-select/lib/Select'\n\nimport { CompanyBranch } from '../atoms/CompanyBranch'\nimport { ISelectControlProps, SelectControl } from '../atoms/SelectControl'\nimport { FCompanyBranchFragment } from '../graph/generated'\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ICompanyBranchPickerImpl } from '../organisms/CompanyBranchPicker'\nimport { Spacing } from '../styling'\n\ninterface IProps\n  extends ICompanyBranchPickerImpl,\n    Props<FCompanyBranchFragment> {}\n\nexport interface ICompanyBranchDropdownProps\n  extends Pick<\n      ISelectControlProps<FCompanyBranchFragment>,\n      'placeholder' | 'width'\n    > {}\n\nconst ClearIndicator = props => {\n  const {\n    getStyles,\n    innerProps: { ref, ...restInnerProps },\n  } = props\n  return (\n    <div\n      {...restInnerProps}\n      ref={ref}\n      style={getStyles('clearIndicator', props)}\n    >\n      <div style={{ padding: '0px 5px' }}>\n        <Trans>All</Trans>\n      </div>\n    </div>\n  )\n}\n\nexport const CompanyBranchDropdown: React.FC<IProps> = ({\n  branches,\n  selectedBranch,\n  onSingleSelection,\n  selectedBranches,\n  onMultiSelection,\n  ...props\n}) => (\n  <SelectControl<FCompanyBranchFragment>\n    value={props.isMulti ? selectedBranches : selectedBranch}\n    placeholder={\n      props.isMulti ? i18n.t`Filter branches...` : i18n.t`Select a branch`\n    }\n    maxHeight={Spacing.ButtonHeight}\n    options={branches as FCompanyBranchFragment[]}\n    getOptionValue={RM.prop('id')}\n    formatOptionLabel={branch => <CompanyBranch branch={branch} />}\n    filterOption={(branch, rawInput) =>\n      branch.data.name\n        .toLocaleLowerCase()\n        .includes(rawInput.toLocaleLowerCase())\n    }\n    closeMenuOnSelect={!props.isMulti}\n    components={{\n      ClearIndicator,\n    }}\n    styles={{\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n    }}\n    onChange={selection => {\n      if (props.isMulti && onMultiSelection && Array.isArray(selection)) {\n        onMultiSelection(selection)\n      }\n      if (!props.isMulti && onSingleSelection) {\n        if (Array.isArray(selection)) {\n          onSingleSelection(RM.head(selection) || null)\n        } else {\n          onSingleSelection(selection || null)\n        }\n      }\n    }}\n    {...props}\n  />\n)\n","import { CancelOutlined } from '@material-ui/icons'\nimport { MINUTE, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\nimport { css } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ETimeBadgeVariant, TimeBadge } from '../../../atoms/TimeBadge'\nimport { Colors } from '../../../styling'\n\ninterface IDeliveryTimeBadgeProps {\n  deliverAt: Maybe<Date>\n  deliveredAt: Maybe<Date>\n  isCancelled?: boolean\n  isDelayed?: boolean\n  onClick?(): void\n}\n\nconst cancelIconPadding = css`\n  padding: 0.2rem 0.3rem 0.1rem 0.3rem;\n`\nconst DelayedTimeMark = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.greyMiddle};\n  width: 0.6rem;\n  height: 0.6rem;\n  border-radius: 0.7rem;\n  position: absolute;\n`\n\nexport const DeliveryTimeBadge: React.FC<IDeliveryTimeBadgeProps> = ({\n  deliverAt,\n  deliveredAt,\n  isCancelled = false,\n  isDelayed = false,\n  onClick,\n}) => {\n  const timerEnabled = !(deliveredAt || isCancelled)\n  const now = useTimer({ interval: MINUTE, enabled: timerEnabled })\n\n  let variant = ETimeBadgeVariant.UNKNOWN\n\n  if (isCancelled) {\n    return (\n      <TimeBadge variant={variant} className={cancelIconPadding}>\n        <CancelOutlined />\n      </TimeBadge>\n    )\n  }\n\n  if (!deliverAt) {\n    return <TimeBadge variant={variant}>❔</TimeBadge>\n  }\n\n  const minutes = differenceInMinutes(deliverAt, deliveredAt || now)\n\n  if (minutes > 20) {\n    variant = ETimeBadgeVariant.NORMAL\n  } else if (minutes > 0) {\n    variant = ETimeBadgeVariant.WARNING\n  } else {\n    variant = ETimeBadgeVariant.CRITICAL\n  }\n\n  return (\n    <>\n      {isDelayed && <DelayedTimeMark />}\n      <TimeBadge minutes={minutes} variant={variant} onClick={onClick} />\n    </>\n  )\n}\n","import React, { createElement, HTMLAttributes } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CanMutate } from '../atoms/CanMutate'\nimport { CanQuery } from '../atoms/CanQuery'\n\ninterface IPageLayoutItemProps extends HTMLAttributes<HTMLElement> {\n  route?: string\n  component: React.ComponentType\n  canQuery?: string\n  canMutate?: string\n}\n\nexport const PageLayoutItem: React.FC<IPageLayoutItemProps> = ({\n  route,\n  component,\n  canQuery,\n  canMutate,\n  ...props\n}) => {\n  let layoutItem = route ? (\n    <Link to={route}>{createElement(component)}</Link>\n  ) : (\n    createElement(component)\n  )\n\n  if (canQuery) {\n    layoutItem = <CanQuery queryName={canQuery}>{layoutItem}</CanQuery>\n  }\n  if (canMutate) {\n    layoutItem = <CanMutate mutationName={canMutate}>{layoutItem}</CanMutate>\n  }\n  return <div {...props}>{layoutItem}</div>\n}\n","import styled from 'styled-components'\n\nexport const LinkStyled = styled.a`\n  color: inherit;\n  text-decoration-color: rgba(0, 0, 0, 0.08);\n  &:hover {\n    text-decoration-color: rgba(0, 0, 0, 0.5);\n  }\n  &:visited {\n    text-decoration-color: rgba(0, 0, 0, 0.08);\n  }\n`\n","import { css, cx } from 'emotion'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport enum ETimeBadgeVariant {\n  UNKNOWN,\n  CRITICAL,\n  WARNING,\n  NORMAL,\n}\n\ninterface ITimeBadgeProps {\n  variant: ETimeBadgeVariant\n  minutes?: number\n  children?: React.ReactNode\n  className?: string\n  onClick?(): void\n}\n\nconst TimeBadgeStyled = styled.div`\n  height: 2rem;\n  line-height: 2rem;\n  width: 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid white;\n  color: ${Colors.white};\n  background: ${Colors.greyMiddle};\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst variants = {\n  [ETimeBadgeVariant.UNKNOWN]: styled(TimeBadgeStyled)``,\n  [ETimeBadgeVariant.CRITICAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.red};\n  `,\n  [ETimeBadgeVariant.WARNING]: styled(TimeBadgeStyled)`\n    background: ${Colors.orange};\n    color: ${Colors.black};\n    font-weight: bold;\n  `,\n  [ETimeBadgeVariant.NORMAL]: styled(TimeBadgeStyled)`\n    background: ${Colors.green};\n  `,\n}\n\nconst bigNumberStyle = css`\n  font-size: 0.8rem;\n`\nconst dashStyle = css`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nconst clickable = css`\n  cursor: pointer;\n`\n\nexport const TimeBadge: React.FC<ITimeBadgeProps> = ({\n  minutes,\n  className,\n  children,\n  variant,\n  onClick,\n}) => {\n  const Variant = variants[variant]\n  let output = children\n  const extraClassNames = ['animated']\n  if (minutes !== undefined) {\n    if (minutes > 99 || minutes < -9) {\n      extraClassNames.push(bigNumberStyle)\n    }\n    if (minutes < -99) {\n      output = '‒'\n      extraClassNames.push(dashStyle)\n    } else {\n      output = minutes.toString()\n    }\n  }\n  if (onClick) {\n    extraClassNames.push(clickable)\n  }\n  return (\n    <Variant\n      key={minutes}\n      onClick={onClick}\n      className={cx(\n        className,\n        {\n          heartBeat: variant === ETimeBadgeVariant.CRITICAL && minutes! > 0,\n          pulse: variant === ETimeBadgeVariant.WARNING,\n        },\n        ...extraClassNames,\n      )}\n    >\n      {output}\n    </Variant>\n  )\n}\n","import React from 'react'\n\nimport { FCustomerFragment } from '../../../graph/generated'\n\ninterface ICustomerNameProps {\n  customer: FCustomerFragment | null\n}\n\nexport const CustomerIdentity: React.FC<ICustomerNameProps> = ({ customer }) =>\n  customer ? (\n    <span>{`${\n      customer.lastName\n        ? `${customer.firstName} ${customer.lastName}`\n        : customer.defaultPhone\n          ? customer.defaultPhone.phone\n          : ``\n    }`}</span>\n  ) : (\n    <i>unknown</i>\n  )\n","import { useDisposable } from 'mobx-react-lite'\n\nimport { whenGoingOnline } from '../helpers/offline'\n\nexport function useOnConnectionRestored(cb: () => void) {\n  useDisposable(() => whenGoingOnline(cb))\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\nimport { Colors } from '../../../styling'\n\ninterface INoteLineProps {\n  note?: string | null\n  previousNote?: string | null\n}\n\nconst CurrentNoteStyled = styled.span`\n  color: ${Colors.orange};\n`\nconst PreviousNoteStyled = styled.span`\n  color: ${Colors.greyDark};\n  margin-left: 0.5rem;\n`\n\nexport const NoteLine: React.FC<INoteLineProps> = ({ note, previousNote }) =>\n  note || previousNote ? (\n    <>\n      <HorizontalSeparator />\n      <IconLine icon=\"note\" labelMargin=\"0\">\n        <CurrentNoteStyled>\n          {note || i18n.t`Without note`.toLocaleLowerCase()}\n        </CurrentNoteStyled>\n        <PreviousNoteStyled>{previousNote}</PreviousNoteStyled>\n      </IconLine>\n    </>\n  ) : null\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nconst StyledOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 3.8rem;\n  top: 0;\n`\n\nexport const OrderStarIndicator: React.FC<IProps> = props => {\n  return (\n    <StyledOrderStarIndicator>\n      <Icon iconName=\"star\" color={Colors.orange} />\n    </StyledOrderStarIndicator>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport { Element } from 'react-scroll'\nimport styled from 'styled-components'\n\nimport {\n  DeliveryTypeEnum,\n  FOrderTickerFragment,\n} from '../../../graph/generated'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, Radiuses } from '../../../styling'\nimport { CustomerIdentity } from '../atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../atoms/DeliveryTimeBadge'\nimport { OrderStarIndicator } from '../atoms/OrderStarIndicator'\n\ninterface IOrderTickerProps {\n  order: FOrderTickerFragment\n  showBranch: boolean\n  isCancelled: boolean\n  onClick(): void\n}\n\nconst OrderTickerStyled = styled(Element)`\n  text-align: left;\n  cursor: pointer;\n  &:hover {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.05)\n      .string()};\n  }\n  &:active {\n    background-color: ${Color(Colors.turquoise)\n      .alpha(0.2)\n      .string()};\n  }\n`\n\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.4rem;\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 2rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst PriceContainerStyled = styled.div`\n  flex: 0 0 3.5rem;\n  text-align: right;\n  position: relative;\n`\nconst PaidMarkStyled = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0.1rem;\n    right: -0.3rem;\n    left: 0.9rem;\n    bottom: 0.3rem;\n    border-top: 2px solid ${Colors.orange};\n    transform: rotate(13deg);\n    transform-origin: 0% 0%;\n    opacity: 0.7;\n  }\n`\nconst PaidTextStyled = styled.div`\n  color: ${Colors.orange};\n`\n\nexport const ToBranchContainerStyled = styled.div`\n  padding: 0.3rem 0.6rem;\n  display: inline-block;\n  border-top-left-radius: ${Radiuses.Card};\n  background-color: ${Colors.green};\n  color: ${Colors.white};\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n  color: ${Colors.violet};\n`\n\nexport const OrderTicker: React.FC<IOrderTickerProps> = ({\n  order,\n  isCancelled,\n  showBranch,\n  onClick,\n}) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderTickerStyled onClick={onClick} name={`order-${order.id}`}>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={isCancelled}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n        </CustomerIdentityContainerStyled>\n\n        <PriceContainerStyled>\n          {order.isPriority && <OrderStarIndicator />}\n          {order.totalSum.formattedValue}\n          {order.isPaidWithCard && (\n            <>\n              <PaidMarkStyled />\n              <PaidTextStyled>\n                <Trans>Paid</Trans>\n              </PaidTextStyled>\n            </>\n          )}\n        </PriceContainerStyled>\n      </OrderTickerMainContentStyled>\n    </OrderTickerStyled>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { CompanyBranchPicker } from '../../../organisms/CompanyBranchPicker'\nimport { Colors } from '../../../styling'\n\ninterface IOrderListBranchFilterProps {}\n\nexport const OrderListBranchFilter: React.FC<\n  IOrderListBranchFilterProps\n> = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <CompanyBranchPicker\n      selectedBranches={Array.from(order.list.branches)}\n      onSelectionChange={branches => {\n        order.list.setBranchFilter(branches)\n      }}\n      onSelectionClear={order.list.clearBranchFilter}\n      textColor={Colors.turquoise}\n      isMulti={true}\n      isClearable={false}\n    />\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport { AccessTime } from '@material-ui/icons'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { formatTimeWithoutTodayDate } from '../../../helpers/formats'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  deliverTime: string | null\n  deliverType: 'DELIVER_UNTIL' | 'DELIVER_AT_SPECIFIC_TIME' | 'PERSONAL'\n}\nconst Label = styled.span`\n  color: ${Colors.greyDark};\n`\nconst DeliveryTime = styled.div`\n  color: ${Colors.black};\n  font-weight: bold;\n  display: inline-block;\n  margin-left: 0.3rem;\n`\n\nconst DeliverLabel = ({ deliverType }) => {\n  switch (deliverType) {\n    case 'DELIVER_UNTIL':\n      return (\n        <Label>\n          <Trans>Deliver until</Trans>\n        </Label>\n      )\n    case 'DELIVER_AT_SPECIFIC_TIME':\n      return (\n        <Label>\n          <Trans>Deliver at</Trans>\n        </Label>\n      )\n    case 'PERSONAL':\n      return (\n        <Label>\n          <Trans>Personal pickup at</Trans>\n        </Label>\n      )\n    default:\n      return null\n  }\n}\n\nexport const KitchenOrderAtSummary: React.FC<IProps> = ({\n  deliverTime,\n  deliverType,\n}) => {\n  return (\n    <IconLine icon={AccessTime} labelMargin=\"0\">\n      <DeliverLabel deliverType={deliverType} />\n      {deliverTime && (\n        <DeliveryTime>{formatTimeWithoutTodayDate(deliverTime)}</DeliveryTime>\n      )}\n    </IconLine>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  isChecked: boolean\n  onClick(): void\n}\n\nconst Circle = styled.div`\n  background: ${Colors.white};\n  border: 2px solid ${Colors.green};\n  width: 2.1rem;\n  height: 2.1rem;\n  position: relative;\n  border-radius: 50%;\n  margin-bottom: ${Spacing.Small};\n`\nconst CheckedInner = styled.div`\n  background: ${Colors.green};\n  border-radius: 50%;\n  margin: 0;\n  width: 70%;\n  height: 70%;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const TouchCheckButton: React.FC<IProps> = ({ isChecked, onClick }) => (\n  <Circle onClick={onClick}>{isChecked && <CheckedInner />}</Circle>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport {\n  OrderRecipeStateEnum,\n  useMKitchenRecipeState,\n} from '../../../graph/generated'\nimport { Colors, FontSizes } from '../../../styling'\nimport { TouchCheckButton } from '../atoms/TouchCheckButton'\n\ninterface IProps {\n  recipeId?: ID\n  code?: string\n  label: string\n  isDone: boolean\n  isCheckable: boolean\n  isFirstSidedish?: boolean\n}\n\nconst firstSideDishStyle = css`\n  margin-top: -0.8rem;\n`\n\nconst OrderWareLineWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${(props: { isFirstSidedish: boolean }) =>\n    props.isFirstSidedish && firstSideDishStyle};\n`\n\nconst IsDoneContainerStyled = styled.div`\n  flex: 0 0 2.4rem;\n`\nconst CodeContainerStyled = styled.div`\n  flex: 0 0 4.1rem;\n  font-size: ${FontSizes.CompactCardBig};\n  color: ${Colors.black};\n  margin-top: 0.35rem;\n`\nconst NameContainerStyled = styled.div`\n  flex: 1 0;\n  color: ${Colors.greyMiddle};\n  margin-top: 0.35rem;\n`\n\nexport const KitchenOrderWareLine: React.FC<IProps> = ({\n  recipeId,\n  code,\n  label,\n  isDone,\n  isCheckable,\n  isFirstSidedish = false,\n}) => {\n  const [updateOrderRecipeState] = useMKitchenRecipeState()\n\n  return (\n    <OrderWareLineWrap isFirstSidedish={isFirstSidedish}>\n      <IsDoneContainerStyled>\n        {isCheckable && (\n          <TouchCheckButton\n            isChecked={isDone}\n            onClick={() => {\n              if (recipeId) {\n                updateOrderRecipeState({\n                  recipeId,\n                  state: isDone\n                    ? OrderRecipeStateEnum.Preparing\n                    : OrderRecipeStateEnum.Cooked,\n                })\n              }\n            }}\n          />\n        )}\n      </IsDoneContainerStyled>\n      <CodeContainerStyled>{code}</CodeContainerStyled>\n      <NameContainerStyled>{label}</NameContainerStyled>\n    </OrderWareLineWrap>\n  )\n}\n","import React, { Fragment } from 'react'\n\nimport { OrderRecipeStateEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { KitchenOrderWareLine } from '../molecules/KitchenOrderWareLine'\n\ninterface IProps {\n  orderWares: ReadonlyArray<FKitchenOrder.Items>\n  isCheckable: boolean\n}\n\nexport const KitchenOrderWareList: React.FC<IProps> = ({\n  orderWares,\n  isCheckable,\n}) => {\n  const renderWare = (orderWare: FKitchenOrder.Items) => (\n    <Fragment key={orderWare.id}>\n      <KitchenOrderWareLine\n        recipeId={orderWare.id}\n        code={orderWare.recipe.code}\n        label={orderWare.recipe.nameLabel}\n        isDone={orderWare.orderRecipeState.enum === OrderRecipeStateEnum.Cooked}\n        isCheckable={isCheckable}\n      />\n      <>\n        {orderWare.sidedishes.map((sidedish, index) => (\n          <KitchenOrderWareLine\n            key={`${orderWare.id}-${sidedish.id}`}\n            recipeId={sidedish.id}\n            code={`+${sidedish.recipe.code}`}\n            label={sidedish.recipe.nameLabel}\n            isDone={false}\n            isCheckable={false}\n            isFirstSidedish={index === 0 && isCheckable}\n          />\n        ))}\n      </>\n    </Fragment>\n  )\n  return <div>{orderWares.map(renderWare)}</div>\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { OrderStateEnum, useMOrderState } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const KitchenAcceptButton: React.FC<IProps> = ({ orderId }) => {\n  const [acceptOrder] = useMOrderState()\n\n  return (\n    <CanMutate mutationName=\"addOrderState\">\n      <TouchButton\n        iconName=\"keyboard_arrow_right\"\n        width={Spacing.ButtonHeight + Spacing.DefaultSizeUnit}\n        color={Colors.green}\n        onClick={() => {\n          acceptOrder({ orderId, state: OrderStateEnum.InProduce })\n        }}\n      />\n    </CanMutate>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Icon } from '../../../atoms/Icon'\nimport { Colors } from '../../../styling'\n\ninterface IProps {}\n\nconst StyledKitchenOrderStarIndicator = styled.div`\n  display: inline-block;\n  position: absolute;\n  right: 0.2rem;\n  top: 0.2rem;\n  z-index: 5;\n`\n\nexport const KitchenOrderStarIndicator: React.FC<IProps> = props => {\n  return (\n    <StyledKitchenOrderStarIndicator>\n      <Icon iconName=\"star\" color={Colors.orange} />\n    </StyledKitchenOrderStarIndicator>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { HorizontalSeparator } from '../../../atoms/HorizontalSeparator'\nimport {\n  DeliveryTypeEnum,\n  OrderStateCategoryEnum,\n} from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { NoteLine } from '../../order/molecules/NoteLine'\nimport { KitchenOrderAtSummary } from '../atoms/KitchenOrderAtSummary'\nimport { KitchenOrderWareList } from '../organisms/KitchenOrderWareList'\nimport { KitchenAcceptButton } from './KitchenAcceptButton'\nimport { KitchenOrderStarIndicator } from './KitchenOrderStarIndicator'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\nconst StyledOrderDetailContainer = styled.div`\n  padding: 0 0.2rem 0.1rem 0.2rem;\n  position: relative;\n`\n\nexport const KitchenOrderDetail: React.FC<IProps> = ({ order }) => (\n  <StyledOrderDetailContainer>\n    <HorizontalSeparator />\n    {order.isPriority && <KitchenOrderStarIndicator />}\n    <KitchenOrderWareList\n      orderWares={order.items}\n      isCheckable={\n        order.orderStateCategory === OrderStateCategoryEnum.Preparing ||\n        order.orderStateCategory === OrderStateCategoryEnum.ReadyToDeliver\n      }\n    />\n    <HorizontalSeparator />\n    <KitchenOrderAtSummary\n      deliverTime={order.deliverAt}\n      deliverType={\n        order.deliveryType &&\n        order.deliveryType.enum === DeliveryTypeEnum.Pickup\n          ? 'PERSONAL'\n          : 'DELIVER_UNTIL'\n      }\n    />\n    <NoteLine note={order.note} previousNote={order.previousNote} />\n    {order.orderStateCategory === OrderStateCategoryEnum.NewOrders && (\n      <CardDock position=\"BottomRight\">\n        <KitchenAcceptButton orderId={order.id} />\n      </CardDock>\n    )}\n  </StyledOrderDetailContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { LinkStyled } from '../../../atoms/LinkStyled'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { FKitchenOrder } from '../../../graph/types'\nimport { formatAddress } from '../../../helpers/formats'\nimport { Colors, FontSizes, Radiuses, Spacing } from '../../../styling'\nimport { CustomerIdentity } from '../../order/atoms/CustomerIdentity'\nimport { DeliveryTimeBadge } from '../../order/atoms/DeliveryTimeBadge'\nimport { ToBranchContainerStyled } from '../../order/molecules/OrderTicker'\nimport { KitchenOrderDetail } from './KitchenOrderDetail'\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n}\n\ninterface IProps {\n  order: FKitchenOrder.Fragment\n  showBranch: boolean\n}\nexport const OrderBoxStyled = styled.div`\n  font-size: ${FontSizes.CompactCard};\n  background-color: ${Colors.white};\n  color: ${Colors.greyDarkest};\n  border-radius: ${Radiuses.Card};\n  margin-bottom: ${Spacing.Middle};\n  margin-right: ${Spacing.Middle};\n  position: relative;\n`\nconst OrderTickerMainContentStyled = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 0.2rem;\n  color: ${Colors.greyMiddle};\n`\n\nconst DeliveryTimeBadgeContainerStyled = styled.div`\n  flex: 0 0 1.8rem;\n`\nconst AddressDisplayContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\nconst CustomerIdentityContainerStyled = styled.div`\n  flex: 1 0;\n  padding: 0 0 0 0.5rem;\n`\n\nconst ToPickupLabel = styled.div`\n  font-style: italic;\n`\n\nexport const KitchenOrderBox: React.FC<IProps> = ({ order, showBranch }) => {\n  const getOrderDestination = () => {\n    if (\n      order.deliveryType &&\n      order.deliveryType.enum === DeliveryTypeEnum.Pickup\n    ) {\n      return (\n        <ToPickupLabel>\n          <Trans>To pickup</Trans>\n        </ToPickupLabel>\n      )\n    }\n    return formatAddress(order.address)\n  }\n\n  return (\n    <OrderBoxStyled>\n      {showBranch && (\n        <ToBranchContainerStyled>\n          {order.companyBranch.name}\n        </ToBranchContainerStyled>\n      )}\n      <OrderTickerMainContentStyled>\n        <DeliveryTimeBadgeContainerStyled>\n          <DeliveryTimeBadge\n            deliverAt={order.deliverAt ? new Date(order.deliverAt) : null}\n            deliveredAt={order.deliveredAt ? new Date(order.deliveredAt) : null}\n            isCancelled={false}\n            isDelayed={order.delayedDeliveryTime !== null}\n          />\n        </DeliveryTimeBadgeContainerStyled>\n\n        <AddressDisplayContainerStyled>\n          {getOrderDestination()}\n        </AddressDisplayContainerStyled>\n\n        <CustomerIdentityContainerStyled>\n          <CustomerIdentity customer={order.customer} />\n          <br />\n          {order.customer && order.customer.defaultPhone ? (\n            <LinkStyled\n              href={`tel:${order.customer.defaultPhone.phone\n                .toString()\n                .replace('/ /g', '')}`}\n            >\n              {order.customer.defaultPhone.phone}\n            </LinkStyled>\n          ) : null}\n        </CustomerIdentityContainerStyled>\n      </OrderTickerMainContentStyled>\n\n      <KitchenOrderDetail order={order} />\n    </OrderBoxStyled>\n  )\n}\n","import { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FKitchenOrderFragment,\n  OrderStateCategoryEnum,\n  QKitchenOrderListOrders,\n  QKitchenOrderListQuery,\n  SKitchenOrderListSubscription,\n  useQKitchenOrderList,\n  useSKitchenOrderList,\n} from '../../../graph/generated'\nimport { useOnConnectionRestored } from '../../../hooks/useOnConnectionRestored'\n\nconst requiredCategories = [\n  OrderStateCategoryEnum.NewOrders,\n  OrderStateCategoryEnum.Preparing,\n  OrderStateCategoryEnum.ReadyToDeliver,\n]\n\ntype TOrder = QKitchenOrderListOrders\n\ninterface ILoaderContext {\n  loading: boolean\n  noFilter: boolean\n  orders: ReadonlyArray<TOrder>\n}\n\nconst loaderContext = React.createContext<ILoaderContext>({\n  loading: true,\n  noFilter: true,\n  orders: [],\n})\n\nexport const KitchenOrderListLoader: React.FC = observer(props => {\n  const { order: orderModel } = useRoot()\n  const noFilter = !orderModel.list.hasBranchFilter\n  const { data, loading, updateQuery, refetch } = useQKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      categories: requiredCategories,\n    },\n    { skip: noFilter },\n  )\n  const sortByPriority = RM.sortWith<FKitchenOrderFragment>(\n    // @ts-ignore Fix typing\n    [\n      RM.descend(RM.or(RM.prop('isPriority'), RM.not)),\n      RM.ascend(RM.prop('deliverAt')),\n    ],\n  )\n  useOnConnectionRestored(refetch)\n\n  useSKitchenOrderList(\n    {\n      branches: orderModel.list.branchesFilter,\n      // subscription needs to watch for finished state to remove such orders from view\n      categories: requiredCategories.concat(OrderStateCategoryEnum.Finished),\n    },\n    {\n      skip: noFilter,\n      onSubscriptionData({ subscriptionData: { data: dataUpdate } }) {\n        if (dataUpdate) {\n          updateQuery(prev => handleSubscriptionUpdate(dataUpdate, prev))\n        }\n      },\n    },\n  )\n\n  return (\n    <loaderContext.Provider\n      value={{\n        loading,\n        noFilter,\n        orders: loading ? [] : sortByPriority(data.orders),\n      }}\n    >\n      {props.children}\n    </loaderContext.Provider>\n  )\n})\n\nexport function useKitchenOrderList() {\n  return React.useContext(loaderContext)\n}\n\nfunction handleSubscriptionUpdate(\n  update: SKitchenOrderListSubscription,\n  prev: QKitchenOrderListQuery,\n) {\n  const { order } = update.updatedOrder\n  if (!order) {\n    return prev\n  }\n  if (!requiredCategories.includes(order.orderStateCategory)) {\n    return { orders: prev.orders.filter(o => o.id !== order.id) }\n  }\n  let orderExists = false\n  const orders = prev.orders.map(o => {\n    if (o.id === order.id) {\n      orderExists = true\n      return order\n    }\n    return o\n  })\n  if (!orderExists) {\n    orders.unshift(order)\n  }\n  return { orders }\n}\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { KitchenOrderBox } from '../molecules/KitchenOrderBox'\nimport { useKitchenOrderList } from './KitchenOrderListLoader'\n\ninterface IProps {\n  category: OrderStateCategoryEnum\n}\n\nconst InfoMessage = styled.div`\n  margin: 0 0.5rem;\n`\n\nexport const KitchenOrderList = observer<IProps>(({ category }) => {\n  const { order: orderModel } = useRoot()\n  const { loading, noFilter, orders } = useKitchenOrderList()\n\n  if (noFilter) {\n    return (\n      <InfoMessage>\n        <Trans>Select a branch</Trans>\n      </InfoMessage>\n    )\n  }\n\n  if (loading) {\n    return (\n      <InfoMessage>\n        <Trans>Loading</Trans>\n      </InfoMessage>\n    )\n  }\n\n  const categoryOrders = orders.filter(\n    RM.propEq('orderStateCategory', category),\n  )\n\n  if (categoryOrders.length === 0) {\n    switch (category) {\n      case OrderStateCategoryEnum.NewOrders:\n        return (\n          <InfoMessage>\n            <Trans>No new orders</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.Preparing:\n        return (\n          <InfoMessage>\n            <Trans>No orders to prepare</Trans>\n          </InfoMessage>\n        )\n      case OrderStateCategoryEnum.ReadyToDeliver:\n        return (\n          <InfoMessage>\n            <Trans>No orders to deliver</Trans>\n          </InfoMessage>\n        )\n      default:\n        return (\n          <InfoMessage>\n            <Trans>No orders</Trans>\n          </InfoMessage>\n        )\n    }\n  }\n\n  return (\n    <>\n      {categoryOrders.map(order => (\n        <KitchenOrderBox\n          key={order.id}\n          order={order}\n          showBranch={orderModel.list.branchesFilter.length > 1}\n        />\n      ))}\n    </>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { OrderStateCategoryEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { PageLayout } from '../../../molecules/PageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { PageLayoutItem } from '../../../molecules/PageLayoutItem'\nimport { Colors } from '../../../styling'\nimport { OrderListBranchFilter } from '../../order/organisms/OrderListBranchFilter'\nimport { KitchenOrderList } from '../organisms/KitchenOrderList'\nimport { KitchenOrderListLoader } from '../organisms/KitchenOrderListLoader'\n\nfunction getLayout() {\n  return [{ i: 'filter', x: 4, y: 0, w: 10, h: 1 }]\n}\n\nconst CategorySeparator = styled.div`\n  border: 1px solid ${Colors.white};\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: -0.5rem;\n`\n\nexport const KitchenOverviewPage: React.FC = () => (\n  <KitchenOrderListLoader>\n    <PageLayoutFullHeightItem withScrollArea={true} row={1} widthInColumns={5}>\n      <KitchenOrderList category={OrderStateCategoryEnum.NewOrders} />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={5}\n      widthInColumns={6}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.Preparing} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayoutFullHeightItem\n      withScrollArea={true}\n      row={1}\n      column={11}\n      widthInColumns={5}\n    >\n      <KitchenOrderList category={OrderStateCategoryEnum.ReadyToDeliver} />\n      <CategorySeparator />\n    </PageLayoutFullHeightItem>\n\n    <PageLayout\n      pageTitle={i18n.t`Kitchen`}\n      useBackButton={true}\n      layouts={getLayout()}\n    >\n      <PageLayoutItem\n        key=\"filter\"\n        component={() => <OrderListBranchFilter />}\n      />\n    </PageLayout>\n  </KitchenOrderListLoader>\n)\n","import React from 'react'\nimport { RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { KitchenOverviewPage } from '../pages/KitchenOverviewPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const KitchenRoutes: React.FC<IProps> = ({ match }) => {\n  return (\n    <>\n      <Switch>\n        <SecureRoute\n          exact={true}\n          path={match.path}\n          component={KitchenOverviewPage}\n        />\n      </Switch>\n    </>\n  )\n}\n\nexport default KitchenRoutes\n"],"sourceRoot":""}