{"version":3,"sources":["molecules/PageLayoutFullHeightItem.tsx","atoms/FlexRowSingle.tsx","atoms/VerticalGap.tsx","atoms/ScrollArea.tsx","atoms/CardDock.tsx","helpers/filter.ts","atoms/FormInputFlatSelect.tsx","atoms/RelativeLink.tsx","atoms/DragHandle.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/extends.js","atoms/FormInputSelect.tsx","../node_modules/@speedlo/assets/index.js","../node_modules/@speedlo/assets/Flaticon.js","../node_modules/apollo-client/errors/ApolloError.js","molecules/TouchButtonEdit.tsx","molecules/TouchButtonRemove.tsx","molecules/TouchButtonVisibility.tsx","atoms/NoteText.tsx","atoms/DataTable.tsx","molecules/SortableDataTable.tsx","segments/menu/molecules/CategoryListTable.tsx","segments/menu/molecules/CreateButton.tsx","segments/menu/organisms/CategoryList.tsx","segments/menu/organisms/MenuGuideDownload.tsx","segments/menu/pages/MenuCategoryListPage.tsx","molecules/TopRightButtonContainer.tsx","segments/menu/atoms/IsCategoryType.tsx","segments/menu/labels.ts","segments/menu/molecules/SubmitButton.tsx","atoms/FormContainer.tsx","atoms/PictogramDisplay.tsx","segments/menu/atoms/MenuCategoryPictogramSelect.tsx","segments/menu/molecules/FormDeleteButton.tsx","segments/menu/molecules/FormInputInternalNote.tsx","segments/menu/molecules/FormInputName.tsx","segments/menu/organisms/CategoryFormBasic.tsx","atoms/FormLoader.tsx","atoms/NavigateBack.tsx","segments/menu/atoms/MenuBaseFormLoader.tsx","segments/menu/hooks/useMenu.ts","segments/menu/organisms/CategoryFormLoader.tsx","atoms/DataList.tsx","atoms/FormDisplayField.tsx","segments/menu/molecules/FormInputPrice.tsx","segments/menu/molecules/FormInputVatSelect.graphql.ts","segments/menu/molecules/FormInputVatSelect.tsx","segments/menu/molecules/FormPricingField.tsx","segments/menu/atoms/MenuSuggestionPanel.tsx","segments/menu/molecules/RecipeAssocListTable.tsx","segments/menu/organisms/RecipeAssociatedView.tsx","segments/menu/organisms/RecipeFormPricing.tsx","segments/menu/organisms/RecipeSuggestionPanel.tsx","segments/menu/organisms/CategoryRecipesView.tsx","segments/menu/molecules/CategoryRequirementControl.tsx","segments/menu/organisms/CategoryRequirementsForm.tsx","segments/menu/pages/MenuCategoryPage.tsx","atoms/DataTableContainer.tsx","segments/menu/molecules/MenuCategoryFilter.tsx","segments/menu/molecules/MenuFilterInput.tsx","segments/menu/molecules/RecipeTypeSelection.tsx","segments/menu/molecules/RecipeListTable.tsx","segments/menu/organisms/RecipeListLoader.tsx","segments/menu/pages/MenuRecipeListPage.tsx","segments/menu/organisms/CategorySuggestionPanel.tsx","segments/menu/organisms/RecipeCategoryView.tsx","segments/menu/molecules/FormInputCode.tsx","segments/menu/molecules/FormInputDescription.tsx","segments/menu/molecules/FormInputAllergens.graphql.ts","segments/menu/atoms/AllergenIndicator.tsx","segments/menu/molecules/RecipeAllergenDisplay.tsx","segments/menu/organisms/RecipeFormBasic.tsx","segments/menu/organisms/RecipeFormLoader.tsx","segments/menu/molecules/RecipeIngredientsTable.tsx","segments/menu/organisms/RecipeIngredientsView.tsx","segments/menu/pages/MenuRecipePage.tsx","segments/menu/molecules/StockDepositConfirmButton.tsx","segments/menu/molecules/StockDepositFilterInput.tsx","segments/menu/molecules/StockDepositQuantityInput.tsx","segments/menu/molecules/StockDepositResultTable.tsx","segments/menu/organisms/StockDepositControl.tsx","segments/menu/organisms/StockDepositLoader.tsx","segments/menu/pages/MenuStockDepositPage.tsx","segments/menu/organisms/StockListTable.tsx","segments/menu/organisms/StockListLoader.tsx","segments/menu/pages/MenuStockListPage.tsx","segments/menu/organisms/StockForm.graphql.ts","segments/menu/organisms/StockFormLoader.tsx","segments/menu/molecules/FormInputAllergens.tsx","segments/menu/molecules/FormInputAllowNegative.tsx","../node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","segments/menu/molecules/FormInputPlu.tsx","segments/menu/molecules/FormInputWareUnit.graphql.ts","segments/menu/molecules/FormInputWareUnit.tsx","segments/menu/organisms/StockFormMain.tsx","segments/menu/organisms/StockRecipesVIew.tsx","segments/menu/pages/MenuStockPage.tsx","segments/menu/routes/MenuRoutes.tsx"],"names":["__webpack_require__","d","__webpack_exports__","PageLayoutFullHeightItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_atoms_ScrollArea__WEBPACK_IMPORTED_MODULE_2__","_styling__WEBPACK_IMPORTED_MODULE_3__","FullHeightDiv","styled","div","withConfig","displayName","componentId","props","undefined","widthInColumns","Spacing","LayoutGridCellMargin","column","row","FullHeightDivStyled","_ref","children","_ref$row","_ref$column","_ref$widthInColumns","_ref$withScrollArea","withScrollArea","scrollAreaId","a","createElement","id","FlexRowSingle","_ref$justify","justify","VerticalGap","_ref$size","size","_ref$sizeUnit","sizeUnit","concat","ScrollArea","CardDock","styled_components__WEBPACK_IMPORTED_MODULE_0__","_ref2","_ref2$position","position","_ref$position","isPartialMatch","searchValue","search","toLocaleLowerCase","propValue","includes","FormInputFlatSelect","_React$Component","_getPrototypeOf2","_this","Object","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","length","args","Array","_key","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","validate","value","_this$props","isRequired","isMulti","validationName","isArray","_i18n__WEBPACK_IMPORTED_MODULE_9__","_","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","fieldApi","_this$props2","items","defaultSelection","getItemId","selection","selectedItems","filter","item","onMultiSelection","setValue","map","setTouched","selectedItem","find","onSingleSelection","_this2","_this$props3","field","_this$props3$fieldIsP","fieldIsPure","_this$props3$isRequir","_this$props3$isCleara","isClearable","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","react_form__WEBPACK_IMPORTED_MODULE_7__","pure","_SelectControlFlat__WEBPACK_IMPORTED_MODULE_10__","assign","getControlProps","isInvalid","Boolean","error","React","Component","defaultProps","RM","prop","RelativeLink","to","from","linkProps","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","location","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","resolveLocation","pathname","resolvePathname","resolved","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DragHandle","react_sortable_hoc__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_Icon__WEBPACK_IMPORTED_MODULE_3__","DragHandleContainerStyled","SortableHandle","iconName","_extends","target","i","source","prototype","hasOwnProperty","FormInputSelect","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_i18n__WEBPACK_IMPORTED_MODULE_10__","0","validatioName","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_workspace_deepvision_admin_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","options","getOptionValue","defaultValue","isSelected","F","onChange","selectedOptions","option","_this$props2$fieldIsP","react__WEBPACK_IMPORTED_MODULE_7___default","react_form__WEBPACK_IMPORTED_MODULE_8__","_SelectControl__WEBPACK_IMPORTED_MODULE_11__","onFocus","styles","control","base","borderColor","exports","pictograms","module","defineProperty","tslib_1","isApolloError","err","generateErrorMessage","message","graphQLErrors","forEach","graphQLError","errorMessage","networkError","replace","ApolloError","_super","_a","extraInfo","__proto__","__extends","Error","TouchButtonEdit","_ref$Link","Link","objectWithoutProperties","react_default","SizerButton","TouchButton","TouchButtonRemove","esm_extends","TouchButtonVisibility","isVisible","iconColor","Colors","white","greyMiddle","color","NoteText","DataTable","_props$heightStretch","heightStretch","_props$fullHeight","fullHeight","_props$rowHeight","rowHeight","_props$isLoading","isLoading","tableProps","rowGetter","useCallback","index","noRowsRenderer","Pacman","renderTable","width","height","es","autoHeight","headerHeight","rowCount","style","outline","disableHeight","_ref3","scrollElement","window","_ref4","_ref5","checkColumnAccess","_ref6","renderer","canQuery","canMutate","cellProps","result","CanQuery","queryName","CanMutate","mutationName","ColumnRendererEdit","_ref7","cellData","TouchButtonEdit_TouchButtonEdit","ColumnRendererRemove","_ref8","columnData","TouchButtonRemove_TouchButtonRemove","onClick","onRemove","ColumnRendererVisibility","_ref9","rowData","TouchButtonVisibility_TouchButtonVisibility","onToggle","ColumnRendererWithNote","_ref10","Fragment","noteKey","DataTableEmptyText","_ref11","_ref11$text","text","i18n","SortableTableRowRenderer","SortableElement","columns","className","SortableDataTableContainer","SortableContainer","SortableDataTable","_React$PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","sortedItems","rowRenderer","rowProps","onHandleSorting","asyncToGenerator","regenerator_default","mark","_callee","newIndex","oldIndex","currentItems","sortSuccess","wrap","_context","prev","next","abrupt","toConsumableArray","arrayMove","setState","onSort","offset","t0","sent","stop","_x","inherits","createClass","lockAxis","useDragHandle","onSortEnd","PureComponent","getDerivedStateFromProps","nextProps","CategoryListTable","categories","_ref$showEditColumn","showEditColumn","_ref$showRemoveColumn","showRemoveColumn","_ref$showVisibilityCo","showVisibilityColumn","_ref$showHeader","showHeader","_ref$isSortable","isSortable","_ref$isLoading","_ref$heightStretch","_ref$fullHeight","_ref$noRowsDisplay","noRowsDisplay","disableHeader","dataKey","ButtonColumnWidthPx","minWidth","cellRenderer","cellDataGetter","getCategoryRoute","categoryType","enum","label","objectSpread","CreateButtonContainer","CreateButton","_ref$routeTo","routeTo","green","observer","headline","_ref$subHeadline","subHeadline","settings","useRoot","_useQMenuCategoryList","useQMenuCategoryList","branchId","data","loading","updateQuery","refetch","_useMMenuCategoryVisi","useMMenuCategoryVisibility","changeVisibility","slicedToArray","FlexColumn","widthGrowIndex","Headline","fixedWidth","CreateButton_CreateButton","CategoryListTable_CategoryListTable","categoryId","visible","optimisticResponse","updateWareCategory","__typename","menu","category","sortCategory","MenuGuideDownloadButton","black","MenuGuideDownload","_useQMenuGuideDownloa","useQMenuGuideDownload","companyBranch","foodMenuUrl","href","_lingui_react","PartialDataTableContainer","MenuCategoryListPage","FullPageLayout","pageTitle","useBackButton","Card","stretchToParent","SettingsCompanyBranchPicker","organisms_CategoryList","WareCategoryTypeEnum","Main","SideDish","Cover","TopRightButtonContainer","Radiuses","Button","IsCategoryType","type","isMain","isSideDish","isCover","_categories","i18nMark","recipes","_recipes","getCategoryTypeLabel","getRecipeTypeLabel","recipeType","SubmitButton","_ref$isCreate","isCreate","react_form_es","render","form","FormSubmit","isFormValid","getButtonText","FormContainer","FormColumn","PictogramDisplayStyled","_ref2$fontSize","fontSize","_ref2$fontSizeUnit","fontSizeUnit","PictogramDisplay","pictogramId","_ref$fontSize","_ref$fontSizeUnit","getClassName","MenuCategoryPictogramSelect","SelectControl","pictogram","availablePictograms","formatOptionLabel","PictogramDisplay_PictogramDisplay","components","SingleValue","container","menuList","maxHeight","isSearchable","FormDeleteButton","confirmText","onDelete","react_router","history","TouchButtonDelete","goBack","FormInputInternalNote","_ref$field","_ref$label","icon","IconLine","labelWidth","FormInputTextBox","inputFullWidth","FormInputName","_ref$icon","CategoryBasicForm","Sizer","FormInputName_FormInputName","placeholder","FormInputInternalNote_FormInputInternalNote","FormInputCheckbox","MenuCategoryPictogramSelect_MenuCategoryPictogramSelect","WithSettings","FormDeleteButton_FormDeleteButton","deleteCategory","FormLoader","shouldLoad","loader","_useState","useState","_useState2","values","setValues","useEffect","then","NavigateBack","ErrorPop","MenuBaseFormLoader","submitError","validationErrors","_this$state","renderSubmitError","renderValidationErrors","messages","propEq","userErrors","renderPopover","errors","index_es","open","anchorEl","document","getElementById","onClose","anchorOrigin","vertical","horizontal","idx","_this3","onCreate","onUpdate","getDefaultValues","loadValues","loadDefaults","NavigateBack_NavigateBack","defaultValues","defaults","loadedDefaults","formApi","logForm","onSubmit","_callee2","_context2","onSubmitFailure","keys","logError","renderErrors","useMenu","CategoryFormLoader","MenuBaseFormLoader_MenuBaseFormLoader","createCategory","updateCategory","internalNoteLabel","nameLabel","minCount","maxCount","getDefaults","client","query","QMenuCategoryDocument","variables","fetchPolicy","DataList","renderItem","listProps","renderList","formInputPriceValidate","isEmpty","validateNumber","FormInputPrice","VatsQuery","gql","_templateObject","QueryVat","buildQuery","css","FormInputVatSelect","useObserver","renderLoading","vats","formatItem","vat","FormPricingCurrencyCode","FormPricingField","priceType","FormInputPrice_FormInputPrice","FormInputVatSelect_FormInputVatSelect","MenuSuggestionPanel","onAdd","_props$addLabel","addLabel","_props$addButtonText","addButtonText","selectProps","_useStateRef","useStateRef","_useStateRef2","getSelected","setSelected","onConfirm","selected","onKeyDown","ev","onSelect","margin","getOptionLabel","disabled","RecipeAssocListTable","DataTable_DataTable","RecipeAssociatedView","recipeId","priceTypeRecipes","rejectSuggestions","reject","recipe","some","onAddRecipe","addedRecipe","warePriceType","associatedRecipe","formattedPrice","RecipeAssocListTable_RecipeAssocListTable","RecipeForm_graphql","priceTypes","WarePriceTypeEnum","Delivery","Inhouse","RecipeFormPricing","react","FormPricingField_FormPricingField","TRecipeType","RecipeAssociatedView_RecipeAssociatedView","RecipeSuggestionPanel","filterRecipes","_useQMenuRecipeList","useQMenuRecipeList","Container","FormFixedRow","FormStretchedRow","SortableRecipes","RecipeRow","MoveCell","SortableRecipe","prices","foundPrice","pathEq","price","formattedValue","code","internalNote","CategoryRecipesView","without","lockToContainerEdges","StyledCategoryRequirementControl","CategoryRequirementControl","count","enabled","countRef","useRef","htmlFor","FormInputStyled","_onChange","toString","validity","valid","valueAsNumber","pattern","StyledCheckbox","checked","_onChange2","_x2","current","getRulesMap","noLimit","min","max","optional","required","onlyOne","custom","CategoryRequirementsForm","ruleMap","useMemo","_React$useState","_React$useState2","currentRule","setRule","getValue","found","findKey","setMinCount","setMaxCount","SelectControlFlat","req","selectedRule","rule","CategoryRequirementControl_CategoryRequirementControl","MenuCategoryPage","CategoryFormLoader_CategoryFormLoader","hideLogoutWidget","MenuCategoryPage_FormContainer","MenuCategoryPage_FormFixedRow","CategoryFormBasic_CategoryBasicForm","IsCategoryType_IsCategoryType","component","MenuCategoryPage_FormStretchedRow","CategoryRecipesView_CategoryRecipesView","SubmitButton_SubmitButton","DataTableContainer","MenuCategoryFilter","_useQMenuCategoryFilt","useQMenuCategoryFilter","setCategoryFilter","grouped","groupBy","cat","typeString","getOptions","MenuFilterInput","modelType","model","useDebounceCallback","setFilterInput","Search","filterInput","RecipeTypeSelection","isOpen","setOpen","useRouterContext","getRecipeRoute","push","preventDefault","RecipeListTable","_ref$showTypeColumn","showTypeColumn","react_content_loader_es","ColumnRendererCode","flexGrow","ColumnRendererPrice","TPriceType","RecipeListLoader","categoryFilterId","filteredRecipes","useComputed","partialMatch","cond","propSatisfies","T","RecipeListTable_RecipeListTable","MenuRecipeListPage","MenuFilterInput_MenuFilterInput","RecipeTypeSelection_RecipeTypeSelection","currentCategories","RecipeCategoryView","noRowsText","organisms_CategorySuggestionPanel","addedCategory","FormInputCode","FormInputDescription","AllergensQuery","FormInputAllergens_graphql_templateObject","FMenuAllergenFragmentDoc","QueryAllergens","AllergenBox","MarginAroundFormComponents","active","yellow","MenuAllergenIndicator","allergens","allergen","title","extractAllergens","pipe","flatten","uniq","RecipeAllergenDisplay","AllergenIndicator_MenuAllergenIndicator","RecipeFormBasic","FormInputCode_FormInputCode","FormInputDescription_FormInputDescription","RecipeAllergenDisplay_RecipeAllergenDisplay","deleteRecipe","RecipeFormLoader","createRecipe","updateRecipe","currencyCode","queryDefaults","getPriceMap","vatId","MenuRecipeFormQuery","normalizeValues","acc","reduce","descriptionLabel","image","sourcePrices","sourceAssociatedRecipes","associatedRecipes","sourceIngredients","ingredients","sideDishes","recipeSource","quantity","_ref7$stockItem","stockItem","unitLabel","wareUnit","sourcePrice","currency","RecipeIngredientsTable","rowIndex","validateQuantity","fieldName","validator","isFloat","unselectedStockOnly","differenceWith","RecipeIngredientsControl","_useQMenuStockList","useQMenuStockList","RecipeIngredientsTable_RecipeIngredientsTable","stockItems","_onAdd","addedStockItem","RecipeIngredientsView","ingredient","stockItemId","MenuRecipePage","RecipeFormLoader_RecipeFormLoader","MenuRecipePage_FormContainer","RecipeFormBasic_RecipeFormBasic","RecipeFormPricing_RecipeFormPricing","RecipeIngredientsView_RecipeIngredientsView","RecipeCategoryView_RecipeCategoryView","StockDepositConfirmButton","numeral","format","priceFormat","1","StockDepositFilterInput","forwardRef","ref","onFilter","autoFocus","onKeyPressCapture","StockDepositQuantityInput","StockDepositResultTable","ColumnRendererSelect","stockWithUnit","highlightMatch","HighlightedValue","span","indexOf","begin","substring","match","end","StockDepositControl","targetStockItem","filteredStockItems","inputQuantity","filterInputRef","createRef","quantityInputRef","trim","head","onConfirmFilter","focus","onQuantity","onSelectStockItem","onDeposit","prevProps","_this$state2","hasSearchValue","isNoneFind","isMultiFind","StockDepositConfirmButton_StockDepositConfirmButton","cardName","StockDepositResultTable_StockDepositResultTable","StockDepositLoader","_useQMenuStockDeposit","useQMenuStockDeposit","_useMMenuStockQuantit","useMMenuStockQuantity","changeQuantity","quantityChange","MenuStockDepositPage","StockDepositControl_StockDepositControl","StockListTable","Loading","stockAllowNegative","StockListLoader","filteredItems","stock","StockListTable_StockListTable","MenuStockListPage","MenuStockFormQuery","StockForm_graphql_templateObject","FMenuWareUnitFragmentDoc","MenuStockDefaultsQuery","_templateObject2","StockFormLoader","stockId","createItem","updateItem","allowNegativeDefault","getAllowNegativeDefault","allowNegative","note","plu","FieldStateEnum","Default","isEnabled","Disabled","FormInputAllergens","Enabled","FormInputAllowNegative","obj","TypeError","_objectDestructuringEmpty","labelForDefault","FormInputPlu","WareUnitsQuery","FormInputWareUnit_graphql_templateObject","QueryWareUnits","FormInputWareUnit","wareUnits","StockFormMain","FormInputWareUnit_FormInputWareUnit","FormInputPlu_FormInputPlu","FormInputAllergens_FormInputAllergens","FormInputAllowNegative_FormInputAllowNegative","deleteItem","StockRecipesView","_useQStockRecipes","useQStockRecipes","MenuStockPage","StockFormLoader_StockFormLoader","StockFormMain_StockFormMain","StockRecipesVIew_StockRecipesView","MenuRoutes_MenuRoutes","MenuRoutes","SecureRoute","exact","path","params","MenuCategoryPage_MenuCategoryPage","MenuRecipePage_MenuRecipePage","MenuStockPage_MenuStockPage","NotFoundPage"],"mappings":"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","file":"static/js/176.60741087.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport { ScrollArea } from '../atoms/ScrollArea'\nimport { Spacing } from '../styling'\n\ninterface IPageLayoutFullHeightItemProps {\n  row?: number\n  column?: number\n  widthInColumns?: number\n  withScrollArea?: boolean\n  scrollAreaId?: string\n}\n\nconst gridColumnWidth: string = '6.22vw'\nconst gridColumnHeigth: string = '3.9375rem'\n\nconst leftPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.column !== undefined) {\n    return (\n      'calc((' +\n      props.column +\n      ' * ' +\n      gridColumnWidth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return Spacing.LayoutGridCellMargin\n  }\n}\nconst widthComputed = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.widthInColumns !== undefined) {\n    return (\n      'calc((' +\n      props.widthInColumns +\n      ' * ' +\n      gridColumnWidth +\n      ') - ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return 'calc(100vh - (2 * ' + Spacing.LayoutGridCellMargin + '))'\n  }\n}\nconst topPos = () => (props: IPageLayoutFullHeightItemProps) => {\n  if (props.row !== undefined) {\n    return (\n      'calc((' +\n      props.row +\n      ' * ' +\n      gridColumnHeigth +\n      ') + ' +\n      Spacing.LayoutGridCellMargin +\n      ')'\n    )\n  } else {\n    return (\n      'calc(' + gridColumnHeigth + ' + ' + Spacing.LayoutGridCellMargin + ')'\n    )\n  }\n}\n\nconst FullHeightDiv = styled.div`\n  position: fixed;\n  bottom: 0.5rem;\n  width: ${widthComputed()};\n  left: ${leftPos()};\n  top: ${topPos()};\n`\n\nconst FullHeightDivStyled = styled.div`\n  height: 100%;\n`\n\nexport const PageLayoutFullHeightItem: React.FC<\n  IPageLayoutFullHeightItemProps\n> = ({\n  children,\n  row = 1,\n  column = 0,\n  widthInColumns = 16,\n  withScrollArea = false,\n  scrollAreaId,\n}) => (\n  <FullHeightDiv\n    column={column}\n    row={row}\n    widthInColumns={widthInColumns}\n    withScrollArea={withScrollArea}\n  >\n    {withScrollArea ? (\n      <ScrollArea id={scrollAreaId}>{children}</ScrollArea>\n    ) : (\n      <FullHeightDivStyled>{children}</FullHeightDivStyled>\n    )}\n  </FullHeightDiv>\n)\n","import styled from 'styled-components'\n\nexport const FlexRowSingle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ justify = 'space-between' }: { justify?: string }) =>\n    justify};\n`\n","import styled from 'styled-components'\n\ninterface IVerticalGapProps {\n  size?: number\n  sizeUnit?: string\n}\n\nexport const VerticalGap = styled.div`\n  height: ${({ size = 1, sizeUnit = 'rem' }: IVerticalGapProps) =>\n    `${size}${sizeUnit}`};\n`\n\nVerticalGap.displayName = 'VerticalGap'\n","import styled from 'styled-components'\n\nexport const ScrollArea = styled.div`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ninterface IProps {\n  position: 'TopRight' | 'BottomRight' | 'BottomLeft' | 'TopLeft'\n}\n\nconst xPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomRight' || position === 'BottomLeft'\n    ? 'bottom: 0'\n    : 'top: 0'\n}\n\nconst yPositionProperty = ({ position = 'BottomRight' }: IProps) => {\n  return position === 'BottomLeft' || position === 'TopLeft'\n    ? 'left: 0'\n    : 'right: 0'\n}\n\nexport const CardDock = styled('div')`\n  position: absolute;\n  ${yPositionProperty};\n  ${xPositionProperty};\n`\n","export function isPartialMatch(searchValue: string) {\n  const search = searchValue.toLocaleLowerCase()\n  return (propValue: string) => propValue.toLocaleLowerCase().includes(search)\n}\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlFlatProps, SelectControlFlat } from './SelectControlFlat'\n\ninterface IFormInputSelectProps<ItemType>\n  extends Omit<\n      ISelectControlFlatProps<ItemType>,\n      | 'selectedItems'\n      | 'onMultiSelection'\n      | 'selectedItem'\n      | 'onSingleSelection'\n    > {\n  field: FieldType\n  fieldIsPure?: boolean\n  getItemId?: (item: ItemType) => ID\n  isRequired?: boolean\n  validationName?: string\n  defaultSelection?: ReadonlyArray<ItemType> | ItemType\n}\n\nexport class FormInputFlatSelect<ItemType> extends React.Component<\n  IFormInputSelectProps<ItemType>\n> {\n  static defaultProps = {\n    validationName: i18n.t`Value`,\n    getItemId: RM.prop('id'),\n  }\n  validate = value => {\n    const { isRequired, isMulti, validationName } = this.props\n    if (isRequired) {\n      if (isMulti && (!Array.isArray(value) || value.length === 0)) {\n        return i18n.t`${validationName} must have at least option selected`\n      }\n      if (!isMulti && (value === null || value === undefined)) {\n        return i18n.t`${validationName} must have a selection`\n      }\n    }\n    return null\n  }\n  getControlProps(\n    fieldApi: IFieldApi,\n  ): Partial<ISelectControlFlatProps<ItemType>> {\n    const { isMulti, items, defaultSelection, getItemId } = this.props\n\n    const selection = fieldApi.value || defaultSelection\n\n    if (isMulti) {\n      const isSelected = (item: ItemType) =>\n        selection.includes(getItemId!(item))\n      return {\n        selectedItems: Array.isArray(selection) ? items.filter(isSelected) : [],\n        onMultiSelection: selectedItems => {\n          fieldApi.setValue(selectedItems.map(getItemId!))\n          fieldApi.setTouched(true)\n        },\n      }\n    }\n\n    return {\n      selectedItem:\n        selection && items.find(item => getItemId!(item) === selection),\n      onSingleSelection: item => {\n        fieldApi.setValue(item ? getItemId!(item) : null)\n        fieldApi.setTouched(true)\n      },\n    }\n  }\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      isClearable = false,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} pure={fieldIsPure} validate={this.validate}>\n        {fieldApi => (\n          <SelectControlFlat<ItemType>\n            {...this.getControlProps(fieldApi)}\n            isInvalid={Boolean(fieldApi.error)}\n            isClearable={isClearable && !isRequired}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link, LinkProps, Route } from 'react-router-dom'\nimport resolvePathname from 'resolve-pathname'\n\ninterface IRelativeLinkProps extends LinkProps {\n  to: LocationDescriptor\n  from?: string\n}\n\nexport const RelativeLink: React.FC<IRelativeLinkProps> = ({\n  to,\n  from,\n  ...linkProps\n}) => (\n  <Route\n    children={({ location }) => (\n      <Link\n        to={resolveLocation(to, from || `${location.pathname}/`)}\n        {...linkProps}\n      />\n    )}\n  />\n)\n\nexport function resolveLocation(to: LocationDescriptor, from: string) {\n  if (typeof to === 'string') {\n    return resolvePathname(to, from)\n  }\n  const resolved = resolvePathname(to.pathname || '', from)\n  return { ...to, pathname: resolved }\n}\n","import React from 'react'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { Icon } from './Icon'\n\ninterface IDragHandleProps {}\n\nconst DragHandleContainerStyled = styled.div`\n  padding: 1rem 0.4rem;\n  cursor: grab;\n`\nexport const DragHandle = SortableHandle<IDragHandleProps>(() => (\n  <DragHandleContainerStyled>\n    <Icon iconName=\"reorder\" />\n  </DragHandleContainerStyled>\n))\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { RM } from '../helpers/ramda'\nimport { i18n } from '../i18n'\nimport { ISelectControlProps, SelectControl } from './SelectControl'\n\nexport interface IFormInputSelectProps<OptionType>\n  extends ISelectControlProps<OptionType> {\n  field: FieldType\n  fieldIsPure?: boolean\n  defaultValue?: OptionType\n  isRequired?: boolean\n  validatioName?: string\n}\n\nexport class FormInputSelect<OptionType> extends React.Component<\n  IFormInputSelectProps<OptionType>\n> {\n  static defaultProps = {\n    validatioName: 'Value',\n    getItemId: RM.prop('id'),\n  }\n\n  validate = (value: OptionType | undefined) => {\n    if (this.props.isRequired && !value) {\n      return i18n.t`${this.props.validatioName} must be selected`\n    }\n    return null\n  }\n\n  getControlProps(fieldApi: IFieldApi) {\n    const { isMulti, options, getOptionValue, defaultValue } = this.props\n    const selection = fieldApi.value || defaultValue\n\n    if (isMulti) {\n      const isSelected = Array.isArray(selection)\n        ? (item: OptionType) => selection.includes(getOptionValue!(item))\n        : RM.F\n      return {\n        value: Array.isArray(options)\n          ? (options as OptionType[]).filter(isSelected)\n          : [],\n        onChange: selectedOptions => {\n          fieldApi.setValue(selectedOptions.map(getOptionValue))\n        },\n      }\n    }\n\n    return {\n      value:\n        selection &&\n        (options as OptionType[]).find(\n          item => getOptionValue!(item) === selection,\n        ),\n      onChange: option => {\n        fieldApi.setValue(getOptionValue!(option))\n      },\n    }\n  }\n\n  render() {\n    const {\n      field,\n      fieldIsPure = false,\n      isRequired = false,\n      defaultValue,\n      ...props\n    } = this.props\n    return (\n      <Field field={field} validate={this.validate} pure={fieldIsPure}>\n        {fieldApi => (\n          <SelectControl\n            {...this.getControlProps(fieldApi)}\n            onFocus={() => fieldApi.setTouched(true)}\n            styles={{\n              control: base => {\n                if (Boolean(fieldApi.error)) {\n                  return {\n                    ...base,\n                    borderColor: 'red',\n                  }\n                }\n                return base\n              },\n            }}\n            {...props}\n          />\n        )}\n      </Field>\n    )\n  }\n}\n","exports.pictograms = require('./Flaticon');","module.exports = ['pizza', 'beans', 'cheese', 'hot-pepper', 'smoking-barbecue', 'meat-pie', 'sausage', 'hot-dog', 'fruit', 'fruit-1', 'fruit-2', 'strawberry', 'soup', 'noodles', 'ramen', 'rice', 'spaghetti', 'food', 'piece-of-cake', 'beer', 'marshmallow', 'cake', 'banana-split', 'ice-cream', 'cookie', 'doughnut', 'cupcake', 'kebab', 'steak', 'fish', 'fondue', 'shrimp', 'berry', 'food', 'food-1', 'food-2', 'food-3', 'food-4', 'food-5', 'food-6', 'food-7', 'food-8', 'food-9', 'food-10', 'food-11', 'food-12', 'food-13', 'food-14', 'food-15', 'food-16', 'food-17', 'food-18', 'food-19', 'food-20', 'food-21', 'food-22', 'food-23', 'food-24', 'food-25', 'food-26', 'food-27', 'food-28', 'food-29', 'food-30', 'drink', 'drink-1', 'drink-2', 'drink-3', 'drink-4', 'drink-5', 'cup', 'cup-1', 'cup-2', 'whisky'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nfunction isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\nexports.isApolloError = isApolloError;\n\nvar generateErrorMessage = function generateErrorMessage(err) {\n  var message = '';\n\n  if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += \"GraphQL error: \" + errorMessage + \"\\n\";\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nvar ApolloError = function (_super) {\n  tslib_1.__extends(ApolloError, _super);\n\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        networkError = _a.networkError,\n        errorMessage = _a.errorMessage,\n        extraInfo = _a.extraInfo;\n\n    var _this = _super.call(this, errorMessage) || this;\n\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      _this.message = generateErrorMessage(_this);\n    } else {\n      _this.message = errorMessage;\n    }\n\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n\n  return ApolloError;\n}(Error);\n\nexports.ApolloError = ApolloError;","import { LocationDescriptor } from 'history'\nimport React, { ComponentType } from 'react'\n\nimport { RelativeLink } from '../atoms/RelativeLink'\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends Omit<ITouchButtonProps, 'onClick'> {\n  target: LocationDescriptor\n  Link?: ComponentType<{ to: LocationDescriptor }>\n}\n\nexport const TouchButtonEdit: React.FC<IProps> = ({\n  target,\n  Link = RelativeLink,\n  ...props\n}) => (\n  <Link to={target}>\n    <SizerButton>\n      <TouchButton iconName=\"mode_edit\" {...props} />\n    </SizerButton>\n  </Link>\n)\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from './TouchButton'\n\ninterface IProps extends ITouchButtonProps {}\n\nexport const TouchButtonRemove: React.FC<IProps> = ({ ...props }) => (\n  <SizerButton>\n    <TouchButton iconName=\"remove_circle_outline\" {...props} />\n  </SizerButton>\n)\n","import React from 'react'\n\nimport { SizerButton } from '../atoms/SizerButton'\nimport { ITouchButtonProps, TouchButton } from '../molecules/TouchButton'\nimport { Colors } from '../styling'\n\ninterface IProps extends ITouchButtonProps {\n  isVisible: boolean\n}\n\nexport const TouchButtonVisibility: React.FC<IProps> = ({\n  isVisible,\n  ...props\n}) => (\n  <SizerButton>\n    <TouchButton\n      iconName=\"remove_red_eye\"\n      iconColor={isVisible ? Colors.white : Colors.greyMiddle}\n      color={Colors.greyMiddle}\n      {...props}\n    />\n  </SizerButton>\n)\n","import styled from 'styled-components'\n\nimport { Colors } from '../styling'\n\nexport const NoteText = styled.div`\n  color: ${Colors.greyMiddle};\n`\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  Column,\n  Index,\n  Table,\n  TableCellProps,\n  TableCellRenderer,\n  TableProps,\n  WindowScroller,\n} from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { i18n } from '../i18n'\nimport { TouchButtonEdit } from '../molecules/TouchButtonEdit'\nimport { TouchButtonRemove } from '../molecules/TouchButtonRemove'\nimport { TouchButtonVisibility } from '../molecules/TouchButtonVisibility'\nimport { Colors } from '../styling'\nimport { CanMutate } from './CanMutate'\nimport { CanQuery } from './CanQuery'\nimport { NoteText } from './NoteText'\nimport Pacman from './Pacman'\n\nexport interface IDataTableProps<T> extends Partial<TableProps> {\n  items: ReadonlyArray<T>\n  rowHeight?: number\n  isLoading?: boolean\n  heightStretch?: boolean\n  fullHeight?: boolean\n}\n\nexport const DataTable = <T extends {}>(props: IDataTableProps<T>) => {\n  const {\n    items,\n    heightStretch = false,\n    fullHeight = false,\n    rowHeight = 60,\n    isLoading = false,\n    children,\n    ...tableProps\n  } = props\n\n  const rowGetter = React.useCallback(({ index }: Index) => items[index], [\n    items,\n  ])\n\n  const noRowsRenderer = React.useCallback(\n    () => (isLoading ? <Pacman /> : null),\n    [isLoading],\n  )\n\n  const renderTable = (width: number, height: number) => {\n    return (\n      <Table\n        autoHeight={!heightStretch && !fullHeight}\n        width={width}\n        height={height}\n        headerHeight={50}\n        rowCount={items ? items.length : 0}\n        rowHeight={rowHeight}\n        rowGetter={rowGetter}\n        noRowsRenderer={noRowsRenderer}\n        style={{ outline: 'none' }}\n        {...tableProps}\n      >\n        {children}\n      </Table>\n    )\n  }\n\n  if (fullHeight) {\n    return (\n      <AutoSizer disableHeight={true}>\n        {({ width }) => renderTable(width, items.length * rowHeight)}\n      </AutoSizer>\n    )\n  }\n\n  if (heightStretch) {\n    return (\n      <AutoSizer>{({ width, height }) => renderTable(width, height)}</AutoSizer>\n    )\n  }\n\n  return (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderTable(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport function checkColumnAccess(\n  { canQuery, canMutate }: { canQuery?: string; canMutate?: string },\n  renderer: TableCellRenderer,\n) {\n  return (cellProps: TableCellProps) => {\n    let result = renderer(cellProps)\n    if (canQuery) {\n      result = <CanQuery queryName={canQuery}>{result}</CanQuery>\n    }\n    if (canMutate) {\n      result = <CanMutate mutationName={canMutate}>{result}</CanMutate>\n    }\n    return result\n  }\n}\n\nexport function ColumnRendererEdit({ cellData }: TableCellProps) {\n  return <TouchButtonEdit target={cellData} />\n}\n\nexport function ColumnRendererRemove({ cellData, columnData }: TableCellProps) {\n  return (\n    <TouchButtonRemove\n      onClick={() => columnData.onRemove && columnData.onRemove(cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererVisibility({\n  cellData,\n  columnData,\n  rowData,\n}: TableCellProps) {\n  return (\n    <TouchButtonVisibility\n      isVisible={cellData}\n      onClick={() => columnData.onToggle(rowData.id, !cellData)}\n    />\n  )\n}\n\nexport function ColumnRendererWithNote({\n  cellData,\n  rowData,\n  columnData,\n}: TableCellProps) {\n  return (\n    <>\n      {cellData}\n      <NoteText>{rowData[columnData.noteKey]}</NoteText>\n    </>\n  )\n}\n\nexport const DataTableEmptyText = styled(\n  ({ text = i18n.t`Table is empty`, ...props }: { text?: string }) => (\n    <div {...props}>{text}</div>\n  ),\n)`\n  padding: 1rem;\n  color: ${Colors.greyMiddle};\n  font-style: 'italic';\n`\n\nexport { Column }\n","import React from 'react'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport { TableRowProps } from 'react-virtualized'\n\nimport { DataTable, IDataTableProps } from '../atoms/DataTable'\n\ninterface ISortResult<T> {\n  item: T\n  items: ReadonlyArray<T>\n  offset: number\n  oldIndex: number\n  newIndex: number\n}\n\nexport type TSortHandler<T> = (\n  result: ISortResult<T>,\n) => Promise<boolean> | void\n\ninterface IProps<T> extends IDataTableProps<T> {\n  items: ReadonlyArray<T>\n  onSort?: TSortHandler<T>\n}\n\ninterface IState<T> {\n  sortedItems: ReadonlyArray<T>\n}\n\nconst SortableTableRowRenderer = SortableElement(\n  ({ columns, style, className }: TableRowProps) => (\n    <div style={style} className={className}>\n      {columns}\n    </div>\n  ),\n)\n\nconst SortableDataTableContainer = SortableContainer(DataTable)\n\nexport class SortableDataTable<T> extends React.PureComponent<\n  IProps<T>,\n  IState<T>\n> {\n  state = { sortedItems: this.props.items }\n  static getDerivedStateFromProps = (nextProps: IProps<{}>) => {\n    return {\n      sortedItems: nextProps.items,\n    }\n  }\n  rowRenderer = rowProps => {\n    return <SortableTableRowRenderer {...rowProps} />\n  }\n  onHandleSorting: SortEndHandler = async ({ newIndex, oldIndex }) => {\n    if (newIndex === oldIndex) {\n      return\n    }\n    const currentItems = [...this.state.sortedItems]\n    const sortedItems = arrayMove(\n      this.state.sortedItems as T[],\n      oldIndex,\n      newIndex,\n    )\n\n    this.setState({ sortedItems })\n\n    if (this.props.onSort) {\n      const sortSuccess = this.props.onSort({\n        item: currentItems[oldIndex],\n        items: sortedItems,\n        offset: newIndex - oldIndex,\n        newIndex,\n        oldIndex,\n      })\n      if (sortSuccess && !(await sortSuccess)) {\n        this.setState({\n          sortedItems: currentItems,\n        })\n      }\n    }\n  }\n  render() {\n    const { items, ...props } = this.props\n    return (\n      <SortableDataTableContainer\n        lockAxis=\"y\"\n        useDragHandle={true}\n        onSortEnd={this.onHandleSorting}\n        rowRenderer={this.rowRenderer}\n        {...props}\n        items={this.state.sortedItems}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n  DataTableEmptyText,\n  IDataTableProps,\n} from '../../../atoms/DataTable'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { FMenuCategoryListItemFragment } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport {\n  SortableDataTable,\n  TSortHandler,\n} from '../../../molecules/SortableDataTable'\nimport { Spacing } from '../../../styling'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\n\ntype TCategory = FMenuCategoryListItemFragment\n\ninterface IProps {\n  categories: ReadonlyArray<TCategory>\n  isSortable?: boolean\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showHeader?: boolean\n  onToggle?(categoryId: ID, visible: boolean): void\n  onRemove?(categoryId: ID): void\n  onSort?: TSortHandler<TCategory>\n  heightStretch?: boolean\n  fullHeight?: boolean\n  noRowsDisplay?: ReactNode\n}\n\nexport const CategoryListTable: React.FC<IProps> = ({\n  categories,\n  onToggle,\n  onRemove,\n  onSort,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = false,\n  showHeader = true,\n  isSortable = false,\n  isLoading = false,\n  heightStretch = false,\n  fullHeight = false,\n  noRowsDisplay = <DataTableEmptyText text={i18n.t`No recipes in category`} />,\n}) => {\n  const props: IDataTableProps<TCategory> = {\n    isLoading,\n    items: categories,\n    disableHeader: !showHeader,\n    heightStretch,\n    fullHeight,\n    noRowsRenderer: () => noRowsDisplay,\n  }\n  const columns = [\n    showEditColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canQuery: 'wareCategory' },\n          ColumnRendererEdit,\n        )}\n        cellDataGetter={({ rowData }) =>\n          getCategoryRoute(rowData.id, rowData.categoryType.enum)\n        }\n      />\n    ),\n    showRemoveColumn && (\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererRemove}\n        columnData={{ onRemove }}\n      />\n    ),\n    showVisibilityColumn && (\n      <Column\n        dataKey=\"visible\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={checkColumnAccess(\n          { canMutate: 'updateWareCategory' },\n          ColumnRendererVisibility,\n        )}\n        columnData={{ onToggle }}\n      />\n    ),\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNoteLabel' }}\n    />,\n    <Column\n      dataKey=\"countRecipes\"\n      label={i18n.t`Recipe count`}\n      width={100}\n      cellRenderer={({ cellData }) =>\n        `${cellData} ${i18n.t`Recipes`.toLocaleLowerCase()}`\n      }\n    />,\n    isSortable && (\n      <Column dataKey=\"id\" width={50} cellRenderer={() => <DragHandle />} />\n    ),\n  ]\n\n  if (isSortable) {\n    return React.createElement(\n      SortableDataTable,\n      {\n        onSort: onSort as any,\n        ...props,\n      },\n      ...columns,\n    )\n  }\n\n  return React.createElement(DataTable, props, ...columns)\n}\n","import { LocationDescriptor } from 'history'\nimport React, { MouseEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { RelativeLink } from '../../../atoms/RelativeLink'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\ninterface IProps {\n  routeTo?: LocationDescriptor\n  onClick?: (event: MouseEvent<HTMLAnchorElement>) => void\n}\n\nconst CreateButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n`\n\nexport const CreateButton: React.FC<IProps> = ({\n  routeTo = 'create',\n  onClick,\n}) => (\n  <CreateButtonContainer>\n    <RelativeLink to={routeTo} onClick={onClick}>\n      <SizerButton>\n        <TouchButton iconName=\"add_circle\" color={Colors.green} />\n      </SizerButton>\n    </RelativeLink>\n  </CreateButtonContainer>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { Headline } from '../../../atoms/Headline'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useMMenuCategoryVisibility,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { getCategoryRoute } from '../models/MenuCategoryModel'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport { CreateButton } from '../molecules/CreateButton'\n\ninterface IProps {\n  headline: string\n  subHeadline?: string\n  categoryType: WareCategoryTypeEnum\n  heightStretch?: boolean\n}\n\nconst CategoryList: React.FC<IProps> = ({\n  headline,\n  subHeadline = false,\n  categoryType,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading, updateQuery, refetch } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const [changeVisibility] = useMMenuCategoryVisibility()\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <>\n      <FlexRowSingle>\n        <FlexColumn widthGrowIndex={1}>\n          <Headline>{headline}</Headline>\n          {subHeadline && <Headline size=\"smaller\">{subHeadline}</Headline>}\n        </FlexColumn>\n        <FlexColumn fixedWidth={true}>\n          <CreateButton routeTo={getCategoryRoute('create', categoryType)} />\n        </FlexColumn>\n      </FlexRowSingle>\n      <CategoryListTable\n        isLoading={loading}\n        categories={categories}\n        onToggle={(categoryId: ID, visible: boolean) => {\n          changeVisibility(\n            { categoryId, visible },\n            {\n              optimisticResponse: {\n                updateWareCategory: {\n                  __typename: 'WareCategory',\n                  id: categoryId,\n                  visible,\n                },\n              },\n            },\n          )\n        }}\n        isSortable={true}\n        showHeader={false}\n        fullHeight={true}\n        showVisibilityColumn={true}\n        onSort={async ({ item, items, offset }) => {\n          updateQuery(() => ({\n            categories: items,\n          }))\n          const result = await settings.menu.category.sortCategory(\n            item.id,\n            offset,\n          )\n          if (result) {\n            await refetch()\n          }\n          return result\n        }}\n      />\n    </>\n  )\n}\n\nexport default observer(CategoryList)\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuGuideDownload } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors } from '../../../styling'\n\nconst MenuGuideDownloadButton = styled(TouchButton)`\n  white-space: nowrap;\n  margin-left: 2rem;\n  & a {\n    text-decoration: none;\n    color: ${Colors.black};\n    padding: 1rem;\n  }\n`\n\nexport const MenuGuideDownload = observer(() => {\n  const { settings } = useRoot()\n  const { loading, data } = useQMenuGuideDownload({\n    branchId: settings.branchId,\n  })\n  if (\n    loading ||\n    !(data && data.companyBranch && data.companyBranch.foodMenuUrl)\n  ) {\n    return null\n  }\n  return (\n    <MenuGuideDownloadButton color={Colors.greyMiddle}>\n      <a href={data.companyBranch.foodMenuUrl} target=\"_blank\">\n        <Trans>Menu codes manual</Trans>\n      </a>\n    </MenuGuideDownloadButton>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Card } from '../../../atoms/Card'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport CategoryList from '../organisms/CategoryList'\nimport { MenuGuideDownload } from '../organisms/MenuGuideDownload'\n\nexport const PartialDataTableContainer = styled.div`\n  height: calc(100% - 3.5rem);\n  padding-top: 1rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`\n\nexport const MenuCategoryListPage: React.FC = () => (\n  <>\n    <FullPageLayout\n      pageTitle={i18n.t`Category overview`}\n      useBackButton={true}\n    />\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuGuideDownload />\n          </FlexColumn>\n        </FlexRowSingle>\n\n        <PartialDataTableContainer>\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Main}\n            headline={i18n.t`Category of recipes`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.SideDish}\n            headline={i18n.t`Category of sidedish`}\n          />\n\n          <VerticalGap size={1.5} />\n\n          <CategoryList\n            categoryType={WareCategoryTypeEnum.Cover}\n            headline={i18n.t`Category of covers`}\n          />\n        </PartialDataTableContainer>\n        {/* <VerticalGap size={1.5} />\n      <Trans>\n        <Headline>Recipes without category</Headline>\n        <Headline size=\"smaller\">are not visible anywhere</Headline>\n      </Trans> */}\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import styled from 'styled-components'\n\nimport { Colors, Radiuses } from '../styling'\n\nexport const TopRightButtonContainer = styled.div`\n  position: fixed;\n  z-index: 500;\n  right: 0;\n  top: 0rem;\n  width: 10rem;\n  opacity: 0.96;\n  background: ${Colors.black};\n  border-radius: ${Radiuses.Button};\n`\n","import React from 'react'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\n\ninterface IProps {\n  type: WareCategoryTypeEnum\n  isMain?: boolean\n  isSideDish?: boolean\n  isCover?: boolean\n  children: ReactNode | ReactNode[]\n}\n\nexport const IsCategoryType: React.FC<IProps> = ({\n  type,\n  isMain,\n  isSideDish,\n  isCover,\n  children,\n}) => {\n  if (\n    (isMain === true && type === WareCategoryTypeEnum.Main) ||\n    (isSideDish === true && type === WareCategoryTypeEnum.SideDish) ||\n    (isCover === true && type === WareCategoryTypeEnum.Cover)\n  ) {\n    return <>{children}</>\n  }\n  return null\n}\n","import { i18nMark } from '@lingui/core'\n\nimport { WareCategoryTypeEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TCategoryType, TRecipeType } from './menutypes'\n\nconst categories = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware categories'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish categories'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover categories'),\n}\n\nconst recipes = {\n  [WareCategoryTypeEnum.Main]: i18nMark('Ware recipe'),\n  [WareCategoryTypeEnum.SideDish]: i18nMark('Sidedish recipe'),\n  [WareCategoryTypeEnum.Cover]: i18nMark('Cover recipe'),\n}\n\nexport function getCategoryTypeLabel(categoryType: TCategoryType) {\n  return i18n._(categories[categoryType])\n}\n\nexport function getRecipeTypeLabel(recipeType: TRecipeType) {\n  return i18n._(recipes[recipeType])\n}\n","import React from 'react'\nimport { FormApi, IFormState } from 'react-form'\n\nimport { isFormValid } from '../../../helpers/form'\nimport { i18n } from '../../../i18n'\nimport { FormSubmit } from '../../../molecules/FormSubmit'\n\ninterface IProps {\n  isCreate?: boolean\n}\n\nexport const SubmitButton: React.FC<IProps> = ({ isCreate = false }) => (\n  <FormApi\n    render={form => (\n      <FormSubmit id=\"form-submit\">{getButtonText(form, isCreate)}</FormSubmit>\n    )}\n  />\n)\n\nfunction getButtonText(form: IFormState, isCreate: boolean) {\n  if (!isFormValid(form)) {\n    return i18n.t`Fix form errors`\n  }\n  return isCreate ? i18n.t`Create` : i18n.t`Save`\n}\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  margin: 0.6rem;\n  display: flex;\n`\n\nexport const FormColumn = styled.div`\n  flex: none;\n  margin-right: 1rem;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  pictogramId: string\n  fontSize?: number\n  fontSizeUnit?: string\n}\n\nconst PictogramDisplayStyled = styled.div`\n  &:before {\n    font-size: ${getFontSize} !important;\n    margin-left: 0.5rem !important;\n  }\n`\n\nexport const PictogramDisplay: React.FC<IProps> = ({\n  pictogramId,\n  fontSize = 2,\n  fontSizeUnit = 'rem',\n}) => (\n  <PictogramDisplayStyled\n    className={getClassName(pictogramId)}\n    fontSize={fontSize}\n    fontSizeUnit={fontSizeUnit}\n  />\n)\n\nfunction getFontSize({ fontSize = 2, fontSizeUnit = 'rem' }: Partial<IProps>) {\n  return `${fontSize}${fontSizeUnit}`\n}\n\nfunction getClassName(pictogramId: string) {\n  return `flaticon-${pictogramId}`\n}\n","import { pictograms as availablePictograms } from '@speedlo/assets'\nimport React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { PictogramDisplay } from '../../../atoms/PictogramDisplay'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\n\ninterface IProps {\n  field: FieldType\n}\n\ninterface IFormValue {\n  pictogram: string\n}\n\nexport const MenuCategoryPictogramSelect: React.FC<IProps> = ({ field }) => (\n  <Field field={field} pure={true}>\n    {fieldApi => (\n      <SelectControl<IFormValue>\n        value={fieldApi.value ? { pictogram: fieldApi.value } : null}\n        onChange={value => {\n          if (value && !Array.isArray(value)) {\n            fieldApi.setValue(value.pictogram)\n          }\n        }}\n        options={availablePictograms.map(pictogram => ({ pictogram }))}\n        getOptionValue={RM.prop('pictogram')}\n        formatOptionLabel={({ pictogram }) => (\n          <PictogramDisplay pictogramId={pictogram} fontSize={2} />\n        )}\n        components={{\n          SingleValue: ({ data }) => (\n            <PictogramDisplay pictogramId={data.pictogram} fontSize={4} />\n          ),\n        }}\n        styles={{\n          container: base => ({ ...base, width: '8rem' }),\n          menuList: base => ({ ...base, maxHeight: '35rem' }),\n        }}\n        isClearable={false}\n        isSearchable={false}\n        minWidth={8}\n      />\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\nimport { Route } from 'react-router-dom'\n\nimport { TouchButtonDelete } from '../../../molecules/TouchButtonDelete'\n\ninterface IProps {\n  confirmText: string\n  onDelete(id: ID): Promise<void>\n}\n\nexport const FormDeleteButton: React.FC<IProps> = ({\n  confirmText,\n  onDelete,\n}) => (\n  <Field field=\"id\">\n    {field =>\n      field.value !== 'NEW' && (\n        <Route>\n          {({ history }) => (\n            <TouchButtonDelete\n              confirmText={confirmText}\n              onDelete={async () => {\n                await onDelete(field.value)\n                history.goBack()\n              }}\n            />\n          )}\n        </Route>\n      )\n    }\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  label?: string\n}\n\nexport const FormInputInternalNote: React.FC<IProps> = ({\n  field = 'internalNote',\n  icon = 'label_outline',\n  label = i18n.t`Internal note`.toLocaleLowerCase(),\n  ...props\n}) => (\n  <IconLine label={label} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputName: React.FC<IProps> = ({\n  field = 'nameLabel',\n  icon = 'label',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <FormInputTextBox\n      field={field}\n      inputFullWidth={true}\n      isRequired={true}\n      validatioName={i18n.t`Name`}\n      {...props}\n    />\n  </IconLine>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuCategoryPictogramSelect } from '../atoms/MenuCategoryPictogramSelect'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\n\ninterface ICategoryBasicFormProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const CategoryBasicForm: React.FC<ICategoryBasicFormProps> = ({\n  categoryType,\n}) => (\n  <FormContainer>\n    <FormColumn>\n      <Sizer width={22}>\n        <FormInputName\n          placeholder={i18n.t`Category name`}\n          inputFullWidth={true}\n        />\n      </Sizer>\n      <Sizer width={22}>\n        <FormInputInternalNote placeholder={i18n.t`Category internal note`} />\n      </Sizer>\n      <FormInputCheckbox\n        field=\"visible\"\n        label={i18n.t`To show this category`}\n      />\n    </FormColumn>\n\n    {categoryType === WareCategoryTypeEnum.Main ? (\n      <FormColumn>\n        <MenuCategoryPictogramSelect field=\"pictogram\" />\n      </FormColumn>\n    ) : null}\n\n    <CardDock position=\"BottomRight\">\n      <WithSettings\n        render={({ menu }) => (\n          <FormDeleteButton\n            confirmText={i18n.t`Remove this category?`}\n            onDelete={id => menu.category.deleteCategory(id, categoryType)}\n          />\n        )}\n      />\n    </CardDock>\n  </FormContainer>\n)\n","import React, { useEffect, useState } from 'react'\nimport { Form, FormProps } from 'react-form'\n\ninterface IProps<TValues = object> extends FormProps<TValues> {\n  shouldLoad: boolean\n  loader(): Promise<TValues>\n}\n\nexport function FormLoader<TValues = object>({\n  shouldLoad,\n  loader,\n  ...props\n}: IProps<TValues>) {\n  const [values, setValues] = useState<TValues | null>(null)\n  useEffect(\n    () => {\n      if (!shouldLoad) {\n        return\n      }\n      loader().then(setValues)\n    },\n    [shouldLoad],\n  )\n  return <Form values={values} {...props} />\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\ninterface IProps {\n  render?(goBack: () => void): ReactNode\n}\n\nexport const NavigateBack: React.FC<IProps> = ({ render }) => (\n  <Route>\n    {({ history }) => {\n      if (render) {\n        return render(() => history.goBack())\n      }\n      history.goBack()\n      return null\n    }}\n  </Route>\n)\n","import { Popover } from '@material-ui/core'\nimport { isApolloError } from 'apollo-client/errors/ApolloError'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormLoader } from '../../../atoms/FormLoader'\nimport { NavigateBack } from '../../../atoms/NavigateBack'\nimport { TQueryErrors } from '../../../graph/errorHandler'\nimport { logError, logForm } from '../../../helpers/logger'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\n\ninterface IProps<TValues = object> {\n  isCreate: boolean\n  getDefaultValues(): TValues\n  loadValues(): Promise<TValues>\n  loadDefaults?(): Promise<Partial<TValues>>\n  onCreate(values: TValues): Promise<TQueryErrors>\n  onUpdate(values: TValues): Promise<TQueryErrors>\n}\n\ninterface IState {\n  submitError: Maybe<Error>\n  validationErrors: Maybe<object>\n}\n\nconst ErrorPop = styled.div`\n  color: red;\n  padding: 1rem;\n  max-width: 30rem;\n  overflow-wrap: break-word;\n`\n\nexport class MenuBaseFormLoader<TValues extends {}> extends React.Component<\n  IProps<TValues>,\n  IState\n> {\n  state: IState = { submitError: null, validationErrors: null }\n  renderErrors() {\n    const { submitError, validationErrors } = this.state\n    if (submitError) {\n      return this.renderSubmitError(submitError)\n    }\n    if (validationErrors) {\n      return this.renderValidationErrors(validationErrors)\n    }\n    return null\n  }\n  renderSubmitError(submitError: Error) {\n    let messages = [\n      i18n.t`Unexpected error while sending form. Out team was notified about the issue.`,\n    ]\n    if (isApolloError(submitError)) {\n      const filter =\n        process.env.NODE_ENV === 'production'\n          ? RM.propEq('showToUser', true)\n          : () => true\n      const userErrors = submitError.graphQLErrors\n        .filter(filter)\n        .map(RM.prop('message'))\n      if (userErrors.length) {\n        messages = userErrors\n      }\n    }\n    return this.renderPopover(messages)\n  }\n  renderValidationErrors(errors: object) {\n    return null // this.renderPopover(Object.values(errors))\n  }\n  renderPopover(messages: string[]) {\n    return (\n      <Popover\n        open={true}\n        anchorEl={() => document.getElementById('submit-button')!}\n        onClose={() =>\n          this.setState({ submitError: null, validationErrors: null })\n        }\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        {messages.map((message, idx) => (\n          <ErrorPop key={idx}>{message}</ErrorPop>\n        ))}\n      </Popover>\n    )\n  }\n  render() {\n    const {\n      isCreate,\n      onCreate,\n      onUpdate,\n      getDefaultValues,\n      loadValues,\n      loadDefaults,\n      children,\n    } = this.props\n    return (\n      <NavigateBack\n        render={goBack => (\n          <FormLoader<TValues>\n            shouldLoad={true}\n            defaultValues={getDefaultValues()}\n            loader={async () => {\n              const defaults = getDefaultValues()\n              if (loadDefaults) {\n                const loadedDefaults = await loadDefaults()\n                Object.assign(defaults, loadedDefaults)\n              }\n              if (isCreate) {\n                return defaults\n              }\n              const values = await loadValues()\n              return Object.assign({}, defaults, values)\n            }}\n            onChange={formApi => logForm('new values', formApi.values)}\n            onSubmit={async values => {\n              if (isCreate) {\n                await onCreate(values)\n              } else {\n                await onUpdate(values)\n              }\n              goBack()\n            }}\n            onSubmitFailure={(validationErrors, submitError) => {\n              this.setState({ validationErrors, submitError })\n              if (Object.keys(validationErrors).length) {\n                logError('validation errors', validationErrors)\n              }\n              if (submitError) {\n                logError('submit error', submitError)\n              }\n            }}\n          >\n            {children}\n            {this.renderErrors()}\n          </FormLoader>\n        )}\n      />\n    )\n  }\n}\n","import { useRoot } from '../../../atoms/RootProvider'\n\nexport function useMenu() {\n  const {\n    settings: { menu },\n  } = useRoot()\n  return menu\n}\n","import React from 'react'\n\nimport {\n  QMenuCategoryDocument,\n  QMenuCategoryQuery,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TCategoryFormValues } from '../models/MenuCategoryModel'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n  children: ReactNode\n}\n\nexport const CategoryFormLoader: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TCategoryFormValues>\n      isCreate={categoryId === null}\n      onCreate={values => menu.category.createCategory(values, categoryType)}\n      onUpdate={values => menu.category.updateCategory(values, categoryType)}\n      getDefaultValues={() => getDefaults(categoryType)}\n      loadValues={async () => {\n        const { data } = await menu.client.query<QMenuCategoryQuery>({\n          query: QMenuCategoryDocument,\n          variables: { categoryId },\n          fetchPolicy: 'no-cache',\n        })\n        return data.category\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(categoryType: WareCategoryTypeEnum): TCategoryFormValues {\n  return {\n    id: 'NEW',\n    visible: true,\n    internalNoteLabel: '',\n    pictogram: '',\n    nameLabel: '',\n    minCount: 0,\n    maxCount: 0,\n    categoryType: { enum: categoryType },\n    recipes: [],\n  }\n}\n","import 'react-virtualized/styles.css'\n\nimport React from 'react'\nimport {\n  AutoSizer,\n  List,\n  ListProps,\n  ListRowRenderer,\n  WindowScroller,\n} from 'react-virtualized'\n\ninterface IColumn {\n  size: string\n}\n\ninterface IDataListProps<T> extends Partial<ListProps> {\n  items: ReadonlyArray<T>\n  columns?: IColumn[]\n  renderItem(item: T, index: number): ReactNode\n  isLoading?: boolean\n  heightStretch?: boolean\n}\n\nexport function DataList<T>(props: IDataListProps<T>) {\n  const {\n    items,\n    renderItem,\n    isLoading = false,\n    heightStretch = false,\n    rowHeight = 60,\n    ...listProps\n  } = props\n\n  const rowRenderer: ListRowRenderer = React.useCallback(\n    ({ key, style, index }) => (\n      <div key={key} style={style}>\n        {renderItem(items[index], index)}\n      </div>\n    ),\n    [renderItem, items],\n  )\n\n  const renderList = (width: number, height: number) => (\n    <List\n      width={width}\n      height={height}\n      headerHeight={50}\n      rowHeight={rowHeight}\n      rowCount={items ? items.length : 0}\n      rowRenderer={rowRenderer}\n      style={{ outline: 'none' }}\n      {...listProps}\n    />\n  )\n\n  return heightStretch ? (\n    <AutoSizer>{({ width, height }) => renderList(width, height)}</AutoSizer>\n  ) : (\n    <WindowScroller scrollElement={window}>\n      {({ height }) => (\n        <AutoSizer disableHeight={true}>\n          {({ width }) => renderList(width, height)}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\ninterface IProps {\n  field: FieldType\n  className?: string\n  children?: never\n}\n\nexport const FormDisplayField: React.FC<IProps> = ({ field, className }) => {\n  return (\n    <Field field={field}>\n      {fieldApi => <span className={className}>{fieldApi.value}</span>}\n    </Field>\n  )\n}\n","import React from 'react'\nimport { isEmpty } from 'validator'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { validateNumber } from '../../../locale/numeral'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nconst formInputPriceValidate = (value: string) => {\n  if (\n    value === undefined ||\n    isEmpty(value + '') ||\n    !validateNumber(value + '')\n  ) {\n    return i18n.t`Price must be a number`\n  }\n  return null\n}\n\nexport const FormInputPrice: React.FC<IProps> = ({\n  field = 'price.value',\n  icon = 'toll',\n  ...props\n}) => (\n  <IconLine icon={icon}>\n    <Sizer width={5}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        validate={formInputPriceValidate}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GVats } from '../../../graph/types'\n\nexport const VatsQuery = gql`\n  query GVats($branchId: ID!) {\n    vats(companyBranch: $branchId) {\n      id\n      vat\n    }\n  }\n`\n\nexport const QueryVat = buildQuery<GVats.Query, GVats.Variables>(VatsQuery)\n","import { css } from 'emotion'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { FieldType } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { i18n } from '../../../i18n'\nimport { QueryVat } from './FormInputVatSelect.graphql'\n\ninterface IProps {\n  field?: FieldType\n}\n\nconst container = css`\n  margin-left: 5rem;\n`\n\nexport const FormInputVatSelect: React.FC<IProps> = ({\n  field = 'price.vat',\n}) => {\n  const { settings } = useRoot()\n\n  return useObserver(() => (\n    <QueryVat\n      variables={{\n        branchId: settings.branchId,\n      }}\n      fetchPolicy=\"cache-and-network\"\n      renderLoading={false}\n      render={({ vats }) => (\n        <IconLine className={container} label={`${i18n.t`VAT`}:`}>\n          {vats && (\n            <FormInputFlatSelect\n              field={field}\n              items={vats}\n              formatItem={({ vat }) => `${vat}%`}\n              isRequired={true}\n              validationName={i18n.t`VAT`}\n            />\n          )}\n        </IconLine>\n      )}\n    />\n  ))\n}\n","import React from 'react'\nimport { NestedField } from 'react-form'\nimport styled from 'styled-components'\n\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { FormDisplayField } from '../../../atoms/FormDisplayField'\nimport { Headline } from '../../../atoms/Headline'\nimport { TPriceType } from '../menutypes'\nimport { FormInputPrice } from './FormInputPrice'\nimport { FormInputVatSelect } from './FormInputVatSelect'\n\ninterface IProps {\n  priceType: TPriceType\n  label: string\n}\n\nconst FormPricingCurrencyCode = styled(FormDisplayField)`\n  padding: 0.5rem;\n`\n\nexport const FormPricingField: React.FC<IProps> = ({ priceType, label }) => (\n  <>\n    <Headline>{label}</Headline>\n    <NestedField field={['prices', priceType]}>\n      <FlexRowSingle justify=\"flex-start\">\n        <FormInputPrice field=\"value\" />\n        <FormPricingCurrencyCode field=\"currencyCode\" />\n        <FormInputVatSelect field=\"vatId\" />\n      </FlexRowSingle>\n    </NestedField>\n  </>\n)\n","import { useStateRef } from '@speedlo/hooks'\nimport React, { useCallback } from 'react'\n\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport {\n  ISelectControlProps,\n  SelectControl,\n} from '../../../atoms/SelectControl'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps<OptionType> extends ISelectControlProps<OptionType> {\n  onAdd(option: OptionType): void\n  addLabel?: string\n  addButtonText?: string\n}\n\nexport function MenuSuggestionPanel<\n  OptionType extends { id: ID; nameLabel: string }\n>(props: IProps<OptionType>) {\n  const {\n    onAdd,\n    addLabel = i18n.t`Add`,\n    addButtonText = i18n.t`Add`,\n    ...selectProps\n  } = props\n\n  const [getSelected, setSelected] = useStateRef<Maybe<OptionType>>(null)\n\n  const onConfirm = useCallback(\n    () => {\n      const selected = getSelected()\n      if (selected !== null) {\n        onAdd(selected)\n        setSelected(null)\n      }\n    },\n    [onAdd],\n  )\n\n  const onKeyDown = useCallback((ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === 'Enter') {\n      onConfirm()\n    }\n  }, [])\n\n  const onSelect = useCallback(option => {\n    setSelected(option || null)\n  }, [])\n\n  return (\n    <FlexRowSingle justify=\"flex-start\">\n      <FlexColumn fixedWidth={true} width=\"4rem\" margin=\"auto 0\">\n        {addLabel}\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"20rem\" margin=\"auto 0\">\n        <SelectControl<OptionType>\n          value={getSelected()}\n          onChange={onSelect}\n          onKeyDown={onKeyDown}\n          isMulti={false}\n          isClearable={false}\n          getOptionValue={RM.prop('id')}\n          getOptionLabel={RM.prop('nameLabel')}\n          {...selectProps}\n        />\n      </FlexColumn>\n      <FlexColumn fixedWidth={true} width=\"10rem\" margin=\"auto 0\">\n        <TouchButton\n          text={addButtonText}\n          disabled={getSelected() === null}\n          onClick={onConfirm}\n        />\n      </FlexColumn>\n    </FlexRowSingle>\n  )\n}\n","import React from 'react'\n\nimport {\n  Column,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { TAssocRecipe } from '../menutypes'\n\ninterface IProps {\n  recipes: TAssocRecipe[]\n  onRemove(recipeId: ID): void\n}\n\nexport const RecipeAssocListTable: React.FC<IProps> = ({\n  recipes,\n  onRemove,\n}) => (\n  <DataTable items={recipes} disableHeader={true}>\n    <Column\n      dataKey=\"associatedRecipe\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={({ cellData }) => (\n        <TouchButtonRemove onClick={() => onRemove(cellData)} />\n      )}\n    />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      label={i18n.t`Name`}\n      cellRenderer={ColumnRendererWithNote}\n      columnData={{ noteKey: 'internalNote' }}\n    />\n    <Column dataKey=\"formattedPrice\" width={100} label={i18n.t`Price`} />\n  </DataTable>\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { GMenuAssocRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TAssocRecipe, TPriceType } from '../menutypes'\nimport { RecipeAssocListTable } from '../molecules/RecipeAssocListTable'\nimport { QueryMenuRecipeFormAssoc } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: MaybeID\n  priceType: TPriceType\n}\n\nexport const RecipeAssociatedView: React.FC<IProps> = ({\n  priceType,\n  recipeId,\n}) => (\n  <Field field=\"associatedRecipes\">\n    {(fieldApi: IFieldApi<TAssocRecipe[]>) => {\n      const priceTypeRecipes = RM.filter(\n        RM.propEq('warePriceType', priceType),\n        fieldApi.value,\n      )\n      const isAssociated = (id: ID) =>\n        priceTypeRecipes.some(RM.propEq('associatedRecipe', id))\n\n      const rejectSuggestions = RM.reject(\n        (recipe: GMenuAssocRecipe.Fragment) =>\n          recipe.id === recipeId || isAssociated(recipe.id),\n      )\n      const onAddRecipe = (addedRecipe: GMenuAssocRecipe.Fragment) => {\n        fieldApi.setValue(\n          fieldApi.value.concat({\n            warePriceType: priceType,\n            associatedRecipe: addedRecipe.id,\n            nameLabel: addedRecipe.nameLabel,\n            formattedPrice: '?',\n          }),\n        )\n      }\n      const onRemoveRecipe = (id: ID) => {\n        fieldApi.setValue(\n          RM.reject(\n            ({ associatedRecipe, warePriceType }) =>\n              associatedRecipe === id && warePriceType === priceType,\n            fieldApi.value,\n          ),\n        )\n      }\n\n      return (\n        <>\n          <RecipeAssocListTable\n            recipes={priceTypeRecipes}\n            onRemove={onRemoveRecipe}\n          />\n          <WithSettings\n            render={settings => (\n              <QueryMenuRecipeFormAssoc\n                variables={{\n                  branchId: settings.branchId,\n                }}\n                fetchPolicy=\"cache-and-network\"\n                render={({ recipes }) => (\n                  <MenuSuggestionPanel\n                    options={rejectSuggestions(recipes)}\n                    onAdd={onAddRecipe}\n                    // labelKey=\"nameLabel\"\n                  />\n                )}\n              />\n            )}\n          />\n          <VerticalGap />\n        </>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { Fragment } from 'react'\n\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TRecipeType } from '../menutypes'\nimport { FormPricingField } from '../molecules/FormPricingField'\nimport { RecipeAssociatedView } from './RecipeAssociatedView'\n\ninterface IProps {\n  recipeId: MaybeID\n  recipeType: TRecipeType\n}\n\nexport const priceTypes = [\n  {\n    priceType: WarePriceTypeEnum.Delivery,\n    label: i18nMark('Delivery sale'),\n  },\n  {\n    priceType: WarePriceTypeEnum.Inhouse,\n    label: i18nMark('Local sale'),\n  },\n]\n\nexport const RecipeFormPricing: React.FC<IProps> = ({\n  recipeType,\n  recipeId,\n}) => (\n  <>\n    {priceTypes.map(({ priceType, label }) => (\n      <Fragment key={priceType}>\n        <FormPricingField priceType={priceType} label={i18n._(label)} />\n        <VerticalGap />\n        {recipeType === TRecipeType.Main && (\n          <RecipeAssociatedView priceType={priceType} recipeId={recipeId} />\n        )}\n      </Fragment>\n    ))}\n  </>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  useQMenuRecipeList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IProps {\n  categoryType?: WareCategoryTypeEnum\n  onAdd(recipe: TRecipe): void\n  filterRecipes(recipes: ReadonlyArray<TRecipe>): TRecipe[]\n}\n\nexport const RecipeSuggestionPanel = observer<IProps>(\n  ({ categoryType, filterRecipes, onAdd }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuRecipeList({\n      branchId: settings.branchId,\n      categoryType,\n    })\n    return (\n      <MenuSuggestionPanel<TRecipe>\n        isLoading={loading}\n        options={loading ? [] : filterRecipes(data.recipes)}\n        onAdd={onAdd}\n      />\n    )\n  },\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n  SortEndHandler,\n} from 'react-sortable-hoc'\nimport styled from 'styled-components'\n\nimport { DataList } from '../../../atoms/DataList'\nimport { DragHandle } from '../../../atoms/DragHandle'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipe } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { TouchButtonRemove } from '../../../molecules/TouchButtonRemove'\nimport { Spacing } from '../../../styling'\nimport { priceTypes } from './RecipeFormPricing'\nimport { RecipeSuggestionPanel } from './RecipeSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 2rem);\n  width: 100%;\n`\n\nconst FormFixedRow = styled.div`\n  flex: 0 0 auto;\n`\n\nconst FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  margin: 1rem 0 0 1rem;\n`\n\nconst SortableRecipes = SortableContainer(FormStretchedRow)\n\nconst RecipeRow = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: ${Spacing.ButtonColumnWidthPx}px 100px 3fr 1fr 1fr 50px;\n`\n\nconst MoveCell = styled.div`\n  cursor: move;\n`\n\ntype TRecipe = GMenuRecipe.Fragment\n\ninterface IRecipeRow {\n  recipe: TRecipe\n  onRemove(): void\n}\n\nconst SortableRecipe = SortableElement<IRecipeRow>(({ recipe, onRemove }) => {\n  const prices = priceTypes.map(({ priceType, label }) => {\n    const foundPrice = recipe.prices.find(\n      RM.pathEq(['priceType', 'enum'], priceType),\n    )\n    return (\n      <MoveCell key={priceType}>\n        <NoteText>{i18n._(label)}</NoteText>\n        {foundPrice ? (\n          foundPrice.price.formattedValue\n        ) : (\n          <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n        )}\n      </MoveCell>\n    )\n  })\n\n  return (\n    <RecipeRow>\n      <div>\n        <TouchButtonRemove onClick={onRemove} />\n      </div>\n      <MoveCell>{recipe.code}</MoveCell>\n      <MoveCell>\n        {recipe.nameLabel}\n        <NoteText>{recipe.internalNote}</NoteText>\n      </MoveCell>\n      {prices}\n      <DragHandle />\n    </RecipeRow>\n  )\n})\n\nexport const CategoryRecipesView: React.FC<IProps> = ({ categoryType }) => {\n  return (\n    <Field field=\"recipes\">\n      {(fieldApi: IFieldApi<ReadonlyArray<TRecipe>>) => {\n        const recipes = fieldApi.value\n        const onHandleSorting: SortEndHandler = async ({\n          newIndex,\n          oldIndex,\n        }) => {\n          if (newIndex === oldIndex) {\n            return\n          }\n          const sortedItems = arrayMove(\n            recipes as TRecipe[],\n            oldIndex,\n            newIndex,\n          )\n\n          fieldApi.setValue(sortedItems)\n        }\n        return (\n          <Container>\n            <FormFixedRow>\n              <RecipeSuggestionPanel\n                categoryType={categoryType}\n                filterRecipes={RM.without(fieldApi.value)}\n                onAdd={addedRecipe =>\n                  fieldApi.setValue(fieldApi.value.concat(addedRecipe))\n                }\n              />\n            </FormFixedRow>\n            <SortableRecipes\n              lockAxis=\"y\"\n              lockToContainerEdges={true}\n              onSortEnd={onHandleSorting}\n            >\n              <DataList\n                items={fieldApi.value}\n                heightStretch={true}\n                rowHeight={60}\n                renderItem={(recipe, index) => (\n                  <SortableRecipe\n                    recipe={recipe}\n                    onRemove={() => {\n                      fieldApi.setValue(\n                        RM.reject(RM.propEq('id', recipe.id), fieldApi.value),\n                      )\n                    }}\n                    index={index}\n                  />\n                )}\n                rowCount={fieldApi.value.length}\n              />\n            </SortableRecipes>\n          </Container>\n        )\n      }}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { StyledCheckbox } from '../../../atoms/StyledCheckbox'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  id: string\n  count: number\n  label: ReactNode | string\n  enabled: boolean\n  onChange(count: number): void\n}\n\nconst StyledCategoryRequirementControl = styled.div`\n  display: flex;\n  align-items: center;\n  & > label {\n    min-width: 5rem;\n  }\n  & > * {\n    margin: 0.2rem 0.5rem;\n  }\n  input.count {\n    font-size: 1.5rem;\n    line-height: 1.5rem;\n    text-align: center;\n  }\n`\n\nexport const CategoryRequirementControl: React.FC<IProps> = ({\n  count,\n  label,\n  enabled,\n  onChange,\n  id,\n}) => {\n  const countRef = React.useRef(count)\n  return (\n    <StyledCategoryRequirementControl>\n      <label htmlFor={id}>{label}</label>\n      <Sizer width={3}>\n        <FormInputStyled\n          id={id}\n          value={count === 0 ? '' : count}\n          onChange={ev => {\n            if (ev.target.validity.valid) {\n              onChange(ev.target.valueAsNumber)\n            }\n          }}\n          disabled={count === 0 || !enabled}\n          inputFullWidth={true}\n          type=\"tel\"\n          pattern=\"^[1-9]\\d*$\"\n          className=\"count\"\n        />\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton\n          disabled={!enabled || count <= 0}\n          onClick={() => onChange(count - 1)}\n        >\n          ➖\n        </TouchButton>\n      </Sizer>\n      <Sizer width={4}>\n        <TouchButton disabled={!enabled} onClick={() => onChange(count + 1)}>\n          ➕\n        </TouchButton>\n      </Sizer>\n      <div>\n        <StyledCheckbox>\n          <input\n            type=\"checkbox\"\n            id={`${id}-nolimit`}\n            checked={count === 0}\n            disabled={!enabled}\n            onChange={ev => {\n              if (count === 0) {\n                onChange(countRef.current || 1)\n              } else {\n                countRef.current = count\n                onChange(0)\n              }\n            }}\n          />\n          <label htmlFor={`${id}-nolimit`}>\n            <Trans>Unlimited</Trans>\n          </label>\n        </StyledCheckbox>\n      </div>\n    </StyledCategoryRequirementControl>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport _ from 'lodash'\nimport React from 'react'\nimport { IFormApi, IFormState } from 'react-form'\n\nimport { SelectControlFlat } from '../../../atoms/SelectControlFlat'\nimport { i18n } from '../../../i18n'\nimport { CategoryRequirementControl } from '../molecules/CategoryRequirementControl'\n\ninterface IRequirement {\n  label: string\n  min?: number\n  max?: number\n}\n\nexport const getRulesMap = (): Record<string, IRequirement> => ({\n  noLimit: {\n    label: i18n.t`No limitation`,\n    min: 0,\n    max: 0,\n  },\n  optional: {\n    label: i18n.t`One at most`,\n    min: 0,\n    max: 1,\n  },\n  required: {\n    label: i18n.t`One at least`,\n    min: 1,\n    max: 0,\n  },\n  onlyOne: {\n    label: i18n.t`Exactly one`,\n    min: 1,\n    max: 1,\n  },\n  custom: {\n    label: i18n.t`Custom range`,\n  },\n})\n\ntype TRule = keyof ReturnType<typeof getRulesMap>\n\nexport const CategoryRequirementsForm: React.FC<{\n  formApi: IFormApi & IFormState\n}> = ({ formApi }) => {\n  const ruleMap = React.useMemo(getRulesMap, [])\n  const [currentRule, setRule] = React.useState<TRule>('noLimit')\n\n  const minCount = formApi.getValue('minCount')\n  const maxCount = formApi.getValue('maxCount')\n\n  React.useEffect(\n    () => {\n      if (currentRule !== 'custom') {\n        const found = _.findKey(\n          ruleMap,\n          ({ min, max }) => min === minCount && max === maxCount,\n        )\n        if (found) {\n          setRule(found)\n        }\n      }\n    },\n    [currentRule, minCount, maxCount],\n  )\n\n  const setMinCount = (count: number) => formApi.setValue('minCount', count)\n  const setMaxCount = (count: number) => formApi.setValue('maxCount', count)\n\n  return (\n    <>\n      <SelectControlFlat<TRule>\n        items={Object.keys(ruleMap) as ReadonlyArray<TRule>}\n        formatItem={req => ruleMap[req].label}\n        onSingleSelection={selectedRule => {\n          if (selectedRule) {\n            setRule(selectedRule)\n            const rule = ruleMap[selectedRule]\n            setMinCount(rule.min || 0)\n            setMaxCount(rule.max || 0)\n          }\n        }}\n        selectedItem={currentRule}\n      />\n      <CategoryRequirementControl\n        id=\"minCount\"\n        count={minCount}\n        label={<Trans>Minimum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMinCount}\n      />\n      <CategoryRequirementControl\n        id=\"maxCount\"\n        count={maxCount}\n        label={<Trans>Maximum</Trans>}\n        enabled={currentRule === 'custom'}\n        onChange={setMaxCount}\n      />\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { FormApi } from 'react-form'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getCategoryTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { CategoryBasicForm } from '../organisms/CategoryFormBasic'\nimport { CategoryFormLoader } from '../organisms/CategoryFormLoader'\nimport { CategoryRecipesView } from '../organisms/CategoryRecipesView'\nimport { CategoryRequirementsForm } from '../organisms/CategoryRequirementsForm'\n\ninterface IProps {\n  categoryId: Maybe<ID>\n  categoryType: WareCategoryTypeEnum\n}\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`\nexport const FormFixedRow = styled.div`\n  flex: 0 0 8rem;\n`\nexport const FormStretchedRow = styled.div`\n  flex: 1 1 0;\n  min-height: 0;\n  position: relative;\n`\n\nexport const MenuCategoryPage: React.FC<IProps> = ({\n  categoryId,\n  categoryType,\n}) => (\n  <CategoryFormLoader categoryId={categoryId} categoryType={categoryType}>\n    <>\n      <FullPageLayout\n        pageTitle={getCategoryTypeLabel(categoryType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      />\n\n      <PageLayoutFullHeightItem>\n        <FormContainer>\n          <FormFixedRow>\n            <Card>\n              <CategoryBasicForm categoryType={categoryType} />\n            </Card>\n          </FormFixedRow>\n          <IsCategoryType isSideDish={true} type={categoryType}>\n            <FormFixedRow>\n              <Card>\n                <Headline>\n                  <Trans>Required amounts of recipes to be picked</Trans>\n                </Headline>\n                <FormApi component={CategoryRequirementsForm} />\n              </Card>\n            </FormFixedRow>\n          </IsCategoryType>\n          <FormStretchedRow>\n            <Card stretchToParent={true}>\n              <Headline>\n                <Trans>Recipes assigned to this category</Trans>\n              </Headline>\n              <CategoryRecipesView categoryType={categoryType} />\n            </Card>\n          </FormStretchedRow>\n        </FormContainer>\n      </PageLayoutFullHeightItem>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={\n            categoryId === null ? 'createWareCategory' : 'updateWareCategory'\n          }\n        >\n          <SubmitButton isCreate={categoryId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </>\n  </CategoryFormLoader>\n)\n","import styled from 'styled-components'\n\nexport const DataTableContainer = styled.div`\n  height: calc(100% - 4.5rem);\n  padding-top: 2rem;\n`\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { SelectControl } from '../../../atoms/SelectControl'\nimport { Sizer } from '../../../atoms/Sizer'\nimport {\n  QMenuCategoryFilterCategories,\n  useQMenuCategoryFilter,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { getCategoryTypeLabel } from '../labels'\nimport { TRecipeType } from '../menutypes'\n\ntype TCategory = QMenuCategoryFilterCategories\n\nexport const MenuCategoryFilter = observer(() => {\n  const {\n    settings: {\n      menu: { recipe },\n    },\n  } = useRoot()\n\n  const { data, loading } = useQMenuCategoryFilter({\n    branchId: recipe.branchId,\n  })\n\n  const getOptions = () => {\n    if (!(data && data.categories)) {\n      return []\n    }\n    const grouped = RM.groupBy(\n      cat => cat.categoryType.enum.toString(),\n      data.categories,\n    )\n    return Object.keys(grouped).map(typeString => ({\n      label: getCategoryTypeLabel(typeString as TRecipeType),\n      options: grouped[typeString],\n    }))\n  }\n\n  return (\n    <Sizer width={17}>\n      <SelectControl<TCategory>\n        key={recipe.branchId}\n        onChange={value => {\n          recipe.setCategoryFilter(value ? (value as TCategory).id : null)\n        }}\n        options={getOptions()}\n        isMulti={false}\n        isClearable={true}\n        isSearchable={true}\n        isLoading={loading}\n        placeholder={i18n.t`Filter by category`}\n        getOptionValue={RM.prop('id')}\n        getOptionLabel={RM.prop('nameLabel')}\n      />\n    </Sizer>\n  )\n})\n","import { Search } from '@material-ui/icons'\nimport { useDebounceCallback } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  modelType: 'recipe' | 'category' | 'stock'\n}\n\nexport const MenuFilterInput: React.FC<IProps> = ({ modelType }) => {\n  const {\n    settings: { menu },\n  } = useRoot()\n\n  const model = menu[modelType]\n  const onChange = useDebounceCallback(model.setFilterInput)\n\n  return (\n    <IconLine icon={Search}>\n      <Sizer width={17}>\n        <FormInputStyled\n          defaultValue={model.filterInput}\n          inputFullWidth={true}\n          onChange={ev => onChange(ev.target.value)}\n          placeholder={i18n.t`Filter by name or code`}\n        />\n      </Sizer>\n    </IconLine>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Dialog, DialogTitle } from '@material-ui/core'\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\nimport resolvePathname from 'resolve-pathname'\n\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\nimport { CreateButton } from './CreateButton'\n\nexport const RecipeTypeSelection: React.FC = () => {\n  const [isOpen, setOpen] = React.useState(false)\n  const { history } = useRouterContext()\n\n  const onSelect = (recipeType: WareCategoryTypeEnum) => () => {\n    const to = getRecipeRoute(\n      resolvePathname('create', `${location.pathname}/`),\n      recipeType,\n    )\n    history.push(to)\n  }\n\n  return (\n    <>\n      <CreateButton\n        onClick={ev => {\n          ev.preventDefault()\n          setOpen(true)\n        }}\n      />\n      <Dialog open={isOpen} onClose={() => setOpen(false)}>\n        <DialogTitle>Select item type</DialogTitle>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Main)}>\n          <Trans>Ware</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.SideDish)}>\n          <Trans>Sidedish</Trans>\n        </TouchButton>\n        <TouchButton onClick={onSelect(WareCategoryTypeEnum.Cover)}>\n          <Trans>Cover</Trans>\n        </TouchButton>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react'\nimport { BulletList } from 'react-content-loader'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  ColumnRendererRemove,\n  ColumnRendererVisibility,\n  ColumnRendererWithNote,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport {\n  QMenuRecipeListRecipes,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TPriceType } from '../menutypes'\nimport { getRecipeRoute } from '../models/MenuRecipeModel'\n\ntype TRecipe = QMenuRecipeListRecipes\n\ninterface IProps {\n  recipes: ReadonlyArray<TRecipe>\n  isLoading?: boolean\n  showEditColumn?: boolean\n  showRemoveColumn?: boolean\n  showVisibilityColumn?: boolean\n  showTypeColumn?: boolean\n  onToggle?(recipeId: ID, visible: boolean): void\n  onRemove?(recipeId: ID): void\n  heightStretch?: boolean\n}\n\nexport const RecipeListTable: React.FC<IProps> = ({\n  recipes,\n  onToggle,\n  onRemove,\n  showEditColumn = true,\n  showRemoveColumn = false,\n  showVisibilityColumn = true,\n  showTypeColumn = false,\n  isLoading = false,\n  heightStretch = false,\n}) => {\n  const props = {\n    isLoading,\n    items: recipes,\n    heightStretch,\n    noRowsRenderer: () =>\n      isLoading ? (\n        <BulletList />\n      ) : (\n        <Headline>{i18n.t`No recipes has been found`}</Headline>\n      ),\n  }\n  return (\n    <DataTable {...props}>\n      {showEditColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canQuery: 'recipe' },\n            ColumnRendererEdit,\n          )}\n          cellDataGetter={({ rowData }) =>\n            getRecipeRoute(rowData.id, rowData.recipeType.enum)\n          }\n        />\n      )}\n      {showRemoveColumn && (\n        <Column\n          dataKey=\"id\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={ColumnRendererRemove}\n          columnData={{ onRemove }}\n        />\n      )}\n      {showVisibilityColumn && (\n        <Column\n          dataKey=\"visible\"\n          width={Spacing.ButtonColumnWidthPx}\n          minWidth={Spacing.ButtonColumnWidthPx}\n          cellRenderer={checkColumnAccess(\n            { canMutate: 'updateRecipe' },\n            ColumnRendererVisibility,\n          )}\n          columnData={{ onToggle }}\n        />\n      )}\n      {showTypeColumn && (\n        <Column\n          dataKey=\"recipeType\"\n          width={100}\n          label={i18n.t`Type`}\n          cellRenderer={ColumnRendererCode}\n        />\n      )}\n      <Column dataKey=\"code\" width={100} label={i18n.t`Code`} />\n      <Column\n        dataKey=\"nameLabel\"\n        width={600}\n        flexGrow={2}\n        label={i18n.t`Name`}\n        cellRenderer={ColumnRendererWithNote}\n        columnData={{ noteKey: 'internalNote' }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Delivery sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Delivery }}\n      />\n      <Column\n        dataKey=\"prices\"\n        width={150}\n        label={i18n.t`Local sale`}\n        cellRenderer={ColumnRendererPrice}\n        columnData={{ priceType: TPriceType.Inhouse }}\n      />\n      <Column\n        dataKey=\"availableAmount\"\n        label={i18n.t('recipe.list.availableAmount')`Stock`}\n        width={100}\n      />\n      <Column\n        dataKey=\"internalNote\"\n        label={i18n.t`Internal note`}\n        width={200}\n      />\n    </DataTable>\n  )\n}\n\nfunction ColumnRendererPrice({\n  cellData: prices,\n  columnData: { priceType },\n}: TableCellProps) {\n  const foundPrice = prices.find(RM.pathEq(['priceType', 'enum'], priceType))\n  if (foundPrice) {\n    return foundPrice.price.formattedValue\n  }\n  return <i>{i18n.t`Not set`.toLocaleLowerCase()}</i>\n}\n\nfunction ColumnRendererCode({ rowData }: TableCellProps) {\n  const type: WareCategoryTypeEnum = rowData.recipeType.enum\n  if (type === WareCategoryTypeEnum.SideDish) {\n    return i18n.t`Sidedish`.toLocaleLowerCase()\n  }\n  if (type === WareCategoryTypeEnum.Cover) {\n    return i18n.t`Cover`.toLocaleLowerCase()\n  }\n  return i18n.t`Ware`.toLocaleLowerCase()\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuRecipeList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { RecipeListTable } from '../molecules/RecipeListTable'\n\nexport const RecipeListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuRecipeList({\n    branchId: settings.branchId,\n    categoryId: settings.menu.recipe.categoryFilterId,\n  })\n\n  const filteredRecipes = useComputed(\n    () => {\n      if (!data || !data.recipes || data.recipes.length === 0) {\n        return []\n      }\n      const partialMatch = isPartialMatch(settings.menu.recipe.filterInput)\n      return data.recipes.filter(\n        RM.cond([\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.recipes],\n  )\n\n  return (\n    <RecipeListTable\n      recipes={filteredRecipes}\n      onToggle={settings.menu.recipe.changeVisibility}\n      isLoading={loading}\n      heightStretch={true}\n      showTypeColumn={true}\n    />\n  )\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { MenuCategoryFilter } from '../molecules/MenuCategoryFilter'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { RecipeTypeSelection } from '../molecules/RecipeTypeSelection'\nimport { RecipeListLoader } from '../organisms/RecipeListLoader'\n\nexport const MenuRecipeListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Recipe overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"recipe\" />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuCategoryFilter />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createRecipe\">\n          <RecipeTypeSelection />\n        </CanMutate>\n        <DataTableContainer>\n          <RecipeListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  FMenuCategoryListItemFragment,\n  useQMenuCategoryList,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  onAdd(recipe: TCategory): void\n  addButtonText: string\n  currentCategories: TCategory[]\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nconst CategorySuggestionPanel: React.FC<IProps> = ({\n  categoryType,\n  currentCategories,\n  addButtonText,\n  onAdd,\n}) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuCategoryList({\n    branchId: settings.branchId,\n    categoryType,\n  })\n\n  const categories = (data && data.categories) || []\n\n  return (\n    <MenuSuggestionPanel<TCategory>\n      isLoading={loading}\n      options={RM.without(currentCategories, categories)}\n      addButtonText={addButtonText}\n      onAdd={onAdd}\n    />\n  )\n}\n\nexport default observer(CategorySuggestionPanel)\n","import React from 'react'\nimport { Field, FieldType, IFieldApi } from 'react-form'\n\nimport { DataTableEmptyText } from '../../../atoms/DataTable'\nimport {\n  FMenuCategoryListItemFragment,\n  WareCategoryTypeEnum,\n} from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { CategoryListTable } from '../molecules/CategoryListTable'\nimport CategorySuggestionPanel from './CategorySuggestionPanel'\n\ninterface IProps {\n  categoryType: WareCategoryTypeEnum\n  addButtonText: string\n  noRowsText: string\n  field: FieldType\n}\n\ntype TCategory = FMenuCategoryListItemFragment\n\nexport const RecipeCategoryView: React.FC<IProps> = ({\n  categoryType,\n  addButtonText,\n  noRowsText,\n  field,\n}) => (\n  <Field field={field}>\n    {(fieldApi: IFieldApi<TCategory[]>) => (\n      <>\n        <CategoryListTable\n          categories={fieldApi.value}\n          showRemoveColumn={true}\n          showEditColumn={false}\n          showHeader={false}\n          onRemove={categoryId =>\n            fieldApi.setValue(\n              RM.reject(RM.propEq('id', categoryId), fieldApi.value),\n            )\n          }\n          noRowsDisplay={<DataTableEmptyText text={noRowsText} />}\n        />\n        <CategorySuggestionPanel\n          addButtonText={addButtonText}\n          categoryType={categoryType}\n          currentCategories={fieldApi.value}\n          onAdd={addedCategory =>\n            fieldApi.setValue(fieldApi.value.concat(addedCategory))\n          }\n        />\n      </>\n    )}\n  </Field>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n  isRequired?: boolean\n}\n\nexport const FormInputCode: React.FC<IProps> = ({\n  field = 'code',\n  icon = 'label_outline',\n  isRequired = true,\n  ...props\n}) => (\n  <IconLine label={i18n.t`Code`.toLocaleLowerCase()} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox\n        field={field}\n        inputFullWidth={true}\n        isRequired={true}\n        validatioName={i18n.t`Code`}\n        {...props}\n      />\n    </Sizer>\n  </IconLine>\n)\n","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputDescription: React.FC<IProps> = ({\n  field = 'descriptionLabel',\n  icon = 'label_outline',\n  ...props\n}) => (\n  <IconLine label={i18n.t`Public note`.toLocaleLowerCase()} labelWidth={7}>\n    <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { FMenuAllergenFragmentDoc } from '../../../graph/generated'\nimport { GAllergens } from '../../../graph/types'\n\nexport const AllergensQuery = gql`\n  query GAllergens {\n    allergens {\n      ...FMenuAllergen\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n`\n\nexport const QueryAllergens = buildQuery<\n  GAllergens.Query,\n  GAllergens.Variables\n>(AllergensQuery)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { AllergenEnum } from '../../../graph/generated'\nimport { Colors, Spacing } from '../../../styling'\nimport { QueryAllergens } from '../molecules/FormInputAllergens.graphql'\n\ninterface IProps {\n  selected: AllergenEnum[]\n  onToggle?(allergen: AllergenEnum): void\n}\n\nconst AllergenBox = styled.div`\n  float: left;\n  width: 2.3rem;\n  height: 2.3rem;\n  border: 1px solid ${Colors.greyMiddle};\n  margin: 0.3rem 0.6rem 0.3rem ${Spacing.MarginAroundFormComponents};\n  font-size: 1.5rem;\n  text-align: center;\n  vertical-align: middle;\n  cursor: default;\n  ${({ active }: { active: boolean }) => css`\n    color: ${active ? Colors.black : Colors.greyMiddle};\n    background-color: ${active ? Colors.yellow : Colors.white};\n  `};\n`\n\nexport const MenuAllergenIndicator: React.FC<IProps> = ({\n  selected,\n  onToggle,\n}) => (\n  <QueryAllergens\n    render={({ allergens }) => (\n      <>\n        {allergens.map(allergen => {\n          const props = {\n            active: selected.includes(allergen.enum),\n            onClick: onToggle && (() => onToggle(allergen.enum)),\n          }\n          return (\n            <AllergenBox key={allergen.enum} title={allergen.code} {...props}>\n              {allergen.category}\n            </AllergenBox>\n          )\n        })}\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\nimport { TIngredient } from '../menutypes'\n\nconst extractAllergens = RM.pipe(\n  RM.map(RM.prop('allergens')),\n  // @ts-ignore Something wrong with Ramda typings\n  RM.flatten,\n  RM.uniq,\n)\n\nexport const RecipeAllergenDisplay: React.FC = () => (\n  <Field field=\"ingredients\">\n    {({ value }: IFieldApi<TIngredient[]>) => {\n      const allergens = extractAllergens(value)\n      return <MenuAllergenIndicator selected={allergens} />\n    }}\n  </Field>\n)\n","import React from 'react'\n\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { FormInputCheckbox } from '../../../atoms/FormInputCheckbox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { TRecipeType } from '../menutypes'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputDescription } from '../molecules/FormInputDescription'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { RecipeAllergenDisplay } from '../molecules/RecipeAllergenDisplay'\n\ninterface IProps {\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormBasic: React.FC<IProps> = ({ recipeType }) => {\n  const isMain = recipeType === WareCategoryTypeEnum.Main\n  return (\n    <FormContainer>\n      <FormColumn>\n        <FormInputName placeholder={i18n.t`Recipe name`} />\n        <FormInputCode placeholder={i18n.t`Recipe code`} />\n        <FormInputInternalNote placeholder={i18n.t`Recipe internal note`} />\n        {isMain && (\n          <FormInputDescription\n            placeholder={i18n.t`Public note for customers, allergens`}\n          />\n        )}\n        <IsCategoryType type={recipeType} isMain={true}>\n          <IconLine labelWidth={7} icon=\"error_outline\">\n            {i18n.t`Allergens based on stock cards`}\n            <br />\n            <RecipeAllergenDisplay />\n          </IconLine>\n        </IsCategoryType>\n        <IconLine labelWidth={7}>\n          <FormInputCheckbox\n            field=\"visible\"\n            label={i18n.t`To show this recipe`}\n          />\n        </IconLine>\n      </FormColumn>\n      <CardDock position=\"BottomRight\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this recipe?`}\n              onDelete={id => menu.recipe.deleteRecipe(id)}\n            />\n          )}\n        />\n      </CardDock>\n    </FormContainer>\n  )\n}\n","import React from 'react'\n\nimport { WarePriceTypeEnum } from '../../../graph/generated'\nimport { GMenuRecipeForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { TRecipeFormValues, TRecipeType } from '../menutypes'\nimport { MenuRecipeFormQuery } from './RecipeForm.graphql'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: TRecipeType\n}\n\nexport const RecipeFormLoader: React.FC<IProps> = ({\n  recipeId,\n  recipeType,\n  children,\n}) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TRecipeFormValues>\n      isCreate={recipeId === null}\n      onCreate={values => menu.recipe.createRecipe(values, recipeType)}\n      onUpdate={values => menu.recipe.updateRecipe(values)}\n      getDefaultValues={() => getDefaults(recipeType)}\n      loadDefaults={async () => {\n        const { vats, currencyCode } = await menu.recipe.queryDefaults()\n        const defaults = { ...getDefaults(recipeType) }\n        defaults.prices = getPriceMap(priceType => ({\n          value: 0,\n          vatId: vats[priceType],\n          currencyCode,\n        }))\n        return defaults\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<GMenuRecipeForm.Query>({\n          query: MenuRecipeFormQuery,\n          variables: { recipeId },\n          fetchPolicy: 'no-cache',\n        })\n        return normalizeValues(data.recipe)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getPriceMap<T>(acc: (priceType: WarePriceTypeEnum) => T) {\n  return [WarePriceTypeEnum.Delivery, WarePriceTypeEnum.Inhouse].reduce(\n    (result, priceType) => {\n      result[priceType] = acc(priceType)\n      return result\n    },\n    {},\n  ) as { [priceType in WarePriceTypeEnum]: T }\n}\n\nfunction getDefaults(recipeType: TRecipeType): TRecipeFormValues {\n  return {\n    id: 'NEW',\n    code: '',\n    nameLabel: '',\n    internalNote: '',\n    descriptionLabel: '',\n    image: '',\n    visible: true,\n    recipeType: {\n      enum: recipeType,\n    },\n    sourcePrices: [],\n    prices: getPriceMap(() => ({\n      value: 0,\n      vatId: null,\n      currencyCode: '',\n    })),\n    sourceAssociatedRecipes: [],\n    associatedRecipes: [],\n    sourceIngredients: [],\n    ingredients: [],\n    sideDishes: [],\n    categories: [],\n  }\n}\n\nfunction normalizeValues(\n  recipeSource: GMenuRecipeForm.Recipe,\n): TRecipeFormValues {\n  return {\n    ...recipeSource,\n    associatedRecipes: recipeSource.sourceAssociatedRecipes.map(\n      ({ priceType, recipe }) => ({\n        warePriceType: priceType.enum,\n        nameLabel: recipe.nameLabel,\n        associatedRecipe: recipe.id,\n        formattedPrice: '?',\n      }),\n    ),\n    ingredients: recipeSource.sourceIngredients.map(\n      ({ quantity, stockItem: { id, label, allergens, wareUnit } }) => ({\n        stockItem: id,\n        label,\n        quantity,\n        unitLabel: wareUnit.code,\n        allergens: allergens.map(RM.prop('enum')),\n      }),\n    ),\n    prices: getPriceMap(priceType => {\n      const sourcePrice = recipeSource.sourcePrices.find(\n        RM.pathEq(['priceType', 'enum'], priceType),\n      )\n      if (!sourcePrice) {\n        return {\n          value: 0,\n          vatId: null,\n          currencyCode: '',\n        }\n      }\n      return {\n        value: sourcePrice.price.value,\n        vatId: sourcePrice.vat.id,\n        currencyCode: sourcePrice.price.currency.code,\n      }\n    }),\n  }\n}\n","import React from 'react'\nimport validator from 'validator'\n\nimport {\n  Column,\n  ColumnRendererRemove,\n  DataTable,\n  DataTableEmptyText,\n} from '../../../atoms/DataTable'\nimport { FormInputTextBox } from '../../../atoms/FormInputTextBox'\nimport { Sizer } from '../../../atoms/Sizer'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\nimport { TIngredient } from '../menutypes'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onRemove?(stockItemId: ID): void\n  isLoading?: boolean\n}\n\nexport const RecipeIngredientsTable: React.FC<IProps> = ({\n  ingredients,\n  onRemove,\n  isLoading = false,\n}) => (\n  <DataTable\n    isLoading={isLoading}\n    items={ingredients}\n    disableHeader={true}\n    noRowsRenderer={() => (\n      <DataTableEmptyText text={i18n.t`Recipe has no ingredients`} />\n    )}\n  >\n    <Column\n      dataKey=\"stockItem\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={ColumnRendererRemove}\n      columnData={{ onRemove }}\n    />\n    <Column dataKey=\"label\" width={300} label={i18n.t`Name`} />\n    <Column\n      dataKey=\"quantity\"\n      width={60}\n      label={i18n.t`Quantity`}\n      cellRenderer={({ rowIndex }) => (\n        <Sizer width={2.5}>\n          <FormInputTextBox\n            field={['ingredients', rowIndex, 'quantity']}\n            validate={validateQuantity}\n            inputFullWidth={true}\n          />\n        </Sizer>\n      )}\n    />\n    <Column dataKey=\"unitLabel\" width={100} label={i18n.t`Ware unit`} />\n  </DataTable>\n)\n\nfunction validateQuantity(value: string) {\n  const fieldName = i18n.t`Quantity`\n  if (validator.isEmpty(value + '')) {\n    return i18n.t`${fieldName} must be entered`\n  }\n  if (!validator.isFloat(value + '', { min: 0 })) {\n    return i18n.t`${fieldName} must be a positive number`\n  }\n  return null\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Field, IFieldApi } from 'react-form'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { GMenuStockItem } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { MenuSuggestionPanel } from '../atoms/MenuSuggestionPanel'\nimport { TIngredient } from '../menutypes'\nimport { RecipeIngredientsTable } from '../molecules/RecipeIngredientsTable'\n\ninterface IProps {\n  ingredients: TIngredient[]\n  onAdd(ingredient: TIngredient): void\n  onRemove(stockItemId: ID): void\n}\n\nconst unselectedStockOnly = RM.differenceWith(\n  ({ id }: GMenuStockItem.Fragment, { stockItem }: TIngredient) =>\n    id === stockItem,\n)\n\nexport const RecipeIngredientsControl = observer<IProps>(\n  ({ ingredients, onAdd, onRemove }) => {\n    const { settings } = useRoot()\n    const { data, loading } = useQMenuStockList({\n      branchId: settings.branchId,\n    })\n\n    return (\n      <>\n        <RecipeIngredientsTable ingredients={ingredients} onRemove={onRemove} />\n        <MenuSuggestionPanel<GMenuStockItem.Fragment>\n          isLoading={loading}\n          addButtonText={i18n.t`Add ingredient`}\n          options={\n            loading ? [] : unselectedStockOnly(data.stockItems, ingredients)\n          }\n          onAdd={(addedStockItem: GMenuStockItem.Fragment) => {\n            onAdd({\n              stockItem: addedStockItem.id,\n              label: addedStockItem.nameLabel,\n              quantity: 1,\n              unitLabel: addedStockItem.wareUnit.code,\n              allergens: addedStockItem.allergens.map(RM.prop('enum')),\n            })\n          }}\n        />\n      </>\n    )\n  },\n)\n\nexport const RecipeIngredientsView = () => {\n  return (\n    <Field field=\"ingredients\">\n      {(fieldApi: IFieldApi<TIngredient[]>) => (\n        <RecipeIngredientsControl\n          ingredients={fieldApi.value}\n          onAdd={ingredient => {\n            fieldApi.setValue([...fieldApi.value, ingredient])\n          }}\n          onRemove={stockItemId => {\n            fieldApi.setValue(\n              RM.reject(RM.propEq('stockItem', stockItemId), fieldApi.value),\n            )\n          }}\n        />\n      )}\n    </Field>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport { VerticalGap } from '../../../atoms/VerticalGap'\nimport { WareCategoryTypeEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { IsCategoryType } from '../atoms/IsCategoryType'\nimport { getRecipeTypeLabel } from '../labels'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { RecipeCategoryView } from '../organisms/RecipeCategoryView'\nimport { RecipeFormBasic } from '../organisms/RecipeFormBasic'\nimport { RecipeFormLoader } from '../organisms/RecipeFormLoader'\nimport { RecipeFormPricing } from '../organisms/RecipeFormPricing'\nimport { RecipeIngredientsView } from '../organisms/RecipeIngredientsView'\n\ninterface IProps {\n  recipeId: Maybe<ID>\n  recipeType: WareCategoryTypeEnum\n}\n\nconst FormContainer = styled('div')`\n  margin: 0 1.25rem 0 0;\n`\n\nexport const MenuRecipePage: React.FC<IProps> = ({ recipeId, recipeType }) => (\n  <RecipeFormLoader recipeId={recipeId} recipeType={recipeType}>\n    <FormContainer>\n      <FullPageLayout\n        width={16}\n        pageTitle={getRecipeTypeLabel(recipeType)}\n        hideLogoutWidget={true}\n        useBackButton={true}\n      >\n        <Card>\n          <RecipeFormBasic recipeType={recipeType} />\n        </Card>\n        <Card>\n          <RecipeFormPricing recipeType={recipeType} recipeId={recipeId} />\n        </Card>\n        <Card>\n          <Headline>\n            <Trans>Recipe ingredients</Trans>\n          </Headline>\n          <VerticalGap />\n          <RecipeIngredientsView />\n        </Card>\n        <IsCategoryType type={recipeType} isMain={true}>\n          <Card>\n            <Headline>\n              <Trans>Sidedish categories</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>These sidedish are presented with recipe</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.SideDish}\n              field=\"sideDishes\"\n              addButtonText={i18n.t`Attach sidedish category`}\n              noRowsText={i18n.t`Recipe has no sidedish category attached`}\n            />\n          </Card>\n          <Card>\n            <Headline>\n              <Trans>Category assignments</Trans>\n            </Headline>\n            <NoteText>\n              <Trans>Recipe is in these categories</Trans>\n            </NoteText>\n            <RecipeCategoryView\n              categoryType={WareCategoryTypeEnum.Main}\n              field=\"categories\"\n              addButtonText={i18n.t`Add to category`}\n              noRowsText={i18n.t`Recipe is not in any category`}\n            />\n          </Card>\n        </IsCategoryType>\n      </FullPageLayout>\n\n      <TopRightButtonContainer>\n        <CanMutate\n          mutationName={recipeId === null ? 'createRecipe' : 'updateRecipe'}\n        >\n          <SubmitButton isCreate={recipeId === null} />\n        </CanMutate>\n      </TopRightButtonContainer>\n    </FormContainer>\n  </RecipeFormLoader>\n)\n","import { Trans } from '@lingui/macro'\nimport numeral from 'numeral'\nimport React from 'react'\n\nimport { FMenuWareUnitFragment } from '../../../graph/generated'\nimport { priceFormat } from '../../../helpers/formats'\nimport { TouchButton } from '../../../molecules/TouchButton'\n\ninterface IProps {\n  cardName: string\n  wareUnit: Maybe<FMenuWareUnitFragment>\n  quantity: number\n  onConfirm(): void\n}\n\nexport const StockDepositConfirmButton: React.FC<IProps> = ({\n  wareUnit,\n  quantity,\n  onConfirm,\n}) => (\n  <TouchButton disabled={wareUnit === null} onClick={onConfirm}>\n    {wareUnit ? (\n      <Trans>{`Add ${numeral(quantity).format(priceFormat)} ${\n        wareUnit.code\n      }`}</Trans>\n    ) : (\n      <Trans>No stock card selected</Trans>\n    )}\n  </TouchButton>\n)\n","import React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  value: string\n  onFilter(value: string): void\n  onConfirm(): void\n}\n\nexport const StockDepositFilterInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ value, onFilter, onConfirm }, ref) => (\n  <IconLine label={i18n.t`Stock card`} labelWidth={7}>\n    <FormInputStyled\n      // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n      ref={ref}\n      autoFocus={true}\n      placeholder={`${i18n.t`Code`.toLocaleLowerCase()} / ${i18n.t`PLU`} / ${i18n.t`Title`.toLocaleLowerCase()}`}\n      value={value}\n      onChange={ev => {\n        onFilter(ev.target.value)\n      }}\n      onKeyPressCapture={ev => {\n        if (ev.key === 'Enter') {\n          ev.preventDefault()\n          onConfirm()\n        }\n      }}\n    />\n  </IconLine>\n))\n","import numeral from 'numeral'\nimport React from 'react'\n\nimport { FormInputStyled } from '../../../atoms/FormInputStyled'\n\ninterface IProps {\n  enabled: boolean\n  onChange(quantity: number): void\n  onConfirm(): void\n}\n\nexport const StockDepositQuantityInput = React.forwardRef<\n  HTMLInputElement,\n  IProps\n>(({ enabled, onChange, onConfirm }, ref) => (\n  <FormInputStyled\n    // @ts-ignore https://github.com/DefinitelyTyped/DefinitelyTyped/issues/28884\n    ref={ref}\n    disabled={!enabled}\n    onChange={ev => {\n      const value = numeral(ev.target.value).value()\n      onChange(value)\n    }}\n    onKeyPressCapture={ev => {\n      if (ev.key === 'Enter') {\n        ev.preventDefault()\n        onConfirm()\n      }\n    }}\n  />\n))\n","import React from 'react'\nimport { TableCellProps } from 'react-virtualized'\nimport styled from 'styled-components'\n\nimport { Column, DataTable } from '../../../atoms/DataTable'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { SizerButton } from '../../../atoms/SizerButton'\nimport { QMenuStockDepositStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { TouchButton } from '../../../molecules/TouchButton'\nimport { Colors, Spacing } from '../../../styling'\n\ninterface IProps {\n  searchValue: string\n  stockItems: QMenuStockDepositStockItems[]\n  onSelect(stockItem: QMenuStockDepositStockItems): void\n}\n\nexport const StockDepositResultTable: React.FC<IProps> = ({\n  stockItems,\n  searchValue,\n  onSelect,\n}) => (\n  <DataTableContainer>\n    <DataTable items={stockItems} heightStretch={false}>\n      <Column\n        dataKey=\"id\"\n        width={Spacing.ButtonColumnWidthPx}\n        minWidth={Spacing.ButtonColumnWidthPx}\n        cellRenderer={ColumnRendererSelect}\n        columnData={{ onSelect }}\n      />\n      <Column\n        dataKey=\"quantity\"\n        width={100}\n        label={i18n.t`Card stock`}\n        cellRenderer={stockWithUnit}\n      />\n      <Column\n        dataKey=\"code\"\n        width={100}\n        label={i18n.t`Card code`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column\n        dataKey=\"nameLabel\"\n        width={300}\n        label={i18n.t`Card name`}\n        cellRenderer={highlightMatch(searchValue)}\n      />\n      <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n    </DataTable>\n  </DataTableContainer>\n)\n\nfunction ColumnRendererSelect({\n  rowData,\n  columnData: { onSelect },\n}: TableCellProps) {\n  return (\n    <SizerButton>\n      <TouchButton iconName=\"done\" onClick={() => onSelect(rowData)} />\n    </SizerButton>\n  )\n}\n\nconst HighlightedValue = styled.span`\n  background-color: ${Colors.yellow};\n`\n\nfunction highlightMatch(searchValue: string) {\n  return ({ cellData }: TableCellProps) => {\n    const index = cellData\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase())\n    if (index === -1) {\n      return cellData\n    }\n    const begin = cellData.substring(0, index)\n    const match = cellData.substring(index, index + searchValue.length)\n    const end = cellData.substring(index + searchValue.length)\n    return (\n      <>\n        {begin}\n        <HighlightedValue>{match}</HighlightedValue>\n        {end}\n      </>\n    )\n  }\n}\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { Headline } from '../../../atoms/Headline'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockDepositConfirmButton } from '../molecules/StockDepositConfirmButton'\nimport { StockDepositFilterInput } from '../molecules/StockDepositFilterInput'\nimport { StockDepositQuantityInput } from '../molecules/StockDepositQuantityInput'\nimport { StockDepositResultTable } from '../molecules/StockDepositResultTable'\nimport { TStockItem } from './StockDepositLoader'\n\ninterface IProps {\n  stockItems: ReadonlyArray<TStockItem>\n  onDeposit(stockItem: TStockItem, quantity: number): void\n}\n\ninterface IState {\n  targetStockItem: Maybe<TStockItem>\n  filteredStockItems: TStockItem[]\n  searchValue: string\n  inputQuantity: number\n}\n\nexport class StockDepositControl extends React.Component<IProps, IState> {\n  state: IState = {\n    targetStockItem: null,\n    filteredStockItems: [],\n    searchValue: '',\n    inputQuantity: 0,\n  }\n  componentDidUpdate(prevProps: IProps) {\n    if (prevProps.stockItems !== this.props.stockItems) {\n      this.onFilter(this.state.searchValue)\n    }\n  }\n  filterInputRef = React.createRef<HTMLInputElement>()\n  quantityInputRef = React.createRef<HTMLInputElement>()\n  onFilter = (searchValue: string) => {\n    if (searchValue.trim() === '') {\n      this.setState({\n        filteredStockItems: [],\n        searchValue: '',\n        targetStockItem: null,\n      })\n      return\n    }\n    const partialMatch = isPartialMatch(searchValue)\n    const filteredStockItems = this.props.stockItems.filter(\n      RM.cond([\n        [RM.propEq('plu', searchValue), RM.T],\n        [RM.propSatisfies(partialMatch, 'code'), RM.T],\n        [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n      ]),\n    )\n    let targetStockItem: Maybe<TStockItem> = null\n    if (filteredStockItems.length === 1) {\n      targetStockItem = RM.head(filteredStockItems)!\n    }\n    this.setState({\n      filteredStockItems,\n      searchValue,\n      targetStockItem,\n    })\n  }\n  onConfirmFilter = () => {\n    if (this.state.filteredStockItems.length === 1) {\n      this.quantityInputRef.current!.focus()\n    }\n  }\n  onQuantity = (quantity: number) => {\n    this.setState({ inputQuantity: quantity })\n  }\n  onSelectStockItem = (stockItem: TStockItem) => {\n    this.setState(\n      {\n        targetStockItem: stockItem,\n        filteredStockItems: [stockItem],\n      },\n      () => {\n        this.quantityInputRef.current!.focus()\n      },\n    )\n  }\n  onConfirm = () => {\n    const { targetStockItem, inputQuantity } = this.state\n    if (targetStockItem && inputQuantity !== 0) {\n      this.props.onDeposit(targetStockItem, inputQuantity)\n    }\n    this.setState(\n      { targetStockItem: null, searchValue: '', inputQuantity: 0 },\n      () => {\n        this.quantityInputRef.current!.value = ''\n        this.filterInputRef.current!.focus()\n      },\n    )\n  }\n  render() {\n    const {\n      searchValue,\n      filteredStockItems,\n      targetStockItem,\n      inputQuantity,\n    } = this.state\n    const hasSearchValue = searchValue.trim() !== ''\n    const isNoneFind = filteredStockItems.length === 0\n    const isMultiFind = filteredStockItems.length > 1\n    return (\n      <>\n        <FormContainer>\n          <FormColumn>\n            <StockDepositFilterInput\n              onFilter={this.onFilter}\n              onConfirm={this.onConfirmFilter}\n              value={searchValue}\n              ref={this.filterInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositQuantityInput\n              enabled={targetStockItem !== null}\n              onChange={this.onQuantity}\n              onConfirm={this.onConfirm}\n              ref={this.quantityInputRef}\n            />\n          </FormColumn>\n          <FormColumn>\n            <StockDepositConfirmButton\n              cardName={targetStockItem ? targetStockItem.nameLabel : ''}\n              quantity={inputQuantity}\n              wareUnit={targetStockItem ? targetStockItem.wareUnit : null}\n              onConfirm={this.onConfirm}\n            />\n          </FormColumn>\n        </FormContainer>\n        <Headline>\n          {hasSearchValue &&\n            isMultiFind && (\n              <Trans>\n                Continue typing to find single stock card or select one from the\n                list\n              </Trans>\n            )}\n          {hasSearchValue &&\n            isNoneFind && (\n              <Trans>No stock card found from entered search value</Trans>\n            )}\n          {hasSearchValue &&\n            targetStockItem && (\n              <Trans>\n                Stock card <b>{targetStockItem.nameLabel}</b> is selected\n              </Trans>\n            )}\n        </Headline>\n        {hasSearchValue && (\n          <StockDepositResultTable\n            searchValue={searchValue}\n            stockItems={filteredStockItems}\n            onSelect={this.onSelectStockItem}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { observer } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport {\n  QMenuStockDepositStockItems,\n  useMMenuStockQuantity,\n  useQMenuStockDeposit,\n} from '../../../graph/generated'\n\nexport type TStockItem = QMenuStockDepositStockItems\n\nexport type TDepositFn = (stockItem: TStockItem, quantity: number) => void\n\ninterface IProps {\n  children(\n    stockItems: ReadonlyArray<TStockItem>,\n    onDeposit: TDepositFn,\n  ): ReactNode\n}\n\nexport const StockDepositLoader = observer<IProps>(({ children }) => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockDeposit({\n    branchId: settings.branchId,\n  })\n  const [changeQuantity] = useMMenuStockQuantity()\n  const onDeposit: TDepositFn = (stockItem, quantity) => {\n    changeQuantity({\n      stockItem: stockItem.id,\n      quantityChange: quantity,\n    })\n  }\n  return children(loading ? [] : data.stockItems, onDeposit)\n})\n","import React from 'react'\n\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { StockDepositControl } from '../organisms/StockDepositControl'\nimport { StockDepositLoader } from '../organisms/StockDepositLoader'\n\ninterface IProps {}\n\nexport const MenuStockDepositPage: React.FC<IProps> = props => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock deposit`}\n    useBackButton={true}\n  >\n    <Card>\n      <SettingsCompanyBranchPicker />\n      <StockDepositLoader>\n        {(stockItems, onDeposit) => (\n          <StockDepositControl stockItems={stockItems} onDeposit={onDeposit} />\n        )}\n      </StockDepositLoader>\n    </Card>\n  </FullPageLayout>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { TableCellProps } from 'react-virtualized'\n\nimport {\n  checkColumnAccess,\n  Column,\n  ColumnRendererEdit,\n  DataTable,\n} from '../../../atoms/DataTable'\nimport { Loading } from '../../../atoms/Loading'\nimport { QMenuStockListStockItems } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\nimport { Spacing } from '../../../styling'\n\ntype TStockItem = QMenuStockListStockItems\n\ninterface IProps {\n  stockItems: TStockItem[]\n  isLoading: boolean\n}\n\nexport const StockListTable: React.FC<IProps> = ({ stockItems, isLoading }) => (\n  <DataTable\n    items={stockItems}\n    heightStretch={true}\n    noRowsRenderer={() =>\n      isLoading ? (\n        <Loading />\n      ) : (\n        <h3>\n          <Trans>Selected branch has no stock cards</Trans>\n        </h3>\n      )\n    }\n  >\n    <Column\n      dataKey=\"id\"\n      width={Spacing.ButtonColumnWidthPx}\n      minWidth={Spacing.ButtonColumnWidthPx}\n      cellRenderer={checkColumnAccess(\n        { canQuery: 'stockItem' },\n        ColumnRendererEdit,\n      )}\n    />\n    <Column dataKey=\"code\" width={100} label={i18n.t`Card code`} />\n    <Column\n      dataKey=\"nameLabel\"\n      width={300}\n      minWidth={30}\n      flexGrow={2}\n      label={i18n.t`Card name`}\n    />\n    <Column\n      dataKey=\"quantity\"\n      width={100}\n      label={i18n.t`Card stock`}\n      cellRenderer={stockWithUnit}\n    />\n    <Column\n      dataKey=\"allowNegative\"\n      width={300}\n      label={i18n.t`Negative stock`}\n      cellRenderer={stockAllowNegative}\n    />\n    <Column dataKey=\"note\" width={300} label={i18n.t`Card note`} />\n  </DataTable>\n)\n\nfunction stockWithUnit({ cellData, rowData }: TableCellProps) {\n  return `${cellData} ${rowData.wareUnit.code}`\n}\n\nfunction stockAllowNegative({ cellData }: TableCellProps) {\n  return cellData === true ? <Trans>Permitted</Trans> : <Trans>Forbidden</Trans>\n}\n","import { observer, useComputed } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../atoms/RootProvider'\nimport { useQMenuStockList } from '../../../graph/generated'\nimport { isPartialMatch } from '../../../helpers/filter'\nimport { RM } from '../../../helpers/ramda'\nimport { StockListTable } from './StockListTable'\n\nexport const StockListLoader = observer(() => {\n  const { settings } = useRoot()\n  const { data, loading } = useQMenuStockList({\n    branchId: settings.branchId,\n  })\n\n  const filteredItems = useComputed(\n    () => {\n      if (!data || !data.stockItems || data.stockItems.length === 0) {\n        return []\n      }\n      const searchValue = settings.menu.stock.filterInput\n      const partialMatch = isPartialMatch(searchValue)\n      return data.stockItems.filter(\n        RM.cond([\n          [RM.propEq('plu', searchValue), RM.T],\n          [RM.propSatisfies(partialMatch, 'code'), RM.T],\n          [RM.propSatisfies(partialMatch, 'nameLabel'), RM.T],\n        ]),\n      )\n    },\n    [data && data.stockItems],\n  )\n\n  return <StockListTable stockItems={filteredItems} isLoading={loading} />\n})\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { Card } from '../../../atoms/Card'\nimport { DataTableContainer } from '../../../atoms/DataTableContainer'\nimport { FlexColumn } from '../../../atoms/FlexColumn'\nimport { FlexRowSingle } from '../../../atoms/FlexRowSingle'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { PageLayoutFullHeightItem } from '../../../molecules/PageLayoutFullHeightItem'\nimport { SettingsCompanyBranchPicker } from '../../settings/organisms/SettingsCompanyBranchPicker'\nimport { CreateButton } from '../molecules/CreateButton'\nimport { MenuFilterInput } from '../molecules/MenuFilterInput'\nimport { StockListLoader } from '../organisms/StockListLoader'\n\nexport const MenuStockListPage: React.FC = props => (\n  <>\n    <FullPageLayout pageTitle={i18n.t`Stock overview`} useBackButton={true} />\n\n    <PageLayoutFullHeightItem>\n      <Card stretchToParent={true}>\n        <FlexRowSingle justify=\"start\">\n          <FlexColumn>\n            <SettingsCompanyBranchPicker width={20} />\n          </FlexColumn>\n          <FlexColumn>\n            <MenuFilterInput modelType=\"stock\" />\n          </FlexColumn>\n        </FlexRowSingle>\n        <CanMutate mutationName=\"createStockItem\">\n          <CreateButton routeTo=\"create\" />\n        </CanMutate>\n        <DataTableContainer>\n          <StockListLoader />\n        </DataTableContainer>\n      </Card>\n    </PageLayoutFullHeightItem>\n  </>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport {\n  FMenuAllergenFragmentDoc,\n  FMenuWareUnitFragmentDoc,\n} from '../../../graph/generated'\nimport { GMenuStockForm } from '../../../graph/types'\n\nexport const MenuStockFormQuery = gql`\n  query GMenuStockForm($stockId: ID!) {\n    stockItem(id: $stockId) {\n      id\n      code\n      plu\n      note\n      nameLabel: label\n      allowNegative\n      wareUnit {\n        ...FMenuWareUnit\n      }\n      allergens {\n        ...FMenuAllergen\n      }\n      companyBranch {\n        id\n        allowNegative: stockItemsCanBeNegative\n      }\n    }\n  }\n  ${FMenuAllergenFragmentDoc}\n  ${FMenuWareUnitFragmentDoc}\n`\n\nexport const MenuStockDefaultsQuery = gql`\n  query GMenuStockDefaults($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      allowNegative: stockItemsCanBeNegative\n    }\n  }\n`\n\nexport const QueryMenuStock = buildQuery<\n  GMenuStockForm.Query,\n  GMenuStockForm.Variables\n>(MenuStockFormQuery)\n","import React from 'react'\n\nimport {\n  AllergenEnum,\n  FieldStateEnum,\n  WareUnitEnum,\n} from '../../../graph/generated'\nimport { GMenuStockDefaults, GMenuStockForm } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuBaseFormLoader } from '../atoms/MenuBaseFormLoader'\nimport { useMenu } from '../hooks/useMenu'\nimport { MenuStockDefaultsQuery, MenuStockFormQuery } from './StockForm.graphql'\n\ninterface IProps {\n  stockId: Maybe<ID>\n  children: ReactNode\n}\n\nexport type TStockFormValues = {\n  id: ID\n  code: string\n  plu: Maybe<string>\n  note: string\n  nameLabel: string\n  internalNote: string\n  wareUnit: Maybe<WareUnitEnum>\n  allergens: AllergenEnum[]\n  allowNegative: FieldStateEnum\n  allowNegativeDefault: FieldStateEnum\n}\n\nexport const StockFormLoader: React.FC<IProps> = ({ stockId, children }) => {\n  const menu = useMenu()\n  return (\n    <MenuBaseFormLoader<TStockFormValues>\n      isCreate={stockId === null}\n      onCreate={values => menu.stock.createItem(values)}\n      onUpdate={values => menu.stock.updateItem(values)}\n      getDefaultValues={getDefaults}\n      loadDefaults={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockDefaults.Query,\n          GMenuStockDefaults.Variables\n        >({\n          query: MenuStockDefaultsQuery,\n          variables: { branchId: menu.stock.branchId },\n          fetchPolicy: 'no-cache',\n        })\n        return {\n          allowNegativeDefault: getAllowNegativeDefault(\n            data.companyBranch.allowNegative,\n          ),\n        }\n      }}\n      loadValues={async () => {\n        const { data } = await menu.client.query<\n          GMenuStockForm.Query,\n          GMenuStockForm.Variables\n        >({\n          query: MenuStockFormQuery,\n          variables: { stockId: stockId! },\n          fetchPolicy: 'no-cache',\n        })\n        return getFormValues(data.stockItem)\n      }}\n    >\n      {children}\n    </MenuBaseFormLoader>\n  )\n}\n\nfunction getDefaults(): TStockFormValues {\n  return {\n    id: 'NEW',\n    internalNote: '',\n    nameLabel: '',\n    code: '',\n    plu: '',\n    note: '',\n    wareUnit: null,\n    allergens: [],\n    allowNegative: FieldStateEnum.Default,\n    allowNegativeDefault: FieldStateEnum.Default,\n  }\n}\n\nfunction getFormValues(stockItem: GMenuStockForm.StockItem): TStockFormValues {\n  return {\n    id: stockItem.id,\n    internalNote: 'TBD',\n    nameLabel: stockItem.nameLabel,\n    code: stockItem.code,\n    note: stockItem.note,\n    plu: stockItem.plu || '',\n    wareUnit: stockItem.wareUnit.enum,\n    allergens: stockItem.allergens.map(RM.prop('enum')),\n    allowNegative: stockItem.allowNegative,\n    allowNegativeDefault: getAllowNegativeDefault(\n      stockItem.companyBranch.allowNegative,\n    ),\n  }\n}\n\nfunction getAllowNegativeDefault(isEnabled: boolean) {\n  return isEnabled ? FieldStateEnum.Default : FieldStateEnum.Disabled\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\n\nimport { IconLine } from '../../../atoms/IconLine'\nimport { AllergenEnum } from '../../../graph/generated'\nimport { RM } from '../../../helpers/ramda'\nimport { MenuAllergenIndicator } from '../atoms/AllergenIndicator'\n\ninterface IProps {\n  field?: FieldType\n  icon?: string\n}\n\nexport const FormInputAllergens: React.FC<IProps> = ({\n  field = 'allergens',\n  icon = 'error_outline',\n}) => (\n  <Field field={field}>\n    {fieldApi => {\n      const onToggle = (allergen: AllergenEnum) => {\n        const current: AllergenEnum[] = fieldApi.value\n        if (current.includes(allergen)) {\n          fieldApi.setValue(RM.without([allergen], current))\n        } else {\n          fieldApi.setValue([...current, allergen])\n        }\n      }\n      return (\n        <IconLine icon={icon} labelWidth={7}>\n          <MenuAllergenIndicator\n            selected={fieldApi.value}\n            onToggle={onToggle}\n          />\n        </IconLine>\n      )\n    }}\n  </Field>\n)\n","import { i18nMark } from '@lingui/core'\nimport React, { useMemo } from 'react'\nimport { FormApi } from 'react-form'\n\nimport { FormInputFlatSelect } from '../../../atoms/FormInputFlatSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { FieldStateEnum } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {}\n\nconst items = [\n  {\n    type: FieldStateEnum.Enabled,\n    label: i18nMark('Permit'),\n  },\n  {\n    type: FieldStateEnum.Disabled,\n    label: i18nMark('Forbid'),\n  },\n]\n\nexport const FormInputAllowNegative: React.FC<IProps> = ({}) => {\n  const labelForDefault = useMemo(\n    () => ` (${i18n.t`Is default setting`.toLocaleLowerCase()})`,\n    [],\n  )\n  return (\n    <FormApi>\n      {({ values: { allowNegativeDefault } }) => (\n        <IconLine label={i18n.t`Negative stock`} labelWidth={7}>\n          <FormInputFlatSelect\n            field=\"allowNegative\"\n            items={items}\n            formatItem={item => {\n              if (item.type === allowNegativeDefault) {\n                return (\n                  <span>\n                    {i18n._(item.label)}\n                    <i>{labelForDefault}</i>\n                  </span>\n                )\n              }\n              return i18n._(item.label)\n            }}\n            getItemId={item => item.type}\n          />\n        </IconLine>\n      )}\n    </FormApi>\n  )\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react'\n\nimport {\n  FormInputTextBox,\n  TFormInputTextBoxProps,\n} from '../../../atoms/FormInputTextBox'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { Sizer } from '../../../atoms/Sizer'\n\ninterface IProps extends Partial<TFormInputTextBoxProps> {\n  icon?: string\n}\n\nexport const FormInputPlu: React.FC<IProps> = ({\n  field = 'plu',\n  icon = 'fingerprint',\n  ...props\n}) => (\n  <IconLine icon={icon} labelWidth={7}>\n    <Sizer width={9}>\n      <FormInputTextBox field={field} inputFullWidth={true} {...props} />\n    </Sizer>\n  </IconLine>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../../graph/buildQuery'\nimport { GWareUnits } from '../../../graph/types'\n\nexport const WareUnitsQuery = gql`\n  query GWareUnits {\n    wareUnits {\n      id\n      code\n      enum\n    }\n  }\n`\n\nexport const QueryWareUnits = buildQuery<\n  GWareUnits.Query,\n  GWareUnits.Variables\n>(WareUnitsQuery)\n","import React from 'react'\n\nimport {\n  FormInputSelect,\n  IFormInputSelectProps,\n} from '../../../atoms/FormInputSelect'\nimport { IconLine } from '../../../atoms/IconLine'\nimport { GWareUnits } from '../../../graph/types'\nimport { RM } from '../../../helpers/ramda'\nimport { i18n } from '../../../i18n'\nimport { QueryWareUnits } from './FormInputWareUnit.graphql'\n\ninterface IProps extends Partial<IFormInputSelectProps<GWareUnits.WareUnits>> {\n  icon?: string\n}\n\nexport const FormInputWareUnit: React.FC<IProps> = ({\n  field = 'wareUnit',\n  icon = 'select_all',\n  ...selectProps\n}) => (\n  <QueryWareUnits\n    renderLoading={false}\n    render={({ wareUnits }, { loading }) => (\n      <IconLine icon={icon} labelWidth={7}>\n        <FormInputSelect<GWareUnits.WareUnits>\n          field={field}\n          options={(wareUnits as GWareUnits.WareUnits[]) || []}\n          isLoading={loading}\n          isRequired={true}\n          validatioName={i18n.t`Ware unit`}\n          getOptionLabel={RM.prop('code')}\n          getOptionValue={RM.prop('enum')}\n          width={12}\n          {...selectProps}\n        />\n      </IconLine>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CardDock } from '../../../atoms/CardDock'\nimport { FormColumn, FormContainer } from '../../../atoms/FormContainer'\nimport { i18n } from '../../../i18n'\nimport { WithSettings } from '../../settings/atoms/WithSettings'\nimport { FormDeleteButton } from '../molecules/FormDeleteButton'\nimport { FormInputAllergens } from '../molecules/FormInputAllergens'\nimport { FormInputAllowNegative } from '../molecules/FormInputAllowNegative'\nimport { FormInputCode } from '../molecules/FormInputCode'\nimport { FormInputInternalNote } from '../molecules/FormInputInternalNote'\nimport { FormInputName } from '../molecules/FormInputName'\nimport { FormInputPlu } from '../molecules/FormInputPlu'\nimport { FormInputWareUnit } from '../molecules/FormInputWareUnit'\n\nexport const StockFormMain: React.FC = props => (\n  <FormContainer>\n    <FormColumn>\n      <FormInputName placeholder={i18n.t`Card name`} />\n      <FormInputCode placeholder={i18n.t`Card code`} />\n      <FormInputWareUnit placeholder={i18n.t`Choose unit`} />\n      <FormInputPlu placeholder={i18n.t`PLU`} />\n      <FormInputInternalNote\n        placeholder={i18n.t`Card note`}\n        field=\"note\"\n        label={i18n.t`Card note`}\n      />\n      <FormInputAllergens />\n      <FormInputAllowNegative />\n    </FormColumn>\n    <CardDock position=\"BottomRight\">\n      <CanMutate mutationName=\"destroyStockItem\">\n        <WithSettings\n          render={({ menu }) => (\n            <FormDeleteButton\n              confirmText={i18n.t`Remove this card?`}\n              onDelete={id => menu.stock.deleteItem(id)}\n            />\n          )}\n        />\n      </CanMutate>\n    </CardDock>\n  </FormContainer>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Column, ColumnRendererEdit, DataTable } from '../../../atoms/DataTable'\nimport { Headline } from '../../../atoms/Headline'\nimport { NoteText } from '../../../atoms/NoteText'\nimport Pacman from '../../../atoms/Pacman'\nimport { useQStockRecipes } from '../../../graph/generated'\nimport { i18n } from '../../../i18n'\n\ninterface IProps {\n  stockId: ID\n}\n\nexport const StockRecipesView: React.FC<IProps> = ({ stockId }) => {\n  const { data, loading } = useQStockRecipes({\n    stockId,\n  })\n\n  if (loading) {\n    return <Pacman />\n  }\n\n  const {\n    stockItem: { ingredients },\n  } = data\n  if (ingredients.length === 0) {\n    return (\n      <Headline>\n        <Trans>No recipes are using stock card</Trans>\n      </Headline>\n    )\n  }\n  return (\n    <>\n      <Headline>\n        <Trans>Recipes using this card</Trans>\n      </Headline>\n\n      <DataTable\n        items={[...ingredients]}\n        disableHeader={true}\n        fullHeight={true}\n      >\n        <Column\n          dataKey=\"\"\n          cellDataGetter={({ rowData }) => ({\n            pathname: `/settings/menu/recipe/${rowData.recipe.id}`,\n            state: { recipeType: rowData.recipe.recipeType.enum },\n          })}\n          cellRenderer={ColumnRendererEdit}\n          width={100}\n        />\n        <Column\n          dataKey=\"recipe\"\n          width={300}\n          label={i18n.t`Name`}\n          cellRenderer={({ rowData }) => (\n            <>\n              {rowData.recipe.nameLabel}\n              <NoteText>{rowData.recipe.descriptionLabel}</NoteText>\n            </>\n          )}\n        />\n      </DataTable>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { CanMutate } from '../../../atoms/CanMutate'\nimport { CanQuery } from '../../../atoms/CanQuery'\nimport { Card } from '../../../atoms/Card'\nimport { i18n } from '../../../i18n'\nimport { FullPageLayout } from '../../../molecules/FullPageLayout'\nimport { TopRightButtonContainer } from '../../../molecules/TopRightButtonContainer'\nimport { SubmitButton } from '../molecules/SubmitButton'\nimport { StockFormLoader } from '../organisms/StockFormLoader'\nimport { StockFormMain } from '../organisms/StockFormMain'\nimport { StockRecipesView } from '../organisms/StockRecipesVIew'\n\ninterface IProps {\n  stockId: Maybe<ID>\n}\n\nexport const MenuStockPage: React.FC<IProps> = ({ stockId }) => (\n  <FullPageLayout\n    width={16}\n    pageTitle={i18n.t`Stock card`}\n    hideLogoutWidget={true}\n    useBackButton={true}\n  >\n    <StockFormLoader stockId={stockId}>\n      <>\n        <TopRightButtonContainer>\n          <CanMutate\n            mutationName={\n              stockId === null ? 'createStockItem' : 'updateStockItem'\n            }\n          >\n            <SubmitButton isCreate={stockId === null} />\n          </CanMutate>\n        </TopRightButtonContainer>\n        <Card>\n          <StockFormMain />\n          {stockId && (\n            <CanQuery queryName=\"recipes\">\n              <StockRecipesView stockId={stockId} />\n            </CanQuery>\n          )}\n        </Card>\n      </>\n    </StockFormLoader>\n  </FullPageLayout>\n)\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport { NotFoundPage } from '../../../pages/NotFoundPage'\nimport { SecureRoute } from '../../../routes/SecureRoute'\nimport { MenuCategoryListPage } from '../pages/MenuCategoryListPage'\nimport { MenuCategoryPage } from '../pages/MenuCategoryPage'\nimport { MenuRecipeListPage } from '../pages/MenuRecipeListPage'\nimport { MenuRecipePage } from '../pages/MenuRecipePage'\nimport { MenuStockDepositPage } from '../pages/MenuStockDepositPage'\nimport { MenuStockListPage } from '../pages/MenuStockListPage'\nimport { MenuStockPage } from '../pages/MenuStockPage'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MenuRoutes: React.FC<IProps> = ({ match }) => (\n  <Switch>\n    <SecureRoute\n      exact={true}\n      path={match.path}\n      render={() => <Redirect to={`${match.path}/category`} />}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/category`}\n      component={MenuCategoryListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/category/:categoryId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuCategoryPage\n          categoryId={params.categoryId === 'create' ? null : params.categoryId}\n          categoryType={state.categoryType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/recipe`}\n      component={MenuRecipeListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/recipe/:recipeId`}\n      render={({ match: { params }, location: { state } }) => (\n        <MenuRecipePage\n          recipeId={params.recipeId === 'create' ? null : params.recipeId}\n          recipeType={state.recipeType}\n        />\n      )}\n    />\n    <SecureRoute\n      exact={true}\n      path={`${match.path}/stock`}\n      component={MenuStockListPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/deposit`}\n      component={MenuStockDepositPage}\n    />\n    <SecureRoute\n      path={`${match.path}/stock/:stockId`}\n      render={({ match: { params } }) => (\n        <MenuStockPage\n          stockId={params.stockId === 'create' ? null : params.stockId}\n        />\n      )}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n)\n\nexport default MenuRoutes\n"],"sourceRoot":""}